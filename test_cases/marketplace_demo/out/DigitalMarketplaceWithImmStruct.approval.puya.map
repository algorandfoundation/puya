{
  "version": 3,
  "sources": [
    "../marketplace_with_immutable_struct.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAsCY;;;;;;AAAJ;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AAuMK;;AAAA;AAAA;AAAA;;AAAA;AAvML;;;AAAA;AAAA;;;AAAA;AAuMK;;;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAnKL;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAmKK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAhJL;;;AAAA;AAAA;;;AAAA;AAgJK;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AAjHL;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAiHK;;;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AApGL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAoGK;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAnFL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAmFK;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAwDK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA7CL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA6CK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AAzCL;;AAAA;;;;;;;;;AA6CA;;;AAEmB;;AAAA;;AAAA;;AAAA;;AAAJ;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAkB;;AAAlB;AAAP;AAEA;AACqC;;AAAiD;;;;;;;;;AADtF;;;AAAA;;;AAAA;;AAIR;;;AAQe;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AA3DA;;AA2DA;AAAP;AAEuB;;AAAkB;;AAAA;;AAAnC;AAAA;AAAA;;AAAA;AAAA;AACY;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;AAAA;;AAAe;;AAAf;AAAP;AACO;;AAAA;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAP;AAAA;AAKW;;AAHU;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIb;AAJa;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;;AAQR;;;AAE+B;;AAAkB;;AAAA;;AAAnC;AAAA;AAAA;;AAAA;AAAA;AAEC;;AAAA;;AAAe;;AAAf;AAAP;AACO;;AAAA;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAP;AAAA;AAEW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEH;AAAA;;;AACY;;AAAA;;;AACT;;AAAA;;;AACM;;AAAA;;;AACH;;AAAA;AAAA;AAAA;;AAAA;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;;AAQR;;;AAE+B;;AAAjB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH;AAAA;;;AACY;;AAAA;;;AACT;;AAAA;;;AACG;;AAAA;;;AAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;;AAQR;;;AASc;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAEwC;AAAA;;AAAA;AAAsB;;AAAA;;AAAA;AA9FxB;;AAAA;;AAAA;AACE;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAG9D;AAAP;AA2FO;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAGQ;;AAAA;;;AACY;;AAAA;;;AACT;;AAAA;;;AAEG;;AAAA;AAAA;AAAA;;AAAA;AALO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;AAQA;AACqC;;;;;;;;;;;;AADrC;;;AAAA;;;AAAA;;AAIR;;;AAE+B;;AAAjB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACP;;;AAAA;AAAkB;;AAAlB;AAAX;;;AAEgB;;AAAA;AAAA;;AAAA;AAAa;AAAA;;AAAA;AAAyB;;AAAA;;AAAA;AAvHE;AAAA;;AAAA;AACE;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAG9D;AAAP;AAoHI;;;;;;;AAAA;;;AAAA;;;AAAA;AAEJ;;AAAA;;AAEA;AAAsB;;AAtJf;;;;;;AAsJP;;;AAAA;;;AAAA;AAEA;AACqC;;AAAyB;;AAAA;AAAA;;;;;;;;;AAD9D;;;AAAA;;;AAAA;;AAIR;;;AAUc;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACP;;;AAAA;AAAkB;;AAAlB;AAAX;;;AACmC;;AAAA;AAAA;;AAAA;AAAhB;;AAAA;;AAAA;AAAP;AAGI;AAAA;;AAAA;AAAsC;;AAAA;;AAAA;AApJE;;AAAA;AACE;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAG9D;AAAP;AAkJI;;;;;;;AAAA;;;AAAA;;;AAAA;AAE4D;;AAAA;;AAAA;AAzJhB;;AAAA;;AAAA;AACE;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAG9D;AAAP;AAsJO;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAA;AAAP;AAGc;;AAAA;AAAA;;;AACG;AAAA;;;AACN;;AAHU;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAArB;;AAAA;AAAA;;AAQR;;;AAE+B;;AAAjB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACH;AAAA;;;AAAA;AAAA;;AAAkB;;AAAlB;AAAP;AAEoC;AAAA;AAAA;AAAA;AAAA;;AAAoB;;AAAA;AAAA;AAAA;;AAApB;AAArB;;;;;AAGG;;AAAA;AAAA;;AAAA;AAAyB;;AAAA;;AAAA;AAjLK;;AAAA;;AAAA;AAAA;;AAAA;AACE;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAG9D;AAAP;AA+KA;AAAsB;;;;;;AAAtB;;;AAAA;;;AAAA;AAEA;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAOiB;;AAAA;;;AACH;;AAAA;;AAAA;AACN;;AAAA;;AAAA;AALa;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;;AAAA;AAAA;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 4 10 50500"
    },
    "10": {
      "op": "bytecblock 0x6c697374696e6773"
    },
    "21": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "23": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "26": {
      "op": "pushbytes \"init\"",
      "defined_out": [
        "\"init\""
      ],
      "stack_out": [
        "\"init\""
      ]
    },
    "32": {
      "op": "log",
      "stack_out": []
    },
    "33": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "35": {
      "op": "bz main_bare_routing@14",
      "stack_out": []
    },
    "38": {
      "op": "pushbytess 0xd98ef6a9 0x6a4e7fca 0x12f08c98 0x9b4b8234 0x4d8b23d8 0x52ac5df7 0xe3aeb25c 0x3234b711 0xcc826346 // method \"getListingsMbr()uint64\", method \"allowAsset(pay,uint64)void\", method \"firstDeposit(pay,axfer,uint64,uint64)void\", method \"deposit(axfer,uint64)void\", method \"setPrice(uint64,uint64,uint64)void\", method \"buy(address,uint64,uint64,pay,uint64)void\", method \"withdraw(uint64,uint64)void\", method \"bid(address,uint64,uint64,pay,uint64,uint64)void\", method \"acceptBid(uint64,uint64)void\"",
      "defined_out": [
        "Method(acceptBid(uint64,uint64)void)",
        "Method(allowAsset(pay,uint64)void)",
        "Method(bid(address,uint64,uint64,pay,uint64,uint64)void)",
        "Method(buy(address,uint64,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(uint64,uint64,uint64)void)",
        "Method(withdraw(uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(uint64,uint64,uint64)void)",
        "Method(buy(address,uint64,uint64,pay,uint64)void)",
        "Method(withdraw(uint64,uint64)void)",
        "Method(bid(address,uint64,uint64,pay,uint64,uint64)void)",
        "Method(acceptBid(uint64,uint64)void)"
      ]
    },
    "85": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(acceptBid(uint64,uint64)void)",
        "Method(allowAsset(pay,uint64)void)",
        "Method(bid(address,uint64,uint64,pay,uint64,uint64)void)",
        "Method(buy(address,uint64,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(uint64,uint64,uint64)void)",
        "Method(withdraw(uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(uint64,uint64,uint64)void)",
        "Method(buy(address,uint64,uint64,pay,uint64)void)",
        "Method(withdraw(uint64,uint64)void)",
        "Method(bid(address,uint64,uint64,pay,uint64,uint64)void)",
        "Method(acceptBid(uint64,uint64)void)",
        "tmp%2#0"
      ]
    },
    "88": {
      "op": "match main_getListingsMbr_route@5 main_allowAsset_route@6 main_firstDeposit_route@7 main_deposit_route@8 main_setPrice_route@9 main_buy_route@10 main_withdraw_route@11 main_bid_route@12 main_acceptBid_route@13",
      "stack_out": []
    },
    "108": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "109": {
      "op": "return",
      "stack_out": []
    },
    "110": {
      "block": "main_acceptBid_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "112": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "113": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "114": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "116": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "117": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%16#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%16#0"
      ]
    },
    "120": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "121": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%17#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "reinterpret_Encoded(uint64)%17#0"
      ]
    },
    "124": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "125": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.accept_bid",
      "op": "callsub accept_bid",
      "stack_out": []
    },
    "128": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "129": {
      "op": "return",
      "stack_out": []
    },
    "130": {
      "block": "main_bid_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "132": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "133": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "134": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "136": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "137": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0"
      ]
    },
    "140": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%12#0",
        "reinterpret_Encoded(uint8[32])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "reinterpret_Encoded(uint64)%12#0"
      ]
    },
    "143": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0"
      ]
    },
    "144": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%13#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "reinterpret_Encoded(uint64)%13#0"
      ]
    },
    "147": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ]
    },
    "148": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%59#0"
      ]
    },
    "150": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%59#0",
        "1"
      ]
    },
    "151": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0"
      ]
    },
    "152": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "153": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "155": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "156": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "157": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0"
      ]
    },
    "158": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%14#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%14#0"
      ]
    },
    "161": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "tmp%60#0"
      ]
    },
    "162": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%15#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "tmp%60#0",
        "reinterpret_Encoded(uint64)%15#0"
      ]
    },
    "165": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%60#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%1#0",
        "tmp%57#0",
        "tmp%58#0",
        "gtxn_idx%5#0",
        "tmp%60#0",
        "tmp%61#0"
      ]
    },
    "166": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.bid",
      "op": "callsub bid",
      "stack_out": []
    },
    "169": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "170": {
      "op": "return",
      "stack_out": []
    },
    "171": {
      "block": "main_withdraw_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "173": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "174": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "175": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "177": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "178": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ]
    },
    "181": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "182": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%11#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "reinterpret_Encoded(uint64)%11#0"
      ]
    },
    "185": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "tmp%51#0"
      ]
    },
    "186": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "189": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "190": {
      "op": "return",
      "stack_out": []
    },
    "191": {
      "block": "main_buy_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "193": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "194": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "195": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "197": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "198": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "201": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%7#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "204": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0"
      ]
    },
    "205": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%8#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "reinterpret_Encoded(uint64)%8#0"
      ]
    },
    "208": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "209": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "tmp%44#0"
      ]
    },
    "211": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "tmp%44#0",
        "1"
      ]
    },
    "212": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0"
      ]
    },
    "213": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "214": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "216": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "217": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "218": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0"
      ]
    },
    "219": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint64)%9#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint64)%9#0"
      ]
    },
    "222": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%42#0",
        "tmp%43#0",
        "gtxn_idx%4#0",
        "tmp%45#0"
      ]
    },
    "223": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.buy",
      "op": "callsub buy",
      "stack_out": []
    },
    "226": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "227": {
      "op": "return",
      "stack_out": []
    },
    "228": {
      "block": "main_setPrice_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "230": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "231": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "232": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "234": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "235": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "238": {
      "op": "btoi",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "239": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "242": {
      "op": "btoi",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "243": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%35#0",
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "246": {
      "op": "btoi",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "247": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.set_price",
      "op": "callsub set_price",
      "stack_out": []
    },
    "250": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "251": {
      "op": "return",
      "stack_out": []
    },
    "252": {
      "block": "main_deposit_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "254": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "255": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "256": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "258": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "259": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "261": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "1"
      ]
    },
    "262": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "263": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "264": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "266": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "267": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "268": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "269": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "272": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%29#0"
      ]
    },
    "273": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.deposit",
      "op": "callsub deposit",
      "stack_out": []
    },
    "276": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "277": {
      "op": "return",
      "stack_out": []
    },
    "278": {
      "block": "main_firstDeposit_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "280": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "281": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "282": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "284": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "285": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "287": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "2"
      ]
    },
    "289": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "290": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "291": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "293": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "294": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "295": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "296": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%21#0"
      ]
    },
    "298": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%21#0",
        "1"
      ]
    },
    "299": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "300": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "301": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "303": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "304": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "305": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "306": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "309": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%22#0"
      ]
    },
    "310": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%22#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "313": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "314": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.first_deposit",
      "op": "callsub first_deposit",
      "stack_out": []
    },
    "317": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "318": {
      "op": "return",
      "stack_out": []
    },
    "319": {
      "block": "main_allowAsset_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "321": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "322": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "323": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "325": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "326": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "328": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "329": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "330": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "331": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "333": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "334": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "335": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "336": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "339": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ]
    },
    "340": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.allow_asset",
      "op": "callsub allow_asset",
      "stack_out": []
    },
    "343": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "344": {
      "op": "return",
      "stack_out": []
    },
    "345": {
      "block": "main_getListingsMbr_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "347": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "348": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "349": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "351": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "352": {
      "op": "pushbytes 0x151f7c75000000000000c544",
      "defined_out": [
        "0x151f7c75000000000000c544"
      ],
      "stack_out": [
        "0x151f7c75000000000000c544"
      ]
    },
    "366": {
      "op": "log",
      "stack_out": []
    },
    "367": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "368": {
      "op": "return",
      "stack_out": []
    },
    "369": {
      "block": "main_bare_routing@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "371": {
      "op": "bnz main_after_if_else@16",
      "stack_out": []
    },
    "374": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "376": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "377": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "378": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "379": {
      "op": "return",
      "stack_out": []
    },
    "380": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.allow_asset",
      "params": {
        "mbr_pay#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "allow_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "383": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "385": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "387": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "389": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "391": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "392": {
      "op": "assert",
      "stack_out": []
    },
    "393": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "395": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "397": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "399": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "400": {
      "op": "assert",
      "stack_out": []
    },
    "401": {
      "op": "frame_dig -2",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "403": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "405": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "407": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "408": {
      "op": "assert",
      "stack_out": []
    },
    "409": {
      "op": "itxn_begin"
    },
    "410": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "412": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "413": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "415": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "417": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "419": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "421": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "422": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "424": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "425": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "427": {
      "op": "itxn_submit"
    },
    "428": {
      "retsub": true,
      "op": "retsub"
    },
    "429": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.first_deposit",
      "params": {
        "mbr_pay#0": "uint64",
        "xfer#0": "uint64",
        "unitary_price#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "first_deposit",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "432": {
      "op": "frame_dig -4",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "434": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "436": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "438": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "439": {
      "op": "assert",
      "stack_out": []
    },
    "440": {
      "op": "frame_dig -4",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "442": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "444": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "446": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "447": {
      "op": "assert",
      "stack_out": []
    },
    "448": {
      "op": "frame_dig -4",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "450": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "452": {
      "op": "intc 4 // 50500",
      "defined_out": [
        "50500",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "50500"
      ]
    },
    "454": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "455": {
      "op": "assert",
      "stack_out": []
    },
    "456": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "458": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%9#0",
        "xfer#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "xfer#0 (copy)"
      ]
    },
    "460": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "462": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "463": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "464": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "466": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "467": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "468": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "469": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "470": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "471": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "472": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "473": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "475": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ]
    },
    "476": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "477": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xfer#0 (copy)"
      ]
    },
    "479": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0"
      ]
    },
    "481": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "483": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%15#0"
      ]
    },
    "484": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "485": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xfer#0 (copy)"
      ]
    },
    "487": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0"
      ]
    },
    "489": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "491": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%18#0"
      ]
    },
    "492": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "493": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xfer#0 (copy)"
      ]
    },
    "495": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ]
    },
    "497": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "498": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ]
    },
    "499": {
      "op": "global ZeroAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%22#0"
      ]
    },
    "501": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "tmp%19#0"
      ]
    },
    "502": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "503": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "aggregate%val_as_bytes%2#0",
        "unitary_price#0 (copy)"
      ]
    },
    "505": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "box_prefixed_key%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "506": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "box_prefixed_key%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "aggregate%head%4#0"
      ]
    },
    "507": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%4#0",
        "tmp%22#0"
      ]
    },
    "508": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%5#0"
      ]
    },
    "509": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "aggregate%head%5#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%5#0",
        "0"
      ]
    },
    "510": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "511": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%head%5#0"
      ]
    },
    "512": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%4#0 (copy)",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0 (copy)"
      ]
    },
    "514": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%4#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%head%6#0"
      ]
    },
    "515": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "516": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%7#0"
      ]
    },
    "517": {
      "op": "box_put",
      "stack_out": []
    },
    "518": {
      "retsub": true,
      "op": "retsub"
    },
    "519": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.deposit",
      "params": {
        "xfer#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "deposit",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "522": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "524": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%0#0",
        "xfer#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "xfer#0 (copy)"
      ]
    },
    "526": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "528": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "529": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "530": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "532": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "533": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "534": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "536": {
      "op": "gtxns Sender",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0"
      ]
    },
    "538": {
      "op": "txn Sender",
      "defined_out": [
        "key#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "540": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "541": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "542": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "544": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0"
      ]
    },
    "546": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "key#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "548": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%8#0"
      ]
    },
    "549": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "550": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "552": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0"
      ]
    },
    "554": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "555": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "tmp%9#0"
      ]
    },
    "556": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "0x6c697374696e6773"
      ]
    },
    "557": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "559": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0"
      ]
    },
    "560": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "561": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "562": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0"
      ]
    },
    "563": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "564": {
      "op": "extract 48 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0"
      ]
    },
    "567": {
      "op": "dig 1",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "existing#0 (copy)"
      ]
    },
    "569": {
      "op": "extract 56 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "572": {
      "op": "dig 2",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "existing#0 (copy)"
      ]
    },
    "574": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "577": {
      "op": "dig 3",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "existing#0 (copy)"
      ]
    },
    "579": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0"
      ]
    },
    "582": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "existing#0"
      ]
    },
    "584": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "existing#0",
        "0"
      ]
    },
    "585": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "tmp%9#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "values%4#0"
      ]
    },
    "586": {
      "op": "uncover 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "values%4#0",
        "tmp%9#0"
      ]
    },
    "588": {
      "op": "+",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "tmp%12#0"
      ]
    },
    "589": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%extract%3#0"
      ]
    },
    "591": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%4#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%4#0"
      ]
    },
    "592": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%4#0",
        "aggregate%extract%2#0"
      ]
    },
    "593": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%5#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%5#0"
      ]
    },
    "594": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%5#0",
        "aggregate%extract%0#0"
      ]
    },
    "596": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%head%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%6#0"
      ]
    },
    "597": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%6#0",
        "aggregate%extract%1#0"
      ]
    },
    "598": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%7#0"
      ]
    },
    "599": {
      "op": "box_put",
      "stack_out": []
    },
    "600": {
      "retsub": true,
      "op": "retsub"
    },
    "601": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.set_price",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "set_price",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "604": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "606": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "608": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "609": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "610": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "612": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "613": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "614": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "615": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "616": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "617": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "618": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "existing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "619": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0"
      ]
    },
    "620": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "621": {
      "op": "extract 48 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "existing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0"
      ]
    },
    "624": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "existing#0 (copy)"
      ]
    },
    "626": {
      "op": "extract 56 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "existing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "629": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "existing#0 (copy)"
      ]
    },
    "631": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "box_prefixed_key%0#0",
        "existing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "634": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "existing#0"
      ]
    },
    "636": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0"
      ]
    },
    "639": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "unitary_price#0 (copy)"
      ]
    },
    "641": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "642": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%4#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%4#0"
      ]
    },
    "643": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%4#0",
        "aggregate%extract%2#0"
      ]
    },
    "644": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%5#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%5#0"
      ]
    },
    "645": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%5#0",
        "aggregate%extract%0#0"
      ]
    },
    "647": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%head%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%head%6#0"
      ]
    },
    "648": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%6#0",
        "aggregate%extract%1#0"
      ]
    },
    "649": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%7#0"
      ]
    },
    "650": {
      "op": "box_put",
      "stack_out": []
    },
    "651": {
      "retsub": true,
      "op": "retsub"
    },
    "652": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.buy",
      "params": {
        "owner#0": "bytes",
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "buy_pay#0": "uint64",
        "quantity#0": "uint64"
      },
      "block": "buy",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "655": {
      "op": "frame_dig -4",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "657": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "658": {
      "op": "frame_dig -5",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "owner#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "owner#0 (copy)"
      ]
    },
    "660": {
      "op": "swap",
      "stack_out": [
        "owner#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "661": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "662": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "664": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "665": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "666": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "667": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "668": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "669": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "670": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "671": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0"
      ]
    },
    "672": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "673": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)",
        "8"
      ]
    },
    "675": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ]
    },
    "676": {
      "op": "frame_dig -4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset#0 (copy)"
      ]
    },
    "678": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "check%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "680": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0"
      ]
    },
    "681": {
      "op": "dig 1",
      "defined_out": [
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)"
      ]
    },
    "683": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "price#0 (copy)",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "quantity#0 (copy)"
      ]
    },
    "685": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "686": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "687": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "689": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "690": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "_quotient_high#0",
        "amount_to_be_paid#1",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "691": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "_quotient_high#0",
        "amount_to_be_paid#1"
      ]
    },
    "693": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "_quotient_high#0"
      ]
    },
    "694": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%8#0"
      ]
    },
    "695": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1"
      ]
    },
    "696": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "buy_pay#0 (copy)",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "buy_pay#0 (copy)"
      ]
    },
    "698": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%2#0"
      ]
    },
    "700": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "702": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%4#0"
      ]
    },
    "703": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1"
      ]
    },
    "704": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "buy_pay#0 (copy)"
      ]
    },
    "706": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%5#0"
      ]
    },
    "708": {
      "op": "frame_dig -5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%5#0",
        "owner#0 (copy)"
      ]
    },
    "710": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%6#0"
      ]
    },
    "711": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1"
      ]
    },
    "712": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "buy_pay#0 (copy)"
      ]
    },
    "714": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%7#0"
      ]
    },
    "716": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%8#0"
      ]
    },
    "717": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ]
    },
    "718": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "listing#0 (copy)"
      ]
    },
    "720": {
      "op": "extract 48 8",
      "defined_out": [
        "aggregate%extract%1#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "aggregate%extract%1#0"
      ]
    },
    "723": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "aggregate%extract%1#0",
        "listing#0 (copy)"
      ]
    },
    "725": {
      "op": "extract 56 8",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "728": {
      "op": "dig 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "listing#0 (copy)"
      ]
    },
    "730": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0"
      ]
    },
    "733": {
      "op": "uncover 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "listing#0"
      ]
    },
    "735": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "listing#0",
        "0"
      ]
    },
    "736": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "price#0",
        "values%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "values%5#0"
      ]
    },
    "737": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "values%5#0",
        "quantity#0 (copy)"
      ]
    },
    "739": {
      "op": "-",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "box_prefixed_key%0#0",
        "price#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "tmp%9#0"
      ]
    },
    "740": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "741": {
      "op": "uncover 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0",
        "price#0"
      ]
    },
    "743": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "744": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%head%4#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%extract%3#0",
        "aggregate%head%4#0"
      ]
    },
    "745": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%4#0",
        "aggregate%extract%3#0"
      ]
    },
    "746": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%5#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%head%5#0"
      ]
    },
    "747": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%2#0",
        "aggregate%head%5#0",
        "aggregate%extract%1#0"
      ]
    },
    "749": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%head%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%extract%2#0",
        "aggregate%head%6#0"
      ]
    },
    "750": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%6#0",
        "aggregate%extract%2#0"
      ]
    },
    "751": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%7#0"
      ]
    },
    "752": {
      "op": "box_put",
      "stack_out": []
    },
    "753": {
      "op": "itxn_begin"
    },
    "754": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "756": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "quantity#0 (copy)"
      ]
    },
    "758": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "760": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "762": {
      "op": "frame_dig -4",
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "764": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "766": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "767": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "769": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "770": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "772": {
      "op": "itxn_submit"
    },
    "773": {
      "retsub": true,
      "op": "retsub"
    },
    "774": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.withdraw",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "777": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "779": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "781": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "782": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "783": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "785": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "786": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "787": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "788": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "789": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "790": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "791": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "792": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "listing#0"
      ]
    },
    "793": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "794": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "796": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0"
      ]
    },
    "797": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "800": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "801": {
      "op": "global ZeroAddress",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0",
        "tmp%2#0"
      ]
    },
    "803": {
      "op": "!=",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "tmp%3#0"
      ]
    },
    "804": {
      "op": "bz withdraw_after_if_else@3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "807": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0"
      ]
    },
    "809": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "810": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)",
        "48"
      ]
    },
    "812": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "quantity#0"
      ]
    },
    "813": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "listing#0"
      ]
    },
    "814": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "listing#0",
        "56"
      ]
    },
    "816": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "price#0"
      ]
    },
    "817": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "price#0",
        "asset#0 (copy)"
      ]
    },
    "819": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "check%0#0",
        "listing#0",
        "price#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "price#0",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "821": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "price#0",
        "asset_decimals#0"
      ]
    },
    "822": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "quantity#0",
        "asset_decimals#0",
        "price#0"
      ]
    },
    "823": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "price#0",
        "quantity#0"
      ]
    },
    "825": {
      "op": "mulw",
      "defined_out": [
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "826": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "827": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "829": {
      "op": "expw",
      "defined_out": [
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "830": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "831": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "833": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "834": {
      "op": "!",
      "defined_out": [
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "835": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0"
      ]
    },
    "836": {
      "op": "itxn_begin"
    },
    "837": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "839": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "841": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "843": {
      "op": "intc_0 // pay",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "pay"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "pay"
      ]
    },
    "844": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "846": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "0"
      ]
    },
    "847": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "849": {
      "op": "itxn_submit"
    },
    "850": {
      "block": "withdraw_after_if_else@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "852": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "{box_del}"
      ]
    },
    "853": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "854": {
      "op": "itxn_begin"
    },
    "855": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "857": {
      "op": "intc 4 // 50500",
      "defined_out": [
        "50500",
        "box_prefixed_key%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "50500"
      ]
    },
    "859": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "861": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "863": {
      "op": "intc_0 // pay",
      "defined_out": [
        "box_prefixed_key%0#0",
        "pay"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "pay"
      ]
    },
    "864": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "866": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "0"
      ]
    },
    "867": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "869": {
      "op": "itxn_submit"
    },
    "870": {
      "op": "itxn_begin"
    },
    "871": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "873": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0"
      ]
    },
    "875": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0",
        "0"
      ]
    },
    "876": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0",
        "values%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "values%4#0"
      ]
    },
    "877": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "879": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "881": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset#0 (copy)"
      ]
    },
    "883": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "885": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "axfer"
      ]
    },
    "886": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "888": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "0"
      ]
    },
    "889": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "891": {
      "op": "itxn_submit"
    },
    "892": {
      "retsub": true,
      "op": "retsub"
    },
    "893": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.bid",
      "params": {
        "owner#0": "bytes",
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "bid_pay#0": "uint64",
        "quantity#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "bid",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "896": {
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "898": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "899": {
      "op": "frame_dig -6",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "owner#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "owner#0 (copy)"
      ]
    },
    "901": {
      "op": "swap",
      "stack_out": [
        "owner#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "902": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "903": {
      "op": "frame_dig -4",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "905": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "906": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "907": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "908": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "909": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "910": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "911": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "912": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "listing#0"
      ]
    },
    "913": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "914": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "916": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0"
      ]
    },
    "917": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "920": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "921": {
      "op": "global ZeroAddress",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0",
        "tmp%1#0"
      ]
    },
    "923": {
      "op": "!=",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "tmp%2#0"
      ]
    },
    "924": {
      "op": "bz bid_after_if_else@3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "927": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0"
      ]
    },
    "929": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "930": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "932": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "price#1"
      ]
    },
    "933": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "price#1",
        "unitary_price#0 (copy)"
      ]
    },
    "935": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "price#1 (copy)",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "price#1",
        "unitary_price#0 (copy)",
        "price#1 (copy)"
      ]
    },
    "937": {
      "op": ">",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "price#1",
        "tmp%3#0"
      ]
    },
    "938": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "price#1"
      ]
    },
    "939": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "price#1",
        "listing#0"
      ]
    },
    "940": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "price#1",
        "listing#0",
        "48"
      ]
    },
    "942": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "quantity#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "price#1",
        "quantity#2"
      ]
    },
    "943": {
      "op": "frame_dig -5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "price#1",
        "quantity#2",
        "asset#0 (copy)"
      ]
    },
    "945": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "check%0#0",
        "listing#0",
        "price#1",
        "quantity#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "price#1",
        "quantity#2",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "947": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "price#1",
        "quantity#2",
        "asset_decimals#0"
      ]
    },
    "948": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "price#1",
        "quantity#2"
      ]
    },
    "950": {
      "op": "mulw",
      "defined_out": [
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "951": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "952": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "954": {
      "op": "expw",
      "defined_out": [
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "955": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "956": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "958": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "959": {
      "op": "!",
      "defined_out": [
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "960": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0"
      ]
    },
    "961": {
      "op": "itxn_begin"
    },
    "962": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "964": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "966": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "968": {
      "op": "intc_0 // pay",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "pay"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "pay"
      ]
    },
    "969": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "971": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "0"
      ]
    },
    "972": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "974": {
      "op": "itxn_submit"
    },
    "975": {
      "block": "bid_after_if_else@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ],
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset#0 (copy)"
      ]
    },
    "977": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "asset_decimals#0",
        "check%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "check%1#0"
      ]
    },
    "979": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0"
      ]
    },
    "980": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_decimals#0",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "unitary_price#0 (copy)"
      ]
    },
    "982": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset_decimals#0",
        "quantity#0 (copy)",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "unitary_price#0 (copy)",
        "quantity#0 (copy)"
      ]
    },
    "984": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "985": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "986": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "988": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "989": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "990": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "992": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "993": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "994": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0"
      ]
    },
    "995": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "997": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%6#0"
      ]
    },
    "999": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1001": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "1002": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0"
      ]
    },
    "1003": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "1005": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%9#0"
      ]
    },
    "1007": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1009": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%11#0"
      ]
    },
    "1010": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0"
      ]
    },
    "1011": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "1013": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "amount_to_be_paid#0",
        "tmp%12#0"
      ]
    },
    "1015": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "tmp%13#0"
      ]
    },
    "1016": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "1017": {
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0"
      ]
    },
    "1019": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1020": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%extract%3#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "aggregate%extract%3#0"
      ]
    },
    "1023": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%3#0",
        "listing#0"
      ]
    },
    "1024": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%extract%4#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%3#0",
        "aggregate%extract%4#0"
      ]
    },
    "1027": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%extract%4#0",
        "listing#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%3#0",
        "aggregate%extract%4#0",
        "tmp%14#0"
      ]
    },
    "1029": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "tmp%14#0",
        "aggregate%extract%3#0",
        "aggregate%extract%4#0"
      ]
    },
    "1031": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "listing#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "tmp%14#0",
        "aggregate%head%4#0"
      ]
    },
    "1032": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%4#0",
        "tmp%14#0"
      ]
    },
    "1033": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%5#0"
      ]
    },
    "1034": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%5#0",
        "quantity#0 (copy)"
      ]
    },
    "1036": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "1037": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%6#0"
      ]
    },
    "1038": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%6#0",
        "unitary_price#0 (copy)"
      ]
    },
    "1040": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%5#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "1041": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%7#0"
      ]
    },
    "1042": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%head%7#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%head%7#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1044": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "aggregate%head%7#0"
      ]
    },
    "1045": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "1046": {
      "retsub": true,
      "op": "retsub"
    },
    "1047": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.accept_bid",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "accept_bid",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1050": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1052": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "1054": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1055": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1056": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "nonce#0 (copy)"
      ]
    },
    "1058": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1059": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "1060": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "1061": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "1062": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1063": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1064": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1065": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "listing#0"
      ]
    },
    "1066": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1067": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1069": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0"
      ]
    },
    "1070": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1071": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "1074": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "aggregate%extract%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1075": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "aggregate%extract%0#0"
      ]
    },
    "1077": {
      "op": "global ZeroAddress",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "tmp%2#0"
      ]
    },
    "1079": {
      "op": "!=",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "tmp%3#0"
      ]
    },
    "1080": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0"
      ]
    },
    "1081": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1082": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "listing#0 (copy)",
        "0"
      ]
    },
    "1083": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "values%1#0"
      ]
    },
    "1084": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "listing#0",
        "values%1#0",
        "values%1#0 (copy)"
      ]
    },
    "1085": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%1#0",
        "listing#0"
      ]
    },
    "1087": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%1#0",
        "listing#0",
        "48"
      ]
    },
    "1089": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1090": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%1#0",
        "values%2#0",
        "values%2#0"
      ]
    },
    "1091": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1093": {
      "op": "<",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%4#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "tmp%4#0"
      ]
    },
    "1094": {
      "op": "bz accept_bid_ternary_false@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1097": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%extract%0#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "min_quantity#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0"
      ]
    },
    "1099": {
      "block": "accept_bid_ternary_merge@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0"
      ]
    },
    "1101": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1102": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "1104": {
      "op": "extract_uint64",
      "defined_out": [
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0"
      ]
    },
    "1105": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset#0 (copy)"
      ]
    },
    "1107": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "asset_decimals#0",
        "check%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "1109": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset_decimals#0"
      ]
    },
    "1110": {
      "op": "dig 1",
      "defined_out": [
        "asset_decimals#0",
        "listing#0",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)"
      ]
    },
    "1112": {
      "op": "uncover 4",
      "defined_out": [
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "min_quantity#0"
      ]
    },
    "1114": {
      "op": "dup",
      "defined_out": [
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0 (copy)",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "min_quantity#0 (copy)",
        "min_quantity#0 (copy)"
      ]
    },
    "1115": {
      "op": "cover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "min_quantity#0 (copy)"
      ]
    },
    "1117": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "1118": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "1119": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "1121": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "1122": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "1123": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "1125": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "1126": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0",
        "tmp%8#1"
      ]
    },
    "1127": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0"
      ]
    },
    "1128": {
      "op": "itxn_begin"
    },
    "1129": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1131": {
      "op": "itxn_field Receiver"
    },
    "1133": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1135": {
      "op": "intc_0 // pay",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "pay",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "pay"
      ]
    },
    "1136": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1138": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "0"
      ]
    },
    "1139": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1141": {
      "op": "itxn_submit"
    },
    "1142": {
      "op": "itxn_begin"
    },
    "1143": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "min_quantity#0 (copy)"
      ]
    },
    "1144": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1146": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "aggregate%extract%0#0"
      ]
    },
    "1148": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%0#0 (copy)",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "aggregate%extract%0#0 (copy)",
        "aggregate%extract%0#0 (copy)"
      ]
    },
    "1149": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "aggregate%extract%0#0 (copy)"
      ]
    },
    "1151": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0"
      ]
    },
    "1153": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "asset#0 (copy)"
      ]
    },
    "1155": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0"
      ]
    },
    "1157": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "aggregate%extract%0#0",
        "axfer",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "axfer"
      ]
    },
    "1158": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0"
      ]
    },
    "1160": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "0"
      ]
    },
    "1161": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0"
      ]
    },
    "1163": {
      "op": "itxn_submit"
    },
    "1164": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "listing#0"
      ]
    },
    "1166": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "aggregate%extract%4#0"
      ]
    },
    "1169": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "aggregate%extract%4#0",
        "values%1#0"
      ]
    },
    "1171": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "aggregate%extract%4#0",
        "values%1#0",
        "min_quantity#0 (copy)"
      ]
    },
    "1173": {
      "op": "-",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "tmp%6#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "aggregate%extract%4#0",
        "tmp%6#0"
      ]
    },
    "1174": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "tmp%6#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "min_quantity#0",
        "aggregate%extract%4#0",
        "tmp%6#0",
        "values%2#0"
      ]
    },
    "1176": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "tmp%6#0",
        "values%2#0",
        "min_quantity#0"
      ]
    },
    "1178": {
      "op": "-",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "listing#0",
        "price#0",
        "tmp%6#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1179": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "1180": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "aggregate%val_as_bytes%2#0",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "aggregate%extract%4#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1181": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%extract%4#0"
      ]
    },
    "1183": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%4#0",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%extract%0#0",
        "tmp%7#0",
        "aggregate%head%4#0"
      ]
    },
    "1184": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "tmp%7#0",
        "aggregate%head%4#0",
        "aggregate%extract%0#0"
      ]
    },
    "1186": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%5#0",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "tmp%7#0",
        "aggregate%head%5#0"
      ]
    },
    "1187": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%head%5#0",
        "tmp%7#0"
      ]
    },
    "1188": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "1189": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%6#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "price#0",
        "aggregate%head%6#0"
      ]
    },
    "1190": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%head%6#0",
        "price#0"
      ]
    },
    "1191": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%5#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%head%6#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "1192": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%7#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%head%7#0"
      ]
    },
    "1193": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%head%7#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%head%7#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1195": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "box_prefixed_key%0#0",
        "aggregate%head%7#0"
      ]
    },
    "1196": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1197": {
      "retsub": true,
      "op": "retsub"
    },
    "1198": {
      "block": "accept_bid_ternary_false@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "min_quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "aggregate%extract%0#0",
        "values%1#0",
        "values%2#0",
        "min_quantity#0"
      ]
    },
    "1200": {
      "op": "b accept_bid_ternary_merge@3"
    }
  }
}