{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;AAAA;AASK;;;;;;AAJA;;;;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBM;;AAAP;;;;AAjBC;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AANY;;AAAT;;;;;;AAIA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "11": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "14": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "bz main___algopy_default_create@10",
      "stack_out": []
    },
    "18": {
      "op": "b main_abi_routing@2"
    },
    "21": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "23": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "24": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "25": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "29": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "30": {
      "op": "bz main_create_NoOp@8",
      "stack_out": []
    },
    "33": {
      "op": "b main_call_NoOp@3"
    },
    "36": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "39": {
      "op": "pushbytes 0xbbd6169c // method \"discard_op()void\"",
      "defined_out": [
        "Method(discard_op()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(discard_op()void)"
      ]
    },
    "45": {
      "op": "pushbytes 0xb667bc14 // method \"discard_subroutine()void\"",
      "defined_out": [
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)"
      ]
    },
    "51": {
      "op": "pushbytes 0x0756dbf1 // method \"discard_constants()void\"",
      "defined_out": [
        "Method(discard_constants()void)",
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "Method(discard_constants()void)"
      ]
    },
    "57": {
      "op": "uncover 3",
      "stack_out": [
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "Method(discard_constants()void)",
        "tmp%6#0"
      ]
    },
    "59": {
      "op": "match main_discard_op_route@4 main_discard_subroutine_route@5 main_discard_constants_route@6",
      "stack_out": []
    },
    "67": {
      "op": "b main_switch_case_next@7"
    },
    "70": {
      "block": "main_switch_case_next@7",
      "stack_in": [],
      "op": "b main_after_if_else@9"
    },
    "73": {
      "block": "main_after_if_else@9",
      "stack_in": [],
      "op": "b main_after_if_else@11"
    },
    "76": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "77": {
      "block": "main_discard_constants_route@6",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]",
      "op": "callsub discard_constants"
    },
    "80": {
      "op": "b main_switch_case_next@7"
    },
    "83": {
      "block": "main_discard_subroutine_route@5",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]",
      "op": "callsub discard_subroutine"
    },
    "86": {
      "op": "b main_switch_case_next@7"
    },
    "89": {
      "block": "main_discard_op_route@4",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]",
      "op": "callsub discard_op"
    },
    "92": {
      "op": "b main_switch_case_next@7"
    },
    "95": {
      "block": "main_create_NoOp@8",
      "stack_in": [],
      "op": "b main_after_if_else@9"
    },
    "98": {
      "block": "main___algopy_default_create@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "100": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "101": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "102": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "104": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "105": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "106": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "107": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "108": {
      "op": "b main_block@13"
    },
    "111": {
      "block": "main_block@13",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@14"
    },
    "114": {
      "block": "main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@14",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "115": {
      "op": "return",
      "stack_out": []
    },
    "116": {
      "subroutine": "test_cases.unassigned_expression.contract.get_a_value",
      "params": {},
      "block": "get_a_value",
      "stack_in": [],
      "op": "b get_a_value_block@0"
    },
    "119": {
      "block": "get_a_value_block@0",
      "stack_in": [],
      "op": "pushint 42 // 42",
      "defined_out": [
        "42"
      ],
      "stack_out": [
        "42"
      ]
    },
    "121": {
      "retsub": true,
      "op": "retsub"
    },
    "122": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]",
      "params": {},
      "block": "discard_op",
      "stack_in": [],
      "op": "b discard_op_block@0"
    },
    "125": {
      "block": "discard_op_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_op",
      "op": "callsub test_cases.unassigned_expression.contract.Unassigned.discard_op"
    },
    "128": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "129": {
      "op": "return",
      "stack_out": []
    },
    "130": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]",
      "params": {},
      "block": "discard_subroutine",
      "stack_in": [],
      "op": "b discard_subroutine_block@0"
    },
    "133": {
      "block": "discard_subroutine_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine",
      "op": "callsub test_cases.unassigned_expression.contract.Unassigned.discard_subroutine"
    },
    "136": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "137": {
      "op": "return",
      "stack_out": []
    },
    "138": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]",
      "params": {},
      "block": "discard_constants",
      "stack_in": [],
      "op": "b discard_constants_block@0"
    },
    "141": {
      "block": "discard_constants_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_constants",
      "op": "callsub test_cases.unassigned_expression.contract.Unassigned.discard_constants"
    },
    "144": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "145": {
      "op": "return",
      "stack_out": []
    },
    "146": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_op",
      "params": {},
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_op",
      "stack_in": [],
      "op": "b test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0"
    },
    "149": {
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0",
      "stack_in": [],
      "op": "pushint 10 // 10",
      "defined_out": [
        "10"
      ],
      "stack_out": [
        "10"
      ]
    },
    "151": {
      "op": "bzero",
      "defined_out": [
        "{bzero}"
      ],
      "stack_out": [
        "{bzero}"
      ]
    },
    "152": {
      "op": "pop",
      "stack_out": []
    },
    "153": {
      "retsub": true,
      "op": "retsub"
    },
    "154": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine",
      "params": {},
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine",
      "stack_in": [],
      "op": "b test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0"
    },
    "157": {
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.get_a_value",
      "op": "callsub get_a_value",
      "defined_out": [
        "{get_a_value}"
      ],
      "stack_out": [
        "{get_a_value}"
      ]
    },
    "160": {
      "op": "pop",
      "stack_out": []
    },
    "161": {
      "retsub": true,
      "op": "retsub"
    },
    "162": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_constants",
      "params": {},
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_constants",
      "stack_in": [],
      "op": "b test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0"
    },
    "165": {
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}