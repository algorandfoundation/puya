{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;AAGA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;;;;;;;;;AAAA;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;;;;AAkBW;;AAAP;;;;AAjBC;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AANY;AAAT;;;;;;AAIA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 10"
    },
    "6": {
      "op": "b block@0"
    },
    "9": {
      "block": "block@0",
      "stack_in": [],
      "op": "b block@1"
    },
    "12": {
      "block": "block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "14": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "17": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "18": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "19": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "20": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "21": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "22": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "24": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "26": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "28": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "30": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "32": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "34": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "36": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "38": {
      "op": "intc_2 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "39": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "41": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "43": {
      "op": "match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication",
      "stack_out": []
    },
    "69": {
      "op": "b *NOT_IMPLEMENTED"
    },
    "72": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "73": {
      "block": "create_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "76": {
      "block": "call_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "79": {
      "block": "create_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "82": {
      "block": "call_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "85": {
      "block": "create_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "88": {
      "block": "call_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "91": {
      "block": "create_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "94": {
      "block": "call_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "97": {
      "block": "create_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "100": {
      "block": "call_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "103": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "105": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "106": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "107": {
      "op": "bz else_body@10",
      "stack_out": []
    },
    "110": {
      "op": "b __algopy_default_create@9"
    },
    "113": {
      "block": "__algopy_default_create@9",
      "stack_in": [],
      "op": "b block@23"
    },
    "116": {
      "block": "block@23",
      "stack_in": [],
      "op": "b after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@24"
    },
    "119": {
      "block": "after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@24",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "120": {
      "op": "return",
      "stack_out": []
    },
    "121": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "block": "else_body@10",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create NoOp"
    },
    "122": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "125": {
      "op": "pushbytes 0xbbd6169c // method \"discard_op()void\"",
      "defined_out": [
        "Method(discard_op()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(discard_op()void)"
      ]
    },
    "131": {
      "op": "pushbytes 0xb667bc14 // method \"discard_subroutine()void\"",
      "defined_out": [
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)"
      ]
    },
    "137": {
      "op": "pushbytes 0x0756dbf1 // method \"discard_constants()void\"",
      "defined_out": [
        "Method(discard_constants()void)",
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "Method(discard_constants()void)"
      ]
    },
    "143": {
      "op": "uncover 3",
      "stack_out": [
        "Method(discard_op()void)",
        "Method(discard_subroutine()void)",
        "Method(discard_constants()void)",
        "tmp%5#0"
      ]
    },
    "145": {
      "op": "match discard_op_route@3 discard_subroutine_route@4 discard_constants_route@5",
      "stack_out": []
    },
    "153": {
      "op": "b switch_case_default@6"
    },
    "156": {
      "block": "switch_case_default@6",
      "stack_in": [],
      "op": "b switch_case_next@7"
    },
    "159": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "switch_case_next@7",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "160": {
      "block": "discard_constants_route@5",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]",
      "op": "callsub discard_constants"
    },
    "163": {
      "op": "b switch_case_next@7"
    },
    "166": {
      "block": "discard_subroutine_route@4",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]",
      "op": "callsub discard_subroutine"
    },
    "169": {
      "op": "b switch_case_next@7"
    },
    "172": {
      "block": "discard_op_route@3",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]",
      "op": "callsub discard_op"
    },
    "175": {
      "op": "b switch_case_next@7"
    },
    "178": {
      "subroutine": "test_cases.unassigned_expression.contract.get_a_value",
      "params": {},
      "block": "get_a_value",
      "stack_in": [],
      "op": "b get_a_value_block@0"
    },
    "181": {
      "block": "get_a_value_block@0",
      "stack_in": [],
      "op": "pushint 42 // 42",
      "defined_out": [
        "42"
      ],
      "stack_out": [
        "42"
      ]
    },
    "183": {
      "retsub": true,
      "op": "retsub"
    },
    "184": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]",
      "params": {},
      "block": "discard_op",
      "stack_in": [],
      "op": "b discard_op_block@0"
    },
    "187": {
      "block": "discard_op_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_op",
      "op": "callsub test_cases.unassigned_expression.contract.Unassigned.discard_op"
    },
    "190": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "191": {
      "op": "return",
      "stack_out": []
    },
    "192": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]",
      "params": {},
      "block": "discard_subroutine",
      "stack_in": [],
      "op": "b discard_subroutine_block@0"
    },
    "195": {
      "block": "discard_subroutine_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine",
      "op": "callsub test_cases.unassigned_expression.contract.Unassigned.discard_subroutine"
    },
    "198": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "199": {
      "op": "return",
      "stack_out": []
    },
    "200": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]",
      "params": {},
      "block": "discard_constants",
      "stack_in": [],
      "op": "b discard_constants_block@0"
    },
    "203": {
      "block": "discard_constants_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.Unassigned.discard_constants",
      "op": "callsub test_cases.unassigned_expression.contract.Unassigned.discard_constants"
    },
    "206": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "207": {
      "op": "return",
      "stack_out": []
    },
    "208": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_op",
      "params": {},
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_op",
      "stack_in": [],
      "op": "b test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0"
    },
    "211": {
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0",
      "stack_in": [],
      "op": "intc_2 // 10",
      "defined_out": [
        "10"
      ],
      "stack_out": [
        "10"
      ]
    },
    "212": {
      "op": "bzero",
      "defined_out": [
        "{bzero}"
      ],
      "stack_out": [
        "{bzero}"
      ]
    },
    "213": {
      "op": "pop",
      "stack_out": []
    },
    "214": {
      "retsub": true,
      "op": "retsub"
    },
    "215": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine",
      "params": {},
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine",
      "stack_in": [],
      "op": "b test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0"
    },
    "218": {
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0",
      "stack_in": [],
      "callsub": "test_cases.unassigned_expression.contract.get_a_value",
      "op": "callsub get_a_value",
      "defined_out": [
        "{get_a_value}"
      ],
      "stack_out": [
        "{get_a_value}"
      ]
    },
    "221": {
      "op": "pop",
      "stack_out": []
    },
    "222": {
      "retsub": true,
      "op": "retsub"
    },
    "223": {
      "subroutine": "test_cases.unassigned_expression.contract.Unassigned.discard_constants",
      "params": {},
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_constants",
      "stack_in": [],
      "op": "b test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0"
    },
    "226": {
      "block": "test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}