main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        goto block@1
    block@1: // L4
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@11
    block@2: // abi_routing_L4
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (== tmp%2#0 NoOp)
        (assert tmp%3#0) // OnCompletion is not NoOp
        let tmp%4#0: bool = (txn ApplicationID)
        goto tmp%4#0 ? block@3 : block@9
    block@3: // call_NoOp_L4
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "discard_op()void" => block@4, method "discard_subroutine()void" => block@5, method "discard_constants()void" => block@6, * => block@7}
    block@4: // discard_op_route_L5
        test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]()
        goto block@8
    block@5: // discard_subroutine_route_L9
        test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]()
        goto block@8
    block@6: // discard_constants_route_L13
        test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]()
        goto block@8
    block@7: // switch_case_default_L4
        goto block@8
    block@8: // switch_case_next_L4
        goto block@10
    block@9: // create_NoOp_L4
        goto block@10
    block@10: // after_if_else_L4
        goto block@12
    block@11: // __algopy_default_create_L1
        let tmp%6#0: uint64 = (txn OnCompletion)
        let tmp%7#0: bool = (== tmp%6#0 NoOp)
        let tmp%8#0: uint64 = (txn ApplicationID)
        let tmp%9#0: bool = (== tmp%8#0 0u)
        let tmp%10#0: bool = (&& tmp%7#0 tmp%9#0)
        (assert tmp%10#0) // OnCompletion must be NoOp && can only call when creating
        goto block@14
    block@14: // L1
        goto block@15
    block@15: // after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create_L1
        exit 1u
    block@12: // after_if_else_L4
        exit 0u
    block@13: // after_inlined_test_cases.unassigned_expression.contract.Unassigned.__puya_arc4_router___L1
        let tmp%0#0: bool = undefined
        return tmp%0#0

subroutine test_cases.unassigned_expression.contract.get_a_value() -> uint64:
    block@0: // L20
        return 42u

subroutine test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]() -> void:
    block@0: // L5
        test_cases.unassigned_expression.contract.Unassigned.discard_op()
        exit 1u

subroutine test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]() -> void:
    block@0: // L9
        test_cases.unassigned_expression.contract.Unassigned.discard_subroutine()
        exit 1u

subroutine test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]() -> void:
    block@0: // L13
        test_cases.unassigned_expression.contract.Unassigned.discard_constants()
        exit 1u

subroutine test_cases.unassigned_expression.contract.Unassigned.discard_op() -> void:
    block@0: // L5
        (bzero 10u)
        return 

subroutine test_cases.unassigned_expression.contract.Unassigned.discard_subroutine() -> void:
    block@0: // L9
        test_cases.unassigned_expression.contract.get_a_value()
        return 

subroutine test_cases.unassigned_expression.contract.Unassigned.discard_constants() -> void:
    block@0: // L13
        return 