#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1

main_block@1:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@8

main_abi_routing@2:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0xbbd6169c // method "discard_op()void"
    pushbytes 0xb667bc14 // method "discard_subroutine()void"
    pushbytes 0x0756dbf1 // method "discard_constants()void"
    uncover 3
    match main_discard_op_route@3 main_discard_subroutine_route@4 main_discard_constants_route@5

main_switch_case_default@6:

main_switch_case_next@7:

main_after_if_else@12:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    intc_0 // 0

main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__puya_arc4_router__@13:
    return

main_discard_constants_route@5:
    // unassigned_expression/contract.py:13
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub discard_constants
    intc_1 // 1
    b main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__puya_arc4_router__@13

main_discard_subroutine_route@4:
    // unassigned_expression/contract.py:9
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub discard_subroutine
    intc_1 // 1
    b main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__puya_arc4_router__@13

main_discard_op_route@3:
    // unassigned_expression/contract.py:5
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub discard_op
    intc_1 // 1
    b main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__puya_arc4_router__@13

main_bare_routing@8:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algopy_default_create@9

main_switch_case_default@10:

main_switch_case_next@11:
    b main_after_if_else@12

main___algopy_default_create@9:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating

main_block@14:

main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@15:
    intc_1 // 1
    b main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__puya_arc4_router__@13


// test_cases.unassigned_expression.contract.Unassigned.discard_op() -> void:
discard_op:
    // unassigned_expression/contract.py:5-6
    // @arc4.abimethod()
    // def discard_op(self) -> None:
    proto 0 0
    // unassigned_expression/contract.py:7
    // op.bzero(10)
    pushint 10 // 10
    bzero
    pop
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_subroutine() -> void:
discard_subroutine:
    // unassigned_expression/contract.py:9-10
    // @arc4.abimethod()
    // def discard_subroutine(self) -> None:
    proto 0 0
    // unassigned_expression/contract.py:11
    // get_a_value()
    callsub get_a_value
    pop
    retsub


// test_cases.unassigned_expression.contract.get_a_value() -> uint64:
get_a_value:
    // unassigned_expression/contract.py:20-21
    // @subroutine
    // def get_a_value() -> UInt64:
    proto 0 1
    // unassigned_expression/contract.py:22
    // return UInt64(42)
    pushint 42 // 42
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_constants() -> void:
discard_constants:
    // unassigned_expression/contract.py:13-14
    // @arc4.abimethod()
    // def discard_constants(self) -> None:
    proto 0 0
    retsub
