#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@17
    b main_abi_routing@2

main_abi_routing@2:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txna ApplicationArgs 0
    match
    b main_route_NoOp@3

main_route_NoOp@3:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txna ApplicationArgs 0
    match
    b main_switch_case_default@4

main_switch_case_default@4:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn ApplicationID
    bz main_create_NoOp@11
    b main_call_NoOp@5

main_call_NoOp@5:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0xbbd6169c // method "discard_op()void"
    pushbytes 0xb667bc14 // method "discard_subroutine()void"
    pushbytes 0x0756dbf1 // method "discard_constants()void"
    uncover 3
    match main_discard_op_route@6 main_discard_subroutine_route@7 main_discard_constants_route@8
    b main_switch_case_default@9

main_switch_case_default@9:
    b main_switch_case_next@10

main_switch_case_next@10:
    b main_after_if_else@14

main_after_if_else@14:
    b main_switch_case_next@15

main_switch_case_next@15:
    b main_switch_case_next@16

main_switch_case_next@16:
    b main_after_if_else@21

main_after_if_else@21:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    err

main_discard_constants_route@8:
    // unassigned_expression/contract.py:13
    // @arc4.abimethod()
    callsub discard_constants
    b main_switch_case_next@10

main_discard_subroutine_route@7:
    // unassigned_expression/contract.py:9
    // @arc4.abimethod()
    callsub discard_subroutine
    b main_switch_case_next@10

main_discard_op_route@6:
    // unassigned_expression/contract.py:5
    // @arc4.abimethod()
    callsub discard_op
    b main_switch_case_next@10

main_create_NoOp@11:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txna ApplicationArgs 0
    match
    b main_switch_case_default@12

main_switch_case_default@12:
    b main_switch_case_next@13

main_switch_case_next@13:
    b main_after_if_else@14

main_bare_routing@17:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    uncover 1
    match main___algopy_default_create@18
    b main_switch_case_default@19

main_switch_case_default@19:
    b main_switch_case_next@20

main_switch_case_next@20:
    b main_after_if_else@21

main___algopy_default_create@18:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    b main_block@23

main_block@23:
    b main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@24

main_after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@24:
    intc_1 // 1
    return


// test_cases.unassigned_expression.contract.get_a_value() -> uint64:
get_a_value:
    b get_a_value_block@0

get_a_value_block@0:
    // unassigned_expression/contract.py:22
    // return UInt64(42)
    pushint 42 // 42
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]() -> void:
discard_op:
    b discard_op_block@0

discard_op_block@0:
    // unassigned_expression/contract.py:5
    // @arc4.abimethod()
    callsub test_cases.unassigned_expression.contract.Unassigned.discard_op
    intc_1 // 1
    return


// test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]() -> void:
discard_subroutine:
    b discard_subroutine_block@0

discard_subroutine_block@0:
    // unassigned_expression/contract.py:9
    // @arc4.abimethod()
    callsub test_cases.unassigned_expression.contract.Unassigned.discard_subroutine
    intc_1 // 1
    return


// test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]() -> void:
discard_constants:
    b discard_constants_block@0

discard_constants_block@0:
    // unassigned_expression/contract.py:13
    // @arc4.abimethod()
    callsub test_cases.unassigned_expression.contract.Unassigned.discard_constants
    intc_1 // 1
    return


// test_cases.unassigned_expression.contract.Unassigned.discard_op() -> void:
test_cases.unassigned_expression.contract.Unassigned.discard_op:
    b test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0

test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0:
    // unassigned_expression/contract.py:7
    // op.bzero(10)
    pushint 10 // 10
    bzero
    pop
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_subroutine() -> void:
test_cases.unassigned_expression.contract.Unassigned.discard_subroutine:
    b test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0

test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0:
    // unassigned_expression/contract.py:11
    // get_a_value()
    callsub get_a_value
    pop
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_constants() -> void:
test_cases.unassigned_expression.contract.Unassigned.discard_constants:
    b test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0

test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0:
    retsub
