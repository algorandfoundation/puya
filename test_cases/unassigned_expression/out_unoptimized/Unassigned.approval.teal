#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0 10
    b block@0

block@0:
    b block@1

block@1:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn ApplicationID
    !
    txn OnCompletion
    intc_0 // 1
    shl
    +
    intc_1 // 0
    intc_0 // 1
    pushint 2 // 2
    pushint 3 // 3
    pushint 4 // 4
    pushint 5 // 5
    pushint 6 // 6
    pushint 7 // 7
    pushint 8 // 8
    pushint 9 // 9
    intc_2 // 10
    pushint 11 // 11
    uncover 12
    match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication
    b *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

create_DeleteApplication:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

call_DeleteApplication:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

create_UpdateApplication:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

call_UpdateApplication:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

create_ClearState:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

call_ClearState:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

create_CloseOut:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

call_CloseOut:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

create_OptIn:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

call_OptIn:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    b *NOT_IMPLEMENTED

create_NoOp:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txn NumAppArgs
    intc_1 // 0
    ==
    bz else_body@10
    b __algopy_default_create@9

__algopy_default_create@9:
    b block@23

block@23:
    b after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@24

after_inlined_test_cases.unassigned_expression.contract.Unassigned.__algopy_default_create@24:
    intc_0 // 1
    return

else_body@10:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    err // this contract does not implement the given ABI method for create NoOp

call_NoOp:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0xbbd6169c // method "discard_op()void"
    pushbytes 0xb667bc14 // method "discard_subroutine()void"
    pushbytes 0x0756dbf1 // method "discard_constants()void"
    uncover 3
    match discard_op_route@3 discard_subroutine_route@4 discard_constants_route@5
    b switch_case_default@6

switch_case_default@6:
    b switch_case_next@7

switch_case_next@7:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    err // this contract does not implement the given ABI method for call NoOp

discard_constants_route@5:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    callsub discard_constants
    b switch_case_next@7

discard_subroutine_route@4:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    callsub discard_subroutine
    b switch_case_next@7

discard_op_route@3:
    // unassigned_expression/contract.py:4
    // class Unassigned(ARC4Contract):
    callsub discard_op
    b switch_case_next@7


// test_cases.unassigned_expression.contract.get_a_value() -> uint64:
get_a_value:
    b get_a_value_block@0

get_a_value_block@0:
    // unassigned_expression/contract.py:22
    // return UInt64(42)
    pushint 42 // 42
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_op[routing]() -> void:
discard_op:
    b discard_op_block@0

discard_op_block@0:
    // unassigned_expression/contract.py:5
    // @arc4.abimethod()
    callsub test_cases.unassigned_expression.contract.Unassigned.discard_op
    intc_0 // 1
    return


// test_cases.unassigned_expression.contract.Unassigned.discard_subroutine[routing]() -> void:
discard_subroutine:
    b discard_subroutine_block@0

discard_subroutine_block@0:
    // unassigned_expression/contract.py:9
    // @arc4.abimethod()
    callsub test_cases.unassigned_expression.contract.Unassigned.discard_subroutine
    intc_0 // 1
    return


// test_cases.unassigned_expression.contract.Unassigned.discard_constants[routing]() -> void:
discard_constants:
    b discard_constants_block@0

discard_constants_block@0:
    // unassigned_expression/contract.py:13
    // @arc4.abimethod()
    callsub test_cases.unassigned_expression.contract.Unassigned.discard_constants
    intc_0 // 1
    return


// test_cases.unassigned_expression.contract.Unassigned.discard_op() -> void:
test_cases.unassigned_expression.contract.Unassigned.discard_op:
    b test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0

test_cases.unassigned_expression.contract.Unassigned.discard_op_block@0:
    // unassigned_expression/contract.py:7
    // op.bzero(10)
    intc_2 // 10
    bzero
    pop
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_subroutine() -> void:
test_cases.unassigned_expression.contract.Unassigned.discard_subroutine:
    b test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0

test_cases.unassigned_expression.contract.Unassigned.discard_subroutine_block@0:
    // unassigned_expression/contract.py:11
    // get_a_value()
    callsub get_a_value
    pop
    retsub


// test_cases.unassigned_expression.contract.Unassigned.discard_constants() -> void:
test_cases.unassigned_expression.contract.Unassigned.discard_constants:
    b test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0

test_cases.unassigned_expression.contract.Unassigned.discard_constants_block@0:
    retsub
