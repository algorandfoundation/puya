{
  "version": 3,
  "sources": [
    "../base.py",
    "../iterate_tuple.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAOY;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACO;AAAP;ACjBR;;;;AAGkB;AACN;AADZ;;AAAA;;;;;;;;;;AAA4C;;;;;;;AAAb;;;;AAG/B;;;;AAGqD;AACzC;AADZ;;AAAA;;;;;;;;;;AAA2B;;;;;;;AAAa;;;;AAGxC;;;AAGkC;;AAAtB;AACA;;AAAA;AAAA;;;AADZ;;AAAA;;;;;;;AAA4D;;AAAhD;;;;;AAAmC;;AAAnC;;;;;AAIZ;;;;AAGoD;;AAAxC;AACA;;;AADZ;;AAAA;;;;;;;;;;AAA8E;;AAAlE;;;;;;;AAAqD;;AAArD;;;;AAIZ;;;AAGqE;;AAAzD;AACA;;AAAA;AAAA;;;AADZ;;AAAA;;;;;;;AAA2C;;AAA/B;;;;;AAA4C;;AAA5C;;;;;AAIZ;;;;AAGqE;;AAAzD;AACA;;;AADZ;;AAAA;;;;;;;;;;AAA2C;;AAA/B;;;;;;;AAA4C;;AAA5C;;;;;AA6BM;AACN;;;AAMmB;;;AACnB;;;;AADZ;;;ADlDA;;;AAEiB;;;;;;;;;;;;AACL;;AAAA;AAAA;AAAwB;;;AAAX;AAAA;;AAAA;AAAjB;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.iteration.base.IterationTestBase.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2"
    },
    "6": {
      "op": "bytecblock 0x61 0x63 0x62"
    },
    "14": {
      "op": "pushbytes \"test_forwards\"",
      "defined_out": [
        "\"test_forwards\""
      ],
      "stack_out": [
        "\"test_forwards\""
      ]
    },
    "29": {
      "op": "log",
      "stack_out": []
    },
    "30": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards",
      "op": "callsub test_forwards"
    },
    "33": {
      "op": "pushbytes \"test_reversed\"",
      "defined_out": [
        "\"test_reversed\""
      ],
      "stack_out": [
        "\"test_reversed\""
      ]
    },
    "48": {
      "op": "log",
      "stack_out": []
    },
    "49": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed",
      "op": "callsub test_reversed"
    },
    "52": {
      "op": "pushbytes \"test_forwards_with_forwards_index\"",
      "defined_out": [
        "\"test_forwards_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_forwards_index\""
      ]
    },
    "87": {
      "op": "log",
      "stack_out": []
    },
    "88": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index",
      "op": "callsub test_forwards_with_forwards_index"
    },
    "91": {
      "op": "pushbytes \"test_forwards_with_reverse_index\"",
      "defined_out": [
        "\"test_forwards_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_reverse_index\""
      ]
    },
    "125": {
      "op": "log",
      "stack_out": []
    },
    "126": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index",
      "op": "callsub test_forwards_with_reverse_index"
    },
    "129": {
      "op": "pushbytes \"test_reverse_with_forwards_index\"",
      "defined_out": [
        "\"test_reverse_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_forwards_index\""
      ]
    },
    "163": {
      "op": "log",
      "stack_out": []
    },
    "164": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index",
      "op": "callsub test_reverse_with_forwards_index"
    },
    "167": {
      "op": "pushbytes \"test_reverse_with_reverse_index\"",
      "defined_out": [
        "\"test_reverse_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_reverse_index\""
      ]
    },
    "200": {
      "op": "log",
      "stack_out": []
    },
    "201": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index",
      "op": "callsub test_reverse_with_reverse_index"
    },
    "204": {
      "op": "pushbytes \"test_empty\"",
      "defined_out": [
        "\"test_empty\""
      ],
      "stack_out": [
        "\"test_empty\""
      ]
    },
    "216": {
      "op": "log",
      "stack_out": []
    },
    "217": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty",
      "op": "callsub test_empty"
    },
    "220": {
      "op": "pushbytes \"test_break\"",
      "defined_out": [
        "\"test_break\""
      ],
      "stack_out": [
        "\"test_break\""
      ]
    },
    "232": {
      "op": "log",
      "stack_out": []
    },
    "233": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_break",
      "op": "callsub test_break"
    },
    "236": {
      "op": "pushbytes \"test_tuple_target\"",
      "defined_out": [
        "\"test_tuple_target\""
      ],
      "stack_out": [
        "\"test_tuple_target\""
      ]
    },
    "255": {
      "op": "log",
      "stack_out": []
    },
    "256": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target",
      "op": "callsub test_tuple_target"
    },
    "259": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "260": {
      "op": "return",
      "stack_out": []
    },
    "261": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards",
      "params": {},
      "block": "test_forwards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "264": {
      "op": "intc_1 // 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "265": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "266": {
      "block": "test_forwards_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "log",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "267": {
      "block": "test_forwards_for_footer@2",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "269": {
      "op": "switch test_forwards_for_header_1@3 test_forwards_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "275": {
      "block": "test_forwards_after_for@5",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "276": {
      "block": "test_forwards_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "277": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "279": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "280": {
      "op": "b test_forwards_for_body@1"
    },
    "283": {
      "block": "test_forwards_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "284": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "286": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "287": {
      "op": "b test_forwards_for_body@1"
    },
    "290": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed",
      "params": {},
      "block": "test_reversed",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "293": {
      "op": "intc_1 // 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "294": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "295": {
      "block": "test_reversed_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "log",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "296": {
      "block": "test_reversed_for_footer@2",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "298": {
      "op": "switch test_reversed_for_header_1@3 test_reversed_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "304": {
      "block": "test_reversed_after_for@5",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "305": {
      "block": "test_reversed_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "306": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "308": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "309": {
      "op": "b test_reversed_for_body@1"
    },
    "312": {
      "block": "test_reversed_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "313": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "315": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "316": {
      "op": "b test_reversed_for_body@1"
    },
    "319": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index",
      "params": {},
      "block": "test_forwards_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "322": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "323": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "324": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "325": {
      "block": "test_forwards_with_forwards_index_for_body@1",
      "stack_in": [
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "327": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#0",
        "i#0"
      ]
    },
    "328": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0"
      ]
    },
    "331": {
      "block": "test_forwards_with_forwards_index_for_footer@2",
      "stack_in": [
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#0"
      ]
    },
    "333": {
      "op": "switch test_forwards_with_forwards_index_for_header_1@3 test_forwards_with_forwards_index_for_header_2@4",
      "stack_out": [
        "idx#0"
      ]
    },
    "339": {
      "block": "test_forwards_with_forwards_index_after_for@5",
      "stack_in": [
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "340": {
      "block": "test_forwards_with_forwards_index_for_header_2@4",
      "stack_in": [
        "idx#0"
      ],
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "341": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "342": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "344": {
      "op": "b test_forwards_with_forwards_index_for_body@1"
    },
    "347": {
      "block": "test_forwards_with_forwards_index_for_header_1@3",
      "stack_in": [
        "idx#0"
      ],
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "348": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "349": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "351": {
      "op": "b test_forwards_with_forwards_index_for_body@1"
    },
    "354": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index",
      "params": {},
      "block": "test_forwards_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "357": {
      "op": "intc_1 // 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "358": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "359": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "360": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "361": {
      "block": "test_forwards_with_reverse_index_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ],
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "364": {
      "block": "test_forwards_with_reverse_index_for_footer@2",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "366": {
      "op": "switch test_forwards_with_reverse_index_for_header_1@3 test_forwards_with_reverse_index_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "372": {
      "block": "test_forwards_with_reverse_index_after_for@5",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "373": {
      "block": "test_forwards_with_reverse_index_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "374": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "376": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "377": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "378": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "379": {
      "op": "b test_forwards_with_reverse_index_for_body@1"
    },
    "382": {
      "block": "test_forwards_with_reverse_index_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "383": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "385": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "386": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "387": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "388": {
      "op": "b test_forwards_with_reverse_index_for_body@1"
    },
    "391": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index",
      "params": {},
      "block": "test_reverse_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "394": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "395": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "396": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "397": {
      "block": "test_reverse_with_forwards_index_for_body@1",
      "stack_in": [
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "399": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#0",
        "i#0"
      ]
    },
    "400": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0"
      ]
    },
    "403": {
      "block": "test_reverse_with_forwards_index_for_footer@2",
      "stack_in": [
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#0"
      ]
    },
    "405": {
      "op": "switch test_reverse_with_forwards_index_for_header_1@3 test_reverse_with_forwards_index_for_header_2@4",
      "stack_out": [
        "idx#0"
      ]
    },
    "411": {
      "block": "test_reverse_with_forwards_index_after_for@5",
      "stack_in": [
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "412": {
      "block": "test_reverse_with_forwards_index_for_header_2@4",
      "stack_in": [
        "idx#0"
      ],
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "413": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "414": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "416": {
      "op": "b test_reverse_with_forwards_index_for_body@1"
    },
    "419": {
      "block": "test_reverse_with_forwards_index_for_header_1@3",
      "stack_in": [
        "idx#0"
      ],
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "420": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "421": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "i#0"
      ]
    },
    "423": {
      "op": "b test_reverse_with_forwards_index_for_body@1"
    },
    "426": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index",
      "params": {},
      "block": "test_reverse_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "429": {
      "op": "intc_1 // 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "430": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "431": {
      "op": "intc_2 // 2",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "432": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "433": {
      "block": "test_reverse_with_reverse_index_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ],
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "436": {
      "block": "test_reverse_with_reverse_index_for_footer@2",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "438": {
      "op": "switch test_reverse_with_reverse_index_for_header_1@3 test_reverse_with_reverse_index_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "444": {
      "block": "test_reverse_with_reverse_index_after_for@5",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "445": {
      "block": "test_reverse_with_reverse_index_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "446": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "448": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "449": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "450": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "451": {
      "op": "b test_reverse_with_reverse_index_for_body@1"
    },
    "454": {
      "block": "test_reverse_with_reverse_index_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "455": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "457": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "i#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "458": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "459": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "460": {
      "op": "b test_reverse_with_reverse_index_for_body@1"
    },
    "463": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty",
      "params": {},
      "block": "test_empty",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "464": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_break",
      "params": {},
      "block": "test_break_for_body@1",
      "stack_in": [],
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "0x61"
      ]
    },
    "465": {
      "op": "log",
      "stack_out": []
    },
    "466": {
      "block": "test_break_after_for@2",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "467": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target",
      "params": {},
      "block": "test_tuple_target_for_body@1",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "468": {
      "op": "pushbytes 0x74",
      "defined_out": [
        "0",
        "0x74"
      ],
      "stack_out": [
        "0",
        "0x74"
      ]
    },
    "471": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": []
    },
    "474": {
      "block": "test_tuple_target_for_footer@2",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "475": {
      "op": "switch",
      "stack_out": []
    },
    "477": {
      "block": "test_tuple_target_after_for@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "478": {
      "subroutine": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "params": {
        "idx#0": "uint64",
        "value#0": "bytes"
      },
      "block": "_log_with_index",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "481": {
      "op": "pushbytes 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "493": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ]
    },
    "495": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)",
        "1"
      ]
    },
    "496": {
      "op": "extract3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "497": {
      "op": "pushbytes \"=\"",
      "defined_out": [
        "\"=\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"=\""
      ]
    },
    "500": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "501": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%1#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "value#0 (copy)"
      ]
    },
    "503": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "504": {
      "op": "log",
      "stack_out": []
    },
    "505": {
      "retsub": true,
      "op": "retsub"
    }
  }
}