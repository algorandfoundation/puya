{
  "version": 3,
  "sources": [
    "../base.py",
    "../iterate_tuple.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAOY;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACO;AAAP;ACjBR;;;;;;;AAGkB;;;;AACN;;AAAA;;;;AADZ;;AAAA;;;;;;AAAA;;;;;;;AAA4C;AAAhC;;;;;;;;AAAmB;AAAnB;;;;;AAGZ;;;;;;;AAGqD;;;;AACzC;;AAAA;;;;AADZ;;AAAA;;;;;;AAAA;;;;;;;AAA2B;AAAf;;;;;;;;AAA4B;AAA5B;;;;;AAGZ;;;;;;AAGkC;;;;;AACtB;;AAAA;;AAAA;;;;;;AADZ;;AAAA;;;;;;AAAA;;;;AAA4D;AAAhD;;;AAAA;;;;;AAAmC;AAAnC;;;AAAA;;;;;AAIZ;;;;;;;AAGoD;;;;;AACxC;;AAAA;;AAAA;;;;;;AADZ;;AAAA;;;;;;AAAA;;;;;;;AAA8E;AAAlE;;;AAAA;;;;;;;;AAAqD;AAArD;;;AAAA;;;;;AAIZ;;;;;;AAGqE;;;;;AACzD;;AAAA;;AAAA;;;;;;AADZ;;AAAA;;;;;;AAAA;;;;AAA2C;AAA/B;;;AAAA;;;;;AAA4C;AAA5C;;;AAAA;;;;;AAIZ;;;;;;;AAGqE;;;;;AACzD;;AAAA;;AAAA;;;;;;AADZ;;AAAA;;;;;;AAAA;;;;;;;AAA2C;AAA/B;;;AAAA;;;;;;;;AAA4C;AAA5C;;;AAAA;;;;;;;;;;;;;;;AA6BM;AACN;AACA;;;;;;;;;;;AAKmB;;;AACnB;;;;;;;AADZ;;AAAA;;;;ADlDA;;;;;;AAEiB;;;;;;;;;;;;AACL;;AAAA;AAAA;AAAwB;;;AAAX;AAAA;;AAAA;AAAjB;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.iteration.base.IterationTestBase.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2"
    },
    "6": {
      "op": "bytecblock 0x61 0x63 0x62"
    },
    "14": {
      "op": "b main_block@0"
    },
    "17": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "pushbytes \"test_forwards\"",
      "defined_out": [
        "\"test_forwards\""
      ],
      "stack_out": [
        "\"test_forwards\""
      ]
    },
    "32": {
      "op": "log",
      "stack_out": []
    },
    "33": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards",
      "op": "callsub test_forwards"
    },
    "36": {
      "op": "pushbytes \"test_reversed\"",
      "defined_out": [
        "\"test_reversed\""
      ],
      "stack_out": [
        "\"test_reversed\""
      ]
    },
    "51": {
      "op": "log",
      "stack_out": []
    },
    "52": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed",
      "op": "callsub test_reversed"
    },
    "55": {
      "op": "pushbytes \"test_forwards_with_forwards_index\"",
      "defined_out": [
        "\"test_forwards_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_forwards_index\""
      ]
    },
    "90": {
      "op": "log",
      "stack_out": []
    },
    "91": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index",
      "op": "callsub test_forwards_with_forwards_index"
    },
    "94": {
      "op": "pushbytes \"test_forwards_with_reverse_index\"",
      "defined_out": [
        "\"test_forwards_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_reverse_index\""
      ]
    },
    "128": {
      "op": "log",
      "stack_out": []
    },
    "129": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index",
      "op": "callsub test_forwards_with_reverse_index"
    },
    "132": {
      "op": "pushbytes \"test_reverse_with_forwards_index\"",
      "defined_out": [
        "\"test_reverse_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_forwards_index\""
      ]
    },
    "166": {
      "op": "log",
      "stack_out": []
    },
    "167": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index",
      "op": "callsub test_reverse_with_forwards_index"
    },
    "170": {
      "op": "pushbytes \"test_reverse_with_reverse_index\"",
      "defined_out": [
        "\"test_reverse_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_reverse_index\""
      ]
    },
    "203": {
      "op": "log",
      "stack_out": []
    },
    "204": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index",
      "op": "callsub test_reverse_with_reverse_index"
    },
    "207": {
      "op": "pushbytes \"test_empty\"",
      "defined_out": [
        "\"test_empty\""
      ],
      "stack_out": [
        "\"test_empty\""
      ]
    },
    "219": {
      "op": "log",
      "stack_out": []
    },
    "220": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty",
      "op": "callsub test_empty"
    },
    "223": {
      "op": "pushbytes \"test_break\"",
      "defined_out": [
        "\"test_break\""
      ],
      "stack_out": [
        "\"test_break\""
      ]
    },
    "235": {
      "op": "log",
      "stack_out": []
    },
    "236": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_break",
      "op": "callsub test_break"
    },
    "239": {
      "op": "pushbytes \"test_tuple_target\"",
      "defined_out": [
        "\"test_tuple_target\""
      ],
      "stack_out": [
        "\"test_tuple_target\""
      ]
    },
    "258": {
      "op": "log",
      "stack_out": []
    },
    "259": {
      "callsub": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target",
      "op": "callsub test_tuple_target"
    },
    "262": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "263": {
      "op": "return",
      "stack_out": []
    },
    "264": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards",
      "params": {},
      "block": "test_forwards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "267": {
      "op": "b test_forwards_block@0"
    },
    "270": {
      "block": "test_forwards_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "271": {
      "op": "bytec_0 // 0x61",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "272": {
      "op": "b test_forwards_for_body@1"
    },
    "275": {
      "block": "test_forwards_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "i#0"
      ]
    },
    "277": {
      "op": "log",
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "278": {
      "op": "b test_forwards_for_footer@2"
    },
    "281": {
      "block": "test_forwards_for_footer@2",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "loop_counter%0#0"
      ]
    },
    "283": {
      "op": "switch test_forwards_for_header_1@3 test_forwards_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "289": {
      "op": "b test_forwards_after_for@5"
    },
    "292": {
      "block": "test_forwards_after_for@5",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "293": {
      "block": "test_forwards_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "2"
      ]
    },
    "294": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "296": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "0x63"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "0x63"
      ]
    },
    "297": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "299": {
      "op": "b test_forwards_for_body@1"
    },
    "302": {
      "block": "test_forwards_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "1"
      ]
    },
    "303": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "305": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "0x62"
      ]
    },
    "306": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "308": {
      "op": "b test_forwards_for_body@1"
    },
    "311": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed",
      "params": {},
      "block": "test_reversed",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "314": {
      "op": "b test_reversed_block@0"
    },
    "317": {
      "block": "test_reversed_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "318": {
      "op": "bytec_1 // 0x63",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "319": {
      "op": "b test_reversed_for_body@1"
    },
    "322": {
      "block": "test_reversed_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "i#0"
      ]
    },
    "324": {
      "op": "log",
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "325": {
      "op": "b test_reversed_for_footer@2"
    },
    "328": {
      "block": "test_reversed_for_footer@2",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "loop_counter%0#0"
      ]
    },
    "330": {
      "op": "switch test_reversed_for_header_1@3 test_reversed_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "336": {
      "op": "b test_reversed_after_for@5"
    },
    "339": {
      "block": "test_reversed_after_for@5",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "340": {
      "block": "test_reversed_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "2"
      ]
    },
    "341": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "343": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "0x61"
      ]
    },
    "344": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "346": {
      "op": "b test_reversed_for_body@1"
    },
    "349": {
      "block": "test_reversed_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "1"
      ]
    },
    "350": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "352": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "0x62"
      ]
    },
    "353": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "355": {
      "op": "b test_reversed_for_body@1"
    },
    "358": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index",
      "params": {},
      "block": "test_forwards_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "361": {
      "op": "b test_forwards_with_forwards_index_block@0"
    },
    "364": {
      "block": "test_forwards_with_forwards_index_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x61",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "365": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "366": {
      "op": "b test_forwards_with_forwards_index_for_body@1"
    },
    "369": {
      "block": "test_forwards_with_forwards_index_for_body@1",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "371": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "i#0"
      ]
    },
    "373": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "376": {
      "op": "b test_forwards_with_forwards_index_for_footer@2"
    },
    "379": {
      "block": "test_forwards_with_forwards_index_for_footer@2",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "381": {
      "op": "switch test_forwards_with_forwards_index_for_header_1@3 test_forwards_with_forwards_index_for_header_2@4",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "387": {
      "op": "b test_forwards_with_forwards_index_after_for@5"
    },
    "390": {
      "block": "test_forwards_with_forwards_index_after_for@5",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "391": {
      "block": "test_forwards_with_forwards_index_for_header_2@4",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "0x63"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x63"
      ]
    },
    "392": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "394": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "2"
      ]
    },
    "395": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "397": {
      "op": "b test_forwards_with_forwards_index_for_body@1"
    },
    "400": {
      "block": "test_forwards_with_forwards_index_for_header_1@3",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x62"
      ]
    },
    "401": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "403": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "404": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "406": {
      "op": "b test_forwards_with_forwards_index_for_body@1"
    },
    "409": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index",
      "params": {},
      "block": "test_forwards_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "412": {
      "op": "b test_forwards_with_reverse_index_block@0"
    },
    "415": {
      "block": "test_forwards_with_reverse_index_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "416": {
      "op": "bytec_0 // 0x61",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "417": {
      "op": "intc_2 // 2",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "418": {
      "op": "b test_forwards_with_reverse_index_for_body@1"
    },
    "421": {
      "block": "test_forwards_with_reverse_index_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "423": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "idx#0",
        "i#0"
      ]
    },
    "425": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "428": {
      "op": "b test_forwards_with_reverse_index_for_footer@2"
    },
    "431": {
      "block": "test_forwards_with_reverse_index_for_footer@2",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ]
    },
    "433": {
      "op": "switch test_forwards_with_reverse_index_for_header_1@3 test_forwards_with_reverse_index_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "439": {
      "op": "b test_forwards_with_reverse_index_after_for@5"
    },
    "442": {
      "block": "test_forwards_with_reverse_index_after_for@5",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "443": {
      "block": "test_forwards_with_reverse_index_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "2"
      ]
    },
    "444": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "446": {
      "op": "bytec_1 // 0x63",
      "defined_out": [
        "0x63"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "0x63"
      ]
    },
    "447": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "449": {
      "op": "intc_1 // 0",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "0"
      ]
    },
    "450": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "452": {
      "op": "b test_forwards_with_reverse_index_for_body@1"
    },
    "455": {
      "block": "test_forwards_with_reverse_index_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "456": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "458": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "0x62"
      ]
    },
    "459": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "461": {
      "op": "intc_0 // 1",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "462": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "464": {
      "op": "b test_forwards_with_reverse_index_for_body@1"
    },
    "467": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index",
      "params": {},
      "block": "test_reverse_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "470": {
      "op": "b test_reverse_with_forwards_index_block@0"
    },
    "473": {
      "block": "test_reverse_with_forwards_index_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x63",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "474": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "475": {
      "op": "b test_reverse_with_forwards_index_for_body@1"
    },
    "478": {
      "block": "test_reverse_with_forwards_index_for_body@1",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "480": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "i#0"
      ]
    },
    "482": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "485": {
      "op": "b test_reverse_with_forwards_index_for_footer@2"
    },
    "488": {
      "block": "test_reverse_with_forwards_index_for_footer@2",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "490": {
      "op": "switch test_reverse_with_forwards_index_for_header_1@3 test_reverse_with_forwards_index_for_header_2@4",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "496": {
      "op": "b test_reverse_with_forwards_index_after_for@5"
    },
    "499": {
      "block": "test_reverse_with_forwards_index_after_for@5",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "500": {
      "block": "test_reverse_with_forwards_index_for_header_2@4",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x61"
      ]
    },
    "501": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "503": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "2"
      ]
    },
    "504": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "506": {
      "op": "b test_reverse_with_forwards_index_for_body@1"
    },
    "509": {
      "block": "test_reverse_with_forwards_index_for_header_1@3",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x62"
      ]
    },
    "510": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "512": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "513": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "515": {
      "op": "b test_reverse_with_forwards_index_for_body@1"
    },
    "518": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index",
      "params": {},
      "block": "test_reverse_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "521": {
      "op": "b test_reverse_with_reverse_index_block@0"
    },
    "524": {
      "block": "test_reverse_with_reverse_index_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "525": {
      "op": "bytec_1 // 0x63",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0"
      ]
    },
    "526": {
      "op": "intc_2 // 2",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "527": {
      "op": "b test_reverse_with_reverse_index_for_body@1"
    },
    "530": {
      "block": "test_reverse_with_reverse_index_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "532": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "idx#0",
        "i#0"
      ]
    },
    "534": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "537": {
      "op": "b test_reverse_with_reverse_index_for_footer@2"
    },
    "540": {
      "block": "test_reverse_with_reverse_index_for_footer@2",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "loop_counter%0#0"
      ]
    },
    "542": {
      "op": "switch test_reverse_with_reverse_index_for_header_1@3 test_reverse_with_reverse_index_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "548": {
      "op": "b test_reverse_with_reverse_index_after_for@5"
    },
    "551": {
      "block": "test_reverse_with_reverse_index_after_for@5",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "552": {
      "block": "test_reverse_with_reverse_index_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "2"
      ]
    },
    "553": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "555": {
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "0x61"
      ]
    },
    "556": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "558": {
      "op": "intc_1 // 0",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "0"
      ]
    },
    "559": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "561": {
      "op": "b test_reverse_with_reverse_index_for_body@1"
    },
    "564": {
      "block": "test_reverse_with_reverse_index_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "565": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "567": {
      "op": "bytec_2 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "0x62"
      ]
    },
    "568": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "570": {
      "op": "intc_0 // 1",
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "571": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "573": {
      "op": "b test_reverse_with_reverse_index_for_body@1"
    },
    "576": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty",
      "params": {},
      "block": "test_empty",
      "stack_in": [],
      "op": "b test_empty_block@0"
    },
    "579": {
      "block": "test_empty_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "580": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_break",
      "params": {},
      "block": "test_break",
      "stack_in": [],
      "op": "b test_break_block@0"
    },
    "583": {
      "block": "test_break_block@0",
      "stack_in": [],
      "op": "b test_break_for_body@1"
    },
    "586": {
      "block": "test_break_for_body@1",
      "stack_in": [],
      "op": "bytec_0 // 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "0x61"
      ]
    },
    "587": {
      "op": "log",
      "stack_out": []
    },
    "588": {
      "op": "b test_break_after_for@2"
    },
    "591": {
      "block": "test_break_after_for@2",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "592": {
      "subroutine": "test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target",
      "params": {},
      "block": "test_tuple_target",
      "stack_in": [],
      "op": "b test_tuple_target_block@0"
    },
    "595": {
      "block": "test_tuple_target_block@0",
      "stack_in": [],
      "op": "b test_tuple_target_for_body@1"
    },
    "598": {
      "block": "test_tuple_target_for_body@1",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "599": {
      "op": "pushbytes 0x74",
      "defined_out": [
        "0",
        "0x74"
      ],
      "stack_out": [
        "0",
        "0x74"
      ]
    },
    "602": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": []
    },
    "605": {
      "op": "b test_tuple_target_for_footer@2"
    },
    "608": {
      "block": "test_tuple_target_for_footer@2",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "609": {
      "op": "switch",
      "stack_out": []
    },
    "611": {
      "op": "b test_tuple_target_after_for@3"
    },
    "614": {
      "block": "test_tuple_target_after_for@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "615": {
      "subroutine": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "params": {
        "idx#0": "uint64",
        "value#0": "bytes"
      },
      "block": "_log_with_index",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "618": {
      "op": "b _log_with_index_block@0"
    },
    "621": {
      "block": "_log_with_index_block@0",
      "stack_in": [],
      "op": "pushbytes 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "633": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ]
    },
    "635": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)",
        "1"
      ]
    },
    "636": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "637": {
      "op": "pushbytes \"=\"",
      "defined_out": [
        "\"=\"",
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0",
        "\"=\""
      ]
    },
    "640": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "641": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ]
    },
    "643": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "644": {
      "op": "log",
      "stack_out": []
    },
    "645": {
      "retsub": true,
      "op": "retsub"
    }
  }
}