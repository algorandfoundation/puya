{
  "version": 3,
  "sources": [
    "../base.py",
    "../iterate_urange.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAOY;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACO;AAAP;ACjBR;;;;;;AAI8B;AAA9B;AAAwB;AAAA;;;;AAAxB;;AAA2B;AAA3B;AAAA;;;AAAA;;;AAAiB;;AADA;AAED;;AAAA;AAAA;AAAJ;AACK;AAAL;AAAA;;;;;AAFK;;AAAa;AAAb;AAAA;;;;;AAGF;;AAAK;;AAAL;AAAP;;AAER;;;;;;;;AAIuC;AAAvC;AAAiC;AAAG;AAApC;AAAA;;;AAAA;;;AAAoC;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;AAAO;AAAP;;;;;;AADT;AAED;;AAAA;AAAA;;AAAA;AAAA;AAAJ;AACK;AAAL;AAAA;;;;;AAFqB;AAAP;;AAAA;AAA1B;;;AAAA;;;AAA0B;;AAAa;AAAb;;;;;;AAGX;;AAAK;AAAL;AAAP;;AAER;;;;;;AAI8C;AAA9C;AAAwC;;AAAA;;;;;AAAxC;;AAA2C;AAA3C;AAAA;;;AAAA;;;AAAiC;;AAAA;;AAAA;;AADhB;AAEqB;;AAAA;AAAA;AAA1B;;AAAA;;AAAA;;;AACK;AAAL;AAAA;;AACO;AAAP;AAAA;;;;;AAHqB;;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAIlB;;AAAK;;AAAL;AAAP;AACO;;AAAO;;AAAP;AAAP;;AAER;;;;;;;;;;;AAIgE;AAAhE;AAA0D;AAAG;AAA7D;AAAA;;;AAAA;;;AAA6D;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;;AAAA;AAAO;AAAP;AAAA;;AAAO;AAA9C;;;;;;;;;AADK;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;;AAAA;;;AACK;AAAL;AAAA;;AACO;AAAP;AAAA;;;;;AAHuC;;AAAA;;AAAA;AAAnD;;;AAAA;;;AAAmD;;AAAa;AAAb;AAAA;;AAAA;AAAA;;;;;;;;AAIpC;;AAAK;;AAAL;AAAP;AACO;;AAAO;AAAP;AAAP;;AAER;;;;;;;;;;AAIuD;AAAvD;AAAiD;AAAG;AAApD;AAAA;;;AAAA;;;AAAoD;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;AAAO;AAAP;;;;;;;;;AADzB;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;;AAAA;;;AACK;AAAL;AAAA;;AACO;AAAP;AAAA;;;;;AAHqC;AAAP;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAa;AAAb;AAAA;;AAAA;AAAA;;;;;;;;AAI3B;;AAAK;AAAL;AAAP;AACO;;AAAO;;AAAP;AAAP;;AAER;;;;;;;;;;AAIuD;AAAvD;AAAiD;AAAG;AAApD;AAAA;;;AAAA;;;AAAoD;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;;AAAA;AAAO;AAAP;AAA9B;;;;;;;;;AADK;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;;AAAA;;;AACK;AAAL;AAAA;;AACO;AAAP;AAAA;;;;;AAHqC;AAAP;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAa;AAAb;AAAA;;AAAA;AAAA;;;;;;;;AAI3B;;AAAK;AAAL;AAAP;AACO;;AAAO;AAAP;AAAP;;AAER;;;;;;;;;;;AAGiB;AAAjB;AAAiB;;;;AAAjB;;AAAwB;AAAxB;AAAA;;;AAAA;;;AAAiB;;AACD;AAAJ;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAES;AAA1B;AAA0B;AAAO;AAAjC;AAAA;;;AAAA;;;AAAiC;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;;;;;AACI;;AAAA;AAAJ;;;;AADc;AAAA;;AAAA;AAA1B;;;AAAA;;;AAA0B;;AAAA;AAAA;AAAA;;;;;AAEO;AAAjC;AAAiC;AAAA;;;AAAA;;;;;AAAjC;;AAAwC;AAAxC;AAAA;;;AAAA;;;AAAiC;;AAAA;;AACjB;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AADqB;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAEkB;AAAnD;AAAmD;AAAO;AAA1D;AAAA;;;AAAA;;;AAA0D;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAvC;;AAAA;;;;;AACI;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AADuC;;AAAA;;AAAA;AAAnD;;;AAAA;;;AAAmD;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAET;AAA1C;AAA0C;AAAO;AAAjD;AAAA;;;AAAA;;;AAAiD;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B;;;AAAA;;;;;AACI;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AAD8B;AAAA;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAEA;AAA1C;AAA0C;AAAO;AAAjD;AAAA;;;AAAA;;;AAAiD;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAA9B;;AAAA;;;;;AACI;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AAD8B;AAAA;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;AAOZ;AAA9B;;;;AAAwB;AAAG;AAA3B;AAAA;;;AAAA;;;AADiB;AACO;AACR;AAAA;AAAJ;AACA;;;AAFY;AAGJ;AAAL;AAAP;;AAER;;;;;;AAI8B;AAA9B;AAA8B;;AAAA;;;;;AAA9B;;AAAqC;AAArC;AAAA;;;AAAA;;;AAA8B;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AADb;;;AAEwB;;AAAA;AAAA;AAA7B;;;;;;AADkB;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAEf;;AAAQ;AAAR;AAAA;;AAAmB;AAAnB;AAAA;AAAP;;ADvER;;;;;;AAEiB;;;;;;;;;;;;AACL;;AAAA;AAAA;AAAwB;;;AAAX;AAAA;;AAAA;AAAjB;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.iteration.base.IterationTestBase.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 7"
    },
    "7": {
      "op": "bytecblock \"\" 0x206120622063"
    },
    "17": {
      "op": "b main_block@0"
    },
    "20": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "pushbytes \"test_forwards\"",
      "defined_out": [
        "\"test_forwards\""
      ],
      "stack_out": [
        "\"test_forwards\""
      ]
    },
    "35": {
      "op": "log",
      "stack_out": []
    },
    "36": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards",
      "op": "callsub test_forwards"
    },
    "39": {
      "op": "pushbytes \"test_reversed\"",
      "defined_out": [
        "\"test_reversed\""
      ],
      "stack_out": [
        "\"test_reversed\""
      ]
    },
    "54": {
      "op": "log",
      "stack_out": []
    },
    "55": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed",
      "op": "callsub test_reversed"
    },
    "58": {
      "op": "pushbytes \"test_forwards_with_forwards_index\"",
      "defined_out": [
        "\"test_forwards_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_forwards_index\""
      ]
    },
    "93": {
      "op": "log",
      "stack_out": []
    },
    "94": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index",
      "op": "callsub test_forwards_with_forwards_index"
    },
    "97": {
      "op": "pushbytes \"test_forwards_with_reverse_index\"",
      "defined_out": [
        "\"test_forwards_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_reverse_index\""
      ]
    },
    "131": {
      "op": "log",
      "stack_out": []
    },
    "132": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index",
      "op": "callsub test_forwards_with_reverse_index"
    },
    "135": {
      "op": "pushbytes \"test_reverse_with_forwards_index\"",
      "defined_out": [
        "\"test_reverse_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_forwards_index\""
      ]
    },
    "169": {
      "op": "log",
      "stack_out": []
    },
    "170": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index",
      "op": "callsub test_reverse_with_forwards_index"
    },
    "173": {
      "op": "pushbytes \"test_reverse_with_reverse_index\"",
      "defined_out": [
        "\"test_reverse_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_reverse_index\""
      ]
    },
    "206": {
      "op": "log",
      "stack_out": []
    },
    "207": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index",
      "op": "callsub test_reverse_with_reverse_index"
    },
    "210": {
      "op": "pushbytes \"test_empty\"",
      "defined_out": [
        "\"test_empty\""
      ],
      "stack_out": [
        "\"test_empty\""
      ]
    },
    "222": {
      "op": "log",
      "stack_out": []
    },
    "223": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_empty",
      "op": "callsub test_empty"
    },
    "226": {
      "op": "pushbytes \"test_break\"",
      "defined_out": [
        "\"test_break\""
      ],
      "stack_out": [
        "\"test_break\""
      ]
    },
    "238": {
      "op": "log",
      "stack_out": []
    },
    "239": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_break",
      "op": "callsub test_break"
    },
    "242": {
      "op": "pushbytes \"test_tuple_target\"",
      "defined_out": [
        "\"test_tuple_target\""
      ],
      "stack_out": [
        "\"test_tuple_target\""
      ]
    },
    "261": {
      "op": "log",
      "stack_out": []
    },
    "262": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target",
      "op": "callsub test_tuple_target"
    },
    "265": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "266": {
      "op": "return",
      "stack_out": []
    },
    "267": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards",
      "params": {},
      "block": "test_forwards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "270": {
      "op": "b test_forwards_block@0"
    },
    "273": {
      "block": "test_forwards_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "274": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "275": {
      "op": "intc_0 // 1",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "276": {
      "op": "intc_0 // 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "value_internal%0#0"
      ]
    },
    "277": {
      "op": "b test_forwards_for_header@1"
    },
    "280": {
      "block": "test_forwards_for_header@1",
      "stack_in": [
        "i#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "282": {
      "op": "intc_3 // 7",
      "defined_out": [
        "7",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "7"
      ]
    },
    "283": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "284": {
      "op": "bz test_forwards_after_for@4",
      "stack_out": [
        "i#0",
        "value_internal%0#0"
      ]
    },
    "287": {
      "op": "b test_forwards_for_body@2"
    },
    "290": {
      "block": "test_forwards_for_body@2",
      "stack_in": [
        "i#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "292": {
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0",
        "0x206120622063"
      ]
    },
    "293": {
      "op": "dig 1",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "295": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "296": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "297": {
      "op": "log",
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "298": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0",
        "1"
      ]
    },
    "299": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "300": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0"
      ]
    },
    "302": {
      "op": "b test_forwards_for_footer@3"
    },
    "305": {
      "block": "test_forwards_for_footer@3",
      "stack_in": [
        "i#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "307": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "2"
      ]
    },
    "308": {
      "op": "+",
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "309": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0"
      ]
    },
    "311": {
      "op": "b test_forwards_for_header@1"
    },
    "314": {
      "block": "test_forwards_after_for@4",
      "stack_in": [
        "i#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0"
      ]
    },
    "316": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "i#0",
        "6"
      ]
    },
    "318": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "319": {
      "op": "assert",
      "stack_out": [
        "i#0",
        "value_internal%0#0"
      ]
    },
    "320": {
      "retsub": true,
      "op": "retsub"
    },
    "321": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed",
      "params": {},
      "block": "test_reversed",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "324": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "325": {
      "op": "b test_reversed_block@0"
    },
    "328": {
      "block": "test_reversed_block@0",
      "stack_in": [
        "i#1"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "329": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "2"
      ]
    },
    "330": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "331": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "1"
      ]
    },
    "332": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "1",
        "7"
      ]
    },
    "333": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "should_loop%0#0"
      ]
    },
    "334": {
      "op": "bz test_reversed_after_for@5",
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "337": {
      "op": "b test_reversed_for_header@1"
    },
    "340": {
      "block": "test_reversed_for_header@1",
      "stack_in": [
        "i#1",
        "i#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "7"
      ]
    },
    "341": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "7",
        "1"
      ]
    },
    "342": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "range_length%0#0"
      ]
    },
    "343": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "i#0",
        "range_length%0#0",
        "1"
      ]
    },
    "344": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "range_length_minus_one%0#0"
      ]
    },
    "345": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "346": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "347": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#1",
        "i#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "348": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "range_delta%0#0"
      ]
    },
    "349": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "i#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "350": {
      "op": "+",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "351": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "353": {
      "op": "b test_reversed_for_body@2"
    },
    "356": {
      "block": "test_reversed_for_body@2",
      "stack_in": [
        "i#1",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "357": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "0x206120622063",
        "i#1"
      ]
    },
    "359": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "0x206120622063",
        "i#1 (copy)",
        "i#1 (copy)"
      ]
    },
    "360": {
      "op": "cover 2",
      "stack_out": [
        "i#1",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)"
      ]
    },
    "362": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)",
        "1"
      ]
    },
    "363": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#1",
        "extract%0#0"
      ]
    },
    "364": {
      "op": "log",
      "stack_out": [
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "365": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "i#0",
        "i#1",
        "1"
      ]
    },
    "366": {
      "op": "+",
      "defined_out": [
        "i#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "tmp%0#0"
      ]
    },
    "367": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "369": {
      "op": "b test_reversed_for_footer@3"
    },
    "372": {
      "block": "test_reversed_for_footer@3",
      "stack_in": [
        "i#1",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "1"
      ]
    },
    "373": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "1",
        "i#1"
      ]
    },
    "375": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "376": {
      "op": "bz test_reversed_after_for@5",
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "379": {
      "op": "b test_reversed_for_increment@4"
    },
    "382": {
      "block": "test_reversed_for_increment@4",
      "stack_in": [
        "i#1",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "384": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "385": {
      "op": "-",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "386": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "388": {
      "op": "b test_reversed_for_body@2"
    },
    "391": {
      "block": "test_reversed_after_for@5",
      "stack_in": [
        "i#1",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "393": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "394": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#1",
        "i#0",
        "tmp%1#0"
      ]
    },
    "395": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "i#0"
      ]
    },
    "396": {
      "retsub": true,
      "op": "retsub"
    },
    "397": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index",
      "params": {},
      "block": "test_forwards_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "400": {
      "op": "b test_forwards_with_forwards_index_block@0"
    },
    "403": {
      "block": "test_forwards_with_forwards_index_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "404": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "405": {
      "op": "intc_0 // 1",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "406": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "407": {
      "op": "intc_0 // 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0"
      ]
    },
    "408": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "409": {
      "op": "b test_forwards_with_forwards_index_for_header@1"
    },
    "412": {
      "block": "test_forwards_with_forwards_index_for_header@1",
      "stack_in": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "414": {
      "op": "intc_3 // 7",
      "defined_out": [
        "7",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0",
        "7"
      ]
    },
    "415": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "416": {
      "op": "bz test_forwards_with_forwards_index_after_for@4",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "419": {
      "op": "b test_forwards_with_forwards_index_for_body@2"
    },
    "422": {
      "block": "test_forwards_with_forwards_index_for_body@2",
      "stack_in": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "424": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "426": {
      "op": "cover 1",
      "defined_out": [
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "428": {
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "0x206120622063"
      ]
    },
    "429": {
      "op": "dig 1",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "431": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "432": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "433": {
      "op": "dig 2",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0",
        "idx#0 (copy)",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)"
      ]
    },
    "435": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "idx#0 (copy)",
        "extract%0#0"
      ]
    },
    "437": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "440": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "441": {
      "op": "+",
      "defined_out": [
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "tmp%0#0"
      ]
    },
    "442": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0"
      ]
    },
    "444": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "1"
      ]
    },
    "445": {
      "op": "+",
      "defined_out": [
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "446": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "448": {
      "op": "b test_forwards_with_forwards_index_for_footer@3"
    },
    "451": {
      "block": "test_forwards_with_forwards_index_for_footer@3",
      "stack_in": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "453": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0",
        "2"
      ]
    },
    "454": {
      "op": "+",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "455": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "457": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "459": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "460": {
      "op": "+",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "461": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "463": {
      "op": "b test_forwards_with_forwards_index_for_header@1"
    },
    "466": {
      "block": "test_forwards_with_forwards_index_after_for@4",
      "stack_in": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "468": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "i#0",
        "6"
      ]
    },
    "470": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "471": {
      "op": "assert",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "472": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0"
      ]
    },
    "474": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "3"
      ]
    },
    "476": {
      "op": "==",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%3#0"
      ]
    },
    "477": {
      "op": "assert",
      "stack_out": [
        "i#0",
        "idx#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "478": {
      "retsub": true,
      "op": "retsub"
    },
    "479": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index",
      "params": {},
      "block": "test_forwards_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "482": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "483": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1"
      ]
    },
    "484": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0"
      ]
    },
    "485": {
      "op": "b test_forwards_with_reverse_index_block@0"
    },
    "488": {
      "block": "test_forwards_with_reverse_index_block@0",
      "stack_in": [
        "i#1",
        "idx#1",
        "max_range_item%0#0"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0"
      ]
    },
    "489": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "490": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "491": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "492": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "493": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "1",
        "7"
      ]
    },
    "494": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "should_loop%0#0"
      ]
    },
    "495": {
      "op": "bz test_forwards_with_reverse_index_after_for@5",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "498": {
      "op": "b test_forwards_with_reverse_index_for_header@1"
    },
    "501": {
      "block": "test_forwards_with_reverse_index_for_header@1",
      "stack_in": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "7"
      ]
    },
    "502": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "7",
        "1"
      ]
    },
    "503": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "range_length%0#0"
      ]
    },
    "504": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "range_length%0#0",
        "1"
      ]
    },
    "505": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "range_length_minus_one%0#0"
      ]
    },
    "506": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "507": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "508": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "509": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "iteration_count_minus_one%0#0",
        "iteration_count_minus_one%0#0 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "2",
        "iteration_count_minus_one%0#0 (copy)"
      ]
    },
    "511": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ]
    },
    "512": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "513": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ]
    },
    "514": {
      "op": "frame_bury 2",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "516": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "i#0"
      ]
    },
    "517": {
      "op": "uncover 1",
      "defined_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "519": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "521": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "523": {
      "op": "b test_forwards_with_reverse_index_for_body@2"
    },
    "526": {
      "block": "test_forwards_with_reverse_index_for_body@2",
      "stack_in": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "0x206120622063"
      ]
    },
    "527": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#1"
      ]
    },
    "529": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#1 (copy)",
        "i#1 (copy)"
      ]
    },
    "530": {
      "op": "cover 2",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)"
      ]
    },
    "532": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)",
        "1"
      ]
    },
    "533": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0"
      ]
    },
    "534": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0",
        "idx#1"
      ]
    },
    "536": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#1",
        "idx#1",
        "idx#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0",
        "idx#1 (copy)",
        "idx#1 (copy)"
      ]
    },
    "537": {
      "op": "cover 3",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "extract%0#0",
        "idx#1 (copy)"
      ]
    },
    "539": {
      "op": "uncover 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "idx#1 (copy)",
        "extract%0#0"
      ]
    },
    "541": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1"
      ]
    },
    "544": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "1"
      ]
    },
    "545": {
      "op": "+",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1",
        "tmp%0#0"
      ]
    },
    "546": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1"
      ]
    },
    "548": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#1",
        "1"
      ]
    },
    "549": {
      "op": "+",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "550": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "552": {
      "op": "b test_forwards_with_reverse_index_for_footer@3"
    },
    "555": {
      "block": "test_forwards_with_reverse_index_for_footer@3",
      "stack_in": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "557": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#1",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "max_range_item%0#0"
      ]
    },
    "559": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#1",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "560": {
      "op": "bz test_forwards_with_reverse_index_after_for@5",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "563": {
      "op": "b test_forwards_with_reverse_index_for_increment@4"
    },
    "566": {
      "block": "test_forwards_with_reverse_index_for_increment@4",
      "stack_in": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "568": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "569": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "570": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0",
        "idx#1"
      ]
    },
    "572": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0",
        "idx#1",
        "1"
      ]
    },
    "573": {
      "op": "-",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "574": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "576": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "578": {
      "op": "b test_forwards_with_reverse_index_for_body@2"
    },
    "581": {
      "block": "test_forwards_with_reverse_index_after_for@5",
      "stack_in": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "583": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "i#0",
        "6"
      ]
    },
    "585": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "586": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "587": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "589": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "590": {
      "op": "==",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "591": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "idx#1",
        "max_range_item%0#0",
        "idx#0",
        "i#0"
      ]
    },
    "592": {
      "retsub": true,
      "op": "retsub"
    },
    "593": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index",
      "params": {},
      "block": "test_reverse_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "596": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "597": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1"
      ]
    },
    "598": {
      "op": "b test_reverse_with_forwards_index_block@0"
    },
    "601": {
      "block": "test_reverse_with_forwards_index_block@0",
      "stack_in": [
        "i#1",
        "idx#1"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0"
      ]
    },
    "602": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "603": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "604": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "605": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "606": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1",
        "7"
      ]
    },
    "607": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "should_loop%0#0"
      ]
    },
    "608": {
      "op": "bz test_reverse_with_forwards_index_after_for@5",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "611": {
      "op": "b test_reverse_with_forwards_index_for_header@1"
    },
    "614": {
      "block": "test_reverse_with_forwards_index_for_header@1",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "7"
      ]
    },
    "615": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "7",
        "1"
      ]
    },
    "616": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length%0#0"
      ]
    },
    "617": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length%0#0",
        "1"
      ]
    },
    "618": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length_minus_one%0#0"
      ]
    },
    "619": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "620": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "621": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "622": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_delta%0#0"
      ]
    },
    "623": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "624": {
      "op": "+",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "625": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "626": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "628": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "630": {
      "op": "b test_reverse_with_forwards_index_for_body@2"
    },
    "633": {
      "block": "test_reverse_with_forwards_index_for_body@2",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "0x206120622063"
      ]
    },
    "634": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#1"
      ]
    },
    "636": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#1 (copy)",
        "i#1 (copy)"
      ]
    },
    "637": {
      "op": "cover 2",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)"
      ]
    },
    "639": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)",
        "1"
      ]
    },
    "640": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0"
      ]
    },
    "641": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0",
        "idx#1"
      ]
    },
    "643": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#1",
        "idx#1",
        "idx#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0",
        "idx#1 (copy)",
        "idx#1 (copy)"
      ]
    },
    "644": {
      "op": "cover 3",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "extract%0#0",
        "idx#1 (copy)"
      ]
    },
    "646": {
      "op": "uncover 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "idx#1 (copy)",
        "extract%0#0"
      ]
    },
    "648": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1"
      ]
    },
    "651": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "1"
      ]
    },
    "652": {
      "op": "+",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "tmp%0#0"
      ]
    },
    "653": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1"
      ]
    },
    "655": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "1"
      ]
    },
    "656": {
      "op": "+",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "657": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "659": {
      "op": "b test_reverse_with_forwards_index_for_footer@3"
    },
    "662": {
      "block": "test_reverse_with_forwards_index_for_footer@3",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "663": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1",
        "i#1"
      ]
    },
    "665": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "666": {
      "op": "bz test_reverse_with_forwards_index_after_for@5",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "669": {
      "op": "b test_reverse_with_forwards_index_for_increment@4"
    },
    "672": {
      "block": "test_reverse_with_forwards_index_for_increment@4",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "674": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "675": {
      "op": "-",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "676": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#1"
      ]
    },
    "678": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#1",
        "1"
      ]
    },
    "679": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "680": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "682": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "684": {
      "op": "b test_reverse_with_forwards_index_for_body@2"
    },
    "687": {
      "block": "test_reverse_with_forwards_index_after_for@5",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "689": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "690": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "691": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "692": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "694": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#0",
        "3"
      ]
    },
    "696": {
      "op": "==",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "697": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "698": {
      "retsub": true,
      "op": "retsub"
    },
    "699": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index",
      "params": {},
      "block": "test_reverse_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "702": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "703": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1"
      ]
    },
    "704": {
      "op": "b test_reverse_with_reverse_index_block@0"
    },
    "707": {
      "block": "test_reverse_with_reverse_index_block@0",
      "stack_in": [
        "i#1",
        "idx#1"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0"
      ]
    },
    "708": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "709": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "710": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "711": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "712": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1",
        "7"
      ]
    },
    "713": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "should_loop%0#0"
      ]
    },
    "714": {
      "op": "bz test_reverse_with_reverse_index_after_for@5",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "717": {
      "op": "b test_reverse_with_reverse_index_for_header@1"
    },
    "720": {
      "block": "test_reverse_with_reverse_index_for_header@1",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "7"
      ]
    },
    "721": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "7",
        "1"
      ]
    },
    "722": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length%0#0"
      ]
    },
    "723": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length%0#0",
        "1"
      ]
    },
    "724": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length_minus_one%0#0"
      ]
    },
    "725": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "726": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "727": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "728": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "iteration_count_minus_one%0#0",
        "iteration_count_minus_one%0#0 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "2",
        "iteration_count_minus_one%0#0 (copy)"
      ]
    },
    "730": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ]
    },
    "731": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "732": {
      "op": "+",
      "defined_out": [
        "i#0",
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "i#0"
      ]
    },
    "733": {
      "op": "uncover 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "735": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "737": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "739": {
      "op": "b test_reverse_with_reverse_index_for_body@2"
    },
    "742": {
      "block": "test_reverse_with_reverse_index_for_body@2",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "0x206120622063"
      ]
    },
    "743": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#1"
      ]
    },
    "745": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "0x206120622063",
        "i#1 (copy)",
        "i#1 (copy)"
      ]
    },
    "746": {
      "op": "cover 2",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)"
      ]
    },
    "748": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#1",
        "i#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "0x206120622063",
        "i#1 (copy)",
        "1"
      ]
    },
    "749": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0"
      ]
    },
    "750": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0",
        "idx#1"
      ]
    },
    "752": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#1",
        "idx#1",
        "idx#1 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "extract%0#0",
        "idx#1 (copy)",
        "idx#1 (copy)"
      ]
    },
    "753": {
      "op": "cover 3",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "extract%0#0",
        "idx#1 (copy)"
      ]
    },
    "755": {
      "op": "uncover 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "idx#1 (copy)",
        "extract%0#0"
      ]
    },
    "757": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1"
      ]
    },
    "760": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "i#1",
        "1"
      ]
    },
    "761": {
      "op": "+",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "tmp%0#0"
      ]
    },
    "762": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1"
      ]
    },
    "764": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#1",
        "1"
      ]
    },
    "765": {
      "op": "+",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "766": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "768": {
      "op": "b test_reverse_with_reverse_index_for_footer@3"
    },
    "771": {
      "block": "test_reverse_with_reverse_index_for_footer@3",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "772": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "1",
        "i#1"
      ]
    },
    "774": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "775": {
      "op": "bz test_reverse_with_reverse_index_after_for@5",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "778": {
      "op": "b test_reverse_with_reverse_index_for_increment@4"
    },
    "781": {
      "block": "test_reverse_with_reverse_index_for_increment@4",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "783": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "784": {
      "op": "-",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "785": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#1"
      ]
    },
    "787": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#1",
        "1"
      ]
    },
    "788": {
      "op": "-",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "789": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "791": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "793": {
      "op": "b test_reverse_with_reverse_index_for_body@2"
    },
    "796": {
      "block": "test_reverse_with_reverse_index_after_for@5",
      "stack_in": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0"
      ]
    },
    "798": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "799": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "800": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "801": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#0"
      ]
    },
    "803": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "804": {
      "op": "==",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "805": {
      "op": "assert",
      "stack_out": [
        "i#1",
        "idx#1",
        "idx#0",
        "i#0"
      ]
    },
    "806": {
      "retsub": true,
      "op": "retsub"
    },
    "807": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_empty",
      "params": {},
      "block": "test_empty",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "810": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "811": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1"
      ]
    },
    "812": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0"
      ]
    },
    "813": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0"
      ]
    },
    "814": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0"
      ]
    },
    "815": {
      "op": "b test_empty_block@0"
    },
    "818": {
      "block": "test_empty_block@0",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "1"
      ]
    },
    "819": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0"
      ]
    },
    "820": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "821": {
      "op": "b test_empty_for_header@1"
    },
    "824": {
      "block": "test_empty_for_header@1",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "826": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "827": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "828": {
      "op": "bz test_empty_after_for@4",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "831": {
      "op": "b test_empty_for_body@2"
    },
    "834": {
      "block": "test_empty_for_body@2",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "836": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "837": {
      "op": "log",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "838": {
      "op": "b test_empty_for_footer@3"
    },
    "841": {
      "block": "test_empty_for_footer@3",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "843": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "844": {
      "op": "+",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "845": {
      "op": "frame_bury 5",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "847": {
      "op": "b test_empty_for_header@1"
    },
    "850": {
      "block": "test_empty_after_for@4",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "851": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "852": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "853": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "854": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "should_loop%0#0"
      ]
    },
    "855": {
      "op": "bz test_empty_after_for@9",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "858": {
      "op": "b test_empty_for_header@5"
    },
    "861": {
      "block": "test_empty_for_header@5",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "862": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "863": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%0#0"
      ]
    },
    "864": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%0#0",
        "1"
      ]
    },
    "865": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%0#0"
      ]
    },
    "866": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%0#0",
        "1"
      ]
    },
    "867": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "868": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%0#0",
        "1"
      ]
    },
    "869": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_delta%0#0"
      ]
    },
    "870": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_delta%0#0",
        "0"
      ]
    },
    "871": {
      "op": "+",
      "defined_out": [
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "max_range_item%0#0"
      ]
    },
    "872": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "874": {
      "op": "b test_empty_for_body@6"
    },
    "877": {
      "block": "test_empty_for_body@6",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "879": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "880": {
      "op": "log",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "881": {
      "op": "b test_empty_for_footer@7"
    },
    "884": {
      "block": "test_empty_for_footer@7",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "885": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "i#1"
      ]
    },
    "887": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "888": {
      "op": "bz test_empty_after_for@9",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "891": {
      "op": "b test_empty_for_increment@8"
    },
    "894": {
      "block": "test_empty_for_increment@8",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "896": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "1"
      ]
    },
    "897": {
      "op": "-",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "898": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "900": {
      "op": "b test_empty_for_body@6"
    },
    "903": {
      "block": "test_empty_after_for@9",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "904": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "905": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "906": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "908": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "909": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "911": {
      "op": "b test_empty_for_header@10"
    },
    "914": {
      "block": "test_empty_for_header@10",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "916": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "0"
      ]
    },
    "917": {
      "op": "<",
      "defined_out": [
        "continue_looping%2#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%2#0"
      ]
    },
    "918": {
      "op": "bz test_empty_after_for@13",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "921": {
      "op": "b test_empty_for_body@11"
    },
    "924": {
      "block": "test_empty_for_body@11",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#1",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "926": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "idx#1"
      ]
    },
    "928": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "tmp%2#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "tmp%2#0"
      ]
    },
    "929": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "tmp%2#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "tmp%2#0",
        "\"\""
      ]
    },
    "930": {
      "op": "concat",
      "defined_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "tmp%3#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "tmp%3#0"
      ]
    },
    "931": {
      "op": "uncover 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%3#0",
        "i#1"
      ]
    },
    "933": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "934": {
      "op": "concat",
      "defined_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "tmp%5#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%5#0"
      ]
    },
    "935": {
      "op": "log",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "936": {
      "op": "b test_empty_for_footer@12"
    },
    "939": {
      "block": "test_empty_for_footer@12",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "941": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0",
        "1"
      ]
    },
    "942": {
      "op": "+",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "value_internal%1#0"
      ]
    },
    "943": {
      "op": "frame_bury 4",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "945": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "947": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "948": {
      "op": "+",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "949": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "951": {
      "op": "b test_empty_for_header@10"
    },
    "954": {
      "block": "test_empty_after_for@13",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "955": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "956": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "957": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "958": {
      "op": "<",
      "defined_out": [
        "should_loop%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "should_loop%1#0"
      ]
    },
    "959": {
      "op": "bz test_empty_after_for@18",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "962": {
      "op": "b test_empty_for_header@14"
    },
    "965": {
      "block": "test_empty_for_header@14",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "966": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "967": {
      "op": "-",
      "defined_out": [
        "range_length%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%1#0"
      ]
    },
    "968": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%1#0",
        "1"
      ]
    },
    "969": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%1#0"
      ]
    },
    "970": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%1#0",
        "1"
      ]
    },
    "971": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0"
      ]
    },
    "972": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0",
        "1"
      ]
    },
    "973": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "iteration_count_minus_one%1#0",
        "iteration_count_minus_one%1#0 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0",
        "1",
        "iteration_count_minus_one%1#0 (copy)"
      ]
    },
    "975": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%1#0",
        "range_delta%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0",
        "range_delta%1#0"
      ]
    },
    "976": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0",
        "range_delta%1#0",
        "0"
      ]
    },
    "977": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%1#0",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0",
        "max_range_item%1#0"
      ]
    },
    "978": {
      "op": "frame_bury 3",
      "defined_out": [
        "iteration_count_minus_one%1#0",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0"
      ]
    },
    "980": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0",
        "0"
      ]
    },
    "981": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%1#0"
      ]
    },
    "983": {
      "op": "frame_bury 1",
      "defined_out": [
        "max_range_item%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "985": {
      "op": "b test_empty_for_body@15"
    },
    "988": {
      "block": "test_empty_for_body@15",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "990": {
      "op": "itob",
      "defined_out": [
        "idx#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%6#0"
      ]
    },
    "991": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%6#0",
        "\"\""
      ]
    },
    "992": {
      "op": "concat",
      "defined_out": [
        "idx#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%7#0"
      ]
    },
    "993": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%7#0",
        "i#1"
      ]
    },
    "995": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "996": {
      "op": "concat",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%9#0"
      ]
    },
    "997": {
      "op": "log",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "998": {
      "op": "b test_empty_for_footer@16"
    },
    "1001": {
      "block": "test_empty_for_footer@16",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1003": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#1",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "max_range_item%1#0"
      ]
    },
    "1005": {
      "op": "<",
      "defined_out": [
        "continue_looping%3#0",
        "i#1",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%3#0"
      ]
    },
    "1006": {
      "op": "bz test_empty_after_for@18",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1009": {
      "op": "b test_empty_for_increment@17"
    },
    "1012": {
      "block": "test_empty_for_increment@17",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1014": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "1"
      ]
    },
    "1015": {
      "op": "+",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1016": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1018": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1020": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1",
        "1"
      ]
    },
    "1021": {
      "op": "-",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1022": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1024": {
      "op": "b test_empty_for_body@15"
    },
    "1027": {
      "block": "test_empty_after_for@18",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1028": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1029": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1030": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "1031": {
      "op": "<",
      "defined_out": [
        "should_loop%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "should_loop%2#0"
      ]
    },
    "1032": {
      "op": "bz test_empty_after_for@23",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1035": {
      "op": "b test_empty_for_header@19"
    },
    "1038": {
      "block": "test_empty_for_header@19",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1039": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "1040": {
      "op": "-",
      "defined_out": [
        "range_length%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%2#0"
      ]
    },
    "1041": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%2#0",
        "1"
      ]
    },
    "1042": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%2#0"
      ]
    },
    "1043": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%2#0",
        "1"
      ]
    },
    "1044": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%2#0"
      ]
    },
    "1045": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%2#0",
        "1"
      ]
    },
    "1046": {
      "op": "*",
      "defined_out": [
        "range_delta%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_delta%2#0"
      ]
    },
    "1047": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_delta%2#0",
        "0"
      ]
    },
    "1048": {
      "op": "+",
      "defined_out": [
        "max_range_item%2#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "max_range_item%2#0"
      ]
    },
    "1049": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1051": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1052": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1054": {
      "op": "b test_empty_for_body@20"
    },
    "1057": {
      "block": "test_empty_for_body@20",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1059": {
      "op": "itob",
      "defined_out": [
        "idx#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%10#0"
      ]
    },
    "1060": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%10#0",
        "\"\""
      ]
    },
    "1061": {
      "op": "concat",
      "defined_out": [
        "idx#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%11#0"
      ]
    },
    "1062": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%11#0",
        "i#1"
      ]
    },
    "1064": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1065": {
      "op": "concat",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%13#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%13#0"
      ]
    },
    "1066": {
      "op": "log",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1067": {
      "op": "b test_empty_for_footer@21"
    },
    "1070": {
      "block": "test_empty_for_footer@21",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1071": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "i#1"
      ]
    },
    "1073": {
      "op": "<",
      "defined_out": [
        "continue_looping%4#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%4#0"
      ]
    },
    "1074": {
      "op": "bz test_empty_after_for@23",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1077": {
      "op": "b test_empty_for_increment@22"
    },
    "1080": {
      "block": "test_empty_for_increment@22",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1082": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "1"
      ]
    },
    "1083": {
      "op": "-",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1084": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1086": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1088": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1",
        "1"
      ]
    },
    "1089": {
      "op": "+",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1090": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1092": {
      "op": "b test_empty_for_body@20"
    },
    "1095": {
      "block": "test_empty_after_for@23",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1096": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1097": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1098": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "1099": {
      "op": "<",
      "defined_out": [
        "should_loop%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "should_loop%3#0"
      ]
    },
    "1100": {
      "op": "bz test_empty_after_for@28",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1103": {
      "op": "b test_empty_for_header@24"
    },
    "1106": {
      "block": "test_empty_for_header@24",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1107": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "0"
      ]
    },
    "1108": {
      "op": "-",
      "defined_out": [
        "range_length%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%3#0"
      ]
    },
    "1109": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length%3#0",
        "1"
      ]
    },
    "1110": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%3#0"
      ]
    },
    "1111": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "range_length_minus_one%3#0",
        "1"
      ]
    },
    "1112": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0"
      ]
    },
    "1113": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0",
        "1"
      ]
    },
    "1114": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "iteration_count_minus_one%3#0",
        "iteration_count_minus_one%3#0 (copy)"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0",
        "1",
        "iteration_count_minus_one%3#0 (copy)"
      ]
    },
    "1116": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%3#0",
        "range_delta%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0",
        "range_delta%3#0"
      ]
    },
    "1117": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0",
        "range_delta%3#0",
        "0"
      ]
    },
    "1118": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%3#0",
        "max_range_item%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0",
        "max_range_item%3#0"
      ]
    },
    "1119": {
      "op": "frame_bury 0",
      "defined_out": [
        "iteration_count_minus_one%3#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "iteration_count_minus_one%3#0"
      ]
    },
    "1121": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1123": {
      "op": "b test_empty_for_body@25"
    },
    "1126": {
      "block": "test_empty_for_body@25",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1128": {
      "op": "itob",
      "defined_out": [
        "idx#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%14#0"
      ]
    },
    "1129": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%14#0",
        "\"\""
      ]
    },
    "1130": {
      "op": "concat",
      "defined_out": [
        "idx#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%15#0"
      ]
    },
    "1131": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%15#0",
        "i#1"
      ]
    },
    "1133": {
      "op": "itob",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1134": {
      "op": "concat",
      "defined_out": [
        "i#1",
        "idx#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "tmp%17#0"
      ]
    },
    "1135": {
      "op": "log",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1136": {
      "op": "b test_empty_for_footer@26"
    },
    "1139": {
      "block": "test_empty_for_footer@26",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0"
      ]
    },
    "1140": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "0",
        "i#1"
      ]
    },
    "1142": {
      "op": "<",
      "defined_out": [
        "continue_looping%5#0",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "continue_looping%5#0"
      ]
    },
    "1143": {
      "op": "bz test_empty_after_for@28",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1146": {
      "op": "b test_empty_for_increment@27"
    },
    "1149": {
      "block": "test_empty_for_increment@27",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1151": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1",
        "1"
      ]
    },
    "1152": {
      "op": "-",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "1153": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1155": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1157": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1",
        "1"
      ]
    },
    "1158": {
      "op": "-",
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0",
        "idx#1"
      ]
    },
    "1159": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#1",
        "idx#1"
      ],
      "stack_out": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ]
    },
    "1161": {
      "op": "b test_empty_for_body@25"
    },
    "1164": {
      "block": "test_empty_after_for@28",
      "stack_in": [
        "i#1",
        "idx#1",
        "item_index_internal%0#0",
        "max_range_item%1#0",
        "value_internal%1#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1165": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_break",
      "params": {},
      "block": "test_break",
      "stack_in": [],
      "op": "b test_break_block@0"
    },
    "1168": {
      "block": "test_break_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "1169": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1170": {
      "op": "b test_break_for_header@1"
    },
    "1173": {
      "block": "test_break_for_header@1",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1174": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "1",
        "7"
      ]
    },
    "1175": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0"
      ],
      "stack_out": [
        "continue_looping%0#0"
      ]
    },
    "1176": {
      "op": "bz test_break_after_for@3",
      "stack_out": []
    },
    "1179": {
      "op": "b test_break_for_body@2"
    },
    "1182": {
      "block": "test_break_for_body@2",
      "stack_in": [],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "0x206120622063"
      ]
    },
    "1183": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1"
      ],
      "stack_out": [
        "0x206120622063",
        "1"
      ]
    },
    "1184": {
      "op": "intc_0 // 1",
      "stack_out": [
        "0x206120622063",
        "1",
        "1"
      ]
    },
    "1185": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "1186": {
      "op": "log",
      "stack_out": []
    },
    "1187": {
      "op": "b test_break_after_for@3"
    },
    "1190": {
      "block": "test_break_after_for@3",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1191": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1",
        "1"
      ]
    },
    "1192": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1193": {
      "op": "assert",
      "stack_out": []
    },
    "1194": {
      "retsub": true,
      "op": "retsub"
    },
    "1195": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target",
      "params": {},
      "block": "test_tuple_target",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1198": {
      "op": "b test_tuple_target_block@0"
    },
    "1201": {
      "block": "test_tuple_target_block@0",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1202": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1203": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "tup.1#0"
      ]
    },
    "1204": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tup.1#0",
        "tup.0#0"
      ]
    },
    "1205": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0"
      ]
    },
    "1206": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1207": {
      "op": "b test_tuple_target_for_header@1"
    },
    "1210": {
      "block": "test_tuple_target_for_header@1",
      "stack_in": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1212": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1213": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1214": {
      "op": "bz test_tuple_target_after_for@4",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1217": {
      "op": "b test_tuple_target_for_body@2"
    },
    "1220": {
      "block": "test_tuple_target_for_body@2",
      "stack_in": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1222": {
      "op": "dup",
      "defined_out": [
        "tup.1#0",
        "tup.1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.1#0",
        "tup.1#0 (copy)"
      ]
    },
    "1223": {
      "op": "frame_bury 0",
      "defined_out": [
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.1#0"
      ]
    },
    "1225": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.1#0",
        "item_index_internal%0#0"
      ]
    },
    "1227": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0 (copy)",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.1#0",
        "tup.0#0 (copy)",
        "tup.0#0 (copy)"
      ]
    },
    "1228": {
      "op": "cover 2",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.0#0 (copy)",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.0#0 (copy)"
      ]
    },
    "1230": {
      "op": "frame_bury 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0"
      ]
    },
    "1232": {
      "op": "pushbytes 0x74",
      "defined_out": [
        "0x74",
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "0x74"
      ]
    },
    "1235": {
      "op": "uncover 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "0x74",
        "tup.1#0"
      ]
    },
    "1237": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "0x74",
        "tup.1#0",
        "1"
      ]
    },
    "1238": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "extract%0#0"
      ]
    },
    "1239": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1242": {
      "op": "b test_tuple_target_for_footer@3"
    },
    "1245": {
      "block": "test_tuple_target_for_footer@3",
      "stack_in": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1247": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "1248": {
      "op": "+",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "1249": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1251": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1253": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1254": {
      "op": "+",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1255": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1257": {
      "op": "b test_tuple_target_for_header@1"
    },
    "1260": {
      "block": "test_tuple_target_after_for@4",
      "stack_in": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "tup.0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0"
      ]
    },
    "1262": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tup.0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.0#0",
        "0"
      ]
    },
    "1263": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tup.0#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1264": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0",
        "tup.0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tup.1#0"
      ]
    },
    "1266": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tup.1#0",
        "0"
      ]
    },
    "1267": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tup.0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1268": {
      "op": "&&",
      "defined_out": [
        "tmp%2#0",
        "tup.0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "1269": {
      "op": "assert",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1270": {
      "retsub": true,
      "op": "retsub"
    },
    "1271": {
      "subroutine": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "params": {
        "idx#0": "uint64",
        "value#0": "bytes"
      },
      "block": "_log_with_index",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1274": {
      "op": "b _log_with_index_block@0"
    },
    "1277": {
      "block": "_log_with_index_block@0",
      "stack_in": [],
      "op": "pushbytes 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "1289": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ]
    },
    "1291": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)",
        "1"
      ]
    },
    "1292": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "1293": {
      "op": "pushbytes \"=\"",
      "defined_out": [
        "\"=\"",
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0",
        "\"=\""
      ]
    },
    "1296": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1297": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ]
    },
    "1299": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1300": {
      "op": "log",
      "stack_out": []
    },
    "1301": {
      "retsub": true,
      "op": "retsub"
    }
  }
}