{
  "version": 3,
  "sources": [
    "../base.py",
    "../iterate_urange.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAOY;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;AAAJ;AACA;;;AACI;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;;AACO;AAAP;ACjBR;;;;;;AAI8B;AAA9B;AAAwB;;;;AAAP;;AAAU;AAAV;AAAjB;;;AAAA;;;AADiB;AAED;;AAAA;AAAA;AAAJ;;;;AADK;;AAAa;AAAb;AAAA;;;;;;AAIjB;;;;;;;AAIuC;AAAvC;AAAiC;AAAG;AAApC;AAAA;;;AAAA;;;AAAoC;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;AAAO;AAAP;AAAd;;;;;AADK;AAED;;AAAA;AAAA;AAAJ;;;;AADqB;AAAP;;AAAA;AAA1B;;;AAAA;;;AAA0B;;AAAa;AAAb;AAAA;;;;;;AAI1B;;;;;;AAI8C;AAA9C;AAAwC;;;;;AAAP;;AAAU;AAAV;AAAjC;;;AAAA;;;AADiB;AAEqB;;AAAA;AAAA;AAA1B;;AAAA;;AAAA;;;;;;AADqB;;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;AAKjC;;;;;;;;;AAIgE;AAAhE;AAA0D;AAAG;AAA7D;AAAA;;;AAAA;;;AAA6D;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;;AAAA;AAAO;AAAP;AAAA;;AAAO;AAA9C;;AAAA;;;;;AADK;AAEqB;;AAAA;AAAA;AAA1B;;AAAA;;AAAA;;;;;;AADuC;;AAAA;;AAAA;AAAnD;;;AAAA;;;AAAmD;;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;AAKnD;;;;;;;;AAIuD;AAAvD;AAAiD;AAAG;AAApD;AAAA;;;AAAA;;;AAAoD;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;AAAO;AAAP;AAA9B;;;AAAA;;;;;AADK;AAEqB;;AAAA;AAAA;AAA1B;;AAAA;;AAAA;;;;;;AADqC;AAAP;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;AAK1C;;;;;;;;AAIuD;AAAvD;AAAiD;AAAG;AAApD;AAAA;;;AAAA;;;AAAoD;AAAH;AAAP;AAAA;AAAA;AAAa;AAAb;AAAa;AAAb;;AAAA;AAAO;AAAP;AAA9B;;AAAA;;;;;AADK;AAEqB;;AAAA;AAAA;AAA1B;;AAAA;;AAAA;;;;;;AADqC;AAAP;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;AAK1C;;;;;;;;AAGiB;AAAjB;AAAiB;;;;AAAA;;AAAO;AAAP;AAAjB;;;AAAA;;;AACgB;;AAAA;AAAJ;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAES;AAA1B;AAA0B;AAAO;AAAjC;AAAA;;;AAAA;;;AAAiC;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;;;;;AACI;;AAAA;AAAJ;;;;AADc;AAAA;;AAAA;AAA1B;;;AAAA;;;AAA0B;;AAAA;AAAA;AAAA;;;;;AAEO;AAAjC;AAAiC;AAArB;;;AAAA;;;;;AAAqB;;AAAO;AAAP;AAAjC;;;AAAA;;;AACgB;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AADqB;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAEkB;AAAnD;AAAmD;AAAO;AAA1D;AAAA;;;AAAA;;;AAA0D;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAvC;;AAAA;;;;;AACI;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AADuC;;AAAA;;AAAA;AAAnD;;;AAAA;;;AAAmD;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAET;AAA1C;AAA0C;AAAO;AAAjD;AAAA;;;AAAA;;;AAAiD;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B;;;AAAA;;;;;AACI;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AAD8B;AAAA;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAEA;AAA1C;AAA0C;AAAO;AAAjD;AAAA;;;AAAA;;;AAAiD;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAA9B;;AAAA;;;;;AACI;;AAAA;AAAJ;AAAS;AAAA;;AAAA;AAAA;AAAT;;;;AAD8B;AAAA;;AAAA;AAA1C;;;AAAA;;;AAA0C;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;AAOZ;AAA9B;;;;AAAwB;AAAG;AAAV;AAAjB;;;AAAA;;;AADiB;AACO;AACR;AAAA;AAAJ;AACA;;;;AAEZ;;;;;;AAI8B;AAA9B;AAA8B;;;;;AAAA;;AAAO;AAAP;AAA9B;;;AAAA;;;AADiB;;;AAEwB;;AAAA;AAAA;AAA7B;;AAAA;;AAAA;;;;;;AADkB;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;AD1D9B;;;;;;AAEiB;;;;;;;;;;;;AACL;;AAAA;AAAA;AAAwB;;;AAAX;AAAA;;AAAA;AAAjB;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.iteration.base.IterationTestBase.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 7"
    },
    "7": {
      "op": "bytecblock \"\" 0x206120622063"
    },
    "17": {
      "op": "b main_block@0"
    },
    "20": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "pushbytes \"test_forwards\"",
      "defined_out": [
        "\"test_forwards\""
      ],
      "stack_out": [
        "\"test_forwards\""
      ]
    },
    "35": {
      "op": "log",
      "stack_out": []
    },
    "36": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards",
      "op": "callsub test_forwards"
    },
    "39": {
      "op": "pushbytes \"test_reversed\"",
      "defined_out": [
        "\"test_reversed\""
      ],
      "stack_out": [
        "\"test_reversed\""
      ]
    },
    "54": {
      "op": "log",
      "stack_out": []
    },
    "55": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed",
      "op": "callsub test_reversed"
    },
    "58": {
      "op": "pushbytes \"test_forwards_with_forwards_index\"",
      "defined_out": [
        "\"test_forwards_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_forwards_index\""
      ]
    },
    "93": {
      "op": "log",
      "stack_out": []
    },
    "94": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index",
      "op": "callsub test_forwards_with_forwards_index"
    },
    "97": {
      "op": "pushbytes \"test_forwards_with_reverse_index\"",
      "defined_out": [
        "\"test_forwards_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_forwards_with_reverse_index\""
      ]
    },
    "131": {
      "op": "log",
      "stack_out": []
    },
    "132": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index",
      "op": "callsub test_forwards_with_reverse_index"
    },
    "135": {
      "op": "pushbytes \"test_reverse_with_forwards_index\"",
      "defined_out": [
        "\"test_reverse_with_forwards_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_forwards_index\""
      ]
    },
    "169": {
      "op": "log",
      "stack_out": []
    },
    "170": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index",
      "op": "callsub test_reverse_with_forwards_index"
    },
    "173": {
      "op": "pushbytes \"test_reverse_with_reverse_index\"",
      "defined_out": [
        "\"test_reverse_with_reverse_index\""
      ],
      "stack_out": [
        "\"test_reverse_with_reverse_index\""
      ]
    },
    "206": {
      "op": "log",
      "stack_out": []
    },
    "207": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index",
      "op": "callsub test_reverse_with_reverse_index"
    },
    "210": {
      "op": "pushbytes \"test_empty\"",
      "defined_out": [
        "\"test_empty\""
      ],
      "stack_out": [
        "\"test_empty\""
      ]
    },
    "222": {
      "op": "log",
      "stack_out": []
    },
    "223": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_empty",
      "op": "callsub test_empty"
    },
    "226": {
      "op": "pushbytes \"test_break\"",
      "defined_out": [
        "\"test_break\""
      ],
      "stack_out": [
        "\"test_break\""
      ]
    },
    "238": {
      "op": "log",
      "stack_out": []
    },
    "239": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_break",
      "op": "callsub test_break"
    },
    "242": {
      "op": "pushbytes \"test_tuple_target\"",
      "defined_out": [
        "\"test_tuple_target\""
      ],
      "stack_out": [
        "\"test_tuple_target\""
      ]
    },
    "261": {
      "op": "log",
      "stack_out": []
    },
    "262": {
      "callsub": "test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target",
      "op": "callsub test_tuple_target"
    },
    "265": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "266": {
      "op": "return",
      "stack_out": []
    },
    "267": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards",
      "params": {},
      "block": "test_forwards",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "270": {
      "op": "b test_forwards_block@0"
    },
    "273": {
      "block": "test_forwards_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "274": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "275": {
      "op": "intc_0 // 1",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "276": {
      "op": "b test_forwards_for_header@1"
    },
    "279": {
      "block": "test_forwards_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "281": {
      "op": "intc_3 // 7",
      "defined_out": [
        "7",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "7"
      ]
    },
    "282": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "283": {
      "op": "bz test_forwards_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "286": {
      "op": "b test_forwards_for_body@2"
    },
    "289": {
      "block": "test_forwards_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#0",
        "0x206120622063"
      ]
    },
    "290": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "292": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "0x206120622063",
        "i#0",
        "1"
      ]
    },
    "293": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "extract%0#0"
      ]
    },
    "294": {
      "op": "log",
      "stack_out": [
        "i#0"
      ]
    },
    "295": {
      "op": "b test_forwards_for_footer@3"
    },
    "298": {
      "block": "test_forwards_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "300": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "2"
      ]
    },
    "301": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "302": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "304": {
      "op": "b test_forwards_for_header@1"
    },
    "307": {
      "block": "test_forwards_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "308": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed",
      "params": {},
      "block": "test_reversed",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "311": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "312": {
      "op": "b test_reversed_block@0"
    },
    "315": {
      "block": "test_reversed_block@0",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#0",
        "2"
      ]
    },
    "316": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0"
      ]
    },
    "317": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "1"
      ]
    },
    "318": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "1",
        "7"
      ]
    },
    "319": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#0",
        "should_loop%0#0"
      ]
    },
    "320": {
      "op": "bz test_reversed_after_for@5",
      "stack_out": [
        "i#0"
      ]
    },
    "323": {
      "op": "b test_reversed_for_header@1"
    },
    "326": {
      "block": "test_reversed_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#0",
        "7"
      ]
    },
    "327": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "7",
        "1"
      ]
    },
    "328": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#0",
        "range_length%0#0"
      ]
    },
    "329": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "range_length%0#0",
        "1"
      ]
    },
    "330": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "range_length_minus_one%0#0"
      ]
    },
    "331": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "332": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "333": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "334": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#0",
        "range_delta%0#0"
      ]
    },
    "335": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "336": {
      "op": "+",
      "defined_out": [
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "max_range_item%0#0"
      ]
    },
    "337": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "339": {
      "op": "b test_reversed_for_body@2"
    },
    "342": {
      "block": "test_reversed_for_body@2",
      "stack_in": [
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#0",
        "0x206120622063"
      ]
    },
    "343": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "345": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "0x206120622063",
        "i#0",
        "1"
      ]
    },
    "346": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "extract%0#0"
      ]
    },
    "347": {
      "op": "log",
      "stack_out": [
        "i#0"
      ]
    },
    "348": {
      "op": "b test_reversed_for_footer@3"
    },
    "351": {
      "block": "test_reversed_for_footer@3",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "1"
      ]
    },
    "352": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "1",
        "i#0"
      ]
    },
    "354": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "355": {
      "op": "bz test_reversed_after_for@5",
      "stack_out": [
        "i#0"
      ]
    },
    "358": {
      "op": "b test_reversed_for_increment@4"
    },
    "361": {
      "block": "test_reversed_for_increment@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "363": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "2"
      ]
    },
    "364": {
      "op": "-",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "365": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "367": {
      "op": "b test_reversed_for_body@2"
    },
    "370": {
      "block": "test_reversed_after_for@5",
      "stack_in": [
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "371": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index",
      "params": {},
      "block": "test_forwards_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "374": {
      "op": "b test_forwards_with_forwards_index_block@0"
    },
    "377": {
      "block": "test_forwards_with_forwards_index_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "378": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "379": {
      "op": "intc_0 // 1",
      "defined_out": [],
      "stack_out": [
        "i#0"
      ]
    },
    "380": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "381": {
      "op": "b test_forwards_with_forwards_index_for_header@1"
    },
    "384": {
      "block": "test_forwards_with_forwards_index_for_header@1",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "386": {
      "op": "intc_3 // 7",
      "defined_out": [
        "7",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0",
        "7"
      ]
    },
    "387": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "388": {
      "op": "bz test_forwards_with_forwards_index_after_for@4",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "391": {
      "op": "b test_forwards_with_forwards_index_for_body@2"
    },
    "394": {
      "block": "test_forwards_with_forwards_index_for_body@2",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063"
      ]
    },
    "395": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "397": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063",
        "i#0",
        "1"
      ]
    },
    "398": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "399": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "401": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "403": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "406": {
      "op": "b test_forwards_with_forwards_index_for_footer@3"
    },
    "409": {
      "block": "test_forwards_with_forwards_index_for_footer@3",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "411": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "412": {
      "op": "+",
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "413": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "415": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "417": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "418": {
      "op": "+",
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "419": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "421": {
      "op": "b test_forwards_with_forwards_index_for_header@1"
    },
    "424": {
      "block": "test_forwards_with_forwards_index_after_for@4",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "425": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index",
      "params": {},
      "block": "test_forwards_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "428": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "429": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "430": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "431": {
      "op": "b test_forwards_with_reverse_index_block@0"
    },
    "434": {
      "block": "test_forwards_with_reverse_index_block@0",
      "stack_in": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "2"
      ]
    },
    "435": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "436": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "1"
      ]
    },
    "437": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "1",
        "7"
      ]
    },
    "438": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "should_loop%0#0"
      ]
    },
    "439": {
      "op": "bz test_forwards_with_reverse_index_after_for@5",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "442": {
      "op": "b test_forwards_with_reverse_index_for_header@1"
    },
    "445": {
      "block": "test_forwards_with_reverse_index_for_header@1",
      "stack_in": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "7"
      ]
    },
    "446": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "7",
        "1"
      ]
    },
    "447": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "range_length%0#0"
      ]
    },
    "448": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "range_length%0#0",
        "1"
      ]
    },
    "449": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "range_length_minus_one%0#0"
      ]
    },
    "450": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "451": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "452": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "453": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "iteration_count_minus_one%0#0",
        "iteration_count_minus_one%0#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0",
        "2",
        "iteration_count_minus_one%0#0 (copy)"
      ]
    },
    "455": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ]
    },
    "456": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "457": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ]
    },
    "458": {
      "op": "frame_bury 2",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "460": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0",
        "1"
      ]
    },
    "461": {
      "op": "frame_bury 0",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "463": {
      "op": "frame_bury 1",
      "defined_out": [
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "465": {
      "op": "b test_forwards_with_reverse_index_for_body@2"
    },
    "468": {
      "block": "test_forwards_with_reverse_index_for_body@2",
      "stack_in": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "0x206120622063"
      ]
    },
    "469": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "471": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "0x206120622063",
        "i#0",
        "1"
      ]
    },
    "472": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "extract%0#0"
      ]
    },
    "473": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "475": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "477": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "480": {
      "op": "b test_forwards_with_reverse_index_for_footer@3"
    },
    "483": {
      "block": "test_forwards_with_reverse_index_for_footer@3",
      "stack_in": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "i#0"
      ]
    },
    "485": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "i#0",
        "max_range_item%0#0"
      ]
    },
    "487": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "continue_looping%0#0"
      ]
    },
    "488": {
      "op": "bz test_forwards_with_reverse_index_after_for@5",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "491": {
      "op": "b test_forwards_with_reverse_index_for_increment@4"
    },
    "494": {
      "block": "test_forwards_with_reverse_index_for_increment@4",
      "stack_in": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "i#0"
      ]
    },
    "496": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "i#0",
        "2"
      ]
    },
    "497": {
      "op": "+",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "i#0"
      ]
    },
    "498": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "500": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "idx#0"
      ]
    },
    "502": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "idx#0",
        "1"
      ]
    },
    "503": {
      "op": "-",
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0",
        "idx#0"
      ]
    },
    "504": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "506": {
      "op": "b test_forwards_with_reverse_index_for_body@2"
    },
    "509": {
      "block": "test_forwards_with_reverse_index_after_for@5",
      "stack_in": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "510": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index",
      "params": {},
      "block": "test_reverse_with_forwards_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "513": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "514": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "515": {
      "op": "b test_reverse_with_forwards_index_block@0"
    },
    "518": {
      "block": "test_reverse_with_forwards_index_block@0",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "2"
      ]
    },
    "519": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "520": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "521": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1",
        "7"
      ]
    },
    "522": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "should_loop%0#0"
      ]
    },
    "523": {
      "op": "bz test_reverse_with_forwards_index_after_for@5",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "526": {
      "op": "b test_reverse_with_forwards_index_for_header@1"
    },
    "529": {
      "block": "test_reverse_with_forwards_index_for_header@1",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "7"
      ]
    },
    "530": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "7",
        "1"
      ]
    },
    "531": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length%0#0"
      ]
    },
    "532": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length%0#0",
        "1"
      ]
    },
    "533": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length_minus_one%0#0"
      ]
    },
    "534": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "535": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "536": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "537": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_delta%0#0"
      ]
    },
    "538": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "539": {
      "op": "+",
      "defined_out": [
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "max_range_item%0#0"
      ]
    },
    "540": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "542": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#0",
        "idx#0",
        "0"
      ]
    },
    "543": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "545": {
      "op": "b test_reverse_with_forwards_index_for_body@2"
    },
    "548": {
      "block": "test_reverse_with_forwards_index_for_body@2",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063"
      ]
    },
    "549": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "551": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063",
        "i#0",
        "1"
      ]
    },
    "552": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "553": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "555": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "557": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "560": {
      "op": "b test_reverse_with_forwards_index_for_footer@3"
    },
    "563": {
      "block": "test_reverse_with_forwards_index_for_footer@3",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "564": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1",
        "i#0"
      ]
    },
    "566": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "567": {
      "op": "bz test_reverse_with_forwards_index_after_for@5",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "570": {
      "op": "b test_reverse_with_forwards_index_for_increment@4"
    },
    "573": {
      "block": "test_reverse_with_forwards_index_for_increment@4",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "575": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "576": {
      "op": "-",
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "577": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "579": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "581": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "582": {
      "op": "+",
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "583": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "585": {
      "op": "b test_reverse_with_forwards_index_for_body@2"
    },
    "588": {
      "block": "test_reverse_with_forwards_index_after_for@5",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "589": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index",
      "params": {},
      "block": "test_reverse_with_reverse_index",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "592": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "593": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "594": {
      "op": "b test_reverse_with_reverse_index_block@0"
    },
    "597": {
      "block": "test_reverse_with_reverse_index_block@0",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "2"
      ]
    },
    "598": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "599": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "600": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1",
        "7"
      ]
    },
    "601": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "should_loop%0#0"
      ]
    },
    "602": {
      "op": "bz test_reverse_with_reverse_index_after_for@5",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "605": {
      "op": "b test_reverse_with_reverse_index_for_header@1"
    },
    "608": {
      "block": "test_reverse_with_reverse_index_for_header@1",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "intc_3 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "7"
      ]
    },
    "609": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "7",
        "1"
      ]
    },
    "610": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length%0#0"
      ]
    },
    "611": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length%0#0",
        "1"
      ]
    },
    "612": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length_minus_one%0#0"
      ]
    },
    "613": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "range_length_minus_one%0#0",
        "2"
      ]
    },
    "614": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "615": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0",
        "2"
      ]
    },
    "616": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "iteration_count_minus_one%0#0",
        "iteration_count_minus_one%0#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0",
        "2",
        "iteration_count_minus_one%0#0 (copy)"
      ]
    },
    "618": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0"
      ]
    },
    "619": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0",
        "range_delta%0#0",
        "1"
      ]
    },
    "620": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0",
        "max_range_item%0#0"
      ]
    },
    "621": {
      "op": "frame_bury 0",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "623": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "625": {
      "op": "b test_reverse_with_reverse_index_for_body@2"
    },
    "628": {
      "block": "test_reverse_with_reverse_index_for_body@2",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063"
      ]
    },
    "629": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "631": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "0x206120622063",
        "i#0",
        "1"
      ]
    },
    "632": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "633": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "635": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "extract%0#0"
      ]
    },
    "637": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "640": {
      "op": "b test_reverse_with_reverse_index_for_footer@3"
    },
    "643": {
      "block": "test_reverse_with_reverse_index_for_footer@3",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "644": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "1",
        "i#0"
      ]
    },
    "646": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "continue_looping%0#0"
      ]
    },
    "647": {
      "op": "bz test_reverse_with_reverse_index_after_for@5",
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "650": {
      "op": "b test_reverse_with_reverse_index_for_increment@4"
    },
    "653": {
      "block": "test_reverse_with_reverse_index_for_increment@4",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "655": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "656": {
      "op": "-",
      "stack_out": [
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "657": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "659": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "661": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0",
        "1"
      ]
    },
    "662": {
      "op": "-",
      "stack_out": [
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "663": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "i#0",
        "idx#0"
      ]
    },
    "665": {
      "op": "b test_reverse_with_reverse_index_for_body@2"
    },
    "668": {
      "block": "test_reverse_with_reverse_index_after_for@5",
      "stack_in": [
        "i#0",
        "idx#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "669": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_empty",
      "params": {},
      "block": "test_empty",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "672": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0"
      ]
    },
    "673": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0"
      ]
    },
    "674": {
      "op": "b test_empty_block@0"
    },
    "677": {
      "block": "test_empty_block@0",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "1"
      ]
    },
    "678": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0"
      ]
    },
    "679": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "680": {
      "op": "b test_empty_for_header@1"
    },
    "683": {
      "block": "test_empty_for_header@1",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "685": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "0"
      ]
    },
    "686": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "687": {
      "op": "bz test_empty_after_for@4",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "690": {
      "op": "b test_empty_for_body@2"
    },
    "693": {
      "block": "test_empty_for_body@2",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "695": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "696": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "697": {
      "op": "b test_empty_for_footer@3"
    },
    "700": {
      "block": "test_empty_for_footer@3",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "702": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "703": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "704": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "706": {
      "op": "b test_empty_for_header@1"
    },
    "709": {
      "block": "test_empty_after_for@4",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "1"
      ]
    },
    "710": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "711": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "712": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "713": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "should_loop%0#0"
      ]
    },
    "714": {
      "op": "bz test_empty_after_for@9",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "717": {
      "op": "b test_empty_for_header@5"
    },
    "720": {
      "block": "test_empty_for_header@5",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "721": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "722": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%0#0"
      ]
    },
    "723": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%0#0",
        "1"
      ]
    },
    "724": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%0#0"
      ]
    },
    "725": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%0#0",
        "1"
      ]
    },
    "726": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "727": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%0#0",
        "1"
      ]
    },
    "728": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_delta%0#0"
      ]
    },
    "729": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_delta%0#0",
        "0"
      ]
    },
    "730": {
      "op": "+",
      "defined_out": [
        "max_range_item%0#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "max_range_item%0#0"
      ]
    },
    "731": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "733": {
      "op": "b test_empty_for_body@6"
    },
    "736": {
      "block": "test_empty_for_body@6",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "738": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "739": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "740": {
      "op": "b test_empty_for_footer@7"
    },
    "743": {
      "block": "test_empty_for_footer@7",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "744": {
      "op": "frame_dig 2",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "i#0"
      ]
    },
    "746": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "747": {
      "op": "bz test_empty_after_for@9",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "750": {
      "op": "b test_empty_for_increment@8"
    },
    "753": {
      "block": "test_empty_for_increment@8",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "755": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "756": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "757": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "759": {
      "op": "b test_empty_for_body@6"
    },
    "762": {
      "block": "test_empty_after_for@9",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "1"
      ]
    },
    "763": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "764": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "765": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "767": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "768": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "770": {
      "op": "b test_empty_for_header@10"
    },
    "773": {
      "block": "test_empty_for_header@10",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "775": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "0"
      ]
    },
    "776": {
      "op": "<",
      "defined_out": [
        "continue_looping%2#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "continue_looping%2#0"
      ]
    },
    "777": {
      "op": "bz test_empty_after_for@13",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "780": {
      "op": "b test_empty_for_body@11"
    },
    "783": {
      "block": "test_empty_for_body@11",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "785": {
      "op": "itob",
      "defined_out": [
        "idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "786": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%2#0",
        "\"\""
      ]
    },
    "787": {
      "op": "concat",
      "defined_out": [
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "788": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%3#0",
        "i#0"
      ]
    },
    "790": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "791": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "792": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "793": {
      "op": "b test_empty_for_footer@12"
    },
    "796": {
      "block": "test_empty_for_footer@12",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "798": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "799": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "800": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "802": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "804": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "805": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "806": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "808": {
      "op": "b test_empty_for_header@10"
    },
    "811": {
      "block": "test_empty_after_for@13",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "1"
      ]
    },
    "812": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "813": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "814": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "815": {
      "op": "<",
      "defined_out": [
        "should_loop%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "should_loop%1#0"
      ]
    },
    "816": {
      "op": "bz test_empty_after_for@18",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "819": {
      "op": "b test_empty_for_header@14"
    },
    "822": {
      "block": "test_empty_for_header@14",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "823": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "824": {
      "op": "-",
      "defined_out": [
        "range_length%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%1#0"
      ]
    },
    "825": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%1#0",
        "1"
      ]
    },
    "826": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%1#0"
      ]
    },
    "827": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%1#0",
        "1"
      ]
    },
    "828": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0"
      ]
    },
    "829": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0",
        "1"
      ]
    },
    "830": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "iteration_count_minus_one%1#0",
        "iteration_count_minus_one%1#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0",
        "1",
        "iteration_count_minus_one%1#0 (copy)"
      ]
    },
    "832": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%1#0",
        "range_delta%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0",
        "range_delta%1#0"
      ]
    },
    "833": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0",
        "range_delta%1#0",
        "0"
      ]
    },
    "834": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%1#0",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0",
        "max_range_item%1#0"
      ]
    },
    "835": {
      "op": "frame_bury 1",
      "defined_out": [
        "iteration_count_minus_one%1#0",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0"
      ]
    },
    "837": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0",
        "0"
      ]
    },
    "838": {
      "op": "frame_bury 2",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%1#0"
      ]
    },
    "840": {
      "op": "frame_bury 0",
      "defined_out": [
        "max_range_item%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "842": {
      "op": "b test_empty_for_body@15"
    },
    "845": {
      "block": "test_empty_for_body@15",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "847": {
      "op": "itob",
      "defined_out": [
        "idx#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "848": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%6#0",
        "\"\""
      ]
    },
    "849": {
      "op": "concat",
      "defined_out": [
        "idx#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "850": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%7#0",
        "i#0"
      ]
    },
    "852": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "853": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "854": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "855": {
      "op": "b test_empty_for_footer@16"
    },
    "858": {
      "block": "test_empty_for_footer@16",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "860": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "max_range_item%1#0"
      ]
    },
    "862": {
      "op": "<",
      "defined_out": [
        "continue_looping%3#0",
        "i#0",
        "max_range_item%1#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "continue_looping%3#0"
      ]
    },
    "863": {
      "op": "bz test_empty_after_for@18",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "866": {
      "op": "b test_empty_for_increment@17"
    },
    "869": {
      "block": "test_empty_for_increment@17",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "871": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "872": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "873": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "875": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "877": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "878": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "879": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "881": {
      "op": "b test_empty_for_body@15"
    },
    "884": {
      "block": "test_empty_after_for@18",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "1"
      ]
    },
    "885": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "886": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "887": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "888": {
      "op": "<",
      "defined_out": [
        "should_loop%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "should_loop%2#0"
      ]
    },
    "889": {
      "op": "bz test_empty_after_for@23",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "892": {
      "op": "b test_empty_for_header@19"
    },
    "895": {
      "block": "test_empty_for_header@19",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "896": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "897": {
      "op": "-",
      "defined_out": [
        "range_length%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%2#0"
      ]
    },
    "898": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%2#0",
        "1"
      ]
    },
    "899": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%2#0"
      ]
    },
    "900": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%2#0",
        "1"
      ]
    },
    "901": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%2#0"
      ]
    },
    "902": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%2#0",
        "1"
      ]
    },
    "903": {
      "op": "*",
      "defined_out": [
        "range_delta%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_delta%2#0"
      ]
    },
    "904": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_delta%2#0",
        "0"
      ]
    },
    "905": {
      "op": "+",
      "defined_out": [
        "max_range_item%2#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "max_range_item%2#0"
      ]
    },
    "906": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "908": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "909": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "911": {
      "op": "b test_empty_for_body@20"
    },
    "914": {
      "block": "test_empty_for_body@20",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "916": {
      "op": "itob",
      "defined_out": [
        "idx#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "917": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%10#0",
        "\"\""
      ]
    },
    "918": {
      "op": "concat",
      "defined_out": [
        "idx#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "919": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%11#0",
        "i#0"
      ]
    },
    "921": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "922": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "923": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "924": {
      "op": "b test_empty_for_footer@21"
    },
    "927": {
      "block": "test_empty_for_footer@21",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "928": {
      "op": "frame_dig 2",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "i#0"
      ]
    },
    "930": {
      "op": "<",
      "defined_out": [
        "continue_looping%4#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "continue_looping%4#0"
      ]
    },
    "931": {
      "op": "bz test_empty_after_for@23",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "934": {
      "op": "b test_empty_for_increment@22"
    },
    "937": {
      "block": "test_empty_for_increment@22",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "939": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "940": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "941": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "943": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "945": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "946": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "947": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "949": {
      "op": "b test_empty_for_body@20"
    },
    "952": {
      "block": "test_empty_after_for@23",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "1"
      ]
    },
    "953": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "954": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "955": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "956": {
      "op": "<",
      "defined_out": [
        "should_loop%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "should_loop%3#0"
      ]
    },
    "957": {
      "op": "bz test_empty_after_for@28",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "960": {
      "op": "b test_empty_for_header@24"
    },
    "963": {
      "block": "test_empty_for_header@24",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "964": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "0"
      ]
    },
    "965": {
      "op": "-",
      "defined_out": [
        "range_length%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%3#0"
      ]
    },
    "966": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length%3#0",
        "1"
      ]
    },
    "967": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%3#0"
      ]
    },
    "968": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "range_length_minus_one%3#0",
        "1"
      ]
    },
    "969": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0"
      ]
    },
    "970": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0",
        "1"
      ]
    },
    "971": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "iteration_count_minus_one%3#0",
        "iteration_count_minus_one%3#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0",
        "1",
        "iteration_count_minus_one%3#0 (copy)"
      ]
    },
    "973": {
      "op": "*",
      "defined_out": [
        "iteration_count_minus_one%3#0",
        "range_delta%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0",
        "range_delta%3#0"
      ]
    },
    "974": {
      "op": "intc_1 // 0",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0",
        "range_delta%3#0",
        "0"
      ]
    },
    "975": {
      "op": "+",
      "defined_out": [
        "iteration_count_minus_one%3#0",
        "max_range_item%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0",
        "max_range_item%3#0"
      ]
    },
    "976": {
      "op": "frame_bury 2",
      "defined_out": [
        "iteration_count_minus_one%3#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "iteration_count_minus_one%3#0"
      ]
    },
    "978": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "980": {
      "op": "b test_empty_for_body@25"
    },
    "983": {
      "block": "test_empty_for_body@25",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "985": {
      "op": "itob",
      "defined_out": [
        "idx#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "986": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "idx#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%14#0",
        "\"\""
      ]
    },
    "987": {
      "op": "concat",
      "defined_out": [
        "idx#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%15#0"
      ]
    },
    "988": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%15#0",
        "i#0"
      ]
    },
    "990": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "991": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "992": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "993": {
      "op": "b test_empty_for_footer@26"
    },
    "996": {
      "block": "test_empty_for_footer@26",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0"
      ]
    },
    "997": {
      "op": "frame_dig 2",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "0",
        "i#0"
      ]
    },
    "999": {
      "op": "<",
      "defined_out": [
        "continue_looping%5#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "continue_looping%5#0"
      ]
    },
    "1000": {
      "op": "bz test_empty_after_for@28",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "1003": {
      "op": "b test_empty_for_increment@27"
    },
    "1006": {
      "block": "test_empty_for_increment@27",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "1008": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1009": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "i#0"
      ]
    },
    "1010": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "1012": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "1014": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "1015": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0",
        "idx#0"
      ]
    },
    "1016": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ]
    },
    "1018": {
      "op": "b test_empty_for_body@25"
    },
    "1021": {
      "block": "test_empty_after_for@28",
      "stack_in": [
        "idx#0",
        "max_range_item%1#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1022": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_break",
      "params": {},
      "block": "test_break",
      "stack_in": [],
      "op": "b test_break_block@0"
    },
    "1025": {
      "block": "test_break_block@0",
      "stack_in": [],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "1026": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1027": {
      "op": "b test_break_for_header@1"
    },
    "1030": {
      "block": "test_break_for_header@1",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1031": {
      "op": "intc_3 // 7",
      "defined_out": [
        "1",
        "7"
      ],
      "stack_out": [
        "1",
        "7"
      ]
    },
    "1032": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0"
      ],
      "stack_out": [
        "continue_looping%0#0"
      ]
    },
    "1033": {
      "op": "bz test_break_after_for@3",
      "stack_out": []
    },
    "1036": {
      "op": "b test_break_for_body@2"
    },
    "1039": {
      "block": "test_break_for_body@2",
      "stack_in": [],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "0x206120622063"
      ]
    },
    "1040": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1"
      ],
      "stack_out": [
        "0x206120622063",
        "1"
      ]
    },
    "1041": {
      "op": "intc_0 // 1",
      "stack_out": [
        "0x206120622063",
        "1",
        "1"
      ]
    },
    "1042": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "1043": {
      "op": "log",
      "stack_out": []
    },
    "1044": {
      "op": "b test_break_after_for@3"
    },
    "1047": {
      "block": "test_break_after_for@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "1048": {
      "subroutine": "test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target",
      "params": {},
      "block": "test_tuple_target",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1051": {
      "op": "b test_tuple_target_block@0"
    },
    "1054": {
      "block": "test_tuple_target_block@0",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1055": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": []
    },
    "1056": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "tup.1#0"
      ]
    },
    "1057": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tup.1#0",
        "tup.0#0"
      ]
    },
    "1058": {
      "op": "b test_tuple_target_for_header@1"
    },
    "1061": {
      "block": "test_tuple_target_for_header@1",
      "stack_in": [
        "tup.1#0",
        "tup.0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.1#0"
      ]
    },
    "1063": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.1#0",
        "1"
      ]
    },
    "1064": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "continue_looping%0#0"
      ]
    },
    "1065": {
      "op": "bz test_tuple_target_after_for@4",
      "stack_out": [
        "tup.1#0",
        "tup.0#0"
      ]
    },
    "1068": {
      "op": "b test_tuple_target_for_body@2"
    },
    "1071": {
      "block": "test_tuple_target_for_body@2",
      "stack_in": [
        "tup.1#0",
        "tup.0#0"
      ],
      "op": "pushbytes 0x74",
      "defined_out": [
        "0x74"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "0x74"
      ]
    },
    "1074": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x74",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "0x74",
        "tup.1#0"
      ]
    },
    "1076": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x74",
        "1",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "0x74",
        "tup.1#0",
        "1"
      ]
    },
    "1077": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "extract%0#0"
      ]
    },
    "1078": {
      "op": "frame_dig 1",
      "defined_out": [
        "extract%0#0",
        "tup.0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "extract%0#0",
        "tup.0#0"
      ]
    },
    "1080": {
      "op": "uncover 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.0#0",
        "extract%0#0"
      ]
    },
    "1082": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "tup.1#0",
        "tup.0#0"
      ]
    },
    "1085": {
      "op": "b test_tuple_target_for_footer@3"
    },
    "1088": {
      "block": "test_tuple_target_for_footer@3",
      "stack_in": [
        "tup.1#0",
        "tup.0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.1#0"
      ]
    },
    "1090": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.1#0",
        "1"
      ]
    },
    "1091": {
      "op": "+",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.1#0"
      ]
    },
    "1092": {
      "op": "frame_bury 0",
      "defined_out": [
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0"
      ]
    },
    "1094": {
      "op": "frame_dig 1",
      "defined_out": [
        "tup.0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.0#0"
      ]
    },
    "1096": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.0#0",
        "1"
      ]
    },
    "1097": {
      "op": "+",
      "stack_out": [
        "tup.1#0",
        "tup.0#0",
        "tup.0#0"
      ]
    },
    "1098": {
      "op": "frame_bury 1",
      "stack_out": [
        "tup.1#0",
        "tup.0#0"
      ]
    },
    "1100": {
      "op": "b test_tuple_target_for_header@1"
    },
    "1103": {
      "block": "test_tuple_target_after_for@4",
      "stack_in": [
        "tup.1#0",
        "tup.0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1104": {
      "subroutine": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "params": {
        "idx#0": "uint64",
        "value#0": "bytes"
      },
      "block": "_log_with_index",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1107": {
      "op": "b _log_with_index_block@0"
    },
    "1110": {
      "block": "_log_with_index_block@0",
      "stack_in": [],
      "op": "pushbytes 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "1122": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ]
    },
    "1124": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)",
        "1"
      ]
    },
    "1125": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "1126": {
      "op": "pushbytes \"=\"",
      "defined_out": [
        "\"=\"",
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0",
        "\"=\""
      ]
    },
    "1129": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1130": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ]
    },
    "1132": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1133": {
      "op": "log",
      "stack_out": []
    },
    "1134": {
      "retsub": true,
      "op": "retsub"
    }
  }
}