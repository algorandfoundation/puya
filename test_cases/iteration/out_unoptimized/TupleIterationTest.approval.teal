#pragma version 10
#pragma typetrack false

// test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
main:
    intcblock 1 0 2
    bytecblock 0x61 0x63 0x62

main_block@0:
    // iteration/base.py:8
    // log("test_forwards")
    pushbytes "test_forwards"
    log
    // iteration/base.py:9
    // self.test_forwards()
    callsub test_forwards
    // iteration/base.py:10
    // log("test_reversed")
    pushbytes "test_reversed"
    log
    // iteration/base.py:11
    // self.test_reversed()
    callsub test_reversed
    // iteration/base.py:12
    // log("test_forwards_with_forwards_index")
    pushbytes "test_forwards_with_forwards_index"
    log
    // iteration/base.py:13
    // self.test_forwards_with_forwards_index()
    callsub test_forwards_with_forwards_index
    // iteration/base.py:14
    // log("test_forwards_with_reverse_index")
    pushbytes "test_forwards_with_reverse_index"
    log
    // iteration/base.py:15
    // self.test_forwards_with_reverse_index()
    callsub test_forwards_with_reverse_index
    // iteration/base.py:16
    // log("test_reverse_with_forwards_index")
    pushbytes "test_reverse_with_forwards_index"
    log
    // iteration/base.py:17
    // self.test_reverse_with_forwards_index()
    callsub test_reverse_with_forwards_index
    // iteration/base.py:18
    // log("test_reverse_with_reverse_index")
    pushbytes "test_reverse_with_reverse_index"
    log
    // iteration/base.py:19
    // self.test_reverse_with_reverse_index()
    callsub test_reverse_with_reverse_index
    // iteration/base.py:20
    // log("test_empty")
    pushbytes "test_empty"
    log
    // iteration/base.py:21
    // self.test_empty()
    callsub test_empty
    // iteration/base.py:22
    // log("test_break")
    pushbytes "test_break"
    log
    // iteration/base.py:23
    // self.test_break()
    callsub test_break
    // iteration/base.py:24
    // log("test_tuple_target")
    pushbytes "test_tuple_target"
    log
    // iteration/base.py:25
    // self.test_tuple_target()
    callsub test_tuple_target
    // iteration/base.py:26
    // return True
    intc_0 // 1
    return


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards() -> void:
test_forwards:
    // iteration/iterate_tuple.py:9-11
    // @typing.override
    // @subroutine
    // def test_forwards(self) -> None:
    proto 0 0

test_forwards_block@0:
    intc_1 // 0
    // iteration/iterate_tuple.py:12
    // for i in (Bytes(b"a"), Bytes(b"b"), Bytes(b"c")):
    bytec_0 // 0x61

test_forwards_for_body@1:
    // iteration/iterate_tuple.py:13
    // log(i)
    log

test_forwards_for_footer@2:
    // iteration/iterate_tuple.py:12
    // for i in (Bytes(b"a"), Bytes(b"b"), Bytes(b"c")):
    frame_dig 0
    switch test_forwards_for_header_1@3 test_forwards_for_header_2@4

test_forwards_after_for@5:
    retsub

test_forwards_for_header_2@4:
    intc_2 // 2
    frame_bury 0
    // iteration/iterate_tuple.py:12
    // for i in (Bytes(b"a"), Bytes(b"b"), Bytes(b"c")):
    bytec_1 // 0x63
    b test_forwards_for_body@1

test_forwards_for_header_1@3:
    intc_0 // 1
    frame_bury 0
    // iteration/iterate_tuple.py:12
    // for i in (Bytes(b"a"), Bytes(b"b"), Bytes(b"c")):
    bytec_2 // 0x62
    b test_forwards_for_body@1


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed() -> void:
test_reversed:
    // iteration/iterate_tuple.py:15-17
    // @typing.override
    // @subroutine
    // def test_reversed(self) -> None:
    proto 0 0

test_reversed_block@0:
    intc_1 // 0
    // iteration/iterate_tuple.py:18
    // for i in reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    bytec_1 // 0x63

test_reversed_for_body@1:
    // iteration/iterate_tuple.py:19
    // log(i)
    log

test_reversed_for_footer@2:
    // iteration/iterate_tuple.py:18
    // for i in reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    frame_dig 0
    switch test_reversed_for_header_1@3 test_reversed_for_header_2@4

test_reversed_after_for@5:
    retsub

test_reversed_for_header_2@4:
    intc_2 // 2
    frame_bury 0
    // iteration/iterate_tuple.py:18
    // for i in reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    bytec_0 // 0x61
    b test_reversed_for_body@1

test_reversed_for_header_1@3:
    intc_0 // 1
    frame_bury 0
    // iteration/iterate_tuple.py:18
    // for i in reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    bytec_2 // 0x62
    b test_reversed_for_body@1


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index() -> void:
test_forwards_with_forwards_index:
    // iteration/iterate_tuple.py:21-23
    // @typing.override
    // @subroutine
    // def test_forwards_with_forwards_index(self) -> None:
    proto 0 0

test_forwards_with_forwards_index_block@0:
    // iteration/iterate_tuple.py:24
    // for idx, i in uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    bytec_0 // 0x61
    intc_1 // 0
    swap

test_forwards_with_forwards_index_for_body@1:
    // iteration/iterate_tuple.py:25
    // self._log_with_index(idx, i)
    frame_dig 0
    swap
    callsub _log_with_index

test_forwards_with_forwards_index_for_footer@2:
    // iteration/iterate_tuple.py:24
    // for idx, i in uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    frame_dig 0
    switch test_forwards_with_forwards_index_for_header_1@3 test_forwards_with_forwards_index_for_header_2@4

test_forwards_with_forwards_index_after_for@5:
    retsub

test_forwards_with_forwards_index_for_header_2@4:
    // iteration/iterate_tuple.py:24
    // for idx, i in uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    bytec_1 // 0x63
    intc_2 // 2
    frame_bury 0
    b test_forwards_with_forwards_index_for_body@1

test_forwards_with_forwards_index_for_header_1@3:
    // iteration/iterate_tuple.py:24
    // for idx, i in uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))):
    bytec_2 // 0x62
    intc_0 // 1
    frame_bury 0
    b test_forwards_with_forwards_index_for_body@1


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index() -> void:
test_forwards_with_reverse_index:
    // iteration/iterate_tuple.py:28-30
    // @typing.override
    // @subroutine
    // def test_forwards_with_reverse_index(self) -> None:
    proto 0 0

test_forwards_with_reverse_index_block@0:
    intc_1 // 0
    // iteration/iterate_tuple.py:31
    // for idx, i in reversed(uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))))):
    bytec_0 // 0x61
    intc_2 // 2
    swap

test_forwards_with_reverse_index_for_body@1:
    // iteration/iterate_tuple.py:32
    // self._log_with_index(idx, i)
    callsub _log_with_index

test_forwards_with_reverse_index_for_footer@2:
    // iteration/iterate_tuple.py:31
    // for idx, i in reversed(uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))))):
    frame_dig 0
    switch test_forwards_with_reverse_index_for_header_1@3 test_forwards_with_reverse_index_for_header_2@4

test_forwards_with_reverse_index_after_for@5:
    retsub

test_forwards_with_reverse_index_for_header_2@4:
    intc_2 // 2
    frame_bury 0
    // iteration/iterate_tuple.py:31
    // for idx, i in reversed(uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))))):
    bytec_1 // 0x63
    intc_1 // 0
    swap
    b test_forwards_with_reverse_index_for_body@1

test_forwards_with_reverse_index_for_header_1@3:
    intc_0 // 1
    frame_bury 0
    // iteration/iterate_tuple.py:31
    // for idx, i in reversed(uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c"))))):
    bytec_2 // 0x62
    intc_0 // 1
    swap
    b test_forwards_with_reverse_index_for_body@1


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index() -> void:
test_reverse_with_forwards_index:
    // iteration/iterate_tuple.py:35-37
    // @typing.override
    // @subroutine
    // def test_reverse_with_forwards_index(self) -> None:
    proto 0 0

test_reverse_with_forwards_index_block@0:
    // iteration/iterate_tuple.py:38
    // for idx, i in uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    bytec_1 // 0x63
    intc_1 // 0
    swap

test_reverse_with_forwards_index_for_body@1:
    // iteration/iterate_tuple.py:39
    // self._log_with_index(idx, i)
    frame_dig 0
    swap
    callsub _log_with_index

test_reverse_with_forwards_index_for_footer@2:
    // iteration/iterate_tuple.py:38
    // for idx, i in uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    frame_dig 0
    switch test_reverse_with_forwards_index_for_header_1@3 test_reverse_with_forwards_index_for_header_2@4

test_reverse_with_forwards_index_after_for@5:
    retsub

test_reverse_with_forwards_index_for_header_2@4:
    // iteration/iterate_tuple.py:38
    // for idx, i in uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    bytec_0 // 0x61
    intc_2 // 2
    frame_bury 0
    b test_reverse_with_forwards_index_for_body@1

test_reverse_with_forwards_index_for_header_1@3:
    // iteration/iterate_tuple.py:38
    // for idx, i in uenumerate(reversed((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    bytec_2 // 0x62
    intc_0 // 1
    frame_bury 0
    b test_reverse_with_forwards_index_for_body@1


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index() -> void:
test_reverse_with_reverse_index:
    // iteration/iterate_tuple.py:42-44
    // @typing.override
    // @subroutine
    // def test_reverse_with_reverse_index(self) -> None:
    proto 0 0

test_reverse_with_reverse_index_block@0:
    intc_1 // 0
    // iteration/iterate_tuple.py:45
    // for idx, i in reversed(uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    bytec_1 // 0x63
    intc_2 // 2
    swap

test_reverse_with_reverse_index_for_body@1:
    // iteration/iterate_tuple.py:46
    // self._log_with_index(idx, i)
    callsub _log_with_index

test_reverse_with_reverse_index_for_footer@2:
    // iteration/iterate_tuple.py:45
    // for idx, i in reversed(uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    frame_dig 0
    switch test_reverse_with_reverse_index_for_header_1@3 test_reverse_with_reverse_index_for_header_2@4

test_reverse_with_reverse_index_after_for@5:
    retsub

test_reverse_with_reverse_index_for_header_2@4:
    intc_2 // 2
    frame_bury 0
    // iteration/iterate_tuple.py:45
    // for idx, i in reversed(uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    bytec_0 // 0x61
    intc_1 // 0
    swap
    b test_reverse_with_reverse_index_for_body@1

test_reverse_with_reverse_index_for_header_1@3:
    intc_0 // 1
    frame_bury 0
    // iteration/iterate_tuple.py:45
    // for idx, i in reversed(uenumerate((Bytes(b"a"), Bytes(b"b"), Bytes(b"c")))):
    bytec_2 // 0x62
    intc_0 // 1
    swap
    b test_reverse_with_reverse_index_for_body@1


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty() -> void:
test_empty:

test_empty_block@0:
    retsub


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_break() -> void:
test_break:

test_break_block@0:

test_break_for_body@1:
    // iteration/iterate_tuple.py:74
    // for x in (Bytes(b"a"), Bytes(b"b"), Bytes(b"c")):
    bytec_0 // 0x61
    // iteration/iterate_tuple.py:75
    // log(x)
    log

test_break_after_for@2:
    retsub


// test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target() -> void:
test_tuple_target:

test_tuple_target_block@0:

test_tuple_target_for_body@1:
    intc_1 // 0
    // iteration/iterate_tuple.py:81
    // for tup in uenumerate((Bytes(b"t"),)):
    pushbytes 0x74
    // iteration/iterate_tuple.py:82
    // self._log_with_index(tup[0], tup[1])
    callsub _log_with_index

test_tuple_target_for_footer@2:
    intc_1 // 0
    // iteration/iterate_tuple.py:81
    // for tup in uenumerate((Bytes(b"t"),)):
    switch

test_tuple_target_after_for@3:
    retsub


// test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
_log_with_index:
    // iteration/base.py:31-32
    // @subroutine
    // def _log_with_index(self, idx: UInt64, value: Bytes) -> None:
    proto 2 0

_log_with_index_block@0:
    // iteration/base.py:33
    // digits = Bytes(b"0123456789")
    pushbytes 0x30313233343536373839
    // iteration/base.py:34
    // log(digits[idx], value, sep="=")
    frame_dig -2
    intc_0 // 1
    extract3 // on error: Index access is out of bounds
    pushbytes "="
    concat
    frame_dig -1
    concat
    log
    retsub
