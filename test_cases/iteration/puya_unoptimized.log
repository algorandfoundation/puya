debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), paths=['iteration'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
iteration/base.py:38 debug: skipping trivial method test_forwards
iteration/base.py:42 debug: skipping trivial method test_reversed
iteration/base.py:46 debug: skipping trivial method test_forwards_with_forwards_index
iteration/base.py:50 debug: skipping trivial method test_forwards_with_reverse_index
iteration/base.py:54 debug: skipping trivial method test_reverse_with_forwards_index
iteration/base.py:58 debug: skipping trivial method test_reverse_with_reverse_index
iteration/base.py:62 debug: skipping trivial method test_empty
iteration/base.py:66 debug: skipping trivial method test_break
iteration/base.py:70 debug: skipping trivial method test_tuple_target
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#3 <- block@3) in block@3
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#3 <- block@3) in block@3
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1) in block@1
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1, idx#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1) in block@1
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1, idx#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1) in block@1
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1, idx#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@6
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@5) in block@5
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@5, i#5 <- block@8) in block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@10
debug: Created Phi assignment: let i#7: uint64 = undefined while trying to resolve 'i' in block@10
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@10
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@10
debug: Added i#6 to Phi node: let i#7: uint64 = φ(i#6 <- block@9) in block@9
debug: Added i#8 to Phi node: let i#7: uint64 = φ(i#6 <- block@9, i#8 <- block@12) in block@12
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@9) in block@9
debug: Added idx#2 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@9, idx#2 <- block@12) in block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@15
debug: Created Phi assignment: let i#10: uint64 = undefined while trying to resolve 'i' in block@15
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@15
debug: Created Phi assignment: let idx#4: uint64 = undefined while trying to resolve 'idx' in block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@15
debug: Added i#9 to Phi node: let i#10: uint64 = φ(i#9 <- block@14) in block@14
debug: Added i#11 to Phi node: let i#10: uint64 = φ(i#9 <- block@14, i#11 <- block@17) in block@17
debug: Added idx#3 to Phi node: let idx#4: uint64 = φ(idx#3 <- block@14) in block@14
debug: Added idx#5 to Phi node: let idx#4: uint64 = φ(idx#3 <- block@14, idx#5 <- block@17) in block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let i#13: uint64 = undefined while trying to resolve 'i' in block@20
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let idx#7: uint64 = undefined while trying to resolve 'idx' in block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@20
debug: Added i#12 to Phi node: let i#13: uint64 = φ(i#12 <- block@19) in block@19
debug: Added i#14 to Phi node: let i#13: uint64 = φ(i#12 <- block@19, i#14 <- block@22) in block@22
debug: Added idx#6 to Phi node: let idx#7: uint64 = φ(idx#6 <- block@19) in block@19
debug: Added idx#8 to Phi node: let idx#7: uint64 = φ(idx#6 <- block@19, idx#8 <- block@22) in block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@25
debug: Created Phi assignment: let i#16: uint64 = undefined while trying to resolve 'i' in block@25
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@25
debug: Created Phi assignment: let idx#10: uint64 = undefined while trying to resolve 'idx' in block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@25
debug: Added i#15 to Phi node: let i#16: uint64 = φ(i#15 <- block@24) in block@24
debug: Added i#17 to Phi node: let i#16: uint64 = φ(i#15 <- block@24, i#17 <- block@27) in block@27
debug: Added idx#9 to Phi node: let idx#10: uint64 = φ(idx#9 <- block@24) in block@24
debug: Added idx#11 to Phi node: let idx#10: uint64 = φ(idx#9 <- block@24, idx#11 <- block@27) in block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let i#1: uint64 = φ(i#0 <- block@0) (i#1) with i#0
debug: Deleting Phi assignment: let i#1: uint64 = φ(i#0 <- block@0)
debug: Replaced trivial Phi node: let i#1: uint64 = φ(i#0 <- block@0) (i#1) with i#0 in current definition for 2 blocks
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0) (values#1) with values#0 in current definition for 2 blocks
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'tup.1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.1#1: uint64 = undefined while trying to resolve 'tup.1' in block@1
debug: Looking for 'tup.0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.0#1: uint64 = undefined while trying to resolve 'tup.0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added tup.1#0 to Phi node: let tup.1#1: uint64 = φ(tup.1#0 <- block@0) in block@0
debug: Added tup.1#2 to Phi node: let tup.1#1: uint64 = φ(tup.1#0 <- block@0, tup.1#2 <- block@3) in block@3
debug: Added tup.0#0 to Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) in block@0
debug: Added tup.0#2 to Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0, tup.0#2 <- block@3) in block@3
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'x' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let x#1: bytes = undefined while trying to resolve 'x' in block@1
debug: Terminated block@1
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) (loop_counter%0#1) with loop_counter%0#0
debug: Deleting Phi assignment: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0)
debug: Replaced trivial Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) (loop_counter%0#1) with loop_counter%0#0 in current definition for 1 blocks
debug: Added x#0 to Phi node: let x#1: bytes = φ(x#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let x#1: bytes = φ(x#0 <- block@0) (x#1) with x#0
debug: Deleting Phi assignment: let x#1: bytes = φ(x#0 <- block@0)
debug: Replaced trivial Phi node: let x#1: bytes = φ(x#0 <- block@0) (x#1) with x#0 in current definition for 1 blocks
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'tup.0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.0#1: uint64 = undefined while trying to resolve 'tup.0' in block@1
debug: Looking for 'tup.1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.1#1: bytes = undefined while trying to resolve 'tup.1' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@1
debug: Added tup.0#0 to Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) (tup.0#1) with tup.0#0
debug: Deleting Phi assignment: let tup.0#1: uint64 = φ(tup.0#0 <- block@0)
debug: Replaced trivial Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) (tup.0#1) with tup.0#0 in current definition for 1 blocks
debug: Added tup.1#0 to Phi node: let tup.1#1: bytes = φ(tup.1#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let tup.1#1: bytes = φ(tup.1#0 <- block@0) (tup.1#1) with tup.1#0
debug: Deleting Phi assignment: let tup.1#1: bytes = φ(tup.1#0 <- block@0)
debug: Replaced trivial Phi node: let tup.1#1: bytes = φ(tup.1#0 <- block@0) (tup.1#1) with tup.1#0 in current definition for 1 blocks
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 3 blocks
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 3 blocks
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Looking for 'reverse_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let reverse_index_internal%1#1: uint64 = undefined while trying to resolve 'reverse_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#1 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7) (item_index_internal%1#1) with item_index_internal%1#0
debug: Deleting Phi assignment: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7)
debug: Replaced trivial Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7) (item_index_internal%1#1) with item_index_internal%1#0 in current definition for 3 blocks
debug: Added reverse_index_internal%1#0 to Phi node: let reverse_index_internal%1#1: uint64 = φ(reverse_index_internal%1#0 <- block@4) in block@4
debug: Added reverse_index_internal%1#2 to Phi node: let reverse_index_internal%1#1: uint64 = φ(reverse_index_internal%1#0 <- block@4, reverse_index_internal%1#2 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@13
debug: Looking for 'reverse_index_internal%3' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let reverse_index_internal%3#1: uint64 = undefined while trying to resolve 'reverse_index_internal%3' in block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@13
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@12) in block@12
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@12, item_index_internal%3#2 <- block@15) in block@15
debug: Added reverse_index_internal%3#0 to Phi node: let reverse_index_internal%3#1: uint64 = φ(reverse_index_internal%3#0 <- block@12) in block@12
debug: Added reverse_index_internal%3#2 to Phi node: let reverse_index_internal%3#1: uint64 = φ(reverse_index_internal%3#0 <- block@12, reverse_index_internal%3#2 <- block@15) in block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Looking for 'item_index_internal%4' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let item_index_internal%4#1: uint64 = undefined while trying to resolve 'item_index_internal%4' in block@17
debug: Looking for 'reverse_index_internal%4' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let reverse_index_internal%4#1: uint64 = undefined while trying to resolve 'reverse_index_internal%4' in block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@17
debug: Added item_index_internal%4#0 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@16) in block@16
debug: Added item_index_internal%4#2 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@16, item_index_internal%4#2 <- block@19) in block@19
debug: Added reverse_index_internal%4#0 to Phi node: let reverse_index_internal%4#1: uint64 = φ(reverse_index_internal%4#0 <- block@16) in block@16
debug: Added reverse_index_internal%4#2 to Phi node: let reverse_index_internal%4#1: uint64 = φ(reverse_index_internal%4#0 <- block@16, reverse_index_internal%4#2 <- block@19) in block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Looking for 'item_index_internal%5' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let item_index_internal%5#1: uint64 = undefined while trying to resolve 'item_index_internal%5' in block@21
debug: Looking for 'reverse_index_internal%5' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let reverse_index_internal%5#1: uint64 = undefined while trying to resolve 'reverse_index_internal%5' in block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@21
debug: Added item_index_internal%5#0 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20) in block@20
debug: Added item_index_internal%5#1 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23) in block@23
debug: Replacing trivial Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23) (item_index_internal%5#1) with item_index_internal%5#0
debug: Deleting Phi assignment: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23)
debug: Replaced trivial Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23) (item_index_internal%5#1) with item_index_internal%5#0 in current definition for 3 blocks
debug: Added reverse_index_internal%5#0 to Phi node: let reverse_index_internal%5#1: uint64 = φ(reverse_index_internal%5#0 <- block@20) in block@20
debug: Added reverse_index_internal%5#2 to Phi node: let reverse_index_internal%5#1: uint64 = φ(reverse_index_internal%5#0 <- block@20, reverse_index_internal%5#2 <- block@23) in block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 1 blocks
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: optimizing approval program of test_cases.iteration.iterate_urange.URangeIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_urange.URangeIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.iteration.iterate_urange.URangeIterationTest
debug: lowering array IR nodes in clear program of test_cases.iteration.iterate_urange.URangeIterationTest
debug: optimizing approval program of test_cases.iteration.iterate_urange.URangeIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_urange.URangeIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.iteration.iterate_urange.URangeIterationTest
iteration/base.py:7 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.approval_program, []
iteration/iterate_urange.py:9 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards, []
iteration/iterate_urange.py:17 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed, []
iteration/iterate_urange.py:25 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index, []
iteration/iterate_urange.py:34 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index, []
iteration/iterate_urange.py:43 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index, []
iteration/iterate_urange.py:52 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index, []
iteration/iterate_urange.py:61 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_empty, []
iteration/iterate_urange.py:77 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_break, []
iteration/iterate_urange.py:85 debug: auto reserving slots in test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target, []
iteration/base.py:31 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase._log_with_index, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.iteration.iterate_urange.URangeIterationTest
iteration/base.py:28 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#6, i#1, i#3]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#6, i#1, i#3]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#6, i#1, i#3]
debug: Coalescing idx#0 with [idx#6, idx#1, idx#3]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#6, i#1, i#3]
debug: Coalescing idx#0 with [idx#6, idx#1, idx#3]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#6, i#1, i#3]
debug: Coalescing idx#0 with [idx#6, idx#1, idx#3]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#6, i#1, i#3]
debug: Coalescing idx#0 with [idx#6, idx#1, idx#3]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_empty using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#20, i#1, i#2, i#3, i#23, i#4, i#5, i#6, i#26, i#7, i#8, i#9, i#29, i#10, i#11, i#12, i#32, i#13, i#14, i#15, i#35, i#16, i#17]
debug: Coalescing idx#0 with [idx#14, idx#1, idx#2, idx#3, idx#17, idx#4, idx#5, idx#6, idx#20, idx#7, idx#8, idx#9, idx#23, idx#10, idx#11]
debug: Coalescing resulted in 102 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_break using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target using strategy RootOperandGrouping
debug: Coalescing tup.1#0 with [tup.1#5, tup.1#1, tup.1#2]
debug: Coalescing tup.0#0 with [tup.0#5, tup.0#1, tup.0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: loc: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: pred: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: ready: 
debug: to_do: tup.1#0, tup.0#0
debug: * to_do tup.0#0
debug: * to_do tup.1#0
debug: loc: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: pred: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: ready: 
debug: to_do: tup.1#0, tup.0#0
debug: * to_do tup.0#0
debug: * to_do tup.1#0
debug: loc: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: pred: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: ready: 
debug: to_do: tup.1#0, tup.0#0
debug: * to_do tup.0#0
debug: * to_do tup.1#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase._log_with_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Performing post-SSA optimizations at level 0
debug: Output IR to iteration/out_unoptimized/URangeIterationTest.ir/URangeIterationTest.approval.0.destructured.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to iteration/out_unoptimized/URangeIterationTest.ir/URangeIterationTest.clear.0.destructured.ir
debug: Inserted test_forwards_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_forwards_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_forwards_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_forwards_for_body@2.ops[6]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_reversed_block@0.ops[5]: 'l-store-copy should_loop%0#0 0'
debug: Replaced test_reversed_block@0.ops[7]: 'v-load should_loop%0#0' with 'l-load should_loop%0#0'
debug: Inserted test_reversed_for_header@1.ops[3]: 'l-store-copy range_length%0#0 0'
debug: Replaced test_reversed_for_header@1.ops[5]: 'v-load range_length%0#0' with 'l-load range_length%0#0'
debug: Inserted test_reversed_for_header@1.ops[8]: 'l-store-copy range_length_minus_one%0#0 0'
debug: Replaced test_reversed_for_header@1.ops[10]: 'v-load range_length_minus_one%0#0' with 'l-load range_length_minus_one%0#0'
debug: Inserted test_reversed_for_header@1.ops[21]: 'l-store-copy max_range_item%0#0 0'
debug: Replaced test_reversed_for_header@1.ops[23]: 'v-load max_range_item%0#0' with 'l-load max_range_item%0#0'
debug: Inserted test_reversed_for_header@1.ops[13]: 'l-store-copy iteration_count_minus_one%0#0 0'
debug: Replaced test_reversed_for_header@1.ops[16]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_reversed_for_header@1.ops[18]: 'l-store-copy range_delta%0#0 0'
debug: Replaced test_reversed_for_header@1.ops[21]: 'v-load range_delta%0#0' with 'l-load range_delta%0#0'
debug: Inserted test_reversed_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_reversed_for_body@2.ops[6]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_reversed_for_footer@3.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_reversed_for_footer@3.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_forwards_with_forwards_index_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_forwards_with_forwards_index_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[7]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_forwards_with_reverse_index_block@0.ops[5]: 'l-store-copy should_loop%0#0 0'
debug: Replaced test_forwards_with_reverse_index_block@0.ops[7]: 'v-load should_loop%0#0' with 'l-load should_loop%0#0'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[3]: 'l-store-copy range_length%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[5]: 'v-load range_length%0#0' with 'l-load range_length%0#0'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[8]: 'l-store-copy range_length_minus_one%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[10]: 'v-load range_length_minus_one%0#0' with 'l-load range_length_minus_one%0#0'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[13]: 'l-store-copy iteration_count_minus_one%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[16]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[18]: 'l-store-copy range_delta%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[21]: 'v-load range_delta%0#0' with 'l-load range_delta%0#0'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[17]: 'l-store-copy iteration_count_minus_one%0#0 1'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[27]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[7]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_forwards_with_reverse_index_for_footer@3.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_footer@3.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_reverse_with_forwards_index_block@0.ops[5]: 'l-store-copy should_loop%0#0 0'
debug: Replaced test_reverse_with_forwards_index_block@0.ops[7]: 'v-load should_loop%0#0' with 'l-load should_loop%0#0'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[3]: 'l-store-copy range_length%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[5]: 'v-load range_length%0#0' with 'l-load range_length%0#0'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[8]: 'l-store-copy range_length_minus_one%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[10]: 'v-load range_length_minus_one%0#0' with 'l-load range_length_minus_one%0#0'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[21]: 'l-store-copy max_range_item%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[23]: 'v-load max_range_item%0#0' with 'l-load max_range_item%0#0'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[13]: 'l-store-copy iteration_count_minus_one%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[16]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[18]: 'l-store-copy range_delta%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[21]: 'v-load range_delta%0#0' with 'l-load range_delta%0#0'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[7]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_reverse_with_forwards_index_for_footer@3.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_footer@3.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_reverse_with_reverse_index_block@0.ops[5]: 'l-store-copy should_loop%0#0 0'
debug: Replaced test_reverse_with_reverse_index_block@0.ops[7]: 'v-load should_loop%0#0' with 'l-load should_loop%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[3]: 'l-store-copy range_length%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[5]: 'v-load range_length%0#0' with 'l-load range_length%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[8]: 'l-store-copy range_length_minus_one%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[10]: 'v-load range_length_minus_one%0#0' with 'l-load range_length_minus_one%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[21]: 'l-store-copy max_range_item%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[23]: 'v-load max_range_item%0#0' with 'l-load max_range_item%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[13]: 'l-store-copy iteration_count_minus_one%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[16]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[18]: 'l-store-copy range_delta%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[21]: 'v-load range_delta%0#0' with 'l-load range_delta%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[17]: 'l-store-copy iteration_count_minus_one%0#0 1'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[28]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[7]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_reverse_with_reverse_index_for_footer@3.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_footer@3.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_empty_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_empty_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_empty_for_body@2.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_empty_for_body@2.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_empty_after_for@4.ops[5]: 'l-store-copy should_loop%0#0 0'
debug: Replaced test_empty_after_for@4.ops[7]: 'v-load should_loop%0#0' with 'l-load should_loop%0#0'
debug: Inserted test_empty_for_header@5.ops[3]: 'l-store-copy range_length%0#0 0'
debug: Replaced test_empty_for_header@5.ops[5]: 'v-load range_length%0#0' with 'l-load range_length%0#0'
debug: Inserted test_empty_for_header@5.ops[8]: 'l-store-copy range_length_minus_one%0#0 0'
debug: Replaced test_empty_for_header@5.ops[10]: 'v-load range_length_minus_one%0#0' with 'l-load range_length_minus_one%0#0'
debug: Inserted test_empty_for_header@5.ops[21]: 'l-store-copy max_range_item%0#0 0'
debug: Replaced test_empty_for_header@5.ops[23]: 'v-load max_range_item%0#0' with 'l-load max_range_item%0#0'
debug: Inserted test_empty_for_header@5.ops[13]: 'l-store-copy iteration_count_minus_one%0#0 0'
debug: Replaced test_empty_for_header@5.ops[16]: 'v-load iteration_count_minus_one%0#0' with 'l-load iteration_count_minus_one%0#0'
debug: Inserted test_empty_for_header@5.ops[18]: 'l-store-copy range_delta%0#0 0'
debug: Replaced test_empty_for_header@5.ops[21]: 'v-load range_delta%0#0' with 'l-load range_delta%0#0'
debug: Inserted test_empty_for_body@6.ops[2]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_empty_for_body@6.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_empty_for_footer@7.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_empty_for_footer@7.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_empty_for_header@10.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced test_empty_for_header@10.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted test_empty_for_body@11.ops[2]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_empty_for_body@11.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_empty_for_body@11.ops[14]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_empty_for_body@11.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_empty_for_body@11.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_empty_for_body@11.ops[13]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_empty_for_body@11.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_empty_for_body@11.ops[13]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_empty_after_for@13.ops[5]: 'l-store-copy should_loop%1#0 0'
debug: Replaced test_empty_after_for@13.ops[7]: 'v-load should_loop%1#0' with 'l-load should_loop%1#0'
debug: Inserted test_empty_for_header@14.ops[3]: 'l-store-copy range_length%1#0 0'
debug: Replaced test_empty_for_header@14.ops[5]: 'v-load range_length%1#0' with 'l-load range_length%1#0'
debug: Inserted test_empty_for_header@14.ops[8]: 'l-store-copy range_length_minus_one%1#0 0'
debug: Replaced test_empty_for_header@14.ops[10]: 'v-load range_length_minus_one%1#0' with 'l-load range_length_minus_one%1#0'
debug: Inserted test_empty_for_header@14.ops[13]: 'l-store-copy iteration_count_minus_one%1#0 0'
debug: Replaced test_empty_for_header@14.ops[16]: 'v-load iteration_count_minus_one%1#0' with 'l-load iteration_count_minus_one%1#0'
debug: Inserted test_empty_for_header@14.ops[18]: 'l-store-copy range_delta%1#0 0'
debug: Replaced test_empty_for_header@14.ops[21]: 'v-load range_delta%1#0' with 'l-load range_delta%1#0'
debug: Inserted test_empty_for_header@14.ops[17]: 'l-store-copy iteration_count_minus_one%1#0 1'
debug: Replaced test_empty_for_header@14.ops[27]: 'v-load iteration_count_minus_one%1#0' with 'l-load iteration_count_minus_one%1#0'
debug: Inserted test_empty_for_body@15.ops[2]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_empty_for_body@15.ops[4]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_empty_for_body@15.ops[14]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_empty_for_body@15.ops[16]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_empty_for_body@15.ops[10]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_empty_for_body@15.ops[13]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_empty_for_body@15.ops[7]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_empty_for_body@15.ops[13]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_empty_for_footer@16.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced test_empty_for_footer@16.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted test_empty_after_for@18.ops[5]: 'l-store-copy should_loop%2#0 0'
debug: Replaced test_empty_after_for@18.ops[7]: 'v-load should_loop%2#0' with 'l-load should_loop%2#0'
debug: Inserted test_empty_for_header@19.ops[3]: 'l-store-copy range_length%2#0 0'
debug: Replaced test_empty_for_header@19.ops[5]: 'v-load range_length%2#0' with 'l-load range_length%2#0'
debug: Inserted test_empty_for_header@19.ops[8]: 'l-store-copy range_length_minus_one%2#0 0'
debug: Replaced test_empty_for_header@19.ops[10]: 'v-load range_length_minus_one%2#0' with 'l-load range_length_minus_one%2#0'
debug: Inserted test_empty_for_header@19.ops[21]: 'l-store-copy max_range_item%2#0 0'
debug: Replaced test_empty_for_header@19.ops[23]: 'v-load max_range_item%2#0' with 'l-load max_range_item%2#0'
debug: Inserted test_empty_for_header@19.ops[13]: 'l-store-copy iteration_count_minus_one%2#0 0'
debug: Replaced test_empty_for_header@19.ops[16]: 'v-load iteration_count_minus_one%2#0' with 'l-load iteration_count_minus_one%2#0'
debug: Inserted test_empty_for_header@19.ops[18]: 'l-store-copy range_delta%2#0 0'
debug: Replaced test_empty_for_header@19.ops[21]: 'v-load range_delta%2#0' with 'l-load range_delta%2#0'
debug: Inserted test_empty_for_body@20.ops[2]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_empty_for_body@20.ops[4]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_empty_for_body@20.ops[14]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_empty_for_body@20.ops[16]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_empty_for_body@20.ops[10]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_empty_for_body@20.ops[13]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_empty_for_body@20.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_empty_for_body@20.ops[13]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_empty_for_footer@21.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced test_empty_for_footer@21.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted test_empty_after_for@23.ops[5]: 'l-store-copy should_loop%3#0 0'
debug: Replaced test_empty_after_for@23.ops[7]: 'v-load should_loop%3#0' with 'l-load should_loop%3#0'
debug: Inserted test_empty_for_header@24.ops[3]: 'l-store-copy range_length%3#0 0'
debug: Replaced test_empty_for_header@24.ops[5]: 'v-load range_length%3#0' with 'l-load range_length%3#0'
debug: Inserted test_empty_for_header@24.ops[8]: 'l-store-copy range_length_minus_one%3#0 0'
debug: Replaced test_empty_for_header@24.ops[10]: 'v-load range_length_minus_one%3#0' with 'l-load range_length_minus_one%3#0'
debug: Inserted test_empty_for_header@24.ops[21]: 'l-store-copy max_range_item%3#0 0'
debug: Replaced test_empty_for_header@24.ops[23]: 'v-load max_range_item%3#0' with 'l-load max_range_item%3#0'
debug: Inserted test_empty_for_header@24.ops[13]: 'l-store-copy iteration_count_minus_one%3#0 0'
debug: Replaced test_empty_for_header@24.ops[16]: 'v-load iteration_count_minus_one%3#0' with 'l-load iteration_count_minus_one%3#0'
debug: Inserted test_empty_for_header@24.ops[18]: 'l-store-copy range_delta%3#0 0'
debug: Replaced test_empty_for_header@24.ops[21]: 'v-load range_delta%3#0' with 'l-load range_delta%3#0'
debug: Inserted test_empty_for_header@24.ops[17]: 'l-store-copy iteration_count_minus_one%3#0 1'
debug: Replaced test_empty_for_header@24.ops[28]: 'v-load iteration_count_minus_one%3#0' with 'l-load iteration_count_minus_one%3#0'
debug: Inserted test_empty_for_body@25.ops[2]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_empty_for_body@25.ops[4]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_empty_for_body@25.ops[14]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_empty_for_body@25.ops[16]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_empty_for_body@25.ops[10]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_empty_for_body@25.ops[13]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_empty_for_body@25.ops[7]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_empty_for_body@25.ops[13]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_empty_for_footer@26.ops[3]: 'l-store-copy continue_looping%5#0 0'
debug: Replaced test_empty_for_footer@26.ops[5]: 'v-load continue_looping%5#0' with 'l-load continue_looping%5#0'
debug: Inserted test_break_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_break_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_break_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_break_for_body@2.ops[6]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted test_tuple_target_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_tuple_target_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_tuple_target_for_body@2.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced test_tuple_target_for_body@2.ops[7]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted _log_with_index_block@0.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced _log_with_index_block@0.ops[6]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted _log_with_index_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced _log_with_index_block@0.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _log_with_index_block@0.ops[14]: 'l-store-copy tmp%1#0 0'
debug: Replaced _log_with_index_block@0.ops[16]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Found 18 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Found 3 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards f-stack on first store: ['i#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed f-stack entry: ['i#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed f-stack on first store: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index f-stack on first store: ['i#0', 'idx#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index f-stack entry: ['i#0', 'idx#0', 'max_range_item%0#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index f-stack on first store: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index f-stack entry: ['i#0', 'idx#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index f-stack on first store: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index f-stack entry: ['i#0', 'idx#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index f-stack on first store: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_empty f-stack entry: ['idx#0', 'max_range_item%1#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_empty f-stack on first store: ['i#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target f-stack on first store: ['tup.1#0', 'tup.0#0']
iteration/base.py:7 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
iteration/iterate_urange.py:9 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards() -> void:
iteration/iterate_urange.py:17 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed() -> void:
iteration/iterate_urange.py:25 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index() -> void:
iteration/iterate_urange.py:34 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index() -> void:
iteration/iterate_urange.py:43 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index() -> void:
iteration/iterate_urange.py:52 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index() -> void:
iteration/iterate_urange.py:61 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_empty() -> void:
iteration/iterate_urange.py:77 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_break() -> void:
iteration/iterate_urange.py:85 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target() -> void:
iteration/base.py:31 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
iteration/base.py:7 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
iteration/iterate_urange.py:9 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards() -> void:
debug: removing explicit jump to fall-through block test_forwards_block@0
debug: removing explicit jump to fall-through block test_forwards_for_header@1
debug: removing explicit jump to fall-through block test_forwards_for_body@2
debug: removing explicit jump to fall-through block test_forwards_for_footer@3
iteration/iterate_urange.py:17 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed() -> void:
debug: removing explicit jump to fall-through block test_reversed_block@0
debug: removing explicit jump to fall-through block test_reversed_for_header@1
debug: removing explicit jump to fall-through block test_reversed_for_body@2
debug: removing explicit jump to fall-through block test_reversed_for_footer@3
debug: removing explicit jump to fall-through block test_reversed_for_increment@4
iteration/iterate_urange.py:25 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index() -> void:
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_block@0
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_header@1
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_body@2
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_footer@3
iteration/iterate_urange.py:34 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index() -> void:
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_block@0
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_header@1
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_body@2
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_footer@3
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_increment@4
iteration/iterate_urange.py:43 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index() -> void:
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_block@0
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_header@1
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_body@2
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_footer@3
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_increment@4
iteration/iterate_urange.py:52 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index() -> void:
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_block@0
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_header@1
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_body@2
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_footer@3
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_increment@4
iteration/iterate_urange.py:61 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_empty() -> void:
debug: removing explicit jump to fall-through block test_empty_block@0
debug: removing explicit jump to fall-through block test_empty_for_header@1
debug: removing explicit jump to fall-through block test_empty_for_body@2
debug: removing explicit jump to fall-through block test_empty_for_footer@3
debug: removing explicit jump to fall-through block test_empty_for_header@5
debug: removing explicit jump to fall-through block test_empty_for_body@6
debug: removing explicit jump to fall-through block test_empty_for_footer@7
debug: removing explicit jump to fall-through block test_empty_for_increment@8
debug: removing explicit jump to fall-through block test_empty_for_header@10
debug: removing explicit jump to fall-through block test_empty_for_body@11
debug: removing explicit jump to fall-through block test_empty_for_footer@12
debug: removing explicit jump to fall-through block test_empty_for_header@14
debug: removing explicit jump to fall-through block test_empty_for_body@15
debug: removing explicit jump to fall-through block test_empty_for_footer@16
debug: removing explicit jump to fall-through block test_empty_for_increment@17
debug: removing explicit jump to fall-through block test_empty_for_header@19
debug: removing explicit jump to fall-through block test_empty_for_body@20
debug: removing explicit jump to fall-through block test_empty_for_footer@21
debug: removing explicit jump to fall-through block test_empty_for_increment@22
debug: removing explicit jump to fall-through block test_empty_for_header@24
debug: removing explicit jump to fall-through block test_empty_for_body@25
debug: removing explicit jump to fall-through block test_empty_for_footer@26
debug: removing explicit jump to fall-through block test_empty_for_increment@27
iteration/iterate_urange.py:77 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_break() -> void:
debug: removing explicit jump to fall-through block test_break_block@0
debug: removing explicit jump to fall-through block test_break_for_header@1
debug: removing explicit jump to fall-through block test_break_for_body@2
debug: removing explicit jump to fall-through block test_break_after_for@3
iteration/iterate_urange.py:85 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target() -> void:
debug: removing explicit jump to fall-through block test_tuple_target_block@0
debug: removing explicit jump to fall-through block test_tuple_target_for_header@1
debug: removing explicit jump to fall-through block test_tuple_target_for_body@2
debug: removing explicit jump to fall-through block test_tuple_target_for_footer@3
iteration/base.py:31 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
debug: removing explicit jump to fall-through block _log_with_index_block@0
iteration/base.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
iteration/base.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
debug: optimizing approval program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable idx#2
debug: Removing unused variable loop_counter%0#1
debug: Removing unused variable loop_counter%0#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable idx#2
debug: Removing unused variable loop_counter%0#1
debug: Removing unused variable loop_counter%0#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable x#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable tup.1#0
debug: Removing unused variable tup.0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.iteration.iterate_tuple.TupleIterationTest
debug: lowering array IR nodes in clear program of test_cases.iteration.iterate_tuple.TupleIterationTest
debug: optimizing approval program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.iteration.iterate_tuple.TupleIterationTest
iteration/base.py:7 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.approval_program, []
iteration/iterate_tuple.py:9 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards, []
iteration/iterate_tuple.py:15 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed, []
iteration/iterate_tuple.py:21 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index, []
iteration/iterate_tuple.py:28 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index, []
iteration/iterate_tuple.py:35 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index, []
iteration/iterate_tuple.py:42 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index, []
iteration/iterate_tuple.py:49 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty, []
iteration/iterate_tuple.py:71 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_break, []
iteration/iterate_tuple.py:78 debug: auto reserving slots in test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target, []
iteration/base.py:31 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase._log_with_index, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.iteration.iterate_tuple.TupleIterationTest
iteration/base.py:28 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing resulted in 20 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing resulted in 20 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#8, idx#1, idx#3, idx#4]
debug: Coalescing resulted in 21 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#8, idx#1, idx#3, idx#4]
debug: Coalescing resulted in 30 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#8, idx#1, idx#3, idx#4]
debug: Coalescing resulted in 21 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#8, idx#1, idx#3, idx#4]
debug: Coalescing resulted in 30 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_break using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase._log_with_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Performing post-SSA optimizations at level 0
debug: Output IR to iteration/out_unoptimized/TupleIterationTest.ir/TupleIterationTest.approval.0.destructured.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to iteration/out_unoptimized/TupleIterationTest.ir/TupleIterationTest.clear.0.destructured.ir
debug: Inserted _log_with_index_block@0.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced _log_with_index_block@0.ops[6]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted _log_with_index_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced _log_with_index_block@0.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _log_with_index_block@0.ops[14]: 'l-store-copy tmp%1#0 0'
debug: Replaced _log_with_index_block@0.ops[16]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Allocated 1 variable/s to x-stack: i#0
debug: shared x-stack for test_forwards_block@0 -> test_forwards_for_body@1: i#0
debug: shared x-stack for test_forwards_for_header_1@3 -> test_forwards_for_body@1: i#0
debug: shared x-stack for test_forwards_for_header_2@4 -> test_forwards_for_body@1: i#0
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Allocated 1 variable/s to x-stack: i#0
debug: shared x-stack for test_reversed_block@0 -> test_reversed_for_body@1: i#0
debug: shared x-stack for test_reversed_for_header_1@3 -> test_reversed_for_body@1: i#0
debug: shared x-stack for test_reversed_for_header_2@4 -> test_reversed_for_body@1: i#0
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Allocated 1 variable/s to x-stack: i#0
debug: shared x-stack for test_forwards_with_forwards_index_block@0 -> test_forwards_with_forwards_index_for_body@1: i#0
debug: shared x-stack for test_forwards_with_forwards_index_for_header_1@3 -> test_forwards_with_forwards_index_for_body@1: i#0
debug: shared x-stack for test_forwards_with_forwards_index_for_header_2@4 -> test_forwards_with_forwards_index_for_body@1: i#0
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Allocated 2 variable/s to x-stack: i#0, idx#0
debug: shared x-stack for test_forwards_with_reverse_index_block@0 -> test_forwards_with_reverse_index_for_body@1: idx#0, i#0
debug: shared x-stack for test_forwards_with_reverse_index_for_header_1@3 -> test_forwards_with_reverse_index_for_body@1: idx#0, i#0
debug: shared x-stack for test_forwards_with_reverse_index_for_header_2@4 -> test_forwards_with_reverse_index_for_body@1: idx#0, i#0
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Allocated 1 variable/s to x-stack: i#0
debug: shared x-stack for test_reverse_with_forwards_index_block@0 -> test_reverse_with_forwards_index_for_body@1: i#0
debug: shared x-stack for test_reverse_with_forwards_index_for_header_1@3 -> test_reverse_with_forwards_index_for_body@1: i#0
debug: shared x-stack for test_reverse_with_forwards_index_for_header_2@4 -> test_reverse_with_forwards_index_for_body@1: i#0
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Allocated 2 variable/s to x-stack: i#0, idx#0
debug: shared x-stack for test_reverse_with_reverse_index_block@0 -> test_reverse_with_reverse_index_for_body@1: idx#0, i#0
debug: shared x-stack for test_reverse_with_reverse_index_for_header_1@3 -> test_reverse_with_reverse_index_for_body@1: idx#0, i#0
debug: shared x-stack for test_reverse_with_reverse_index_for_header_2@4 -> test_reverse_with_reverse_index_for_body@1: idx#0, i#0
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Found 3 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards f-stack entry: []
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards f-stack on first store: ['loop_counter%0#0']
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed f-stack entry: []
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed f-stack on first store: ['loop_counter%0#0']
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index f-stack on first store: ['idx#0']
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index f-stack on first store: ['loop_counter%0#0']
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index f-stack on first store: ['idx#0']
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index f-stack on first store: ['loop_counter%0#0']
iteration/base.py:7 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
iteration/iterate_tuple.py:9 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards() -> void:
iteration/iterate_tuple.py:15 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed() -> void:
iteration/iterate_tuple.py:21 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index() -> void:
iteration/iterate_tuple.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index() -> void:
iteration/iterate_tuple.py:35 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index() -> void:
iteration/iterate_tuple.py:42 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index() -> void:
iteration/iterate_tuple.py:49 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty() -> void:
iteration/iterate_tuple.py:71 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_break() -> void:
iteration/iterate_tuple.py:78 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target() -> void:
iteration/base.py:31 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
iteration/base.py:7 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
iteration/iterate_tuple.py:9 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards() -> void:
debug: removing explicit jump to fall-through block test_forwards_block@0
debug: removing explicit jump to fall-through block test_forwards_for_body@1
debug: removing explicit jump to fall-through block test_forwards_for_footer@2
debug: removing explicit jump to fall-through block test_forwards_after_for@5
iteration/iterate_tuple.py:15 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed() -> void:
debug: removing explicit jump to fall-through block test_reversed_block@0
debug: removing explicit jump to fall-through block test_reversed_for_body@1
debug: removing explicit jump to fall-through block test_reversed_for_footer@2
debug: removing explicit jump to fall-through block test_reversed_after_for@5
iteration/iterate_tuple.py:21 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index() -> void:
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_block@0
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_body@1
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_footer@2
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_after_for@5
iteration/iterate_tuple.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index() -> void:
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_block@0
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_body@1
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_footer@2
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_after_for@5
iteration/iterate_tuple.py:35 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index() -> void:
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_block@0
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_body@1
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_footer@2
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_after_for@5
iteration/iterate_tuple.py:42 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index() -> void:
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_block@0
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_body@1
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_footer@2
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_after_for@5
iteration/iterate_tuple.py:49 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty() -> void:
debug: removing explicit jump to fall-through block test_empty_block@0
iteration/iterate_tuple.py:71 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_break() -> void:
debug: removing explicit jump to fall-through block test_break_block@0
debug: removing explicit jump to fall-through block test_break_for_body@1
debug: removing explicit jump to fall-through block test_break_after_for@2
iteration/iterate_tuple.py:78 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target() -> void:
debug: removing explicit jump to fall-through block test_tuple_target_block@0
debug: removing explicit jump to fall-through block test_tuple_target_for_body@1
debug: removing explicit jump to fall-through block test_tuple_target_for_footer@2
debug: removing explicit jump to fall-through block test_tuple_target_after_for@3
iteration/base.py:31 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
debug: removing explicit jump to fall-through block _log_with_index_block@0
iteration/base.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
iteration/base.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
debug: optimizing approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Removing unused variable idx#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Removing unused variable idx#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Removing unused variable item_index_internal%1#0
debug: Removing unused variable reverse_index_internal%2#0
debug: Removing unused variable item_index_internal%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest
debug: lowering array IR nodes in clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest
debug: optimizing approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest
iteration/base.py:7 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.approval_program, []
iteration/iterate_indexable.py:9 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards, []
iteration/iterate_indexable.py:15 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed, []
iteration/iterate_indexable.py:21 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index, []
iteration/iterate_indexable.py:28 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index, []
iteration/iterate_indexable.py:35 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index, []
iteration/iterate_indexable.py:42 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index, []
iteration/iterate_indexable.py:49 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty, []
iteration/iterate_indexable.py:65 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break, []
iteration/iterate_indexable.py:72 debug: auto reserving slots in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target, []
iteration/base.py:31 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase._log_with_index, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest
iteration/base.py:28 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed using strategy RootOperandGrouping
debug: Coalescing reverse_index_internal%0#0 with [reverse_index_internal%0#5, reverse_index_internal%0#1, reverse_index_internal%0#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing reverse_index_internal%0#0 with [reverse_index_internal%0#5, reverse_index_internal%0#1, reverse_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#0
debug: * to_do reverse_index_internal%0#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#0
debug: * to_do reverse_index_internal%0#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#0
debug: * to_do reverse_index_internal%0#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing reverse_index_internal%0#0 with [reverse_index_internal%0#5, reverse_index_internal%0#1, reverse_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#0
debug: * to_do reverse_index_internal%0#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#0
debug: * to_do reverse_index_internal%0#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#0=reverse_index_internal%0#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#0
debug: * to_do reverse_index_internal%0#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing reverse_index_internal%0#0 with [reverse_index_internal%0#5, reverse_index_internal%0#1, reverse_index_internal%0#2]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing i#0 with [i#1, i#2, i#3, i#4, i#5]
debug: Coalescing reverse_index_internal%1#0 with [reverse_index_internal%1#5, reverse_index_internal%1#1, reverse_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#5, item_index_internal%2#1, item_index_internal%2#2]
debug: Coalescing idx#0 with [idx#1, idx#2, idx#3]
debug: Coalescing item_index_internal%3#0 with [item_index_internal%3#5, item_index_internal%3#1, item_index_internal%3#2]
debug: Coalescing reverse_index_internal%3#0 with [reverse_index_internal%3#5, reverse_index_internal%3#1, reverse_index_internal%3#2]
debug: Coalescing item_index_internal%4#0 with [item_index_internal%4#5, item_index_internal%4#1, item_index_internal%4#2]
debug: Coalescing reverse_index_internal%4#0 with [reverse_index_internal%4#5, reverse_index_internal%4#1, reverse_index_internal%4#2]
debug: Coalescing reverse_index_internal%5#0 with [reverse_index_internal%5#5, reverse_index_internal%5#1, reverse_index_internal%5#2]
debug: Coalescing resulted in 88 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#0=reverse_index_internal%3#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#0=reverse_index_internal%3#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#0
debug: * to_do reverse_index_internal%3#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#0=reverse_index_internal%3#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#0=reverse_index_internal%3#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#0
debug: * to_do reverse_index_internal%3#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#0=reverse_index_internal%3#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#0=reverse_index_internal%3#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#0
debug: * to_do reverse_index_internal%3#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%4#0=item_index_internal%4#0, reverse_index_internal%4#0=reverse_index_internal%4#0}
debug: pred: {item_index_internal%4#0=item_index_internal%4#0, reverse_index_internal%4#0=reverse_index_internal%4#0}
debug: ready: 
debug: to_do: item_index_internal%4#0, reverse_index_internal%4#0
debug: * to_do reverse_index_internal%4#0
debug: * to_do item_index_internal%4#0
debug: loc: {item_index_internal%4#0=item_index_internal%4#0, reverse_index_internal%4#0=reverse_index_internal%4#0}
debug: pred: {item_index_internal%4#0=item_index_internal%4#0, reverse_index_internal%4#0=reverse_index_internal%4#0}
debug: ready: 
debug: to_do: item_index_internal%4#0, reverse_index_internal%4#0
debug: * to_do reverse_index_internal%4#0
debug: * to_do item_index_internal%4#0
debug: loc: {item_index_internal%4#0=item_index_internal%4#0, reverse_index_internal%4#0=reverse_index_internal%4#0}
debug: pred: {item_index_internal%4#0=item_index_internal%4#0, reverse_index_internal%4#0=reverse_index_internal%4#0}
debug: ready: 
debug: to_do: item_index_internal%4#0, reverse_index_internal%4#0
debug: * to_do reverse_index_internal%4#0
debug: * to_do item_index_internal%4#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase._log_with_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Performing post-SSA optimizations at level 0
debug: Output IR to iteration/out_unoptimized/IndexableIterationTest.ir/IndexableIterationTest.approval.0.destructured.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to iteration/out_unoptimized/IndexableIterationTest.ir/IndexableIterationTest.clear.0.destructured.ir
debug: Inserted test_forwards_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_forwards_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_forwards_for_body@2.ops[4]: 'l-store-copy i#0 0'
debug: Replaced test_forwards_for_body@2.ops[6]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_reversed_block@0.ops[2]: 'l-store-copy bytes_length%0#0 0'
debug: Replaced test_reversed_block@0.ops[4]: 'v-load bytes_length%0#0' with 'l-load bytes_length%0#0'
debug: Inserted test_reversed_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_reversed_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_reversed_for_body@2.ops[8]: 'l-store-copy i#0 0'
debug: Replaced test_reversed_for_body@2.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_reversed_for_body@2.ops[3]: 'l-store-copy reverse_index_internal%0#0 0'
debug: Replaced test_reversed_for_body@2.ops[6]: 'v-load reverse_index_internal%0#0' with 'l-load reverse_index_internal%0#0'
debug: Inserted test_forwards_with_forwards_index_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_forwards_with_forwards_index_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[6]: 'l-store-copy idx#0 0'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[8]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[6]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[5]: 'l-store-copy i#0 1'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_forwards_with_reverse_index_block@0.ops[2]: 'l-store-copy bytes_length%0#0 0'
debug: Replaced test_forwards_with_reverse_index_block@0.ops[6]: 'v-load bytes_length%0#0' with 'l-load bytes_length%0#0'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[10]: 'l-store-copy idx#0 0'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[8]: 'l-store-copy i#0 0'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[3]: 'l-store-copy reverse_index_internal%0#0 0'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[11]: 'v-load reverse_index_internal%0#0' with 'l-load reverse_index_internal%0#0'
debug: Inserted test_reverse_with_forwards_index_block@0.ops[2]: 'l-store-copy bytes_length%0#0 0'
debug: Replaced test_reverse_with_forwards_index_block@0.ops[6]: 'v-load bytes_length%0#0' with 'l-load bytes_length%0#0'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[10]: 'l-store-copy idx#0 0'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[3]: 'l-store-copy reverse_index_internal%0#0 0'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[6]: 'v-load reverse_index_internal%0#0' with 'l-load reverse_index_internal%0#0'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[9]: 'l-store-copy i#0 0'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_reverse_with_reverse_index_block@0.ops[2]: 'l-store-copy bytes_length%0#0 0'
debug: Replaced test_reverse_with_reverse_index_block@0.ops[4]: 'v-load bytes_length%0#0' with 'l-load bytes_length%0#0'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[10]: 'l-store-copy idx#0 0'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[3]: 'l-store-copy reverse_index_internal%0#0 0'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[6]: 'v-load reverse_index_internal%0#0' with 'l-load reverse_index_internal%0#0'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[7]: 'l-store-copy reverse_index_internal%0#0 1'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[11]: 'v-load reverse_index_internal%0#0' with 'l-load reverse_index_internal%0#0'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[10]: 'l-store-copy i#0 1'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[16]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_empty_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_empty_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_empty_for_body@2.ops[4]: 'l-store-copy i#0 0'
debug: Replaced test_empty_for_body@2.ops[6]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_empty_after_for@4.ops[2]: 'l-store-copy bytes_length%1#0 0'
debug: Replaced test_empty_after_for@4.ops[4]: 'v-load bytes_length%1#0' with 'l-load bytes_length%1#0'
debug: Inserted test_empty_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced test_empty_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted test_empty_for_body@6.ops[8]: 'l-store-copy i#0 0'
debug: Replaced test_empty_for_body@6.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_empty_for_body@6.ops[3]: 'l-store-copy reverse_index_internal%1#0 0'
debug: Replaced test_empty_for_body@6.ops[6]: 'v-load reverse_index_internal%1#0' with 'l-load reverse_index_internal%1#0'
debug: Inserted test_empty_for_header@9.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced test_empty_for_header@9.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted test_empty_for_body@10.ops[6]: 'l-store-copy idx#0 0'
debug: Replaced test_empty_for_body@10.ops[8]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_empty_for_body@10.ops[2]: 'l-store-copy item_index_internal%2#0 1'
debug: Replaced test_empty_for_body@10.ops[6]: 'v-load item_index_internal%2#0' with 'l-load item_index_internal%2#0'
debug: Inserted test_empty_for_body@10.ops[5]: 'l-store-copy i#0 1'
debug: Replaced test_empty_for_body@10.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_empty_after_for@12.ops[2]: 'l-store-copy bytes_length%3#0 0'
debug: Replaced test_empty_after_for@12.ops[6]: 'v-load bytes_length%3#0' with 'l-load bytes_length%3#0'
debug: Inserted test_empty_for_header@13.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced test_empty_for_header@13.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted test_empty_for_body@14.ops[10]: 'l-store-copy idx#0 0'
debug: Replaced test_empty_for_body@14.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_empty_for_body@14.ops[8]: 'l-store-copy i#0 0'
debug: Replaced test_empty_for_body@14.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_empty_for_body@14.ops[3]: 'l-store-copy reverse_index_internal%3#0 0'
debug: Replaced test_empty_for_body@14.ops[11]: 'v-load reverse_index_internal%3#0' with 'l-load reverse_index_internal%3#0'
debug: Inserted test_empty_after_for@16.ops[2]: 'l-store-copy bytes_length%4#0 0'
debug: Replaced test_empty_after_for@16.ops[6]: 'v-load bytes_length%4#0' with 'l-load bytes_length%4#0'
debug: Inserted test_empty_for_header@17.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced test_empty_for_header@17.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted test_empty_for_body@18.ops[10]: 'l-store-copy idx#0 0'
debug: Replaced test_empty_for_body@18.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_empty_for_body@18.ops[3]: 'l-store-copy reverse_index_internal%4#0 0'
debug: Replaced test_empty_for_body@18.ops[6]: 'v-load reverse_index_internal%4#0' with 'l-load reverse_index_internal%4#0'
debug: Inserted test_empty_for_body@18.ops[9]: 'l-store-copy i#0 0'
debug: Replaced test_empty_for_body@18.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_empty_after_for@20.ops[2]: 'l-store-copy bytes_length%5#0 0'
debug: Replaced test_empty_after_for@20.ops[4]: 'v-load bytes_length%5#0' with 'l-load bytes_length%5#0'
debug: Inserted test_empty_for_header@21.ops[3]: 'l-store-copy continue_looping%5#0 0'
debug: Replaced test_empty_for_header@21.ops[5]: 'v-load continue_looping%5#0' with 'l-load continue_looping%5#0'
debug: Inserted test_empty_for_body@22.ops[10]: 'l-store-copy idx#0 0'
debug: Replaced test_empty_for_body@22.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted test_empty_for_body@22.ops[3]: 'l-store-copy reverse_index_internal%5#0 0'
debug: Replaced test_empty_for_body@22.ops[6]: 'v-load reverse_index_internal%5#0' with 'l-load reverse_index_internal%5#0'
debug: Inserted test_empty_for_body@22.ops[7]: 'l-store-copy reverse_index_internal%5#0 1'
debug: Replaced test_empty_for_body@22.ops[11]: 'v-load reverse_index_internal%5#0' with 'l-load reverse_index_internal%5#0'
debug: Inserted test_empty_for_body@22.ops[10]: 'l-store-copy i#0 1'
debug: Replaced test_empty_for_body@22.ops[16]: 'v-load i#0' with 'l-load i#0'
debug: Inserted test_break_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_break_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_break_for_body@2.ops[4]: 'l-store-copy b#0 0'
debug: Replaced test_break_for_body@2.ops[6]: 'v-load b#0' with 'l-load b#0'
debug: Inserted test_tuple_target_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced test_tuple_target_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted test_tuple_target_for_body@2.ops[6]: 'l-store-copy tup.0#0 0'
debug: Replaced test_tuple_target_for_body@2.ops[8]: 'v-load tup.0#0' with 'l-load tup.0#0'
debug: Inserted test_tuple_target_for_body@2.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced test_tuple_target_for_body@2.ops[6]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted test_tuple_target_for_body@2.ops[5]: 'l-store-copy tup.1#0 1'
debug: Replaced test_tuple_target_for_body@2.ops[11]: 'v-load tup.1#0' with 'l-load tup.1#0'
debug: Inserted _log_with_index_block@0.ops[4]: 'l-store-copy read_bytes%0#0 0'
debug: Replaced _log_with_index_block@0.ops[6]: 'v-load read_bytes%0#0' with 'l-load read_bytes%0#0'
debug: Inserted _log_with_index_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced _log_with_index_block@0.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _log_with_index_block@0.ops[14]: 'l-store-copy tmp%1#0 0'
debug: Replaced _log_with_index_block@0.ops[16]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Found 18 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Allocated 1 variable/s to x-stack: bytes_length%0#0
debug: shared x-stack for test_break_block@0 -> test_break_for_header@1: bytes_length%0#0
debug: Found 3 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards f-stack on first store: ['bytes_length%0#0', 'item_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed f-stack on first store: ['reverse_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index f-stack on first store: ['bytes_length%0#0', 'item_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index f-stack on first store: ['item_index_internal%0#0', 'reverse_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index f-stack on first store: ['item_index_internal%0#0', 'reverse_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index f-stack on first store: ['reverse_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty f-stack entry: ['bytes_length%2#0', 'item_index_internal%2#0', 'item_index_internal%3#0', 'item_index_internal%4#0', 'reverse_index_internal%1#0', 'reverse_index_internal%3#0', 'reverse_index_internal%4#0', 'reverse_index_internal%5#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty f-stack on first store: ['bytes_length%0#0', 'item_index_internal%0#0']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target f-stack on first store: ['bytes_length%0#0', 'item_index_internal%0#0']
iteration/base.py:7 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
iteration/iterate_indexable.py:9 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards() -> void:
iteration/iterate_indexable.py:15 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed() -> void:
iteration/iterate_indexable.py:21 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index() -> void:
iteration/iterate_indexable.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index() -> void:
iteration/iterate_indexable.py:35 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index() -> void:
iteration/iterate_indexable.py:42 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index() -> void:
iteration/iterate_indexable.py:49 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty() -> void:
iteration/iterate_indexable.py:65 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break() -> void:
iteration/iterate_indexable.py:72 debug: optimizing TEAL subroutine ops test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target() -> void:
iteration/base.py:31 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
iteration/base.py:7 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
iteration/iterate_indexable.py:9 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards() -> void:
debug: removing explicit jump to fall-through block test_forwards_block@0
debug: removing explicit jump to fall-through block test_forwards_for_header@1
debug: removing explicit jump to fall-through block test_forwards_for_body@2
debug: removing explicit jump to fall-through block test_forwards_for_footer@3
iteration/iterate_indexable.py:15 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed() -> void:
debug: removing explicit jump to fall-through block test_reversed_block@0
debug: removing explicit jump to fall-through block test_reversed_for_header@1
debug: removing explicit jump to fall-through block test_reversed_for_body@2
debug: removing explicit jump to fall-through block test_reversed_for_footer@3
iteration/iterate_indexable.py:21 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index() -> void:
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_block@0
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_header@1
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_body@2
debug: removing explicit jump to fall-through block test_forwards_with_forwards_index_for_footer@3
iteration/iterate_indexable.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index() -> void:
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_block@0
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_header@1
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_body@2
debug: removing explicit jump to fall-through block test_forwards_with_reverse_index_for_footer@3
iteration/iterate_indexable.py:35 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index() -> void:
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_block@0
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_header@1
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_body@2
debug: removing explicit jump to fall-through block test_reverse_with_forwards_index_for_footer@3
iteration/iterate_indexable.py:42 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index() -> void:
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_block@0
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_header@1
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_body@2
debug: removing explicit jump to fall-through block test_reverse_with_reverse_index_for_footer@3
iteration/iterate_indexable.py:49 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty() -> void:
debug: removing explicit jump to fall-through block test_empty_block@0
debug: removing explicit jump to fall-through block test_empty_for_header@1
debug: removing explicit jump to fall-through block test_empty_for_body@2
debug: removing explicit jump to fall-through block test_empty_for_footer@3
debug: removing explicit jump to fall-through block test_empty_for_header@5
debug: removing explicit jump to fall-through block test_empty_for_body@6
debug: removing explicit jump to fall-through block test_empty_for_footer@7
debug: removing explicit jump to fall-through block test_empty_for_header@9
debug: removing explicit jump to fall-through block test_empty_for_body@10
debug: removing explicit jump to fall-through block test_empty_for_footer@11
debug: removing explicit jump to fall-through block test_empty_for_header@13
debug: removing explicit jump to fall-through block test_empty_for_body@14
debug: removing explicit jump to fall-through block test_empty_for_footer@15
debug: removing explicit jump to fall-through block test_empty_for_header@17
debug: removing explicit jump to fall-through block test_empty_for_body@18
debug: removing explicit jump to fall-through block test_empty_for_footer@19
debug: removing explicit jump to fall-through block test_empty_for_header@21
debug: removing explicit jump to fall-through block test_empty_for_body@22
debug: removing explicit jump to fall-through block test_empty_for_footer@23
iteration/iterate_indexable.py:65 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break() -> void:
debug: removing explicit jump to fall-through block test_break_block@0
debug: removing explicit jump to fall-through block test_break_for_header@1
debug: removing explicit jump to fall-through block test_break_for_body@2
debug: removing explicit jump to fall-through block test_break_after_for@3
iteration/iterate_indexable.py:72 debug: optimizing TEAL subroutine blocks test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target() -> void:
debug: removing explicit jump to fall-through block test_tuple_target_block@0
debug: removing explicit jump to fall-through block test_tuple_target_for_header@1
debug: removing explicit jump to fall-through block test_tuple_target_for_body@2
debug: removing explicit jump to fall-through block test_tuple_target_for_footer@3
iteration/base.py:31 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
debug: removing explicit jump to fall-through block _log_with_index_block@0
iteration/base.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
iteration/base.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
info: Writing iteration/out_unoptimized/URangeIterationTest.approval.teal
info: Writing iteration/out_unoptimized/URangeIterationTest.clear.teal
info: Writing iteration/out_unoptimized/URangeIterationTest.approval.bin
info: Writing iteration/out_unoptimized/URangeIterationTest.clear.bin
info: Writing iteration/out_unoptimized/URangeIterationTest.approval.puya.map
info: Writing iteration/out_unoptimized/URangeIterationTest.clear.puya.map
info: Writing iteration/out_unoptimized/TupleIterationTest.approval.teal
info: Writing iteration/out_unoptimized/TupleIterationTest.clear.teal
info: Writing iteration/out_unoptimized/TupleIterationTest.approval.bin
info: Writing iteration/out_unoptimized/TupleIterationTest.clear.bin
info: Writing iteration/out_unoptimized/TupleIterationTest.approval.puya.map
info: Writing iteration/out_unoptimized/TupleIterationTest.clear.puya.map
info: Writing iteration/out_unoptimized/IndexableIterationTest.approval.teal
info: Writing iteration/out_unoptimized/IndexableIterationTest.clear.teal
info: Writing iteration/out_unoptimized/IndexableIterationTest.approval.bin
info: Writing iteration/out_unoptimized/IndexableIterationTest.clear.bin
info: Writing iteration/out_unoptimized/IndexableIterationTest.approval.puya.map
info: Writing iteration/out_unoptimized/IndexableIterationTest.clear.puya.map