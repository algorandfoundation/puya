#pragma version 10

test_cases.iteration.iterate_urange.URangeIterationTest.approval_program:
    intcblock 1 2 0 5
    bytecblock 0x206120622063
    pushbytes "test_forwards"
    log
    callsub test_forwards
    pushbytes "test_reversed"
    log
    callsub test_reversed
    pushbytes "test_forwards_with_forwards_index"
    log
    callsub test_forwards_with_forwards_index
    pushbytes "test_forwards_with_reverse_index"
    log
    callsub test_forwards_with_reverse_index
    pushbytes "test_reverse_with_forwards_index"
    log
    callsub test_reverse_with_forwards_index
    pushbytes "test_reverse_with_reverse_index"
    log
    callsub test_reverse_with_reverse_index
    pushbytes "test_empty"
    log
    callsub test_empty
    pushbytes "test_break"
    log
    callsub test_break
    pushbytes "test_tuple_target"
    log
    callsub test_tuple_target
    intc_0 // 1
    return


// test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards() -> void:
test_forwards:
    proto 0 0
    intc_0 // 1

test_forwards_for_header@1:
    frame_dig 0
    pushint 7 // 7
    <
    bz test_forwards_after_for@4
    bytec_0 // 0x206120622063
    frame_dig 0
    dup
    cover 2
    intc_0 // 1
    extract3
    log
    intc_1 // 2
    +
    frame_bury 0
    b test_forwards_for_header@1

test_forwards_after_for@4:
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed() -> void:
test_reversed:
    proto 0 0
    intc_3 // 5

test_reversed_for_body@2:
    bytec_0 // 0x206120622063
    frame_dig 0
    dup
    cover 2
    intc_0 // 1
    extract3
    log
    intc_0 // 1
    >
    bz test_reversed_after_for@5
    frame_dig 0
    intc_1 // 2
    -
    frame_bury 0
    b test_reversed_for_body@2

test_reversed_after_for@5:
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index() -> void:
test_forwards_with_forwards_index:
    proto 0 0
    intc_0 // 1
    intc_2 // 0

test_forwards_with_forwards_index_for_header@1:
    frame_dig 0
    pushint 7 // 7
    <
    bz test_forwards_with_forwards_index_after_for@4
    bytec_0 // 0x206120622063
    frame_dig 0
    dup
    cover 2
    intc_0 // 1
    extract3
    frame_dig 1
    dup
    cover 3
    swap
    callsub _log_with_index
    intc_1 // 2
    +
    frame_bury 0
    intc_0 // 1
    +
    frame_bury 1
    b test_forwards_with_forwards_index_for_header@1

test_forwards_with_forwards_index_after_for@4:
    retsub


// test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
_log_with_index:
    proto 2 0
    pushbytes 0x30313233343536373839
    frame_dig -2
    intc_0 // 1
    extract3
    pushbytes "="
    concat
    frame_dig -1
    concat
    log
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index() -> void:
test_forwards_with_reverse_index:
    proto 0 0
    intc_1 // 2
    intc_0 // 1

test_forwards_with_reverse_index_for_body@2:
    bytec_0 // 0x206120622063
    frame_dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    frame_dig 0
    swap
    callsub _log_with_index
    intc_3 // 5
    <
    bz test_forwards_with_reverse_index_after_for@5
    frame_dig 1
    intc_1 // 2
    +
    frame_bury 1
    frame_dig 0
    intc_0 // 1
    -
    frame_bury 0
    b test_forwards_with_reverse_index_for_body@2

test_forwards_with_reverse_index_after_for@5:
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index() -> void:
test_reverse_with_forwards_index:
    proto 0 0
    intc_3 // 5
    intc_2 // 0

test_reverse_with_forwards_index_for_body@2:
    bytec_0 // 0x206120622063
    frame_dig 0
    dup
    cover 2
    intc_0 // 1
    extract3
    frame_dig 1
    swap
    callsub _log_with_index
    intc_0 // 1
    >
    bz test_reverse_with_forwards_index_after_for@5
    frame_dig 0
    intc_1 // 2
    -
    frame_bury 0
    frame_dig 1
    intc_0 // 1
    +
    frame_bury 1
    b test_reverse_with_forwards_index_for_body@2

test_reverse_with_forwards_index_after_for@5:
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index() -> void:
test_reverse_with_reverse_index:
    proto 0 0
    intc_1 // 2
    intc_3 // 5

test_reverse_with_reverse_index_for_body@2:
    bytec_0 // 0x206120622063
    frame_dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    frame_dig 0
    swap
    callsub _log_with_index
    intc_0 // 1
    >
    bz test_reverse_with_reverse_index_after_for@5
    frame_dig 1
    intc_1 // 2
    -
    frame_bury 1
    frame_dig 0
    intc_0 // 1
    -
    frame_bury 0
    b test_reverse_with_reverse_index_for_body@2

test_reverse_with_reverse_index_after_for@5:
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_empty() -> void:
test_empty:
    proto 0 0
    pushbytes ""
    intc_2 // 0

test_empty_for_header@1:
    frame_dig 1
    intc_2 // 0
    <
    bz test_empty_after_for@9
    frame_dig 1
    dup
    itob
    log
    intc_0 // 1
    +
    frame_bury 1
    b test_empty_for_header@1

test_empty_after_for@9:
    intc_2 // 0
    frame_bury 1
    intc_2 // 0
    frame_bury 0

test_empty_for_header@10:
    frame_dig 1
    intc_2 // 0
    <
    bz test_empty_after_for@28
    frame_dig 0
    dup
    itob
    frame_dig 1
    dup
    cover 2
    itob
    concat
    log
    intc_0 // 1
    +
    frame_bury 1
    intc_0 // 1
    +
    frame_bury 0
    b test_empty_for_header@10

test_empty_after_for@28:
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_break() -> void:
test_break:
    proto 0 0
    pushbytes 0x61
    log
    retsub


// test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target() -> void:
test_tuple_target:
    proto 0 0
    intc_2 // 0
    dup

test_tuple_target_for_header@1:
    frame_dig 0
    intc_0 // 1
    <
    bz test_tuple_target_after_for@4
    pushbytes 0x74
    frame_dig 0
    dup
    cover 2
    intc_0 // 1
    extract3
    frame_dig 1
    dup
    cover 3
    swap
    callsub _log_with_index
    intc_0 // 1
    +
    frame_bury 0
    intc_0 // 1
    +
    frame_bury 1
    b test_tuple_target_for_header@1

test_tuple_target_after_for@4:
    retsub
