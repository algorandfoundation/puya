debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), paths=['iteration'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
iteration/base.py:38 debug: skipping trivial method test_forwards
iteration/base.py:42 debug: skipping trivial method test_reversed
iteration/base.py:46 debug: skipping trivial method test_forwards_with_forwards_index
iteration/base.py:50 debug: skipping trivial method test_forwards_with_reverse_index
iteration/base.py:54 debug: skipping trivial method test_reverse_with_forwards_index
iteration/base.py:58 debug: skipping trivial method test_reverse_with_reverse_index
iteration/base.py:62 debug: skipping trivial method test_empty
iteration/base.py:66 debug: skipping trivial method test_break
iteration/base.py:70 debug: skipping trivial method test_tuple_target
info: writing iteration/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#3 <- block@3) in block@3
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#3 <- block@3) in block@3
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1) in block@1
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1, idx#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1) in block@1
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1, idx#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@2
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@2
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@1) in block@1
debug: Added i#3 to Phi node: let i#1: uint64 = φ(i#0 <- block@1, i#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1) in block@1
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@1, idx#3 <- block@4) in block@4
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1, values#1 <- block@4) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@6
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@5) in block@5
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@5, i#5 <- block@8) in block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@10
debug: Created Phi assignment: let i#7: uint64 = undefined while trying to resolve 'i' in block@10
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@10
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@10
debug: Added i#6 to Phi node: let i#7: uint64 = φ(i#6 <- block@9) in block@9
debug: Added i#8 to Phi node: let i#7: uint64 = φ(i#6 <- block@9, i#8 <- block@12) in block@12
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@9) in block@9
debug: Added idx#2 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@9, idx#2 <- block@12) in block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@15
debug: Created Phi assignment: let i#10: uint64 = undefined while trying to resolve 'i' in block@15
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@15
debug: Created Phi assignment: let idx#4: uint64 = undefined while trying to resolve 'idx' in block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@15
debug: Added i#9 to Phi node: let i#10: uint64 = φ(i#9 <- block@14) in block@14
debug: Added i#11 to Phi node: let i#10: uint64 = φ(i#9 <- block@14, i#11 <- block@17) in block@17
debug: Added idx#3 to Phi node: let idx#4: uint64 = φ(idx#3 <- block@14) in block@14
debug: Added idx#5 to Phi node: let idx#4: uint64 = φ(idx#3 <- block@14, idx#5 <- block@17) in block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let i#13: uint64 = undefined while trying to resolve 'i' in block@20
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let idx#7: uint64 = undefined while trying to resolve 'idx' in block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@20
debug: Added i#12 to Phi node: let i#13: uint64 = φ(i#12 <- block@19) in block@19
debug: Added i#14 to Phi node: let i#13: uint64 = φ(i#12 <- block@19, i#14 <- block@22) in block@22
debug: Added idx#6 to Phi node: let idx#7: uint64 = φ(idx#6 <- block@19) in block@19
debug: Added idx#8 to Phi node: let idx#7: uint64 = φ(idx#6 <- block@19, idx#8 <- block@22) in block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@25
debug: Created Phi assignment: let i#16: uint64 = undefined while trying to resolve 'i' in block@25
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@25
debug: Created Phi assignment: let idx#10: uint64 = undefined while trying to resolve 'idx' in block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@25
debug: Added i#15 to Phi node: let i#16: uint64 = φ(i#15 <- block@24) in block@24
debug: Added i#17 to Phi node: let i#16: uint64 = φ(i#15 <- block@24, i#17 <- block@27) in block@27
debug: Added idx#9 to Phi node: let idx#10: uint64 = φ(idx#9 <- block@24) in block@24
debug: Added idx#11 to Phi node: let idx#10: uint64 = φ(idx#9 <- block@24, idx#11 <- block@27) in block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let i#1: uint64 = φ(i#0 <- block@0) (i#1) with i#0
debug: Deleting Phi assignment: let i#1: uint64 = φ(i#0 <- block@0)
debug: Replaced trivial Phi node: let i#1: uint64 = φ(i#0 <- block@0) (i#1) with i#0 in current definition for 2 blocks
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0) (values#1) with values#0 in current definition for 2 blocks
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'tup.1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.1#1: uint64 = undefined while trying to resolve 'tup.1' in block@1
debug: Looking for 'tup.0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.0#1: uint64 = undefined while trying to resolve 'tup.0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added tup.1#0 to Phi node: let tup.1#1: uint64 = φ(tup.1#0 <- block@0) in block@0
debug: Added tup.1#2 to Phi node: let tup.1#1: uint64 = φ(tup.1#0 <- block@0, tup.1#2 <- block@3) in block@3
debug: Added tup.0#0 to Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) in block@0
debug: Added tup.0#2 to Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0, tup.0#2 <- block@3) in block@3
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@0) in block@0
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@0, values#1 <- block@3) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3) in block@3
debug: Added idx#4 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#3 <- block@3, idx#4 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'x' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let x#1: bytes = undefined while trying to resolve 'x' in block@1
debug: Terminated block@1
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) (loop_counter%0#1) with loop_counter%0#0
debug: Deleting Phi assignment: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0)
debug: Replaced trivial Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) (loop_counter%0#1) with loop_counter%0#0 in current definition for 1 blocks
debug: Added x#0 to Phi node: let x#1: bytes = φ(x#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let x#1: bytes = φ(x#0 <- block@0) (x#1) with x#0
debug: Deleting Phi assignment: let x#1: bytes = φ(x#0 <- block@0)
debug: Replaced trivial Phi node: let x#1: bytes = φ(x#0 <- block@0) (x#1) with x#0 in current definition for 1 blocks
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'tup.0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.0#1: uint64 = undefined while trying to resolve 'tup.0' in block@1
debug: Looking for 'tup.1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tup.1#1: bytes = undefined while trying to resolve 'tup.1' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@1
debug: Added tup.0#0 to Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) (tup.0#1) with tup.0#0
debug: Deleting Phi assignment: let tup.0#1: uint64 = φ(tup.0#0 <- block@0)
debug: Replaced trivial Phi node: let tup.0#1: uint64 = φ(tup.0#0 <- block@0) (tup.0#1) with tup.0#0 in current definition for 1 blocks
debug: Added tup.1#0 to Phi node: let tup.1#1: bytes = φ(tup.1#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let tup.1#1: bytes = φ(tup.1#0 <- block@0) (tup.1#1) with tup.1#0
debug: Deleting Phi assignment: let tup.1#1: bytes = φ(tup.1#0 <- block@0)
debug: Replaced trivial Phi node: let tup.1#1: bytes = φ(tup.1#0 <- block@0) (tup.1#1) with tup.1#0 in current definition for 1 blocks
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 3 blocks
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#1 <- block@3) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 3 blocks
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Looking for 'reverse_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let reverse_index_internal%1#1: uint64 = undefined while trying to resolve 'reverse_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#1 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7) (item_index_internal%1#1) with item_index_internal%1#0
debug: Deleting Phi assignment: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7)
debug: Replaced trivial Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#1 <- block@7) (item_index_internal%1#1) with item_index_internal%1#0 in current definition for 3 blocks
debug: Added reverse_index_internal%1#0 to Phi node: let reverse_index_internal%1#1: uint64 = φ(reverse_index_internal%1#0 <- block@4) in block@4
debug: Added reverse_index_internal%1#2 to Phi node: let reverse_index_internal%1#1: uint64 = φ(reverse_index_internal%1#0 <- block@4, reverse_index_internal%1#2 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@13
debug: Looking for 'reverse_index_internal%3' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let reverse_index_internal%3#1: uint64 = undefined while trying to resolve 'reverse_index_internal%3' in block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@13
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@12) in block@12
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@12, item_index_internal%3#2 <- block@15) in block@15
debug: Added reverse_index_internal%3#0 to Phi node: let reverse_index_internal%3#1: uint64 = φ(reverse_index_internal%3#0 <- block@12) in block@12
debug: Added reverse_index_internal%3#2 to Phi node: let reverse_index_internal%3#1: uint64 = φ(reverse_index_internal%3#0 <- block@12, reverse_index_internal%3#2 <- block@15) in block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Looking for 'item_index_internal%4' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let item_index_internal%4#1: uint64 = undefined while trying to resolve 'item_index_internal%4' in block@17
debug: Looking for 'reverse_index_internal%4' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let reverse_index_internal%4#1: uint64 = undefined while trying to resolve 'reverse_index_internal%4' in block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@17
debug: Added item_index_internal%4#0 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@16) in block@16
debug: Added item_index_internal%4#2 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@16, item_index_internal%4#2 <- block@19) in block@19
debug: Added reverse_index_internal%4#0 to Phi node: let reverse_index_internal%4#1: uint64 = φ(reverse_index_internal%4#0 <- block@16) in block@16
debug: Added reverse_index_internal%4#2 to Phi node: let reverse_index_internal%4#1: uint64 = φ(reverse_index_internal%4#0 <- block@16, reverse_index_internal%4#2 <- block@19) in block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Looking for 'item_index_internal%5' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let item_index_internal%5#1: uint64 = undefined while trying to resolve 'item_index_internal%5' in block@21
debug: Looking for 'reverse_index_internal%5' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let reverse_index_internal%5#1: uint64 = undefined while trying to resolve 'reverse_index_internal%5' in block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@21
debug: Added item_index_internal%5#0 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20) in block@20
debug: Added item_index_internal%5#1 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23) in block@23
debug: Replacing trivial Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23) (item_index_internal%5#1) with item_index_internal%5#0
debug: Deleting Phi assignment: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23)
debug: Replaced trivial Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#1 <- block@23) (item_index_internal%5#1) with item_index_internal%5#0 in current definition for 3 blocks
debug: Added reverse_index_internal%5#0 to Phi node: let reverse_index_internal%5#1: uint64 = φ(reverse_index_internal%5#0 <- block@20) in block@20
debug: Added reverse_index_internal%5#2 to Phi node: let reverse_index_internal%5#1: uint64 = φ(reverse_index_internal%5#0 <- block@20, reverse_index_internal%5#2 <- block@23) in block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 1 blocks
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.iteration.base.IterationTestBase.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Building IR for function test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.__puya_arc4_router__
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: removing unused subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.approval.0.ssa.ir
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.clear.0.ssa.ir
debug: optimizing approval program of test_cases.iteration.iterate_urange.URangeIterationTest at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_empty for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_break for inlining
debug: marking single-use function test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target for inlining
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
iteration/base.py:9:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:11:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:13:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:15:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:17:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:19:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:21:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_empty in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:23:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_break in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:25:9 debug: inlining call to test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target in test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: max_range_item%0#0, i#4
debug: selected i#4 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%0#1, idx#4
debug: selected idx#4 from equivalence set
debug: Found equivalence set: max_range_item%0#2, i#16
debug: selected i#16 from equivalence set
debug: Found equivalence set: max_range_item%0#3, i#20
debug: selected i#20 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%0#3, idx#12
debug: selected idx#12 from equivalence set
debug: Found equivalence set: max_range_item%0#4, i#27
debug: selected i#27 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%1#0, idx#19
debug: selected idx#19 from equivalence set
debug: Found equivalence set: max_range_item%2#0, i#36
debug: selected i#36 from equivalence set
debug: Found equivalence set: max_range_item%3#0, i#39
debug: selected i#39 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%3#0, idx#25
debug: selected idx#25 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable values#1
debug: Removing unused variable i#6
debug: Removing unused variable values#2
debug: Removing unused variable i#10
debug: Removing unused variable idx#2
debug: Removing unused variable values#3
debug: Removing unused variable i#14
debug: Removing unused variable idx#6
debug: Removing unused variable values#4
debug: Removing unused variable i#18
debug: Removing unused variable idx#10
debug: Removing unused variable values#5
debug: Removing unused variable i#22
debug: Removing unused variable idx#14
debug: Removing unused variable values#6
debug: Removing unused variable i#42
debug: Removing unused variable values#7
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%0#4 1u) to range_length_minus_one%0#4
debug: Simplified (* 1u range_length_minus_one%0#4) to range_length_minus_one%0#4
debug: Simplified (+ 0u range_length_minus_one%0#4) to range_length_minus_one%0#4
debug: Simplified (concat tmp%2#0 "") to tmp%2#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%1#0 1u) to range_length_minus_one%1#0
debug: Simplified (* 1u range_length_minus_one%1#0) to range_length_minus_one%1#0
debug: Simplified (+ 0u range_length_minus_one%1#0) to range_length_minus_one%1#0
debug: Simplified (concat tmp%6#0 "") to tmp%6#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%2#0 1u) to range_length_minus_one%2#0
debug: Simplified (* 1u range_length_minus_one%2#0) to range_length_minus_one%2#0
debug: Simplified (+ 0u range_length_minus_one%2#0) to range_length_minus_one%2#0
debug: Simplified (concat tmp%10#0 "") to tmp%10#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%3#0 1u) to range_length_minus_one%3#0
debug: Simplified (* 1u range_length_minus_one%3#0) to range_length_minus_one%3#0
debug: Simplified (+ 0u range_length_minus_one%3#0) to range_length_minus_one%3#0
debug: Simplified (concat tmp%14#0 "") to tmp%14#0
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (extract3 0x206120622063 1u 1u) to 0x61
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@7 from goto 1u ? block@8 : block@12 to goto block@8
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@20 from goto 1u ? block@21 : block@25 to goto block@21
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@27 from goto 1u ? block@28 : block@32 to goto block@28
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@34 from goto 1u ? block@35 : block@39 to goto block@35
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@45 from goto 0u ? block@46 : block@50 to goto block@50
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@54 from goto 0u ? block@55 : block@59 to goto block@59
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@59 from goto 0u ? block@60 : block@64 to goto block@64
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@64 from goto 0u ? block@65 : block@69 to goto block@69
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@72 from goto 1u ? block@73 : block@74 to goto block@73
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@7 with block@5 in block@8
debug: Merged linear block@7 into block@5
debug: Replaced predecessor block@8 with block@5 in block@9
debug: Merged linear block@8 into block@5
debug: Replaced predecessor block@10 with block@9 in block@12
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@13 with block@12 in block@14
debug: Merged linear block@13 into block@12
debug: Replaced predecessor block@14 with block@12 in block@15
debug: Merged linear block@14 into block@12
debug: Replaced predecessor block@17 with block@16 in block@15
debug: Merged linear block@17 into block@16
debug: Replaced predecessor block@19 with block@18 in block@20
debug: Merged linear block@19 into block@18
debug: Replaced predecessor block@20 with block@18 in block@21
debug: Merged linear block@20 into block@18
debug: Replaced predecessor block@21 with block@18 in block@22
debug: Merged linear block@21 into block@18
debug: Replaced predecessor block@23 with block@22 in block@25
debug: Replaced predecessor block@23 with block@22 in block@24
debug: Merged linear block@23 into block@22
debug: Replaced predecessor block@26 with block@25 in block@27
debug: Merged linear block@26 into block@25
debug: Replaced predecessor block@27 with block@25 in block@28
debug: Merged linear block@27 into block@25
debug: Replaced predecessor block@28 with block@25 in block@29
debug: Merged linear block@28 into block@25
debug: Replaced predecessor block@30 with block@29 in block@32
debug: Replaced predecessor block@30 with block@29 in block@31
debug: Merged linear block@30 into block@29
debug: Replaced predecessor block@33 with block@32 in block@34
debug: Merged linear block@33 into block@32
debug: Replaced predecessor block@34 with block@32 in block@35
debug: Merged linear block@34 into block@32
debug: Replaced predecessor block@35 with block@32 in block@36
debug: Merged linear block@35 into block@32
debug: Replaced predecessor block@37 with block@36 in block@39
debug: Replaced predecessor block@37 with block@36 in block@38
debug: Merged linear block@37 into block@36
debug: Replaced predecessor block@40 with block@39 in block@41
debug: Merged linear block@40 into block@39
debug: Replaced predecessor block@41 with block@39 in block@42
debug: Merged linear block@41 into block@39
debug: Replaced predecessor block@44 with block@43 in block@42
debug: Merged linear block@44 into block@43
debug: Replaced predecessor block@48 with block@47 in block@50
debug: Replaced predecessor block@48 with block@47 in block@49
debug: Merged linear block@48 into block@47
debug: Replaced predecessor block@53 with block@52 in block@51
debug: Merged linear block@53 into block@52
debug: Replaced predecessor block@57 with block@56 in block@59
debug: Replaced predecessor block@57 with block@56 in block@58
debug: Merged linear block@57 into block@56
debug: Replaced predecessor block@62 with block@61 in block@64
debug: Replaced predecessor block@62 with block@61 in block@63
debug: Merged linear block@62 into block@61
debug: Replaced predecessor block@67 with block@66 in block@69
debug: Replaced predecessor block@67 with block@66 in block@68
debug: Merged linear block@67 into block@66
debug: Replaced predecessor block@70 with block@69 in block@71
debug: Merged linear block@70 into block@69
debug: Replaced predecessor block@71 with block@69 in block@72
debug: Merged linear block@71 into block@69
debug: Replaced predecessor block@72 with block@69 in block@73
debug: Merged linear block@72 into block@69
debug: Replaced predecessor block@73 with block@69 in block@74
debug: Merged linear block@73 into block@69
debug: Replaced predecessor block@74 with block@69 in block@75
debug: Merged linear block@74 into block@69
debug: Replaced predecessor block@75 with block@69 in block@76
debug: Merged linear block@75 into block@69
debug: Replaced predecessor block@76 with block@69 in block@77
debug: Merged linear block@76 into block@69
debug: Replaced predecessor block@79 with block@78 in block@77
debug: Merged linear block@79 into block@78
debug: Merged linear block@81 into block@80
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@46, block@47, block@49, block@55, block@56, block@58, block@60, block@61, block@63, block@65, block@66, block@68
debug: Removed unreachable predecessors from block@50
debug: Removed unreachable predecessors from block@59
debug: Removed unreachable predecessors from block@64
debug: Removed unreachable predecessors from block@69
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: max_range_item%0#0, i#0
debug: selected i#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@5 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: iteration_count_minus_one%0#0, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@5 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: max_range_item%0#0, i#0
debug: selected i#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@5 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: max_range_item%0#0, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%0#0, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#2
debug: Removing unused variable idx#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Simplified (- 6u 1u) to 5u
debug: Simplified (/ 5u 2u) to 2u
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@5 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: max_range_item%0#0, i#3
debug: selected i#3 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%1#0, idx#3
debug: selected idx#3 from equivalence set
debug: Found equivalence set: max_range_item%2#0, i#12
debug: selected i#12 from equivalence set
debug: Found equivalence set: max_range_item%3#0, i#15
debug: selected i#15 from equivalence set
debug: Found equivalence set: iteration_count_minus_one%3#0, idx#9
debug: selected idx#9 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%0#0 1u) to range_length_minus_one%0#0
debug: Simplified (* 1u range_length_minus_one%0#0) to range_length_minus_one%0#0
debug: Simplified (+ 0u range_length_minus_one%0#0) to range_length_minus_one%0#0
debug: Simplified (concat tmp%2#0 "") to tmp%2#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%1#0 1u) to range_length_minus_one%1#0
debug: Simplified (* 1u range_length_minus_one%1#0) to range_length_minus_one%1#0
debug: Simplified (+ 0u range_length_minus_one%1#0) to range_length_minus_one%1#0
debug: Simplified (concat tmp%6#0 "") to tmp%6#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%2#0 1u) to range_length_minus_one%2#0
debug: Simplified (* 1u range_length_minus_one%2#0) to range_length_minus_one%2#0
debug: Simplified (+ 0u range_length_minus_one%2#0) to range_length_minus_one%2#0
debug: Simplified (concat tmp%10#0 "") to tmp%10#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (/ range_length_minus_one%3#0 1u) to range_length_minus_one%3#0
debug: Simplified (* 1u range_length_minus_one%3#0) to range_length_minus_one%3#0
debug: Simplified (+ 0u range_length_minus_one%3#0) to range_length_minus_one%3#0
debug: Simplified (concat tmp%14#0 "") to tmp%14#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@4 from goto 0u ? block@5 : block@9 to goto block@9
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@13 from goto 0u ? block@14 : block@18 to goto block@18
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@18 from goto 0u ? block@19 : block@23 to goto block@23
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@23 from goto 0u ? block@24 : block@28 to goto block@28
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@9
debug: Replaced predecessor block@7 with block@6 in block@8
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@12 with block@11 in block@10
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@16 with block@15 in block@18
debug: Replaced predecessor block@16 with block@15 in block@17
debug: Merged linear block@16 into block@15
debug: Replaced predecessor block@21 with block@20 in block@23
debug: Replaced predecessor block@21 with block@20 in block@22
debug: Merged linear block@21 into block@20
debug: Replaced predecessor block@26 with block@25 in block@28
debug: Replaced predecessor block@26 with block@25 in block@27
debug: Merged linear block@26 into block@25
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5, block@6, block@8, block@14, block@15, block@17, block@19, block@20, block@22, block@24, block@25, block@27
debug: Removed unreachable predecessors from block@9
debug: Removed unreachable predecessors from block@18
debug: Removed unreachable predecessors from block@23
debug: Removed unreachable predecessors from block@28
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable i#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (extract3 0x206120622063 1u 1u) to 0x61
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@3 to goto block@2
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_tuple_target
debug: Unused subroutines removed
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.approval.1.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, tmp%3#0
debug: selected tmp%2#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable should_loop%0#0
debug: Removing unused variable range_length%0#0
debug: Removing unused variable range_length_minus_one%0#0
debug: Removing unused variable iteration_count_minus_one%0#0
debug: Removing unused variable range_delta%0#0
debug: Removing unused variable should_loop%0#1
debug: Removing unused variable range_length%0#1
debug: Removing unused variable range_length_minus_one%0#1
debug: Removing unused variable range_delta%0#1
debug: Removing unused variable max_range_item%0#1
debug: Removing unused variable should_loop%0#2
debug: Removing unused variable range_length%0#2
debug: Removing unused variable range_length_minus_one%0#2
debug: Removing unused variable iteration_count_minus_one%0#2
debug: Removing unused variable range_delta%0#2
debug: Removing unused variable should_loop%0#3
debug: Removing unused variable range_length%0#3
debug: Removing unused variable range_length_minus_one%0#3
debug: Removing unused variable range_delta%0#3
debug: Removing unused variable should_loop%0#4
debug: Removing unused variable should_loop%1#0
debug: Removing unused variable should_loop%2#0
debug: Removing unused variable should_loop%3#0
debug: Removing unused variable continue_looping%0#7
debug: Removing unused variable tmp%0#7
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@50 with block@45 in block@51
debug: Merged linear block@50 into block@45
debug: Replaced predecessor block@59 with block@54 in block@64
debug: Merged linear block@59 into block@54
debug: Replaced predecessor block@64 with block@54 in block@69
debug: Merged linear block@64 into block@54
debug: Replaced predecessor block@69 with block@54 in block@77
debug: Merged linear block@69 into block@54
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.approval.2.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_urange.URangeIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.iteration.iterate_urange.URangeIterationTest
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.approval.3.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.iteration.iterate_urange.URangeIterationTest
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.clear.1.ssa.array.ir
debug: optimizing approval program of test_cases.iteration.iterate_urange.URangeIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_urange.URangeIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.iteration.iterate_urange.URangeIterationTest
iteration/base.py:7 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.approval_program, []
iteration/base.py:31 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase._log_with_index, []
debug: Slot allocation not required
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.approval.4.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.iteration.iterate_urange.URangeIterationTest
iteration/base.py:28 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.clear.2.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#35, i#1, i#3, i#4, i#38, i#5, i#7, i#8, i#41, i#9, i#11, i#12, i#44, i#13, i#15, i#16, i#47, i#17, i#19, i#20, i#50, i#21, i#23, i#24, i#53, i#25, i#26, i#30, i#56, i#31, i#32]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#1, continue_looping%0#2, continue_looping%0#3, continue_looping%0#4, continue_looping%0#5, continue_looping%0#6, continue_looping%0#8]
debug: Coalescing tmp%0#0 with [tmp%0#1, tmp%0#2, tmp%0#3, tmp%0#4, tmp%0#5, tmp%0#6, tmp%0#8]
debug: Coalescing idx#0 with [idx#21, idx#1, idx#3, idx#4, idx#24, idx#5, idx#7, idx#8, idx#27, idx#9, idx#11, idx#12, idx#30, idx#13, idx#15, idx#16, idx#33, idx#17, idx#18]
debug: Coalescing tup.1#0 with [tup.1#5, tup.1#1, tup.1#2]
debug: Coalescing tup.0#0 with [tup.0#5, tup.0#1, tup.0#2]
debug: Coalescing resulted in 179 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: pred: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: ready: 
debug: to_do: tup.1#0, tup.0#0
debug: * to_do tup.0#0
debug: * to_do tup.1#0
debug: loc: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: pred: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: ready: 
debug: to_do: tup.1#0, tup.0#0
debug: * to_do tup.0#0
debug: * to_do tup.1#0
debug: loc: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: pred: {tup.1#0=tup.1#0, tup.0#0=tup.0#0}
debug: ready: 
debug: to_do: tup.1#0, tup.0#0
debug: * to_do tup.0#0
debug: * to_do tup.1#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase._log_with_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Performing post-SSA optimizations at level 1
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.approval.5.destructured.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to iteration/out/URangeIterationTest.ir/URangeIterationTest.clear.3.destructured.ir
debug: Inserted main_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@3.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@3.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@3.ops[2]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@3.ops[9]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@9.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@9.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@9.ops[11]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_body@9.ops[13]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@9.ops[2]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@9.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_header@15.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@15.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@16.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@16.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@16.ops[2]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@16.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@16.ops[8]: 'l-store-copy idx#0 2'
debug: Replaced main_for_body@16.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@22.ops[11]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_body@22.ops[13]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@22.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@22.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@22.ops[2]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@22.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@29.ops[11]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_body@29.ops[13]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@29.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@29.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@29.ops[2]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@29.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@36.ops[11]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_body@36.ops[13]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@36.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@36.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@36.ops[2]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@36.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_header@42.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@42.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@43.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@43.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@43.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@43.ops[7]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_header@51.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@51.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@52.ops[9]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_for_body@52.ops[11]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_for_body@52.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_for_body@52.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_for_body@52.ops[2]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_for_body@52.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_for_body@52.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@52.ops[16]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@52.ops[1]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@52.ops[21]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_header@77.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@77.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@78.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@78.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@78.ops[2]: 'l-store-copy tup.1#0 1'
debug: Replaced main_for_body@78.ops[10]: 'v-load tup.1#0' with 'l-load tup.1#0'
debug: Inserted main_for_body@78.ops[8]: 'l-store-copy tup.0#0 2'
debug: Replaced main_for_body@78.ops[15]: 'v-load tup.0#0' with 'l-load tup.0#0'
debug: Inserted _log_with_index_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced _log_with_index_block@0.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _log_with_index_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced _log_with_index_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _log_with_index_block@0.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced _log_with_index_block@0.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Found 18 edge set/s for test_cases.iteration.base.IterationTestBase.approval_program
debug: test_cases.iteration.base.IterationTestBase.approval_program f-stack entry: ['idx#0', 'tup.0#0', 'tup.1#0']
debug: test_cases.iteration.base.IterationTestBase.approval_program f-stack on first store: ['i#0']
iteration/base.py:7 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
iteration/base.py:31 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
iteration/base.py:7 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_for_body@3 into main_for_header@2
debug: inlining single reference block main_for_increment@11 into main_for_body@9
debug: inlining single reference block main_for_body@16 into main_for_header@15
debug: inlining single reference block main_for_increment@24 into main_for_body@22
debug: inlining single reference block main_for_increment@31 into main_for_body@29
debug: inlining single reference block main_for_increment@38 into main_for_body@36
debug: inlining single reference block main_for_body@43 into main_for_header@42
debug: inlining single reference block main_for_body@52 into main_for_header@51
debug: inlining single reference block main_for_body@78 into main_for_header@77
debug: removing explicit jump to fall-through block main_for_header@2
debug: removing explicit jump to fall-through block main_for_body@9
debug: removing explicit jump to fall-through block main_for_header@15
debug: removing explicit jump to fall-through block main_for_body@22
debug: removing explicit jump to fall-through block main_for_body@29
debug: removing explicit jump to fall-through block main_for_body@36
debug: removing explicit jump to fall-through block main_for_header@42
debug: removing explicit jump to fall-through block main_for_header@51
debug: removing explicit jump to fall-through block main_for_header@77
iteration/base.py:31 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
debug: inlining single reference block _log_with_index_block@0 into _log_with_index
iteration/base.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
iteration/base.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.approval.0.ssa.ir
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.clear.0.ssa.ir
debug: optimizing approval program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards for inlining
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed for inlining
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index for inlining
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index for inlining
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index for inlining
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index for inlining
debug: marking trivial method test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty as inlineable
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_break for inlining
debug: marking single-use function test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target for inlining
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
iteration/base.py:9:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:11:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:13:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:15:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:17:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:19:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:21:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:23:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_break in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:25:9 debug: inlining call to test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target in test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#8
debug: Removing unused variable idx#2
debug: Removing unused variable loop_counter%0#9
debug: Removing unused variable loop_counter%0#10
debug: Removing unused variable idx#7
debug: Removing unused variable loop_counter%0#15
debug: Removing unused variable idx#12
debug: Removing unused variable loop_counter%0#16
debug: Removing unused variable loop_counter%0#17
debug: Removing unused variable idx#17
debug: Removing unused variable loop_counter%0#22
debug: Removing unused variable x#0
debug: Removing unused variable loop_counter%0#23
debug: Removing unused variable tup.1#0
debug: Removing unused variable tup.0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@51 from goto_nth [][0u] else goto block@52 to goto block@52
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@6
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@8
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@8 with block@6 in block@9
debug: Merged linear block@8 into block@6
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Replaced predecessor block@10 with block@9 in block@12
debug: Replaced predecessor block@10 with block@9 in block@13
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@14 with block@13 in block@15
debug: Merged linear block@14 into block@13
debug: Replaced predecessor block@15 with block@13 in block@16
debug: Merged linear block@15 into block@13
debug: Replaced predecessor block@17 with block@16 in block@18
debug: Replaced predecessor block@17 with block@16 in block@19
debug: Replaced predecessor block@17 with block@16 in block@20
debug: Merged linear block@17 into block@16
debug: Replaced predecessor block@21 with block@20 in block@22
debug: Merged linear block@21 into block@20
debug: Replaced predecessor block@22 with block@20 in block@23
debug: Merged linear block@22 into block@20
debug: Replaced predecessor block@24 with block@23 in block@25
debug: Replaced predecessor block@24 with block@23 in block@26
debug: Replaced predecessor block@24 with block@23 in block@27
debug: Merged linear block@24 into block@23
debug: Replaced predecessor block@28 with block@27 in block@29
debug: Merged linear block@28 into block@27
debug: Replaced predecessor block@29 with block@27 in block@30
debug: Merged linear block@29 into block@27
debug: Replaced predecessor block@31 with block@30 in block@32
debug: Replaced predecessor block@31 with block@30 in block@33
debug: Replaced predecessor block@31 with block@30 in block@34
debug: Merged linear block@31 into block@30
debug: Replaced predecessor block@35 with block@34 in block@36
debug: Merged linear block@35 into block@34
debug: Replaced predecessor block@36 with block@34 in block@37
debug: Merged linear block@36 into block@34
debug: Replaced predecessor block@38 with block@37 in block@39
debug: Replaced predecessor block@38 with block@37 in block@40
debug: Replaced predecessor block@38 with block@37 in block@41
debug: Merged linear block@38 into block@37
debug: Replaced predecessor block@42 with block@41 in block@43
debug: Merged linear block@42 into block@41
debug: Replaced predecessor block@43 with block@41 in block@44
debug: Merged linear block@43 into block@41
debug: Replaced predecessor block@44 with block@41 in block@45
debug: Merged linear block@44 into block@41
debug: Replaced predecessor block@45 with block@41 in block@46
debug: Merged linear block@45 into block@41
debug: Replaced predecessor block@46 with block@41 in block@47
debug: Merged linear block@46 into block@41
debug: Replaced predecessor block@47 with block@41 in block@48
debug: Merged linear block@47 into block@41
debug: Replaced predecessor block@48 with block@41 in block@49
debug: Merged linear block@48 into block@41
debug: Replaced predecessor block@49 with block@41 in block@50
debug: Merged linear block@49 into block@41
debug: Replaced predecessor block@50 with block@41 in block@51
debug: Merged linear block@50 into block@41
debug: Replaced predecessor block@51 with block@41 in block@52
debug: Merged linear block@51 into block@41
debug: Replaced predecessor block@52 with block@41 in block@53
debug: Merged linear block@52 into block@41
debug: Merged linear block@53 into block@41
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable idx#2
debug: Removing unused variable loop_counter%0#1
debug: Removing unused variable loop_counter%0#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable idx#2
debug: Removing unused variable loop_counter%0#1
debug: Removing unused variable loop_counter%0#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable tup.1#0
debug: Removing unused variable tup.0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@2 from goto_nth [][0u] else goto block@3 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_tuple_target
debug: Unused subroutines removed
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.approval.1.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.iteration.iterate_tuple.TupleIterationTest
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.approval.2.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.iteration.iterate_tuple.TupleIterationTest
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.clear.1.ssa.array.ir
debug: optimizing approval program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_tuple.TupleIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.iteration.iterate_tuple.TupleIterationTest
iteration/base.py:7 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.approval_program, []
iteration/base.py:31 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase._log_with_index, []
debug: Slot allocation not required
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.approval.3.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.iteration.iterate_tuple.TupleIterationTest
iteration/base.py:28 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.clear.2.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#25, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3, loop_counter%0#4, loop_counter%0#29, loop_counter%0#5, loop_counter%0#6, loop_counter%0#7, loop_counter%0#11, loop_counter%0#33, loop_counter%0#12, loop_counter%0#13, loop_counter%0#14, loop_counter%0#18, loop_counter%0#37, loop_counter%0#19, loop_counter%0#20, loop_counter%0#21]
debug: Coalescing i#0 with [i#27, i#1, i#2, i#3, i#4, i#31, i#5, i#6, i#7, i#8, i#35, i#9, i#10, i#11, i#12, i#39, i#13, i#14, i#15, i#16, i#43, i#17, i#18, i#19, i#20, i#47, i#21, i#22, i#23]
debug: Coalescing idx#0 with [idx#23, idx#1, idx#3, idx#4, idx#5, idx#27, idx#6, idx#8, idx#9, idx#10, idx#31, idx#11, idx#13, idx#14, idx#15, idx#35, idx#16, idx#18, idx#19]
debug: Coalescing resulted in 164 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, i#0
debug: * to_do i#0
debug: * to_do loop_counter%0#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0}
debug: pred: {idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, idx#0=idx#0, i#0=i#0}
debug: ready: 
debug: to_do: loop_counter%0#0, idx#0, i#0
debug: * to_do i#0
debug: * to_do idx#0
debug: * to_do loop_counter%0#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase._log_with_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Performing post-SSA optimizations at level 1
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.approval.4.destructured.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to iteration/out/TupleIterationTest.ir/TupleIterationTest.clear.3.destructured.ir
debug: Inserted main_for_body@16.ops[1]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@16.ops[4]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@30.ops[1]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@30.ops[4]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted _log_with_index_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced _log_with_index_block@0.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _log_with_index_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced _log_with_index_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _log_with_index_block@0.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced _log_with_index_block@0.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Found 12 edge set/s for test_cases.iteration.base.IterationTestBase.approval_program
debug: Allocated 3 variable/s to x-stack: i#0, idx#0, loop_counter%0#0
debug: shared x-stack for main_block@0 -> main_for_body@2: i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_1@4 -> main_for_body@2: i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_2@5 -> main_for_body@2: i#0, loop_counter%0#0
debug: shared x-stack for main_after_for@6 -> main_for_body@9: i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_1@11 -> main_for_body@9: i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_2@12 -> main_for_body@9: i#0, loop_counter%0#0
debug: shared x-stack for main_after_for@13 -> main_for_body@16: idx#0, i#0
debug: shared x-stack for main_for_header_1@18 -> main_for_body@16: idx#0, i#0
debug: shared x-stack for main_for_header_2@19 -> main_for_body@16: idx#0, i#0
debug: shared x-stack for main_after_for@20 -> main_for_body@23: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_1@25 -> main_for_body@23: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_2@26 -> main_for_body@23: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for main_after_for@27 -> main_for_body@30: idx#0, i#0
debug: shared x-stack for main_for_header_1@32 -> main_for_body@30: idx#0, i#0
debug: shared x-stack for main_for_header_2@33 -> main_for_body@30: idx#0, i#0
debug: shared x-stack for main_after_for@34 -> main_for_body@37: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_1@39 -> main_for_body@37: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for main_for_header_2@40 -> main_for_body@37: idx#0, i#0, loop_counter%0#0
iteration/base.py:7 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
iteration/base.py:31 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
iteration/base.py:7 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_after_for@6 into main_for_body@2
debug: inlining single reference block main_after_for@13 into main_for_body@9
debug: inlining single reference block main_after_for@20 into main_for_body@16
debug: inlining single reference block main_after_for@27 into main_for_body@23
debug: inlining single reference block main_after_for@34 into main_for_body@30
debug: inlining single reference block main_after_for@41 into main_for_body@37
debug: removing explicit jump to fall-through block main_for_body@2
debug: removing explicit jump to fall-through block main_for_body@9
debug: removing explicit jump to fall-through block main_for_body@16
debug: removing explicit jump to fall-through block main_for_body@23
debug: removing explicit jump to fall-through block main_for_body@30
debug: removing explicit jump to fall-through block main_for_body@37
iteration/base.py:31 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
debug: inlining single reference block _log_with_index_block@0 into _log_with_index
iteration/base.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
iteration/base.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.approval.0.ssa.ir
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.clear.0.ssa.ir
debug: optimizing approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break for inlining
debug: marking single-use function test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target for inlining
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
iteration/base.py:9:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:11:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:13:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:15:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:17:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:19:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:21:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:23:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break in test_cases.iteration.base.IterationTestBase.approval_program
iteration/base.py:25:9 debug: inlining call to test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target in test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: bytes_length%0#1, reverse_index_internal%0#1
debug: selected bytes_length%0#1 from equivalence set
debug: Found equivalence set: bytes_length%0#2, reverse_index_internal%0#4
debug: selected bytes_length%0#2 from equivalence set
debug: Found equivalence set: item_index_internal%0#5, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: bytes_length%0#3, reverse_index_internal%0#5
debug: selected bytes_length%0#3 from equivalence set
debug: Found equivalence set: reverse_index_internal%0#7, idx#2
debug: selected idx#2 from equivalence set
debug: Found equivalence set: bytes_length%0#4, reverse_index_internal%0#8
debug: selected bytes_length%0#4 from equivalence set
debug: Found equivalence set: item_index_internal%0#11, idx#4
debug: selected idx#4 from equivalence set
debug: Found equivalence set: bytes_length%0#5, reverse_index_internal%0#11
debug: selected bytes_length%0#5 from equivalence set
debug: Found equivalence set: reverse_index_internal%0#13, idx#6
debug: selected idx#6 from equivalence set
debug: Found equivalence set: bytes_length%0#6, reverse_index_internal%0#14
debug: selected bytes_length%0#6 from equivalence set
debug: Found equivalence set: bytes_length%1#0, reverse_index_internal%1#0
debug: selected bytes_length%1#0 from equivalence set
debug: Found equivalence set: bytes_length%2#0, reverse_index_internal%2#0
debug: selected bytes_length%2#0 from equivalence set
debug: Found equivalence set: item_index_internal%2#1, idx#8
debug: selected idx#8 from equivalence set
debug: Found equivalence set: bytes_length%3#0, reverse_index_internal%3#0
debug: selected bytes_length%3#0 from equivalence set
debug: Found equivalence set: reverse_index_internal%3#2, idx#9
debug: selected idx#9 from equivalence set
debug: Found equivalence set: bytes_length%4#0, reverse_index_internal%4#0
debug: selected bytes_length%4#0 from equivalence set
debug: Found equivalence set: item_index_internal%4#1, idx#10
debug: selected idx#10 from equivalence set
debug: Found equivalence set: bytes_length%5#0, reverse_index_internal%5#0
debug: selected bytes_length%5#0 from equivalence set
debug: Found equivalence set: reverse_index_internal%5#2, idx#11
debug: selected idx#11 from equivalence set
debug: Found equivalence set: bytes_length%0#7, reverse_index_internal%0#15
debug: selected bytes_length%0#7 from equivalence set
debug: Found equivalence set: bytes_length%0#8, reverse_index_internal%0#16
debug: selected bytes_length%0#8 from equivalence set
debug: Found equivalence set: item_index_internal%0#19, tup.0#0
debug: selected tup.0#0 from equivalence set
debug: Copy propagation made 34 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#3
debug: Removing unused variable idx#1
debug: Removing unused variable idx#3
debug: Removing unused variable idx#5
debug: Removing unused variable item_index_internal%0#13
debug: Removing unused variable idx#7
debug: Removing unused variable item_index_internal%1#0
debug: Removing unused variable item_index_internal%5#0
debug: Removing unused variable item_index_internal%0#17
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Simplified (len 0x616263) to 3u
debug: Simplified (len 0x616263) to 3u
debug: Simplified (len 0x616263) to 3u
debug: Simplified (len 0x616263) to 3u
debug: Simplified (len 0x616263) to 3u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x616263) to 3u
debug: Simplified (< 0u 3u) to 1u
debug: Simplified (extract3 0x616263 0u 1u) to 0x61
debug: Simplified (len 0x74) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@64 from goto 1u ? block@65 : block@66 to goto block@65
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@7 with block@5 in block@8
debug: Merged linear block@7 into block@5
debug: Replaced predecessor block@10 with block@9 in block@8
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@12 with block@11 in block@13
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@13 with block@11 in block@14
debug: Merged linear block@13 into block@11
debug: Replaced predecessor block@16 with block@15 in block@14
debug: Merged linear block@16 into block@15
debug: Replaced predecessor block@18 with block@17 in block@19
debug: Merged linear block@18 into block@17
debug: Replaced predecessor block@19 with block@17 in block@20
debug: Merged linear block@19 into block@17
debug: Replaced predecessor block@22 with block@21 in block@20
debug: Merged linear block@22 into block@21
debug: Replaced predecessor block@24 with block@23 in block@25
debug: Merged linear block@24 into block@23
debug: Replaced predecessor block@25 with block@23 in block@26
debug: Merged linear block@25 into block@23
debug: Replaced predecessor block@28 with block@27 in block@26
debug: Merged linear block@28 into block@27
debug: Replaced predecessor block@30 with block@29 in block@31
debug: Merged linear block@30 into block@29
debug: Replaced predecessor block@31 with block@29 in block@32
debug: Merged linear block@31 into block@29
debug: Replaced predecessor block@34 with block@33 in block@32
debug: Merged linear block@34 into block@33
debug: Replaced predecessor block@36 with block@35 in block@37
debug: Merged linear block@36 into block@35
debug: Replaced predecessor block@37 with block@35 in block@38
debug: Merged linear block@37 into block@35
debug: Replaced predecessor block@40 with block@39 in block@38
debug: Merged linear block@40 into block@39
debug: Replaced predecessor block@44 with block@43 in block@42
debug: Merged linear block@44 into block@43
debug: Replaced predecessor block@48 with block@47 in block@46
debug: Merged linear block@48 into block@47
debug: Replaced predecessor block@52 with block@51 in block@50
debug: Merged linear block@52 into block@51
debug: Replaced predecessor block@56 with block@55 in block@54
debug: Merged linear block@56 into block@55
debug: Replaced predecessor block@60 with block@59 in block@58
debug: Merged linear block@60 into block@59
debug: Replaced predecessor block@62 with block@61 in block@63
debug: Merged linear block@62 into block@61
debug: Replaced predecessor block@63 with block@61 in block@64
debug: Merged linear block@63 into block@61
debug: Replaced predecessor block@64 with block@61 in block@65
debug: Merged linear block@64 into block@61
debug: Replaced predecessor block@65 with block@61 in block@66
debug: Merged linear block@65 into block@61
debug: Replaced predecessor block@66 with block@61 in block@67
debug: Merged linear block@66 into block@61
debug: Replaced predecessor block@67 with block@61 in block@68
debug: Merged linear block@67 into block@61
debug: Replaced predecessor block@68 with block@61 in block@69
debug: Merged linear block@68 into block@61
debug: Replaced predecessor block@71 with block@70 in block@69
debug: Merged linear block@71 into block@70
debug: Merged linear block@73 into block@72
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: item_index_internal%0#1, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: reverse_index_internal%0#2, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: item_index_internal%0#1, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable idx#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: reverse_index_internal%0#2, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Removing unused variable idx#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: bytes_length%1#0, reverse_index_internal%1#0
debug: selected bytes_length%1#0 from equivalence set
debug: Found equivalence set: bytes_length%2#0, reverse_index_internal%2#0
debug: selected bytes_length%2#0 from equivalence set
debug: Found equivalence set: item_index_internal%2#1, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: bytes_length%3#0, reverse_index_internal%3#0
debug: selected bytes_length%3#0 from equivalence set
debug: Found equivalence set: reverse_index_internal%3#2, idx#1
debug: selected idx#1 from equivalence set
debug: Found equivalence set: bytes_length%4#0, reverse_index_internal%4#0
debug: selected bytes_length%4#0 from equivalence set
debug: Found equivalence set: item_index_internal%4#1, idx#2
debug: selected idx#2 from equivalence set
debug: Found equivalence set: bytes_length%5#0, reverse_index_internal%5#0
debug: selected bytes_length%5#0 from equivalence set
debug: Found equivalence set: reverse_index_internal%5#2, idx#3
debug: selected idx#3 from equivalence set
debug: Copy propagation made 15 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%1#0
debug: Removing unused variable item_index_internal%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@11 with block@10 in block@9
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@15 with block@14 in block@13
debug: Merged linear block@15 into block@14
debug: Replaced predecessor block@19 with block@18 in block@17
debug: Merged linear block@19 into block@18
debug: Replaced predecessor block@23 with block@22 in block@21
debug: Merged linear block@23 into block@22
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Simplified (< 0u 3u) to 1u
debug: Simplified (extract3 0x616263 0u 1u) to 0x61
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@3 to goto block@2
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: item_index_internal%0#1, tup.0#0
debug: selected tup.0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x74) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: removing unused subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_tuple_target
debug: Unused subroutines removed
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.approval.1.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_length%0#0
debug: Removing unused variable continue_looping%0#1
debug: Removing unused variable bytes_length%0#2
debug: Removing unused variable continue_looping%0#3
debug: Removing unused variable continue_looping%0#4
debug: Removing unused variable continue_looping%0#5
debug: Removing unused variable bytes_length%0#6
debug: Removing unused variable continue_looping%1#0
debug: Removing unused variable bytes_length%2#0
debug: Removing unused variable continue_looping%3#0
debug: Removing unused variable continue_looping%4#0
debug: Removing unused variable continue_looping%5#0
debug: Removing unused variable bytes_length%0#7
debug: Removing unused variable continue_looping%0#7
debug: Removing unused variable b#0
debug: Removing unused variable bytes_length%0#8
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.approval.2.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.approval.3.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.clear.1.ssa.array.ir
debug: optimizing approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.iteration.iterate_indexable.IndexableIterationTest
iteration/base.py:7 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.approval_program, []
iteration/base.py:31 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase._log_with_index, []
debug: Slot allocation not required
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.approval.4.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.iteration.iterate_indexable.IndexableIterationTest
iteration/base.py:28 debug: auto reserving slots in test_cases.iteration.base.IterationTestBase.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.clear.2.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#23, item_index_internal%0#1, item_index_internal%0#2, item_index_internal%0#4, item_index_internal%0#6, item_index_internal%0#7, item_index_internal%0#28, item_index_internal%0#8, item_index_internal%0#9, item_index_internal%0#10, item_index_internal%0#12, item_index_internal%0#14, item_index_internal%0#33, item_index_internal%0#15, item_index_internal%0#16, item_index_internal%0#18, item_index_internal%0#20]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#2, continue_looping%0#6, continue_looping%0#8]
debug: Coalescing i#0 with [i#1, i#2, i#3, i#4, i#5, i#6, i#7, i#8, i#9, i#10, i#11]
debug: Coalescing bytes_length%0#1 with [bytes_length%0#3, bytes_length%0#4, bytes_length%0#5]
debug: Coalescing reverse_index_internal%0#2 with [reverse_index_internal%0#14, reverse_index_internal%0#3, reverse_index_internal%0#15, reverse_index_internal%0#6, reverse_index_internal%0#17, reverse_index_internal%0#9, reverse_index_internal%0#10, reverse_index_internal%0#18, reverse_index_internal%0#12]
debug: Coalescing idx#0 with [idx#12, idx#2, idx#14, idx#4, idx#6, idx#16, idx#8, idx#9, idx#18, idx#10, idx#11]
debug: Coalescing reverse_index_internal%1#1 with [reverse_index_internal%1#4, reverse_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#2]
debug: Coalescing item_index_internal%3#0 with [item_index_internal%3#5, item_index_internal%3#1, item_index_internal%3#2]
debug: Coalescing reverse_index_internal%3#1 with [reverse_index_internal%3#2]
debug: Coalescing item_index_internal%4#0 with [item_index_internal%4#2]
debug: Coalescing reverse_index_internal%4#1 with [reverse_index_internal%4#4, reverse_index_internal%4#2]
debug: Coalescing reverse_index_internal%5#1 with [reverse_index_internal%5#2]
debug: Coalescing tup.0#0 with [tup.0#1]
debug: Coalescing resulted in 173 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#2=None, bytes_length%0#1=bytes_length%0#1}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#2=bytes_length%0#1}
debug: ready: reverse_index_internal%0#2
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#2
debug: * avail reverse_index_internal%0#2
debug: * avail bytes_length%0#1
debug: * to_do reverse_index_internal%0#2
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#2=reverse_index_internal%0#2}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#2=reverse_index_internal%0#2}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#2
debug: * to_do reverse_index_internal%0#2
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#2=None, idx#0=idx#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#2=idx#0}
debug: ready: reverse_index_internal%0#2
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#2
debug: * avail reverse_index_internal%0#2
debug: * avail idx#0
debug: * to_do reverse_index_internal%0#2
debug: * to_do item_index_internal%0#0
debug: loc: {idx#0=None, reverse_index_internal%0#2=None, item_index_internal%0#0=item_index_internal%0#0, bytes_length%0#1=bytes_length%0#1}
debug: pred: {idx#0=item_index_internal%0#0, reverse_index_internal%0#2=bytes_length%0#1}
debug: ready: idx#0, reverse_index_internal%0#2
debug: to_do: idx#0, reverse_index_internal%0#2
debug: * avail reverse_index_internal%0#2
debug: * avail bytes_length%0#1
debug: * avail idx#0
debug: * avail item_index_internal%0#0
debug: * to_do reverse_index_internal%0#2
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, reverse_index_internal%0#2=reverse_index_internal%0#2}
debug: pred: {idx#0=idx#0, reverse_index_internal%0#2=reverse_index_internal%0#2}
debug: ready: 
debug: to_do: idx#0, reverse_index_internal%0#2
debug: * to_do reverse_index_internal%0#2
debug: * to_do idx#0
debug: loc: {idx#0=None, reverse_index_internal%0#2=reverse_index_internal%0#2, item_index_internal%0#0=item_index_internal%0#0}
debug: pred: {idx#0=item_index_internal%0#0, reverse_index_internal%0#2=reverse_index_internal%0#2}
debug: ready: idx#0
debug: to_do: idx#0, reverse_index_internal%0#2
debug: * avail idx#0
debug: * avail item_index_internal%0#0
debug: * to_do reverse_index_internal%0#2
debug: * to_do idx#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=None, bytes_length%3#0=bytes_length%3#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=bytes_length%3#0}
debug: ready: reverse_index_internal%3#1
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#1
debug: * avail reverse_index_internal%3#1
debug: * avail bytes_length%3#0
debug: * to_do reverse_index_internal%3#1
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=reverse_index_internal%3#1}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=reverse_index_internal%3#1}
debug: ready: 
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#1
debug: * to_do reverse_index_internal%3#1
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=None, idx#0=idx#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=idx#0}
debug: ready: reverse_index_internal%3#1
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#1
debug: * avail reverse_index_internal%3#1
debug: * avail idx#0
debug: * to_do reverse_index_internal%3#1
debug: * to_do item_index_internal%3#0
debug: loc: {idx#0=None, reverse_index_internal%4#1=None, item_index_internal%4#0=item_index_internal%4#0, bytes_length%4#0=bytes_length%4#0}
debug: pred: {idx#0=item_index_internal%4#0, reverse_index_internal%4#1=bytes_length%4#0}
debug: ready: idx#0, reverse_index_internal%4#1
debug: to_do: idx#0, reverse_index_internal%4#1
debug: * avail reverse_index_internal%4#1
debug: * avail bytes_length%4#0
debug: * avail idx#0
debug: * avail item_index_internal%4#0
debug: * to_do reverse_index_internal%4#1
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, reverse_index_internal%4#1=reverse_index_internal%4#1}
debug: pred: {idx#0=idx#0, reverse_index_internal%4#1=reverse_index_internal%4#1}
debug: ready: 
debug: to_do: idx#0, reverse_index_internal%4#1
debug: * to_do reverse_index_internal%4#1
debug: * to_do idx#0
debug: loc: {idx#0=None, reverse_index_internal%4#1=reverse_index_internal%4#1, item_index_internal%4#0=item_index_internal%4#0}
debug: pred: {idx#0=item_index_internal%4#0, reverse_index_internal%4#1=reverse_index_internal%4#1}
debug: ready: idx#0
debug: to_do: idx#0, reverse_index_internal%4#1
debug: * avail idx#0
debug: * avail item_index_internal%4#0
debug: * to_do reverse_index_internal%4#1
debug: * to_do idx#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase._log_with_index
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Performing post-SSA optimizations at level 1
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.approval.5.destructured.ir
debug: Performing SSA IR destructuring for test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to iteration/out/IndexableIterationTest.ir/IndexableIterationTest.clear.3.destructured.ir
debug: Inserted main_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@3.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@3.ops[6]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@3.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@3.ops[9]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@5.ops[3]: 'l-store-copy bytes_length%0#1 0'
debug: Replaced main_after_for@5.ops[5]: 'v-load bytes_length%0#1' with 'l-load bytes_length%0#1'
debug: Inserted main_for_body@9.ops[8]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@9.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@9.ops[3]: 'l-store-copy reverse_index_internal%0#2 0'
debug: Replaced main_for_body@9.ops[6]: 'v-load reverse_index_internal%0#2' with 'l-load reverse_index_internal%0#2'
debug: Inserted main_after_for@11.ops[3]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_after_for@11.ops[5]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_header@14.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@14.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@15.ops[11]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@15.ops[13]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@15.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@15.ops[7]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@15.ops[7]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@15.ops[10]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@15.ops[2]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@15.ops[7]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@17.ops[3]: 'l-store-copy bytes_length%0#1 0'
debug: Replaced main_after_for@17.ops[7]: 'v-load bytes_length%0#1' with 'l-load bytes_length%0#1'
debug: Inserted main_for_body@21.ops[8]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@21.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@21.ops[3]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@21.ops[11]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@21.ops[7]: 'l-store-copy item_index_internal%0#0 2'
debug: Replaced main_for_body@21.ops[15]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@21.ops[13]: 'l-store-copy idx#0 2'
debug: Replaced main_for_body@21.ops[20]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@23.ops[3]: 'l-store-copy bytes_length%0#1 0'
debug: Replaced main_after_for@23.ops[7]: 'v-load bytes_length%0#1' with 'l-load bytes_length%0#1'
debug: Inserted main_after_for@23.ops[6]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_after_for@23.ops[10]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@27.ops[15]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@27.ops[17]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@27.ops[3]: 'l-store-copy reverse_index_internal%0#2 0'
debug: Replaced main_for_body@27.ops[6]: 'v-load reverse_index_internal%0#2' with 'l-load reverse_index_internal%0#2'
debug: Inserted main_for_body@27.ops[9]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@27.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@27.ops[12]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@27.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@29.ops[3]: 'l-store-copy bytes_length%0#1 0'
debug: Replaced main_after_for@29.ops[5]: 'v-load bytes_length%0#1' with 'l-load bytes_length%0#1'
debug: Inserted main_for_body@33.ops[3]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@33.ops[6]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@33.ops[9]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@33.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@33.ops[12]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@33.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@33.ops[7]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@33.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_header@38.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@38.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@39.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@39.ops[6]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@39.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@39.ops[9]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@41.ops[1]: 'l-store-copy bytes_length%1#0 0'
debug: Replaced main_after_for@41.ops[3]: 'v-load bytes_length%1#0' with 'l-load bytes_length%1#0'
debug: Inserted main_for_body@43.ops[8]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@43.ops[10]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@43.ops[3]: 'l-store-copy reverse_index_internal%1#1 0'
debug: Replaced main_for_body@43.ops[6]: 'v-load reverse_index_internal%1#1' with 'l-load reverse_index_internal%1#1'
debug: Inserted main_after_for@45.ops[1]: 'l-store-copy item_index_internal%2#0 0'
debug: Replaced main_after_for@45.ops[3]: 'v-load item_index_internal%2#0' with 'l-load item_index_internal%2#0'
debug: Inserted main_for_header@46.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@46.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@47.ops[11]: 'l-store-copy item_index_internal%2#0 0'
debug: Replaced main_for_body@47.ops[13]: 'v-load item_index_internal%2#0' with 'l-load item_index_internal%2#0'
debug: Inserted main_for_body@47.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@47.ops[7]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@47.ops[7]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@47.ops[10]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@47.ops[2]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@47.ops[7]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@49.ops[1]: 'l-store-copy bytes_length%3#0 0'
debug: Replaced main_after_for@49.ops[5]: 'v-load bytes_length%3#0' with 'l-load bytes_length%3#0'
debug: Inserted main_for_body@51.ops[8]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@51.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@51.ops[3]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@51.ops[11]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@51.ops[7]: 'l-store-copy item_index_internal%3#0 2'
debug: Replaced main_for_body@51.ops[15]: 'v-load item_index_internal%3#0' with 'l-load item_index_internal%3#0'
debug: Inserted main_for_body@51.ops[13]: 'l-store-copy idx#0 2'
debug: Replaced main_for_body@51.ops[20]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@53.ops[1]: 'l-store-copy bytes_length%4#0 0'
debug: Replaced main_after_for@53.ops[5]: 'v-load bytes_length%4#0' with 'l-load bytes_length%4#0'
debug: Inserted main_after_for@53.ops[4]: 'l-store-copy item_index_internal%4#0 1'
debug: Replaced main_after_for@53.ops[8]: 'v-load item_index_internal%4#0' with 'l-load item_index_internal%4#0'
debug: Inserted main_for_body@55.ops[15]: 'l-store-copy item_index_internal%4#0 0'
debug: Replaced main_for_body@55.ops[17]: 'v-load item_index_internal%4#0' with 'l-load item_index_internal%4#0'
debug: Inserted main_for_body@55.ops[3]: 'l-store-copy reverse_index_internal%4#1 0'
debug: Replaced main_for_body@55.ops[6]: 'v-load reverse_index_internal%4#1' with 'l-load reverse_index_internal%4#1'
debug: Inserted main_for_body@55.ops[9]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@55.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@55.ops[12]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@55.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@57.ops[1]: 'l-store-copy bytes_length%5#0 0'
debug: Replaced main_after_for@57.ops[3]: 'v-load bytes_length%5#0' with 'l-load bytes_length%5#0'
debug: Inserted main_for_body@59.ops[3]: 'l-store-copy idx#0 0'
debug: Replaced main_for_body@59.ops[6]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@59.ops[9]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@59.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@59.ops[12]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@59.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@59.ops[7]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@59.ops[12]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@61.ops[7]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_after_for@61.ops[9]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_header@69.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@69.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@70.ops[11]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@70.ops[13]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@70.ops[4]: 'l-store-copy tup.1#0 0'
debug: Replaced main_for_body@70.ops[7]: 'v-load tup.1#0' with 'l-load tup.1#0'
debug: Inserted main_for_body@70.ops[7]: 'l-store-copy tup.0#0 1'
debug: Replaced main_for_body@70.ops[10]: 'v-load tup.0#0' with 'l-load tup.0#0'
debug: Inserted main_for_body@70.ops[2]: 'l-store-copy tup.0#0 1'
debug: Replaced main_for_body@70.ops[7]: 'v-load tup.0#0' with 'l-load tup.0#0'
debug: Inserted _log_with_index_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced _log_with_index_block@0.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _log_with_index_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced _log_with_index_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _log_with_index_block@0.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced _log_with_index_block@0.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Found 26 edge set/s for test_cases.iteration.base.IterationTestBase.approval_program
debug: test_cases.iteration.base.IterationTestBase.approval_program f-stack entry: ['idx#0', 'item_index_internal%3#0', 'reverse_index_internal%0#2', 'reverse_index_internal%1#1', 'reverse_index_internal%3#1', 'reverse_index_internal%4#1', 'reverse_index_internal%5#1', 'tup.0#0']
debug: test_cases.iteration.base.IterationTestBase.approval_program f-stack on first store: ['item_index_internal%0#0']
iteration/base.py:7 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
iteration/base.py:31 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
iteration/base.py:7 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_for_body@3 into main_for_header@2
debug: inlining single reference block main_for_body@9 into main_for_header@8
debug: inlining single reference block main_for_body@15 into main_for_header@14
debug: inlining single reference block main_for_body@21 into main_for_header@20
debug: inlining single reference block main_for_body@27 into main_for_header@26
debug: inlining single reference block main_for_body@33 into main_for_header@32
debug: inlining single reference block main_for_body@39 into main_for_header@38
debug: inlining single reference block main_for_body@43 into main_for_header@42
debug: inlining single reference block main_for_body@47 into main_for_header@46
debug: inlining single reference block main_for_body@51 into main_for_header@50
debug: inlining single reference block main_for_body@55 into main_for_header@54
debug: inlining single reference block main_for_body@59 into main_for_header@58
debug: inlining single reference block main_for_body@70 into main_for_header@69
debug: removing explicit jump to fall-through block main_for_header@2
debug: removing explicit jump to fall-through block main_for_header@8
debug: removing explicit jump to fall-through block main_for_header@14
debug: removing explicit jump to fall-through block main_for_header@20
debug: removing explicit jump to fall-through block main_for_header@26
debug: removing explicit jump to fall-through block main_for_header@32
debug: removing explicit jump to fall-through block main_for_header@38
debug: removing explicit jump to fall-through block main_for_header@42
debug: removing explicit jump to fall-through block main_for_header@46
debug: removing explicit jump to fall-through block main_for_header@50
debug: removing explicit jump to fall-through block main_for_header@54
debug: removing explicit jump to fall-through block main_for_header@58
debug: removing explicit jump to fall-through block main_for_header@69
iteration/base.py:31 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
debug: inlining single reference block _log_with_index_block@0 into _log_with_index
iteration/base.py:28 debug: optimizing TEAL subroutine ops test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
iteration/base.py:28 debug: optimizing TEAL subroutine blocks test_cases.iteration.base.IterationTestBase.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing iteration/out/URangeIterationTest.approval.teal
info: Writing iteration/out/URangeIterationTest.clear.teal
info: Writing iteration/out/URangeIterationTest.approval.bin
info: Writing iteration/out/URangeIterationTest.clear.bin
info: Writing iteration/out/URangeIterationTest.approval.puya.map
info: Writing iteration/out/URangeIterationTest.clear.puya.map
info: Writing iteration/out/TupleIterationTest.approval.teal
info: Writing iteration/out/TupleIterationTest.clear.teal
info: Writing iteration/out/TupleIterationTest.approval.bin
info: Writing iteration/out/TupleIterationTest.clear.bin
info: Writing iteration/out/TupleIterationTest.approval.puya.map
info: Writing iteration/out/TupleIterationTest.clear.puya.map
info: Writing iteration/out/IndexableIterationTest.approval.teal
info: Writing iteration/out/IndexableIterationTest.clear.teal
info: Writing iteration/out/IndexableIterationTest.approval.bin
info: Writing iteration/out/IndexableIterationTest.clear.bin
info: Writing iteration/out/IndexableIterationTest.approval.puya.map
info: Writing iteration/out/IndexableIterationTest.clear.puya.map