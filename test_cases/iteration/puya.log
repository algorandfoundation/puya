debug: PuyaOptions(paths=['iteration'], output_teal=True, output_arc32=True, output_client=True, output_awst=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, match_algod_bytecode=False, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>, target_avm_version=10, cli_template_definitions=[], template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>)
info: Found python prefix: <git root>/.venv
iteration/base.py:36 info: Skipping abstract method test_forwards
iteration/base.py:40 info: Skipping abstract method test_reversed
iteration/base.py:44 info: Skipping abstract method test_forwards_with_forwards_index
iteration/base.py:48 info: Skipping abstract method test_forwards_with_reverse_index
iteration/base.py:52 info: Skipping abstract method test_reverse_with_forwards_index
iteration/base.py:56 info: Skipping abstract method test_reverse_with_reverse_index
iteration/base.py:60 info: Skipping abstract method test_empty
iteration/base.py:64 info: Skipping abstract method test_break
debug: Sealing block@0: // L11
debug: Terminated block@0: // L11
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L19
debug: Terminated block@1: // while_top_L19
debug: Sealing block@None: // while_body_L19
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L19
debug: Terminated block@2: // while_body_L19
debug: Sealing block@None: // switch_case_default_L25
debug: Sealing block@None: // switch_case_0_L27
debug: Sealing block@None: // switch_case_1_L29
debug: Terminated block@3: // switch_case_0_L27
debug: Terminated block@4: // switch_case_1_L29
debug: Terminated block@5: // switch_case_default_L25
debug: Sealing block@6: // switch_case_next_L25
debug: Terminated block@6: // switch_case_next_L25
debug: Sealing block@1: // while_top_L19
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L25
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L25
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L19
debug: Terminated block@7: // after_while_L19
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L110
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L110
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@2: // for_body_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@2: // for_body_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@2: // for_body_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@2: // for_body_L110
debug: Terminated block@2: // for_body_L110
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@4: // for_increment_L110
debug: Terminated block@4: // for_increment_L110
debug: Sealing block@1: // for_header_L110
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L92
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L110
debug: Sealing block@2: // for_body_L110
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L110
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let head_and_tail#2: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#2: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#2: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@4) in block@4: // for_increment_L110
debug: Added head_and_tail#2 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#2 <- block@1) in block@1: // for_header_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#2 <- block@1) (head_and_tail#1) with head_and_tail#2
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#2 <- block@1)
debug: Replacing trivial Phi node: let head_and_tail#2: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#2 <- block@4) (head_and_tail#2) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#2: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#2 <- block@4)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#2 <- block@1) (head_and_tail#1) with head_and_tail#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let head_and_tail#2: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#2 <- block@4) (head_and_tail#2) with head_and_tail#0 in current definition for 4 blocks
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Added new_head#0 to Phi node: let new_head#3: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#3: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@4) in block@4: // for_increment_L110
debug: Added new_head#3 to Phi node: let new_head#1: bytes = φ(new_head#3 <- block@1) in block@1: // for_header_L110
debug: Replacing trivial Phi node: let new_head#1: bytes = φ(new_head#3 <- block@1) (new_head#1) with new_head#3
debug: Deleting Phi assignment: let new_head#1: bytes = φ(new_head#3 <- block@1)
debug: Replaced trivial Phi node: let new_head#1: bytes = φ(new_head#3 <- block@1) (new_head#1) with new_head#3 in current definition for 0 blocks
debug: Sealing block@None: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@4) in block@4: // for_increment_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@4) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@4)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@4) (length_minus_1#1) with length_minus_1#0 in current definition for 4 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@4) in block@4: // for_increment_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@4) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@4)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@4) (popped_header_offset#1) with popped_header_offset#0 in current definition for 4 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@4) in block@4: // for_increment_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@4) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@4)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@4) (popped_offset#1) with popped_offset#0 in current definition for 4 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@4) in block@4: // for_increment_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@4) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@4)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@4) (popped#1) with popped#0 in current definition for 4 blocks
debug: Terminated block@5: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@None: // if_body_L146
debug: Sealing block@None: // else_body_L146
debug: Terminated block@1: // if_body_L146
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L146
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L146
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Sealing block@None: // ternary_true_L150
debug: Sealing block@None: // ternary_false_L150
debug: Terminated block@3: // ternary_true_L150
debug: Terminated block@4: // ternary_false_L150
debug: Sealing block@5: // ternary_merge_L150
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@5: // ternary_merge_L150
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@3) in block@3: // ternary_true_L150
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@3, ternary_result%0#1 <- block@4) in block@4: // ternary_false_L150
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // ternary_merge_L150
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L146
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0 in current definition for 1 blocks
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3) in block@3: // ternary_true_L150
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) in block@4: // ternary_false_L150
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@5: // ternary_merge_L150
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@6: // for_header_L150
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@6: // for_header_L150
debug: Terminated block@6: // for_header_L150
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@7: // for_body_L150
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@7: // for_body_L150
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@7: // for_body_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@7: // for_body_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@7: // for_body_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@7: // for_body_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@7: // for_body_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@7: // for_body_L150
debug: Terminated block@7: // for_body_L150
debug: Sealing block@8: // for_footer_L150
debug: Terminated block@8: // for_footer_L150
debug: Sealing block@9: // for_increment_L150
debug: Terminated block@9: // for_increment_L150
debug: Sealing block@6: // for_header_L150
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5) in block@5: // ternary_merge_L150
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5, range_item%0#3 <- block@9) in block@9: // for_increment_L150
debug: Sealing block@7: // for_body_L150
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) in block@6: // for_header_L150
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@6: // for_header_L150
debug: Created Phi assignment: let result#5: bytes = undefined while trying to resolve 'result' in block@5: // ternary_merge_L150
debug: Created Phi assignment: let result#6: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#6: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#6: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L146
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3) in block@3: // ternary_true_L150
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) in block@4: // ternary_false_L150
debug: Replacing trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6
debug: Deleting Phi assignment: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4)
debug: Replaced trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6 in current definition for 1 blocks
debug: Added result#6 to Phi node: let result#4: bytes = φ(result#6 <- block@5) in block@5: // ternary_merge_L150
debug: Added result#3 to Phi node: let result#4: bytes = φ(result#6 <- block@5, result#3 <- block@9) in block@9: // for_increment_L150
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@6) in block@6: // for_header_L150
debug: Replacing trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4
debug: Deleting Phi assignment: let result#2: bytes = φ(result#4 <- block@6)
debug: Replaced trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4 in current definition for 0 blocks
debug: Created Phi assignment: let write_offset#3: uint64 = undefined while trying to resolve 'write_offset' in block@6: // for_header_L150
debug: Created Phi assignment: let write_offset#4: uint64 = undefined while trying to resolve 'write_offset' in block@5: // ternary_merge_L150
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3) in block@3: // ternary_true_L150
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) in block@4: // ternary_false_L150
debug: Replacing trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0
debug: Deleting Phi assignment: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4)
debug: Replaced trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0 in current definition for 1 blocks
debug: Added write_offset#0 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5) in block@5: // ternary_merge_L150
debug: Added write_offset#2 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5, write_offset#2 <- block@9) in block@9: // for_increment_L150
debug: Added write_offset#3 to Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) in block@6: // for_header_L150
debug: Replacing trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3
debug: Deleting Phi assignment: let write_offset#1: uint64 = φ(write_offset#3 <- block@6)
debug: Replaced trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3 in current definition for 0 blocks
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@6: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#3: bytes = undefined while trying to resolve 'new_items_bytes' in block@5: // ternary_merge_L150
debug: Created Phi assignment: let new_items_bytes#4: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L146
debug: Replacing trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3) in block@3: // ternary_true_L150
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) in block@4: // ternary_false_L150
debug: Replacing trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5) in block@5: // ternary_merge_L150
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@9) in block@9: // for_increment_L150
debug: Added new_items_bytes#2 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) in block@6: // for_header_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6)
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L150
debug: Terminated block@10: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L199
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L199
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@2: // for_body_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@2: // for_body_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@2: // for_body_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@2: // for_body_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@2: // for_body_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@2: // for_body_L199
debug: Terminated block@2: // for_body_L199
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@4: // for_increment_L199
debug: Terminated block@4: // for_increment_L199
debug: Sealing block@1: // for_header_L199
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L189
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L199
debug: Sealing block@2: // for_body_L199
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L199
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@4) in block@4: // for_increment_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#2 <- block@1) in block@1: // for_header_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#2 <- block@1) (array_head_and_tail#1) with array_head_and_tail#2
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#2 <- block@1)
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@4) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@4)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#2 <- block@1) (array_head_and_tail#1) with array_head_and_tail#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@4) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 4 blocks
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Added new_head#0 to Phi node: let new_head#3: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#3: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@4) in block@4: // for_increment_L199
debug: Added new_head#3 to Phi node: let new_head#1: bytes = φ(new_head#3 <- block@1) in block@1: // for_header_L199
debug: Replacing trivial Phi node: let new_head#1: bytes = φ(new_head#3 <- block@1) (new_head#1) with new_head#3
debug: Deleting Phi assignment: let new_head#1: bytes = φ(new_head#3 <- block@1)
debug: Replaced trivial Phi node: let new_head#1: bytes = φ(new_head#3 <- block@1) (new_head#1) with new_head#3 in current definition for 0 blocks
debug: Created Phi assignment: let item_offset_adjustment#2: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#2: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#2: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@4) in block@4: // for_increment_L199
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#2 <- block@1) in block@1: // for_header_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#2 <- block@1) (item_offset_adjustment#1) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#2 <- block@1)
debug: Replacing trivial Phi node: let item_offset_adjustment#2: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#2 <- block@4) (item_offset_adjustment#2) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#2: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#2 <- block@4)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#2 <- block@1) (item_offset_adjustment#1) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let item_offset_adjustment#2: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#2 <- block@4) (item_offset_adjustment#2) with item_offset_adjustment#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@4) in block@4: // for_increment_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@4) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@4) (new_items_count#1) with new_items_count#0 in current definition for 4 blocks
debug: Terminated block@5: // after_for_L199
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@6: // for_header_L204
debug: Created Phi assignment: let range_item%1#1: uint64 = undefined while trying to resolve 'range_item%1' in block@6: // for_header_L204
debug: Terminated block@6: // for_header_L204
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@7: // for_body_L204
debug: Created Phi assignment: let range_item%1#2: uint64 = undefined while trying to resolve 'range_item%1' in block@7: // for_body_L204
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@7: // for_body_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@7: // for_body_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@7: // for_body_L204
debug: Created Phi assignment: let new_head#4: bytes = undefined while trying to resolve 'new_head' in block@7: // for_body_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@7: // for_body_L204
debug: Created Phi assignment: let item_offset_adjustment#4: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@7: // for_body_L204
debug: Terminated block@7: // for_body_L204
debug: Sealing block@8: // for_footer_L204
debug: Terminated block@8: // for_footer_L204
debug: Sealing block@9: // for_increment_L204
debug: Terminated block@9: // for_increment_L204
debug: Sealing block@6: // for_header_L204
debug: Added range_item%1#0 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@5) in block@5: // after_for_L199
debug: Added range_item%1#3 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@5, range_item%1#3 <- block@9) in block@9: // for_increment_L204
debug: Sealing block@7: // for_body_L204
debug: Added range_item%1#1 to Phi node: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@6) in block@6: // for_header_L204
debug: Replacing trivial Phi node: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@6) (range_item%1#2) with range_item%1#1
debug: Deleting Phi assignment: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@6)
debug: Replaced trivial Phi node: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@6) (range_item%1#2) with range_item%1#1 in current definition for 2 blocks
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@6: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#3: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#3 to Phi node: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#3 <- block@4) in block@4: // for_increment_L199
debug: Replacing trivial Phi node: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#3 <- block@4) (new_head_and_tail#3) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#3 <- block@4)
debug: Replaced trivial Phi node: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#3 <- block@4) (new_head_and_tail#3) with new_head_and_tail#0 in current definition for 4 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@5) in block@5: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@5, new_head_and_tail#1 <- block@9) in block@9: // for_increment_L204
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#2 <- block@6) in block@6: // for_header_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#2 <- block@6) (new_head_and_tail#1) with new_head_and_tail#2
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#2 <- block@6)
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@5, new_head_and_tail#2 <- block@9) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@5, new_head_and_tail#2 <- block@9)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#2 <- block@6) (new_head_and_tail#1) with new_head_and_tail#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@5, new_head_and_tail#2 <- block@9) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 4 blocks
debug: Created Phi assignment: let new_head#6: bytes = undefined while trying to resolve 'new_head' in block@6: // for_header_L204
debug: Added new_head#3 to Phi node: let new_head#6: bytes = φ(new_head#3 <- block@5) in block@5: // after_for_L199
debug: Added new_head#5 to Phi node: let new_head#6: bytes = φ(new_head#3 <- block@5, new_head#5 <- block@9) in block@9: // for_increment_L204
debug: Added new_head#6 to Phi node: let new_head#4: bytes = φ(new_head#6 <- block@6) in block@6: // for_header_L204
debug: Replacing trivial Phi node: let new_head#4: bytes = φ(new_head#6 <- block@6) (new_head#4) with new_head#6
debug: Deleting Phi assignment: let new_head#4: bytes = φ(new_head#6 <- block@6)
debug: Replaced trivial Phi node: let new_head#4: bytes = φ(new_head#6 <- block@6) (new_head#4) with new_head#6 in current definition for 0 blocks
debug: Created Phi assignment: let item_offset_adjustment#5: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@6: // for_header_L204
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#5: uint64 = φ(item_offset_adjustment#3 <- block@5) in block@5: // after_for_L199
debug: Added item_offset_adjustment#4 to Phi node: let item_offset_adjustment#5: uint64 = φ(item_offset_adjustment#3 <- block@5, item_offset_adjustment#4 <- block@9) in block@9: // for_increment_L204
debug: Added item_offset_adjustment#5 to Phi node: let item_offset_adjustment#4: uint64 = φ(item_offset_adjustment#5 <- block@6) in block@6: // for_header_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#4: uint64 = φ(item_offset_adjustment#5 <- block@6) (item_offset_adjustment#4) with item_offset_adjustment#5
debug: Deleting Phi assignment: let item_offset_adjustment#4: uint64 = φ(item_offset_adjustment#5 <- block@6)
debug: Replacing trivial Phi node: let item_offset_adjustment#5: uint64 = φ(item_offset_adjustment#3 <- block@5, item_offset_adjustment#5 <- block@9) (item_offset_adjustment#5) with item_offset_adjustment#3
debug: Deleting Phi assignment: let item_offset_adjustment#5: uint64 = φ(item_offset_adjustment#3 <- block@5, item_offset_adjustment#5 <- block@9)
debug: Replaced trivial Phi node: let item_offset_adjustment#4: uint64 = φ(item_offset_adjustment#5 <- block@6) (item_offset_adjustment#4) with item_offset_adjustment#5 in current definition for 3 blocks
debug: Replaced trivial Phi node: let item_offset_adjustment#5: uint64 = φ(item_offset_adjustment#3 <- block@5, item_offset_adjustment#5 <- block@9) (item_offset_adjustment#5) with item_offset_adjustment#3 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@6: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@4) in block@4: // for_increment_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@4) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@4)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@4) (array_items_count#2) with array_items_count#0 in current definition for 4 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@5) in block@5: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@5, array_items_count#1 <- block@9) in block@9: // for_increment_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@5, array_items_count#1 <- block@9) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@5, array_items_count#1 <- block@9)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@5, array_items_count#1 <- block@9) (array_items_count#1) with array_items_count#0 in current definition for 4 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@6: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@5) in block@5: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@5, new_items_count#2 <- block@9) in block@9: // for_increment_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@5, new_items_count#2 <- block@9) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@5, new_items_count#2 <- block@9)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@5, new_items_count#2 <- block@9) (new_items_count#2) with new_items_count#0 in current definition for 4 blocks
debug: Created Phi assignment: let array_head_and_tail#3: bytes = undefined while trying to resolve 'array_head_and_tail' in block@6: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@5) in block@5: // after_for_L199
debug: Added array_head_and_tail#3 to Phi node: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@5, array_head_and_tail#3 <- block@9) in block@9: // for_increment_L204
debug: Replacing trivial Phi node: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@5, array_head_and_tail#3 <- block@9) (array_head_and_tail#3) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@5, array_head_and_tail#3 <- block@9)
debug: Replaced trivial Phi node: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@5, array_head_and_tail#3 <- block@9) (array_head_and_tail#3) with array_head_and_tail#0 in current definition for 4 blocks
debug: Terminated block@10: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L269
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L269
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@2: // for_body_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@2: // for_body_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@2: // for_body_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@2: // for_body_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@2: // for_body_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@2: // for_body_L269
debug: Terminated block@2: // for_body_L269
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@4: // for_increment_L269
debug: Terminated block@4: // for_increment_L269
debug: Sealing block@1: // for_header_L269
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L252
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L269
debug: Sealing block@2: // for_body_L269
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L269
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let new_head_and_tail#3: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#3: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@4) in block@4: // for_increment_L269
debug: Added new_head_and_tail#3 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#3 <- block@1) in block@1: // for_header_L269
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#3 <- block@1) (new_head_and_tail#1) with new_head_and_tail#3
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#3 <- block@1)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#3 <- block@1) (new_head_and_tail#1) with new_head_and_tail#3 in current definition for 0 blocks
debug: Created Phi assignment: let new_item_length#2: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#2: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#2: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@4) in block@4: // for_increment_L269
debug: Added new_item_length#2 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#2 <- block@1) in block@1: // for_header_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#2 <- block@1) (new_item_length#1) with new_item_length#2
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#2 <- block@1)
debug: Replacing trivial Phi node: let new_item_length#2: uint64 = φ(new_item_length#0 <- block@0, new_item_length#2 <- block@4) (new_item_length#2) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#2: uint64 = φ(new_item_length#0 <- block@0, new_item_length#2 <- block@4)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#2 <- block@1) (new_item_length#1) with new_item_length#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let new_item_length#2: uint64 = φ(new_item_length#0 <- block@0, new_item_length#2 <- block@4) (new_item_length#2) with new_item_length#0 in current definition for 4 blocks
debug: Created Phi assignment: let original_item_length#2: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Added original_item_length#0 to Phi node: let original_item_length#2: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#2: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@4) in block@4: // for_increment_L269
debug: Added original_item_length#2 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#2 <- block@1) in block@1: // for_header_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#2 <- block@1) (original_item_length#1) with original_item_length#2
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#2 <- block@1)
debug: Replacing trivial Phi node: let original_item_length#2: uint64 = φ(original_item_length#0 <- block@0, original_item_length#2 <- block@4) (original_item_length#2) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#2: uint64 = φ(original_item_length#0 <- block@0, original_item_length#2 <- block@4)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#2 <- block@1) (original_item_length#1) with original_item_length#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let original_item_length#2: uint64 = φ(original_item_length#0 <- block@0, original_item_length#2 <- block@4) (original_item_length#2) with original_item_length#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L269
debug: Terminated block@5: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L327
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L327
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@2: // for_body_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@2: // for_body_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@2: // for_body_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@2: // for_body_L327
debug: Terminated block@2: // for_body_L327
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@4: // for_increment_L327
debug: Terminated block@4: // for_increment_L327
debug: Sealing block@1: // for_header_L327
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L306
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L327
debug: Sealing block@2: // for_body_L327
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L327
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let tail_offset#3: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#3: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#3: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@4) in block@4: // for_increment_L327
debug: Added tail_offset#3 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#3 <- block@1) in block@1: // for_header_L327
debug: Replacing trivial Phi node: let tail_offset#1: uint64 = φ(tail_offset#3 <- block@1) (tail_offset#1) with tail_offset#3
debug: Deleting Phi assignment: let tail_offset#1: uint64 = φ(tail_offset#3 <- block@1)
debug: Replaced trivial Phi node: let tail_offset#1: uint64 = φ(tail_offset#3 <- block@1) (tail_offset#1) with tail_offset#3 in current definition for 0 blocks
debug: Created Phi assignment: let array_head_and_tail#3: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#3: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@4) in block@4: // for_increment_L327
debug: Added array_head_and_tail#3 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#3 <- block@1) in block@1: // for_header_L327
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#3 <- block@1) (array_head_and_tail#1) with array_head_and_tail#3
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#3 <- block@1)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#3 <- block@1) (array_head_and_tail#1) with array_head_and_tail#3 in current definition for 0 blocks
debug: Sealing block@None: // after_for_L327
debug: Terminated block@5: // after_for_L327
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L9
debug: Terminated block@0: // L9
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L12
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L12
debug: Terminated block@1: // for_header_L12
debug: Sealing block@None: // for_body_L12
debug: Sealing block@None: // after_for_L12
debug: Terminated block@2: // for_body_L12
debug: Sealing block@3: // for_footer_L12
debug: Terminated block@3: // for_footer_L12
debug: Sealing block@1: // for_header_L12
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L9
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L12
debug: Terminated block@4: // after_for_L12
debug: Sealing block@0: // L15
debug: Terminated block@0: // L15
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L18
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L18
debug: Terminated block@1: // for_header_L18
debug: Sealing block@None: // for_body_L18
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L18
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1: // for_header_L18
debug: Sealing block@None: // after_for_L18
debug: Terminated block@2: // for_body_L18
debug: Sealing block@3: // for_footer_L18
debug: Terminated block@3: // for_footer_L18
debug: Sealing block@1: // for_header_L18
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L15
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L18
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0: // L15
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3: // for_footer_L18
debug: Terminated block@4: // after_for_L18
debug: Sealing block@0: // L21
debug: Terminated block@0: // L21
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L24
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L24
debug: Terminated block@1: // for_header_L24
debug: Sealing block@None: // for_body_L24
debug: Sealing block@None: // after_for_L24
debug: Terminated block@2: // for_body_L24
debug: Sealing block@3: // for_footer_L24
debug: Terminated block@3: // for_footer_L24
debug: Sealing block@1: // for_header_L24
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L21
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L24
debug: Terminated block@4: // after_for_L24
debug: Sealing block@0: // L29
debug: Terminated block@0: // L29
debug: Sealing block@0: // L27
debug: Terminated block@0: // L27
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L30
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L30
debug: Terminated block@1: // for_header_L30
debug: Sealing block@None: // for_body_L30
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L30
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1: // for_header_L30
debug: Sealing block@None: // after_for_L30
debug: Terminated block@2: // for_body_L30
debug: Sealing block@3: // for_footer_L30
debug: Terminated block@3: // for_footer_L30
debug: Sealing block@1: // for_header_L30
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L27
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L30
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0: // L27
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3: // for_footer_L30
debug: Terminated block@4: // after_for_L30
debug: Sealing block@0: // L33
debug: Terminated block@0: // L33
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L36
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L36
debug: Terminated block@1: // for_header_L36
debug: Sealing block@None: // for_body_L36
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L36
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1: // for_header_L36
debug: Sealing block@None: // after_for_L36
debug: Terminated block@2: // for_body_L36
debug: Sealing block@3: // for_footer_L36
debug: Terminated block@3: // for_footer_L36
debug: Sealing block@1: // for_header_L36
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L33
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L36
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0: // L33
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3: // for_footer_L36
debug: Terminated block@4: // after_for_L36
debug: Sealing block@0: // L39
debug: Terminated block@0: // L39
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L42
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L42
debug: Terminated block@1: // for_header_L42
debug: Sealing block@None: // for_body_L42
debug: Looking for 'reverse_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L42
debug: Created Phi assignment: let reverse_index_internal%0#1: uint64 = undefined while trying to resolve 'reverse_index_internal%0' in block@1: // for_header_L42
debug: Sealing block@None: // after_for_L42
debug: Terminated block@2: // for_body_L42
debug: Sealing block@3: // for_footer_L42
debug: Terminated block@3: // for_footer_L42
debug: Sealing block@1: // for_header_L42
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L39
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L42
debug: Added reverse_index_internal%0#0 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0) in block@0: // L39
debug: Added reverse_index_internal%0#2 to Phi node: let reverse_index_internal%0#1: uint64 = φ(reverse_index_internal%0#0 <- block@0, reverse_index_internal%0#2 <- block@3) in block@3: // for_footer_L42
debug: Terminated block@4: // after_for_L42
debug: Sealing block@0: // L45
debug: Terminated block@0: // L45
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L48
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L48
debug: Terminated block@1: // for_header_L48
debug: Sealing block@None: // for_body_L48
debug: Sealing block@None: // after_for_L48
debug: Terminated block@2: // for_body_L48
debug: Sealing block@3: // for_footer_L48
debug: Terminated block@3: // for_footer_L48
debug: Sealing block@1: // for_header_L48
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L45
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L48
debug: Terminated block@4: // after_for_L48
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5: // for_header_L50
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5: // for_header_L50
debug: Terminated block@5: // for_header_L50
debug: Sealing block@None: // for_body_L50
debug: Looking for 'reverse_index_internal%1' in an unsealed block creating an incomplete Phi: block@5: // for_header_L50
debug: Created Phi assignment: let reverse_index_internal%1#1: uint64 = undefined while trying to resolve 'reverse_index_internal%1' in block@5: // for_header_L50
debug: Sealing block@None: // after_for_L50
debug: Terminated block@6: // for_body_L50
debug: Sealing block@7: // for_footer_L50
debug: Terminated block@7: // for_footer_L50
debug: Sealing block@5: // for_header_L50
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4: // after_for_L48
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7: // for_footer_L50
debug: Added reverse_index_internal%1#0 to Phi node: let reverse_index_internal%1#1: uint64 = φ(reverse_index_internal%1#0 <- block@4) in block@4: // after_for_L48
debug: Added reverse_index_internal%1#2 to Phi node: let reverse_index_internal%1#1: uint64 = φ(reverse_index_internal%1#0 <- block@4, reverse_index_internal%1#2 <- block@7) in block@7: // for_footer_L50
debug: Terminated block@8: // after_for_L50
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9: // for_header_L52
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9: // for_header_L52
debug: Terminated block@9: // for_header_L52
debug: Sealing block@None: // for_body_L52
debug: Sealing block@None: // after_for_L52
debug: Terminated block@10: // for_body_L52
debug: Sealing block@11: // for_footer_L52
debug: Terminated block@11: // for_footer_L52
debug: Sealing block@9: // for_header_L52
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8: // after_for_L50
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@11) in block@11: // for_footer_L52
debug: Terminated block@12: // after_for_L52
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@13: // for_header_L54
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@13: // for_header_L54
debug: Terminated block@13: // for_header_L54
debug: Sealing block@None: // for_body_L54
debug: Looking for 'reverse_index_internal%3' in an unsealed block creating an incomplete Phi: block@13: // for_header_L54
debug: Created Phi assignment: let reverse_index_internal%3#1: uint64 = undefined while trying to resolve 'reverse_index_internal%3' in block@13: // for_header_L54
debug: Sealing block@None: // after_for_L54
debug: Terminated block@14: // for_body_L54
debug: Sealing block@15: // for_footer_L54
debug: Terminated block@15: // for_footer_L54
debug: Sealing block@13: // for_header_L54
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@12) in block@12: // after_for_L52
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@12, item_index_internal%3#2 <- block@15) in block@15: // for_footer_L54
debug: Added reverse_index_internal%3#0 to Phi node: let reverse_index_internal%3#1: uint64 = φ(reverse_index_internal%3#0 <- block@12) in block@12: // after_for_L52
debug: Added reverse_index_internal%3#2 to Phi node: let reverse_index_internal%3#1: uint64 = φ(reverse_index_internal%3#0 <- block@12, reverse_index_internal%3#2 <- block@15) in block@15: // for_footer_L54
debug: Terminated block@16: // after_for_L54
debug: Looking for 'item_index_internal%4' in an unsealed block creating an incomplete Phi: block@17: // for_header_L56
debug: Created Phi assignment: let item_index_internal%4#1: uint64 = undefined while trying to resolve 'item_index_internal%4' in block@17: // for_header_L56
debug: Terminated block@17: // for_header_L56
debug: Sealing block@None: // for_body_L56
debug: Looking for 'reverse_index_internal%4' in an unsealed block creating an incomplete Phi: block@17: // for_header_L56
debug: Created Phi assignment: let reverse_index_internal%4#1: uint64 = undefined while trying to resolve 'reverse_index_internal%4' in block@17: // for_header_L56
debug: Sealing block@None: // after_for_L56
debug: Terminated block@18: // for_body_L56
debug: Sealing block@19: // for_footer_L56
debug: Terminated block@19: // for_footer_L56
debug: Sealing block@17: // for_header_L56
debug: Added item_index_internal%4#0 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@16) in block@16: // after_for_L54
debug: Added item_index_internal%4#2 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@16, item_index_internal%4#2 <- block@19) in block@19: // for_footer_L56
debug: Added reverse_index_internal%4#0 to Phi node: let reverse_index_internal%4#1: uint64 = φ(reverse_index_internal%4#0 <- block@16) in block@16: // after_for_L54
debug: Added reverse_index_internal%4#2 to Phi node: let reverse_index_internal%4#1: uint64 = φ(reverse_index_internal%4#0 <- block@16, reverse_index_internal%4#2 <- block@19) in block@19: // for_footer_L56
debug: Terminated block@20: // after_for_L56
debug: Looking for 'item_index_internal%5' in an unsealed block creating an incomplete Phi: block@21: // for_header_L58
debug: Created Phi assignment: let item_index_internal%5#1: uint64 = undefined while trying to resolve 'item_index_internal%5' in block@21: // for_header_L58
debug: Terminated block@21: // for_header_L58
debug: Sealing block@None: // for_body_L58
debug: Looking for 'reverse_index_internal%5' in an unsealed block creating an incomplete Phi: block@21: // for_header_L58
debug: Created Phi assignment: let reverse_index_internal%5#1: uint64 = undefined while trying to resolve 'reverse_index_internal%5' in block@21: // for_header_L58
debug: Sealing block@None: // after_for_L58
debug: Terminated block@22: // for_body_L58
debug: Sealing block@23: // for_footer_L58
debug: Terminated block@23: // for_footer_L58
debug: Sealing block@21: // for_header_L58
debug: Added item_index_internal%5#0 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20) in block@20: // after_for_L56
debug: Added item_index_internal%5#2 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@20, item_index_internal%5#2 <- block@23) in block@23: // for_footer_L58
debug: Added reverse_index_internal%5#0 to Phi node: let reverse_index_internal%5#1: uint64 = φ(reverse_index_internal%5#0 <- block@20) in block@20: // after_for_L56
debug: Added reverse_index_internal%5#2 to Phi node: let reverse_index_internal%5#1: uint64 = φ(reverse_index_internal%5#0 <- block@20, reverse_index_internal%5#2 <- block@23) in block@23: // for_footer_L58
debug: Terminated block@24: // after_for_L58
debug: Sealing block@0: // L61
debug: Terminated block@0: // L61
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L64
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L64
debug: Terminated block@1: // for_header_L64
debug: Sealing block@None: // for_body_L64
debug: Terminated block@2: // for_body_L64
debug: Sealing block@None: // after_for_L64
debug: Sealing block@1: // for_header_L64
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L61
debug: Replacing trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) (item_index_internal%0#1) with item_index_internal%0#0
debug: Deleting Phi assignment: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0)
debug: Replaced trivial Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) (item_index_internal%0#1) with item_index_internal%0#0 in current definition for 2 blocks
debug: Terminated block@3: // after_for_L64
debug: Sealing block@0: // L7
debug: Terminated block@0: // L7
debug: Sealing block@0: // L26
debug: Terminated block@0: // L26
debug: Sealing block@0: // L9
debug: Terminated block@0: // L9
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1: // for_body_L12
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1: // for_body_L12
debug: Terminated block@1: // for_body_L12
debug: Sealing block@2: // for_footer_L12
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L12
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L12
debug: Terminated block@2: // for_footer_L12
debug: Terminated block@3: // for_header_1_L12
debug: Sealing block@3: // for_header_1_L12
debug: Terminated block@4: // for_header_2_L12
debug: Sealing block@4: // for_header_2_L12
debug: Sealing block@1: // for_body_L12
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0: // L9
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3: // for_header_1_L12
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4: // for_header_2_L12
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L9
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L12
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L12
debug: Sealing block@None: // after_for_L12
debug: Terminated block@5: // after_for_L12
debug: Sealing block@0: // L15
debug: Terminated block@0: // L15
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1: // for_body_L18
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1: // for_body_L18
debug: Terminated block@1: // for_body_L18
debug: Sealing block@2: // for_footer_L18
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L18
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L18
debug: Terminated block@2: // for_footer_L18
debug: Terminated block@3: // for_header_1_L18
debug: Sealing block@3: // for_header_1_L18
debug: Terminated block@4: // for_header_2_L18
debug: Sealing block@4: // for_header_2_L18
debug: Sealing block@1: // for_body_L18
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0: // L15
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3: // for_header_1_L18
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4: // for_header_2_L18
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L15
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L18
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L18
debug: Sealing block@None: // after_for_L18
debug: Terminated block@5: // after_for_L18
debug: Sealing block@0: // L21
debug: Terminated block@0: // L21
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1: // for_body_L24
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1: // for_body_L24
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1: // for_body_L24
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1: // for_body_L24
debug: Terminated block@1: // for_body_L24
debug: Sealing block@2: // for_footer_L24
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L24
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L24
debug: Terminated block@2: // for_footer_L24
debug: Terminated block@3: // for_header_1_L24
debug: Sealing block@3: // for_header_1_L24
debug: Terminated block@4: // for_header_2_L24
debug: Sealing block@4: // for_header_2_L24
debug: Sealing block@1: // for_body_L24
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0: // L21
debug: Added idx#2 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3) in block@3: // for_header_1_L24
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3, idx#3 <- block@4) in block@4: // for_header_2_L24
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0: // L21
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3: // for_header_1_L24
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4: // for_header_2_L24
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L21
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L24
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L24
debug: Sealing block@None: // after_for_L24
debug: Terminated block@5: // after_for_L24
debug: Sealing block@0: // L29
debug: Terminated block@0: // L29
debug: Sealing block@0: // L27
debug: Terminated block@0: // L27
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1: // for_body_L30
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1: // for_body_L30
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1: // for_body_L30
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1: // for_body_L30
debug: Terminated block@1: // for_body_L30
debug: Sealing block@2: // for_footer_L30
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L30
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L30
debug: Terminated block@2: // for_footer_L30
debug: Terminated block@3: // for_header_1_L30
debug: Sealing block@3: // for_header_1_L30
debug: Terminated block@4: // for_header_2_L30
debug: Sealing block@4: // for_header_2_L30
debug: Sealing block@1: // for_body_L30
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0: // L27
debug: Added idx#2 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3) in block@3: // for_header_1_L30
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3, idx#3 <- block@4) in block@4: // for_header_2_L30
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0: // L27
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3: // for_header_1_L30
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4: // for_header_2_L30
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L27
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L30
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L30
debug: Sealing block@None: // after_for_L30
debug: Terminated block@5: // after_for_L30
debug: Sealing block@0: // L33
debug: Terminated block@0: // L33
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1: // for_body_L36
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1: // for_body_L36
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1: // for_body_L36
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1: // for_body_L36
debug: Terminated block@1: // for_body_L36
debug: Sealing block@2: // for_footer_L36
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L36
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L36
debug: Terminated block@2: // for_footer_L36
debug: Terminated block@3: // for_header_1_L36
debug: Sealing block@3: // for_header_1_L36
debug: Terminated block@4: // for_header_2_L36
debug: Sealing block@4: // for_header_2_L36
debug: Sealing block@1: // for_body_L36
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0: // L33
debug: Added idx#2 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3) in block@3: // for_header_1_L36
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3, idx#3 <- block@4) in block@4: // for_header_2_L36
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0: // L33
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3: // for_header_1_L36
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4: // for_header_2_L36
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L33
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L36
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L36
debug: Sealing block@None: // after_for_L36
debug: Terminated block@5: // after_for_L36
debug: Sealing block@0: // L39
debug: Terminated block@0: // L39
debug: Looking for 'idx' in an unsealed block creating an incomplete Phi: block@1: // for_body_L42
debug: Created Phi assignment: let idx#1: uint64 = undefined while trying to resolve 'idx' in block@1: // for_body_L42
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1: // for_body_L42
debug: Created Phi assignment: let i#1: bytes = undefined while trying to resolve 'i' in block@1: // for_body_L42
debug: Terminated block@1: // for_body_L42
debug: Sealing block@2: // for_footer_L42
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L42
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L42
debug: Terminated block@2: // for_footer_L42
debug: Terminated block@3: // for_header_1_L42
debug: Sealing block@3: // for_header_1_L42
debug: Terminated block@4: // for_header_2_L42
debug: Sealing block@4: // for_header_2_L42
debug: Sealing block@1: // for_body_L42
debug: Added idx#0 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0) in block@0: // L39
debug: Added idx#2 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3) in block@3: // for_header_1_L42
debug: Added idx#3 to Phi node: let idx#1: uint64 = φ(idx#0 <- block@0, idx#2 <- block@3, idx#3 <- block@4) in block@4: // for_header_2_L42
debug: Added i#0 to Phi node: let i#1: bytes = φ(i#0 <- block@0) in block@0: // L39
debug: Added i#2 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3) in block@3: // for_header_1_L42
debug: Added i#3 to Phi node: let i#1: bytes = φ(i#0 <- block@0, i#2 <- block@3, i#3 <- block@4) in block@4: // for_header_2_L42
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L39
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L42
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L42
debug: Sealing block@None: // after_for_L42
debug: Terminated block@5: // after_for_L42
debug: Sealing block@0: // L45
debug: Terminated block@0: // L45
debug: Sealing block@0: // L67
debug: Terminated block@0: // L67
debug: Looking for 'x' in an unsealed block creating an incomplete Phi: block@1: // for_body_L70
debug: Created Phi assignment: let x#1: bytes = undefined while trying to resolve 'x' in block@1: // for_body_L70
debug: Terminated block@1: // for_body_L70
debug: Sealing block@1: // for_body_L70
debug: Added x#0 to Phi node: let x#1: bytes = φ(x#0 <- block@0) in block@0: // L67
debug: Replacing trivial Phi node: let x#1: bytes = φ(x#0 <- block@0) (x#1) with x#0
debug: Deleting Phi assignment: let x#1: bytes = φ(x#0 <- block@0)
debug: Replaced trivial Phi node: let x#1: bytes = φ(x#0 <- block@0) (x#1) with x#0 in current definition for 1 blocks
debug: Sealing block@None: // after_for_L70
debug: Terminated block@2: // after_for_L70
debug: Sealing block@0: // L7
debug: Terminated block@0: // L7
debug: Sealing block@0: // L26
debug: Terminated block@0: // L26
debug: Sealing block@0: // L9
debug: Terminated block@0: // L9
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L13
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L13
debug: Terminated block@1: // for_header_L13
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L13
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L13
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2: // for_body_L13
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2: // for_body_L13
debug: Terminated block@2: // for_body_L13
debug: Sealing block@3: // for_footer_L13
debug: Terminated block@3: // for_footer_L13
debug: Sealing block@4: // for_increment_L13
debug: Terminated block@4: // for_increment_L13
debug: Sealing block@1: // for_header_L13
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L9
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L13
debug: Sealing block@2: // for_body_L13
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L13
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let values#2: bytes = undefined while trying to resolve 'values' in block@1: // for_header_L13
debug: Added values#0 to Phi node: let values#2: bytes = φ(values#0 <- block@0) in block@0: // L9
debug: Added values#1 to Phi node: let values#2: bytes = φ(values#0 <- block@0, values#1 <- block@4) in block@4: // for_increment_L13
debug: Added values#2 to Phi node: let values#1: bytes = φ(values#2 <- block@1) in block@1: // for_header_L13
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#2 <- block@1) (values#1) with values#2
debug: Deleting Phi assignment: let values#1: bytes = φ(values#2 <- block@1)
debug: Replacing trivial Phi node: let values#2: bytes = φ(values#0 <- block@0, values#2 <- block@4) (values#2) with values#0
debug: Deleting Phi assignment: let values#2: bytes = φ(values#0 <- block@0, values#2 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#2 <- block@1) (values#1) with values#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let values#2: bytes = φ(values#0 <- block@0, values#2 <- block@4) (values#2) with values#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L13
debug: Terminated block@5: // after_for_L13
debug: Sealing block@0: // L16
debug: Terminated block@0: // L16
debug: Sealing block@1: // for_preamble_L20
debug: Terminated block@1: // for_preamble_L20
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_header_L20
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_header_L20
debug: Terminated block@2: // for_header_L20
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L20
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@3: // for_body_L20
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@3: // for_body_L20
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@3: // for_body_L20
debug: Terminated block@3: // for_body_L20
debug: Sealing block@4: // for_footer_L20
debug: Terminated block@4: // for_footer_L20
debug: Sealing block@5: // for_increment_L20
debug: Terminated block@5: // for_increment_L20
debug: Sealing block@2: // for_header_L20
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) in block@1: // for_preamble_L20
debug: Replacing trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#1) with range_item%0#0
debug: Deleting Phi assignment: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#1) with range_item%0#0 in current definition for 1 blocks
debug: Sealing block@3: // for_body_L20
debug: Added range_item%0#0 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@2) in block@2: // for_header_L20
debug: Added range_item%0#3 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@2, range_item%0#3 <- block@5) in block@5: // for_increment_L20
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@2) in block@2: // for_header_L20
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) in block@5: // for_increment_L20
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@None: // after_for_L20
debug: Terminated block@6: // after_for_L20
debug: Sealing block@0: // L23
debug: Terminated block@0: // L23
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L27
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L27
debug: Terminated block@1: // for_header_L27
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L27
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L27
debug: Looking for 'range_index%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L27
debug: Created Phi assignment: let range_index%0#1: uint64 = undefined while trying to resolve 'range_index%0' in block@2: // for_body_L27
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2: // for_body_L27
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2: // for_body_L27
debug: Terminated block@2: // for_body_L27
debug: Sealing block@3: // for_footer_L27
debug: Terminated block@3: // for_footer_L27
debug: Sealing block@4: // for_increment_L27
debug: Terminated block@4: // for_increment_L27
debug: Sealing block@1: // for_header_L27
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L23
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L27
debug: Sealing block@2: // for_body_L27
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L27
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let range_index%0#3: uint64 = undefined while trying to resolve 'range_index%0' in block@1: // for_header_L27
debug: Added range_index%0#0 to Phi node: let range_index%0#3: uint64 = φ(range_index%0#0 <- block@0) in block@0: // L23
debug: Added range_index%0#2 to Phi node: let range_index%0#3: uint64 = φ(range_index%0#0 <- block@0, range_index%0#2 <- block@4) in block@4: // for_increment_L27
debug: Added range_index%0#3 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@1) in block@1: // for_header_L27
debug: Replacing trivial Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@1) (range_index%0#1) with range_index%0#3
debug: Deleting Phi assignment: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@1)
debug: Replaced trivial Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@1) (range_index%0#1) with range_index%0#3 in current definition for 2 blocks
debug: Created Phi assignment: let values#2: bytes = undefined while trying to resolve 'values' in block@1: // for_header_L27
debug: Added values#0 to Phi node: let values#2: bytes = φ(values#0 <- block@0) in block@0: // L23
debug: Added values#1 to Phi node: let values#2: bytes = φ(values#0 <- block@0, values#1 <- block@4) in block@4: // for_increment_L27
debug: Added values#2 to Phi node: let values#1: bytes = φ(values#2 <- block@1) in block@1: // for_header_L27
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#2 <- block@1) (values#1) with values#2
debug: Deleting Phi assignment: let values#1: bytes = φ(values#2 <- block@1)
debug: Replacing trivial Phi node: let values#2: bytes = φ(values#0 <- block@0, values#2 <- block@4) (values#2) with values#0
debug: Deleting Phi assignment: let values#2: bytes = φ(values#0 <- block@0, values#2 <- block@4)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#2 <- block@1) (values#1) with values#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let values#2: bytes = φ(values#0 <- block@0, values#2 <- block@4) (values#2) with values#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L27
debug: Terminated block@5: // after_for_L27
debug: Sealing block@0: // L29
debug: Terminated block@0: // L29
debug: Sealing block@0: // L30
debug: Terminated block@0: // L30
debug: Sealing block@1: // for_preamble_L34
debug: Terminated block@1: // for_preamble_L34
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_header_L34
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_header_L34
debug: Terminated block@2: // for_header_L34
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L34
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@3: // for_body_L34
debug: Looking for 'range_index%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L34
debug: Created Phi assignment: let range_index%0#1: uint64 = undefined while trying to resolve 'range_index%0' in block@3: // for_body_L34
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@3: // for_body_L34
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@3: // for_body_L34
debug: Terminated block@3: // for_body_L34
debug: Sealing block@4: // for_footer_L34
debug: Terminated block@4: // for_footer_L34
debug: Sealing block@5: // for_increment_L34
debug: Terminated block@5: // for_increment_L34
debug: Sealing block@2: // for_header_L34
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) in block@1: // for_preamble_L34
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1, range_item%0#3 <- block@5) in block@5: // for_increment_L34
debug: Sealing block@3: // for_body_L34
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@2) in block@2: // for_header_L34
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@2) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@2)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@2) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let range_index%0#3: uint64 = undefined while trying to resolve 'range_index%0' in block@2: // for_header_L34
debug: Added range_index%0#0 to Phi node: let range_index%0#3: uint64 = φ(range_index%0#0 <- block@1) in block@1: // for_preamble_L34
debug: Added range_index%0#2 to Phi node: let range_index%0#3: uint64 = φ(range_index%0#0 <- block@1, range_index%0#2 <- block@5) in block@5: // for_increment_L34
debug: Added range_index%0#3 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@2) in block@2: // for_header_L34
debug: Replacing trivial Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@2) (range_index%0#1) with range_index%0#3
debug: Deleting Phi assignment: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@2)
debug: Replaced trivial Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@2) (range_index%0#1) with range_index%0#3 in current definition for 2 blocks
debug: Created Phi assignment: let values#2: bytes = undefined while trying to resolve 'values' in block@2: // for_header_L34
debug: Added values#0 to Phi node: let values#2: bytes = φ(values#0 <- block@1) in block@1: // for_preamble_L34
debug: Added values#1 to Phi node: let values#2: bytes = φ(values#0 <- block@1, values#1 <- block@5) in block@5: // for_increment_L34
debug: Added values#2 to Phi node: let values#1: bytes = φ(values#2 <- block@2) in block@2: // for_header_L34
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#2 <- block@2) (values#1) with values#2
debug: Deleting Phi assignment: let values#1: bytes = φ(values#2 <- block@2)
debug: Replacing trivial Phi node: let values#2: bytes = φ(values#0 <- block@1, values#2 <- block@5) (values#2) with values#0
debug: Deleting Phi assignment: let values#2: bytes = φ(values#0 <- block@1, values#2 <- block@5)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#2 <- block@2) (values#1) with values#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let values#2: bytes = φ(values#0 <- block@1, values#2 <- block@5) (values#2) with values#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L34
debug: Terminated block@6: // after_for_L34
debug: Sealing block@0: // L37
debug: Terminated block@0: // L37
debug: Sealing block@1: // for_preamble_L41
debug: Terminated block@1: // for_preamble_L41
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_header_L41
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_header_L41
debug: Terminated block@2: // for_header_L41
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L41
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@3: // for_body_L41
debug: Looking for 'range_index%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L41
debug: Created Phi assignment: let range_index%0#1: uint64 = undefined while trying to resolve 'range_index%0' in block@3: // for_body_L41
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@3: // for_body_L41
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@3: // for_body_L41
debug: Terminated block@3: // for_body_L41
debug: Sealing block@4: // for_footer_L41
debug: Terminated block@4: // for_footer_L41
debug: Sealing block@5: // for_increment_L41
debug: Terminated block@5: // for_increment_L41
debug: Sealing block@2: // for_header_L41
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) in block@1: // for_preamble_L41
debug: Replacing trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#1) with range_item%0#0
debug: Deleting Phi assignment: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#1) with range_item%0#0 in current definition for 1 blocks
debug: Sealing block@3: // for_body_L41
debug: Added range_item%0#0 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@2) in block@2: // for_header_L41
debug: Added range_item%0#3 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@2, range_item%0#3 <- block@5) in block@5: // for_increment_L41
debug: Added range_index%0#0 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#0 <- block@2) in block@2: // for_header_L41
debug: Added range_index%0#2 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#0 <- block@2, range_index%0#2 <- block@5) in block@5: // for_increment_L41
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@2) in block@2: // for_header_L41
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) in block@5: // for_increment_L41
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@None: // after_for_L41
debug: Terminated block@6: // after_for_L41
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@1: // for_preamble_L48
debug: Terminated block@1: // for_preamble_L48
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_header_L48
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_header_L48
debug: Terminated block@2: // for_header_L48
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L48
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@3: // for_body_L48
debug: Looking for 'range_index%0' in an unsealed block creating an incomplete Phi: block@3: // for_body_L48
debug: Created Phi assignment: let range_index%0#1: uint64 = undefined while trying to resolve 'range_index%0' in block@3: // for_body_L48
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@3: // for_body_L48
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@3: // for_body_L48
debug: Terminated block@3: // for_body_L48
debug: Sealing block@4: // for_footer_L48
debug: Terminated block@4: // for_footer_L48
debug: Sealing block@5: // for_increment_L48
debug: Terminated block@5: // for_increment_L48
debug: Sealing block@2: // for_header_L48
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) in block@1: // for_preamble_L48
debug: Replacing trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#1) with range_item%0#0
debug: Deleting Phi assignment: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#1) with range_item%0#0 in current definition for 1 blocks
debug: Sealing block@3: // for_body_L48
debug: Added range_item%0#0 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@2) in block@2: // for_header_L48
debug: Added range_item%0#3 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@2, range_item%0#3 <- block@5) in block@5: // for_increment_L48
debug: Added range_index%0#0 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#0 <- block@2) in block@2: // for_header_L48
debug: Added range_index%0#2 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#0 <- block@2, range_index%0#2 <- block@5) in block@5: // for_increment_L48
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@2) in block@2: // for_header_L48
debug: Added values#1 to Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) in block@5: // for_increment_L48
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@2, values#1 <- block@5) (values#1) with values#0 in current definition for 3 blocks
debug: Sealing block@None: // after_for_L48
debug: Terminated block@6: // after_for_L48
debug: Sealing block@0: // L51
debug: Terminated block@0: // L51
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L54
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L54
debug: Terminated block@1: // for_header_L54
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L54
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L54
debug: Terminated block@2: // for_body_L54
debug: Sealing block@3: // for_footer_L54
debug: Terminated block@3: // for_footer_L54
debug: Sealing block@4: // for_increment_L54
debug: Terminated block@4: // for_increment_L54
debug: Sealing block@1: // for_header_L54
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L51
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L54
debug: Sealing block@2: // for_body_L54
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L54
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Sealing block@None: // after_for_L54
debug: Terminated block@5: // after_for_L54
debug: Sealing block@6: // for_preamble_L56
debug: Terminated block@6: // for_preamble_L56
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@7: // for_header_L56
debug: Created Phi assignment: let range_item%1#1: uint64 = undefined while trying to resolve 'range_item%1' in block@7: // for_header_L56
debug: Terminated block@7: // for_header_L56
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@8: // for_body_L56
debug: Created Phi assignment: let range_item%1#2: uint64 = undefined while trying to resolve 'range_item%1' in block@8: // for_body_L56
debug: Terminated block@8: // for_body_L56
debug: Sealing block@9: // for_footer_L56
debug: Terminated block@9: // for_footer_L56
debug: Sealing block@10: // for_increment_L56
debug: Terminated block@10: // for_increment_L56
debug: Sealing block@7: // for_header_L56
debug: Added range_item%1#0 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@6) in block@6: // for_preamble_L56
debug: Replacing trivial Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@6) (range_item%1#1) with range_item%1#0
debug: Deleting Phi assignment: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@6)
debug: Replaced trivial Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@6) (range_item%1#1) with range_item%1#0 in current definition for 1 blocks
debug: Sealing block@8: // for_body_L56
debug: Added range_item%1#0 to Phi node: let range_item%1#2: uint64 = φ(range_item%1#0 <- block@7) in block@7: // for_header_L56
debug: Added range_item%1#3 to Phi node: let range_item%1#2: uint64 = φ(range_item%1#0 <- block@7, range_item%1#3 <- block@10) in block@10: // for_increment_L56
debug: Sealing block@None: // after_for_L56
debug: Terminated block@11: // after_for_L56
debug: Looking for 'range_item%2' in an unsealed block creating an incomplete Phi: block@12: // for_header_L58
debug: Created Phi assignment: let range_item%2#1: uint64 = undefined while trying to resolve 'range_item%2' in block@12: // for_header_L58
debug: Terminated block@12: // for_header_L58
debug: Looking for 'range_item%2' in an unsealed block creating an incomplete Phi: block@13: // for_body_L58
debug: Created Phi assignment: let range_item%2#2: uint64 = undefined while trying to resolve 'range_item%2' in block@13: // for_body_L58
debug: Looking for 'range_index%0' in an unsealed block creating an incomplete Phi: block@13: // for_body_L58
debug: Created Phi assignment: let range_index%0#1: uint64 = undefined while trying to resolve 'range_index%0' in block@13: // for_body_L58
debug: Terminated block@13: // for_body_L58
debug: Sealing block@14: // for_footer_L58
debug: Terminated block@14: // for_footer_L58
debug: Sealing block@15: // for_increment_L58
debug: Terminated block@15: // for_increment_L58
debug: Sealing block@12: // for_header_L58
debug: Added range_item%2#0 to Phi node: let range_item%2#1: uint64 = φ(range_item%2#0 <- block@11) in block@11: // after_for_L56
debug: Added range_item%2#3 to Phi node: let range_item%2#1: uint64 = φ(range_item%2#0 <- block@11, range_item%2#3 <- block@15) in block@15: // for_increment_L58
debug: Sealing block@13: // for_body_L58
debug: Added range_item%2#1 to Phi node: let range_item%2#2: uint64 = φ(range_item%2#1 <- block@12) in block@12: // for_header_L58
debug: Replacing trivial Phi node: let range_item%2#2: uint64 = φ(range_item%2#1 <- block@12) (range_item%2#2) with range_item%2#1
debug: Deleting Phi assignment: let range_item%2#2: uint64 = φ(range_item%2#1 <- block@12)
debug: Replaced trivial Phi node: let range_item%2#2: uint64 = φ(range_item%2#1 <- block@12) (range_item%2#2) with range_item%2#1 in current definition for 2 blocks
debug: Created Phi assignment: let range_index%0#3: uint64 = undefined while trying to resolve 'range_index%0' in block@12: // for_header_L58
debug: Added range_index%0#0 to Phi node: let range_index%0#3: uint64 = φ(range_index%0#0 <- block@11) in block@11: // after_for_L56
debug: Added range_index%0#2 to Phi node: let range_index%0#3: uint64 = φ(range_index%0#0 <- block@11, range_index%0#2 <- block@15) in block@15: // for_increment_L58
debug: Added range_index%0#3 to Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@12) in block@12: // for_header_L58
debug: Replacing trivial Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@12) (range_index%0#1) with range_index%0#3
debug: Deleting Phi assignment: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@12)
debug: Replaced trivial Phi node: let range_index%0#1: uint64 = φ(range_index%0#3 <- block@12) (range_index%0#1) with range_index%0#3 in current definition for 2 blocks
debug: Sealing block@None: // after_for_L58
debug: Terminated block@16: // after_for_L58
debug: Sealing block@17: // for_preamble_L60
debug: Terminated block@17: // for_preamble_L60
debug: Looking for 'range_item%3' in an unsealed block creating an incomplete Phi: block@18: // for_header_L60
debug: Created Phi assignment: let range_item%3#1: uint64 = undefined while trying to resolve 'range_item%3' in block@18: // for_header_L60
debug: Terminated block@18: // for_header_L60
debug: Looking for 'range_item%3' in an unsealed block creating an incomplete Phi: block@19: // for_body_L60
debug: Created Phi assignment: let range_item%3#2: uint64 = undefined while trying to resolve 'range_item%3' in block@19: // for_body_L60
debug: Looking for 'range_index%1' in an unsealed block creating an incomplete Phi: block@19: // for_body_L60
debug: Created Phi assignment: let range_index%1#1: uint64 = undefined while trying to resolve 'range_index%1' in block@19: // for_body_L60
debug: Terminated block@19: // for_body_L60
debug: Sealing block@20: // for_footer_L60
debug: Terminated block@20: // for_footer_L60
debug: Sealing block@21: // for_increment_L60
debug: Terminated block@21: // for_increment_L60
debug: Sealing block@18: // for_header_L60
debug: Added range_item%3#0 to Phi node: let range_item%3#1: uint64 = φ(range_item%3#0 <- block@17) in block@17: // for_preamble_L60
debug: Added range_item%3#3 to Phi node: let range_item%3#1: uint64 = φ(range_item%3#0 <- block@17, range_item%3#3 <- block@21) in block@21: // for_increment_L60
debug: Sealing block@19: // for_body_L60
debug: Added range_item%3#1 to Phi node: let range_item%3#2: uint64 = φ(range_item%3#1 <- block@18) in block@18: // for_header_L60
debug: Replacing trivial Phi node: let range_item%3#2: uint64 = φ(range_item%3#1 <- block@18) (range_item%3#2) with range_item%3#1
debug: Deleting Phi assignment: let range_item%3#2: uint64 = φ(range_item%3#1 <- block@18)
debug: Replaced trivial Phi node: let range_item%3#2: uint64 = φ(range_item%3#1 <- block@18) (range_item%3#2) with range_item%3#1 in current definition for 2 blocks
debug: Created Phi assignment: let range_index%1#3: uint64 = undefined while trying to resolve 'range_index%1' in block@18: // for_header_L60
debug: Added range_index%1#0 to Phi node: let range_index%1#3: uint64 = φ(range_index%1#0 <- block@17) in block@17: // for_preamble_L60
debug: Added range_index%1#2 to Phi node: let range_index%1#3: uint64 = φ(range_index%1#0 <- block@17, range_index%1#2 <- block@21) in block@21: // for_increment_L60
debug: Added range_index%1#3 to Phi node: let range_index%1#1: uint64 = φ(range_index%1#3 <- block@18) in block@18: // for_header_L60
debug: Replacing trivial Phi node: let range_index%1#1: uint64 = φ(range_index%1#3 <- block@18) (range_index%1#1) with range_index%1#3
debug: Deleting Phi assignment: let range_index%1#1: uint64 = φ(range_index%1#3 <- block@18)
debug: Replaced trivial Phi node: let range_index%1#1: uint64 = φ(range_index%1#3 <- block@18) (range_index%1#1) with range_index%1#3 in current definition for 2 blocks
debug: Sealing block@None: // after_for_L60
debug: Terminated block@22: // after_for_L60
debug: Sealing block@23: // for_preamble_L62
debug: Terminated block@23: // for_preamble_L62
debug: Looking for 'range_item%4' in an unsealed block creating an incomplete Phi: block@24: // for_header_L62
debug: Created Phi assignment: let range_item%4#1: uint64 = undefined while trying to resolve 'range_item%4' in block@24: // for_header_L62
debug: Terminated block@24: // for_header_L62
debug: Looking for 'range_item%4' in an unsealed block creating an incomplete Phi: block@25: // for_body_L62
debug: Created Phi assignment: let range_item%4#2: uint64 = undefined while trying to resolve 'range_item%4' in block@25: // for_body_L62
debug: Looking for 'range_index%2' in an unsealed block creating an incomplete Phi: block@25: // for_body_L62
debug: Created Phi assignment: let range_index%2#1: uint64 = undefined while trying to resolve 'range_index%2' in block@25: // for_body_L62
debug: Terminated block@25: // for_body_L62
debug: Sealing block@26: // for_footer_L62
debug: Terminated block@26: // for_footer_L62
debug: Sealing block@27: // for_increment_L62
debug: Terminated block@27: // for_increment_L62
debug: Sealing block@24: // for_header_L62
debug: Added range_item%4#0 to Phi node: let range_item%4#1: uint64 = φ(range_item%4#0 <- block@23) in block@23: // for_preamble_L62
debug: Replacing trivial Phi node: let range_item%4#1: uint64 = φ(range_item%4#0 <- block@23) (range_item%4#1) with range_item%4#0
debug: Deleting Phi assignment: let range_item%4#1: uint64 = φ(range_item%4#0 <- block@23)
debug: Replaced trivial Phi node: let range_item%4#1: uint64 = φ(range_item%4#0 <- block@23) (range_item%4#1) with range_item%4#0 in current definition for 1 blocks
debug: Sealing block@25: // for_body_L62
debug: Added range_item%4#0 to Phi node: let range_item%4#2: uint64 = φ(range_item%4#0 <- block@24) in block@24: // for_header_L62
debug: Added range_item%4#3 to Phi node: let range_item%4#2: uint64 = φ(range_item%4#0 <- block@24, range_item%4#3 <- block@27) in block@27: // for_increment_L62
debug: Added range_index%2#0 to Phi node: let range_index%2#1: uint64 = φ(range_index%2#0 <- block@24) in block@24: // for_header_L62
debug: Added range_index%2#2 to Phi node: let range_index%2#1: uint64 = φ(range_index%2#0 <- block@24, range_index%2#2 <- block@27) in block@27: // for_increment_L62
debug: Sealing block@None: // after_for_L62
debug: Terminated block@28: // after_for_L62
debug: Sealing block@29: // for_preamble_L64
debug: Terminated block@29: // for_preamble_L64
debug: Looking for 'range_item%5' in an unsealed block creating an incomplete Phi: block@30: // for_header_L64
debug: Created Phi assignment: let range_item%5#1: uint64 = undefined while trying to resolve 'range_item%5' in block@30: // for_header_L64
debug: Terminated block@30: // for_header_L64
debug: Looking for 'range_item%5' in an unsealed block creating an incomplete Phi: block@31: // for_body_L64
debug: Created Phi assignment: let range_item%5#2: uint64 = undefined while trying to resolve 'range_item%5' in block@31: // for_body_L64
debug: Looking for 'range_index%3' in an unsealed block creating an incomplete Phi: block@31: // for_body_L64
debug: Created Phi assignment: let range_index%3#1: uint64 = undefined while trying to resolve 'range_index%3' in block@31: // for_body_L64
debug: Terminated block@31: // for_body_L64
debug: Sealing block@32: // for_footer_L64
debug: Terminated block@32: // for_footer_L64
debug: Sealing block@33: // for_increment_L64
debug: Terminated block@33: // for_increment_L64
debug: Sealing block@30: // for_header_L64
debug: Added range_item%5#0 to Phi node: let range_item%5#1: uint64 = φ(range_item%5#0 <- block@29) in block@29: // for_preamble_L64
debug: Replacing trivial Phi node: let range_item%5#1: uint64 = φ(range_item%5#0 <- block@29) (range_item%5#1) with range_item%5#0
debug: Deleting Phi assignment: let range_item%5#1: uint64 = φ(range_item%5#0 <- block@29)
debug: Replaced trivial Phi node: let range_item%5#1: uint64 = φ(range_item%5#0 <- block@29) (range_item%5#1) with range_item%5#0 in current definition for 1 blocks
debug: Sealing block@31: // for_body_L64
debug: Added range_item%5#0 to Phi node: let range_item%5#2: uint64 = φ(range_item%5#0 <- block@30) in block@30: // for_header_L64
debug: Added range_item%5#3 to Phi node: let range_item%5#2: uint64 = φ(range_item%5#0 <- block@30, range_item%5#3 <- block@33) in block@33: // for_increment_L64
debug: Added range_index%3#0 to Phi node: let range_index%3#1: uint64 = φ(range_index%3#0 <- block@30) in block@30: // for_header_L64
debug: Added range_index%3#2 to Phi node: let range_index%3#1: uint64 = φ(range_index%3#0 <- block@30, range_index%3#2 <- block@33) in block@33: // for_increment_L64
debug: Sealing block@None: // after_for_L64
debug: Terminated block@34: // after_for_L64
debug: Sealing block@0: // L67
debug: Terminated block@0: // L67
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L71
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L71
debug: Terminated block@1: // for_header_L71
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L71
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L71
debug: Looking for 'values' in an unsealed block creating an incomplete Phi: block@2: // for_body_L71
debug: Created Phi assignment: let values#1: bytes = undefined while trying to resolve 'values' in block@2: // for_body_L71
debug: Terminated block@2: // for_body_L71
debug: Sealing block@1: // for_header_L71
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L67
debug: Replacing trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) (range_item%0#1) with range_item%0#0
debug: Deleting Phi assignment: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0)
debug: Replaced trivial Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) (range_item%0#1) with range_item%0#0 in current definition for 1 blocks
debug: Sealing block@2: // for_body_L71
debug: Added range_item%0#0 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@1) in block@1: // for_header_L71
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#2) with range_item%0#0
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#0 <- block@1) (range_item%0#2) with range_item%0#0 in current definition for 1 blocks
debug: Added values#0 to Phi node: let values#1: bytes = φ(values#0 <- block@1) in block@1: // for_header_L71
debug: Replacing trivial Phi node: let values#1: bytes = φ(values#0 <- block@1) (values#1) with values#0
debug: Deleting Phi assignment: let values#1: bytes = φ(values#0 <- block@1)
debug: Replaced trivial Phi node: let values#1: bytes = φ(values#0 <- block@1) (values#1) with values#0 in current definition for 1 blocks
debug: Sealing block@None: // after_for_L71
debug: Terminated block@3: // after_for_L71
debug: Sealing block@0: // L7
debug: Terminated block@0: // L7
debug: Sealing block@0: // L26
debug: Terminated block@0: // L26
debug: Output IR to iteration/out/IndexableIterationTest.ssa.ir
info: Optimizing test_cases.iteration.iterate_indexable.IndexableIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L12 with block@2: // for_body_L12 in block@1: // for_header_L12
debug: Merged linear block@3: // for_footer_L12 into block@2: // for_body_L12
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Replacing {reverse_index_internal%0#0} with bytes_length%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L18 with block@2: // for_body_L18 in block@1: // for_header_L18
debug: Merged linear block@3: // for_footer_L18 into block@2: // for_body_L18
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: item_index_internal%0#1, idx#0
debug: Replacing {item_index_internal%0#1} with idx#0 made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L24 with block@2: // for_body_L24 in block@1: // for_header_L24
debug: Merged linear block@3: // for_footer_L24 into block@2: // for_body_L24
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Replacing {reverse_index_internal%0#0} with bytes_length%0#0 made 1 modifications
debug: Found equivalence set: reverse_index_internal%0#2, idx#0
debug: Replacing {reverse_index_internal%0#2} with idx#0 made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L30 with block@2: // for_body_L30 in block@1: // for_header_L30
debug: Merged linear block@3: // for_footer_L30 into block@2: // for_body_L30
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Replacing {reverse_index_internal%0#0} with bytes_length%0#0 made 1 modifications
debug: Found equivalence set: item_index_internal%0#1, idx#0
debug: Replacing {item_index_internal%0#1} with idx#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L36 with block@2: // for_body_L36 in block@1: // for_header_L36
debug: Merged linear block@3: // for_footer_L36 into block@2: // for_body_L36
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Replacing {reverse_index_internal%0#0} with bytes_length%0#0 made 1 modifications
debug: Found equivalence set: reverse_index_internal%0#2, idx#0
debug: Replacing {reverse_index_internal%0#2} with idx#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L42 with block@2: // for_body_L42 in block@1: // for_header_L42
debug: Merged linear block@3: // for_footer_L42 into block@2: // for_body_L42
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: bytes_length%1#0, reverse_index_internal%1#0
debug: Replacing {reverse_index_internal%1#0} with bytes_length%1#0 made 1 modifications
debug: Found equivalence set: bytes_length%2#0, reverse_index_internal%2#0
debug: Found equivalence set: bytes_length%3#0, reverse_index_internal%3#0
debug: Replacing {reverse_index_internal%3#0} with bytes_length%3#0 made 1 modifications
debug: Found equivalence set: item_index_internal%2#1, idx#0
debug: Replacing {item_index_internal%2#1} with idx#0 made 4 modifications
debug: Found equivalence set: bytes_length%4#0, reverse_index_internal%4#0
debug: Replacing {reverse_index_internal%4#0} with bytes_length%4#0 made 1 modifications
debug: Found equivalence set: reverse_index_internal%3#2, idx#1
debug: Replacing {reverse_index_internal%3#2} with idx#1 made 2 modifications
debug: Found equivalence set: bytes_length%5#0, reverse_index_internal%5#0
debug: Replacing {reverse_index_internal%5#0} with bytes_length%5#0 made 1 modifications
debug: Found equivalence set: item_index_internal%4#1, idx#2
debug: Replacing {item_index_internal%4#1} with idx#2 made 3 modifications
debug: Found equivalence set: reverse_index_internal%5#2, idx#3
debug: Replacing {reverse_index_internal%5#2} with idx#3 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Simplified (len 0x) to 0u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L48 with block@2: // for_body_L48 in block@1: // for_header_L48
debug: Merged linear block@3: // for_footer_L48 into block@2: // for_body_L48
debug: Replaced predecessor block@7: // for_footer_L50 with block@6: // for_body_L50 in block@5: // for_header_L50
debug: Merged linear block@7: // for_footer_L50 into block@6: // for_body_L50
debug: Replaced predecessor block@11: // for_footer_L52 with block@10: // for_body_L52 in block@9: // for_header_L52
debug: Merged linear block@11: // for_footer_L52 into block@10: // for_body_L52
debug: Replaced predecessor block@15: // for_footer_L54 with block@14: // for_body_L54 in block@13: // for_header_L54
debug: Merged linear block@15: // for_footer_L54 into block@14: // for_body_L54
debug: Replaced predecessor block@19: // for_footer_L56 with block@18: // for_body_L56 in block@17: // for_header_L56
debug: Merged linear block@19: // for_footer_L56 into block@18: // for_body_L56
debug: Replaced predecessor block@23: // for_footer_L58 with block@22: // for_body_L58 in block@21: // for_header_L58
debug: Merged linear block@23: // for_footer_L58 into block@22: // for_body_L58
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x616263) to 3u
debug: Simplified (extract3 0x616263 0u 1u) to 0x61
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%0#0
debug: Removing unused variable continue_looping%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_header_L64 with block@0: // L61 in block@3: // after_for_L64
debug: Replaced predecessor block@1: // for_header_L64 with block@0: // L61 in block@2: // for_body_L64
debug: Merged linear block@1: // for_header_L64 into block@0: // L61
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/IndexableIterationTest.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_length%0#0
debug: Removing unused variable bytes_length%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_length%0#0
debug: Removing unused variable b#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L61 from goto 3u ? block@2 : block@3 to goto block@2
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_body_L64 with block@0: // L61 in block@3: // after_for_L64
debug: Merged linear block@2: // for_body_L64 into block@0: // L61
debug: Merged linear block@3: // after_for_L64 into block@0: // L61
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/IndexableIterationTest.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 3, ending loop
debug: Removing Phis from test_cases.iteration.base.IterationTestBase.approval_program
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Removing Phis from test_cases.iteration.base.IterationTestBase._log_with_index
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: Removing Phis from test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Removing Phis from test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 9 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing reverse_index_internal%0#1 with [reverse_index_internal%0#4, reverse_index_internal%0#2]
debug: Coalescing resulted in 14 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing resulted in 5 replacement/s
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing reverse_index_internal%0#1 with [reverse_index_internal%0#2]
debug: Coalescing resulted in 12 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing reverse_index_internal%0#1 with [reverse_index_internal%0#4, reverse_index_internal%0#2]
debug: Coalescing resulted in 11 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing reverse_index_internal%0#1 with [reverse_index_internal%0#2]
debug: Coalescing resulted in 11 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty using strategy RootOperandGrouping
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing i#0 with [i#1, i#2, i#3, i#4, i#5]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing reverse_index_internal%1#1 with [reverse_index_internal%1#4, reverse_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#2]
debug: Coalescing idx#0 with [idx#4, idx#1, idx#6, idx#2, idx#3]
debug: Coalescing item_index_internal%3#0 with [item_index_internal%3#5, item_index_internal%3#1, item_index_internal%3#2]
debug: Coalescing reverse_index_internal%3#1 with [reverse_index_internal%3#2]
debug: Coalescing item_index_internal%4#0 with [item_index_internal%4#2]
debug: Coalescing reverse_index_internal%4#1 with [reverse_index_internal%4#4, reverse_index_internal%4#2]
debug: Coalescing item_index_internal%5#0 with [item_index_internal%5#5, item_index_internal%5#1, item_index_internal%5#2]
debug: Coalescing reverse_index_internal%5#1 with [reverse_index_internal%5#2]
debug: Coalescing resulted in 83 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=None, bytes_length%0#0=bytes_length%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=bytes_length%0#0}
debug: ready: reverse_index_internal%0#1
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * avail reverse_index_internal%0#1
debug: * avail bytes_length%0#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=None, bytes_length%0#0=bytes_length%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=bytes_length%0#0}
debug: ready: reverse_index_internal%0#1
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * avail reverse_index_internal%0#1
debug: * avail bytes_length%0#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=None, idx#0=idx#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=idx#0}
debug: ready: reverse_index_internal%0#1
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * avail reverse_index_internal%0#1
debug: * avail idx#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: loc: {idx#0=None, reverse_index_internal%0#1=None, item_index_internal%0#0=item_index_internal%0#0, bytes_length%0#0=bytes_length%0#0}
debug: pred: {idx#0=item_index_internal%0#0, reverse_index_internal%0#1=bytes_length%0#0}
debug: ready: idx#0, reverse_index_internal%0#1
debug: to_do: idx#0, reverse_index_internal%0#1
debug: * avail reverse_index_internal%0#1
debug: * avail bytes_length%0#0
debug: * avail idx#0
debug: * avail item_index_internal%0#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: pred: {idx#0=idx#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: ready: 
debug: to_do: idx#0, reverse_index_internal%0#1
debug: * to_do reverse_index_internal%0#1
debug: * to_do idx#0
debug: loc: {idx#0=None, reverse_index_internal%0#1=reverse_index_internal%0#1, item_index_internal%0#0=item_index_internal%0#0}
debug: pred: {idx#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: ready: idx#0
debug: to_do: idx#0, reverse_index_internal%0#1
debug: * avail idx#0
debug: * avail item_index_internal%0#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do idx#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=None, bytes_length%0#0=bytes_length%0#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=bytes_length%0#0}
debug: ready: reverse_index_internal%0#1
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * avail reverse_index_internal%0#1
debug: * avail bytes_length%0#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=reverse_index_internal%0#1}
debug: ready: 
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=None, idx#0=idx#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, reverse_index_internal%0#1=idx#0}
debug: ready: reverse_index_internal%0#1
debug: to_do: item_index_internal%0#0, reverse_index_internal%0#1
debug: * avail reverse_index_internal%0#1
debug: * avail idx#0
debug: * to_do reverse_index_internal%0#1
debug: * to_do item_index_internal%0#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, reverse_index_internal%1#1=None, bytes_length%1#0=bytes_length%1#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, reverse_index_internal%1#1=bytes_length%1#0}
debug: ready: reverse_index_internal%1#1
debug: to_do: item_index_internal%1#0, reverse_index_internal%1#1
debug: * avail reverse_index_internal%1#1
debug: * avail bytes_length%1#0
debug: * to_do reverse_index_internal%1#1
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, reverse_index_internal%1#1=reverse_index_internal%1#1}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, reverse_index_internal%1#1=reverse_index_internal%1#1}
debug: ready: 
debug: to_do: item_index_internal%1#0, reverse_index_internal%1#1
debug: * to_do reverse_index_internal%1#1
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, reverse_index_internal%1#1=reverse_index_internal%1#1}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, reverse_index_internal%1#1=reverse_index_internal%1#1}
debug: ready: 
debug: to_do: item_index_internal%1#0, reverse_index_internal%1#1
debug: * to_do reverse_index_internal%1#1
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=None, bytes_length%3#0=bytes_length%3#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=bytes_length%3#0}
debug: ready: reverse_index_internal%3#1
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#1
debug: * avail reverse_index_internal%3#1
debug: * avail bytes_length%3#0
debug: * to_do reverse_index_internal%3#1
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=reverse_index_internal%3#1}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=reverse_index_internal%3#1}
debug: ready: 
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#1
debug: * to_do reverse_index_internal%3#1
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=None, idx#0=idx#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, reverse_index_internal%3#1=idx#0}
debug: ready: reverse_index_internal%3#1
debug: to_do: item_index_internal%3#0, reverse_index_internal%3#1
debug: * avail reverse_index_internal%3#1
debug: * avail idx#0
debug: * to_do reverse_index_internal%3#1
debug: * to_do item_index_internal%3#0
debug: loc: {idx#0=None, reverse_index_internal%4#1=None, item_index_internal%4#0=item_index_internal%4#0, bytes_length%4#0=bytes_length%4#0}
debug: pred: {idx#0=item_index_internal%4#0, reverse_index_internal%4#1=bytes_length%4#0}
debug: ready: idx#0, reverse_index_internal%4#1
debug: to_do: idx#0, reverse_index_internal%4#1
debug: * avail reverse_index_internal%4#1
debug: * avail bytes_length%4#0
debug: * avail idx#0
debug: * avail item_index_internal%4#0
debug: * to_do reverse_index_internal%4#1
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, reverse_index_internal%4#1=reverse_index_internal%4#1}
debug: pred: {idx#0=idx#0, reverse_index_internal%4#1=reverse_index_internal%4#1}
debug: ready: 
debug: to_do: idx#0, reverse_index_internal%4#1
debug: * to_do reverse_index_internal%4#1
debug: * to_do idx#0
debug: loc: {idx#0=None, reverse_index_internal%4#1=reverse_index_internal%4#1, item_index_internal%4#0=item_index_internal%4#0}
debug: pred: {idx#0=item_index_internal%4#0, reverse_index_internal%4#1=reverse_index_internal%4#1}
debug: ready: idx#0
debug: to_do: idx#0, reverse_index_internal%4#1
debug: * avail idx#0
debug: * avail item_index_internal%4#0
debug: * to_do reverse_index_internal%4#1
debug: * to_do idx#0
debug: loc: {item_index_internal%5#0=item_index_internal%5#0, reverse_index_internal%5#1=None, bytes_length%5#0=bytes_length%5#0}
debug: pred: {item_index_internal%5#0=item_index_internal%5#0, reverse_index_internal%5#1=bytes_length%5#0}
debug: ready: reverse_index_internal%5#1
debug: to_do: item_index_internal%5#0, reverse_index_internal%5#1
debug: * avail reverse_index_internal%5#1
debug: * avail bytes_length%5#0
debug: * to_do reverse_index_internal%5#1
debug: * to_do item_index_internal%5#0
debug: loc: {item_index_internal%5#0=item_index_internal%5#0, reverse_index_internal%5#1=reverse_index_internal%5#1}
debug: pred: {item_index_internal%5#0=item_index_internal%5#0, reverse_index_internal%5#1=reverse_index_internal%5#1}
debug: ready: 
debug: to_do: item_index_internal%5#0, reverse_index_internal%5#1
debug: * to_do reverse_index_internal%5#1
debug: * to_do item_index_internal%5#0
debug: loc: {item_index_internal%5#0=item_index_internal%5#0, reverse_index_internal%5#1=None, idx#0=idx#0}
debug: pred: {item_index_internal%5#0=item_index_internal%5#0, reverse_index_internal%5#1=idx#0}
debug: ready: reverse_index_internal%5#1
debug: to_do: item_index_internal%5#0, reverse_index_internal%5#1
debug: * avail reverse_index_internal%5#1
debug: * avail idx#0
debug: * to_do reverse_index_internal%5#1
debug: * to_do item_index_internal%5#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_indexable.IndexableIterationTest.test_break
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to iteration/out/IndexableIterationTest.destructured.ir
debug: Inserted test_forwards_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_forwards_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[4]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[6]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[2]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[9]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards f-stack on first store: ['item_index_internal%0#0']
debug: Inserted test_reversed_block@0.ops[1]: 'store bytes_length%0#0 to l-stack (copy)'
debug: Replaced test_reversed_block@0.ops[5]: 'load bytes_length%0#0' with 'load bytes_length%0#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_reversed_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@2.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reversed_for_body@2.ops[10]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@2.ops[3]: 'store reverse_index_internal%0#1 to l-stack (copy)'
debug: Replaced test_reversed_for_body@2.ops[6]: 'load reverse_index_internal%0#1' with 'load reverse_index_internal%0#1 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reversed f-stack on first store: ['item_index_internal%0#0', 'reverse_index_internal%0#1']
debug: Inserted test_forwards_with_forwards_index_block@0.ops[1]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_block@0.ops[3]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[11]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[13]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[4]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[7]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[10]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[2]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[7]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_forwards_index f-stack on first store: ['idx#0']
debug: Inserted _log_with_index_block@0.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[13]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[15]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[18]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[20]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_block@0.ops[1]: 'store bytes_length%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_block@0.ops[5]: 'load bytes_length%0#0' with 'load bytes_length%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[11]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[3]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[11]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[7]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[15]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@2.ops[13]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@2.ops[20]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_forwards_with_reverse_index f-stack on first store: ['item_index_internal%0#0', 'reverse_index_internal%0#1']
debug: Inserted test_reverse_with_forwards_index_block@0.ops[1]: 'store bytes_length%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_block@0.ops[5]: 'load bytes_length%0#0' with 'load bytes_length%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_block@0.ops[4]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_block@0.ops[8]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[15]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[17]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[3]: 'store reverse_index_internal%0#1 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[6]: 'load reverse_index_internal%0#1' with 'load reverse_index_internal%0#1 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[9]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[12]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@2.ops[12]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@2.ops[15]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_forwards_index f-stack on first store: ['reverse_index_internal%0#1', 'idx#0']
debug: Inserted test_reverse_with_reverse_index_block@0.ops[1]: 'store bytes_length%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_block@0.ops[5]: 'load bytes_length%0#0' with 'load bytes_length%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[3]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[6]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[9]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[12]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[7]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[12]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@2.ops[13]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@2.ops[20]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_reverse_with_reverse_index f-stack on first store: ['item_index_internal%0#0', 'reverse_index_internal%0#1']
debug: Inserted test_empty_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@2.ops[4]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@2.ops[6]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@2.ops[2]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@2.ops[9]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@4.ops[1]: 'store bytes_length%1#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@4.ops[5]: 'load bytes_length%1#0' with 'load bytes_length%1#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@5.ops[3]: 'store continue_looping%1#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@5.ops[5]: 'load continue_looping%1#0' with 'load continue_looping%1#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@6.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@6.ops[10]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@6.ops[3]: 'store reverse_index_internal%1#1 to l-stack (copy)'
debug: Replaced test_empty_for_body@6.ops[6]: 'load reverse_index_internal%1#1' with 'load reverse_index_internal%1#1 from l-stack (no copy)'
debug: Inserted test_empty_after_for@8.ops[1]: 'store item_index_internal%2#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@8.ops[3]: 'load item_index_internal%2#0' with 'load item_index_internal%2#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@9.ops[3]: 'store continue_looping%2#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@9.ops[5]: 'load continue_looping%2#0' with 'load continue_looping%2#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@10.ops[11]: 'store item_index_internal%2#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@10.ops[13]: 'load item_index_internal%2#0' with 'load item_index_internal%2#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@10.ops[4]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@10.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@10.ops[7]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@10.ops[10]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@10.ops[2]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@10.ops[7]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@12.ops[1]: 'store bytes_length%3#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@12.ops[5]: 'load bytes_length%3#0' with 'load bytes_length%3#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@13.ops[3]: 'store continue_looping%3#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@13.ops[5]: 'load continue_looping%3#0' with 'load continue_looping%3#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@14.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@14.ops[11]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@14.ops[3]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@14.ops[11]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@14.ops[7]: 'store item_index_internal%3#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@14.ops[15]: 'load item_index_internal%3#0' with 'load item_index_internal%3#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@14.ops[13]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@14.ops[20]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@16.ops[1]: 'store bytes_length%4#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@16.ops[5]: 'load bytes_length%4#0' with 'load bytes_length%4#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@16.ops[4]: 'store item_index_internal%4#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@16.ops[8]: 'load item_index_internal%4#0' with 'load item_index_internal%4#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@17.ops[3]: 'store continue_looping%4#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@17.ops[5]: 'load continue_looping%4#0' with 'load continue_looping%4#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@18.ops[15]: 'store item_index_internal%4#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@18.ops[17]: 'load item_index_internal%4#0' with 'load item_index_internal%4#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@18.ops[3]: 'store reverse_index_internal%4#1 to l-stack (copy)'
debug: Replaced test_empty_for_body@18.ops[6]: 'load reverse_index_internal%4#1' with 'load reverse_index_internal%4#1 from l-stack (no copy)'
debug: Inserted test_empty_for_body@18.ops[9]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@18.ops[12]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@18.ops[12]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@18.ops[15]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@20.ops[1]: 'store bytes_length%5#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@20.ops[5]: 'load bytes_length%5#0' with 'load bytes_length%5#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@21.ops[3]: 'store continue_looping%5#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@21.ops[5]: 'load continue_looping%5#0' with 'load continue_looping%5#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@22.ops[3]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@22.ops[6]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@22.ops[9]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@22.ops[12]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@22.ops[7]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@22.ops[12]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@22.ops[13]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@22.ops[20]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Found 12 edge set/s for test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty f-stack entry: ['idx#0', 'item_index_internal%1#0', 'item_index_internal%3#0', 'item_index_internal%5#0', 'reverse_index_internal%1#1', 'reverse_index_internal%3#1', 'reverse_index_internal%4#1', 'reverse_index_internal%5#1']
debug: test_cases.iteration.iterate_indexable.IndexableIterationTest.test_empty f-stack on first store: ['item_index_internal%0#0']
debug: Output IR to iteration/out/TupleIterationTest.ssa.ir
info: Optimizing test_cases.iteration.iterate_tuple.TupleIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L12 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return 
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L12 with block@1: // for_body_L12 in block@3: // for_header_1_L12
debug: Replaced predecessor block@2: // for_footer_L12 with block@1: // for_body_L12 in block@4: // for_header_2_L12
debug: Merged linear block@2: // for_footer_L12 into block@1: // for_body_L12
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L12
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L18 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return 
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L18 with block@1: // for_body_L18 in block@3: // for_header_1_L18
debug: Replaced predecessor block@2: // for_footer_L18 with block@1: // for_body_L18 in block@4: // for_header_2_L18
debug: Merged linear block@2: // for_footer_L18 into block@1: // for_body_L18
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L18
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L24 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return 
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L24 with block@1: // for_body_L24 in block@3: // for_header_1_L24
debug: Replaced predecessor block@2: // for_footer_L24 with block@1: // for_body_L24 in block@4: // for_header_2_L24
debug: Merged linear block@2: // for_footer_L24 into block@1: // for_body_L24
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L24
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L30 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return 
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L30 with block@1: // for_body_L30 in block@3: // for_header_1_L30
debug: Replaced predecessor block@2: // for_footer_L30 with block@1: // for_body_L30 in block@4: // for_header_2_L30
debug: Merged linear block@2: // for_footer_L30 into block@1: // for_body_L30
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L30
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L36 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return 
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L36 with block@1: // for_body_L36 in block@3: // for_header_1_L36
debug: Replaced predecessor block@2: // for_footer_L36 with block@1: // for_body_L36 in block@4: // for_header_2_L36
debug: Merged linear block@2: // for_footer_L36 into block@1: // for_body_L36
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L36
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L42 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return 
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L42 with block@1: // for_body_L42 in block@3: // for_header_1_L42
debug: Replaced predecessor block@2: // for_footer_L42 with block@1: // for_body_L42 in block@4: // for_header_2_L42
debug: Merged linear block@2: // for_footer_L42 into block@1: // for_body_L42
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L42
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable loop_counter%0#0
debug: Removing unused variable x#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_body_L70 with block@0: // L67 in block@2: // after_for_L70
debug: Merged linear block@1: // for_body_L70 into block@0: // L67
debug: Merged linear block@2: // after_for_L70 into block@0: // L67
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/TupleIterationTest.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 2, ending loop
debug: Removing Phis from test_cases.iteration.base.IterationTestBase.approval_program
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Removing Phis from test_cases.iteration.base.IterationTestBase._log_with_index
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Removing Phis from test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Removing Phis from test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing resulted in 20 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing resulted in 20 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#7, idx#1, idx#2, idx#3]
debug: Coalescing resulted in 30 replacement/s
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#7, idx#1, idx#2, idx#3]
debug: Coalescing resulted in 30 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#7, idx#1, idx#2, idx#3]
debug: Coalescing resulted in 30 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing i#0 with [i#7, i#1, i#2, i#3]
debug: Coalescing idx#0 with [idx#7, idx#1, idx#2, idx#3]
debug: Coalescing resulted in 30 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_tuple.TupleIterationTest.test_break using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: pred: {idx#0=idx#0, i#0=i#0, loop_counter%0#0=loop_counter%0#0}
debug: ready: 
debug: to_do: idx#0, i#0, loop_counter%0#0
debug: * to_do loop_counter%0#0
debug: * to_do i#0
debug: * to_do idx#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_empty
debug: Sequentializing parallel copies in test_cases.iteration.iterate_tuple.TupleIterationTest.test_break
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to iteration/out/TupleIterationTest.destructured.ir
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards
debug: Allocated 2 variable/s to x-stack: i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_block@0 -> test_forwards_for_body@1: i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_for_header_1@3 -> test_forwards_for_body@1: i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_for_header_2@4 -> test_forwards_for_body@1: i#0, loop_counter%0#0
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reversed
debug: Allocated 2 variable/s to x-stack: i#0, loop_counter%0#0
debug: shared x-stack for test_reversed_block@0 -> test_reversed_for_body@1: i#0, loop_counter%0#0
debug: shared x-stack for test_reversed_for_header_1@3 -> test_reversed_for_body@1: i#0, loop_counter%0#0
debug: shared x-stack for test_reversed_for_header_2@4 -> test_reversed_for_body@1: i#0, loop_counter%0#0
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_forwards_index
debug: Allocated 3 variable/s to x-stack: i#0, idx#0, loop_counter%0#0
debug: shared x-stack for test_forwards_with_forwards_index_block@0 -> test_forwards_with_forwards_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_with_forwards_index_for_header_1@3 -> test_forwards_with_forwards_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_with_forwards_index_for_header_2@4 -> test_forwards_with_forwards_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: Inserted _log_with_index_block@0.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[13]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[15]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[18]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[20]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_forwards_with_reverse_index
debug: Allocated 3 variable/s to x-stack: i#0, idx#0, loop_counter%0#0
debug: shared x-stack for test_forwards_with_reverse_index_block@0 -> test_forwards_with_reverse_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_with_reverse_index_for_header_1@3 -> test_forwards_with_reverse_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_forwards_with_reverse_index_for_header_2@4 -> test_forwards_with_reverse_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_forwards_index
debug: Allocated 3 variable/s to x-stack: i#0, idx#0, loop_counter%0#0
debug: shared x-stack for test_reverse_with_forwards_index_block@0 -> test_reverse_with_forwards_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_reverse_with_forwards_index_for_header_1@3 -> test_reverse_with_forwards_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_reverse_with_forwards_index_for_header_2@4 -> test_reverse_with_forwards_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: Found 2 edge set/s for test_cases.iteration.iterate_tuple.TupleIterationTest.test_reverse_with_reverse_index
debug: Allocated 3 variable/s to x-stack: i#0, idx#0, loop_counter%0#0
debug: shared x-stack for test_reverse_with_reverse_index_block@0 -> test_reverse_with_reverse_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_reverse_with_reverse_index_for_header_1@3 -> test_reverse_with_reverse_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: shared x-stack for test_reverse_with_reverse_index_for_header_2@4 -> test_reverse_with_reverse_index_for_body@1: idx#0, i#0, loop_counter%0#0
debug: Output IR to iteration/out/URangeIterationTest.ssa.ir
info: Optimizing test_cases.iteration.iterate_urange.URangeIterationTest at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: range_item%0#1, i#0
debug: Replacing {range_item%0#1} with i#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L13 with block@2: // for_body_L13 in block@4: // for_increment_L13
debug: Merged linear block@3: // for_footer_L13 into block@2: // for_body_L13
debug: Replaced predecessor block@4: // for_increment_L13 with block@2: // for_body_L13 in block@1: // for_header_L13
debug: Merged linear block@4: // for_increment_L13 into block@2: // for_body_L13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: start%0#0, range_item%0#0
debug: Replacing {range_item%0#0} with start%0#0 made 2 modifications
debug: Found equivalence set: range_item%0#2, i#0
debug: Replacing {range_item%0#2} with i#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable stop%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_header_L20 with block@1: // for_preamble_L20 in block@6: // after_for_L20
debug: Replaced predecessor block@2: // for_header_L20 with block@1: // for_preamble_L20 in block@3: // for_body_L20
debug: Merged linear block@2: // for_header_L20 into block@1: // for_preamble_L20
debug: Replaced predecessor block@4: // for_footer_L20 with block@3: // for_body_L20 in block@6: // after_for_L20
debug: Replaced predecessor block@4: // for_footer_L20 with block@3: // for_body_L20 in block@5: // for_increment_L20
debug: Merged linear block@4: // for_footer_L20 into block@3: // for_body_L20
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: range_item%0#1, i#0
debug: Replacing {range_item%0#1} with i#0 made 3 modifications
debug: Found equivalence set: range_index%0#3, idx#0
debug: Replacing {range_index%0#3} with idx#0 made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L27 with block@2: // for_body_L27 in block@4: // for_increment_L27
debug: Merged linear block@3: // for_footer_L27 into block@2: // for_body_L27
debug: Replaced predecessor block@4: // for_increment_L27 with block@2: // for_body_L27 in block@1: // for_header_L27
debug: Merged linear block@4: // for_increment_L27 into block@2: // for_body_L27
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: range_item%0#1, i#0
debug: Replacing {range_item%0#1} with i#0 made 3 modifications
debug: Found equivalence set: next_index%0#0, idx#0
debug: Replacing {next_index%0#0} with idx#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@4: // for_footer_L34 with block@3: // for_body_L34 in block@5: // for_increment_L34
debug: Merged linear block@4: // for_footer_L34 into block@3: // for_body_L34
debug: Replaced predecessor block@5: // for_increment_L34 with block@3: // for_body_L34 in block@2: // for_header_L34
debug: Merged linear block@5: // for_increment_L34 into block@3: // for_body_L34
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: start%0#0, range_item%0#0
debug: Replacing {range_item%0#0} with start%0#0 made 2 modifications
debug: Found equivalence set: range_item%0#2, i#0
debug: Replacing {range_item%0#2} with i#0 made 3 modifications
debug: Found equivalence set: range_index%0#1, idx#0
debug: Replacing {range_index%0#1} with idx#0 made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable stop%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_header_L41 with block@1: // for_preamble_L41 in block@6: // after_for_L41
debug: Replaced predecessor block@2: // for_header_L41 with block@1: // for_preamble_L41 in block@3: // for_body_L41
debug: Merged linear block@2: // for_header_L41 into block@1: // for_preamble_L41
debug: Replaced predecessor block@4: // for_footer_L41 with block@3: // for_body_L41 in block@6: // after_for_L41
debug: Replaced predecessor block@4: // for_footer_L41 with block@3: // for_body_L41 in block@5: // for_increment_L41
debug: Merged linear block@4: // for_footer_L41 into block@3: // for_body_L41
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: start%0#0, range_item%0#0
debug: Replacing {range_item%0#0} with start%0#0 made 2 modifications
debug: Found equivalence set: range_item%0#2, i#0
debug: Replacing {range_item%0#2} with i#0 made 3 modifications
debug: Found equivalence set: next_index%0#0, idx#0
debug: Replacing {next_index%0#0} with idx#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (- 7u 1u) to 6u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable stop%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_header_L48 with block@1: // for_preamble_L48 in block@6: // after_for_L48
debug: Replaced predecessor block@2: // for_header_L48 with block@1: // for_preamble_L48 in block@3: // for_body_L48
debug: Merged linear block@2: // for_header_L48 into block@1: // for_preamble_L48
debug: Replaced predecessor block@4: // for_footer_L48 with block@3: // for_body_L48 in block@6: // after_for_L48
debug: Replaced predecessor block@4: // for_footer_L48 with block@3: // for_body_L48 in block@5: // for_increment_L48
debug: Merged linear block@4: // for_footer_L48 into block@3: // for_body_L48
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: range_item%0#1, i#0
debug: Replacing {range_item%0#1} with i#0 made 3 modifications
debug: Found equivalence set: start%0#0, range_item%1#0
debug: Replacing {range_item%1#0} with start%0#0 made 2 modifications
debug: Found equivalence set: range_item%2#1, i#2
debug: Replacing {range_item%2#1} with i#2 made 3 modifications
debug: Found equivalence set: range_index%0#3, idx#0
debug: Replacing {range_index%0#3} with idx#0 made 2 modifications
debug: Found equivalence set: range_item%1#2, i#1
debug: Replacing {range_item%1#2} with i#1 made 3 modifications
debug: Found equivalence set: start%1#0, range_item%4#0
debug: Replacing {range_item%4#0} with start%1#0 made 2 modifications
debug: Found equivalence set: start%2#0, range_item%5#0
debug: Replacing {range_item%5#0} with start%2#0 made 2 modifications
debug: Found equivalence set: range_item%3#1, i#3
debug: Replacing {range_item%3#1} with i#3 made 3 modifications
debug: Found equivalence set: next_index%0#0, idx#1
debug: Replacing {next_index%0#0} with idx#1 made 1 modifications
debug: Found equivalence set: range_item%4#2, i#4
debug: Replacing {range_item%4#2} with i#4 made 3 modifications
debug: Found equivalence set: range_index%2#1, idx#2
debug: Replacing {range_index%2#1} with idx#2 made 2 modifications
debug: Found equivalence set: range_item%5#2, i#5
debug: Replacing {range_item%5#2} with i#5 made 3 modifications
debug: Found equivalence set: next_index%1#0, idx#3
debug: Replacing {next_index%1#0} with idx#3 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (* 1u iteration_count_minus_one%0#0) to iteration_count_minus_one%0#0
debug: Simplified (+ 0u range_delta%0#0) to range_delta%0#0
debug: Simplified (>= start%0#0 0u) to 1u
debug: Simplified (concat tmp%2#0 "") to tmp%2#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (concat tmp%6#0 "") to tmp%6#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (* 1u iteration_count_minus_one%2#0) to iteration_count_minus_one%2#0
debug: Simplified (+ 0u range_delta%1#0) to range_delta%1#0
debug: Simplified (>= start%1#0 0u) to 1u
debug: Simplified (concat tmp%10#0 "") to tmp%10#0
debug: Simplified (< 0u 0u) to 0u
debug: Simplified (- 0u 0u) to 0u
debug: Simplified (* 1u iteration_count_minus_one%3#0) to iteration_count_minus_one%3#0
debug: Simplified (+ 0u range_delta%2#0) to range_delta%2#0
debug: Simplified (>= start%2#0 0u) to 1u
debug: Simplified (concat tmp%14#0 "") to tmp%14#0
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable stop%0#0
debug: Removing unused variable continue_looping%2#0
debug: Removing unused variable stop%1#0
debug: Removing unused variable continue_looping%6#0
debug: Removing unused variable stop%2#0
debug: Removing unused variable continue_looping%8#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L54 with block@2: // for_body_L54 in block@4: // for_increment_L54
debug: Merged linear block@3: // for_footer_L54 into block@2: // for_body_L54
debug: Replaced predecessor block@4: // for_increment_L54 with block@2: // for_body_L54 in block@1: // for_header_L54
debug: Merged linear block@4: // for_increment_L54 into block@2: // for_body_L54
debug: Replaced predecessor block@7: // for_header_L56 with block@6: // for_preamble_L56 in block@11: // after_for_L56
debug: Replaced predecessor block@7: // for_header_L56 with block@6: // for_preamble_L56 in block@8: // for_body_L56
debug: Merged linear block@7: // for_header_L56 into block@6: // for_preamble_L56
debug: Replaced predecessor block@9: // for_footer_L56 with block@8: // for_body_L56 in block@11: // after_for_L56
debug: Replaced predecessor block@9: // for_footer_L56 with block@8: // for_body_L56 in block@10: // for_increment_L56
debug: Merged linear block@9: // for_footer_L56 into block@8: // for_body_L56
debug: Replaced predecessor block@14: // for_footer_L58 with block@13: // for_body_L58 in block@15: // for_increment_L58
debug: Merged linear block@14: // for_footer_L58 into block@13: // for_body_L58
debug: Replaced predecessor block@15: // for_increment_L58 with block@13: // for_body_L58 in block@12: // for_header_L58
debug: Merged linear block@15: // for_increment_L58 into block@13: // for_body_L58
debug: Replaced predecessor block@20: // for_footer_L60 with block@19: // for_body_L60 in block@21: // for_increment_L60
debug: Merged linear block@20: // for_footer_L60 into block@19: // for_body_L60
debug: Replaced predecessor block@21: // for_increment_L60 with block@19: // for_body_L60 in block@18: // for_header_L60
debug: Merged linear block@21: // for_increment_L60 into block@19: // for_body_L60
debug: Replaced predecessor block@24: // for_header_L62 with block@23: // for_preamble_L62 in block@28: // after_for_L62
debug: Replaced predecessor block@24: // for_header_L62 with block@23: // for_preamble_L62 in block@25: // for_body_L62
debug: Merged linear block@24: // for_header_L62 into block@23: // for_preamble_L62
debug: Replaced predecessor block@26: // for_footer_L62 with block@25: // for_body_L62 in block@28: // after_for_L62
debug: Replaced predecessor block@26: // for_footer_L62 with block@25: // for_body_L62 in block@27: // for_increment_L62
debug: Merged linear block@26: // for_footer_L62 into block@25: // for_body_L62
debug: Replaced predecessor block@30: // for_header_L64 with block@29: // for_preamble_L64 in block@34: // after_for_L64
debug: Replaced predecessor block@30: // for_header_L64 with block@29: // for_preamble_L64 in block@31: // for_body_L64
debug: Merged linear block@30: // for_header_L64 into block@29: // for_preamble_L64
debug: Replaced predecessor block@32: // for_footer_L64 with block@31: // for_body_L64 in block@34: // after_for_L64
debug: Replaced predecessor block@32: // for_footer_L64 with block@31: // for_body_L64 in block@33: // for_increment_L64
debug: Merged linear block@32: // for_footer_L64 into block@31: // for_body_L64
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (< 1u 7u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values#0
debug: Removing unused variable range_item%0#0
debug: Removing unused variable i#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_header_L71 with block@0: // L67 in block@3: // after_for_L71
debug: Replaced predecessor block@1: // for_header_L71 with block@0: // L67 in block@2: // for_body_L71
debug: Merged linear block@1: // for_header_L71 into block@0: // L67
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (% 6u 2u) to 0u
debug: Simplified (/ 6u 2u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable should_loop%0#0
debug: Removing unused variable range_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L16 from goto 1u ? block@1 : block@6 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_preamble_L20 with block@0: // L16 in block@6: // after_for_L20
debug: Replaced predecessor block@1: // for_preamble_L20 with block@0: // L16 in block@3: // for_body_L20
debug: Merged linear block@1: // for_preamble_L20 into block@0: // L16
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (% 6u 2u) to 0u
debug: Simplified (/ 6u 2u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable should_loop%0#0
debug: Removing unused variable range_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L30 from goto 1u ? block@1 : block@6 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_preamble_L34 with block@0: // L30 in block@2: // for_header_L34
debug: Merged linear block@1: // for_preamble_L34 into block@0: // L30
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (% 6u 2u) to 0u
debug: Simplified (/ 6u 2u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable should_loop%0#0
debug: Removing unused variable range_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L37 from goto 1u ? block@1 : block@6 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_preamble_L41 with block@0: // L37 in block@6: // after_for_L41
debug: Replaced predecessor block@1: // for_preamble_L41 with block@0: // L37 in block@3: // for_body_L41
debug: Merged linear block@1: // for_preamble_L41 into block@0: // L37
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (% 6u 2u) to 0u
debug: Simplified (/ 6u 2u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable should_loop%0#0
debug: Removing unused variable range_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L44 from goto 1u ? block@1 : block@6 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // for_preamble_L48 with block@0: // L44 in block@6: // after_for_L48
debug: Replaced predecessor block@1: // for_preamble_L48 with block@0: // L44 in block@3: // for_body_L48
debug: Merged linear block@1: // for_preamble_L48 into block@0: // L44
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: iteration_count_minus_one%0#0, range_delta%0#0, start%0#0
debug: Replacing {range_delta%0#0, start%0#0} with iteration_count_minus_one%0#0 made 1 modifications
debug: Found equivalence set: tmp%2#0, tmp%3#0
debug: Replacing {tmp%3#0} with tmp%2#0 made 1 modifications
debug: Found equivalence set: iteration_count_minus_one%2#0, range_delta%1#0, start%1#0
debug: Replacing {range_delta%1#0, start%1#0} with iteration_count_minus_one%2#0 made 1 modifications
debug: Found equivalence set: iteration_count_minus_one%3#0, range_delta%2#0, start%2#0
debug: Replacing {range_delta%2#0, start%2#0} with iteration_count_minus_one%3#0 made 1 modifications
debug: Found equivalence set: tmp%10#0, tmp%11#0
debug: Replacing {tmp%11#0} with tmp%10#0 made 1 modifications
debug: Found equivalence set: tmp%6#0, tmp%7#0
debug: Replacing {tmp%7#0} with tmp%6#0 made 1 modifications
debug: Found equivalence set: tmp%14#0, tmp%15#0
debug: Replacing {tmp%15#0} with tmp%14#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (% 0u 1u) to 0u
debug: Simplified (/ 0u 1u) to 0u
debug: Simplified (% 0u 1u) to 0u
debug: Simplified (/ 0u 1u) to 0u
debug: Simplified (% 0u 1u) to 0u
debug: Simplified (/ 0u 1u) to 0u
debug: Simplified (% 0u 1u) to 0u
debug: Simplified (/ 0u 1u) to 0u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable should_loop%0#0
debug: Removing unused variable range_length%0#0
debug: Removing unused variable continue_looping%1#0
debug: Removing unused variable should_loop%1#0
debug: Removing unused variable range_length%1#0
debug: Removing unused variable should_loop%2#0
debug: Removing unused variable range_length%2#0
debug: Removing unused variable continue_looping%5#0
debug: Removing unused variable should_loop%3#0
debug: Removing unused variable range_length%3#0
debug: Removing unused variable continue_looping%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5: // after_for_L54 from goto 0u ? block@6 : block@11 to goto block@11
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@6: // for_preamble_L56 from goto 1u ? block@8 : block@11 to goto block@8
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@16: // after_for_L58 from goto 0u ? block@17 : block@22 to goto block@22
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@22: // after_for_L60 from goto 0u ? block@23 : block@28 to goto block@28
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@23: // for_preamble_L62 from goto 1u ? block@25 : block@28 to goto block@25
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@28: // after_for_L62 from goto 0u ? block@29 : block@34 to goto block@34
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@29: // for_preamble_L64 from goto 1u ? block@31 : block@34 to goto block@31
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5: // after_for_L54
debug: Removed empty block: block@16: // after_for_L58
debug: Removed empty block: block@22: // after_for_L60
debug: Removed empty block: block@28: // after_for_L62
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@6: // for_preamble_L56, block@8: // for_body_L56, block@10: // for_increment_L56, block@17: // for_preamble_L60, block@18: // for_header_L60, block@19: // for_body_L60, block@23: // for_preamble_L62, block@25: // for_body_L62, block@27: // for_increment_L62, block@29: // for_preamble_L64, block@31: // for_body_L64, block@33: // for_increment_L64
debug: Removed unreachable predecessors from block@11: // after_for_L56
debug: Removed unreachable predecessors from block@34: // after_for_L64
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 0x206120622063 1u 2u) to 0x61
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%0#0
debug: Removing unused variable index_plus_1%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L67 from goto 1u ? block@2 : block@3 to goto block@2
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_body_L71 with block@0: // L67 in block@3: // after_for_L71
debug: Merged linear block@2: // for_body_L71 into block@0: // L67
debug: Merged linear block@3: // after_for_L71 into block@0: // L67
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= 0u 0u) to 0u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step%0#0
debug: Removing unused variable range_floor_div_step%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= 0u 0u) to 0u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step%0#0
debug: Removing unused variable range_floor_div_step%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= 0u 0u) to 0u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step%0#0
debug: Removing unused variable range_floor_div_step%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= 0u 0u) to 0u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step%0#0
debug: Removing unused variable range_floor_div_step%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 3u 0u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step_not_zero%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 3u 0u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step_not_zero%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 3u 0u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step_not_zero%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 3u 0u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_mod_step_not_zero%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 3u 1u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 3u 1u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 3u 1u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 3u 1u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_5.ir
debug: Begin optimization pass 6/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 2u 2u) to 4u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count_minus_one%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count_minus_one%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 2u 2u) to 4u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count_minus_one%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 2u 2u) to 4u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable iteration_count_minus_one%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_6.ir
debug: Begin optimization pass 7/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_delta%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_delta%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 1u 4u) to 5u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable range_delta%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_7.ir
debug: Begin optimization pass 8/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (>= 5u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (>= 5u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (>= 5u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_8.ir
debug: Begin optimization pass 9/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L16 from goto 1u ? block@3 : block@6 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L37 from goto 1u ? block@3 : block@6 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L44 from goto 1u ? block@3 : block@6 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to iteration/out/URangeIterationTest.ssa.opt_pass_9.ir
debug: Begin optimization pass 10/100
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase._log_with_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 10, ending loop
debug: Removing Phis from test_cases.iteration.base.IterationTestBase.approval_program
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: Removing Phis from test_cases.iteration.base.IterationTestBase._log_with_index
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: Removing Phis from test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Removing Phis from test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards using strategy RootOperandGrouping
debug: Coalescing range_item%0#0 with [range_item%0#3]
debug: Coalescing i#0 with [i#1]
debug: Coalescing resulted in 5 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#1]
debug: Coalescing resulted in 3 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing range_item%0#0 with [range_item%0#3]
debug: Coalescing range_index%0#0 with [range_index%0#2]
debug: Coalescing i#0 with [i#1]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing resulted in 10 replacement/s
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase._log_with_index using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing range_item%0#0 with [range_item%0#3]
debug: Coalescing range_index%0#0 with [range_index%0#6, range_index%0#3, range_index%0#2]
debug: Coalescing i#0 with [i#1]
debug: Coalescing resulted in 13 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index using strategy RootOperandGrouping
debug: Coalescing range_index%0#0 with [range_index%0#2]
debug: Coalescing i#0 with [i#1]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing resulted in 8 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index using strategy RootOperandGrouping
debug: Coalescing range_index%0#0 with [range_index%0#5, range_index%0#1, range_index%0#2]
debug: Coalescing i#0 with [i#1]
debug: Coalescing resulted in 11 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_empty using strategy RootOperandGrouping
debug: Coalescing range_item%0#0 with [range_item%0#3]
debug: Coalescing i#0 with [i#3, i#4, i#2]
debug: Coalescing range_item%2#0 with [range_item%2#3]
debug: Coalescing range_index%0#0 with [range_index%0#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing resulted in 19 replacement/s
debug: Coalescing local variables in test_cases.iteration.iterate_urange.URangeIterationTest.test_break using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.iteration.base.IterationTestBase.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.approval_program
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: loc: {i#0=None, idx#0=None, range_item%0#0=range_item%0#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=range_item%0#0, idx#0=range_index%0#0}
debug: ready: i#0, idx#0
debug: to_do: i#0, idx#0
debug: * avail idx#0
debug: * avail range_index%0#0
debug: * avail i#0
debug: * avail range_item%0#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=None, idx#0=None, range_item%0#0=range_item%0#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=range_item%0#0, idx#0=range_index%0#0}
debug: ready: i#0, idx#0
debug: to_do: i#0, idx#0
debug: * avail idx#0
debug: * avail range_index%0#0
debug: * avail i#0
debug: * avail range_item%0#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase._log_with_index
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: loc: {i#0=None, range_index%0#0=range_index%0#0, range_item%0#0=range_item%0#0}
debug: pred: {i#0=range_item%0#0, range_index%0#0=range_index%0#0}
debug: ready: i#0
debug: to_do: i#0, range_index%0#0
debug: * avail i#0
debug: * avail range_item%0#0
debug: * to_do range_index%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=i#0, range_index%0#0=range_index%0#0}
debug: ready: 
debug: to_do: i#0, range_index%0#0
debug: * to_do range_index%0#0
debug: * to_do i#0
debug: loc: {i#0=None, range_index%0#0=range_index%0#0, range_item%0#0=range_item%0#0}
debug: pred: {i#0=range_item%0#0, range_index%0#0=range_index%0#0}
debug: ready: i#0
debug: to_do: i#0, range_index%0#0
debug: * avail i#0
debug: * avail range_item%0#0
debug: * to_do range_index%0#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: loc: {i#0=None, idx#0=None, start%0#0=start%0#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=start%0#0, idx#0=range_index%0#0}
debug: ready: i#0, idx#0
debug: to_do: i#0, idx#0
debug: * avail idx#0
debug: * avail range_index%0#0
debug: * avail i#0
debug: * avail start%0#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=None, idx#0=None, range_item%0#3=range_item%0#3, range_index%0#0=range_index%0#0}
debug: pred: {i#0=range_item%0#3, idx#0=range_index%0#0}
debug: ready: i#0, idx#0
debug: to_do: i#0, idx#0
debug: * avail idx#0
debug: * avail range_index%0#0
debug: * avail i#0
debug: * avail range_item%0#3
debug: * to_do idx#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: loc: {i#0=None, range_index%0#0=range_index%0#0, start%0#0=start%0#0}
debug: pred: {i#0=start%0#0, range_index%0#0=range_index%0#0}
debug: ready: i#0
debug: to_do: i#0, range_index%0#0
debug: * avail i#0
debug: * avail start%0#0
debug: * to_do range_index%0#0
debug: * to_do i#0
debug: loc: {i#0=i#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=i#0, range_index%0#0=range_index%0#0}
debug: ready: 
debug: to_do: i#0, range_index%0#0
debug: * to_do range_index%0#0
debug: * to_do i#0
debug: loc: {i#0=None, range_index%0#0=range_index%0#0, range_item%0#3=range_item%0#3}
debug: pred: {i#0=range_item%0#3, range_index%0#0=range_index%0#0}
debug: ready: i#0
debug: to_do: i#0, range_index%0#0
debug: * avail i#0
debug: * avail range_item%0#3
debug: * to_do range_index%0#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: loc: {i#0=None, idx#0=None, range_item%2#0=range_item%2#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=range_item%2#0, idx#0=range_index%0#0}
debug: ready: i#0, idx#0
debug: to_do: i#0, idx#0
debug: * avail idx#0
debug: * avail range_index%0#0
debug: * avail i#0
debug: * avail range_item%2#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=i#0, idx#0=idx#0}
debug: pred: {i#0=i#0, idx#0=idx#0}
debug: ready: 
debug: to_do: i#0, idx#0
debug: * to_do idx#0
debug: * to_do i#0
debug: loc: {i#0=None, idx#0=None, range_item%2#0=range_item%2#0, range_index%0#0=range_index%0#0}
debug: pred: {i#0=range_item%2#0, idx#0=range_index%0#0}
debug: ready: i#0, idx#0
debug: to_do: i#0, idx#0
debug: * avail idx#0
debug: * avail range_index%0#0
debug: * avail i#0
debug: * avail range_item%2#0
debug: * to_do idx#0
debug: * to_do i#0
debug: Sequentializing parallel copies in test_cases.iteration.iterate_urange.URangeIterationTest.test_break
debug: Sequentializing parallel copies in test_cases.iteration.base.IterationTestBase.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to iteration/out/URangeIterationTest.destructured.ir
debug: Inserted test_forwards_block@0.ops[1]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_forwards_block@0.ops[3]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_forwards_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[15]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[17]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[1]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_for_body@2.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_for_body@2.ops[15]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards f-stack on first store: ['i#0']
debug: Inserted test_reversed_block@0.ops[1]: 'store start%0#0 to l-stack (copy)'
debug: Replaced test_reversed_block@0.ops[3]: 'load start%0#0' with 'load start%0#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@3.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_reversed_for_body@3.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@3.ops[15]: 'store continue_looping%1#0 to l-stack (copy)'
debug: Replaced test_reversed_for_body@3.ops[17]: 'load continue_looping%1#0' with 'load continue_looping%1#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@3.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced test_reversed_for_body@3.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@3.ops[1]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reversed_for_body@3.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_body@3.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reversed_for_body@3.ops[15]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reversed_for_increment@5.ops[3]: 'store range_item%0#3 to l-stack (copy)'
debug: Replaced test_reversed_for_increment@5.ops[5]: 'load range_item%0#3' with 'load range_item%0#3 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reversed f-stack on first store: ['i#0']
debug: Inserted test_forwards_with_forwards_index_block@0.ops[3]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_block@0.ops[5]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_block@0.ops[1]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_block@0.ops[8]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[19]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[21]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[11]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[1]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[16]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[14]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[21]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_forwards_index_for_body@2.ops[20]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_forwards_index_for_body@2.ops[29]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_forwards_index f-stack on first store: ['idx#0', 'i#0']
debug: Inserted _log_with_index_block@0.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[13]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[15]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[18]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[20]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _log_with_index_block@0.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced _log_with_index_block@0.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_block@0.ops[1]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_block@0.ops[5]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_header@2.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_header@2.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[12]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[15]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[7]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[11]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[5]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[11]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[22]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[28]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[12]: 'store i#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[20]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[3]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[18]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_forwards_with_reverse_index_for_body@3.ops[2]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_forwards_with_reverse_index_for_body@3.ops[27]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_forwards_with_reverse_index f-stack on first store: ['range_index%0#0', 'i#0']
debug: Inserted test_reverse_with_forwards_index_block@0.ops[3]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_block@0.ops[5]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_block@0.ops[1]: 'store start%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_block@0.ops[8]: 'load start%0#0' with 'load start%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@3.ops[15]: 'store continue_looping%1#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@3.ops[17]: 'load continue_looping%1#0' with 'load continue_looping%1#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@3.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@3.ops[11]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@3.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@3.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@3.ops[1]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@3.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_body@3.ops[8]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_body@3.ops[16]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_increment@5.ops[7]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_increment@5.ops[9]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_forwards_index_for_increment@5.ops[3]: 'store range_item%0#3 to l-stack (copy)'
debug: Replaced test_reverse_with_forwards_index_for_increment@5.ops[12]: 'load range_item%0#3' with 'load range_item%0#3 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_forwards_index f-stack on first store: ['idx#0', 'i#0']
debug: Inserted test_reverse_with_reverse_index_block@0.ops[1]: 'store start%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_block@0.ops[5]: 'load start%0#0' with 'load start%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@3.ops[19]: 'store continue_looping%1#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@3.ops[21]: 'load continue_looping%1#0' with 'load continue_looping%1#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@3.ops[12]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@3.ops[15]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@3.ops[7]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@3.ops[11]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@3.ops[5]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@3.ops[11]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@3.ops[12]: 'store i#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@3.ops[20]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_body@3.ops[3]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_body@3.ops[18]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Inserted test_reverse_with_reverse_index_for_increment@5.ops[3]: 'store range_item%0#3 to l-stack (copy)'
debug: Replaced test_reverse_with_reverse_index_for_increment@5.ops[9]: 'load range_item%0#3' with 'load range_item%0#3 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index f-stack entry: []
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_reverse_with_reverse_index f-stack on first store: ['range_index%0#0', 'i#0']
debug: Inserted test_empty_block@0.ops[1]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_empty_block@0.ops[3]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@2.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@2.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@2.ops[9]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@2.ops[11]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@2.ops[1]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@2.ops[7]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@11.ops[3]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@11.ops[5]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Inserted test_empty_after_for@11.ops[1]: 'store range_item%2#0 to l-stack (copy)'
debug: Replaced test_empty_after_for@11.ops[8]: 'load range_item%2#0' with 'load range_item%2#0 from l-stack (no copy)'
debug: Inserted test_empty_for_header@12.ops[3]: 'store continue_looping%3#0 to l-stack (copy)'
debug: Replaced test_empty_for_header@12.ops[5]: 'load continue_looping%3#0' with 'load continue_looping%3#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[9]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[11]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[20]: 'store range_index%0#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[22]: 'load range_index%0#0' with 'load range_index%0#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[8]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[2]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[18]: 'store range_item%2#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[27]: 'load range_item%2#0' with 'load range_item%2#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[5]: 'store i#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[16]: 'load i#0' with 'load i#0 from l-stack (no copy)'
debug: Inserted test_empty_for_body@13.ops[1]: 'store idx#0 to l-stack (copy)'
debug: Replaced test_empty_for_body@13.ops[22]: 'load idx#0' with 'load idx#0 from l-stack (no copy)'
debug: Found 4 edge set/s for test_cases.iteration.iterate_urange.URangeIterationTest.test_empty
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_empty f-stack entry: ['idx#0']
debug: test_cases.iteration.iterate_urange.URangeIterationTest.test_empty f-stack on first store: ['i#0']
info: Writing iteration/out/IndexableIterationTest.approval.teal
info: Writing iteration/out/IndexableIterationTest.clear.teal
info: Writing iteration/out/IndexableIterationTest.approval.bin
info: Writing iteration/out/IndexableIterationTest.clear.bin
info: Writing iteration/out/TupleIterationTest.approval.teal
info: Writing iteration/out/TupleIterationTest.clear.teal
info: Writing iteration/out/TupleIterationTest.approval.bin
info: Writing iteration/out/TupleIterationTest.clear.bin
info: Writing iteration/out/URangeIterationTest.approval.teal
info: Writing iteration/out/URangeIterationTest.clear.teal
info: Writing iteration/out/URangeIterationTest.approval.bin
info: Writing iteration/out/URangeIterationTest.clear.bin