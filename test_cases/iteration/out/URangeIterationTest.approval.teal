#pragma version 10
#pragma typetrack false

// test_cases.iteration.base.IterationTestBase.approval_program() -> uint64:
main:
    intcblock 1 0 2 5
    bytecblock 0x206120622063
    pushbytes ""
    dupn 2
    // iteration/base.py:8
    // log("test_forwards")
    pushbytes "test_forwards"
    log
    // iteration/iterate_urange.py:13
    // for i in urange(1, 7, 2):
    intc_0 // 1

main_for_header@2:
    // iteration/iterate_urange.py:13
    // for i in urange(1, 7, 2):
    dup
    pushint 7 // 7
    <
    bz main_after_for@5
    // iteration/iterate_urange.py:12
    // values = Bytes(b" a b c")
    bytec_0 // 0x206120622063
    // iteration/iterate_urange.py:14
    // log(values[i])
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    log
    // iteration/iterate_urange.py:13
    // for i in urange(1, 7, 2):
    intc_2 // 2
    +
    bury 1
    b main_for_header@2

main_after_for@5:
    // iteration/base.py:10
    // log("test_reversed")
    pushbytes "test_reversed"
    log
    // iteration/iterate_urange.py:21
    // for i in reversed(urange(1, 7, 2)):
    intc_3 // 5
    bury 1

main_for_body@9:
    // iteration/iterate_urange.py:20
    // values = Bytes(b" a b c")
    bytec_0 // 0x206120622063
    // iteration/iterate_urange.py:22
    // log(values[i])
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    log
    // iteration/iterate_urange.py:21
    // for i in reversed(urange(1, 7, 2)):
    intc_0 // 1
    >
    bz main_after_for@12
    dup
    intc_2 // 2
    -
    bury 1
    b main_for_body@9

main_after_for@12:
    // iteration/base.py:12
    // log("test_forwards_with_forwards_index")
    pushbytes "test_forwards_with_forwards_index"
    log
    // iteration/iterate_urange.py:29
    // for idx, i in uenumerate(urange(1, 7, 2)):
    intc_0 // 1
    bury 1
    intc_1 // 0
    bury 4

main_for_header@15:
    // iteration/iterate_urange.py:29
    // for idx, i in uenumerate(urange(1, 7, 2)):
    dup
    pushint 7 // 7
    <
    bz main_after_for@18
    // iteration/iterate_urange.py:28
    // values = Bytes(b" a b c")
    bytec_0 // 0x206120622063
    // iteration/iterate_urange.py:30
    // self._log_with_index(idx, values[i])
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    dig 5
    dup
    cover 3
    swap
    callsub _log_with_index
    // iteration/iterate_urange.py:29
    // for idx, i in uenumerate(urange(1, 7, 2)):
    intc_2 // 2
    +
    bury 2
    intc_0 // 1
    +
    bury 4
    b main_for_header@15

main_after_for@18:
    // iteration/base.py:14
    // log("test_forwards_with_reverse_index")
    pushbytes "test_forwards_with_reverse_index"
    log
    // iteration/iterate_urange.py:38
    // for idx, i in reversed(uenumerate(reversed(urange(1, 7, 2)))):
    intc_2 // 2
    bury 4
    intc_0 // 1
    bury 1

main_for_body@22:
    // iteration/iterate_urange.py:37
    // values = Bytes(b" a b c")
    bytec_0 // 0x206120622063
    // iteration/iterate_urange.py:39
    // self._log_with_index(idx, values[i])
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    dig 5
    swap
    callsub _log_with_index
    // iteration/iterate_urange.py:38
    // for idx, i in reversed(uenumerate(reversed(urange(1, 7, 2)))):
    intc_3 // 5
    <
    bz main_after_for@25
    dup
    intc_2 // 2
    +
    bury 1
    dig 3
    intc_0 // 1
    -
    bury 4
    b main_for_body@22

main_after_for@25:
    // iteration/base.py:16
    // log("test_reverse_with_forwards_index")
    pushbytes "test_reverse_with_forwards_index"
    log
    // iteration/iterate_urange.py:47
    // for idx, i in uenumerate(reversed(urange(1, 7, 2))):
    intc_3 // 5
    bury 1
    intc_1 // 0
    bury 4

main_for_body@29:
    // iteration/iterate_urange.py:46
    // values = Bytes(b" a b c")
    bytec_0 // 0x206120622063
    // iteration/iterate_urange.py:48
    // self._log_with_index(idx, values[i])
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    dig 5
    swap
    callsub _log_with_index
    // iteration/iterate_urange.py:47
    // for idx, i in uenumerate(reversed(urange(1, 7, 2))):
    intc_0 // 1
    >
    bz main_after_for@32
    dup
    intc_2 // 2
    -
    bury 1
    dig 3
    intc_0 // 1
    +
    bury 4
    b main_for_body@29

main_after_for@32:
    // iteration/base.py:18
    // log("test_reverse_with_reverse_index")
    pushbytes "test_reverse_with_reverse_index"
    log
    // iteration/iterate_urange.py:56
    // for idx, i in reversed(uenumerate(urange(1, 7, 2))):
    intc_2 // 2
    bury 4
    intc_3 // 5
    bury 1

main_for_body@36:
    // iteration/iterate_urange.py:55
    // values = Bytes(b" a b c")
    bytec_0 // 0x206120622063
    // iteration/iterate_urange.py:57
    // self._log_with_index(idx, values[i])
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3
    dig 5
    swap
    callsub _log_with_index
    // iteration/iterate_urange.py:56
    // for idx, i in reversed(uenumerate(urange(1, 7, 2))):
    intc_0 // 1
    >
    bz main_after_for@39
    dup
    intc_2 // 2
    -
    bury 1
    dig 3
    intc_0 // 1
    -
    bury 4
    b main_for_body@36

main_after_for@39:
    // iteration/base.py:20
    // log("test_empty")
    pushbytes "test_empty"
    log
    // iteration/iterate_urange.py:64
    // for i in urange(0):
    intc_1 // 0
    bury 1

main_for_header@42:
    // iteration/iterate_urange.py:64
    // for i in urange(0):
    dup
    intc_1 // 0
    <
    bz main_after_for@50
    // iteration/iterate_urange.py:65
    // log(i)
    dupn 2
    itob
    log
    // iteration/iterate_urange.py:64
    // for i in urange(0):
    intc_0 // 1
    +
    bury 1
    b main_for_header@42

main_after_for@50:
    // iteration/iterate_urange.py:68
    // for idx, i in uenumerate(urange(0)):
    intc_1 // 0
    bury 1
    intc_1 // 0
    bury 4

main_for_header@51:
    // iteration/iterate_urange.py:68
    // for idx, i in uenumerate(urange(0)):
    dup
    intc_1 // 0
    <
    bz main_after_for@69
    // iteration/iterate_urange.py:69
    // log(idx, i)
    dig 3
    dup
    itob
    dig 2
    dup
    cover 2
    itob
    concat
    log
    // iteration/iterate_urange.py:68
    // for idx, i in uenumerate(urange(0)):
    intc_0 // 1
    +
    bury 2
    intc_0 // 1
    +
    bury 4
    b main_for_header@51

main_after_for@69:
    // iteration/base.py:22
    // log("test_break")
    pushbytes "test_break"
    log
    // iteration/iterate_urange.py:82
    // log(values[i])
    pushbytes 0x61
    log
    // iteration/base.py:24
    // log("test_tuple_target")
    pushbytes "test_tuple_target"
    log
    // iteration/iterate_urange.py:89
    // for tup in uenumerate(urange(1)):
    intc_1 // 0
    bury 2
    intc_1 // 0
    bury 3

main_for_header@77:
    // iteration/iterate_urange.py:89
    // for tup in uenumerate(urange(1)):
    dig 1
    intc_0 // 1
    <
    bz main_after_for@80
    // iteration/iterate_urange.py:88
    // values = Bytes(b"t")
    pushbytes 0x74
    // iteration/iterate_urange.py:90
    // self._log_with_index(tup[0], values[tup[1]])
    dig 2
    dup
    cover 2
    intc_0 // 1
    extract3
    dig 4
    dup
    cover 3
    swap
    callsub _log_with_index
    // iteration/iterate_urange.py:89
    // for tup in uenumerate(urange(1)):
    intc_0 // 1
    +
    bury 3
    intc_0 // 1
    +
    bury 3
    b main_for_header@77

main_after_for@80:
    // iteration/base.py:26
    // return True
    intc_0 // 1
    return


// test_cases.iteration.base.IterationTestBase._log_with_index(idx: uint64, value: bytes) -> void:
_log_with_index:
    // iteration/base.py:31-32
    // @subroutine
    // def _log_with_index(self, idx: UInt64, value: Bytes) -> None:
    proto 2 0
    // iteration/base.py:33
    // digits = Bytes(b"0123456789")
    pushbytes 0x30313233343536373839
    // iteration/base.py:34
    // log(digits[idx], value, sep="=")
    frame_dig -2
    intc_0 // 1
    extract3
    pushbytes "="
    concat
    frame_dig -1
    concat
    log
    retsub
