{
  "version": 3,
  "sources": [
    "../base.py",
    "../iterate_urange.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAOY;;;;;;;;;;;;;;;AAAJ;;ACKgB;AAAxB;AAA2B;;AAA3B;AAAA;;;AADiB;AAED;;AAAA;AAAA;;AAAA;AAAA;AAAJ;AACA;AAAK;AAAL;AAAA;;AAFkB;AAAb;;;;;;AAGF;;AAAK;;AAAL;AAAP;ADNI;;;;;;;;;;;;;;;AAAJ;ACYkB;AAAA;;AADT;AAED;;AAAA;AAAA;;AAAA;AAAA;AAAJ;AACA;AAAK;AAAL;AAAA;;AAFqB;AAAP;AAA1B;;;AAA0B;AAAa;AAAb;AAAA;;;;;AAGX;;AAAK;AAAL;AAAP;ADbI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;ACmBgC;;;;;;;;;;;;AAAxC;AAA2C;;AAA3C;AAAA;;;AADiB;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;AAAA;;;AACA;AAAK;AAAL;AAAA;;AACA;AAAO;AAAP;AAAA;AAAA;;AAHqB;AAAa;AAAb;;;;;;;;;AAIlB;;AAAK;;AAAL;AAAP;AACO;;AAAO;;AAAP;AAAP;ADtBI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AC4B2C;AAAA;;AAAO;AAA9C;;AADK;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;AAAA;;;AACA;AAAK;AAAL;AAAA;;AACA;AAAO;AAAP;AAAA;;AAHuC;AAAA;AAAnD;;;AAAmD;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAIpC;;AAAK;;AAAL;AAAP;AACO;;AAAO;AAAP;AAAP;AD/BI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;ACqCkC;AAAA;;;AAA9B;;AADK;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;AAAA;;;AACA;AAAK;AAAL;AAAA;;AACA;AAAO;AAAP;AAAA;;AAHqC;AAAP;AAA1C;;;AAA0C;AAAa;AAAb;AAAA;;;;;AAI3B;;AAAK;AAAL;AAAP;AACO;;AAAO;;AAAP;AAAP;ADxCI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AC8CkC;AAAA;;AAAA;AAAA;;AADzB;AAEqB;;AAAA;AAAA;;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;AAAA;;;AACA;AAAK;AAAL;AAAA;;AACA;AAAO;AAAP;AAAA;;AAHqC;AAAP;AAA1C;;;AAA0C;AAAa;AAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;AAI3B;;AAAK;AAAL;AAAP;AACO;;AAAO;AAAP;AAAP;ADjDI;;;;;;;;;;;;AAAJ;ACsDS;;;AAAjB;AAAwB;AAAxB;AAAA;;;AACgB;;AAAA;AAAJ;AADK;AAAA;;;;;;AAIgB;;;;;;AAAjC;AAAwC;AAAxC;AAAA;;;AACgB;;AAAA;AAAA;AAAK;;AAAA;AAAA;;AAAA;AAAA;AAAT;AADqB;AAAA;AAAA;AAAA;AAAA;;;;;;;;ADxDrB;;;;;;;;;;;;AAAJ;ACsEQ;;;AAAJ;ADpEA;;;;;;;;;;;;;;;;;;;AAAJ;;;AC4EsB;;;;;;;;;;;AAA9B;;AAAqC;AAArC;AAAA;;;AADiB;;;AAEwB;;AAAA;AAAA;;AAAA;AAAA;AAA7B;;AAAA;AAAA;;AAAA;AAAA;;;AADkB;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;AAEf;;AAAA;;;AAAA;;AAAA;;;;AD5EP;;AAAA;AAKR;;;AAEiB;;;;;;;;;;;;AACL;;AAAA;AAAA;AAAwB;;;AAAX;AAAA;;AAAA;AAAjB;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.iteration.base.IterationTestBase.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 2 0 5"
    },
    "7": {
      "op": "bytecblock \"\" 0x206120622063"
    },
    "17": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0"
      ]
    },
    "18": {
      "op": "dupn 5",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1"
      ]
    },
    "20": {
      "op": "pushbytes \"test_forwards\"",
      "defined_out": [
        "\"test_forwards\""
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "\"test_forwards\""
      ]
    },
    "35": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1"
      ]
    },
    "36": {
      "op": "bytec_0 // \"\""
    },
    "37": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "38": {
      "block": "main_for_header@2",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "39": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "7"
      ]
    },
    "41": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "42": {
      "op": "bz main_after_for@5",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "45": {
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "46": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "48": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "49": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "51": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "52": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "53": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "54": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "55": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "56": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#1"
      ]
    },
    "57": {
      "op": "bury 3",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "59": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "60": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "61": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "63": {
      "op": "b main_for_header@2"
    },
    "66": {
      "block": "main_after_for@5",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "68": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1",
        "6"
      ]
    },
    "70": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%1#0"
      ]
    },
    "71": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "72": {
      "op": "pushbytes \"test_reversed\"",
      "defined_out": [
        "\"test_reversed\"",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_reversed\""
      ]
    },
    "87": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "88": {
      "op": "intc_3 // 5",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "89": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "91": {
      "block": "main_for_body@9",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "92": {
      "op": "dig 1",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "94": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "95": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "97": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "98": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "99": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "100": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "101": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "102": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#1"
      ]
    },
    "103": {
      "op": "bury 3",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "105": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "106": {
      "op": ">",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "107": {
      "op": "bz main_after_for@12",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "110": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "111": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "112": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "113": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "115": {
      "op": "b main_for_body@9"
    },
    "118": {
      "block": "main_after_for@12",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "120": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "121": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%1#0"
      ]
    },
    "122": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "123": {
      "op": "pushbytes \"test_forwards_with_forwards_index\"",
      "defined_out": [
        "\"test_forwards_with_forwards_index\"",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_forwards_with_forwards_index\""
      ]
    },
    "158": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "159": {
      "op": "intc_0 // 1"
    },
    "160": {
      "op": "bytec_0 // \"\""
    },
    "161": {
      "op": "intc_2 // 0"
    },
    "162": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2",
        "item_index_internal%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%0#0",
        "i#0",
        "item_index_internal%0#0",
        "idx#2"
      ]
    },
    "163": {
      "op": "bury 10",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%0#0",
        "i#0",
        "idx#0"
      ]
    },
    "165": {
      "op": "bury 10",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "167": {
      "op": "bury 3",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "169": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "171": {
      "block": "main_for_header@15",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "172": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "7"
      ]
    },
    "174": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "175": {
      "op": "bz main_after_for@18",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "178": {
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "179": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "181": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "182": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "184": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "185": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "186": {
      "op": "dig 9",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "188": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "189": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)"
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "idx#0 (copy)",
        "extract%0#0"
      ]
    },
    "192": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "195": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "196": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "197": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "198": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "200": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "201": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "202": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "203": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0",
        "idx#0"
      ]
    },
    "204": {
      "op": "bury 10",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "206": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "207": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "2"
      ]
    },
    "208": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "value_internal%0#0"
      ]
    },
    "209": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%0#0",
        "idx#2"
      ]
    },
    "210": {
      "op": "bury 8",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "212": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "214": {
      "op": "b main_for_header@15"
    },
    "217": {
      "block": "main_after_for@18",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "219": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1",
        "6"
      ]
    },
    "221": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%2#0"
      ]
    },
    "222": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "223": {
      "op": "dig 6",
      "defined_out": [
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#2"
      ]
    },
    "225": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#2",
        "3"
      ]
    },
    "227": {
      "op": "==",
      "defined_out": [
        "i#1",
        "idx#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%3#0"
      ]
    },
    "228": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "229": {
      "op": "pushbytes \"test_forwards_with_reverse_index\"",
      "defined_out": [
        "\"test_forwards_with_reverse_index\"",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_forwards_with_reverse_index\""
      ]
    },
    "263": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "264": {
      "op": "intc_1 // 2",
      "defined_out": [
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "265": {
      "op": "bury 8",
      "defined_out": [
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "267": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "268": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "270": {
      "block": "main_for_body@22",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "271": {
      "op": "dig 1",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "273": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "274": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "276": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "277": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "278": {
      "op": "dig 9",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "280": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "281": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)"
      ]
    },
    "283": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "idx#0 (copy)",
        "extract%0#0"
      ]
    },
    "284": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "287": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "288": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "289": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "290": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "292": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "293": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "294": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#2"
      ]
    },
    "295": {
      "op": "bury 8",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "297": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "298": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "299": {
      "op": "bz main_after_for@25",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "302": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "303": {
      "op": "intc_1 // 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "304": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "305": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "307": {
      "op": "dig 7",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "309": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "310": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "311": {
      "op": "bury 8",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "313": {
      "op": "b main_for_body@22"
    },
    "316": {
      "block": "main_after_for@25",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "318": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1",
        "6"
      ]
    },
    "320": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%2#0"
      ]
    },
    "321": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "322": {
      "op": "dig 6",
      "defined_out": [
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#2"
      ]
    },
    "324": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#2",
        "1"
      ]
    },
    "325": {
      "op": "==",
      "defined_out": [
        "i#1",
        "idx#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%3#0"
      ]
    },
    "326": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "327": {
      "op": "pushbytes \"test_reverse_with_forwards_index\"",
      "defined_out": [
        "\"test_reverse_with_forwards_index\"",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_reverse_with_forwards_index\""
      ]
    },
    "361": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "362": {
      "op": "intc_3 // 5",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "363": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "365": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "366": {
      "op": "bury 8",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "368": {
      "block": "main_for_body@29",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "369": {
      "op": "dig 1",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "371": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "372": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "374": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "375": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "376": {
      "op": "dig 9",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "378": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "379": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)"
      ]
    },
    "381": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "idx#0 (copy)",
        "extract%0#0"
      ]
    },
    "382": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "385": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "386": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "387": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "388": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "390": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "391": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "392": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "393": {
      "op": "bury 9",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "395": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "396": {
      "op": ">",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "397": {
      "op": "bz main_after_for@32",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "400": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "401": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "402": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "403": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "405": {
      "op": "b main_for_body@29"
    },
    "408": {
      "block": "main_after_for@32",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "410": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "411": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%2#0"
      ]
    },
    "412": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "413": {
      "op": "dig 7",
      "defined_out": [
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "415": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "3"
      ]
    },
    "417": {
      "op": "==",
      "defined_out": [
        "i#1",
        "idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%3#0"
      ]
    },
    "418": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "419": {
      "op": "pushbytes \"test_reverse_with_reverse_index\"",
      "defined_out": [
        "\"test_reverse_with_reverse_index\"",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_reverse_with_reverse_index\""
      ]
    },
    "452": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "453": {
      "op": "intc_1 // 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "454": {
      "op": "bury 8",
      "defined_out": [
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "456": {
      "op": "intc_3 // 5",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "457": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "459": {
      "block": "main_for_body@36",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "bytec_1 // 0x206120622063",
      "defined_out": [
        "0x206120622063"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063"
      ]
    },
    "460": {
      "op": "dig 1",
      "defined_out": [
        "0x206120622063",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0"
      ]
    },
    "462": {
      "op": "dup",
      "defined_out": [
        "0x206120622063",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "463": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)"
      ]
    },
    "465": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x206120622063",
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0x206120622063",
        "i#0 (copy)",
        "1"
      ]
    },
    "466": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0"
      ]
    },
    "467": {
      "op": "dig 9",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0"
      ]
    },
    "469": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "i#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "470": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "extract%0#0",
        "idx#0 (copy)"
      ]
    },
    "472": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "idx#0 (copy)",
        "extract%0#0"
      ]
    },
    "473": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "476": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "477": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "478": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "i#1"
      ]
    },
    "479": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "481": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0"
      ]
    },
    "482": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "483": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "idx#2"
      ]
    },
    "484": {
      "op": "bury 8",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "486": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "487": {
      "op": ">",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "488": {
      "op": "bz main_after_for@39",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "491": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "492": {
      "op": "intc_1 // 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "2"
      ]
    },
    "493": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "494": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#0",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "496": {
      "op": "dig 7",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "498": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "1"
      ]
    },
    "499": {
      "op": "-",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "500": {
      "op": "bury 8",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "502": {
      "op": "b main_for_body@36"
    },
    "505": {
      "block": "main_after_for@39",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1"
      ]
    },
    "507": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "i#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#1",
        "2"
      ]
    },
    "508": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%2#0"
      ]
    },
    "509": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "510": {
      "op": "dig 6",
      "defined_out": [
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#2"
      ]
    },
    "512": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#2",
        "1"
      ]
    },
    "513": {
      "op": "==",
      "defined_out": [
        "i#1",
        "idx#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tmp%3#0"
      ]
    },
    "514": {
      "op": "assert",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "515": {
      "op": "pushbytes \"test_empty\"",
      "defined_out": [
        "\"test_empty\"",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_empty\""
      ]
    },
    "527": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "528": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "529": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "i#1",
        "idx#2"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "531": {
      "block": "main_for_header@42",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "532": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0"
      ]
    },
    "533": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "534": {
      "op": "bz main_after_for@45",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "537": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "539": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%0#6"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "tmp%0#6"
      ]
    },
    "540": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "541": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "542": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "543": {
      "op": "bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "545": {
      "op": "b main_for_header@42"
    },
    "548": {
      "block": "main_after_for@45",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "intc_2 // 0",
      "defined_out": [
        "value_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%1#0"
      ]
    },
    "549": {
      "op": "dup",
      "defined_out": [
        "idx#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%1#0",
        "idx#0"
      ]
    },
    "550": {
      "op": "bury 9",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "552": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "554": {
      "block": "main_for_header@51",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "555": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0",
        "0"
      ]
    },
    "556": {
      "op": "<",
      "defined_out": [
        "continue_looping%2#0",
        "i#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%2#0"
      ]
    },
    "557": {
      "op": "bz main_after_for@54",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "560": {
      "op": "dig 7",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0"
      ]
    },
    "562": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "idx#0 (copy)"
      ]
    },
    "563": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "tmp%2#4"
      ]
    },
    "564": {
      "op": "dig 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "tmp%2#4",
        "i#0"
      ]
    },
    "566": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "idx#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "tmp%2#4",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "567": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "tmp%2#4",
        "i#0 (copy)"
      ]
    },
    "569": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%2#4",
        "tmp%4#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "tmp%2#4",
        "tmp%4#0"
      ]
    },
    "570": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "idx#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "571": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0"
      ]
    },
    "572": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "i#0",
        "1"
      ]
    },
    "573": {
      "op": "+",
      "defined_out": [
        "i#0",
        "idx#0",
        "value_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "idx#0",
        "value_internal%1#0"
      ]
    },
    "574": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%1#0",
        "idx#0"
      ]
    },
    "575": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%1#0",
        "idx#0",
        "1"
      ]
    },
    "576": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "value_internal%1#0",
        "idx#0"
      ]
    },
    "577": {
      "op": "bury 9",
      "defined_out": [
        "i#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "i#0"
      ]
    },
    "579": {
      "op": "bury 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "581": {
      "op": "b main_for_header@51"
    },
    "584": {
      "block": "main_after_for@54",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "pushbytes \"test_break\"",
      "defined_out": [
        "\"test_break\""
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_break\""
      ]
    },
    "596": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "597": {
      "op": "pushbytes 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x61"
      ]
    },
    "600": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "601": {
      "op": "pushbytes \"test_tuple_target\"",
      "defined_out": [
        "\"test_tuple_target\""
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "\"test_tuple_target\""
      ]
    },
    "620": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "621": {
      "op": "bytec_0 // \"\""
    },
    "622": {
      "op": "intc_2 // 0"
    },
    "623": {
      "op": "dup"
    },
    "624": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "item_index_internal%0#0",
        "value_internal%0#0",
        "tup.1#1"
      ]
    },
    "625": {
      "op": "bury 6",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "item_index_internal%0#0",
        "tup.1#0"
      ]
    },
    "627": {
      "op": "bury 6",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "item_index_internal%0#0"
      ]
    },
    "629": {
      "op": "swap",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "item_index_internal%0#0",
        "tup.0#1"
      ]
    },
    "630": {
      "op": "bury 6",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0"
      ]
    },
    "632": {
      "op": "bury 6",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "634": {
      "block": "main_for_header@77",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0"
      ]
    },
    "636": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0",
        "1"
      ]
    },
    "637": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "638": {
      "op": "bz main_after_for@80",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "641": {
      "op": "pushbytes 0x74",
      "defined_out": [
        "0x74",
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x74"
      ]
    },
    "644": {
      "op": "dig 4",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x74",
        "tup.1#0"
      ]
    },
    "646": {
      "op": "dup",
      "defined_out": [
        "0x74",
        "tup.1#0",
        "tup.1#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "0x74",
        "tup.1#0 (copy)",
        "tup.1#0 (copy)"
      ]
    },
    "647": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0",
        "0x74",
        "tup.1#0 (copy)"
      ]
    },
    "649": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0",
        "0x74",
        "tup.1#0 (copy)",
        "1"
      ]
    },
    "650": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0",
        "extract%0#0"
      ]
    },
    "651": {
      "op": "dig 7",
      "defined_out": [
        "extract%0#0",
        "tup.0#0",
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0",
        "extract%0#0",
        "tup.0#0"
      ]
    },
    "653": {
      "op": "dup",
      "defined_out": [
        "extract%0#0",
        "tup.0#0",
        "tup.0#0 (copy)",
        "tup.1#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#0",
        "extract%0#0",
        "tup.0#0 (copy)",
        "tup.0#0 (copy)"
      ]
    },
    "654": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "extract%0#0",
        "tup.0#0 (copy)"
      ]
    },
    "656": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "tup.0#0 (copy)",
        "extract%0#0"
      ]
    },
    "657": {
      "callsub": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "op": "callsub _log_with_index",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0"
      ]
    },
    "660": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#0 (copy)"
      ]
    },
    "661": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#0 (copy)",
        "1"
      ]
    },
    "662": {
      "op": "+",
      "defined_out": [
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0"
      ]
    },
    "663": {
      "op": "dig 2",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0",
        "tup.0#0 (copy)"
      ]
    },
    "665": {
      "op": "intc_0 // 1",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0",
        "tup.0#0 (copy)",
        "1"
      ]
    },
    "666": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "tup.1#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "667": {
      "op": "uncover 2",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0",
        "tup.1#1"
      ]
    },
    "669": {
      "op": "bury 6",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "value_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "671": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "item_index_internal%0#0",
        "tup.1#0"
      ]
    },
    "672": {
      "op": "bury 6",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.1#0",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0",
        "item_index_internal%0#0"
      ]
    },
    "674": {
      "op": "swap",
      "defined_out": [
        "item_index_internal%0#0",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "item_index_internal%0#0",
        "tup.0#1"
      ]
    },
    "675": {
      "op": "bury 6",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#0"
      ]
    },
    "677": {
      "op": "bury 6",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "679": {
      "op": "b main_for_header@77"
    },
    "682": {
      "block": "main_after_for@80",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "tup.0#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.0#1"
      ]
    },
    "684": {
      "op": "bnz main_bool_false@83",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "687": {
      "op": "dig 2",
      "defined_out": [
        "tup.0#1",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "tup.1#1"
      ]
    },
    "689": {
      "op": "bnz main_bool_false@83",
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "692": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0",
        "tup.0#1",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "and_result%0#0"
      ]
    },
    "693": {
      "op": "return",
      "defined_out": [
        "tup.0#1",
        "tup.1#1"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "694": {
      "block": "main_bool_false@83",
      "stack_in": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ],
      "op": "intc_2 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0",
        "and_result%0#0"
      ]
    },
    "695": {
      "op": "return",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "idx#2",
        "tup.0#0",
        "tup.0#1",
        "tup.1#0",
        "tup.1#1",
        "i#1",
        "i#0"
      ]
    },
    "696": {
      "subroutine": "test_cases.iteration.base.IterationTestBase._log_with_index",
      "params": {
        "idx#0": "uint64",
        "value#0": "bytes"
      },
      "block": "_log_with_index",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "699": {
      "op": "pushbytes 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "711": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)"
      ]
    },
    "713": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "idx#0 (copy)",
        "1"
      ]
    },
    "714": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "715": {
      "op": "pushbytes \"=\"",
      "defined_out": [
        "\"=\"",
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0",
        "\"=\""
      ]
    },
    "718": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "719": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "value#0 (copy)"
      ]
    },
    "721": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "722": {
      "op": "log",
      "stack_out": []
    },
    "723": {
      "retsub": true,
      "op": "retsub"
    }
  }
}