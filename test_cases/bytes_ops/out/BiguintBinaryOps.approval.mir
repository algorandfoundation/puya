// Op                                   // Op Description                                Stack (out)                                                                                      Source code                                                                                          Source line

#pragma version 10

// test_cases.bytes_ops.contract.BiguintBinaryOps.approval_program() -> uint64:
main_block@0:
    byte 0xff                           //                                               0xff                                                                                             Bytes.from_hex("FF")                                                                                 bytes_ops/contract.py:7
    byte 0x0f                           //                                               0xff,0x0f                                                                                        Bytes.from_hex("0F")                                                                                 bytes_ops/contract.py:8
    byte 0xff0f                         //                                               0xff,0x0f,0xff0f                                                                                 Bytes.from_hex("FF0F")                                                                               bytes_ops/contract.py:9
    byte 0xff                           //                                               0xff,0x0f,0xff0f,0xff                                                                            Bytes.from_hex("FF")                                                                                 bytes_ops/contract.py:10
    byte 0xf0                           //                                               0xff,0x0f,0xff0f,0xff,0xf0                                                                       Bytes.from_hex("F0")                                                                                 bytes_ops/contract.py:11
    byte 0x0f                           //                                               0xff,0x0f,0xff0f,0xff,0xf0,0x0f                                                                  Bytes.from_hex("0F")                                                                                 bytes_ops/contract.py:12
    callsub do_some_ops                 //                                                                                                                                                do_some_ops(\nleft=Bytes.from_hex("FF"),\nright=Bytes.from_hex("0F"),\nconcat=Bytes.from_hex("FF0... bytes_ops/contract.py:6-13
    byte 0xff                           //                                               0xff                                                                                             Bytes.from_hex("FF")                                                                                 bytes_ops/contract.py:14
    callsub do_augmented_assignment_ops //                                                                                                                                                do_augmented_assignment_ops(Bytes.from_hex("FF"))                                                    bytes_ops/contract.py:14
    int 1                               //                                               1                                                                                                True                                                                                                 bytes_ops/contract.py:15
    return                              //                                                                                                                                                return True                                                                                          bytes_ops/contract.py:15


// test_cases.bytes_ops.contract.do_some_ops(left: bytes, right: bytes, concat: bytes, bitwise_or: bytes, bitwise_xor: bytes, bitwise_and: bytes) -> void:
do_some_ops:
    proto 6 0                           //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 |                           @subroutine\ndef do_some_ops(\n*,\nleft: Bytes,\nright: Bytes,\nconcat: Bytes,\nbitwise_or: Bytes... bytes_ops/contract.py:21-30

do_some_ops_block@0:
    frame_dig -6                        // load left#0 from parameters                   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0                    result = left + right                                                                                bytes_ops/contract.py:31
    frame_dig -5                        // load right#0 from parameters                  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0,right#0            result = left + right                                                                                bytes_ops/contract.py:31
    concat                              //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {concat}                  left + right                                                                                         bytes_ops/contract.py:31
                                        // virtual: store result#0 to l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result = left + right                                                                                bytes_ops/contract.py:31
                                        // virtual: load result#0 from l-stack (no copy) (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result == concat                                                                                     bytes_ops/contract.py:32
    frame_dig -4                        // load concat#0 from parameters                 (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0,concat#0         result == concat                                                                                     bytes_ops/contract.py:32
    ==                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {==}                      result == concat                                                                                     bytes_ops/contract.py:32
                                        // virtual: store tmp%0#0 to l-stack (no copy)   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%0#0                   result == concat                                                                                     bytes_ops/contract.py:32
                                        // virtual: load tmp%0#0 from l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%0#0                   assert result == concat                                                                              bytes_ops/contract.py:32
    assert                              //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 |                           assert result == concat                                                                              bytes_ops/contract.py:32
    frame_dig -6                        // load left#0 from parameters                   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0                    result = left | right                                                                                bytes_ops/contract.py:33
    frame_dig -5                        // load right#0 from parameters                  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0,right#0            result = left | right                                                                                bytes_ops/contract.py:33
    b|                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {b|}                      left | right                                                                                         bytes_ops/contract.py:33
                                        // virtual: store result#0 to l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result = left | right                                                                                bytes_ops/contract.py:33
                                        // virtual: load result#0 from l-stack (no copy) (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result == bitwise_or                                                                                 bytes_ops/contract.py:34
    frame_dig -3                        // load bitwise_or#0 from parameters             (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0,bitwise_or#0     result == bitwise_or                                                                                 bytes_ops/contract.py:34
    ==                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {==}                      result == bitwise_or                                                                                 bytes_ops/contract.py:34
                                        // virtual: store tmp%1#0 to l-stack (no copy)   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%1#0                   result == bitwise_or                                                                                 bytes_ops/contract.py:34
                                        // virtual: load tmp%1#0 from l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%1#0                   assert result == bitwise_or                                                                          bytes_ops/contract.py:34
    assert                              //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 |                           assert result == bitwise_or                                                                          bytes_ops/contract.py:34
    frame_dig -6                        // load left#0 from parameters                   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0                    result = left ^ right                                                                                bytes_ops/contract.py:35
    frame_dig -5                        // load right#0 from parameters                  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0,right#0            result = left ^ right                                                                                bytes_ops/contract.py:35
    b^                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {b^}                      left ^ right                                                                                         bytes_ops/contract.py:35
                                        // virtual: store result#0 to l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result = left ^ right                                                                                bytes_ops/contract.py:35
                                        // virtual: load result#0 from l-stack (no copy) (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result == bitwise_xor                                                                                bytes_ops/contract.py:36
    frame_dig -2                        // load bitwise_xor#0 from parameters            (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0,bitwise_xor#0    result == bitwise_xor                                                                                bytes_ops/contract.py:36
    ==                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {==}                      result == bitwise_xor                                                                                bytes_ops/contract.py:36
                                        // virtual: store tmp%2#0 to l-stack (no copy)   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%2#0                   result == bitwise_xor                                                                                bytes_ops/contract.py:36
                                        // virtual: load tmp%2#0 from l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%2#0                   assert result == bitwise_xor                                                                         bytes_ops/contract.py:36
    assert                              //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 |                           assert result == bitwise_xor                                                                         bytes_ops/contract.py:36
    frame_dig -6                        // load left#0 from parameters                   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0                    result = left & right                                                                                bytes_ops/contract.py:37
    frame_dig -5                        // load right#0 from parameters                  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | left#0,right#0            result = left & right                                                                                bytes_ops/contract.py:37
    b&                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {b&}                      left & right                                                                                         bytes_ops/contract.py:37
                                        // virtual: store result#0 to l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result = left & right                                                                                bytes_ops/contract.py:37
                                        // virtual: load result#0 from l-stack (no copy) (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0                  result == bitwise_and                                                                                bytes_ops/contract.py:38
    frame_dig -1                        // load bitwise_and#0 from parameters            (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | result#0,bitwise_and#0    result == bitwise_and                                                                                bytes_ops/contract.py:38
    ==                                  //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | {==}                      result == bitwise_and                                                                                bytes_ops/contract.py:38
                                        // virtual: store tmp%3#0 to l-stack (no copy)   (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%3#0                   result == bitwise_and                                                                                bytes_ops/contract.py:38
                                        // virtual: load tmp%3#0 from l-stack (no copy)  (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 | tmp%3#0                   assert result == bitwise_and                                                                         bytes_ops/contract.py:38
    assert                              //                                               (洧도) left#0,right#0,concat#0,bitwise_or#0,bitwise_xor#0,bitwise_and#0 |                           assert result == bitwise_and                                                                         bytes_ops/contract.py:38
    retsub                              //


// test_cases.bytes_ops.contract.do_augmented_assignment_ops(seed: bytes) -> void:
do_augmented_assignment_ops:
    proto 1 0                           //                                               (洧도) seed#0 |                                                                                     @subroutine\ndef do_augmented_assignment_ops(seed: Bytes) -> None:                                   bytes_ops/contract.py:41-42

do_augmented_assignment_ops_block@0:
    frame_dig -1                        // load seed#0 from parameters                   (洧도) seed#0 | seed#0                                                                              seed &= Bytes.from_hex("00")                                                                         bytes_ops/contract.py:43
    byte 0x00                           //                                               (洧도) seed#0 | seed#0,0x00                                                                         Bytes.from_hex("00")                                                                                 bytes_ops/contract.py:43
    b&                                  //                                               (洧도) seed#0 | {b&}                                                                                seed &= Bytes.from_hex("00")                                                                         bytes_ops/contract.py:43
    dup
    frame_bury -1                       // store seed#0 to parameters (copy)             (洧도) seed#0 | seed#0                                                                              seed &= Bytes.from_hex("00")                                                                         bytes_ops/contract.py:43
    byte 0x00                           //                                               (洧도) seed#0 | seed#0,0x00                                                                         Bytes.from_hex("00")                                                                                 bytes_ops/contract.py:45
    ==                                  //                                               (洧도) seed#0 | {==}                                                                                seed == Bytes.from_hex("00")                                                                         bytes_ops/contract.py:45
                                        // virtual: store tmp%0#0 to l-stack (no copy)   (洧도) seed#0 | tmp%0#0                                                                             seed == Bytes.from_hex("00")                                                                         bytes_ops/contract.py:45
                                        // virtual: load tmp%0#0 from l-stack (no copy)  (洧도) seed#0 | tmp%0#0                                                                             assert seed == Bytes.from_hex("00")                                                                  bytes_ops/contract.py:45
    assert                              //                                               (洧도) seed#0 |                                                                                     assert seed == Bytes.from_hex("00")                                                                  bytes_ops/contract.py:45
    frame_dig -1                        // load seed#0 from parameters                   (洧도) seed#0 | seed#0                                                                              seed |= five                                                                                         bytes_ops/contract.py:49
    byte 0x05                           //                                               (洧도) seed#0 | seed#0,0x05                                                                         Bytes.from_hex("05")                                                                                 bytes_ops/contract.py:47
    b|                                  //                                               (洧도) seed#0 | {b|}                                                                                seed |= five                                                                                         bytes_ops/contract.py:49
    dup
    frame_bury -1                       // store seed#0 to parameters (copy)             (洧도) seed#0 | seed#0                                                                              seed |= five                                                                                         bytes_ops/contract.py:49
    byte 0x05                           //                                               (洧도) seed#0 | seed#0,0x05                                                                         Bytes.from_hex("05")                                                                                 bytes_ops/contract.py:47
    ==                                  //                                               (洧도) seed#0 | {==}                                                                                seed == five                                                                                         bytes_ops/contract.py:51
                                        // virtual: store tmp%1#0 to l-stack (no copy)   (洧도) seed#0 | tmp%1#0                                                                             seed == five                                                                                         bytes_ops/contract.py:51
                                        // virtual: load tmp%1#0 from l-stack (no copy)  (洧도) seed#0 | tmp%1#0                                                                             assert seed == five                                                                                  bytes_ops/contract.py:51
    assert                              //                                               (洧도) seed#0 |                                                                                     assert seed == five                                                                                  bytes_ops/contract.py:51
    frame_dig -1                        // load seed#0 from parameters                   (洧도) seed#0 | seed#0                                                                              seed ^= sixteen                                                                                      bytes_ops/contract.py:55
    byte 0x10                           //                                               (洧도) seed#0 | seed#0,0x10                                                                         Bytes.from_hex("10")                                                                                 bytes_ops/contract.py:53
    b^                                  //                                               (洧도) seed#0 | {b^}                                                                                seed ^= sixteen                                                                                      bytes_ops/contract.py:55
    dup
    frame_bury -1                       // store seed#0 to parameters (copy)             (洧도) seed#0 | seed#0                                                                              seed ^= sixteen                                                                                      bytes_ops/contract.py:55
    byte 0x15                           //                                               (洧도) seed#0 | seed#0,0x15                                                                         Bytes.from_hex("15")                                                                                 bytes_ops/contract.py:57
    ==                                  //                                               (洧도) seed#0 | {==}                                                                                seed == Bytes.from_hex("15")                                                                         bytes_ops/contract.py:57
                                        // virtual: store tmp%2#0 to l-stack (no copy)   (洧도) seed#0 | tmp%2#0                                                                             seed == Bytes.from_hex("15")                                                                         bytes_ops/contract.py:57
                                        // virtual: load tmp%2#0 from l-stack (no copy)  (洧도) seed#0 | tmp%2#0                                                                             assert seed == Bytes.from_hex("15")                                                                  bytes_ops/contract.py:57
    assert                              //                                               (洧도) seed#0 |                                                                                     assert seed == Bytes.from_hex("15")                                                                  bytes_ops/contract.py:57
    frame_dig -1                        // load seed#0 from parameters                   (洧도) seed#0 | seed#0                                                                              seed ^= five                                                                                         bytes_ops/contract.py:59
    byte 0x05                           //                                               (洧도) seed#0 | seed#0,0x05                                                                         Bytes.from_hex("05")                                                                                 bytes_ops/contract.py:47
    b^                                  //                                               (洧도) seed#0 | {b^}                                                                                seed ^= five                                                                                         bytes_ops/contract.py:59
    dup
    frame_bury -1                       // store seed#0 to parameters (copy)             (洧도) seed#0 | seed#0                                                                              seed ^= five                                                                                         bytes_ops/contract.py:59
    byte 0x10                           //                                               (洧도) seed#0 | seed#0,0x10                                                                         Bytes.from_hex("10")                                                                                 bytes_ops/contract.py:53
    ==                                  //                                               (洧도) seed#0 | {==}                                                                                seed == sixteen                                                                                      bytes_ops/contract.py:61
                                        // virtual: store tmp%3#0 to l-stack (no copy)   (洧도) seed#0 | tmp%3#0                                                                             seed == sixteen                                                                                      bytes_ops/contract.py:61
                                        // virtual: load tmp%3#0 from l-stack (no copy)  (洧도) seed#0 | tmp%3#0                                                                             assert seed == sixteen                                                                               bytes_ops/contract.py:61
    assert                              //                                               (洧도) seed#0 |                                                                                     assert seed == sixteen                                                                               bytes_ops/contract.py:61
    frame_dig -1                        // load seed#0 from parameters                   (洧도) seed#0 | seed#0                                                                              seed += five                                                                                         bytes_ops/contract.py:63
    byte 0x05                           //                                               (洧도) seed#0 | seed#0,0x05                                                                         Bytes.from_hex("05")                                                                                 bytes_ops/contract.py:47
    concat                              //                                               (洧도) seed#0 | {concat}                                                                            seed += five                                                                                         bytes_ops/contract.py:63
    dup
    frame_bury -1                       // store seed#0 to parameters (copy)             (洧도) seed#0 | seed#0                                                                              seed += five                                                                                         bytes_ops/contract.py:63
    byte 0x1005                         //                                               (洧도) seed#0 | seed#0,0x1005                                                                       Bytes.from_hex("1005")                                                                               bytes_ops/contract.py:65
    ==                                  //                                               (洧도) seed#0 | {==}                                                                                seed == Bytes.from_hex("1005")                                                                       bytes_ops/contract.py:65
                                        // virtual: store tmp%4#0 to l-stack (no copy)   (洧도) seed#0 | tmp%4#0                                                                             seed == Bytes.from_hex("1005")                                                                       bytes_ops/contract.py:65
                                        // virtual: load tmp%4#0 from l-stack (no copy)  (洧도) seed#0 | tmp%4#0                                                                             assert seed == Bytes.from_hex("1005")                                                                bytes_ops/contract.py:65
    assert                              //                                               (洧도) seed#0 |                                                                                     assert seed == Bytes.from_hex("1005")                                                                bytes_ops/contract.py:65
    retsub                              //

