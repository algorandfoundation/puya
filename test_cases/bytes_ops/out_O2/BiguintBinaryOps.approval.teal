#pragma version 10

test_cases.bytes_ops.contract.BiguintBinaryOps.approval_program:
    bytecblock 0x05 0xff 0x0f 0x00
    bytec_1 // 0xff
    bytec_2 // 0x0f
    pushbytes 0xff0f
    bytec_1 // 0xff
    pushbytes 0xf0
    bytec_2 // 0x0f
    callsub do_some_ops
    bytec_1 // 0xff
    callsub do_augmented_assignment_ops
    pushint 1 // 1
    return


// test_cases.bytes_ops.contract.do_some_ops(left: bytes, right: bytes, concat: bytes, bitwise_or: bytes, bitwise_xor: bytes, bitwise_and: bytes) -> void:
do_some_ops:
    proto 6 0
    frame_dig -6
    frame_dig -5
    concat
    frame_dig -4
    ==
    assert
    frame_dig -6
    frame_dig -5
    b|
    frame_dig -3
    ==
    assert
    frame_dig -6
    frame_dig -5
    b^
    frame_dig -2
    ==
    assert
    frame_dig -6
    frame_dig -5
    b&
    frame_dig -1
    ==
    assert
    retsub


// test_cases.bytes_ops.contract.do_augmented_assignment_ops(seed: bytes) -> void:
do_augmented_assignment_ops:
    proto 1 0
    frame_dig -1
    bytec_3 // 0x00
    b&
    dup
    frame_bury -1
    bytec_3 // 0x00
    ==
    assert
    frame_dig -1
    bytec_0 // 0x05
    b|
    dup
    frame_bury -1
    bytec_0 // 0x05
    ==
    assert
    frame_dig -1
    pushbytes 0x10
    b^
    dup
    frame_bury -1
    pushbytes 0x15
    ==
    assert
    frame_dig -1
    bytec_0 // 0x05
    b^
    dup
    frame_bury -1
    pushbytes 0x10
    ==
    assert
    frame_dig -1
    bytec_0 // 0x05
    concat
    dup
    frame_bury -1
    pushbytes 0x1005
    ==
    assert
    retsub
