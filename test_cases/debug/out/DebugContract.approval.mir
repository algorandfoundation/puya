// Op                                                                          Stack (out)
// test_cases.debug.contract.DebugContract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                               tmp%0#0
    return


// test_cases.debug.contract.DebugContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // debug/contract.py:4
    // class DebugContract(arc4.ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // debug/contract.py:4
    // class DebugContract(arc4.ARC4Contract):
    txn NumAppArgs                                                             tmp%0#0
    bz __puya_arc4_router___bare_routing@5
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // debug/contract.py:4
    // class DebugContract(arc4.ARC4Contract):
    txna ApplicationArgs 0                                                     tmp%2#0
    method test(uint64,uint64,uint64)uint64                                    tmp%2#0,Method(test(uint64,uint64,uint64)uint64)
    l-load tmp%2#0 1                                                           Method(test(uint64,uint64,uint64)uint64),tmp%2#0
    match __puya_arc4_router___test_route@2
    int 0                                                                      0
    retsub                                                                     0

__puya_arc4_router___test_route@2:
    // debug/contract.py:5
    // @arc4.abimethod
    txn OnCompletion                                                           tmp%3#0
    !                                                                          tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                          tmp%5#0
    assert // can only call when not creating
    // debug/contract.py:4
    // class DebugContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                     tmp%7#0
    btoi                                                                       tmp%8#0
    txna ApplicationArgs 2                                                     tmp%8#0,tmp%9#0
    btoi                                                                       tmp%8#0,tmp%10#0
    txna ApplicationArgs 3                                                     tmp%8#0,tmp%10#0,tmp%11#0
    btoi                                                                       tmp%8#0,tmp%10#0,tmp%12#0
    // debug/contract.py:5
    // @arc4.abimethod
    l-load tmp%8#0 2                                                           tmp%10#0,tmp%12#0,tmp%8#0
    l-load tmp%10#0 2                                                          tmp%12#0,tmp%8#0,tmp%10#0
    l-load tmp%12#0 2                                                          tmp%8#0,tmp%10#0,tmp%12#0
    callsub test                                                               to_encode%0#0
    itob                                                                       val_as_bytes%0#0
    byte 0x151f7c75                                                            val_as_bytes%0#0,0x151f7c75
    l-load val_as_bytes%0#0 1                                                  0x151f7c75,val_as_bytes%0#0
    concat                                                                     tmp%13#0
    log
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___bare_routing@5:
    // debug/contract.py:4
    // class DebugContract(arc4.ARC4Contract):
    txn OnCompletion                                                           tmp%14#0
    bnz __puya_arc4_router___after_if_else@9
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@6

__puya_arc4_router_____algopy_default_create@6:
    txn ApplicationID                                                          tmp%15#0
    !                                                                          tmp%16#0
    assert // can only call when creating
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___after_if_else@9:
    // debug/contract.py:4
    // class DebugContract(arc4.ARC4Contract):
    int 0                                                                      0
    retsub                                                                     0


// test_cases.debug.contract.DebugContract.test(x: uint64, y: uint64, z: uint64) -> uint64:
test:                                                                          (洧도) x#0,y#0,z#0 |
    // debug/contract.py:5-6
    // @arc4.abimethod
    // def test(self, x: UInt64, y: UInt64, z: UInt64) -> UInt64:
    proto 3 1                                                                  (洧도) x#0,y#0,z#0 |
    allocate 4 to stack                                                        (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10 |

test_block@0:                                                                  (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10 |
    // debug/contract.py:8
    // a = x * TemplateVar[UInt64]("A_MULT")
    p-load x#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10 | x#0 (copy)
    int TMPL_A_MULT                                                            (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10 | x#0 (copy),TMPL_A_MULT
    *                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10 | a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0 |
    // debug/contract.py:9
    // b = x + y
    p-load x#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0 | x#0 (copy)
    p-load y#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0 | x#0 (copy),y#0 (copy)
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0 | b#0
    l-store-copy b#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0 | b#0,b#0
    f-store b#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0 | b#0
    // debug/contract.py:10
    // c = b * z
    l-load-copy b#0 0                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0 | b#0,b#0 (copy)
    p-load z#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0 | b#0,b#0 (copy),z#0 (copy)
    *                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0 | b#0,c#0
    l-store-copy c#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0 | b#0,c#0,c#0
    f-store c#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,c#0
    // debug/contract.py:11
    // if b < c:
    l-load b#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | c#0,b#0
    l-load c#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,c#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%0#0
    bz test_else_body@2                                                        (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@1                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@1:                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:12
    // a = a + y
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    p-load y#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,y#0 (copy)
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    b test_after_if_else@11                                                    (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_else_body@2:                                                              (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:13
    // elif a < c:
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-load c#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%1#0
    bz test_else_body@4                                                        (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@3                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@3:                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:14
    // a = a + z
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    p-load z#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,z#0 (copy)
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    b test_after_if_else@10                                                    (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_else_body@4:                                                              (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:15
    // elif b < a:
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,a#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%2#0
    bz test_else_body@6                                                        (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@5                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@5:                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:16
    // a = a * 3
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    int 3                                                                      (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,3
    *                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    b test_after_if_else@10                                                    (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_else_body@6:                                                              (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:17
    // elif b > a:
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    l-store-copy b#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,b#0 (copy)
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,b#0 (copy),a#0
    >                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,tmp%3#0
    l-load b#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%3#0,b#10
    f-store b#10                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%3#0
    l-load tmp%3#0 0                                                           (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%3#0
    bz test_after_if_else@8                                                    (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@7                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@7:                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:18
    // b = b + a
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,a#0
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#10
    f-store b#10                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@8                           (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@8:                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    f-load b#10                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    f-store b#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@10                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@10:                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@11                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@11:                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:20
    // if a + b < c:
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,b#0
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%4#0
    f-load c#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%4#0,c#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%5#0
    bz test_else_body@13                                                       (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@12                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@12:                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:21
    // a *= some_func(a, y)
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    l-store-copy a#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy)
    p-load y#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy),y#0 (copy)
    callsub some_func                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%6#0
    l-load a#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%6#0,a#0
    l-load tmp%6#0 1                                                           (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%6#0
    *                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    b test_after_if_else@14                                                    (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_else_body@13:                                                             (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:23
    // b *= some_func(b, z)
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    l-store-copy b#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,b#0 (copy)
    p-load z#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,b#0 (copy),z#0 (copy)
    callsub some_func                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,tmp%7#0
    l-load b#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%7#0,b#0
    l-load tmp%7#0 1                                                           (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,tmp%7#0
    *                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    f-store b#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@14                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@14:                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:25
    // bee = itoa(b)
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    l-store-copy b#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,b#0 (copy)
    callsub itoa                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,bee#0
    f-store bee#0                                                              (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0
    // debug/contract.py:26
    // c = a + b
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | b#0,a#0
    l-store-copy a#0 1                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,b#0,a#0 (copy)
    l-load b#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy),b#0
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0
    l-store-copy c#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0,c#0
    f-store c#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0
    // debug/contract.py:27
    // cea = itoa(c)
    l-load-copy c#0 0                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0,c#0 (copy)
    callsub itoa                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0,cea#0
    f-store cea#0                                                              (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0
    // debug/contract.py:29
    // if a < c:
    l-load-copy a#0 1                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0,a#0 (copy)
    l-load c#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy),c#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%8#0
    l-load a#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%8#0,a#30
    f-store a#30                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%8#0
    l-load tmp%8#0 0                                                           (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%8#0
    bz test_after_if_else@16                                                   (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@15                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@15:                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:30
    // a += c
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-load c#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,c#0
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#30
    f-store a#30                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@16                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@16:                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    f-load a#30                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    l-store-copy a#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    // debug/contract.py:31
    // if a < b:
    l-load-copy a#0 0                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy)
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy),b#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%9#0
    l-load a#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%9#0,a#30
    f-store a#30                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%9#0
    l-load tmp%9#0 0                                                           (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%9#0
    bz test_after_if_else@18                                                   (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@17                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@17:                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:32
    // a += b
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,b#0
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#30
    f-store a#30                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@18                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@18:                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    f-load a#30                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    l-store-copy a#0 0                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0
    f-store a#0                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    // debug/contract.py:33
    // if a < b + c:
    f-load b#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,b#0
    f-load c#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,b#0,c#0
    +                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%10#0
    l-load-copy a#0 1                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%10#0,a#0 (copy)
    l-load tmp%10#0 1                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy),tmp%10#0
    <                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%11#0
    l-load a#0 1                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%11#0,a#30
    f-store a#30                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%11#0
    l-load tmp%11#0 0                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | tmp%11#0
    bz test_after_if_else@20                                                   (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_if_body@19                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_if_body@19:                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // debug/contract.py:34
    // a = a * z
    f-load a#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    p-load z#0                                                                 (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,z#0 (copy)
    *                                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#30
    f-store a#30                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    // Implicit fall through to test_after_if_else@20                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |

test_after_if_else@20:                                                         (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 |
    f-load a#30                                                                (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    // debug/contract.py:36
    // aye = itoa(a)
    l-load-copy a#0 0                                                          (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,a#0 (copy)
    callsub itoa                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,aye#0
    // debug/contract.py:37
    // log(aye, bee, cea, sep=" ")
    byte " "                                                                   (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,aye#0," "
    concat                                                                     (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%12#0
    f-load bee#0                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%12#0,bee#0
    concat                                                                     (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%13#0
    byte " "                                                                   (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%13#0," "
    concat                                                                     (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%14#0
    f-load cea#0                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%14#0,cea#0
    concat                                                                     (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0,tmp%15#0
    log                                                                        (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    // debug/contract.py:39
    // return a
    l-load a#0 0                                                               (洧도) x#0,y#0,z#0 | (洧뎽) bee#0,cea#0,a#30,b#10,a#0,b#0,c#0 | a#0
    retsub                                                                     a#0


// test_cases.debug.contract.some_func(a: uint64, b: uint64) -> uint64:
some_func:                                                                     (洧도) a#0,b#0 |
    // debug/contract.py:42-43
    // @subroutine
    // def some_func(a: UInt64, b: UInt64) -> UInt64:
    proto 2 1                                                                  (洧도) a#0,b#0 |

some_func_block@0:                                                             (洧도) a#0,b#0 |
    // debug/contract.py:44
    // a += b
    p-load a#0                                                                 (洧도) a#0,b#0 | a#0 (copy)
    p-load b#0                                                                 (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
    +                                                                          (洧도) a#0,b#0 | a#0
    p-store a#0                                                                (洧도) a#0,b#0 |
    // debug/contract.py:45
    // b *= a
    p-load b#0                                                                 (洧도) a#0,b#0 | b#0 (copy)
    p-load a#0                                                                 (洧도) a#0,b#0 | b#0 (copy),a#0 (copy)
    *                                                                          (洧도) a#0,b#0 | b#0
    p-store b#0                                                                (洧도) a#0,b#0 |
    // debug/contract.py:46
    // a += b
    p-load a#0                                                                 (洧도) a#0,b#0 | a#0 (copy)
    p-load b#0                                                                 (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
    +                                                                          (洧도) a#0,b#0 | a#0
    p-store a#0                                                                (洧도) a#0,b#0 |
    // debug/contract.py:47
    // a *= 2
    p-load a#0                                                                 (洧도) a#0,b#0 | a#0 (copy)
    int 2                                                                      (洧도) a#0,b#0 | a#0 (copy),2
    *                                                                          (洧도) a#0,b#0 | a#0
    p-store a#0                                                                (洧도) a#0,b#0 |
    // debug/contract.py:48
    // x = a + b
    p-load a#0                                                                 (洧도) a#0,b#0 | a#0 (copy)
    p-load b#0                                                                 (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
    +                                                                          (洧도) a#0,b#0 | x#0
    // debug/contract.py:49
    // y = a * b
    p-load a#0                                                                 (洧도) a#0,b#0 | x#0,a#0 (copy)
    p-load b#0                                                                 (洧도) a#0,b#0 | x#0,a#0 (copy),b#0 (copy)
    *                                                                          (洧도) a#0,b#0 | x#0,y#0
    // debug/contract.py:50
    // return x if x < y else y
    l-load-copy x#0 1                                                          (洧도) a#0,b#0 | x#0,y#0,x#0 (copy)
    l-load-copy y#0 1                                                          (洧도) a#0,b#0 | x#0,y#0,x#0 (copy),y#0 (copy)
    <                                                                          (洧도) a#0,b#0 | x#0,y#0,tmp%0#0
    l-load y#0 1                                                               (洧도) a#0,b#0 | x#0,tmp%0#0,y#0
    l-load x#0 2                                                               (洧도) a#0,b#0 | tmp%0#0,y#0,x#0
    l-load tmp%0#0 2                                                           (洧도) a#0,b#0 | y#0,x#0,tmp%0#0
    select                                                                     (洧도) a#0,b#0 | tmp%1#0
    retsub                                                                     tmp%1#0


// test_cases.debug.contract.itoa(i: uint64) -> bytes:
itoa:                                                                          (洧도) i#0 |
    // debug/contract.py:53-54
    // @subroutine
    // def itoa(i: UInt64) -> Bytes:
    proto 1 1                                                                  (洧도) i#0 |

itoa_block@0:                                                                  (洧도) i#0 |
    // debug/contract.py:57
    // if i < radix:
    p-load i#0                                                                 (洧도) i#0 | i#0 (copy)
    // debug/contract.py:56
    // radix = digits.length
    int 10                                                                     (洧도) i#0 | i#0 (copy),10
    // debug/contract.py:57
    // if i < radix:
    <                                                                          (洧도) i#0 | tmp%0#0
    bz itoa_after_if_else@2                                                    (洧도) i#0 |
    // Implicit fall through to itoa_if_body@1                                 (洧도) i#0 |

itoa_if_body@1:                                                                (洧도) i#0 |
    // debug/contract.py:55
    // digits = Bytes(b"0123456789")
    byte 0x30313233343536373839                                                (洧도) i#0 | 0x30313233343536373839
    // debug/contract.py:58
    // return digits[i]
    p-load i#0                                                                 (洧도) i#0 | 0x30313233343536373839,i#0 (copy)
    int 1                                                                      (洧도) i#0 | 0x30313233343536373839,i#0 (copy),1
    extract3                                                                   (洧도) i#0 | tmp%1#0
    retsub                                                                     tmp%1#0

itoa_after_if_else@2:                                                          (洧도) i#0 |
    // debug/contract.py:59
    // return itoa(i // radix) + digits[i % radix]
    p-load i#0                                                                 (洧도) i#0 | i#0 (copy)
    // debug/contract.py:56
    // radix = digits.length
    int 10                                                                     (洧도) i#0 | i#0 (copy),10
    // debug/contract.py:59
    // return itoa(i // radix) + digits[i % radix]
    /                                                                          (洧도) i#0 | tmp%2#0
    callsub itoa                                                               (洧도) i#0 | tmp%3#0
    p-load i#0                                                                 (洧도) i#0 | tmp%3#0,i#0 (copy)
    // debug/contract.py:56
    // radix = digits.length
    int 10                                                                     (洧도) i#0 | tmp%3#0,i#0 (copy),10
    // debug/contract.py:59
    // return itoa(i // radix) + digits[i % radix]
    %                                                                          (洧도) i#0 | tmp%3#0,tmp%4#0
    // debug/contract.py:55
    // digits = Bytes(b"0123456789")
    byte 0x30313233343536373839                                                (洧도) i#0 | tmp%3#0,tmp%4#0,0x30313233343536373839
    // debug/contract.py:59
    // return itoa(i // radix) + digits[i % radix]
    l-load tmp%4#0 1                                                           (洧도) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0
    int 1                                                                      (洧도) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0,1
    extract3                                                                   (洧도) i#0 | tmp%3#0,tmp%5#0
    l-load tmp%3#0 1                                                           (洧도) i#0 | tmp%5#0,tmp%3#0
    l-load tmp%5#0 1                                                           (洧도) i#0 | tmp%3#0,tmp%5#0
    concat                                                                     (洧도) i#0 | tmp%6#0
    retsub                                                                     tmp%6#0


