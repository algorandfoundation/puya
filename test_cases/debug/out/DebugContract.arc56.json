{
    "name": "DebugContract",
    "structs": {},
    "methods": [
        {
            "name": "test",
            "args": [
                {
                    "type": "uint64",
                    "name": "x"
                },
                {
                    "type": "uint64",
                    "name": "y"
                },
                {
                    "type": "uint64",
                    "name": "z"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        43
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        46
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAQoBJgIKMDEyMzQ1Njc4OQEgMRtBADCABFNXS/82GgCOAQABADEZFEQxGEQ2GgEXNhoCFzYaAxeIAGYWgAQVH3x1TFCwIkMxGUD/2DEYFEQiQ4oCAYv+i/8IjP6L/4v+C4z/i/6L/whJjP6BAgtJjP6L/wiL/ov/C0oMTE4CTYmKAQGL/yMMQQAGKIv/IliJi/8jCoj/6Yv/IxgoTCJYUImKAwGBAEmAAEmL/SQLi/2L/ghHAov/C0lOAgxBAJaLBIv+CIwEiwSLBQiLBgxBAHaLBEmL/oj/eQuMBIsFSYj/nowAiwRJTwIISYwGSYj/j4wBSwENTIwCQQAHiwSLBgiMAosCSYwESYsFDEyMAkEAB4sEiwUIjAKLAkmMBIsFiwYISwENTIwCQQAHiwSL/wuMAosCSYj/RylQiwBQKVCLAVCwjACJiwVJi/+I/wMLjAVC/4eLBIsGDEEACosEi/8IjARC/1+LBYsEDEEACosEgQMLjARC/02LBUmLBA1MjANBAAeLBYsECIwDiwOMBUL/Mw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {
        "A_MULT": {
            "type": "AVMUint64",
            "value": "AAAAAAAAAAE="
        }
    }
}