{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AACK;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AADL;;AAAA;;;;;;;;;AACA;;;;;;;;AAEQ;;AAAQ;AAAJ;AACJ;;AAAA;;AAAI;AAAJ;;AACA;;AAAI;AAAJ;AAAA;;AACG;AAAX;;;AACY;;AAAA;;AAAI;AAAJ;;AAQD;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAIJ;;AAAA;AAAM;;;AAAN;;AACA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;;AACA;AAAM;;;AAAN;;AAEG;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACD;AAAA;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAI;;;;;AAER;AAAM;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AAEA;;AAAA;AAhBS;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAVC;;AAAA;;AAAA;AAAb;;;AACY;;AAAA;;AAAI;AAAJ;;;;;AACC;;AAAA;;AAAA;AAAb;;;AACY;;AAAQ;;AAAJ;AAAJ;;;;;AACC;;AAAA;AAAA;;AAAA;;;;AAAb;;;AACY;;AAAA;;AAAI;;;;;;;;;;AAwBhB;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;;AAAL;;AAAA;;AACA;;AAAI;AACJ;;AAAA;;AAAI;AACQ;AAAA;AAAL;AAAA;;AAAA;AAAP;AAGJ;;;AAIO;;AADK;AACL;AAAP;;;AAFa;AAGE;;AAAA;AAAA;AAAP;AACQ;;AAHJ;AAGI;AAAL;;;AAA0B;;AAHzB;AAGyB;AAJxB;AAIiB;AAAA;AAAA;AAAnB;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 10 0 TMPL_A_MULT"
    },
    "7": {
      "op": "bytecblock \" \" 0x30313233343536373839"
    },
    "22": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "24": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "27": {
      "op": "pushbytes 0x53574bff // method \"test(uint64,uint64,uint64)uint64\""
    },
    "33": {
      "op": "txna ApplicationArgs 0"
    },
    "36": {
      "op": "match main_test_route@3"
    },
    "40": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "41": {
      "op": "return"
    },
    "42": {
      "block": "main_test_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "44": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "45": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "46": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "48": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "49": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "52": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "53": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "56": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "57": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "60": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "61": {
      "callsub": "test_cases.debug.contract.DebugContract.test",
      "op": "callsub test",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "64": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "65": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "71": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "72": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "73": {
      "op": "log",
      "stack_out": []
    },
    "74": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "return"
    },
    "76": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "78": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "81": {
      "op": "txn ApplicationID"
    },
    "83": {
      "op": "!"
    },
    "84": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "85": {
      "op": "intc_0 // 1"
    },
    "86": {
      "op": "return"
    },
    "87": {
      "subroutine": "test_cases.debug.contract.DebugContract.test",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64",
        "z#0": "uint64"
      },
      "block": "test",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "90": {
      "op": "intc_2 // 0",
      "stack_out": [
        "bee#0"
      ]
    },
    "91": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "92": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30"
      ]
    },
    "94": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ]
    },
    "95": {
      "op": "frame_dig -3",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)"
      ]
    },
    "97": {
      "op": "intc_3 // TMPL_A_MULT",
      "defined_out": [
        "TMPL_A_MULT",
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ]
    },
    "98": {
      "op": "*",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0"
      ]
    },
    "99": {
      "op": "frame_dig -3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "101": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "103": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0"
      ]
    },
    "104": {
      "op": "dupn 2",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "106": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "108": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "c#0"
      ]
    },
    "109": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "c#0",
        "c#0"
      ]
    },
    "110": {
      "op": "cover 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ]
    },
    "112": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "bz test_else_body@2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "116": {
      "op": "frame_dig 4"
    },
    "118": {
      "op": "frame_dig -2"
    },
    "120": {
      "op": "+"
    },
    "121": {
      "op": "frame_bury 4"
    },
    "123": {
      "block": "test_after_if_else@11",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "125": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "127": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0"
      ]
    },
    "128": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0",
        "c#0"
      ]
    },
    "130": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ]
    },
    "131": {
      "op": "bz test_else_body@13",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "134": {
      "op": "frame_dig 4"
    },
    "136": {
      "op": "dup"
    },
    "137": {
      "op": "frame_dig -2"
    },
    "139": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func"
    },
    "142": {
      "op": "*"
    },
    "143": {
      "op": "frame_bury 4"
    },
    "145": {
      "block": "test_after_if_else@14",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "147": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "148": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "bee#0"
      ]
    },
    "151": {
      "op": "frame_bury 0",
      "defined_out": [
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "153": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "155": {
      "op": "dup"
    },
    "156": {
      "op": "uncover 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "158": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "159": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0"
      ]
    },
    "160": {
      "op": "frame_bury 6",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "162": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "163": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "cea#0"
      ]
    },
    "166": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "168": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ]
    },
    "170": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%8#0"
      ]
    },
    "171": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0",
        "a#30"
      ]
    },
    "172": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0"
      ]
    },
    "174": {
      "op": "bz test_after_if_else@16",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "177": {
      "op": "frame_dig 4"
    },
    "179": {
      "op": "frame_dig 6"
    },
    "181": {
      "op": "+"
    },
    "182": {
      "op": "frame_bury 2"
    },
    "184": {
      "block": "test_after_if_else@16",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "186": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "187": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "189": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "190": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "192": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%9#0"
      ]
    },
    "193": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0",
        "a#30"
      ]
    },
    "194": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0"
      ]
    },
    "196": {
      "op": "bz test_after_if_else@18",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "199": {
      "op": "frame_dig 4"
    },
    "201": {
      "op": "frame_dig 5"
    },
    "203": {
      "op": "+"
    },
    "204": {
      "op": "frame_bury 2"
    },
    "206": {
      "block": "test_after_if_else@18",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "208": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "209": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "211": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "213": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "215": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%10#0"
      ]
    },
    "216": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "c#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%10#0",
        "a#0 (copy)"
      ]
    },
    "218": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%11#0"
      ]
    },
    "219": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0",
        "a#30"
      ]
    },
    "220": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "222": {
      "op": "bz test_after_if_else@20",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "225": {
      "op": "frame_dig 4"
    },
    "227": {
      "op": "frame_dig -1"
    },
    "229": {
      "op": "*"
    },
    "230": {
      "op": "frame_bury 2"
    },
    "232": {
      "block": "test_after_if_else@20",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "234": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "235": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0"
      ]
    },
    "238": {
      "op": "bytec_0 // \" \"",
      "defined_out": [
        "\" \"",
        "a#0",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0",
        "\" \""
      ]
    },
    "239": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%12#0"
      ]
    },
    "240": {
      "op": "frame_dig 0",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%12#0",
        "bee#0"
      ]
    },
    "242": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0"
      ]
    },
    "243": {
      "op": "bytec_0 // \" \"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0",
        "\" \""
      ]
    },
    "244": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%14#0"
      ]
    },
    "245": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%14#0",
        "cea#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%15#0"
      ]
    },
    "248": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "249": {
      "op": "frame_bury 0"
    },
    "251": {
      "retsub": true,
      "op": "retsub"
    },
    "252": {
      "block": "test_else_body@13",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "254": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "255": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "257": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%7#0"
      ]
    },
    "260": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "261": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "263": {
      "op": "b test_after_if_else@14"
    },
    "266": {
      "block": "test_else_body@2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "268": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "270": {
      "op": "<",
      "defined_out": [
        "a#0",
        "c#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%1#0"
      ]
    },
    "271": {
      "op": "bz test_else_body@4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "274": {
      "op": "frame_dig 4"
    },
    "276": {
      "op": "frame_dig -1"
    },
    "278": {
      "op": "+"
    },
    "279": {
      "op": "frame_bury 4"
    },
    "281": {
      "op": "b test_after_if_else@11"
    },
    "284": {
      "block": "test_else_body@4",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "286": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "288": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%2#0"
      ]
    },
    "289": {
      "op": "bz test_else_body@6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "292": {
      "op": "frame_dig 4"
    },
    "294": {
      "op": "pushint 3 // 3"
    },
    "296": {
      "op": "*"
    },
    "297": {
      "op": "frame_bury 4"
    },
    "299": {
      "op": "b test_after_if_else@11"
    },
    "302": {
      "block": "test_else_body@6",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "304": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "305": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "a#0"
      ]
    },
    "307": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%3#0"
      ]
    },
    "308": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "b#0",
        "b#10",
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0",
        "b#10"
      ]
    },
    "309": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "b#10",
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0"
      ]
    },
    "311": {
      "op": "bz test_after_if_else@8",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "314": {
      "op": "frame_dig 5"
    },
    "316": {
      "op": "frame_dig 4"
    },
    "318": {
      "op": "+"
    },
    "319": {
      "op": "frame_bury 3"
    },
    "321": {
      "block": "test_after_if_else@8",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "323": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "325": {
      "op": "b test_after_if_else@11"
    },
    "328": {
      "subroutine": "test_cases.debug.contract.some_func",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "some_func",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "331": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "333": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "335": {
      "op": "+",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "336": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "338": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "340": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "342": {
      "op": "*",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "b#0"
      ]
    },
    "343": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "345": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "347": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "349": {
      "op": "+",
      "stack_out": [
        "a#0"
      ]
    },
    "350": {
      "op": "dup"
    },
    "351": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "353": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "2"
      ]
    },
    "355": {
      "op": "*",
      "stack_out": [
        "a#0"
      ]
    },
    "356": {
      "op": "dup"
    },
    "357": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "359": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "361": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "362": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ]
    },
    "364": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "366": {
      "op": "*",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0"
      ]
    },
    "367": {
      "op": "dup2",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "368": {
      "op": "<",
      "defined_out": [
        "tmp%0#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "tmp%0#0"
      ]
    },
    "369": {
      "op": "swap",
      "stack_out": [
        "x#0",
        "tmp%0#0",
        "y#0"
      ]
    },
    "370": {
      "op": "cover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%0#0"
      ]
    },
    "372": {
      "op": "select",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "373": {
      "retsub": true,
      "op": "retsub"
    },
    "374": {
      "subroutine": "test_cases.debug.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "377": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "379": {
      "op": "intc_1 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "380": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "381": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": []
    },
    "384": {
      "op": "bytec_1 // 0x30313233343536373839"
    },
    "385": {
      "op": "frame_dig -1"
    },
    "387": {
      "op": "intc_0 // 1"
    },
    "388": {
      "op": "extract3"
    },
    "389": {
      "retsub": true,
      "op": "retsub"
    },
    "390": {
      "block": "itoa_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "392": {
      "op": "intc_1 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "393": {
      "op": "/",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "394": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "397": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "399": {
      "op": "intc_1 // 10",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)",
        "10"
      ]
    },
    "400": {
      "op": "%",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "401": {
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "402": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "403": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "404": {
      "op": "extract3",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "405": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "406": {
      "retsub": true,
      "op": "retsub"
    }
  }
}