{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AACK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AADL;;AAAA;AAAA;;;;;;;AAqCA;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;;AAAL;;AAAA;;AACI;;AAAA;AACA;;AAAA;;AAAA;AACQ;AAAA;AAAL;AAAA;;AAAA;AAAP;AAGJ;;;AAIO;;AADK;AACL;AAAP;;;AAFa;AAGE;;AAAA;AAAA;AAAP;AACQ;;AAHJ;AAGI;AAAL;;;AAA0B;;AAHzB;AAGyB;AAJxB;AAIiB;AAAA;AAAA;AAAnB;AAAP;;;;;;;AArDC;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;AAEO;;AAAI;AAAJ;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AACD;AAAX;;;AACgB;;AAAA;;AAAA;AAAA;;AAQL;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAIE;;AAAA;AAAA;;;AAAA;;AACF;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AACE;AAAA;;;AAAA;;AAEH;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACD;AAAA;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;;;;AAAX;;;AACgB;;AAAA;;AAAA;;;;;AAEF;AAAA;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AA/BH;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBY;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAVC;;AAAA;;AAAA;AAAb;;;AACgB;;AAAA;;AAAA;AAAA;;;;;AACH;;AAAA;;AAAA;AAAb;;;AACgB;;AAAI;;AAAJ;AAAA;;;;;AACH;;AAAA;AAAA;;AAAA;;;;AAAb;;;AACgB;;AAAA;;AAAA;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 10 TMPL_A_MULT"
    },
    "6": {
      "op": "bytecblock 0x30313233343536373839 \" \""
    },
    "21": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "23": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "26": {
      "op": "pushbytes 0x53574bff // method \"test(uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test(uint64,uint64,uint64)uint64)"
      ],
      "stack_out": [
        "Method(test(uint64,uint64,uint64)uint64)"
      ]
    },
    "32": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "match main_test_route@3",
      "stack_out": []
    },
    "39": {
      "op": "err"
    },
    "40": {
      "block": "main_test_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "42": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "43": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "44": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "46": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "47": {
      "op": "b test"
    },
    "50": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "52": {
      "op": "!",
      "defined_out": [
        "not%tmp%7#0"
      ],
      "stack_out": [
        "not%tmp%7#0"
      ]
    },
    "53": {
      "op": "assert",
      "stack_out": []
    },
    "54": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "56": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "57": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "58": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "59": {
      "op": "return",
      "stack_out": []
    },
    "60": {
      "subroutine": "test_cases.debug.contract.some_func",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "some_func",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "63": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "65": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "67": {
      "op": "+",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "68": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "70": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "72": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "74": {
      "op": "*",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "b#0"
      ]
    },
    "75": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "77": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "79": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "81": {
      "op": "+",
      "stack_out": [
        "a#0"
      ]
    },
    "82": {
      "op": "dup"
    },
    "83": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "85": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "2"
      ]
    },
    "87": {
      "op": "*",
      "stack_out": [
        "a#0"
      ]
    },
    "88": {
      "op": "dup"
    },
    "89": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "91": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "93": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "94": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ]
    },
    "96": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "98": {
      "op": "*",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0"
      ]
    },
    "99": {
      "op": "dup2",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "100": {
      "op": "<",
      "defined_out": [
        "tmp%6#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "tmp%6#0"
      ]
    },
    "101": {
      "op": "swap",
      "stack_out": [
        "x#0",
        "tmp%6#0",
        "y#0"
      ]
    },
    "102": {
      "op": "cover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%6#0"
      ]
    },
    "104": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "105": {
      "retsub": true,
      "op": "retsub"
    },
    "106": {
      "subroutine": "test_cases.debug.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "109": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "111": {
      "op": "intc_1 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "112": {
      "op": "<",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "113": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": []
    },
    "116": {
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "117": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x30313233343536373839",
        "i#0 (copy)"
      ]
    },
    "119": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "i#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "i#0 (copy)",
        "1"
      ]
    },
    "120": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "121": {
      "retsub": true,
      "op": "retsub"
    },
    "122": {
      "block": "itoa_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "124": {
      "op": "intc_1 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "125": {
      "op": "/",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "126": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "129": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "131": {
      "op": "intc_1 // 10",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)",
        "10"
      ]
    },
    "132": {
      "op": "%",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "133": {
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "134": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "135": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "136": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "extract%1#0"
      ]
    },
    "137": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "138": {
      "retsub": true,
      "op": "retsub"
    },
    "139": {
      "subroutine": "test_cases.debug.contract.DebugContract.test[routing]",
      "params": {},
      "block": "test",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "stack_out": [
        "bee#0"
      ]
    },
    "141": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "142": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30"
      ]
    },
    "144": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ]
    },
    "145": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "148": {
      "op": "btoi",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0"
      ]
    },
    "149": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "x#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "152": {
      "op": "btoi",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0",
        "y#0"
      ]
    },
    "153": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0",
        "y#0",
        "y#0 (copy)"
      ]
    },
    "154": {
      "op": "uncover 2",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "y#0",
        "x#0"
      ]
    },
    "156": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "y#0",
        "x#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "159": {
      "op": "btoi",
      "defined_out": [
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "y#0",
        "x#0",
        "z#0"
      ]
    },
    "160": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "y#0",
        "x#0",
        "z#0",
        "z#0"
      ]
    },
    "161": {
      "op": "cover 3",
      "defined_out": [
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0"
      ]
    },
    "163": {
      "op": "dig 1",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "x#0 (copy)"
      ]
    },
    "165": {
      "op": "intc_2 // TMPL_A_MULT",
      "defined_out": [
        "TMPL_A_MULT",
        "x#0",
        "x#0 (copy)",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ]
    },
    "166": {
      "op": "*",
      "defined_out": [
        "a#0",
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "a#0"
      ]
    },
    "167": {
      "op": "cover 3",
      "defined_out": [
        "a#0",
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "y#0",
        "x#0",
        "z#0"
      ]
    },
    "169": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "y#0",
        "z#0",
        "x#0"
      ]
    },
    "170": {
      "op": "uncover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "z#0",
        "x#0",
        "y#0"
      ]
    },
    "172": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "z#0",
        "b#0"
      ]
    },
    "173": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "z#0",
        "b#0",
        "b#0"
      ]
    },
    "174": {
      "op": "cover 2",
      "defined_out": [
        "a#0",
        "b#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "z#0",
        "b#0"
      ]
    },
    "176": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "z#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "177": {
      "op": "uncover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)",
        "z#0"
      ]
    },
    "179": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "b#0",
        "c#0"
      ]
    },
    "180": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "b#0",
        "c#0",
        "c#0"
      ]
    },
    "181": {
      "op": "cover 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ]
    },
    "183": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#1",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#1"
      ]
    },
    "184": {
      "op": "bz test_else_body@3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "187": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "189": {
      "op": "dig 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "y#0"
      ]
    },
    "191": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "192": {
      "op": "bury 3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "194": {
      "block": "test_after_if_else@12",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "196": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "198": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "199": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "201": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ]
    },
    "202": {
      "op": "bz test_else_body@14",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "205": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "207": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "208": {
      "op": "dig 6",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "c#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "y#0"
      ]
    },
    "210": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%13#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0"
      ]
    },
    "213": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "214": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "216": {
      "block": "test_after_if_else@15",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "218": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "219": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "bee#0"
      ]
    },
    "222": {
      "op": "bury 10",
      "defined_out": [
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "224": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "226": {
      "op": "dup"
    },
    "227": {
      "op": "uncover 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "229": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "230": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0"
      ]
    },
    "231": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "233": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "234": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "cea#0"
      ]
    },
    "237": {
      "op": "bury 10",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "239": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ]
    },
    "241": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%20#0"
      ]
    },
    "242": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0",
        "a#30"
      ]
    },
    "243": {
      "op": "bury 8",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ]
    },
    "245": {
      "op": "bz test_after_if_else@17",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "248": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "250": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "252": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "253": {
      "op": "bury 7",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "255": {
      "block": "test_after_if_else@17",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "257": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "258": {
      "op": "bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "260": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "261": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "263": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%22#0"
      ]
    },
    "264": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0",
        "a#30"
      ]
    },
    "265": {
      "op": "bury 8",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0"
      ]
    },
    "267": {
      "op": "bz test_after_if_else@19",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "270": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "272": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "274": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "275": {
      "op": "bury 7",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "277": {
      "block": "test_after_if_else@19",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "279": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "280": {
      "op": "bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "282": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "284": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "286": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0"
      ]
    },
    "287": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0",
        "a#0 (copy)"
      ]
    },
    "289": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%25#0"
      ]
    },
    "290": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0",
        "a#30"
      ]
    },
    "291": {
      "op": "bury 8",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ]
    },
    "293": {
      "op": "bz test_after_if_else@21",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "296": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "298": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0"
      ]
    },
    "300": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "301": {
      "op": "bury 7",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "303": {
      "block": "test_after_if_else@21",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "305": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "306": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0"
      ]
    },
    "309": {
      "op": "bytec_1 // \" \"",
      "defined_out": [
        "\" \"",
        "a#0",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0",
        "\" \""
      ]
    },
    "310": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%28#0"
      ]
    },
    "311": {
      "op": "dig 10",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%28#0",
        "bee#0"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%29#0"
      ]
    },
    "314": {
      "op": "bytec_1 // \" \"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%29#0",
        "\" \""
      ]
    },
    "315": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%30#0"
      ]
    },
    "316": {
      "op": "dig 9",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%30#0",
        "cea#0"
      ]
    },
    "318": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%31#0"
      ]
    },
    "319": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "320": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "aggregate%val_as_bytes%0#0",
        "bee#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "321": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "a#0",
        "aggregate%val_as_bytes%0#0",
        "bee#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "327": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "328": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ]
    },
    "329": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "330": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0",
        "bee#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "1"
      ]
    },
    "331": {
      "op": "return",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "332": {
      "block": "test_else_body@14",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "334": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "335": {
      "op": "dig 5",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "z#0"
      ]
    },
    "337": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "b#0",
        "tmp%15#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%15#0"
      ]
    },
    "340": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "341": {
      "op": "bury 2",
      "defined_out": [
        "b#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "343": {
      "op": "b test_after_if_else@15"
    },
    "346": {
      "block": "test_else_body@3",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "348": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "350": {
      "op": "<",
      "defined_out": [
        "a#0",
        "c#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#1"
      ]
    },
    "351": {
      "op": "bz test_else_body@5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "354": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "356": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "c#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0"
      ]
    },
    "358": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "359": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "c#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "361": {
      "op": "b test_after_if_else@12"
    },
    "364": {
      "block": "test_else_body@5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "366": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "368": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%7#0"
      ]
    },
    "369": {
      "op": "bz test_else_body@7",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "372": {
      "op": "dig 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "374": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "3"
      ]
    },
    "376": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "377": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "379": {
      "op": "b test_after_if_else@12"
    },
    "382": {
      "block": "test_else_body@7",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "384": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "385": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "a#0"
      ]
    },
    "387": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "388": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "b#0",
        "b#10",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0",
        "b#10"
      ]
    },
    "389": {
      "op": "bury 7",
      "defined_out": [
        "a#0",
        "b#0",
        "b#10",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0"
      ]
    },
    "391": {
      "op": "bz test_after_if_else@9",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "394": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "396": {
      "op": "dig 3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "398": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#10"
      ]
    },
    "399": {
      "op": "bury 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "401": {
      "block": "test_after_if_else@9",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "403": {
      "op": "bury 2",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "405": {
      "op": "b test_after_if_else@12"
    }
  }
}