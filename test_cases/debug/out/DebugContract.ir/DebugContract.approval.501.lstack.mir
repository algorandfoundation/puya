// Op                                                                          Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // debug/contract.py:4
        // class DebugContract(arc4.ARC4Contract):
        txn NumAppArgs                                                         tmp%0#1
        l-load tmp%0#1 0                                                       tmp%0#1
        bz main___algopy_default_create@5 ; b main_abi_routing@2

    main_abi_routing@2:
        // debug/contract.py:4
        // class DebugContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                 tmp%2#0
        method test(uint64,uint64,uint64)uint64                                tmp%2#0,Method(test(uint64,uint64,uint64)uint64)
        l-load tmp%2#0 1                                                       Method(test(uint64,uint64,uint64)uint64),tmp%2#0
        match main_test_route@3 ; b main_switch_case_next@4

    main_test_route@3:
        // debug/contract.py:5
        // @arc4.abimethod
        txn OnCompletion                                                       tmp%3#0
        l-load tmp%3#0 0                                                       tmp%3#0
        !                                                                      tmp%4#0
        txn ApplicationID                                                      tmp%4#0,tmp%5#0
        l-load tmp%4#0 1                                                       tmp%5#0,tmp%4#0
        l-load tmp%5#0 1                                                       tmp%4#0,tmp%5#0
        &&                                                                     tmp%7#0
        l-load tmp%7#0 0                                                       tmp%7#0
        assert // OnCompletion must be NoOp && can only call when not creating
        callsub test
        b main_switch_case_next@4

    main_switch_case_next@4:
        // debug/contract.py:4
        // class DebugContract(arc4.ARC4Contract):
        err

    main___algopy_default_create@5:
        txn OnCompletion                                                       tmp%8#0
        l-load tmp%8#0 0                                                       tmp%8#0
        !                                                                      tmp%9#0
        txn ApplicationID                                                      tmp%9#0,tmp%10#0
        l-load tmp%10#0 0                                                      tmp%9#0,tmp%10#0
        !                                                                      tmp%9#0,tmp%11#0
        l-load tmp%9#0 1                                                       tmp%11#0,tmp%9#0
        l-load tmp%11#0 1                                                      tmp%9#0,tmp%11#0
        &&                                                                     tmp%12#0
        l-load tmp%12#0 0                                                      tmp%12#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                  1
        return


// test_cases.debug.contract.some_func(a: uint64, b: uint64) -> uint64:
subroutine some_func:
    some_func_block@0:                                                         (洧도) a#0,b#0 |
        // debug/contract.py:43
        // a += b
        p-load a#0                                                             (洧도) a#0,b#0 | a#0 (copy)
        p-load b#0                                                             (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
        +                                                                      (洧도) a#0,b#0 | a#0
        p-store a#0                                                            (洧도) a#0,b#0 |
        // debug/contract.py:44
        // b *= a
        p-load b#0                                                             (洧도) a#0,b#0 | b#0 (copy)
        p-load a#0                                                             (洧도) a#0,b#0 | b#0 (copy),a#0 (copy)
        *                                                                      (洧도) a#0,b#0 | b#0
        p-store b#0                                                            (洧도) a#0,b#0 |
        // debug/contract.py:45
        // a += b
        p-load a#0                                                             (洧도) a#0,b#0 | a#0 (copy)
        p-load b#0                                                             (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
        +                                                                      (洧도) a#0,b#0 | a#0
        p-store a#0                                                            (洧도) a#0,b#0 |
        // debug/contract.py:46
        // a *= 2
        p-load a#0                                                             (洧도) a#0,b#0 | a#0 (copy)
        int 2                                                                  (洧도) a#0,b#0 | a#0 (copy),2
        *                                                                      (洧도) a#0,b#0 | a#0
        p-store a#0                                                            (洧도) a#0,b#0 |
        // debug/contract.py:47
        // x = a + b
        p-load a#0                                                             (洧도) a#0,b#0 | a#0 (copy)
        p-load b#0                                                             (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
        +                                                                      (洧도) a#0,b#0 | x#0
        // debug/contract.py:48
        // y = a * b
        p-load a#0                                                             (洧도) a#0,b#0 | x#0,a#0 (copy)
        p-load b#0                                                             (洧도) a#0,b#0 | x#0,a#0 (copy),b#0 (copy)
        *                                                                      (洧도) a#0,b#0 | x#0,y#0
        // debug/contract.py:49
        // return x if x < y else y
        l-load-copy x#0 1                                                      (洧도) a#0,b#0 | x#0,y#0,x#0 (copy)
        l-load-copy y#0 1                                                      (洧도) a#0,b#0 | x#0,y#0,x#0 (copy),y#0 (copy)
        <                                                                      (洧도) a#0,b#0 | x#0,y#0,tmp%6#0
        l-load y#0 1                                                           (洧도) a#0,b#0 | x#0,tmp%6#0,y#0
        l-load x#0 2                                                           (洧도) a#0,b#0 | tmp%6#0,y#0,x#0
        l-load tmp%6#0 2                                                       (洧도) a#0,b#0 | y#0,x#0,tmp%6#0
        select                                                                 (洧도) a#0,b#0 | select%0#0
        l-load select%0#0 0                                                    (洧도) a#0,b#0 | select%0#0
        retsub                                                                 select%0#0


// test_cases.debug.contract.itoa(i: uint64) -> bytes:
subroutine itoa:
    itoa_block@0:                                                              (洧도) i#0 |
        // debug/contract.py:56
        // if i < radix:
        p-load i#0                                                             (洧도) i#0 | i#0 (copy)
        // debug/contract.py:55
        // radix = digits.length
        int 10                                                                 (洧도) i#0 | i#0 (copy),10
        // debug/contract.py:56
        // if i < radix:
        <                                                                      (洧도) i#0 | tmp%1#0
        l-load tmp%1#0 0                                                       (洧도) i#0 | tmp%1#0
        bz itoa_after_if_else@2 ; b itoa_if_body@1                             (洧도) i#0 |

    itoa_if_body@1:                                                            (洧도) i#0 |
        // debug/contract.py:54
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                            (洧도) i#0 | 0x30313233343536373839
        // debug/contract.py:57
        // return digits[i]
        p-load i#0                                                             (洧도) i#0 | 0x30313233343536373839,i#0 (copy)
        int 1                                                                  (洧도) i#0 | 0x30313233343536373839,i#0 (copy),1
        extract3                                                               (洧도) i#0 | extract%0#0
        l-load extract%0#0 0                                                   (洧도) i#0 | extract%0#0
        retsub                                                                 extract%0#0

    itoa_after_if_else@2:                                                      (洧도) i#0 |
        // debug/contract.py:58
        // return itoa(i // radix) + digits[i % radix]
        p-load i#0                                                             (洧도) i#0 | i#0 (copy)
        // debug/contract.py:55
        // radix = digits.length
        int 10                                                                 (洧도) i#0 | i#0 (copy),10
        // debug/contract.py:58
        // return itoa(i // radix) + digits[i % radix]
        /                                                                      (洧도) i#0 | tmp%2#0
        l-load tmp%2#0 0                                                       (洧도) i#0 | tmp%2#0
        callsub itoa                                                           (洧도) i#0 | tmp%3#0
        p-load i#0                                                             (洧도) i#0 | tmp%3#0,i#0 (copy)
        // debug/contract.py:55
        // radix = digits.length
        int 10                                                                 (洧도) i#0 | tmp%3#0,i#0 (copy),10
        // debug/contract.py:58
        // return itoa(i // radix) + digits[i % radix]
        %                                                                      (洧도) i#0 | tmp%3#0,tmp%4#0
        // debug/contract.py:54
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                            (洧도) i#0 | tmp%3#0,tmp%4#0,0x30313233343536373839
        // debug/contract.py:58
        // return itoa(i // radix) + digits[i % radix]
        l-load tmp%4#0 1                                                       (洧도) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0
        int 1                                                                  (洧도) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0,1
        extract3                                                               (洧도) i#0 | tmp%3#0,extract%1#0
        l-load tmp%3#0 1                                                       (洧도) i#0 | extract%1#0,tmp%3#0
        l-load extract%1#0 1                                                   (洧도) i#0 | tmp%3#0,extract%1#0
        concat                                                                 (洧도) i#0 | tmp%5#0
        l-load tmp%5#0 0                                                       (洧도) i#0 | tmp%5#0
        retsub                                                                 tmp%5#0


// test_cases.debug.contract.DebugContract.test[routing]() -> void:
subroutine test:
    test_block@0:
        // debug/contract.py:5
        // @arc4.abimethod
        txna ApplicationArgs 1                                                 reinterpret_Encoded(uint64)%0#0
        l-load reinterpret_Encoded(uint64)%0#0 0                               reinterpret_Encoded(uint64)%0#0
        btoi                                                                   x#0
        txna ApplicationArgs 2                                                 x#0,reinterpret_Encoded(uint64)%1#0
        l-load reinterpret_Encoded(uint64)%1#0 0                               x#0,reinterpret_Encoded(uint64)%1#0
        btoi                                                                   x#0,y#0
        l-store-copy y#0 1                                                     y#0,x#0,y#0 (copy)
        v-store y#0                                                            y#0,x#0
        txna ApplicationArgs 3                                                 y#0,x#0,reinterpret_Encoded(uint64)%2#0
        l-load reinterpret_Encoded(uint64)%2#0 0                               y#0,x#0,reinterpret_Encoded(uint64)%2#0
        btoi                                                                   y#0,x#0,z#0
        l-store-copy z#0 0                                                     y#0,x#0,z#0,z#0 (copy)
        v-store z#0                                                            y#0,x#0,z#0
        // debug/contract.py:7
        // a = x * TemplateVar[UInt64]("A_MULT")
        l-load-copy x#0 1                                                      y#0,x#0,z#0,x#0 (copy)
        int TMPL_A_MULT                                                        y#0,x#0,z#0,x#0 (copy),TMPL_A_MULT
        *                                                                      y#0,x#0,z#0,a#0
        v-store a#0                                                            y#0,x#0,z#0
        // debug/contract.py:8
        // b = x + y
        l-load x#0 1                                                           y#0,z#0,x#0
        l-load y#0 2                                                           z#0,x#0,y#0
        +                                                                      z#0,b#0
        l-store-copy b#0 0                                                     z#0,b#0,b#0 (copy)
        v-store b#0                                                            z#0,b#0
        // debug/contract.py:9
        // c = b * z
        l-load-copy b#0 0                                                      z#0,b#0,b#0 (copy)
        l-load z#0 2                                                           b#0,b#0 (copy),z#0
        *                                                                      b#0,c#0
        l-store-copy c#0 0                                                     b#0,c#0,c#0 (copy)
        v-store c#0                                                            b#0,c#0
        // debug/contract.py:10
        // if b < c:
        l-load b#0 1                                                           c#0,b#0
        l-load c#0 1                                                           b#0,c#0
        <                                                                      tmp%3#1
        l-load tmp%3#1 0                                                       tmp%3#1
        bz test_else_body@3 ; b test_if_body@2

    test_if_body@2:
        // debug/contract.py:11
        // a = a + y
        v-load a#0                                                             a#0
        v-load y#0                                                             a#0,y#0
        +                                                                      a#0
        v-store a#0
        b test_after_if_else@12

    test_else_body@3:
        // debug/contract.py:12
        // elif a < c:
        v-load a#0                                                             a#0
        v-load c#0                                                             a#0,c#0
        <                                                                      tmp%5#1
        l-load tmp%5#1 0                                                       tmp%5#1
        bz test_else_body@5 ; b test_if_body@4

    test_if_body@4:
        // debug/contract.py:13
        // a = a + z
        v-load a#0                                                             a#0
        v-load z#0                                                             a#0,z#0
        +                                                                      a#0
        v-store a#0
        b test_after_if_else@12

    test_else_body@5:
        // debug/contract.py:14
        // elif b < a:
        v-load b#0                                                             b#0
        v-load a#0                                                             b#0,a#0
        <                                                                      tmp%7#0
        l-load tmp%7#0 0                                                       tmp%7#0
        bz test_else_body@7 ; b test_if_body@6

    test_if_body@6:
        // debug/contract.py:15
        // a = a * 3
        v-load a#0                                                             a#0
        int 3                                                                  a#0,3
        *                                                                      a#0
        v-store a#0
        b test_after_if_else@12

    test_else_body@7:
        // debug/contract.py:16
        // elif b > a:
        v-load b#0                                                             b#0
        l-store-copy b#0 0                                                     b#0,b#0 (copy)
        v-load a#0                                                             b#0,b#0 (copy),a#0
        >                                                                      b#0,tmp%9#0
        l-load b#0 1                                                           tmp%9#0,b#0
        v-store b#10                                                           tmp%9#0
        l-load tmp%9#0 0                                                       tmp%9#0
        bz test_after_if_else@9 ; b test_if_body@8

    test_if_body@8:
        // debug/contract.py:17
        // b = b + a
        v-load b#0                                                             b#0
        v-load a#0                                                             b#0,a#0
        +                                                                      b#0
        l-load b#0 0                                                           b#0
        v-store b#10
        b test_after_if_else@9

    test_after_if_else@9:
        v-load b#10                                                            b#10
        v-store b#0
        b test_after_if_else@12

    test_after_if_else@12:
        // debug/contract.py:19
        // if a + b < c:
        v-load a#0                                                             a#0
        v-load b#0                                                             a#0,b#0
        +                                                                      tmp%11#0
        l-load tmp%11#0 0                                                      tmp%11#0
        v-load c#0                                                             tmp%11#0,c#0
        <                                                                      tmp%12#0
        l-load tmp%12#0 0                                                      tmp%12#0
        bz test_else_body@14 ; b test_if_body@13

    test_if_body@13:
        // debug/contract.py:20
        // a *= some_func(a, y)
        v-load a#0                                                             a#0
        l-store-copy a#0 0                                                     a#0,a#0 (copy)
        v-load y#0                                                             a#0,a#0 (copy),y#0
        callsub some_func                                                      a#0,tmp%13#0
        l-load a#0 1                                                           tmp%13#0,a#0
        l-load tmp%13#0 1                                                      a#0,tmp%13#0
        *                                                                      a#0
        v-store a#0
        b test_after_if_else@15

    test_else_body@14:
        // debug/contract.py:22
        // b *= some_func(b, z)
        v-load b#0                                                             b#0
        l-store-copy b#0 0                                                     b#0,b#0 (copy)
        v-load z#0                                                             b#0,b#0 (copy),z#0
        callsub some_func                                                      b#0,tmp%15#0
        l-load b#0 1                                                           tmp%15#0,b#0
        l-load tmp%15#0 1                                                      b#0,tmp%15#0
        *                                                                      b#0
        v-store b#0
        b test_after_if_else@15

    test_after_if_else@15:
        // debug/contract.py:24
        // bee = itoa(b)
        v-load b#0                                                             b#0
        l-store-copy b#0 0                                                     b#0,b#0 (copy)
        callsub itoa                                                           b#0,bee#0
        v-store bee#0                                                          b#0
        // debug/contract.py:25
        // c = a + b
        v-load a#0                                                             b#0,a#0
        l-store-copy a#0 1                                                     a#0,b#0,a#0 (copy)
        l-load b#0 1                                                           a#0,a#0 (copy),b#0
        +                                                                      a#0,c#0
        l-store-copy c#0 0                                                     a#0,c#0,c#0 (copy)
        v-store c#0                                                            a#0,c#0
        // debug/contract.py:26
        // cea = itoa(c)
        l-load-copy c#0 0                                                      a#0,c#0,c#0 (copy)
        callsub itoa                                                           a#0,c#0,cea#0
        v-store cea#0                                                          a#0,c#0
        // debug/contract.py:28
        // if a < c:
        l-load-copy a#0 1                                                      a#0,c#0,a#0 (copy)
        l-load c#0 1                                                           a#0,a#0 (copy),c#0
        <                                                                      a#0,tmp%20#0
        l-load a#0 1                                                           tmp%20#0,a#0
        v-store a#30                                                           tmp%20#0
        l-load tmp%20#0 0                                                      tmp%20#0
        bz test_after_if_else@17 ; b test_if_body@16

    test_if_body@16:
        // debug/contract.py:29
        // a += c
        v-load a#0                                                             a#0
        v-load c#0                                                             a#0,c#0
        +                                                                      a#0
        l-load a#0 0                                                           a#0
        v-store a#30
        b test_after_if_else@17

    test_after_if_else@17:
        v-load a#30                                                            a#30
        l-store-copy a#0 0                                                     a#0,a#0 (copy)
        v-store a#0                                                            a#0
        // debug/contract.py:30
        // if a < b:
        l-load-copy a#0 0                                                      a#0,a#0 (copy)
        v-load b#0                                                             a#0,a#0 (copy),b#0
        <                                                                      a#0,tmp%22#0
        l-load a#0 1                                                           tmp%22#0,a#0
        v-store a#30                                                           tmp%22#0
        l-load tmp%22#0 0                                                      tmp%22#0
        bz test_after_if_else@19 ; b test_if_body@18

    test_if_body@18:
        // debug/contract.py:31
        // a += b
        v-load a#0                                                             a#0
        v-load b#0                                                             a#0,b#0
        +                                                                      a#0
        l-load a#0 0                                                           a#0
        v-store a#30
        b test_after_if_else@19

    test_after_if_else@19:
        v-load a#30                                                            a#30
        l-store-copy a#0 0                                                     a#0,a#0 (copy)
        v-store a#0                                                            a#0
        // debug/contract.py:32
        // if a < b + c:
        v-load b#0                                                             a#0,b#0
        v-load c#0                                                             a#0,b#0,c#0
        +                                                                      a#0,tmp%24#0
        l-load-copy a#0 1                                                      a#0,tmp%24#0,a#0 (copy)
        l-load tmp%24#0 1                                                      a#0,a#0 (copy),tmp%24#0
        <                                                                      a#0,tmp%25#0
        l-load a#0 1                                                           tmp%25#0,a#0
        v-store a#30                                                           tmp%25#0
        l-load tmp%25#0 0                                                      tmp%25#0
        bz test_after_if_else@21 ; b test_if_body@20

    test_if_body@20:
        // debug/contract.py:33
        // a = a * z
        v-load a#0                                                             a#0
        v-load z#0                                                             a#0,z#0
        *                                                                      a#0
        l-load a#0 0                                                           a#0
        v-store a#30
        b test_after_if_else@21

    test_after_if_else@21:
        v-load a#30                                                            a#30
        l-store a#0 0                                                          a#0
        // debug/contract.py:35
        // aye = itoa(a)
        l-load-copy a#0 0                                                      a#0,a#0 (copy)
        callsub itoa                                                           a#0,aye#0
        // debug/contract.py:36
        // log(aye, bee, cea, sep=" ")
        l-load aye#0 0                                                         a#0,aye#0
        byte " "                                                               a#0,aye#0," "
        concat                                                                 a#0,tmp%28#0
        l-load tmp%28#0 0                                                      a#0,tmp%28#0
        v-load bee#0                                                           a#0,tmp%28#0,bee#0
        concat                                                                 a#0,tmp%29#0
        l-load tmp%29#0 0                                                      a#0,tmp%29#0
        byte " "                                                               a#0,tmp%29#0," "
        concat                                                                 a#0,tmp%30#0
        l-load tmp%30#0 0                                                      a#0,tmp%30#0
        v-load cea#0                                                           a#0,tmp%30#0,cea#0
        concat                                                                 a#0,tmp%31#0
        l-load tmp%31#0 0                                                      a#0,tmp%31#0
        log                                                                    a#0
        // debug/contract.py:5
        // @arc4.abimethod
        l-load a#0 0                                                           a#0
        itob                                                                   aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                        aggregate%val_as_bytes%0#0,0x151f7c75
        l-load aggregate%val_as_bytes%0#0 1                                    0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                 tmp%5#0
        l-load tmp%5#0 0                                                       tmp%5#0
        log
        int 1                                                                  1
        return


