{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;AAGQ;;AAAQ;AAAJ;AAAJ;;AACA;AAAA;;AAAI;AAAJ;AAAA;;AACA;AAAA;;AAAI;AAAJ;AAAA;;AACG;AAAX;;;AACY;;AAAA;;AAAI;AAAJ;;AAQD;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAIJ;;AAAA;AAAM;;;AAAN;;AACA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;;AACA;AAAM;;;AAAN;;AAEG;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACD;AAAA;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAI;;;;;AAER;AAAM;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AA/BH;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AAiBY;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAVC;;AAAA;;AAAA;AAAb;;;AACY;;AAAA;;AAAI;AAAJ;;;;;AACC;;AAAA;;AAAA;AAAb;;;AACY;;AAAQ;;AAAJ;AAAJ;;;;;AACC;;AAAA;AAAA;;AAAA;;;;AAAb;;;AACY;;AAAA;;AAAI;;;;;;;;;;AAbhB;;AAAA;;;;;;;;;AAqCA;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;;AAAL;;AAAA;;AACA;;AAAI;AACJ;;AAAA;;AAAI;AACQ;AAAA;AAAL;AAAA;;AAAA;AAAP;AAGJ;;;AAIO;;AADK;AACL;AAAP;;;AAFa;AAGE;;AAAA;AAAA;AAAP;AACQ;;AAHJ;AAGI;AAAL;;;AAA0B;;AAHzB;AAGyB;AAJxB;AAIiB;AAAA;AAAA;AAAnB;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 10 0 TMPL_A_MULT"
    },
    "7": {
      "op": "bytecblock \" \" 0x30313233343536373839"
    },
    "22": {
      "op": "intc_2 // 0",
      "stack_out": [
        "bee#0"
      ]
    },
    "23": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "24": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0"
      ]
    },
    "26": {
      "op": "dupn 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "28": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%0#1"
      ]
    },
    "30": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "33": {
      "op": "pushbytes 0x53574bff // method \"test(uint64,uint64,uint64)uint64\""
    },
    "39": {
      "op": "txna ApplicationArgs 0"
    },
    "42": {
      "op": "match main_test_route@3"
    },
    "46": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%0#0"
      ]
    },
    "47": {
      "op": "return"
    },
    "48": {
      "block": "main_test_route@3",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%3#0"
      ]
    },
    "50": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%4#0"
      ]
    },
    "51": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "52": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%5#0"
      ]
    },
    "54": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "55": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%7#0"
      ]
    },
    "58": {
      "op": "btoi",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "x#0"
      ]
    },
    "59": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%9#0",
        "x#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "x#0",
        "tmp%9#0"
      ]
    },
    "62": {
      "op": "btoi",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "x#0",
        "y#0"
      ]
    },
    "63": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "x#0",
        "y#0",
        "y#0 (copy)"
      ]
    },
    "64": {
      "op": "cover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "y#0"
      ]
    },
    "66": {
      "op": "bury 4",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0"
      ]
    },
    "68": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%11#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "tmp%11#0"
      ]
    },
    "71": {
      "op": "btoi",
      "defined_out": [
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0"
      ]
    },
    "72": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "z#0"
      ]
    },
    "73": {
      "op": "bury 4",
      "defined_out": [
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0"
      ]
    },
    "75": {
      "op": "dig 1",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "x#0 (copy)"
      ]
    },
    "77": {
      "op": "intc_3 // TMPL_A_MULT",
      "defined_out": [
        "TMPL_A_MULT",
        "x#0",
        "x#0 (copy)",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ]
    },
    "78": {
      "op": "*",
      "defined_out": [
        "a#0",
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0",
        "a#0"
      ]
    },
    "79": {
      "op": "bury 10",
      "defined_out": [
        "a#0",
        "x#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "x#0",
        "z#0"
      ]
    },
    "81": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "y#0",
        "z#0",
        "x#0"
      ]
    },
    "82": {
      "op": "uncover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "z#0",
        "x#0",
        "y#0"
      ]
    },
    "84": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "z#0",
        "b#0"
      ]
    },
    "85": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "z#0",
        "b#0",
        "b#0"
      ]
    },
    "86": {
      "op": "bury 7",
      "defined_out": [
        "a#0",
        "b#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "z#0",
        "b#0"
      ]
    },
    "88": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "z#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "89": {
      "op": "uncover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "b#0 (copy)",
        "z#0"
      ]
    },
    "91": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "c#0"
      ]
    },
    "92": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "c#0",
        "c#0"
      ]
    },
    "93": {
      "op": "bury 5",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "c#0"
      ]
    },
    "95": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%0#0",
        "y#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%0#0"
      ]
    },
    "96": {
      "op": "bz main_else_body@16",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "99": {
      "op": "dig 6"
    },
    "101": {
      "op": "dig 2"
    },
    "103": {
      "op": "+"
    },
    "104": {
      "op": "bury 7"
    },
    "106": {
      "block": "main_after_if_else@25",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "108": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "b#0"
      ]
    },
    "110": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%4#1"
      ]
    },
    "111": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%4#1",
        "c#0"
      ]
    },
    "113": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%5#1"
      ]
    },
    "114": {
      "op": "bz main_else_body@27",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "117": {
      "op": "dig 6"
    },
    "119": {
      "op": "dup"
    },
    "120": {
      "op": "dig 3"
    },
    "122": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func"
    },
    "125": {
      "op": "*"
    },
    "126": {
      "op": "bury 7"
    },
    "128": {
      "block": "main_after_if_else@28",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "130": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "131": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "bee#0"
      ]
    },
    "134": {
      "op": "bury 10",
      "defined_out": [
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "136": {
      "op": "dig 7",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "a#0"
      ]
    },
    "138": {
      "op": "dup"
    },
    "139": {
      "op": "uncover 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "bee#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "141": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0"
      ]
    },
    "142": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0",
        "c#0"
      ]
    },
    "143": {
      "op": "bury 5",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0"
      ]
    },
    "145": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "146": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0",
        "cea#0"
      ]
    },
    "149": {
      "op": "bury 10",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0"
      ]
    },
    "151": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ]
    },
    "153": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%8#1"
      ]
    },
    "154": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%8#1",
        "a#30"
      ]
    },
    "155": {
      "op": "bury 7",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "bee#0",
        "c#0",
        "cea#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%8#1"
      ]
    },
    "157": {
      "op": "bz main_after_if_else@30",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "160": {
      "op": "dig 6"
    },
    "162": {
      "op": "dig 3"
    },
    "164": {
      "op": "+"
    },
    "165": {
      "op": "bury 6"
    },
    "167": {
      "block": "main_after_if_else@30",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "169": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "a#0"
      ]
    },
    "170": {
      "op": "bury 8",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "172": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "173": {
      "op": "dig 6",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "175": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%9#1"
      ]
    },
    "176": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%9#1",
        "a#30"
      ]
    },
    "177": {
      "op": "bury 7",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%9#1"
      ]
    },
    "179": {
      "op": "bz main_after_if_else@32",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "182": {
      "op": "dig 6"
    },
    "184": {
      "op": "dig 5"
    },
    "186": {
      "op": "+"
    },
    "187": {
      "op": "bury 6"
    },
    "189": {
      "block": "main_after_if_else@32",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "191": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "a#0"
      ]
    },
    "192": {
      "op": "bury 8",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "194": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "b#0"
      ]
    },
    "196": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "198": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%10#1"
      ]
    },
    "199": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "c#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%10#1",
        "a#0 (copy)"
      ]
    },
    "201": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%11#1"
      ]
    },
    "202": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%11#1",
        "a#30"
      ]
    },
    "203": {
      "op": "bury 7",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%11#1"
      ]
    },
    "205": {
      "op": "bz main_after_if_else@34",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "208": {
      "op": "dig 6"
    },
    "210": {
      "op": "dig 1"
    },
    "212": {
      "op": "*"
    },
    "213": {
      "op": "bury 6"
    },
    "215": {
      "block": "main_after_if_else@34",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "217": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "218": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "aye#0"
      ]
    },
    "221": {
      "op": "bytec_0 // \" \"",
      "defined_out": [
        "\" \"",
        "a#0",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "aye#0",
        "\" \""
      ]
    },
    "222": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%12#1"
      ]
    },
    "223": {
      "op": "dig 10",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%12#1",
        "bee#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%13#0"
      ]
    },
    "226": {
      "op": "bytec_0 // \" \"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%13#0",
        "\" \""
      ]
    },
    "227": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%14#1"
      ]
    },
    "228": {
      "op": "dig 9",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%14#1",
        "cea#0"
      ]
    },
    "230": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "tmp%15#1"
      ]
    },
    "231": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "232": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "val_as_bytes%0#0"
      ]
    },
    "233": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "a#0",
        "bee#0",
        "cea#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "239": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "240": {
      "op": "concat",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%13#0"
      ]
    },
    "241": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "242": {
      "op": "intc_0 // 1",
      "defined_out": [
        "a#0",
        "bee#0",
        "cea#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%0#0"
      ]
    },
    "243": {
      "op": "return"
    },
    "244": {
      "block": "main_else_body@27",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "246": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "247": {
      "op": "dig 2",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "b#0 (copy)",
        "z#0"
      ]
    },
    "249": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "b#0",
        "tmp%7#1",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "tmp%7#1"
      ]
    },
    "252": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "253": {
      "op": "bury 5",
      "defined_out": [
        "b#0",
        "z#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "255": {
      "op": "b main_after_if_else@28"
    },
    "258": {
      "block": "main_else_body@16",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0"
      ]
    },
    "260": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "a#0",
        "c#0"
      ]
    },
    "262": {
      "op": "<",
      "defined_out": [
        "a#0",
        "c#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%1#0"
      ]
    },
    "263": {
      "op": "bz main_else_body@18",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "266": {
      "op": "dig 6"
    },
    "268": {
      "op": "dig 1"
    },
    "270": {
      "op": "+"
    },
    "271": {
      "op": "bury 7"
    },
    "273": {
      "op": "b main_after_if_else@25"
    },
    "276": {
      "block": "main_else_body@18",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "278": {
      "op": "dig 7",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "a#0"
      ]
    },
    "280": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%2#1"
      ]
    },
    "281": {
      "op": "bz main_else_body@20",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "284": {
      "op": "dig 6"
    },
    "286": {
      "op": "pushint 3 // 3"
    },
    "288": {
      "op": "*"
    },
    "289": {
      "op": "bury 7"
    },
    "291": {
      "op": "b main_after_if_else@25"
    },
    "294": {
      "block": "main_else_body@20",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "296": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "297": {
      "op": "dig 8",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "b#0 (copy)",
        "a#0"
      ]
    },
    "299": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0",
        "tmp%3#1"
      ]
    },
    "300": {
      "op": "swap",
      "defined_out": [
        "a#0",
        "b#0",
        "b#10",
        "tmp%3#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%3#1",
        "b#10"
      ]
    },
    "301": {
      "op": "bury 5",
      "defined_out": [
        "a#0",
        "b#0",
        "b#10",
        "tmp%3#1"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%3#1"
      ]
    },
    "303": {
      "op": "bz main_after_if_else@22",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "306": {
      "op": "dig 4"
    },
    "308": {
      "op": "dig 7"
    },
    "310": {
      "op": "+"
    },
    "311": {
      "op": "bury 4"
    },
    "313": {
      "block": "main_after_if_else@22",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "b#0"
      ]
    },
    "315": {
      "op": "bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "317": {
      "op": "b main_after_if_else@25"
    },
    "320": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0",
        "tmp%14#0"
      ]
    },
    "322": {
      "op": "bnz main_after_if_else@10",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#0",
        "a#30",
        "b#0",
        "b#10",
        "c#0",
        "y#0",
        "z#0"
      ]
    },
    "325": {
      "op": "txn ApplicationID"
    },
    "327": {
      "op": "!"
    },
    "328": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "329": {
      "op": "intc_0 // 1"
    },
    "330": {
      "op": "return"
    },
    "331": {
      "subroutine": "test_cases.debug.contract.some_func",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "some_func",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "334": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "336": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "338": {
      "op": "+",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "339": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "341": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "343": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "345": {
      "op": "*",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "b#0"
      ]
    },
    "346": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "348": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "350": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "352": {
      "op": "+",
      "stack_out": [
        "a#0"
      ]
    },
    "353": {
      "op": "dup"
    },
    "354": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "356": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "2"
      ]
    },
    "358": {
      "op": "*",
      "stack_out": [
        "a#0"
      ]
    },
    "359": {
      "op": "dup"
    },
    "360": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "362": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "364": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "365": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ]
    },
    "367": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "369": {
      "op": "*",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0"
      ]
    },
    "370": {
      "op": "dup2",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "371": {
      "op": "<",
      "defined_out": [
        "tmp%0#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "tmp%0#0"
      ]
    },
    "372": {
      "op": "swap",
      "stack_out": [
        "x#0",
        "tmp%0#0",
        "y#0"
      ]
    },
    "373": {
      "op": "cover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%0#0"
      ]
    },
    "375": {
      "op": "select",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "376": {
      "retsub": true,
      "op": "retsub"
    },
    "377": {
      "subroutine": "test_cases.debug.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "380": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "382": {
      "op": "intc_1 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "383": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "384": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": []
    },
    "387": {
      "op": "bytec_1 // 0x30313233343536373839"
    },
    "388": {
      "op": "frame_dig -1"
    },
    "390": {
      "op": "intc_0 // 1"
    },
    "391": {
      "op": "extract3"
    },
    "392": {
      "retsub": true,
      "op": "retsub"
    },
    "393": {
      "block": "itoa_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "395": {
      "op": "intc_1 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "396": {
      "op": "/",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "397": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "400": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "402": {
      "op": "intc_1 // 10",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)",
        "10"
      ]
    },
    "403": {
      "op": "%",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "404": {
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "405": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "406": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "407": {
      "op": "extract3",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "408": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "409": {
      "retsub": true,
      "op": "retsub"
    }
  }
}