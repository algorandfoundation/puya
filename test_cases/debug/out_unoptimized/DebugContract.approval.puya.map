{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;;;;;;;;;AAAA;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAqCA;;;;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;AAAL;;AAAA;;AACI;;AAAA;AACA;;AAAA;;AAAA;AACQ;AAAA;AAAA;;AAAL;;AAAA;;AAAA;AAAP;AAGJ;;;;;;AAEa;AACD;AAAR;AACG;;AAAA;AAAP;;;AAAA;;;AAFa;AAGE;;AAAA;AAAA;AAAP;;AAAA;AACQ;;AAAA;;AAAA;AAAA;;AAAA;AAAL;;;AAAA;;AAA0B;;AAAA;;AAAA;AAJxB;AAIiB;;AAAA;AAAA;AAAnB;AAAP;;AAAA;;;;AArDC;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAL;;;;;;;;;;AAEY;;AAAI;;AAAJ;AACA;;AAAA;;AAAA;AAAJ;;AACI;;AAAA;AAAJ;AAAA;;AACG;AAAX;;;AAAA;;;AACgB;;AAAA;;AAAA;AAAJ;;;;;AAQD;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAIE;;AAAA;AAAA;;;AAAN;;AACI;;AAAA;AAAA;;AAAA;AAAJ;AAAA;;AACM;AAAA;;;AAAN;;AAEG;;AAAA;;;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;;;;;;;;;;;AACD;AAAA;;AAAA;;;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;;;;;;;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;;;;;AAAX;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;;;AAEF;AAAA;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AAEA;;AAAA;AAhBS;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAVC;;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;;AAAA;;AAAA;AAAJ;;;;;;;;AACC;;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;;AAAI;AAAJ;AAAJ;;;;;;;;AACC;;AAAA;AAAA;;AAAA;;;;;AAAb;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 3 TMPL_A_MULT"
    },
    "8": {
      "op": "bytecblock 0x30313233343536373839 \"\" \" \""
    },
    "24": {
      "op": "b block@0"
    },
    "27": {
      "block": "block@0",
      "stack_in": [],
      "op": "b block@1"
    },
    "30": {
      "block": "block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "32": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "33": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "36": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "37": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "38": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "39": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "40": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "41": {
      "op": "intc_3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "42": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "44": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "46": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "48": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "50": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "52": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "54": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "56": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "58": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "60": {
      "op": "match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication",
      "stack_out": []
    },
    "86": {
      "op": "b *NOT_IMPLEMENTED"
    },
    "89": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "90": {
      "block": "create_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "93": {
      "block": "call_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "96": {
      "block": "create_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "99": {
      "block": "call_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "102": {
      "block": "create_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "105": {
      "block": "call_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "108": {
      "block": "create_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "111": {
      "block": "call_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "114": {
      "block": "create_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "117": {
      "block": "call_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "120": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "122": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "123": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "124": {
      "op": "bz else_body@8",
      "stack_out": []
    },
    "127": {
      "op": "b __algopy_default_create@7"
    },
    "130": {
      "block": "__algopy_default_create@7",
      "stack_in": [],
      "op": "b block@21"
    },
    "133": {
      "block": "block@21",
      "stack_in": [],
      "op": "b after_inlined_test_cases.debug.contract.DebugContract.__algopy_default_create@22"
    },
    "136": {
      "block": "after_inlined_test_cases.debug.contract.DebugContract.__algopy_default_create@22",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "137": {
      "op": "return",
      "stack_out": []
    },
    "138": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "block": "else_body@8",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create NoOp"
    },
    "139": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "142": {
      "op": "pushbytes 0x53574bff // method \"test(uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test(uint64,uint64,uint64)uint64)"
      ]
    },
    "148": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%5#0"
      ]
    },
    "150": {
      "op": "match test_route@3",
      "stack_out": []
    },
    "154": {
      "op": "b switch_case_default@4"
    },
    "157": {
      "block": "switch_case_default@4",
      "stack_in": [],
      "op": "b switch_case_next@5"
    },
    "160": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "switch_case_next@5",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "161": {
      "block": "test_route@3",
      "stack_in": [],
      "callsub": "test_cases.debug.contract.DebugContract.test[routing]",
      "op": "callsub test"
    },
    "164": {
      "op": "b switch_case_next@5"
    },
    "167": {
      "subroutine": "test_cases.debug.contract.some_func",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "some_func",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "170": {
      "op": "b some_func_block@0"
    },
    "173": {
      "block": "some_func_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "175": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "177": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "178": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "180": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "182": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "184": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "185": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "187": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "189": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "191": {
      "op": "+",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "192": {
      "op": "dup"
    },
    "193": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "195": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "2"
      ]
    },
    "196": {
      "op": "*",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "197": {
      "op": "dup"
    },
    "198": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "200": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "202": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "203": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ]
    },
    "205": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "207": {
      "op": "*",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0"
      ]
    },
    "208": {
      "op": "dup2",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "209": {
      "op": "<",
      "defined_out": [
        "tmp%6#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "tmp%6#0"
      ]
    },
    "210": {
      "op": "cover 1",
      "stack_out": [
        "x#0",
        "tmp%6#0",
        "y#0"
      ]
    },
    "212": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "y#0",
        "x#0"
      ]
    },
    "214": {
      "op": "uncover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%6#0"
      ]
    },
    "216": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "217": {
      "retsub": true,
      "op": "retsub"
    },
    "218": {
      "subroutine": "test_cases.debug.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "221": {
      "op": "b itoa_block@0"
    },
    "224": {
      "block": "itoa_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "225": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "226": {
      "op": "dup",
      "defined_out": [
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0"
      ]
    },
    "227": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "229": {
      "op": ">",
      "defined_out": [
        "radix#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%1#0"
      ]
    },
    "230": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": [
        "radix#0"
      ]
    },
    "233": {
      "op": "b itoa_if_body@1"
    },
    "236": {
      "block": "itoa_if_body@1",
      "stack_in": [
        "radix#0"
      ],
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839"
      ]
    },
    "237": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x30313233343536373839",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)"
      ]
    },
    "239": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)",
        "1"
      ]
    },
    "240": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "radix#0",
        "extract%0#0"
      ]
    },
    "241": {
      "op": "uncover 1"
    },
    "243": {
      "retsub": true,
      "op": "retsub"
    },
    "244": {
      "block": "itoa_after_if_else@2",
      "stack_in": [
        "radix#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "246": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "248": {
      "op": "dup",
      "defined_out": [
        "i#0 (copy)",
        "radix#0",
        "radix#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "249": {
      "op": "cover 2",
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "251": {
      "op": "/",
      "defined_out": [
        "radix#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%2#0"
      ]
    },
    "252": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%3#0"
      ]
    },
    "255": {
      "op": "cover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0"
      ]
    },
    "257": {
      "op": "frame_dig -1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "259": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "261": {
      "op": "%",
      "defined_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "262": {
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "263": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "265": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "266": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "extract%1#0"
      ]
    },
    "267": {
      "op": "concat",
      "defined_out": [
        "radix#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%5#0"
      ]
    },
    "268": {
      "op": "uncover 1"
    },
    "270": {
      "retsub": true,
      "op": "retsub"
    },
    "271": {
      "subroutine": "test_cases.debug.contract.DebugContract.test[routing]",
      "params": {},
      "block": "test",
      "stack_in": [],
      "op": "b test_block@0"
    },
    "274": {
      "block": "test_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "277": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "278": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "281": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "282": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "285": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "286": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "288": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "290": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "292": {
      "callsub": "test_cases.debug.contract.DebugContract.test",
      "op": "callsub test_cases.debug.contract.DebugContract.test",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "295": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "296": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "302": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "304": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "305": {
      "op": "log",
      "stack_out": []
    },
    "306": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "307": {
      "op": "return",
      "stack_out": []
    },
    "308": {
      "subroutine": "test_cases.debug.contract.DebugContract.test",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64",
        "z#0": "uint64"
      },
      "block": "test_cases.debug.contract.DebugContract.test",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "311": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bee#0"
      ]
    },
    "312": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "313": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30"
      ]
    },
    "314": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ]
    },
    "315": {
      "op": "b test_cases.debug.contract.DebugContract.test_block@0"
    },
    "318": {
      "block": "test_cases.debug.contract.DebugContract.test_block@0",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)"
      ]
    },
    "320": {
      "op": "intc 4 // TMPL_A_MULT",
      "defined_out": [
        "TMPL_A_MULT",
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ]
    },
    "322": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0"
      ]
    },
    "323": {
      "op": "frame_dig -3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "325": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "327": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "tmp%1#0"
      ]
    },
    "328": {
      "op": "dupn 2",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "330": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "332": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "tmp%2#0"
      ]
    },
    "333": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "334": {
      "op": "cover 2",
      "defined_out": [
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ]
    },
    "336": {
      "op": "<",
      "defined_out": [
        "b#0",
        "c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0"
      ]
    },
    "337": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "340": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@1"
    },
    "343": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@1",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "345": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "y#0 (copy)"
      ]
    },
    "347": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0"
      ]
    },
    "348": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "350": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@11"
    },
    "353": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@11",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "355": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "357": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "358": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "360": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ]
    },
    "361": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@13",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "364": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@12"
    },
    "367": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@12",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "369": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "370": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "372": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "a#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0"
      ]
    },
    "375": {
      "op": "*",
      "defined_out": [
        "a#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%14#0"
      ]
    },
    "376": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "378": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@14"
    },
    "381": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@14",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "383": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "384": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%17#0"
      ]
    },
    "387": {
      "op": "frame_bury 0",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "389": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "391": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "392": {
      "op": "cover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "a#0 (copy)"
      ]
    },
    "394": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%18#0"
      ]
    },
    "395": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "396": {
      "op": "frame_bury 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "398": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "399": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "tmp%19#0"
      ]
    },
    "402": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "404": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ]
    },
    "406": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%20#0"
      ]
    },
    "407": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0",
        "a#0"
      ]
    },
    "409": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ]
    },
    "411": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@16",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "414": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@15"
    },
    "417": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@15",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "419": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "421": {
      "op": "+",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "422": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "424": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@16"
    },
    "427": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@16",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "429": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "430": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "432": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "433": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "435": {
      "op": "<",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%22#0"
      ]
    },
    "436": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0",
        "a#0"
      ]
    },
    "438": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0"
      ]
    },
    "440": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@18",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "443": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@17"
    },
    "446": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@17",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "448": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "450": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "451": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "453": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@18"
    },
    "456": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@18",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "458": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "459": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "461": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "463": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "465": {
      "op": "+",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0"
      ]
    },
    "466": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0",
        "a#0 (copy)"
      ]
    },
    "468": {
      "op": ">",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%25#0"
      ]
    },
    "469": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0",
        "a#0"
      ]
    },
    "471": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ]
    },
    "473": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@20",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "476": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@19"
    },
    "479": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@19",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "481": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0 (copy)"
      ]
    },
    "483": {
      "op": "*",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "484": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "486": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@20"
    },
    "489": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@20",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#0",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "491": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "492": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "a#30",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0"
      ]
    },
    "495": {
      "op": "bytec_2 // \" \"",
      "defined_out": [
        "\" \"",
        "a#0",
        "a#30",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0",
        "\" \""
      ]
    },
    "496": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%28#0"
      ]
    },
    "497": {
      "op": "frame_dig 0",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%28#0",
        "bee#0"
      ]
    },
    "499": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%29#0"
      ]
    },
    "500": {
      "op": "bytec_2 // \" \"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%29#0",
        "\" \""
      ]
    },
    "501": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%30#0"
      ]
    },
    "502": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "cea#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%30#0",
        "cea#0"
      ]
    },
    "504": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "cea#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%31#0"
      ]
    },
    "505": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "506": {
      "op": "frame_bury 0"
    },
    "508": {
      "retsub": true,
      "op": "retsub"
    },
    "509": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@13",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "511": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "512": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "514": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "b#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%15#0"
      ]
    },
    "517": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%16#0"
      ]
    },
    "518": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "520": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@14"
    },
    "523": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "525": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "527": {
      "op": "<",
      "defined_out": [
        "a#0",
        "c#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ]
    },
    "528": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "531": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@3"
    },
    "534": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@3",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "536": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0 (copy)"
      ]
    },
    "538": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%6#0"
      ]
    },
    "539": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "541": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@10"
    },
    "544": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@10",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@11"
    },
    "547": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@4",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "549": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "551": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%7#0"
      ]
    },
    "552": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "555": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@5"
    },
    "558": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "560": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "3"
      ]
    },
    "561": {
      "op": "*",
      "defined_out": [
        "a#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0"
      ]
    },
    "562": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "564": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@9"
    },
    "567": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@9",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@10"
    },
    "570": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@6",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "572": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "573": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "a#0"
      ]
    },
    "575": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "576": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0",
        "b#0"
      ]
    },
    "578": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0"
      ]
    },
    "580": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@8",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "583": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@7"
    },
    "586": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@7",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "588": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "590": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "591": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "593": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@8"
    },
    "596": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@8",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "b#10"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#10"
      ]
    },
    "598": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#10"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "600": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@9"
    }
  }
}