{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AACK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAoCL;;;;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;;AAAL;;AAAA;;AACI;;AAAA;AACA;;AAAA;;AAAA;AACQ;AAAA;AAAA;;AAAL;;AAAA;;AAAA;AAAP;AAGJ;;;;;;AAEa;AACD;AAAR;AACG;;AAAA;AAAP;;;AAAA;;;AAFa;AAGE;;AAAA;AAAA;AAAP;;AAAA;AACQ;;AAAA;;AAAA;AAAA;;AAAA;AAAL;;;AAAA;;AAA0B;;AAAA;;AAAA;AAJxB;AAIiB;;AAAA;AAAA;AAAnB;AAAP;;AAAA;;;;AArDC;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAL;;;;;;;;;;AAEY;;AAAI;AAAJ;AACA;;AAAA;;AAAA;AAAJ;;AACI;;AAAA;AAAJ;AAAA;;AACG;AAAX;;;AAAA;;;AACgB;;AAAA;;AAAA;AAAJ;;;;;AAQD;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAIE;;AAAA;AAAA;;;AAAN;;AACI;;AAAA;AAAA;;AAAA;AAAJ;AAAA;;AACM;AAAA;;;AAAN;;AAEG;;AAAA;;;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;;;;;;AACD;;AAAA;AAAA;;AAAA;;;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;AAAA;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;AAAA;;AAAA;;;;;AAAX;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;AAEF;;AAAA;AAAA;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AAEA;;AAAA;AAhBS;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAVC;;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;;AAAA;;AAAA;AAAJ;;;;;;;;AACC;;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;;AAAI;;AAAJ;AAAJ;;;;;;;;AACC;;AAAA;AAAA;;AAAA;;;;;AAAb;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 TMPL_A_MULT"
    },
    "6": {
      "op": "bytecblock 0x30313233343536373839 \"\" \" \""
    },
    "22": {
      "op": "b main_block@0"
    },
    "25": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "28": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "30": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "31": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "32": {
      "op": "bz main___algopy_default_create@5",
      "stack_out": []
    },
    "35": {
      "op": "b main_abi_routing@2"
    },
    "38": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "41": {
      "op": "pushbytes 0x53574bff // method \"test(uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test(uint64,uint64,uint64)uint64)"
      ]
    },
    "47": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ]
    },
    "49": {
      "op": "match main_test_route@3",
      "stack_out": []
    },
    "53": {
      "op": "b main_switch_case_next@4"
    },
    "56": {
      "block": "main_switch_case_next@4",
      "stack_in": [],
      "op": "b main_after_if_else@6"
    },
    "59": {
      "block": "main_after_if_else@6",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "60": {
      "block": "main_test_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "62": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "63": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "64": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "66": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0"
      ]
    },
    "67": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "68": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "69": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": []
    },
    "70": {
      "callsub": "test_cases.debug.contract.DebugContract.test[routing]",
      "op": "callsub test"
    },
    "73": {
      "op": "b main_switch_case_next@4"
    },
    "76": {
      "block": "main___algopy_default_create@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "78": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "79": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "80": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "82": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "0"
      ]
    },
    "83": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "84": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "85": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "86": {
      "op": "b main_block@8"
    },
    "89": {
      "block": "main_block@8",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.debug.contract.DebugContract.__algopy_default_create@9"
    },
    "92": {
      "block": "main_after_inlined_test_cases.debug.contract.DebugContract.__algopy_default_create@9",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "93": {
      "op": "return",
      "stack_out": []
    },
    "94": {
      "subroutine": "test_cases.debug.contract.some_func",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "some_func",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "97": {
      "op": "b some_func_block@0"
    },
    "100": {
      "block": "some_func_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "102": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "104": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "105": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "107": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "109": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "111": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "112": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "114": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "116": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "118": {
      "op": "+",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "119": {
      "op": "dup"
    },
    "120": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "122": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "2"
      ]
    },
    "124": {
      "op": "*",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "125": {
      "op": "dup"
    },
    "126": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "128": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "130": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "131": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ]
    },
    "133": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "135": {
      "op": "*",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0"
      ]
    },
    "136": {
      "op": "dup2",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "137": {
      "op": "<",
      "defined_out": [
        "tmp%6#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "tmp%6#0"
      ]
    },
    "138": {
      "op": "cover 1",
      "stack_out": [
        "x#0",
        "tmp%6#0",
        "y#0"
      ]
    },
    "140": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "y#0",
        "x#0"
      ]
    },
    "142": {
      "op": "uncover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%6#0"
      ]
    },
    "144": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "145": {
      "retsub": true,
      "op": "retsub"
    },
    "146": {
      "subroutine": "test_cases.debug.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "149": {
      "op": "b itoa_block@0"
    },
    "152": {
      "block": "itoa_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "153": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "154": {
      "op": "dup",
      "defined_out": [
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0"
      ]
    },
    "155": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "157": {
      "op": ">",
      "defined_out": [
        "radix#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%1#0"
      ]
    },
    "158": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": [
        "radix#0"
      ]
    },
    "161": {
      "op": "b itoa_if_body@1"
    },
    "164": {
      "block": "itoa_if_body@1",
      "stack_in": [
        "radix#0"
      ],
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839"
      ]
    },
    "165": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x30313233343536373839",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)"
      ]
    },
    "167": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)",
        "1"
      ]
    },
    "168": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "radix#0",
        "extract%0#0"
      ]
    },
    "169": {
      "op": "uncover 1"
    },
    "171": {
      "retsub": true,
      "op": "retsub"
    },
    "172": {
      "block": "itoa_after_if_else@2",
      "stack_in": [
        "radix#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "174": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "176": {
      "op": "dup",
      "defined_out": [
        "i#0 (copy)",
        "radix#0",
        "radix#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "177": {
      "op": "cover 2",
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "179": {
      "op": "/",
      "defined_out": [
        "radix#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%2#0"
      ]
    },
    "180": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%3#0"
      ]
    },
    "183": {
      "op": "cover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0"
      ]
    },
    "185": {
      "op": "frame_dig -1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "187": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "189": {
      "op": "%",
      "defined_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "190": {
      "op": "bytec_0 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "191": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "193": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "194": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "extract%1#0"
      ]
    },
    "195": {
      "op": "concat",
      "defined_out": [
        "radix#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%5#0"
      ]
    },
    "196": {
      "op": "uncover 1"
    },
    "198": {
      "retsub": true,
      "op": "retsub"
    },
    "199": {
      "subroutine": "test_cases.debug.contract.DebugContract.test[routing]",
      "params": {},
      "block": "test",
      "stack_in": [],
      "op": "b test_block@0"
    },
    "202": {
      "block": "test_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "205": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "206": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "209": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "210": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "213": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "214": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "216": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "218": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "220": {
      "callsub": "test_cases.debug.contract.DebugContract.test",
      "op": "callsub test_cases.debug.contract.DebugContract.test",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "223": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "224": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "230": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "232": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "233": {
      "op": "log",
      "stack_out": []
    },
    "234": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "235": {
      "op": "return",
      "stack_out": []
    },
    "236": {
      "subroutine": "test_cases.debug.contract.DebugContract.test",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64",
        "z#0": "uint64"
      },
      "block": "test_cases.debug.contract.DebugContract.test",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "239": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bee#0"
      ]
    },
    "240": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "241": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11"
      ]
    },
    "242": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5"
      ]
    },
    "243": {
      "op": "b test_cases.debug.contract.DebugContract.test_block@0"
    },
    "246": {
      "block": "test_cases.debug.contract.DebugContract.test_block@0",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "x#0 (copy)"
      ]
    },
    "248": {
      "op": "intc_2 // TMPL_A_MULT",
      "defined_out": [
        "TMPL_A_MULT",
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ]
    },
    "249": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0"
      ]
    },
    "250": {
      "op": "frame_dig -3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "252": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "254": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "tmp%1#0"
      ]
    },
    "255": {
      "op": "dupn 2",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "257": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "259": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "b#0",
        "tmp%2#0"
      ]
    },
    "260": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "261": {
      "op": "cover 2",
      "defined_out": [
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ]
    },
    "263": {
      "op": "<",
      "defined_out": [
        "b#0",
        "c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0"
      ]
    },
    "264": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "267": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@1"
    },
    "270": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@1",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "272": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "y#0 (copy)"
      ]
    },
    "274": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0"
      ]
    },
    "275": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "277": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@11"
    },
    "280": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@11",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "282": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "284": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "285": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "287": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ]
    },
    "288": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@13",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "291": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@12"
    },
    "294": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@12",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "296": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "297": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "299": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "a#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0"
      ]
    },
    "302": {
      "op": "*",
      "defined_out": [
        "a#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%14#0"
      ]
    },
    "303": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "305": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@14"
    },
    "308": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@14",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "310": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "311": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%17#0"
      ]
    },
    "314": {
      "op": "frame_bury 0",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "316": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "318": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "319": {
      "op": "cover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "a#0 (copy)"
      ]
    },
    "321": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%18#0"
      ]
    },
    "322": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "323": {
      "op": "frame_bury 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "325": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "326": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "tmp%19#0"
      ]
    },
    "329": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "331": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ]
    },
    "333": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%20#0"
      ]
    },
    "334": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0",
        "a#0"
      ]
    },
    "336": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ]
    },
    "338": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@16",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "341": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@15"
    },
    "344": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@15",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "346": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "348": {
      "op": "+",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "349": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "351": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@16"
    },
    "354": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@16",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#11"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11"
      ]
    },
    "356": {
      "op": "dup",
      "defined_out": [
        "a#11",
        "a#11 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "a#11 (copy)"
      ]
    },
    "357": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#11",
        "a#11 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "a#11 (copy)",
        "b#0"
      ]
    },
    "359": {
      "op": "<",
      "defined_out": [
        "a#11",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%22#0"
      ]
    },
    "360": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0",
        "a#11"
      ]
    },
    "362": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#11",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0"
      ]
    },
    "364": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@18",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "367": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@17"
    },
    "370": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@17",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#11"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11"
      ]
    },
    "372": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#11",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "b#0"
      ]
    },
    "374": {
      "op": "+",
      "defined_out": [
        "a#11",
        "b#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%23#0"
      ]
    },
    "375": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#11",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "377": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@18"
    },
    "380": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@18",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "382": {
      "op": "frame_dig 6",
      "defined_out": [
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ]
    },
    "384": {
      "op": "+",
      "defined_out": [
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0"
      ]
    },
    "385": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0",
        "a#0"
      ]
    },
    "387": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "388": {
      "op": "cover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0",
        "a#0 (copy)"
      ]
    },
    "390": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%25#0"
      ]
    },
    "391": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0",
        "a#0"
      ]
    },
    "393": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ]
    },
    "395": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@20",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "398": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@19"
    },
    "401": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@19",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "403": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0 (copy)"
      ]
    },
    "405": {
      "op": "*",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "406": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "408": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@20"
    },
    "411": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@20",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#11"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11"
      ]
    },
    "413": {
      "op": "dup",
      "defined_out": [
        "a#11",
        "a#11 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "a#11 (copy)"
      ]
    },
    "414": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#11",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "aye#0"
      ]
    },
    "417": {
      "op": "bytec_2 // \" \"",
      "defined_out": [
        "\" \"",
        "a#11",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "aye#0",
        "\" \""
      ]
    },
    "418": {
      "op": "concat",
      "defined_out": [
        "a#11",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%28#0"
      ]
    },
    "419": {
      "op": "frame_dig 0",
      "defined_out": [
        "a#11",
        "bee#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%28#0",
        "bee#0"
      ]
    },
    "421": {
      "op": "concat",
      "defined_out": [
        "a#11",
        "bee#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%29#0"
      ]
    },
    "422": {
      "op": "bytec_2 // \" \"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%29#0",
        "\" \""
      ]
    },
    "423": {
      "op": "concat",
      "defined_out": [
        "a#11",
        "bee#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%30#0"
      ]
    },
    "424": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#11",
        "bee#0",
        "cea#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%30#0",
        "cea#0"
      ]
    },
    "426": {
      "op": "concat",
      "defined_out": [
        "a#11",
        "bee#0",
        "cea#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11",
        "tmp%31#0"
      ]
    },
    "427": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#11"
      ]
    },
    "428": {
      "op": "frame_bury 0"
    },
    "430": {
      "retsub": true,
      "op": "retsub"
    },
    "431": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@13",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "433": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "434": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "436": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "b#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%15#0"
      ]
    },
    "439": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%16#0"
      ]
    },
    "440": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "442": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@14"
    },
    "445": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "447": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "449": {
      "op": "<",
      "defined_out": [
        "a#0",
        "c#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ]
    },
    "450": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "453": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@3"
    },
    "456": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@3",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "458": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0 (copy)"
      ]
    },
    "460": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%6#0"
      ]
    },
    "461": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "463": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@10"
    },
    "466": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@10",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@11"
    },
    "469": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@4",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "471": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "473": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%7#0"
      ]
    },
    "474": {
      "op": "bz test_cases.debug.contract.DebugContract.test_else_body@6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "477": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@5"
    },
    "480": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "482": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "3"
      ]
    },
    "484": {
      "op": "*",
      "defined_out": [
        "a#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0"
      ]
    },
    "485": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "487": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@9"
    },
    "490": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@9",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@10"
    },
    "493": {
      "block": "test_cases.debug.contract.DebugContract.test_else_body@6",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "495": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "496": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "a#0"
      ]
    },
    "498": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "499": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0",
        "b#0"
      ]
    },
    "501": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0"
      ]
    },
    "503": {
      "op": "bz test_cases.debug.contract.DebugContract.test_after_if_else@8",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "506": {
      "op": "b test_cases.debug.contract.DebugContract.test_if_body@7"
    },
    "509": {
      "block": "test_cases.debug.contract.DebugContract.test_if_body@7",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "511": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "513": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "514": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "516": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@8"
    },
    "519": {
      "block": "test_cases.debug.contract.DebugContract.test_after_if_else@8",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "b#5"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0",
        "b#5"
      ]
    },
    "521": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#5"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#11",
        "b#5",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "523": {
      "op": "b test_cases.debug.contract.DebugContract.test_after_if_else@9"
    }
  }
}