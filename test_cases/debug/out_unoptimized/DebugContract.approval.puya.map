{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;;;;;;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AACK;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;;AAAL;;AAAA;;AACI;;AAAA;AACA;;AAAA;;AAAA;AACQ;AAAA;AAAA;;AAAL;;AAAA;;AAAA;AAAP;AAGJ;;;;;;AAEa;AACD;AAAR;AACG;;AAAA;AAAP;;;AAAA;;;AAFa;AAGE;;AAAA;AAAA;AAAP;;AAAA;AACQ;;AAAA;;AAAA;AAAA;;AAAA;AAAL;;;AAAA;;AAA0B;;AAAA;;AAAA;AAJxB;AAIiB;;AAAA;AAAA;AAAnB;AAAP;;AAAA;AArDJ;;;;;;;;;;AAEY;;AAAI;AAAJ;AACA;;AAAA;;AAAA;AAAJ;;AACI;;AAAA;AAAJ;AAAA;;AACG;AAAX;;;AAAA;;;AACgB;;AAAA;;AAAA;AAAJ;;;;;AAQD;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAIE;;AAAA;AAAA;;;AAAN;;AACI;;AAAA;AAAA;;AAAA;AAAJ;AAAA;;AACM;AAAA;;;AAAN;;AAEG;;AAAA;;;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;;;;;;;;;;;AACD;AAAA;;AAAA;;;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;;;;;;;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;;;;;AAAX;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;;;AAEF;AAAA;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AAEA;;AAAA;AAhBS;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAVC;;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;;AAAA;;AAAA;AAAJ;;;;;;;;AACC;;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;;AAAI;;AAAJ;AAAJ;;;;;;;;AACC;;AAAA;AAAA;;AAAA;;;;;AAAb;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 TMPL_A_MULT"
    },
    "6": {
      "op": "bytecblock \"\" 0x30313233343536373839 \" \""
    },
    "22": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "23": {
      "op": "b main_block@0"
    },
    "26": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "29": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "31": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "32": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "33": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "36": {
      "op": "b main_abi_routing@2"
    },
    "39": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "42": {
      "op": "pushbytes 0x53574bff // method \"test(uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(test(uint64,uint64,uint64)uint64)"
      ]
    },
    "48": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "Method(test(uint64,uint64,uint64)uint64)",
        "tmp%2#0"
      ]
    },
    "50": {
      "op": "match main_test_route@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "b main_switch_case_default@4"
    },
    "57": {
      "block": "main_switch_case_default@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@5"
    },
    "60": {
      "block": "main_switch_case_next@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "63": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.debug.contract.DebugContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.debug.contract.DebugContract.__puya_arc4_router__%0#0"
      ]
    },
    "64": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "66": {
      "op": "b main_after_inlined_test_cases.debug.contract.DebugContract.__puya_arc4_router__@11"
    },
    "69": {
      "block": "main_after_inlined_test_cases.debug.contract.DebugContract.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "block": "main_test_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "72": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "73": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "74": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "78": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "79": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "83": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "84": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "87": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "88": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "91": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "92": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%7#0"
      ]
    },
    "94": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "96": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "98": {
      "callsub": "test_cases.debug.contract.DebugContract.test",
      "op": "callsub test",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "101": {
      "op": "itob",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "102": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "108": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%11#0"
      ]
    },
    "110": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "111": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.debug.contract.DebugContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.debug.contract.DebugContract.__puya_arc4_router__%0#0"
      ]
    },
    "113": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "115": {
      "op": "b main_after_inlined_test_cases.debug.contract.DebugContract.__puya_arc4_router__@11"
    },
    "118": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0",
        "0"
      ]
    },
    "121": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%13#0"
      ]
    },
    "123": {
      "op": "match main___algopy_default_create@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "127": {
      "op": "b main_switch_case_default@8"
    },
    "130": {
      "block": "main_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@9"
    },
    "133": {
      "block": "main_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "136": {
      "block": "main___algopy_default_create@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "138": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0",
        "0"
      ]
    },
    "139": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "140": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "b main_block@12"
    },
    "144": {
      "block": "main_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.debug.contract.DebugContract.__algopy_default_create@13"
    },
    "147": {
      "block": "main_after_inlined_test_cases.debug.contract.DebugContract.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.debug.contract.DebugContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.debug.contract.DebugContract.__puya_arc4_router__%0#0"
      ]
    },
    "148": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "op": "b main_after_inlined_test_cases.debug.contract.DebugContract.__puya_arc4_router__@11"
    },
    "153": {
      "subroutine": "test_cases.debug.contract.some_func",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "some_func",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "156": {
      "op": "b some_func_block@0"
    },
    "159": {
      "block": "some_func_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "161": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "163": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "164": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "166": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "168": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "170": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "171": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "173": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "175": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "177": {
      "op": "+",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "178": {
      "op": "dup"
    },
    "179": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "181": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "2"
      ]
    },
    "183": {
      "op": "*",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "184": {
      "op": "dup"
    },
    "185": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "187": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "189": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "190": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ]
    },
    "192": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "194": {
      "op": "*",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0"
      ]
    },
    "195": {
      "op": "dup2",
      "defined_out": [
        "x#0",
        "x#0 (copy)",
        "y#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "196": {
      "op": "<",
      "defined_out": [
        "tmp%6#0",
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "x#0",
        "y#0",
        "tmp%6#0"
      ]
    },
    "197": {
      "op": "cover 1",
      "stack_out": [
        "x#0",
        "tmp%6#0",
        "y#0"
      ]
    },
    "199": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "y#0",
        "x#0"
      ]
    },
    "201": {
      "op": "uncover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%6#0"
      ]
    },
    "203": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "204": {
      "retsub": true,
      "op": "retsub"
    },
    "205": {
      "subroutine": "test_cases.debug.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "208": {
      "op": "b itoa_block@0"
    },
    "211": {
      "block": "itoa_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "212": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "213": {
      "op": "dup",
      "defined_out": [
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0"
      ]
    },
    "214": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "216": {
      "op": ">",
      "defined_out": [
        "radix#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%1#0"
      ]
    },
    "217": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": [
        "radix#0"
      ]
    },
    "220": {
      "op": "b itoa_if_body@1"
    },
    "223": {
      "block": "itoa_if_body@1",
      "stack_in": [
        "radix#0"
      ],
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839"
      ]
    },
    "224": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x30313233343536373839",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)"
      ]
    },
    "226": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)",
        "1"
      ]
    },
    "227": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "radix#0",
        "extract%0#0"
      ]
    },
    "228": {
      "op": "uncover 1"
    },
    "230": {
      "retsub": true,
      "op": "retsub"
    },
    "231": {
      "block": "itoa_after_if_else@2",
      "stack_in": [
        "radix#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "233": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "235": {
      "op": "dup",
      "defined_out": [
        "i#0 (copy)",
        "radix#0",
        "radix#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "236": {
      "op": "cover 2",
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "238": {
      "op": "/",
      "defined_out": [
        "radix#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%2#0"
      ]
    },
    "239": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%3#0"
      ]
    },
    "242": {
      "op": "cover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0"
      ]
    },
    "244": {
      "op": "frame_dig -1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "246": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "248": {
      "op": "%",
      "defined_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "249": {
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "250": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "252": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "253": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "extract%1#0"
      ]
    },
    "254": {
      "op": "concat",
      "defined_out": [
        "radix#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%5#0"
      ]
    },
    "255": {
      "op": "uncover 1"
    },
    "257": {
      "retsub": true,
      "op": "retsub"
    },
    "258": {
      "subroutine": "test_cases.debug.contract.DebugContract.test",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64",
        "z#0": "uint64"
      },
      "block": "test",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "261": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bee#0"
      ]
    },
    "262": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "263": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30"
      ]
    },
    "264": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ]
    },
    "265": {
      "op": "b test_block@0"
    },
    "268": {
      "block": "test_block@0",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)"
      ]
    },
    "270": {
      "op": "intc_2 // TMPL_A_MULT",
      "defined_out": [
        "TMPL_A_MULT",
        "x#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ]
    },
    "271": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0"
      ]
    },
    "272": {
      "op": "frame_dig -3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "274": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "276": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "tmp%1#0"
      ]
    },
    "277": {
      "op": "dupn 2",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "279": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "281": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "tmp%2#0"
      ]
    },
    "282": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "283": {
      "op": "cover 2",
      "defined_out": [
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ]
    },
    "285": {
      "op": "<",
      "defined_out": [
        "b#0",
        "c#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0"
      ]
    },
    "286": {
      "op": "bz test_else_body@2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "289": {
      "op": "b test_if_body@1"
    },
    "292": {
      "block": "test_if_body@1",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "294": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "y#0 (copy)"
      ]
    },
    "296": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0"
      ]
    },
    "297": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "299": {
      "op": "b test_after_if_else@11"
    },
    "302": {
      "block": "test_after_if_else@11",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "304": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "306": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "307": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "309": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%12#0"
      ]
    },
    "310": {
      "op": "bz test_else_body@13",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "313": {
      "op": "b test_if_body@12"
    },
    "316": {
      "block": "test_if_body@12",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "318": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "319": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "321": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "a#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0"
      ]
    },
    "324": {
      "op": "*",
      "defined_out": [
        "a#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%14#0"
      ]
    },
    "325": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "327": {
      "op": "b test_after_if_else@14"
    },
    "330": {
      "block": "test_after_if_else@14",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "332": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "333": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%17#0"
      ]
    },
    "336": {
      "op": "frame_bury 0",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "338": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "340": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "341": {
      "op": "cover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "a#0 (copy)"
      ]
    },
    "343": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%18#0"
      ]
    },
    "344": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "345": {
      "op": "frame_bury 6",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "347": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "348": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "tmp%19#0"
      ]
    },
    "351": {
      "op": "frame_bury 1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "353": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ]
    },
    "355": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%20#0"
      ]
    },
    "356": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0",
        "a#0"
      ]
    },
    "358": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%20#0"
      ]
    },
    "360": {
      "op": "bz test_after_if_else@16",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "363": {
      "op": "b test_if_body@15"
    },
    "366": {
      "block": "test_if_body@15",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "368": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "370": {
      "op": "+",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "371": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "373": {
      "op": "b test_after_if_else@16"
    },
    "376": {
      "block": "test_after_if_else@16",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "378": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "379": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "381": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "382": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "384": {
      "op": "<",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%22#0"
      ]
    },
    "385": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0",
        "a#0"
      ]
    },
    "387": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0"
      ]
    },
    "389": {
      "op": "bz test_after_if_else@18",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "392": {
      "op": "b test_if_body@17"
    },
    "395": {
      "block": "test_if_body@17",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "397": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "399": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "400": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "402": {
      "op": "b test_after_if_else@18"
    },
    "405": {
      "block": "test_after_if_else@18",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#30"
      ]
    },
    "407": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "408": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "410": {
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "412": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "414": {
      "op": "+",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0"
      ]
    },
    "415": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%24#0",
        "a#0 (copy)"
      ]
    },
    "417": {
      "op": ">",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%25#0"
      ]
    },
    "418": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0",
        "a#0"
      ]
    },
    "420": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0",
        "a#30",
        "b#0",
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ]
    },
    "422": {
      "op": "bz test_after_if_else@20",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "425": {
      "op": "b test_if_body@19"
    },
    "428": {
      "block": "test_if_body@19",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "430": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0 (copy)"
      ]
    },
    "432": {
      "op": "*",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "433": {
      "op": "frame_bury 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "435": {
      "op": "b test_after_if_else@20"
    },
    "438": {
      "block": "test_after_if_else@20",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a#0",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "440": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "a#30"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "441": {
      "callsub": "test_cases.debug.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "a#30",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0"
      ]
    },
    "444": {
      "op": "bytec_2 // \" \"",
      "defined_out": [
        "\" \"",
        "a#0",
        "a#30",
        "aye#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0",
        "\" \""
      ]
    },
    "445": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%28#0"
      ]
    },
    "446": {
      "op": "frame_dig 0",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%28#0",
        "bee#0"
      ]
    },
    "448": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%29#0"
      ]
    },
    "449": {
      "op": "bytec_2 // \" \"",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%29#0",
        "\" \""
      ]
    },
    "450": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%30#0"
      ]
    },
    "451": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "cea#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%30#0",
        "cea#0"
      ]
    },
    "453": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "a#30",
        "bee#0",
        "cea#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%31#0"
      ]
    },
    "454": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "455": {
      "op": "frame_bury 0"
    },
    "457": {
      "retsub": true,
      "op": "retsub"
    },
    "458": {
      "block": "test_else_body@13",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "460": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "461": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ]
    },
    "463": {
      "callsub": "test_cases.debug.contract.some_func",
      "op": "callsub some_func",
      "defined_out": [
        "b#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%15#0"
      ]
    },
    "466": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%16#0"
      ]
    },
    "467": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "469": {
      "op": "b test_after_if_else@14"
    },
    "472": {
      "block": "test_else_body@2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "474": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "476": {
      "op": "<",
      "defined_out": [
        "a#0",
        "c#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ]
    },
    "477": {
      "op": "bz test_else_body@4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "480": {
      "op": "b test_if_body@3"
    },
    "483": {
      "block": "test_if_body@3",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "485": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "z#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "z#0 (copy)"
      ]
    },
    "487": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%6#0"
      ]
    },
    "488": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "490": {
      "op": "b test_after_if_else@10"
    },
    "493": {
      "block": "test_after_if_else@10",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "b test_after_if_else@11"
    },
    "496": {
      "block": "test_else_body@4",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "498": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "500": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%7#0"
      ]
    },
    "501": {
      "op": "bz test_else_body@6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "504": {
      "op": "b test_if_body@5"
    },
    "507": {
      "block": "test_if_body@5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "509": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "3"
      ]
    },
    "511": {
      "op": "*",
      "defined_out": [
        "a#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0"
      ]
    },
    "512": {
      "op": "frame_bury 4",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "514": {
      "op": "b test_after_if_else@9"
    },
    "517": {
      "block": "test_after_if_else@9",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "b test_after_if_else@10"
    },
    "520": {
      "block": "test_else_body@6",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "522": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ]
    },
    "523": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "a#0"
      ]
    },
    "525": {
      "op": ">",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "526": {
      "op": "uncover 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0",
        "b#0"
      ]
    },
    "528": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0"
      ]
    },
    "530": {
      "op": "bz test_after_if_else@8",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "533": {
      "op": "b test_if_body@7"
    },
    "536": {
      "block": "test_if_body@7",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "538": {
      "op": "frame_dig 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "540": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ]
    },
    "541": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "543": {
      "op": "b test_after_if_else@8"
    },
    "546": {
      "block": "test_after_if_else@8",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "b#10"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#10"
      ]
    },
    "548": {
      "op": "frame_bury 5",
      "defined_out": [
        "b#10"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "550": {
      "op": "b test_after_if_else@9"
    }
  }
}