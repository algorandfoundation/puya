// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn NumAppArgs                                                                  tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        bz main___algopy_default_create@9 ; b main_abi_routing@2

    main_abi_routing@2:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn OnCompletion                                                                tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        !                                                                               tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                  tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                               tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                  tmp%4#0
        assert
        txna ApplicationArgs 0                                                          tmp%6#0
        v-store tmp%6#0
        method create_group(acfg,appl)(uint64,uint64)                                   Method(create_group(acfg,appl)(uint64,uint64))
        method log_group(appl)void                                                      Method(create_group(acfg,appl)(uint64,uint64)),Method(log_group(appl)void)
        v-load tmp%6#0                                                                  Method(create_group(acfg,appl)(uint64,uint64)),Method(log_group(appl)void),tmp%6#0
        match main_create_group_route@4 main_log_group_route@5 ; b main_after_if_else@8

    main_create_group_route@4:
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        callsub create_group
        b main_after_if_else@8

    main_log_group_route@5:
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        callsub log_group
        b main_after_if_else@8

    main_after_if_else@8:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        err

    main___algopy_default_create@9:
        txn OnCompletion                                                                tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        !                                                                               tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                               tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                  tmp%9#0
        !                                                                               tmp%10#0
        v-store tmp%10#0
        v-load tmp%8#0                                                                  tmp%8#0
        v-load tmp%10#0                                                                 tmp%8#0,tmp%10#0
        &&                                                                              tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                 tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                           1
        return


// test_cases.group_side_effects.contract.AppExpectingEffects.create_group[routing]() -> void:
subroutine create_group:
    create_group_block@0:
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        txn GroupIndex                                                                  tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                  tmp%0#0
        int 2                                                                           tmp%0#0,2
        -                                                                               asset_create#0
        v-store asset_create#0
        v-load asset_create#0                                                           asset_create#0
        gtxns TypeEnum                                                                  gtxn_type%0#0
        v-store gtxn_type%0#0
        v-load gtxn_type%0#0                                                            gtxn_type%0#0
        int acfg                                                                        gtxn_type%0#0,acfg
        ==                                                                              gtxn_type_matches%0#0
        v-store gtxn_type_matches%0#0
        v-load gtxn_type_matches%0#0                                                    gtxn_type_matches%0#0
        assert // transaction type is acfg
        txn GroupIndex                                                                  tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        int 1                                                                           tmp%1#0,1
        -                                                                               app_create#0
        v-store app_create#0
        v-load app_create#0                                                             app_create#0
        gtxns TypeEnum                                                                  gtxn_type%1#0
        v-store gtxn_type%1#0
        v-load gtxn_type%1#0                                                            gtxn_type%1#0
        int appl                                                                        gtxn_type%1#0,appl
        ==                                                                              gtxn_type_matches%1#0
        v-store gtxn_type_matches%1#0
        v-load gtxn_type_matches%1#0                                                    gtxn_type_matches%1#0
        assert // transaction type is appl
        // group_side_effects/contract.py:11
        // assert asset_create.created_asset.id, "expected asset created"
        v-load asset_create#0                                                           asset_create#0
        gtxns CreatedAssetID                                                            tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                  tmp%0#0
        assert // expected asset created
        // group_side_effects/contract.py:13
        // op.gaid(asset_create.group_index) == asset_create.created_asset.id
        v-load asset_create#0                                                           asset_create#0
        gtxns GroupIndex                                                                tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                  tmp%2#1
        gaids                                                                           tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                  tmp%3#1
        v-load tmp%0#0                                                                  tmp%3#1,tmp%0#0
        ==                                                                              tmp%5#1
        v-store tmp%5#1
        // group_side_effects/contract.py:12-14
        // assert (
        //     op.gaid(asset_create.group_index) == asset_create.created_asset.id
        // ), "expected correct asset id"
        v-load tmp%5#1                                                                  tmp%5#1
        assert // expected correct asset id
        // group_side_effects/contract.py:15
        // assert app_create.created_app.id, "expected app created"
        v-load app_create#0                                                             app_create#0
        gtxns CreatedApplicationID                                                      tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        assert // expected app created
        // group_side_effects/contract.py:17
        // op.gaid(app_create.group_index) == app_create.created_app.id
        v-load app_create#0                                                             app_create#0
        gtxns GroupIndex                                                                tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                  tmp%8#0
        gaids                                                                           tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                  tmp%9#0
        v-load tmp%6#0                                                                  tmp%9#0,tmp%6#0
        ==                                                                              tmp%11#0
        v-store tmp%11#0
        // group_side_effects/contract.py:16-18
        // assert (
        //     op.gaid(app_create.group_index) == app_create.created_app.id
        // ), "expected correct app id"
        v-load tmp%11#0                                                                 tmp%11#0
        assert // expected correct app id
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        v-load tmp%0#0                                                                  tmp%0#0
        itob                                                                            aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%6#0                                                                  tmp%6#0
        itob                                                                            aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                               aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                               aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                          aggregate%head%1#0
        v-store aggregate%head%1#0
        byte 0x151f7c75                                                                 0x151f7c75
        v-load aggregate%head%1#0                                                       0x151f7c75,aggregate%head%1#0
        concat                                                                          tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                  tmp%5#0
        log
        int 1                                                                           1
        return


// test_cases.group_side_effects.contract.AppExpectingEffects.log_group[routing]() -> void:
subroutine log_group:
    log_group_block@0:
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        txn GroupIndex                                                                  tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                  tmp%0#0
        int 1                                                                           tmp%0#0,1
        -                                                                               app_call#0
        v-store app_call#0
        v-load app_call#0                                                               app_call#0
        gtxns TypeEnum                                                                  gtxn_type%0#0
        v-store gtxn_type%0#0
        v-load gtxn_type%0#0                                                            gtxn_type%0#0
        int appl                                                                        gtxn_type%0#0,appl
        ==                                                                              gtxn_type_matches%0#0
        v-store gtxn_type_matches%0#0
        v-load gtxn_type_matches%0#0                                                    gtxn_type_matches%0#0
        assert // transaction type is appl
        // group_side_effects/contract.py:24
        // assert app_call.app_args(0) == arc4.arc4_signature(
        v-load app_call#0                                                               app_call#0
        int 0                                                                           app_call#0,0
        gtxnsas ApplicationArgs                                                         tmp%0#1
        v-store tmp%0#1
        // group_side_effects/contract.py:24-26
        // assert app_call.app_args(0) == arc4.arc4_signature(
        //     "some_value()uint64"
        // ), "expected correct method called"
        v-load tmp%0#1                                                                  tmp%0#1
        method some_value()uint64                                                       tmp%0#1,Method(some_value()uint64)
        ==                                                                              tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        assert // expected correct method called
        // group_side_effects/contract.py:27
        // assert app_call.num_logs == 1, "expected logs"
        v-load app_call#0                                                               app_call#0
        gtxns NumLogs                                                                   tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        int 1                                                                           tmp%2#0,1
        ==                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                  tmp%3#0
        assert // expected logs
        // group_side_effects/contract.py:29
        // arc4.UInt64.from_log(app_call.last_log)
        v-load app_call#0                                                               app_call#0
        gtxns LastLog                                                                   awst_tmp%0#0
        v-store awst_tmp%0#0
        v-load awst_tmp%0#0                                                             awst_tmp%0#0
        extract 4 0                                                                     tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                  tmp%4#0
        len                                                                             len%0#0
        v-store len%0#0
        v-load len%0#0                                                                  len%0#0
        int 8                                                                           len%0#0,8
        ==                                                                              eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                   eq%0#0
        assert // invalid number of bytes for arc4.uint64
        v-load awst_tmp%0#0                                                             awst_tmp%0#0
        extract 0 4                                                                     tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                  tmp%5#0
        byte 0x151f7c75                                                                 tmp%5#0,0x151f7c75
        ==                                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        assert // application log value is not the result of an ABI return
        // group_side_effects/contract.py:30
        // == (app_call.group_index + 1) * Global.group_size
        v-load app_call#0                                                               app_call#0
        gtxns GroupIndex                                                                tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        int 1                                                                           tmp%7#0,1
        +                                                                               tmp%8#0
        v-store tmp%8#0
        global GroupSize                                                                tmp%9#0
        v-store tmp%9#0
        v-load tmp%8#0                                                                  tmp%8#0
        v-load tmp%9#0                                                                  tmp%8#0,tmp%9#0
        *                                                                               tmp%10#0
        v-store tmp%10#0
        // group_side_effects/contract.py:29-30
        // arc4.UInt64.from_log(app_call.last_log)
        // == (app_call.group_index + 1) * Global.group_size
        v-load tmp%10#0                                                                 tmp%10#0
        itob                                                                            tmp%11#0
        v-store tmp%11#0
        v-load tmp%4#0                                                                  tmp%4#0
        v-load tmp%11#0                                                                 tmp%4#0,tmp%11#0
        b==                                                                             tmp%12#0
        v-store tmp%12#0
        // group_side_effects/contract.py:28-31
        // assert (
        //     arc4.UInt64.from_log(app_call.last_log)
        //     == (app_call.group_index + 1) * Global.group_size
        // )
        v-load tmp%12#0                                                                 tmp%12#0
        assert
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        int 1                                                                           1
        return


