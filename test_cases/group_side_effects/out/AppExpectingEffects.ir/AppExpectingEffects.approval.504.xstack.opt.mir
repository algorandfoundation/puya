// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn ApplicationID                                                               tmp%0#1
        !                                                                               tmp%1#0
        txn OnCompletion                                                                tmp%1#0,tmp%2#0
        int 1                                                                           tmp%1#0,tmp%2#0,1
        shl                                                                             tmp%1#0,tmp%3#0
        l-load tmp%1#0 1                                                                tmp%3#0,tmp%1#0
        l-load tmp%3#0 1                                                                tmp%1#0,tmp%3#0
        +                                                                               tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%5#0
        method create_group(acfg,appl)(uint64,uint64)                                   tmp%5#0,Method(create_group(acfg,appl)(uint64,uint64))
        method log_group(appl)void                                                      tmp%5#0,Method(create_group(acfg,appl)(uint64,uint64)),Method(log_group(appl)void)
        l-load tmp%5#0 2                                                                Method(create_group(acfg,appl)(uint64,uint64)),Method(log_group(appl)void),tmp%5#0
        match create_group_route@3 log_group_route@4 ; b switch_case_next@6

    create_group_route@3:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        callsub create_group
        b switch_case_next@6

    log_group_route@4:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        callsub log_group
        b switch_case_next@6

    switch_case_next@6:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn NumAppArgs                                                                  tmp%6#0
        !                                                                               tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                           1
        return

    *NOT_IMPLEMENTED:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.group_side_effects.contract.AppExpectingEffects.create_group[routing]() -> void:
subroutine create_group:
    create_group_block@0:
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        txn GroupIndex                                                                  tmp%0#0
        int 2                                                                           tmp%0#0,2
        -                                                                               asset_create#0
        l-load-copy asset_create#0 0                                                    asset_create#0,asset_create#0 (copy)
        gtxns TypeEnum                                                                  asset_create#0,gtxn_type%0#0
        int acfg                                                                        asset_create#0,gtxn_type%0#0,acfg
        ==                                                                              asset_create#0,gtxn_type_matches%0#0
        assert // transaction type is acfg                                              asset_create#0
        txn GroupIndex                                                                  asset_create#0,tmp%1#0
        int 1                                                                           asset_create#0,tmp%1#0,1
        -                                                                               asset_create#0,app_create#0
        l-load-copy app_create#0 0                                                      asset_create#0,app_create#0,app_create#0 (copy)
        gtxns TypeEnum                                                                  asset_create#0,app_create#0,gtxn_type%1#0
        int appl                                                                        asset_create#0,app_create#0,gtxn_type%1#0,appl
        ==                                                                              asset_create#0,app_create#0,gtxn_type_matches%1#0
        assert // transaction type is appl                                              asset_create#0,app_create#0
        // group_side_effects/contract.py:11
        // assert asset_create.created_asset.id, "expected asset created"
        l-load-copy asset_create#0 1                                                    asset_create#0,app_create#0,asset_create#0 (copy)
        gtxns CreatedAssetID                                                            asset_create#0,app_create#0,tmp%0#0
        l-load-copy tmp%0#0 0                                                           asset_create#0,app_create#0,tmp%0#0,tmp%0#0 (copy)
        assert // expected asset created                                                asset_create#0,app_create#0,tmp%0#0
        // group_side_effects/contract.py:13
        // op.gaid(asset_create.group_index) == asset_create.created_asset.id
        l-load asset_create#0 2                                                         app_create#0,tmp%0#0,asset_create#0
        gtxns GroupIndex                                                                app_create#0,tmp%0#0,tmp%2#1
        gaids                                                                           app_create#0,tmp%0#0,tmp%3#1
        l-load-copy tmp%0#0 1                                                           app_create#0,tmp%0#0,tmp%3#1,tmp%0#0 (copy)
        ==                                                                              app_create#0,tmp%0#0,tmp%5#1
        // group_side_effects/contract.py:12-14
        // assert (
        //     op.gaid(asset_create.group_index) == asset_create.created_asset.id
        // ), "expected correct asset id"
        assert // expected correct asset id                                             app_create#0,tmp%0#0
        // group_side_effects/contract.py:15
        // assert app_create.created_app.id, "expected app created"
        l-load-copy app_create#0 1                                                      app_create#0,tmp%0#0,app_create#0 (copy)
        gtxns CreatedApplicationID                                                      app_create#0,tmp%0#0,tmp%6#0
        l-load-copy tmp%6#0 0                                                           app_create#0,tmp%0#0,tmp%6#0,tmp%6#0 (copy)
        assert // expected app created                                                  app_create#0,tmp%0#0,tmp%6#0
        // group_side_effects/contract.py:17
        // op.gaid(app_create.group_index) == app_create.created_app.id
        l-load app_create#0 2                                                           tmp%0#0,tmp%6#0,app_create#0
        gtxns GroupIndex                                                                tmp%0#0,tmp%6#0,tmp%8#0
        gaids                                                                           tmp%0#0,tmp%6#0,tmp%9#0
        l-load-copy tmp%6#0 1                                                           tmp%0#0,tmp%6#0,tmp%9#0,tmp%6#0 (copy)
        ==                                                                              tmp%0#0,tmp%6#0,tmp%11#0
        // group_side_effects/contract.py:16-18
        // assert (
        //     op.gaid(app_create.group_index) == app_create.created_app.id
        // ), "expected correct app id"
        assert // expected correct app id                                               tmp%0#0,tmp%6#0
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        l-load tmp%0#0 1                                                                tmp%6#0,tmp%0#0
        itob                                                                            tmp%6#0,aggregate%val_as_bytes%0#0
        l-load tmp%6#0 1                                                                aggregate%val_as_bytes%0#0,tmp%6#0
        itob                                                                            aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        l-load aggregate%val_as_bytes%0#0 1                                             aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%0#0
        l-load aggregate%val_as_bytes%1#0 1                                             aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                          aggregate%head%1#0
        byte 0x151f7c75                                                                 aggregate%head%1#0,0x151f7c75
        l-load aggregate%head%1#0 1                                                     0x151f7c75,aggregate%head%1#0
        concat                                                                          tmp%5#0
        log
        int 1                                                                           1
        return


// test_cases.group_side_effects.contract.AppExpectingEffects.log_group[routing]() -> void:
subroutine log_group:
    log_group_block@0:
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        txn GroupIndex                                                                  tmp%0#0
        int 1                                                                           tmp%0#0,1
        -                                                                               app_call#0
        l-load-copy app_call#0 0                                                        app_call#0,app_call#0 (copy)
        gtxns TypeEnum                                                                  app_call#0,gtxn_type%0#0
        int appl                                                                        app_call#0,gtxn_type%0#0,appl
        ==                                                                              app_call#0,gtxn_type_matches%0#0
        assert // transaction type is appl                                              app_call#0
        // group_side_effects/contract.py:24
        // assert app_call.app_args(0) == arc4.arc4_signature(
        l-load-copy app_call#0 0                                                        app_call#0,app_call#0 (copy)
        int 0                                                                           app_call#0,app_call#0 (copy),0
        gtxnsas ApplicationArgs                                                         app_call#0,tmp%0#1
        // group_side_effects/contract.py:24-26
        // assert app_call.app_args(0) == arc4.arc4_signature(
        //     "some_value()uint64"
        // ), "expected correct method called"
        method some_value()uint64                                                       app_call#0,tmp%0#1,Method(some_value()uint64)
        ==                                                                              app_call#0,tmp%1#0
        assert // expected correct method called                                        app_call#0
        // group_side_effects/contract.py:27
        // assert app_call.num_logs == 1, "expected logs"
        l-load-copy app_call#0 0                                                        app_call#0,app_call#0 (copy)
        gtxns NumLogs                                                                   app_call#0,tmp%2#0
        int 1                                                                           app_call#0,tmp%2#0,1
        ==                                                                              app_call#0,tmp%3#0
        assert // expected logs                                                         app_call#0
        // group_side_effects/contract.py:29
        // arc4.UInt64.from_log(app_call.last_log)
        l-load-copy app_call#0 0                                                        app_call#0,app_call#0 (copy)
        gtxns LastLog                                                                   app_call#0,awst_tmp%0#0
        l-load-copy awst_tmp%0#0 0                                                      app_call#0,awst_tmp%0#0,awst_tmp%0#0 (copy)
        extract 4 0                                                                     app_call#0,awst_tmp%0#0,tmp%4#0
        l-load awst_tmp%0#0 1                                                           app_call#0,tmp%4#0,awst_tmp%0#0
        extract 0 4                                                                     app_call#0,tmp%4#0,tmp%5#0
        byte 0x151f7c75                                                                 app_call#0,tmp%4#0,tmp%5#0,0x151f7c75
        ==                                                                              app_call#0,tmp%4#0,tmp%6#0
        assert // application log value is not the result of an ABI return              app_call#0,tmp%4#0
        // group_side_effects/contract.py:30
        // == (app_call.group_index + 1) * Global.group_size
        l-load app_call#0 1                                                             tmp%4#0,app_call#0
        gtxns GroupIndex                                                                tmp%4#0,tmp%7#0
        int 1                                                                           tmp%4#0,tmp%7#0,1
        +                                                                               tmp%4#0,tmp%8#0
        global GroupSize                                                                tmp%4#0,tmp%8#0,tmp%9#0
        l-load tmp%8#0 1                                                                tmp%4#0,tmp%9#0,tmp%8#0
        l-load tmp%9#0 1                                                                tmp%4#0,tmp%8#0,tmp%9#0
        *                                                                               tmp%4#0,tmp%10#0
        // group_side_effects/contract.py:29-30
        // arc4.UInt64.from_log(app_call.last_log)
        // == (app_call.group_index + 1) * Global.group_size
        itob                                                                            tmp%4#0,tmp%11#0
        l-load tmp%4#0 1                                                                tmp%11#0,tmp%4#0
        l-load tmp%11#0 1                                                               tmp%4#0,tmp%11#0
        b==                                                                             tmp%12#0
        // group_side_effects/contract.py:28-31
        // assert (
        //     arc4.UInt64.from_log(app_call.last_log)
        //     == (app_call.group_index + 1) * Global.group_size
        // )
        assert
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        int 1                                                                           1
        return


