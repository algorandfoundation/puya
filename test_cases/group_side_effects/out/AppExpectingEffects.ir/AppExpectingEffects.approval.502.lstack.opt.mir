// Op                                                                                                      Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn NumAppArgs                                                                                     tmp%0#1
        bz main_bare_routing@7 ; b main_abi_routing@2

    main_abi_routing@2:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txna ApplicationArgs 0                                                                             tmp%2#0
        method create_group(acfg,appl)(uint64,uint64)                                                      tmp%2#0,Method(create_group(acfg,appl)(uint64,uint64))
        method log_group(appl)void                                                                         tmp%2#0,Method(create_group(acfg,appl)(uint64,uint64)),Method(log_group(appl)void)
        l-load tmp%2#0 2                                                                                   Method(create_group(acfg,appl)(uint64,uint64)),Method(log_group(appl)void),tmp%2#0
        match main_create_group_route@3 main_log_group_route@4 ; b main_after_if_else@11

    main_create_group_route@3:
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        txn OnCompletion                                                                                   tmp%3#0
        !                                                                                                  tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                  tmp%5#0
        assert // can only call when not creating
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn GroupIndex                                                                                     tmp%7#0
        int 2                                                                                              tmp%7#0,2
        -                                                                                                  gtxn_idx%0#0
        l-load-copy gtxn_idx%0#0 0                                                                         gtxn_idx%0#0,gtxn_idx%0#0 (copy)
        gtxns TypeEnum                                                                                     gtxn_idx%0#0,gtxn_type%0#0
        int acfg                                                                                           gtxn_idx%0#0,gtxn_type%0#0,acfg
        ==                                                                                                 gtxn_idx%0#0,gtxn_type_matches%0#0
        assert // transaction type is acfg                                                                 gtxn_idx%0#0
        txn GroupIndex                                                                                     gtxn_idx%0#0,tmp%8#0
        int 1                                                                                              gtxn_idx%0#0,tmp%8#0,1
        -                                                                                                  gtxn_idx%0#0,gtxn_idx%1#0
        l-load-copy gtxn_idx%1#0 0                                                                         gtxn_idx%0#0,gtxn_idx%1#0,gtxn_idx%1#0 (copy)
        gtxns TypeEnum                                                                                     gtxn_idx%0#0,gtxn_idx%1#0,gtxn_type%1#0
        int appl                                                                                           gtxn_idx%0#0,gtxn_idx%1#0,gtxn_type%1#0,appl
        ==                                                                                                 gtxn_idx%0#0,gtxn_idx%1#0,gtxn_type_matches%1#0
        assert // transaction type is appl                                                                 gtxn_idx%0#0,gtxn_idx%1#0
        // group_side_effects/contract.py:5
        // @arc4.abimethod
        l-load gtxn_idx%0#0 1                                                                              gtxn_idx%1#0,gtxn_idx%0#0
        l-load gtxn_idx%1#0 1                                                                              gtxn_idx%0#0,gtxn_idx%1#0
        callsub create_group                                                                               tmp%9#0,tmp%10#0
        l-load tmp%9#0 1                                                                                   tmp%10#0,tmp%9#0
        itob                                                                                               tmp%10#0,aggregate%val_as_bytes%0#1
        l-load tmp%10#0 1                                                                                  aggregate%val_as_bytes%0#1,tmp%10#0
        itob                                                                                               aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%0#1 1                                                                aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%0#1
        l-load aggregate%val_as_bytes%1#1 1                                                                aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        concat                                                                                             aggregate%head%1#1
        byte 0x151f7c75                                                                                    aggregate%head%1#1,0x151f7c75
        l-load aggregate%head%1#1 1                                                                        0x151f7c75,aggregate%head%1#1
        concat                                                                                             tmp%12#0
        log
        int 1                                                                                              test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__@12 

    main_log_group_route@4:
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        txn OnCompletion                                                                                   tmp%13#0
        !                                                                                                  tmp%14#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                  tmp%15#0
        assert // can only call when not creating
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn GroupIndex                                                                                     tmp%17#0
        int 1                                                                                              tmp%17#0,1
        -                                                                                                  gtxn_idx%2#0
        l-load-copy gtxn_idx%2#0 0                                                                         gtxn_idx%2#0,gtxn_idx%2#0 (copy)
        gtxns TypeEnum                                                                                     gtxn_idx%2#0,gtxn_type%2#0
        int appl                                                                                           gtxn_idx%2#0,gtxn_type%2#0,appl
        ==                                                                                                 gtxn_idx%2#0,gtxn_type_matches%2#0
        assert // transaction type is appl                                                                 gtxn_idx%2#0
        // group_side_effects/contract.py:22
        // @arc4.abimethod
        l-load gtxn_idx%2#0 0                                                                              gtxn_idx%2#0
        callsub log_group
        int 1                                                                                              test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__@12 

    main_bare_routing@7:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        txn OnCompletion                                                                                   tmp%18#0
        bz main___algopy_default_create@8 ; b main_after_if_else@11

    main___algopy_default_create@8:
        txn ApplicationID                                                                                  tmp%19#0
        !                                                                                                  tmp%20#0
        assert // can only call when creating
        int 1                                                                                              test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__@12 

    main_after_if_else@11:
        // group_side_effects/contract.py:4
        // class AppExpectingEffects(ARC4Contract):
        int 0                                                                                              test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__@12 

    main_after_inlined_test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__@12:
        v-load tmp%0#0                                                                                     tmp%0#0
        return


// test_cases.group_side_effects.contract.AppExpectingEffects.create_group(asset_create: uint64, app_create: uint64) -> uint64, uint64:
subroutine create_group:
    create_group_block@0:                                                                                  (𝕡) asset_create#0,app_create#0 |
        // group_side_effects/contract.py:11
        // assert asset_create.created_asset.id, "expected asset created"
        p-load asset_create#0                                                                              (𝕡) asset_create#0,app_create#0 | asset_create#0 (copy)
        gtxns CreatedAssetID                                                                               (𝕡) asset_create#0,app_create#0 | tmp%0#0
        l-load-copy tmp%0#0 0                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%0#0 (copy)
        assert // expected asset created                                                                   (𝕡) asset_create#0,app_create#0 | tmp%0#0
        // group_side_effects/contract.py:13
        // op.gaid(asset_create.group_index) == asset_create.created_asset.id
        p-load asset_create#0                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,asset_create#0 (copy)
        gtxns GroupIndex                                                                                   (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%2#0
        gaids                                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%3#0
        l-load-copy tmp%0#0 1                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%3#0,tmp%0#0 (copy)
        ==                                                                                                 (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%5#0
        // group_side_effects/contract.py:12-14
        // assert (
        //     op.gaid(asset_create.group_index) == asset_create.created_asset.id
        // ), "expected correct asset id"
        assert // expected correct asset id                                                                (𝕡) asset_create#0,app_create#0 | tmp%0#0
        // group_side_effects/contract.py:15
        // assert app_create.created_app.id, "expected app created"
        p-load app_create#0                                                                                (𝕡) asset_create#0,app_create#0 | tmp%0#0,app_create#0 (copy)
        gtxns CreatedApplicationID                                                                         (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0
        l-load-copy tmp%6#0 0                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0,tmp%6#0 (copy)
        assert // expected app created                                                                     (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0
        // group_side_effects/contract.py:17
        // op.gaid(app_create.group_index) == app_create.created_app.id
        p-load app_create#0                                                                                (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0,app_create#0 (copy)
        gtxns GroupIndex                                                                                   (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0,tmp%8#0
        gaids                                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0,tmp%9#0
        l-load-copy tmp%6#0 1                                                                              (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0,tmp%9#0,tmp%6#0 (copy)
        ==                                                                                                 (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0,tmp%11#0
        // group_side_effects/contract.py:16-18
        // assert (
        //     op.gaid(app_create.group_index) == app_create.created_app.id
        // ), "expected correct app id"
        assert // expected correct app id                                                                  (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0
        // group_side_effects/contract.py:20
        // return asset_create.created_asset.id, app_create.created_app.id
        l-load tmp%0#0 1                                                                                   (𝕡) asset_create#0,app_create#0 | tmp%6#0,tmp%0#0
        l-load tmp%6#0 1                                                                                   (𝕡) asset_create#0,app_create#0 | tmp%0#0,tmp%6#0
        retsub                                                                                             tmp%0#0,tmp%6#0


// test_cases.group_side_effects.contract.AppExpectingEffects.log_group(app_call: uint64) -> void:
subroutine log_group:
    log_group_block@0:                                                                                     (𝕡) app_call#0 |
        // group_side_effects/contract.py:24
        // assert app_call.app_args(0) == arc4.arc4_signature(
        p-load app_call#0                                                                                  (𝕡) app_call#0 | app_call#0 (copy)
        int 0                                                                                              (𝕡) app_call#0 | app_call#0 (copy),0
        gtxnsas ApplicationArgs                                                                            (𝕡) app_call#0 | tmp%0#0
        // group_side_effects/contract.py:24-26
        // assert app_call.app_args(0) == arc4.arc4_signature(
        //     "some_value()uint64"
        // ), "expected correct method called"
        method some_value()uint64                                                                          (𝕡) app_call#0 | tmp%0#0,Method(some_value()uint64)
        ==                                                                                                 (𝕡) app_call#0 | tmp%1#0
        assert // expected correct method called                                                           (𝕡) app_call#0 |
        // group_side_effects/contract.py:27
        // assert app_call.num_logs == 1, "expected logs"
        p-load app_call#0                                                                                  (𝕡) app_call#0 | app_call#0 (copy)
        gtxns NumLogs                                                                                      (𝕡) app_call#0 | tmp%2#0
        int 1                                                                                              (𝕡) app_call#0 | tmp%2#0,1
        ==                                                                                                 (𝕡) app_call#0 | tmp%3#0
        assert // expected logs                                                                            (𝕡) app_call#0 |
        // group_side_effects/contract.py:29
        // arc4.UInt64.from_log(app_call.last_log)
        p-load app_call#0                                                                                  (𝕡) app_call#0 | app_call#0 (copy)
        gtxns LastLog                                                                                      (𝕡) app_call#0 | awst_tmp%0#0
        l-load-copy awst_tmp%0#0 0                                                                         (𝕡) app_call#0 | awst_tmp%0#0,awst_tmp%0#0 (copy)
        extract 4 0                                                                                        (𝕡) app_call#0 | awst_tmp%0#0,tmp%4#0
        l-load awst_tmp%0#0 1                                                                              (𝕡) app_call#0 | tmp%4#0,awst_tmp%0#0
        extract 0 4                                                                                        (𝕡) app_call#0 | tmp%4#0,tmp%5#0
        byte 0x151f7c75                                                                                    (𝕡) app_call#0 | tmp%4#0,tmp%5#0,0x151f7c75
        ==                                                                                                 (𝕡) app_call#0 | tmp%4#0,tmp%6#0
        assert // application log value is not the result of an ABI return                                 (𝕡) app_call#0 | tmp%4#0
        // group_side_effects/contract.py:30
        // == (app_call.group_index + 1) * Global.group_size
        p-load app_call#0                                                                                  (𝕡) app_call#0 | tmp%4#0,app_call#0 (copy)
        gtxns GroupIndex                                                                                   (𝕡) app_call#0 | tmp%4#0,tmp%7#0
        int 1                                                                                              (𝕡) app_call#0 | tmp%4#0,tmp%7#0,1
        +                                                                                                  (𝕡) app_call#0 | tmp%4#0,tmp%8#0
        global GroupSize                                                                                   (𝕡) app_call#0 | tmp%4#0,tmp%8#0,tmp%9#0
        l-load tmp%8#0 1                                                                                   (𝕡) app_call#0 | tmp%4#0,tmp%9#0,tmp%8#0
        l-load tmp%9#0 1                                                                                   (𝕡) app_call#0 | tmp%4#0,tmp%8#0,tmp%9#0
        *                                                                                                  (𝕡) app_call#0 | tmp%4#0,tmp%10#0
        // group_side_effects/contract.py:29-30
        // arc4.UInt64.from_log(app_call.last_log)
        // == (app_call.group_index + 1) * Global.group_size
        itob                                                                                               (𝕡) app_call#0 | tmp%4#0,tmp%11#0
        l-load tmp%4#0 1                                                                                   (𝕡) app_call#0 | tmp%11#0,tmp%4#0
        l-load tmp%11#0 1                                                                                  (𝕡) app_call#0 | tmp%4#0,tmp%11#0
        b==                                                                                                (𝕡) app_call#0 | tmp%12#0
        // group_side_effects/contract.py:28-31
        // assert (
        //     arc4.UInt64.from_log(app_call.last_log)
        //     == (app_call.group_index + 1) * Global.group_size
        // )
        assert                                                                                             (𝕡) app_call#0 |
        retsub


