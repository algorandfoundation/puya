// Op                                                                          Stack (out)
// test_cases.group_side_effects.other.AppCall.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                               tmp%0#0
    return


// test_cases.group_side_effects.other.AppCall.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // group_side_effects/other.py:4
    // class AppCall(ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // group_side_effects/other.py:4
    // class AppCall(ARC4Contract):
    txn NumAppArgs                                                             tmp%0#0
    bz __puya_arc4_router___bare_routing@5
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // group_side_effects/other.py:4
    // class AppCall(ARC4Contract):
    txna ApplicationArgs 0                                                     tmp%2#0
    method some_value()uint64                                                  tmp%2#0,Method(some_value()uint64)
    l-load tmp%2#0 1                                                           Method(some_value()uint64),tmp%2#0
    match __puya_arc4_router___some_value_route@2
    int 0                                                                      0
    retsub                                                                     0

__puya_arc4_router___some_value_route@2:
    // group_side_effects/other.py:5
    // @arc4.abimethod()
    txn OnCompletion                                                           tmp%3#0
    !                                                                          tmp%4#0
    assert // OnCompletion is NoOp
    txn ApplicationID                                                          tmp%5#0
    assert // is not creating
    callsub some_value                                                         to_encode%0#0
    itob                                                                       val_as_bytes%0#0
    byte 0x151f7c75                                                            val_as_bytes%0#0,0x151f7c75
    l-load val_as_bytes%0#0 1                                                  0x151f7c75,val_as_bytes%0#0
    concat                                                                     tmp%7#0
    log
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___bare_routing@5:
    // group_side_effects/other.py:4
    // class AppCall(ARC4Contract):
    txn OnCompletion                                                           tmp%8#0
    bnz __puya_arc4_router___after_if_else@9
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@6

__puya_arc4_router_____algopy_default_create@6:
    txn ApplicationID                                                          tmp%9#0
    !                                                                          tmp%10#0
    assert // is creating
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___after_if_else@9:
    // group_side_effects/other.py:4
    // class AppCall(ARC4Contract):
    int 0                                                                      0
    retsub                                                                     0


// test_cases.group_side_effects.other.AppCall.some_value() -> uint64:
some_value:
    // group_side_effects/other.py:5-6
    // @arc4.abimethod()
    // def some_value(self) -> UInt64:
    proto 0 1

some_value_block@0:
    // group_side_effects/other.py:7
    // return Global.group_size * (Txn.group_index + 1)
    global GroupSize                                                           tmp%0#0
    txn GroupIndex                                                             tmp%0#0,tmp%1#0
    int 1                                                                      tmp%0#0,tmp%1#0,1
    +                                                                          tmp%0#0,tmp%2#0
    l-load tmp%0#0 1                                                           tmp%2#0,tmp%0#0
    l-load tmp%2#0 1                                                           tmp%0#0,tmp%2#0
    *                                                                          tmp%3#0
    retsub                                                                     tmp%3#0


