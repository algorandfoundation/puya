debug: PuyaOptions(paths=['group_side_effects'], output_teal=True, output_arc32=True, output_client=True, output_awst=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, match_algod_bytecode=False, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>, target_avm_version=10, cli_template_definitions=[], template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>)
info: Found python prefix: <git root>/.venv
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@2: // while_body_L12
debug: Terminated block@2: // while_body_L12
debug: Sealing block@3: // if_body_L13
debug: Terminated block@3: // if_body_L13
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Sealing block@2: // for_body_L111
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Terminated block@2: // for_body_L111
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@1: // for_header_L110
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L92
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L110
debug: Sealing block@4: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@1: // if_body_L147
debug: Terminated block@1: // if_body_L147
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3: // for_header_L150
debug: Terminated block@3: // for_header_L150
debug: Sealing block@4: // for_body_L151
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3: // for_header_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3: // for_header_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3: // for_header_L150
debug: Terminated block@4: // for_body_L151
debug: Sealing block@5: // for_footer_L150
debug: Terminated block@5: // for_footer_L150
debug: Sealing block@3: // for_header_L150
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2: // after_if_else_L146
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L147
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2: // after_if_else_L146
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5: // for_footer_L150
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2: // after_if_else_L146
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2: // after_if_else_L146
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5: // for_footer_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6: // after_for_L150
debug: Terminated block@6: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Sealing block@2: // for_body_L200
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Terminated block@2: // for_body_L200
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@1: // for_header_L199
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L189
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L199
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5: // for_header_L204
debug: Terminated block@5: // for_header_L204
debug: Sealing block@6: // for_body_L205
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5: // for_header_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5: // for_header_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5: // for_header_L204
debug: Terminated block@6: // for_body_L205
debug: Sealing block@7: // for_footer_L204
debug: Terminated block@7: // for_footer_L204
debug: Sealing block@5: // for_header_L204
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4: // after_for_L199
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7: // for_footer_L204
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4: // after_for_L199
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7: // for_footer_L204
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4: // after_for_L199
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Sealing block@2: // for_body_L270
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Terminated block@2: // for_body_L270
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@1: // for_header_L269
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L252
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L269
debug: Terminated block@4: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Sealing block@2: // for_body_L328
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Terminated block@2: // for_body_L328
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@1: // for_header_L327
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L306
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3: // for_footer_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3: // for_footer_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3: // for_footer_L327
debug: Sealing block@4: // after_for_L327
debug: Terminated block@4: // after_for_L327
debug: Sealing block@0: // L11
debug: Terminated block@0: // L11
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L19
debug: Terminated block@1: // while_top_L19
debug: Sealing block@2: // while_body_L20
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L19
debug: Terminated block@2: // while_body_L20
debug: Sealing block@3: // switch_case_0_L27
debug: Terminated block@3: // switch_case_0_L27
debug: Sealing block@4: // switch_case_1_L29
debug: Terminated block@4: // switch_case_1_L29
debug: Sealing block@5: // switch_case_default_L25
debug: Terminated block@5: // switch_case_default_L25
debug: Sealing block@6: // switch_case_next_L25
debug: Terminated block@6: // switch_case_next_L25
debug: Sealing block@1: // while_top_L19
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L25
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L25
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7: // after_while_L19
debug: Terminated block@7: // after_while_L19
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@1: // abi_routing_L4
debug: Terminated block@1: // abi_routing_L4
debug: Sealing block@2: // some_value_route_L5
debug: Terminated block@2: // some_value_route_L5
debug: Sealing block@3: // switch_case_default_L4
debug: Terminated block@3: // switch_case_default_L4
debug: Sealing block@4: // switch_case_next_L4
debug: Terminated block@4: // switch_case_next_L4
debug: Sealing block@5: // bare_routing_L4
debug: Terminated block@5: // bare_routing_L4
debug: Sealing block@6: // __algopy_default_create_L4
debug: Terminated block@6: // __algopy_default_create_L4
debug: Sealing block@7: // switch_case_default_L4
debug: Terminated block@7: // switch_case_default_L4
debug: Sealing block@8: // switch_case_next_L4
debug: Terminated block@8: // switch_case_next_L4
debug: Sealing block@9: // after_if_else_L4
debug: Terminated block@9: // after_if_else_L4
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@0: // L-1
debug: Terminated block@0: // L-1
debug: Sealing block@0: // L-1
debug: Terminated block@0: // L-1
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@1: // abi_routing_L4
debug: Terminated block@1: // abi_routing_L4
debug: Sealing block@2: // create_group_route_L5
debug: Terminated block@2: // create_group_route_L5
debug: Sealing block@3: // log_group_route_L22
debug: Terminated block@3: // log_group_route_L22
debug: Sealing block@4: // switch_case_default_L4
debug: Terminated block@4: // switch_case_default_L4
debug: Sealing block@5: // switch_case_next_L4
debug: Terminated block@5: // switch_case_next_L4
debug: Sealing block@6: // bare_routing_L4
debug: Terminated block@6: // bare_routing_L4
debug: Sealing block@7: // __algopy_default_create_L4
debug: Terminated block@7: // __algopy_default_create_L4
debug: Sealing block@8: // switch_case_default_L4
debug: Terminated block@8: // switch_case_default_L4
debug: Sealing block@9: // switch_case_next_L4
debug: Terminated block@9: // switch_case_next_L4
debug: Sealing block@10: // after_if_else_L4
debug: Terminated block@10: // after_if_else_L4
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L22
debug: Terminated block@0: // L22
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@0: // L-1
debug: Terminated block@0: // L-1
debug: Sealing block@0: // L-1
debug: Terminated block@0: // L-1
debug: Output IR to group_side_effects/out/AppCall.ssa.ir
info: optimizing test_cases.group_side_effects.other.AppCall at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.other.AppCall.__puya_arc4_router__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%10#0 0u) to (! tmp%10#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L4 as a predecessor of block@4: // switch_case_next_L4 due to inlining of block@3: // switch_case_default_L4
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "some_value()uint64" => block@2, * => block@3} to switch tmp%2#0 {method "some_value()uint64" => block@2, * => block@4}
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@5: // bare_routing_L4 from switch tmp%9#0 {0u => block@6, * => block@7} to goto_nth [block@6][tmp%9#0] else goto block@7
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L4 as a predecessor of block@9: // after_if_else_L4 due to inlining of block@4: // switch_case_next_L4
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "some_value()uint64" => block@2, * => block@4} to switch tmp%2#0 {method "some_value()uint64" => block@2, * => block@9}
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@5: // bare_routing_L4 from goto_nth [block@6][tmp%9#0] else goto block@7 to goto tmp%9#0 ? block@7 : block@6
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "some_value()uint64" => block@2, * => block@9} to switch tmp%2#0 {method "some_value()uint64" => block@2, * => return 0u}
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@4: // switch_case_next_L4 with block@3: // switch_case_default_L4 in block@9: // after_if_else_L4
debug: Merged linear block@4: // switch_case_next_L4 into block@3: // switch_case_default_L4
debug: Replaced predecessor block@8: // switch_case_next_L4 with block@7: // switch_case_default_L4 in block@9: // after_if_else_L4
debug: Merged linear block@8: // switch_case_next_L4 into block@7: // switch_case_default_L4
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3: // switch_case_default_L4
debug: Removed empty block: block@7: // switch_case_default_L4
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.other.AppCall.some_value
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.other.AppCall.__algopy_default_create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to group_side_effects/out/AppCall.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.other.AppCall.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.other.AppCall.some_value
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 2, ending loop
debug: Removing Phis from algopy.arc4.ARC4Contract.approval_program
debug: Removing Phis from test_cases.group_side_effects.other.AppCall.__puya_arc4_router__
debug: Removing Phis from test_cases.group_side_effects.other.AppCall.some_value
debug: Removing Phis from algopy.arc4.ARC4Contract.clear_state_program
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.group_side_effects.other.AppCall.__puya_arc4_router__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.group_side_effects.other.AppCall.some_value using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Sequentializing parallel copies in test_cases.group_side_effects.other.AppCall.__puya_arc4_router__
debug: Sequentializing parallel copies in test_cases.group_side_effects.other.AppCall.some_value
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to group_side_effects/out/AppCall.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___abi_routing@1.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___abi_routing@1.ops[4]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___some_value_route@2.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___some_value_route@2.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___some_value_route@2.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___some_value_route@2.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___some_value_route@2.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___some_value_route@2.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___some_value_route@2.ops[15]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___some_value_route@2.ops[17]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___some_value_route@2.ops[23]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___some_value_route@2.ops[25]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___some_value_route@2.ops[19]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___some_value_route@2.ops[22]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bare_routing@5.ops[1]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bare_routing@5.ops[3]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@6.ops[1]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@6.ops[3]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@6.ops[5]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@6.ops[7]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Found 3 edge set/s for test_cases.group_side_effects.other.AppCall.__puya_arc4_router__
debug: Inserted some_value_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced some_value_block@0.ops[5]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted some_value_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced some_value_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted some_value_block@0.ops[8]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced some_value_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted some_value_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced some_value_block@0.ops[11]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Output IR to group_side_effects/out/AppExpectingEffects.ssa.ir
info: optimizing test_cases.group_side_effects.contract.AppExpectingEffects at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (== tmp%10#0 NoOp) to (! tmp%10#0)
debug: Simplified (== tmp%16#0 0u) to (! tmp%16#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable tmp%13#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L4 as a predecessor of block@5: // switch_case_next_L4 due to inlining of block@4: // switch_case_default_L4
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "create_group(acfg,appl)(uint64,uint64)" => block@2, method "log_group(appl)void" => block@3, * => block@4} to switch tmp%2#0 {method "create_group(acfg,appl)(uint64,uint64)" => block@2, method "log_group(appl)void" => block@3, * => block@5}
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6: // bare_routing_L4 from switch tmp%15#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%15#0] else goto block@8
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L4 as a predecessor of block@10: // after_if_else_L4 due to inlining of block@5: // switch_case_next_L4
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "create_group(acfg,appl)(uint64,uint64)" => block@2, method "log_group(appl)void" => block@3, * => block@5} to switch tmp%2#0 {method "create_group(acfg,appl)(uint64,uint64)" => block@2, method "log_group(appl)void" => block@3, * => block@10}
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6: // bare_routing_L4 from goto_nth [block@7][tmp%15#0] else goto block@8 to goto tmp%15#0 ? block@8 : block@7
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "create_group(acfg,appl)(uint64,uint64)" => block@2, method "log_group(appl)void" => block@3, * => block@10} to switch tmp%2#0 {method "create_group(acfg,appl)(uint64,uint64)" => block@2, method "log_group(appl)void" => block@3, * => return 0u}
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5: // switch_case_next_L4 with block@4: // switch_case_default_L4 in block@10: // after_if_else_L4
debug: Merged linear block@5: // switch_case_next_L4 into block@4: // switch_case_default_L4
debug: Replaced predecessor block@9: // switch_case_next_L4 with block@8: // switch_case_default_L4 in block@10: // after_if_else_L4
debug: Merged linear block@9: // switch_case_next_L4 into block@8: // switch_case_default_L4
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4: // switch_case_default_L4
debug: Removed empty block: block@8: // switch_case_default_L4
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.create_group
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = ((gtxns CreatedAssetID) asset_create#0) with copy of existing registers (Register(source_location=group_side_effects/contract.py:11:15-41, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%10#0: uint64 = ((gtxns CreatedApplicationID) app_create#0) with copy of existing registers (Register(source_location=group_side_effects/contract.py:15:15-37, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let tmp%12#0: uint64 = ((gtxns CreatedAssetID) asset_create#0) with copy of existing registers (Register(source_location=group_side_effects/contract.py:11:15-41, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%13#0: uint64 = ((gtxns CreatedApplicationID) app_create#0) with copy of existing registers (Register(source_location=group_side_effects/contract.py:15:15-37, ir_type=uint64, name='tmp%6', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0, tmp%12#0
debug: Replacing {tmp%4#0, tmp%12#0} with tmp%0#0 made 2 modifications
debug: Found equivalence set: tmp%6#0, tmp%10#0, tmp%13#0
debug: Replacing {tmp%10#0, tmp%13#0} with tmp%6#0 made 2 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.log_group
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%4#0, reinterpret_biguint%0#0
debug: Replacing {reinterpret_biguint%0#0} with tmp%4#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.__algopy_default_create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to group_side_effects/out/AppExpectingEffects.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: Replacing {encoded_tuple_buffer%1#0} with val_as_bytes%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.create_group
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.log_group
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to group_side_effects/out/AppExpectingEffects.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.create_group
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.group_side_effects.contract.AppExpectingEffects.log_group
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 3, ending loop
debug: Removing Phis from algopy.arc4.ARC4Contract.approval_program
debug: Removing Phis from test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__
debug: Removing Phis from test_cases.group_side_effects.contract.AppExpectingEffects.create_group
debug: Removing Phis from test_cases.group_side_effects.contract.AppExpectingEffects.log_group
debug: Removing Phis from algopy.arc4.ARC4Contract.clear_state_program
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.group_side_effects.contract.AppExpectingEffects.create_group using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.group_side_effects.contract.AppExpectingEffects.log_group using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Sequentializing parallel copies in test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__
debug: Sequentializing parallel copies in test_cases.group_side_effects.contract.AppExpectingEffects.create_group
debug: Sequentializing parallel copies in test_cases.group_side_effects.contract.AppExpectingEffects.log_group
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to group_side_effects/out/AppExpectingEffects.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___abi_routing@1.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___abi_routing@1.ops[5]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[15]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[17]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[20]: 'store gtxn_idx%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[22]: 'load gtxn_idx%0#0' with 'load gtxn_idx%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[24]: 'store gtxn_type%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[26]: 'load gtxn_type%0#0' with 'load gtxn_type%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[29]: 'store gtxn_type_matches%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[31]: 'load gtxn_type_matches%0#0' with 'load gtxn_type_matches%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[34]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[36]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[39]: 'store gtxn_idx%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[41]: 'load gtxn_idx%1#0' with 'load gtxn_idx%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[43]: 'store gtxn_type%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[45]: 'load gtxn_type%1#0' with 'load gtxn_type%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[48]: 'store gtxn_type_matches%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[50]: 'load gtxn_type_matches%1#0' with 'load gtxn_type_matches%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[56]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[58]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[71]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[73]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[63]: 'store val_as_bytes%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[66]: 'load val_as_bytes%1#0' with 'load val_as_bytes%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[68]: 'store encoded_tuple_buffer%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[71]: 'load encoded_tuple_buffer%2#0' with 'load encoded_tuple_buffer%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[60]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[66]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[55]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[63]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[42]: 'store gtxn_idx%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[54]: 'load gtxn_idx%1#0' with 'load gtxn_idx%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___create_group_route@2.ops[23]: 'store gtxn_idx%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___create_group_route@2.ops[54]: 'load gtxn_idx%0#0' with 'load gtxn_idx%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[1]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[3]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[5]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[7]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[10]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[12]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[15]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[17]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[20]: 'store gtxn_idx%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[22]: 'load gtxn_idx%2#0' with 'load gtxn_idx%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[24]: 'store gtxn_type%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[26]: 'load gtxn_type%2#0' with 'load gtxn_type%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[29]: 'store gtxn_type_matches%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[31]: 'load gtxn_type_matches%2#0' with 'load gtxn_type_matches%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___log_group_route@3.ops[23]: 'store gtxn_idx%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___log_group_route@3.ops[34]: 'load gtxn_idx%2#0' with 'load gtxn_idx%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bare_routing@6.ops[1]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bare_routing@6.ops[3]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@7.ops[1]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@7.ops[3]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@7.ops[5]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@7.ops[7]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Found 3 edge set/s for test_cases.group_side_effects.contract.AppExpectingEffects.__puya_arc4_router__
debug: Inserted create_group_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[8]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[10]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[17]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[19]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[23]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[25]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[29]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[31]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[33]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[35]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[38]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[40]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[37]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[44]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[5]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[16]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[27]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[38]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted create_group_block@0.ops[17]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced create_group_block@0.ops[46]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[10]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[19]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[25]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[27]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[32]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[34]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[37]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[39]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[43]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[45]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[54]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[56]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[62]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[64]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[50]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[53]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[59]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[62]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[28]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[31]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[49]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[54]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted log_group_block@0.ops[30]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced log_group_block@0.ops[64]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
info: Writing group_side_effects/out/AppCall.arc32.json
info: Writing group_side_effects/out/client_AppCall.py
info: Writing group_side_effects/out/AppCall.approval.teal
info: Writing group_side_effects/out/AppCall.clear.teal
info: Writing group_side_effects/out/AppCall.approval.bin
info: Writing group_side_effects/out/AppCall.clear.bin
info: Writing group_side_effects/out/AppExpectingEffects.arc32.json
info: Writing group_side_effects/out/client_AppExpectingEffects.py
info: Writing group_side_effects/out/AppExpectingEffects.approval.teal
info: Writing group_side_effects/out/AppExpectingEffects.clear.teal
info: Writing group_side_effects/out/AppExpectingEffects.approval.bin
info: Writing group_side_effects/out/AppExpectingEffects.clear.bin