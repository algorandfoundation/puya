{
    "name": "TestContract",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [
                {
                    "type": "bool",
                    "name": "bool_param"
                },
                {
                    "type": "uint64",
                    "name": "uint64_param"
                },
                {
                    "type": "byte[]",
                    "name": "bytes_param"
                },
                {
                    "type": "uint512",
                    "name": "biguint_param"
                },
                {
                    "type": "string",
                    "name": "string_param"
                },
                {
                    "type": "(bool,uint64,byte[],uint512,string)",
                    "name": "tuple_param"
                }
            ],
            "returns": {
                "type": "(bool,uint64,byte[],uint512,string)"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "tuple_of_arc4",
            "args": [
                {
                    "type": "(uint8,address)",
                    "name": "args"
                }
            ],
            "returns": {
                "type": "(uint8,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        97,
                        123,
                        229,
                        233
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        53,
                        221
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        57
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        224
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        165
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmF2bV90eXBlc19pbl9hYmkuY29udHJhY3QuVGVzdENvbnRyYWN0LmFwcHJvdmFsX3Byb2dyYW06CiAgICBpbnRjYmxvY2sgMCAxIDY0CiAgICBieXRlY2Jsb2NrIDB4MDAgMHgxNTFmN2M3NQogICAgY2FsbHN1YiBfX3B1eWFfYXJjNF9yb3V0ZXJfXwogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5hdm1fdHlwZXNfaW5fYWJpLmNvbnRyYWN0LlRlc3RDb250cmFjdC5fX3B1eWFfYXJjNF9yb3V0ZXJfXygpIC0+IHVpbnQ2NDoKX19wdXlhX2FyYzRfcm91dGVyX186CiAgICAvLyBhdm1fdHlwZXNfaW5fYWJpL2NvbnRyYWN0LnB5OjQKICAgIC8vIGNsYXNzIFRlc3RDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICBwcm90byAwIDEKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19hZnRlcl9pZl9lbHNlQDcKICAgIHB1c2hieXRlc3MgMHhmYjcxNjY1MiAweDdlYTY0MDc4IC8vIG1ldGhvZCAiY3JlYXRlKGJvb2wsdWludDY0LGJ5dGVbXSx1aW50NTEyLHN0cmluZywoYm9vbCx1aW50NjQsYnl0ZVtdLHVpbnQ1MTIsc3RyaW5nKSkoYm9vbCx1aW50NjQsYnl0ZVtdLHVpbnQ1MTIsc3RyaW5nKSIsIG1ldGhvZCAidHVwbGVfb2ZfYXJjNCgodWludDgsYWRkcmVzcykpKHVpbnQ4LGFkZHJlc3MpIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggX19wdXlhX2FyYzRfcm91dGVyX19fY3JlYXRlX3JvdXRlQDIgX19wdXlhX2FyYzRfcm91dGVyX19fdHVwbGVfb2ZfYXJjNF9yb3V0ZUAzCiAgICBpbnRjXzAgLy8gMAogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19jcmVhdGVfcm91dGVAMjoKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6NQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJOb09wIl0sIGNyZWF0ZT0icmVxdWlyZSIpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgLy8gYXZtX3R5cGVzX2luX2FiaS9jb250cmFjdC5weTo0CiAgICAvLyBjbGFzcyBUZXN0Q29udHJhY3QoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgaW50Y18wIC8vIDAKICAgIGdldGJpdAogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwogICAgZXh0cmFjdCAyIDAKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDQKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDUKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA2CiAgICBkdXAKICAgIGludGNfMCAvLyAwCiAgICBnZXRiaXQKICAgIGJ5dGVjXzAgLy8gMHgwMAogICAgaW50Y18wIC8vIDAKICAgIHVuY292ZXIgMgogICAgc2V0Yml0CiAgICBpbnRjXzAgLy8gMAogICAgZ2V0Yml0CiAgICBkaWcgMQogICAgZXh0cmFjdCAxIDggLy8gb24gZXJyb3I6IEluZGV4IGFjY2VzcyBpcyBvdXQgb2YgYm91bmRzCiAgICBidG9pCiAgICBkaWcgMgogICAgcHVzaGludCA5IC8vIDkKICAgIGV4dHJhY3RfdWludDE2CiAgICBkaWcgMwogICAgcHVzaGludCA3NSAvLyA3NQogICAgZXh0cmFjdF91aW50MTYKICAgIGRpZyA0CiAgICB1bmNvdmVyIDIKICAgIGRpZyAyCiAgICBzdWJzdHJpbmczCiAgICBleHRyYWN0IDIgMAogICAgZGlnIDQKICAgIGV4dHJhY3QgMTEgNjQgLy8gb24gZXJyb3I6IEluZGV4IGFjY2VzcyBpcyBvdXQgb2YgYm91bmRzCiAgICBkaWcgNQogICAgbGVuCiAgICB1bmNvdmVyIDYKICAgIHVuY292ZXIgNAogICAgdW5jb3ZlciAyCiAgICBzdWJzdHJpbmczCiAgICBleHRyYWN0IDIgMAogICAgLy8gYXZtX3R5cGVzX2luX2FiaS9jb250cmFjdC5weTo1CiAgICAvLyBAYXJjNC5hYmltZXRob2QoYWxsb3dfYWN0aW9ucz1bIk5vT3AiXSwgY3JlYXRlPSJyZXF1aXJlIikKICAgIGNhbGxzdWIgY3JlYXRlCiAgICBieXRlY18wIC8vIDB4MDAKICAgIGludGNfMCAvLyAwCiAgICB1bmNvdmVyIDYKICAgIHNldGJpdAogICAgdW5jb3ZlciA0CiAgICBpdG9iCiAgICBkaWcgNAogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgdW5jb3ZlciA1CiAgICBjb25jYXQKICAgIGRpZyA0CiAgICBsZW4KICAgIGludGNfMiAvLyA2NAogICAgPD0KICAgIGFzc2VydCAvLyBvdmVyZmxvdwogICAgaW50Y18yIC8vIDY0CiAgICBiemVybwogICAgdW5jb3ZlciA1CiAgICBifAogICAgZGlnIDQKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgNQogICAgY29uY2F0CiAgICB1bmNvdmVyIDQKICAgIHVuY292ZXIgNAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHgwMDRkCiAgICBjb25jYXQKICAgIGRpZyAzCiAgICBsZW4KICAgIHB1c2hpbnQgNzcgLy8gNzcKICAgICsKICAgIHN3YXAKICAgIHVuY292ZXIgMwogICAgY29uY2F0CiAgICBzd2FwCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgY29uY2F0CiAgICB1bmNvdmVyIDIKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX190dXBsZV9vZl9hcmM0X3JvdXRlQDM6CiAgICAvLyBhdm1fdHlwZXNfaW5fYWJpL2NvbnRyYWN0LnB5OjE5CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gYXZtX3R5cGVzX2luX2FiaS9jb250cmFjdC5weTo0CiAgICAvLyBjbGFzcyBUZXN0Q29udHJhY3QoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBleHRyYWN0IDAgMSAvLyBvbiBlcnJvcjogSW5kZXggYWNjZXNzIGlzIG91dCBvZiBib3VuZHMKICAgIHN3YXAKICAgIGV4dHJhY3QgMSAzMiAvLyBvbiBlcnJvcjogSW5kZXggYWNjZXNzIGlzIG91dCBvZiBib3VuZHMKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6MTkKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgY2FsbHN1YiB0dXBsZV9vZl9hcmM0CiAgICBjb25jYXQKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2FmdGVyX2lmX2Vsc2VANzoKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6NAogICAgLy8gY2xhc3MgVGVzdENvbnRyYWN0KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIGludGNfMCAvLyAwCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLmF2bV90eXBlc19pbl9hYmkuY29udHJhY3QuVGVzdENvbnRyYWN0LmNyZWF0ZShib29sX3BhcmFtOiB1aW50NjQsIHVpbnQ2NF9wYXJhbTogdWludDY0LCBieXRlc19wYXJhbTogYnl0ZXMsIGJpZ3VpbnRfcGFyYW06IGJ5dGVzLCBzdHJpbmdfcGFyYW06IGJ5dGVzLCB0dXBsZV9wYXJhbS4wOiB1aW50NjQsIHR1cGxlX3BhcmFtLjE6IHVpbnQ2NCwgdHVwbGVfcGFyYW0uMjogYnl0ZXMsIHR1cGxlX3BhcmFtLjM6IGJ5dGVzLCB0dXBsZV9wYXJhbS40OiBieXRlcykgLT4gdWludDY0LCB1aW50NjQsIGJ5dGVzLCBieXRlcywgYnl0ZXM6CmNyZWF0ZToKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6NS0xNAogICAgLy8gQGFyYzQuYWJpbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJOb09wIl0sIGNyZWF0ZT0icmVxdWlyZSIpCiAgICAvLyBkZWYgY3JlYXRlKAogICAgLy8gICAgIHNlbGYsCiAgICAvLyAgICAgYm9vbF9wYXJhbTogYm9vbCwKICAgIC8vICAgICB1aW50NjRfcGFyYW06IFVJbnQ2NCwKICAgIC8vICAgICBieXRlc19wYXJhbTogQnl0ZXMsCiAgICAvLyAgICAgYmlndWludF9wYXJhbTogQmlnVUludCwKICAgIC8vICAgICBzdHJpbmdfcGFyYW06IFN0cmluZywKICAgIC8vICAgICB0dXBsZV9wYXJhbTogdHVwbGVbYm9vbCwgVUludDY0LCBCeXRlcywgQmlnVUludCwgU3RyaW5nXSwKICAgIC8vICkgLT4gdHVwbGVbYm9vbCwgVUludDY0LCBCeXRlcywgQmlnVUludCwgU3RyaW5nXToKICAgIHByb3RvIDEwIDUKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6MTYKICAgIC8vIGFzc2VydCByZXN1bHQgPT0gdHVwbGVfcGFyYW0KICAgIGZyYW1lX2RpZyAtMTAKICAgIGZyYW1lX2RpZyAtNQogICAgPT0KICAgIGZyYW1lX2RpZyAtOQogICAgZnJhbWVfZGlnIC00CiAgICA9PQogICAgJiYKICAgIGZyYW1lX2RpZyAtOAogICAgZnJhbWVfZGlnIC0zCiAgICA9PQogICAgJiYKICAgIGZyYW1lX2RpZyAtNwogICAgZnJhbWVfZGlnIC0yCiAgICBiPT0KICAgICYmCiAgICBmcmFtZV9kaWcgLTYKICAgIGZyYW1lX2RpZyAtMQogICAgPT0KICAgICYmCiAgICBhc3NlcnQKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6MTcKICAgIC8vIHJldHVybiByZXN1bHQKICAgIGZyYW1lX2RpZyAtMTAKICAgIGZyYW1lX2RpZyAtOQogICAgZnJhbWVfZGlnIC04CiAgICBmcmFtZV9kaWcgLTcKICAgIGZyYW1lX2RpZyAtNgogICAgcmV0c3ViCgoKLy8gdGVzdF9jYXNlcy5hdm1fdHlwZXNfaW5fYWJpLmNvbnRyYWN0LlRlc3RDb250cmFjdC50dXBsZV9vZl9hcmM0KGFyZ3MuMDogYnl0ZXMsIGFyZ3MuMTogYnl0ZXMpIC0+IGJ5dGVzLCBieXRlczoKdHVwbGVfb2ZfYXJjNDoKICAgIC8vIGF2bV90eXBlc19pbl9hYmkvY29udHJhY3QucHk6MTktMjIKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgLy8gZGVmIHR1cGxlX29mX2FyYzQoCiAgICAvLyAgICAgc2VsZiwgYXJnczogdHVwbGVbYXJjNC5VSW50OCwgYXJjNC5BZGRyZXNzXQogICAgLy8gKSAtPiB0dXBsZVthcmM0LlVJbnQ4LCBhcmM0LkFkZHJlc3NdOgogICAgcHJvdG8gMiAyCiAgICAvLyBhdm1fdHlwZXNfaW5fYWJpL2NvbnRyYWN0LnB5OjIzCiAgICAvLyBhc3NlcnQgYXJnc1swXS5ieXRlcy5sZW5ndGggPT0gMQogICAgZnJhbWVfZGlnIC0yCiAgICBsZW4KICAgIGludGNfMSAvLyAxCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBhdm1fdHlwZXNfaW5fYWJpL2NvbnRyYWN0LnB5OjI0CiAgICAvLyBhc3NlcnQgYXJnc1sxXS5ieXRlcy5sZW5ndGggPT0gMzIKICAgIGZyYW1lX2RpZyAtMQogICAgbGVuCiAgICBwdXNoaW50IDMyIC8vIDMyCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBhdm1fdHlwZXNfaW5fYWJpL2NvbnRyYWN0LnB5OjI1CiAgICAvLyByZXR1cm4gYXJncwogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmF2bV90eXBlc19pbl9hYmkuY29udHJhY3QuVGVzdENvbnRyYWN0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAAFAJgIBAAQVH3x1iAABQ4oAATEbQQDbggIE+3FmUgR+pkB4NhoAjgIAAgCqIokxGRREMRgURDYaASJTNhoCFzYaA1cCADYaBDYaBVcCADYaBkkiUygiTwJUIlNLAVcBCBdLAoEJWUsDgUtZSwRPAksCUlcCAEsEVwtASwUVTwZPBE8CUlcCAIgAaigiTwZUTwQWSwQVFlcGAk8FUEsEFSQORCSvTwWrSwQVFlcGAk8FUE8ETwRQgAIATVBLAxWBTQhMTwNQTBZXBgJQTwJQTFApTFCwI4kxGRREMRhENhoBSVcAAUxXASCIADVQKUxQsCOJIomKCgWL9ov7Eov3i/wSEIv4i/0SEIv5i/6oEIv6i/8SEESL9ov3i/iL+Yv6iYoCAov+FSMSRIv/FYEgEkSL/ov/iQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}