contract TestContract
{
  abimethod create(bool_param: bool, uint64_param: uint64, bytes_param: bytes, biguint_param: biguint, string_param: string, tuple_param: tuple<bool,uint64,bytes,biguint,string>): tuple<bool,uint64,bytes,biguint,string>
  {
    result: tuple<bool,uint64,bytes,biguint,string> = (bool_param, uint64_param, bytes_param, biguint_param, string_param)
    assert(result[0] == tuple_param[0] and result[1] == tuple_param[1] and result[2] == tuple_param[2] and result[3] == tuple_param[3] and result[4] == tuple_param[4])
    return result
  }
  
  abimethod tuple_of_arc4(args: tuple<arc4.uint8,arc4.address>): tuple<arc4.uint8,arc4.address>
  {
    assert(len(reinterpret_cast<bytes>(args[0])) == 1u)
    assert(len(reinterpret_cast<bytes>(args[1])) == 32u)
    return args
  }
}