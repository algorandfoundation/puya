contract TestContract
{
  abimethod create(bool_param: bool, uint64_param: algopy.UInt64, bytes_param: algopy.Bytes, tuple_param: tuple[bool, algopy.UInt64, algopy.Bytes]): tuple[bool, algopy.UInt64, algopy.Bytes]
  {
    result: tuple[bool, algopy.UInt64, algopy.Bytes] = (bool_param, uint64_param, bytes_param)
    assert(result[0] == tuple_param[0] and result[1] == tuple_param[1] and result[2] == tuple_param[2])
    return result
  }
  
  abimethod tuple_of_arc4(args: tuple[algopy.arc4.UInt8, algopy.arc4.Address]): tuple[algopy.arc4.UInt8, algopy.arc4.Address]
  {
    assert(len(reinterpret_cast<algopy.Bytes>(args[0])) == 1u)
    assert(len(reinterpret_cast<algopy.Bytes>(args[1])) == 32u)
    return args
  }
}