// Op                                                                Stack (out)
// test_cases.avm_types_in_abi.contract.TestContract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                     tmp%0#0
    return


// test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // avm_types_in_abi/contract.py:4
    // class TestContract(arc4.ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // avm_types_in_abi/contract.py:4
    // class TestContract(arc4.ARC4Contract):
    txn NumAppArgs                                                   tmp%0#0
    bz __puya_arc4_router___after_if_else@7
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // avm_types_in_abi/contract.py:4
    // class TestContract(arc4.ARC4Contract):
    txna ApplicationArgs 0                                           tmp%2#0
    method create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string) tmp%2#0,Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string))
    method tuple_of_arc4((uint8,address))(uint8,address)             tmp%2#0,Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string)),Method(tuple_of_arc4((uint8,address))(uint8,address))
    l-load tmp%2#0 2                                                 Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string)),Method(tuple_of_arc4((uint8,address))(uint8,address)),tmp%2#0
    match __puya_arc4_router___create_route@2 __puya_arc4_router___tuple_of_arc4_route@3 
    int 0                                                            0
    retsub                                                           0

__puya_arc4_router___create_route@2:
    // avm_types_in_abi/contract.py:5
    // @arc4.abimethod(allow_actions=["NoOp"], create="require")
    txn OnCompletion                                                 tmp%3#0
    !                                                                tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                tmp%5#0
    !                                                                tmp%6#0
    assert // can only call when creating
    // avm_types_in_abi/contract.py:4
    // class TestContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                           tmp%7#0
    int 0                                                            tmp%7#0,0
    getbit                                                           tmp%8#0
    txna ApplicationArgs 2                                           tmp%8#0,tmp%9#0
    btoi                                                             tmp%8#0,tmp%10#0
    txna ApplicationArgs 3                                           tmp%8#0,tmp%10#0,tmp%11#0
    extract 2 0                                                      tmp%8#0,tmp%10#0,tmp%12#0
    txna ApplicationArgs 4                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0
    txna ApplicationArgs 5                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%14#0
    extract 2 0                                                      tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0
    txna ApplicationArgs 6                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0
    l-load-copy tmp%16#0 0                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,tmp%16#0 (copy)
    int 0                                                            tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,tmp%16#0 (copy),0
    getbit                                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,is_true%0#0
    byte 0x00                                                        tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,is_true%0#0,0x00
    int 0                                                            tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,is_true%0#0,0x00,0
    l-load is_true%0#0 2                                             tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,0x00,0,is_true%0#0
    setbit                                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,encoded_bool%0#0
    int 0                                                            tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,encoded_bool%0#0,0
    getbit                                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0
    l-load-copy tmp%16#0 1                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,tmp%16#0 (copy)
    extract 1 8 // on error: Index access is out of bounds           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0#0
    btoi                                                             tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0
    l-load-copy tmp%16#0 2                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,tmp%16#0 (copy)
    int 9                                                            tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,tmp%16#0 (copy),9
    extract_uint16                                                   tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_start_offset%0#0
    l-load-copy tmp%16#0 3                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_start_offset%0#0,tmp%16#0 (copy)
    int 75                                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_start_offset%0#0,tmp%16#0 (copy),75
    extract_uint16                                                   tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_start_offset%0#0,item_end_offset%0#0
    l-load-copy tmp%16#0 4                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_start_offset%0#0,item_end_offset%0#0,tmp%16#0 (copy)
    l-load item_start_offset%0#0 2                                   tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,tmp%16#0 (copy),item_start_offset%0#0
    l-load-copy item_end_offset%0#0 2                                tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,tmp%16#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
    substring3                                                       tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0#0
    extract 2 0                                                      tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0%0#0
    l-load-copy tmp%16#0 4                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0%0#0,tmp%16#0 (copy)
    extract 11 64 // on error: Index access is out of bounds         tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0%0#0,item3%0#0
    l-load-copy tmp%16#0 5                                           tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0%0#0,item3%0#0,tmp%16#0 (copy)
    len                                                              tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,tmp%16#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0%0#0,item3%0#0,item_end_offset%1#0
    l-load tmp%16#0 6                                                tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item_end_offset%0#0,item2%0%0#0,item3%0#0,item_end_offset%1#0,tmp%16#0
    l-load item_end_offset%0#0 4                                     tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item_end_offset%1#0,tmp%16#0,item_end_offset%0#0
    l-load item_end_offset%1#0 2                                     tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,tmp%16#0,item_end_offset%0#0,item_end_offset%1#0
    substring3                                                       tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0#0
    extract 2 0                                                      tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0
    // avm_types_in_abi/contract.py:5
    // @arc4.abimethod(allow_actions=["NoOp"], create="require")
    l-load tmp%8#0 9                                                 tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0
    l-load tmp%10#0 9                                                tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0
    l-load tmp%12#0 9                                                tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0
    l-load tmp%13#0 9                                                tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0
    l-load tmp%15#0 9                                                item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0
    l-load item0%0%0#0 9                                             item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0
    l-load item1%0%0#0 9                                             item2%0%0#0,item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0
    l-load item2%0%0#0 9                                             item3%0#0,item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0
    l-load item3%0#0 9                                               item4%0%0#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0
    l-load item4%0%0#0 9                                             tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0,tmp%15#0,item0%0%0#0,item1%0%0#0,item2%0%0#0,item3%0#0,item4%0%0#0
    callsub create                                                   elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0
    byte 0x00                                                        elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,0x00
    int 0                                                            elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,0x00,0
    l-load elements_to_encode%0#0 6                                  elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,0x00,0,elements_to_encode%0#0
    setbit                                                           elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0
    l-load elements_to_encode%1#0 4                                  elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,elements_to_encode%1#0
    itob                                                             elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0
    l-load-copy elements_to_encode%2#0 4                             elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,elements_to_encode%2#0 (copy)
    len                                                              elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,length%0#0
    itob                                                             elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,as_bytes%0#0
    extract 6 2                                                      elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,length_uint16%0#0
    l-load elements_to_encode%2#0 5                                  elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,length_uint16%0#0,elements_to_encode%2#0
    concat                                                           elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0
    l-load-copy elements_to_encode%3#0 4                             elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,elements_to_encode%3#0 (copy)
    len                                                              elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,len_%0#0
    int 64                                                           elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,len_%0#0,64
    <=                                                               elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,no_overflow%0#0
    assert // overflow                                               elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0
    int 64                                                           elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,64
    bzero                                                            elements_to_encode%3#0,elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,b_zeros%0#0
    l-load elements_to_encode%3#0 5                                  elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,b_zeros%0#0,elements_to_encode%3#0
    l-load b_zeros%0#0 1                                             elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,elements_to_encode%3#0,b_zeros%0#0
    b|                                                               elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0
    l-load-copy elements_to_encode%4#0 4                             elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,elements_to_encode%4#0 (copy)
    len                                                              elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,length%1#0
    itob                                                             elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,as_bytes%1#0
    extract 6 2                                                      elements_to_encode%4#0,encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,length_uint16%1#0
    l-load elements_to_encode%4#0 5                                  encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,length_uint16%1#0,elements_to_encode%4#0
    concat                                                           encoded_bool%1#0,val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,encoded_value%1#0
    l-load encoded_bool%1#0 4                                        val_as_bytes%0#0,encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_bool%1#0
    l-load val_as_bytes%0#0 4                                        encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_bool%1#0,val_as_bytes%0#0
    concat                                                           encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0
    byte 0x004d                                                      encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,0x004d
    concat                                                           encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0
    l-load-copy encoded_value%0#0 3                                  encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,encoded_value%0#0 (copy)
    len                                                              encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,data_length%0#0
    int 77                                                           encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,data_length%0#0,77
    l-load data_length%0#0 1                                         encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,77,data_length%0#0
    +                                                                encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,current_tail_offset%1#0
    l-load encoded_tuple_buffer%3#0 1                                encoded_value%0#0,arc4_item%0#0,encoded_value%1#0,current_tail_offset%1#0,encoded_tuple_buffer%3#0
    l-load arc4_item%0#0 3                                           encoded_value%0#0,encoded_value%1#0,current_tail_offset%1#0,encoded_tuple_buffer%3#0,arc4_item%0#0
    concat                                                           encoded_value%0#0,encoded_value%1#0,current_tail_offset%1#0,encoded_tuple_buffer%4#0
    l-load current_tail_offset%1#0 1                                 encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%4#0,current_tail_offset%1#0
    itob                                                             encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%4#0,as_bytes%3#0
    extract 6 2                                                      encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%4#0,offset_as_uint16%1#0
    l-load encoded_tuple_buffer%4#0 1                                encoded_value%0#0,encoded_value%1#0,offset_as_uint16%1#0,encoded_tuple_buffer%4#0
    l-load offset_as_uint16%1#0 1                                    encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%4#0,offset_as_uint16%1#0
    concat                                                           encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%5#0
    l-load encoded_value%0#0 2                                       encoded_value%1#0,encoded_tuple_buffer%5#0,encoded_value%0#0
    concat                                                           encoded_value%1#0,encoded_tuple_buffer%6#0
    l-load encoded_value%1#0 1                                       encoded_tuple_buffer%6#0,encoded_value%1#0
    concat                                                           encoded_tuple_buffer%7#0
    byte 0x151f7c75                                                  encoded_tuple_buffer%7#0,0x151f7c75
    l-load encoded_tuple_buffer%7#0 1                                0x151f7c75,encoded_tuple_buffer%7#0
    concat                                                           tmp%17#0
    log
    int 1                                                            1
    retsub                                                           1

__puya_arc4_router___tuple_of_arc4_route@3:
    // avm_types_in_abi/contract.py:19
    // @arc4.abimethod
    txn OnCompletion                                                 tmp%18#0
    !                                                                tmp%19#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                tmp%20#0
    assert // can only call when not creating
    // avm_types_in_abi/contract.py:4
    // class TestContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                           tmp%22#0
    l-load-copy tmp%22#0 0                                           tmp%22#0,tmp%22#0 (copy)
    extract 0 1 // on error: Index access is out of bounds           tmp%22#0,item0%1#0
    l-load tmp%22#0 1                                                item0%1#0,tmp%22#0
    extract 1 32 // on error: Index access is out of bounds          item0%1#0,item1%1#0
    // avm_types_in_abi/contract.py:19
    // @arc4.abimethod
    l-load item0%1#0 1                                               item1%1#0,item0%1#0
    l-load item1%1#0 1                                               item0%1#0,item1%1#0
    callsub tuple_of_arc4                                            elements_to_encode%5#0,elements_to_encode%6#0
    l-load elements_to_encode%5#0 1                                  elements_to_encode%6#0,elements_to_encode%5#0
    l-load elements_to_encode%6#0 1                                  elements_to_encode%5#0,elements_to_encode%6#0
    concat                                                           encoded_tuple_buffer%10#0
    byte 0x151f7c75                                                  encoded_tuple_buffer%10#0,0x151f7c75
    l-load encoded_tuple_buffer%10#0 1                               0x151f7c75,encoded_tuple_buffer%10#0
    concat                                                           tmp%23#0
    log
    int 1                                                            1
    retsub                                                           1

__puya_arc4_router___after_if_else@7:
    // avm_types_in_abi/contract.py:4
    // class TestContract(arc4.ARC4Contract):
    int 0                                                            0
    retsub                                                           0


// test_cases.avm_types_in_abi.contract.TestContract.create(bool_param: uint64, uint64_param: uint64, bytes_param: bytes, biguint_param: bytes, string_param: bytes, tuple_param.0: uint64, tuple_param.1: uint64, tuple_param.2: bytes, tuple_param.3: bytes, tuple_param.4: bytes) -> uint64, uint64, bytes, bytes, bytes:
create:                                                              (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 |
    // avm_types_in_abi/contract.py:5-14
    // @arc4.abimethod(allow_actions=["NoOp"], create="require")
    // def create(
    //     self,
    //     bool_param: bool,
    //     uint64_param: UInt64,
    //     bytes_param: Bytes,
    //     biguint_param: BigUInt,
    //     string_param: String,
    //     tuple_param: tuple[bool, UInt64, Bytes, BigUInt, String],
    // ) -> tuple[bool, UInt64, Bytes, BigUInt, String]:
    proto 10 5                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 |

create_block@0:                                                      (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 |
    // avm_types_in_abi/contract.py:16
    // assert result == tuple_param
    p-load bool_param#0                                              (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy)
    p-load tuple_param.0#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),tuple_param.0#0 (copy)
    ==                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0
    p-load uint64_param#0                                            (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,uint64_param#0 (copy)
    p-load tuple_param.1#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,uint64_param#0 (copy),tuple_param.1#0 (copy)
    ==                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,tmp%1#0
    l-load tmp%0#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%1#0,tmp%0#0
    l-load tmp%1#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,tmp%1#0
    &&                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0
    p-load bytes_param#0                                             (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,bytes_param#0 (copy)
    p-load tuple_param.2#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,bytes_param#0 (copy),tuple_param.2#0 (copy)
    ==                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,tmp%3#0
    l-load tmp%2#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%3#0,tmp%2#0
    l-load tmp%3#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,tmp%3#0
    &&                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0
    p-load biguint_param#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,biguint_param#0 (copy)
    p-load tuple_param.3#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,biguint_param#0 (copy),tuple_param.3#0 (copy)
    b==                                                              (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,tmp%5#0
    l-load tmp%4#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%5#0,tmp%4#0
    l-load tmp%5#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,tmp%5#0
    &&                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0
    p-load string_param#0                                            (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,string_param#0 (copy)
    p-load tuple_param.4#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,string_param#0 (copy),tuple_param.4#0 (copy)
    ==                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,tmp%7#0
    l-load tmp%6#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%7#0,tmp%6#0
    l-load tmp%7#0 1                                                 (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,tmp%7#0
    &&                                                               (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%8#0
    assert                                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 |
    // avm_types_in_abi/contract.py:17
    // return result
    p-load bool_param#0                                              (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy)
    p-load uint64_param#0                                            (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy)
    p-load bytes_param#0                                             (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy)
    p-load biguint_param#0                                           (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy),biguint_param#0 (copy)
    p-load string_param#0                                            (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy),biguint_param#0 (copy),string_param#0 (copy)
    retsub                                                           bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy),biguint_param#0 (copy),string_param#0 (copy)


// test_cases.avm_types_in_abi.contract.TestContract.tuple_of_arc4(args.0: bytes, args.1: bytes) -> bytes, bytes:
tuple_of_arc4:                                                       (𝕡) args.0#0,args.1#0 |
    // avm_types_in_abi/contract.py:19-22
    // @arc4.abimethod
    // def tuple_of_arc4(
    //     self, args: tuple[arc4.UInt8, arc4.Address]
    // ) -> tuple[arc4.UInt8, arc4.Address]:
    proto 2 2                                                        (𝕡) args.0#0,args.1#0 |

tuple_of_arc4_block@0:                                               (𝕡) args.0#0,args.1#0 |
    // avm_types_in_abi/contract.py:23
    // assert args[0].bytes.length == 1
    p-load args.0#0                                                  (𝕡) args.0#0,args.1#0 | args.0#0 (copy)
    len                                                              (𝕡) args.0#0,args.1#0 | tmp%0#0
    int 1                                                            (𝕡) args.0#0,args.1#0 | tmp%0#0,1
    ==                                                               (𝕡) args.0#0,args.1#0 | tmp%1#0
    assert                                                           (𝕡) args.0#0,args.1#0 |
    // avm_types_in_abi/contract.py:24
    // assert args[1].bytes.length == 32
    p-load args.1#0                                                  (𝕡) args.0#0,args.1#0 | args.1#0 (copy)
    len                                                              (𝕡) args.0#0,args.1#0 | tmp%2#0
    int 32                                                           (𝕡) args.0#0,args.1#0 | tmp%2#0,32
    ==                                                               (𝕡) args.0#0,args.1#0 | tmp%3#0
    assert                                                           (𝕡) args.0#0,args.1#0 |
    // avm_types_in_abi/contract.py:25
    // return args
    p-load args.0#0                                                  (𝕡) args.0#0,args.1#0 | args.0#0 (copy)
    p-load args.1#0                                                  (𝕡) args.0#0,args.1#0 | args.0#0 (copy),args.1#0 (copy)
    retsub                                                           args.0#0 (copy),args.1#0 (copy)


