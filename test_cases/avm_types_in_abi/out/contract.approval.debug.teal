// Op                                                                                // Op Description                                        Stack (out)                                                                                                                                  X stack        Source code                                         Source line

#pragma version 8

// test_cases.avm_types_in_abi.contract.TestContract.approval_program() -> uint64:
main_block@0:
        txn NumAppArgs                                                               //                                                       {txn}                                                                                                                                                       class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        bz main_after_if_else@5                                                      //                                                                                                                                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        // Implicit fall through to main_abi_routing@1                               //                                                                                                                                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4

main_abi_routing@1:
        method "create(bool,uint64,byte[],(bool,uint64,byte[]))(bool,uint64,byte[])"
        txna ApplicationArgs 0                                                       // virtual: 4 ops                                        method<"create(bool,uint64,byte[],(bool,uint64,byte[]))(bool,uint64,byte[])">,tmp%1#0                                                                       class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        match main_create_route@2                                                    //                                                                                                                                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        b main_after_if_else@5                                                       //                                                                                                                                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4

main_create_route@2:
        txn OnCompletion                                                             //                                                       {txn}                                                                                                                                                       arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        !                                                                            //                                                       {!}                                                                                                                                                         arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        assert // OnCompletion is NoOp                                               //                                                                                                                                                                                                                   arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        txn ApplicationID                                                            //                                                       {txn}                                                                                                                                                       arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        !                                                                            //                                                       {!}                                                                                                                                                         arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        assert // is creating                                                        //                                                                                                                                                                                                                   arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        txna ApplicationArgs 1                                                       //                                                       {txna}                                                                                                                                                      class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        int 0                                                                        //                                                       tmp%6#0,0
        getbit                                                                       //                                                       {getbit}                                                                                                                                                    class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        txna ApplicationArgs 2                                                       //                                                       tmp%7#0,{txna}                                                                                                                                              class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        btoi                                                                         //                                                       tmp%7#0,{btoi}                                                                                                                                              class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        txna ApplicationArgs 3                                                       //                                                       tmp%7#0,tmp%9#0,{txna}                                                                                                                                      class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        extract 2 0                                                                  //                                                       tmp%7#0,tmp%9#0,{extract}                                                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        txna ApplicationArgs 4                                                       //                                                       tmp%7#0,tmp%9#0,tmp%11#0,{txna}                                                                                                                             class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        dup                                                                          // load tmp%12#0 from l-stack (copy)                     tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,tmp%12#0                                                                                                                  class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        int 0                                                                        //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,tmp%12#0,0                                                                                                                class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        getbit                                                                       //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,{getbit}                                                                                                                  class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        byte 0x00                                                                    //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,is_true%13#0,0x00                                                                                                         class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        int 0                                                                        //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,is_true%13#0,0x00,0
        uncover 2                                                                    // load is_true%13#0 from l-stack (no copy)              tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,0x00,0,is_true%13#0                                                                                                       class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        setbit                                                                       //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%12#0,{setbit}                                                                                                                  class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        swap                                                                         // store item0%14#0 to l-stack (no copy)                 tmp%7#0,tmp%9#0,tmp%11#0,item0%14#0,tmp%12#0                                                                                                                class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        dup                                                                          // load tmp%12#0 from l-stack (copy)                     tmp%7#0,tmp%9#0,tmp%11#0,item0%14#0,tmp%12#0,tmp%12#0                                                                                                       class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        extract 1 8                                                                  //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item0%14#0,tmp%12#0,{extract}                                                                                                      class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        cover 2                                                                      // store item1%15#0 to l-stack (no copy)                 tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0                                                                                                     class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        dup                                                                          // load tmp%12#0 from l-stack (copy)                     tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,tmp%12#0                                                                                            class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        int 9                                                                        //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,tmp%12#0,9                                                                                          class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        extract_uint16                                                               //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,{extract_uint16}                                                                                    class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        dig 1                                                                        // load tmp%12#0 from l-stack (copy)                     tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,item_index%16#0,tmp%12#0                                                                            class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        dig 1                                                                        // load item_index%16#0 from l-stack (copy)              tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,item_index%16#0,tmp%12#0,item_index%16#0                                                            class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        extract_uint16                                                               //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,item_index%16#0,{extract_uint16}                                                                    class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        int 2                                                                        //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,item_index%16#0,item_length%17#0,2                                                                  class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        +                                                                            //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,tmp%12#0,item_index%16#0,{+}                                                                                 class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        extract3                                                                     //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item0%14#0,{extract3}                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        swap                                                                         // load item0%14#0 from l-stack (no copy)                tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item2%19#0,item0%14#0                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        int 0                                                                        //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item2%19#0,item0%14#0,0
        getbit                                                                       //                                                       tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,item2%19#0,{getbit}                                                                                                     class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        swap                                                                         // store tmp%21#0 to l-stack (no copy)                   tmp%7#0,tmp%9#0,tmp%11#0,item1%15#0,tmp%21#0,item2%19#0                                                                                                     class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        uncover 2                                                                    // load item1%15#0 from l-stack (no copy)                tmp%7#0,tmp%9#0,tmp%11#0,tmp%21#0,item2%19#0,item1%15#0                                                                                                     class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        btoi                                                                         //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%21#0,item2%19#0,{btoi}                                                                                                         class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        swap                                                                         // store tmp%22#0 to l-stack (no copy)                   tmp%7#0,tmp%9#0,tmp%11#0,tmp%21#0,tmp%22#0,item2%19#0                                                                                                       class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        extract 2 0                                                                  //                                                       tmp%7#0,tmp%9#0,tmp%11#0,tmp%21#0,tmp%22#0,{extract}                                                                                                        class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4
        callsub create                                                               //                                                       {create}.0,{create}.1,{create}.2                                                                                                                            arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        cover 2                                                                      // store awst_tmp%24.2#0 to l-stack (no copy)            awst_tmp%24.2#0,{create}.0,{create}.1                                                                                                                       arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        swap                                                                         // store awst_tmp%24.1#0 to l-stack (no copy)            awst_tmp%24.2#0,awst_tmp%24.1#0,{create}.0                                                                                                                  arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        byte 0x00                                                                    //                                                       awst_tmp%24.2#0,awst_tmp%24.1#0,awst_tmp%24.0#0,0x00                                                                                                        arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        int 0                                                                        //                                                       awst_tmp%24.2#0,awst_tmp%24.1#0,awst_tmp%24.0#0,0x00,0
        uncover 2                                                                    // load awst_tmp%24.0#0 from l-stack (no copy)           awst_tmp%24.2#0,awst_tmp%24.1#0,0x00,0,awst_tmp%24.0#0                                                                                                      arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        setbit                                                                       //                                                       awst_tmp%24.2#0,awst_tmp%24.1#0,{setbit}                                                                                                                    arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        cover 2                                                                      // store tmp%25#0 to l-stack (no copy)                   tmp%25#0,awst_tmp%24.2#0,awst_tmp%24.1#0                                                                                                                    arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        itob                                                                         //                                                       tmp%25#0,awst_tmp%24.2#0,{itob}                                                                                                                             arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        cover 2                                                                      // store val_as_bytes%26#0 to l-stack (no copy)          val_as_bytes%26#0,tmp%25#0,awst_tmp%24.2#0                                                                                                                  arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        dup                                                                          // load awst_tmp%24.2#0 from l-stack (copy)              val_as_bytes%26#0,tmp%25#0,awst_tmp%24.2#0,awst_tmp%24.2#0                                                                                                  arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        len                                                                          //                                                       val_as_bytes%26#0,tmp%25#0,awst_tmp%24.2#0,{len}                                                                                                            arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        itob                                                                         //                                                       val_as_bytes%26#0,tmp%25#0,awst_tmp%24.2#0,{itob}                                                                                                           arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        substring 6 8                                                                //                                                       val_as_bytes%26#0,tmp%25#0,awst_tmp%24.2#0,{substring}                                                                                                      arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        swap                                                                         // load awst_tmp%24.2#0 from l-stack (no copy)           val_as_bytes%26#0,tmp%25#0,tmp%30#0,awst_tmp%24.2#0                                                                                                         arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        concat                                                                       //                                                       val_as_bytes%26#0,tmp%25#0,{concat}                                                                                                                         arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        cover 2                                                                      // store tmp%31#0 to l-stack (no copy)                   tmp%31#0,val_as_bytes%26#0,tmp%25#0                                                                                                                         arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        byte 0x                                                                      //                                                       tmp%31#0,val_as_bytes%26#0,tmp%25#0,0x                                                                                                                      arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        swap                                                                         // load tmp%25#0 from l-stack (no copy)                  tmp%31#0,val_as_bytes%26#0,0x,tmp%25#0                                                                                                                      arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        concat                                                                       //                                                       tmp%31#0,val_as_bytes%26#0,{concat}                                                                                                                         arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        swap                                                                         // load val_as_bytes%26#0 from l-stack (no copy)         tmp%31#0,encoded_tuple_buffer%33#1,val_as_bytes%26#0                                                                                                        arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        concat                                                                       //                                                       tmp%31#0,{concat}                                                                                                                                           arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        int 11                                                                       //                                                       tmp%31#0,encoded_tuple_buffer%33#1,11                                                                                                                       arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        itob                                                                         //                                                       tmp%31#0,encoded_tuple_buffer%33#1,{itob}                                                                                                                   arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        extract 6 2                                                                  //                                                       tmp%31#0,encoded_tuple_buffer%33#1,{extract}                                                                                                                arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        concat                                                                       //                                                       tmp%31#0,{concat}                                                                                                                                           arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        dig 1                                                                        // load tmp%31#0 from l-stack (copy)                     tmp%31#0,encoded_tuple_buffer%33#1,tmp%31#0                                                                                                                 arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        len                                                                          //                                                       tmp%31#0,encoded_tuple_buffer%33#1,{len}                                                                                                                    arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        int 11                                                                       //                                                       tmp%31#0,encoded_tuple_buffer%33#1,data_length%36#0,11                                                                                                      arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        +                                                                            //                                                       tmp%31#0,encoded_tuple_buffer%33#1,{+}                                                                                                                      arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        pop                                                                          //                                                       tmp%31#0,encoded_tuple_buffer%33#1                                                                                                                          arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        swap                                                                         // load tmp%31#0 from l-stack (no copy)                  encoded_tuple_buffer%33#1,tmp%31#0                                                                                                                          arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        concat                                                                       //                                                       {concat}                                                                                                                                                    arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        byte 0x151f7c75                                                              //                                                       encoded_tuple_buffer%33#1,0x151f7c75                                                                                                                        arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        swap                                                                         // load encoded_tuple_buffer%33#1 from l-stack (no copy) 0x151f7c75,encoded_tuple_buffer%33#1                                                                                                                        arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        concat                                                                       //                                                       {concat}                                                                                                                                                    arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        log                                                                          //                                                                                                                                                                                                                   arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        int 1                                                                        //                                                       1                                                                                                                                                           arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5
        return                                                                       //                                                                                                                                                                                                                   arc4.abimethod(allow_actions=["NoOp"], create=True) File "avm_types_in_abi/contract.py", line 5

main_after_if_else@5:
        err // reject transaction                                                    //                                                                                                                                                                                                                   class TestContract(arc4.ARC4Contract):              File "avm_types_in_abi/contract.py", line 4


// test_cases.avm_types_in_abi.contract.TestContract.create(bool_param#0: uint64, uint64_param#0: uint64, bytes_param#0: bytes, tuple_param.0#0: uint64, tuple_param.1#0: uint64, tuple_param.2#0: bytes) -> uint64, uint64, bytes:
create:
        proto 6 3                                                                    //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             def create(                                         File "avm_types_in_abi/contract.py", line 6

create_block@0:
        frame_dig -6                                                                 // load bool_param#0 from parameters                     (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bool_param#0                                                bool_param: bool                                    File "avm_types_in_abi/contract.py", line 8
        frame_dig -3                                                                 // load tuple_param.0#0 from parameters                  (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bool_param#0,tuple_param.0#0                                tuple_param: tuple[bool, UInt64, Bytes]             File "avm_types_in_abi/contract.py", line 11
        ==                                                                           //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | {==}                                                        result == tuple_param                               File "avm_types_in_abi/contract.py", line 14
        bz create_bool_false@4                                                       //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             result == tuple_param                               File "avm_types_in_abi/contract.py", line 14
        // Implicit fall through to create_and_contd@1                               //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             result == tuple_param                               File "avm_types_in_abi/contract.py", line 14

create_and_contd@1:
        frame_dig -5                                                                 // load uint64_param#0 from parameters                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | uint64_param#0                                              uint64_param: UInt64                                File "avm_types_in_abi/contract.py", line 9
        frame_dig -2                                                                 // load tuple_param.1#0 from parameters                  (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | uint64_param#0,tuple_param.1#0                              tuple_param: tuple[bool, UInt64, Bytes]             File "avm_types_in_abi/contract.py", line 11
        ==                                                                           //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | {==}                                                        result == tuple_param                               File "avm_types_in_abi/contract.py", line 14
        bz create_bool_false@4                                                       //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             result == tuple_param                               File "avm_types_in_abi/contract.py", line 14
        // Implicit fall through to create_and_contd@2                               //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             result == tuple_param                               File "avm_types_in_abi/contract.py", line 14

create_and_contd@2:
        frame_dig -4                                                                 // load bytes_param#0 from parameters                    (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bytes_param#0                                               bytes_param: Bytes                                  File "avm_types_in_abi/contract.py", line 10
        frame_dig -1                                                                 // load tuple_param.2#0 from parameters                  (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bytes_param#0,tuple_param.2#0                               tuple_param: tuple[bool, UInt64, Bytes]             File "avm_types_in_abi/contract.py", line 11
        ==                                                                           //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | {==}                                                        result == tuple_param                               File "avm_types_in_abi/contract.py", line 14
        bz create_bool_false@4                                                       //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             result == tuple_param                               File "avm_types_in_abi/contract.py", line 14
        // Implicit fall through to create_bool_true@3                               //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                                             result == tuple_param                               File "avm_types_in_abi/contract.py", line 14

create_bool_true@3:
        int 1                                                                        //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | 1
        b create_bool_merge@5                                                        //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | (𝕏) and_result%3#0 |                         and_result%3#0

create_bool_false@4:
        int 0                                                                        //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | 0
        // Implicit fall through to create_bool_merge@5                              //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | (𝕏) and_result%3#0 |                         and_result%3#0

create_bool_merge@5:
        assert                                                                       //                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 |                                              and_result%3#0 assert result == tuple_param                        File "avm_types_in_abi/contract.py", line 14
        frame_dig -6                                                                 // load bool_param#0 from parameters                     (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bool_param#0                                                bool_param: bool                                    File "avm_types_in_abi/contract.py", line 8
        frame_dig -5                                                                 // load uint64_param#0 from parameters                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bool_param#0,uint64_param#0                                 uint64_param: UInt64                                File "avm_types_in_abi/contract.py", line 9
        frame_dig -4                                                                 // load bytes_param#0 from parameters                    (𝕡) bool_param#0,uint64_param#0,bytes_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0 | bool_param#0,uint64_param#0,bytes_param#0                   bytes_param: Bytes                                  File "avm_types_in_abi/contract.py", line 10
        retsub                                                                       //                                                       bool_param#0,uint64_param#0,bytes_param#0                                                                                                                   return result                                       File "avm_types_in_abi/contract.py", line 15

