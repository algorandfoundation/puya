// Op                                                                                            Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // avm_types_in_abi/contract.py:4
        // class TestContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                           tmp%0#1
        bz main_after_if_else@8 ; b main_abi_routing@2

    main_abi_routing@2:
        // avm_types_in_abi/contract.py:4
        // class TestContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                   tmp%2#0
        method create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string) tmp%2#0,Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string))
        method tuple_of_arc4((uint8,address))(uint8,address)                                     tmp%2#0,Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string)),Method(tuple_of_arc4((uint8,address))(uint8,address))
        l-load tmp%2#0 2                                                                         Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string)),Method(tuple_of_arc4((uint8,address))(uint8,address)),tmp%2#0
        match main_create_route@3 main_tuple_of_arc4_route@4 ; b main_after_if_else@8

    main_create_route@3:
        // avm_types_in_abi/contract.py:5
        // @arc4.abimethod(allow_actions=["NoOp"], create="require")
        txn OnCompletion                                                                         tmp%3#0
        !                                                                                        tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                        tmp%5#0
        !                                                                                        tmp%6#0
        assert // can only call when creating
        // avm_types_in_abi/contract.py:4
        // class TestContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(bool8)%0#0
        int 0                                                                                    reinterpret_Encoded(bool8)%0#0,0
        getbit                                                                                   tmp%7#0
        txna ApplicationArgs 2                                                                   tmp%7#0,reinterpret_Encoded(uint64)%0#0
        btoi                                                                                     tmp%7#0,tmp%8#0
        txna ApplicationArgs 3                                                                   tmp%7#0,tmp%8#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                              tmp%7#0,tmp%8#0,tmp%9#0
        txna ApplicationArgs 4                                                                   tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0
        txna ApplicationArgs 5                                                                   tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                              tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0
        txna ApplicationArgs 6                                                                   tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 0 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        int 0                                                                                    tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy),0
        getbit                                                                                   tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,get_bit%0#0
        int 0                                                                                    tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,get_bit%0#0,0
        getbit                                                                                   tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 1 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        int 1                                                                                    tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy),1
        extract_uint64                                                                           tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 2 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        int 9                                                                                    tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy),9
        extract_uint16                                                                           tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%0#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 3 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%0#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        int 75                                                                                   tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%0#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy),75
        extract_uint16                                                                           tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%0#0,extract_uint16%1#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 4 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%0#0,extract_uint16%1#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        l-load extract_uint16%0#0 2                                                              tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy),extract_uint16%0#0
        l-load-copy extract_uint16%1#0 2                                                         tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy),extract_uint16%0#0,extract_uint16%1#0 (copy)
        substring3                                                                               tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,substring3%0#0
        extract 2 0                                                                              tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,tmp%13#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 4 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,tmp%13#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        extract 11 64                                                                            tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,tmp%13#0,extract%1#0
        l-load-copy reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 5 tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,tmp%13#0,extract%1#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 (copy)
        len                                                                                      tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,tmp%13#0,extract%1#0,len%0#0
        l-load reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0 6          tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,extract_uint16%1#0,tmp%13#0,extract%1#0,len%0#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0
        l-load extract_uint16%1#0 4                                                              tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,len%0#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,extract_uint16%1#0
        l-load len%0#0 2                                                                         tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,reinterpret_Encoded((bool1,uint64,len+uint8[],uint512,len+utf8[]))%0#0,extract_uint16%1#0,len%0#0
        substring3                                                                               tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,substring3%1#0
        extract 2 0                                                                              tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0
        // avm_types_in_abi/contract.py:5
        // @arc4.abimethod(allow_actions=["NoOp"], create="require")
        l-load tmp%7#0 9                                                                         tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0
        l-load tmp%8#0 9                                                                         tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0
        l-load tmp%9#0 9                                                                         reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0
        l-load reinterpret_Encoded(uint512)%0#0 9                                                tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0
        l-load tmp%10#0 9                                                                        tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0
        l-load tmp%11#0 9                                                                        tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0
        l-load tmp%12#0 9                                                                        tmp%13#0,extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0
        l-load tmp%13#0 9                                                                        extract%1#0,tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0
        l-load extract%1#0 9                                                                     tmp%14#0,tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0
        l-load tmp%14#0 9                                                                        tmp%7#0,tmp%8#0,tmp%9#0,reinterpret_Encoded(uint512)%0#0,tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,extract%1#0,tmp%14#0
        callsub create                                                                           tmp%15#0,tmp%16#0,tmp%17#0,tmp%18#0,tmp%19#0
        byte 0x00                                                                                tmp%15#0,tmp%16#0,tmp%17#0,tmp%18#0,tmp%19#0,0x00
        int 0                                                                                    tmp%15#0,tmp%16#0,tmp%17#0,tmp%18#0,tmp%19#0,0x00,0
        l-load tmp%15#0 6                                                                        tmp%16#0,tmp%17#0,tmp%18#0,tmp%19#0,0x00,0,tmp%15#0
        setbit                                                                                   tmp%16#0,tmp%17#0,tmp%18#0,tmp%19#0,encoded_bit%0#0
        l-load tmp%16#0 4                                                                        tmp%17#0,tmp%18#0,tmp%19#0,encoded_bit%0#0,tmp%16#0
        itob                                                                                     tmp%17#0,tmp%18#0,tmp%19#0,encoded_bit%0#0,val_as_bytes%0#0
        l-load encoded_bit%0#0 1                                                                 tmp%17#0,tmp%18#0,tmp%19#0,val_as_bytes%0#0,encoded_bit%0#0
        l-load val_as_bytes%0#0 1                                                                tmp%17#0,tmp%18#0,tmp%19#0,encoded_bit%0#0,val_as_bytes%0#0
        concat                                                                                   tmp%17#0,tmp%18#0,tmp%19#0,encoded%1#0
        l-load-copy tmp%17#0 3                                                                   tmp%17#0,tmp%18#0,tmp%19#0,encoded%1#0,tmp%17#0 (copy)
        len                                                                                      tmp%17#0,tmp%18#0,tmp%19#0,encoded%1#0,length%0#0
        itob                                                                                     tmp%17#0,tmp%18#0,tmp%19#0,encoded%1#0,as_bytes%0#0
        extract 6 2                                                                              tmp%17#0,tmp%18#0,tmp%19#0,encoded%1#0,length_uint16%0#0
        l-load tmp%17#0 4                                                                        tmp%18#0,tmp%19#0,encoded%1#0,length_uint16%0#0,tmp%17#0
        concat                                                                                   tmp%18#0,tmp%19#0,encoded%1#0,encoded_value%0#0
        l-load-copy encoded_value%0#0 0                                                          tmp%18#0,tmp%19#0,encoded%1#0,encoded_value%0#0,encoded_value%0#0 (copy)
        len                                                                                      tmp%18#0,tmp%19#0,encoded%1#0,encoded_value%0#0,data_length%0#0
        int 77                                                                                   tmp%18#0,tmp%19#0,encoded%1#0,encoded_value%0#0,data_length%0#0,77
        l-load data_length%0#0 1                                                                 tmp%18#0,tmp%19#0,encoded%1#0,encoded_value%0#0,77,data_length%0#0
        +                                                                                        tmp%18#0,tmp%19#0,encoded%1#0,encoded_value%0#0,current_tail_offset%0#0
        l-load encoded%1#0 2                                                                     tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%1#0
        byte 0x004d                                                                              tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%1#0,0x004d
        concat                                                                                   tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0
        l-load-copy tmp%18#0 4                                                                   tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,tmp%18#0 (copy)
        len                                                                                      tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,value_len%0#0
        int 64                                                                                   tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,value_len%0#0,64
        <=                                                                                       tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,len_ok%0#0
        assert // overflow                                                                       tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0
        int 64                                                                                   tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,64
        bzero                                                                                    tmp%18#0,tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,bzero%0#0
        l-load tmp%18#0 5                                                                        tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,bzero%0#0,tmp%18#0
        l-load bzero%0#0 1                                                                       tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,tmp%18#0,bzero%0#0
        b|                                                                                       tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,arc4_encoded%0#0
        l-load encoded%2#0 1                                                                     tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,arc4_encoded%0#0,encoded%2#0
        l-load arc4_encoded%0#0 1                                                                tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,arc4_encoded%0#0
        concat                                                                                   tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%3#0
        l-load-copy tmp%19#0 3                                                                   tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%3#0,tmp%19#0 (copy)
        len                                                                                      tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%3#0,length%1#0
        itob                                                                                     tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%3#0,as_bytes%2#0
        extract 6 2                                                                              tmp%19#0,encoded_value%0#0,current_tail_offset%0#0,encoded%3#0,length_uint16%1#0
        l-load tmp%19#0 4                                                                        encoded_value%0#0,current_tail_offset%0#0,encoded%3#0,length_uint16%1#0,tmp%19#0
        concat                                                                                   encoded_value%0#0,current_tail_offset%0#0,encoded%3#0,encoded_value%1#0
        l-load encoded_value%0#0 3                                                               current_tail_offset%0#0,encoded%3#0,encoded_value%1#0,encoded_value%0#0
        l-load encoded_value%1#0 1                                                               current_tail_offset%0#0,encoded%3#0,encoded_value%0#0,encoded_value%1#0
        concat                                                                                   current_tail_offset%0#0,encoded%3#0,tail%1#0
        l-load current_tail_offset%0#0 2                                                         encoded%3#0,tail%1#0,current_tail_offset%0#0
        itob                                                                                     encoded%3#0,tail%1#0,as_bytes%3#0
        extract 6 2                                                                              encoded%3#0,tail%1#0,offset_as_uint16%1#0
        l-load encoded%3#0 2                                                                     tail%1#0,offset_as_uint16%1#0,encoded%3#0
        l-load offset_as_uint16%1#0 1                                                            tail%1#0,encoded%3#0,offset_as_uint16%1#0
        concat                                                                                   tail%1#0,encoded%4#0
        l-load tail%1#0 1                                                                        encoded%4#0,tail%1#0
        concat                                                                                   encoded%5#0
        byte 0x151f7c75                                                                          encoded%5#0,0x151f7c75
        l-load encoded%5#0 1                                                                     0x151f7c75,encoded%5#0
        concat                                                                                   tmp%20#0
        log
        int 1                                                                                    test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__@9 (𝕏) tmp%0#0 | 

    main_tuple_of_arc4_route@4:
        // avm_types_in_abi/contract.py:19
        // @arc4.abimethod
        txn OnCompletion                                                                         tmp%21#0
        !                                                                                        tmp%22#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                        tmp%23#0
        assert // can only call when not creating
        // avm_types_in_abi/contract.py:4
        // class TestContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                   reinterpret_Encoded((uint8,uint8[32]))%0#0
        l-load-copy reinterpret_Encoded((uint8,uint8[32]))%0#0 0                                 reinterpret_Encoded((uint8,uint8[32]))%0#0,reinterpret_Encoded((uint8,uint8[32]))%0#0 (copy)
        extract 0 1                                                                              reinterpret_Encoded((uint8,uint8[32]))%0#0,extract%2#0
        l-load reinterpret_Encoded((uint8,uint8[32]))%0#0 1                                      extract%2#0,reinterpret_Encoded((uint8,uint8[32]))%0#0
        extract 1 32                                                                             extract%2#0,extract%3#0
        // avm_types_in_abi/contract.py:19
        // @arc4.abimethod
        l-load extract%2#0 1                                                                     extract%3#0,extract%2#0
        l-load extract%3#0 1                                                                     extract%2#0,extract%3#0
        callsub tuple_of_arc4                                                                    tmp%25#0,tmp%26#0
        l-load tmp%25#0 1                                                                        tmp%26#0,tmp%25#0
        l-load tmp%26#0 1                                                                        tmp%25#0,tmp%26#0
        concat                                                                                   encoded%7#0
        byte 0x151f7c75                                                                          encoded%7#0,0x151f7c75
        l-load encoded%7#0 1                                                                     0x151f7c75,encoded%7#0
        concat                                                                                   tmp%27#0
        log
        int 1                                                                                    test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__@9 (𝕏) tmp%0#0 | 

    main_after_if_else@8:
        // avm_types_in_abi/contract.py:4
        // class TestContract(arc4.ARC4Contract):
        int 0                                                                                    test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                          (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__@9 (𝕏) tmp%0#0 | 

    main_after_inlined_test_cases.avm_types_in_abi.contract.TestContract.__puya_arc4_router__@9: (𝕏) tmp%0#0 |
        x-load tmp%0#0                                                                           tmp%0#0
        return


// test_cases.avm_types_in_abi.contract.TestContract.create(bool_param: uint64, uint64_param: uint64, bytes_param: bytes, biguint_param: bytes, string_param: bytes, tuple_param.0: uint64, tuple_param.1: uint64, tuple_param.2: bytes, tuple_param.3: bytes, tuple_param.4: bytes) -> uint64, uint64, bytes, bytes, bytes:
subroutine create:
    create_block@0:                                                                              (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 |
        // avm_types_in_abi/contract.py:16
        // assert result == tuple_param
        p-load bool_param#0                                                                      (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy)
        p-load tuple_param.0#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),tuple_param.0#0 (copy)
        ==                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0
        p-load uint64_param#0                                                                    (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,uint64_param#0 (copy)
        p-load tuple_param.1#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,uint64_param#0 (copy),tuple_param.1#0 (copy)
        ==                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,tmp%1#0
        l-load tmp%0#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%1#0,tmp%0#0
        l-load tmp%1#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%0#0,tmp%1#0
        &&                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0
        p-load bytes_param#0                                                                     (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,bytes_param#0 (copy)
        p-load tuple_param.2#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,bytes_param#0 (copy),tuple_param.2#0 (copy)
        ==                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,tmp%3#0
        l-load tmp%2#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%3#0,tmp%2#0
        l-load tmp%3#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%2#0,tmp%3#0
        &&                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0
        p-load biguint_param#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,biguint_param#0 (copy)
        p-load tuple_param.3#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,biguint_param#0 (copy),tuple_param.3#0 (copy)
        b==                                                                                      (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,tmp%5#0
        l-load tmp%4#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%5#0,tmp%4#0
        l-load tmp%5#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%4#0,tmp%5#0
        &&                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0
        p-load string_param#0                                                                    (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,string_param#0 (copy)
        p-load tuple_param.4#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,string_param#0 (copy),tuple_param.4#0 (copy)
        ==                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,tmp%7#0
        l-load tmp%6#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%7#0,tmp%6#0
        l-load tmp%7#0 1                                                                         (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%6#0,tmp%7#0
        &&                                                                                       (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | tmp%8#0
        assert                                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 |
        // avm_types_in_abi/contract.py:17
        // return result
        p-load bool_param#0                                                                      (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy)
        p-load uint64_param#0                                                                    (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy)
        p-load bytes_param#0                                                                     (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy)
        p-load biguint_param#0                                                                   (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy),biguint_param#0 (copy)
        p-load string_param#0                                                                    (𝕡) bool_param#0,uint64_param#0,bytes_param#0,biguint_param#0,string_param#0,tuple_param.0#0,tuple_param.1#0,tuple_param.2#0,tuple_param.3#0,tuple_param.4#0 | bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy),biguint_param#0 (copy),string_param#0 (copy)
        retsub                                                                                   bool_param#0 (copy),uint64_param#0 (copy),bytes_param#0 (copy),biguint_param#0 (copy),string_param#0 (copy)


// test_cases.avm_types_in_abi.contract.TestContract.tuple_of_arc4(args.0: bytes, args.1: bytes) -> bytes, bytes:
subroutine tuple_of_arc4:
    tuple_of_arc4_block@0:                                                                       (𝕡) args.0#0,args.1#0 |
        // avm_types_in_abi/contract.py:23
        // assert args[0].bytes.length == 1
        p-load args.0#0                                                                          (𝕡) args.0#0,args.1#0 | args.0#0 (copy)
        len                                                                                      (𝕡) args.0#0,args.1#0 | tmp%0#0
        int 1                                                                                    (𝕡) args.0#0,args.1#0 | tmp%0#0,1
        ==                                                                                       (𝕡) args.0#0,args.1#0 | tmp%1#0
        assert                                                                                   (𝕡) args.0#0,args.1#0 |
        // avm_types_in_abi/contract.py:24
        // assert args[1].bytes.length == 32
        p-load args.1#0                                                                          (𝕡) args.0#0,args.1#0 | args.1#0 (copy)
        len                                                                                      (𝕡) args.0#0,args.1#0 | tmp%2#0
        int 32                                                                                   (𝕡) args.0#0,args.1#0 | tmp%2#0,32
        ==                                                                                       (𝕡) args.0#0,args.1#0 | tmp%3#0
        assert                                                                                   (𝕡) args.0#0,args.1#0 |
        // avm_types_in_abi/contract.py:25
        // return args
        p-load args.0#0                                                                          (𝕡) args.0#0,args.1#0 | args.0#0 (copy)
        p-load args.1#0                                                                          (𝕡) args.0#0,args.1#0 | args.0#0 (copy),args.1#0 (copy)
        retsub                                                                                   args.0#0 (copy),args.1#0 (copy)


