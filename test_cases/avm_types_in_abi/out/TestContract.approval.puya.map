{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AACK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAWU;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;AAXH;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAIU;AAAA;AAAwB;AAAxB;AAAP;AACO;AAAwB;;AAAxB;AAAP;AALH;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 64 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75"
    },
    "14": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "16": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "17": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "18": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "20": {
      "op": "bz main_create_NoOp@5",
      "stack_out": []
    },
    "23": {
      "op": "pushbytes 0x7ea64078 // method \"tuple_of_arc4((uint8,address))(uint8,address)\"",
      "defined_out": [
        "Method(tuple_of_arc4((uint8,address))(uint8,address))"
      ],
      "stack_out": [
        "Method(tuple_of_arc4((uint8,address))(uint8,address))"
      ]
    },
    "29": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(tuple_of_arc4((uint8,address))(uint8,address))",
        "tmp%4#0"
      ],
      "stack_out": [
        "Method(tuple_of_arc4((uint8,address))(uint8,address))",
        "tmp%4#0"
      ]
    },
    "32": {
      "op": "match tuple_of_arc4",
      "stack_out": []
    },
    "36": {
      "op": "err"
    },
    "37": {
      "block": "main_create_NoOp@5",
      "stack_in": [],
      "op": "pushbytes 0xfb716652 // method \"create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string)\"",
      "defined_out": [
        "Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string))"
      ],
      "stack_out": [
        "Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string))"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string))",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(create(bool,uint64,byte[],uint512,string,(bool,uint64,byte[],uint512,string))(bool,uint64,byte[],uint512,string))",
        "tmp%5#0"
      ]
    },
    "46": {
      "op": "match create",
      "stack_out": []
    },
    "50": {
      "op": "err"
    },
    "51": {
      "subroutine": "test_cases.avm_types_in_abi.contract.TestContract.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "55": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "56": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "1"
      ]
    },
    "57": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "58": {
      "error": "invalid number of bytes for bool8",
      "op": "assert // invalid number of bytes for bool8",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "59": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "60": {
      "op": "getbit",
      "defined_out": [
        "bool_param#0"
      ],
      "stack_out": [
        "bool_param#0"
      ]
    },
    "61": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "bool_param#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bool_param#0",
        "tmp%2#0"
      ]
    },
    "64": {
      "op": "dup",
      "defined_out": [
        "bool_param#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "bool_param#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "65": {
      "op": "len",
      "defined_out": [
        "bool_param#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bool_param#0",
        "tmp%2#0",
        "len%1#0"
      ]
    },
    "66": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "bool_param#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bool_param#0",
        "tmp%2#0",
        "len%1#0",
        "8"
      ]
    },
    "68": {
      "op": "==",
      "defined_out": [
        "bool_param#0",
        "eq%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bool_param#0",
        "tmp%2#0",
        "eq%1#0"
      ]
    },
    "69": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "bool_param#0",
        "tmp%2#0"
      ]
    },
    "70": {
      "op": "btoi",
      "defined_out": [
        "bool_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0"
      ]
    },
    "71": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "bool_param#0",
        "tmp%4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0"
      ]
    },
    "74": {
      "op": "dup",
      "defined_out": [
        "bool_param#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "75": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "0"
      ]
    },
    "76": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "bool_param#0",
        "tmp%4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "aggregate%array_length%0#0"
      ]
    },
    "77": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "bool_param#0",
        "tmp%4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "78": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "bool_param#0",
        "tmp%4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "add%0#0"
      ]
    },
    "79": {
      "op": "dig 1",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "add%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "81": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "bool_param#0",
        "len%2#0",
        "tmp%4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "add%0#0",
        "len%2#0"
      ]
    },
    "82": {
      "op": "==",
      "defined_out": [
        "bool_param#0",
        "eq%2#0",
        "tmp%4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0",
        "eq%2#0"
      ]
    },
    "83": {
      "error": "invalid number of bytes for (len+uint8[])",
      "op": "assert // invalid number of bytes for (len+uint8[])",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "tmp%4#0"
      ]
    },
    "84": {
      "op": "extract 2 0",
      "defined_out": [
        "bool_param#0",
        "bytes_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0"
      ]
    },
    "87": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0"
      ]
    },
    "90": {
      "op": "dup",
      "defined_out": [
        "biguint_param#0",
        "biguint_param#0 (copy)",
        "bool_param#0",
        "bytes_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "biguint_param#0 (copy)"
      ]
    },
    "91": {
      "op": "len",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0"
      ]
    },
    "92": {
      "op": "dup",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "len%3#0 (copy)",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "len%3#0 (copy)"
      ]
    },
    "93": {
      "op": "intc_2 // 64",
      "defined_out": [
        "64",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "len%3#0 (copy)",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "len%3#0 (copy)",
        "64"
      ]
    },
    "94": {
      "op": "==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "eq%3#0",
        "len%3#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "eq%3#0"
      ]
    },
    "95": {
      "error": "invalid number of bytes for uint512",
      "op": "assert // invalid number of bytes for uint512",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0"
      ]
    },
    "96": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "tmp%8#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0"
      ]
    },
    "99": {
      "op": "dup",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "tmp%8#0",
        "tmp%8#0 (copy)",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "tmp%8#0 (copy)"
      ]
    },
    "100": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "tmp%8#0 (copy)",
        "0"
      ]
    },
    "101": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "tmp%8#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "aggregate%array_length%1#0"
      ]
    },
    "102": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "aggregate%array_length%1#0",
        "2"
      ]
    },
    "103": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "tmp%8#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "add%1#0"
      ]
    },
    "104": {
      "op": "dig 1",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "add%1#0",
        "tmp%8#0 (copy)"
      ]
    },
    "106": {
      "op": "len",
      "defined_out": [
        "add%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "len%4#0",
        "tmp%8#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "add%1#0",
        "len%4#0"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "eq%4#0",
        "len%3#0",
        "tmp%8#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0",
        "eq%4#0"
      ]
    },
    "108": {
      "error": "invalid number of bytes for (len+utf8[])",
      "op": "assert // invalid number of bytes for (len+utf8[])",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "tmp%8#0"
      ]
    },
    "109": {
      "op": "extract 2 0",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ]
    },
    "112": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0"
      ]
    },
    "115": {
      "op": "dup",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "116": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "0"
      ]
    },
    "117": {
      "op": "getbit",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0"
      ]
    },
    "118": {
      "op": "dig 1",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tmp%10#0 (copy)"
      ]
    },
    "120": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tmp%10#0 (copy)",
        "1"
      ]
    },
    "121": {
      "op": "extract_uint64",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0"
      ]
    },
    "122": {
      "op": "dig 2",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tmp%10#0 (copy)"
      ]
    },
    "124": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tmp%10#0 (copy)",
        "9"
      ]
    },
    "126": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "127": {
      "op": "dig 3",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%0#0",
        "tmp%10#0 (copy)"
      ]
    },
    "129": {
      "op": "pushint 75 // 75",
      "defined_out": [
        "75",
        "aggregate%extract_uint16%0#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%0#0",
        "tmp%10#0 (copy)",
        "75"
      ]
    },
    "131": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "132": {
      "op": "dig 4",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "tmp%10#0 (copy)"
      ]
    },
    "134": {
      "op": "uncover 2",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tmp%10#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "136": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tmp%10#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "138": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "139": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tuple_param.2#0"
      ]
    },
    "142": {
      "op": "dig 4",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tuple_param.2#0",
        "tmp%10#0 (copy)"
      ]
    },
    "144": {
      "op": "extract 11 64",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tuple_param.2#0",
        "tuple_param.3#0"
      ]
    },
    "147": {
      "op": "dig 5",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tmp%10#0 (copy)"
      ]
    },
    "149": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%10#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "aggregate%len%0#0"
      ]
    },
    "150": {
      "op": "uncover 6",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "aggregate%extract_uint16%1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "aggregate%len%0#0",
        "tmp%10#0"
      ]
    },
    "152": {
      "op": "uncover 4",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "aggregate%len%0#0",
        "tmp%10#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "154": {
      "op": "uncover 2",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tmp%10#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0"
      ]
    },
    "156": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%1#0",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "aggregate%substring3%1#0"
      ]
    },
    "157": {
      "op": "extract 2 0",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0"
      ]
    },
    "160": {
      "op": "dig 10",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bool_param#0 (copy)",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.0#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "bool_param#0 (copy)"
      ]
    },
    "162": {
      "op": "uncover 5",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "bool_param#0 (copy)",
        "tuple_param.0#0"
      ]
    },
    "164": {
      "op": "==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%0#1",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%0#1"
      ]
    },
    "165": {
      "op": "dig 9",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%0#1",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0",
        "uint64_param#0 (copy)"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.1#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%0#1",
        "uint64_param#0 (copy)"
      ]
    },
    "167": {
      "op": "uncover 5",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%0#1",
        "uint64_param#0 (copy)",
        "tuple_param.1#0"
      ]
    },
    "169": {
      "op": "==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%0#1",
        "tmp%1#1",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "170": {
      "op": "&&",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%2#1",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%2#1"
      ]
    },
    "171": {
      "op": "dig 7",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "bytes_param#0 (copy)",
        "len%3#0",
        "string_param#0",
        "tmp%2#1",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.2#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%2#1",
        "bytes_param#0 (copy)"
      ]
    },
    "173": {
      "op": "uncover 4",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%2#1",
        "bytes_param#0 (copy)",
        "tuple_param.2#0"
      ]
    },
    "175": {
      "op": "==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%2#1",
        "tmp%3#1",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%2#1",
        "tmp%3#1"
      ]
    },
    "176": {
      "op": "&&",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%4#1",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%4#1"
      ]
    },
    "177": {
      "op": "dig 5",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.3#0",
        "tuple_param.4#0",
        "tmp%4#1",
        "biguint_param#0 (copy)"
      ]
    },
    "179": {
      "op": "uncover 3",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.4#0",
        "tmp%4#1",
        "biguint_param#0 (copy)",
        "tuple_param.3#0"
      ]
    },
    "181": {
      "op": "b==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%4#1",
        "tmp%5#1",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.4#0",
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "182": {
      "op": "&&",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%6#1",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.4#0",
        "tmp%6#1"
      ]
    },
    "183": {
      "op": "dig 2",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "string_param#0 (copy)",
        "tmp%6#1",
        "tuple_param.4#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tuple_param.4#0",
        "tmp%6#1",
        "string_param#0 (copy)"
      ]
    },
    "185": {
      "op": "uncover 2",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%6#1",
        "string_param#0 (copy)",
        "tuple_param.4#0"
      ]
    },
    "187": {
      "op": "==",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%6#1",
        "tmp%7#1",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "188": {
      "op": "&&",
      "defined_out": [
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%8#1",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "tmp%8#1"
      ]
    },
    "189": {
      "op": "assert",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ]
    },
    "190": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "biguint_param#0",
        "bool_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "0x00"
      ]
    },
    "193": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bool_param#0",
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "0x00",
        "0"
      ]
    },
    "194": {
      "op": "uncover 7",
      "stack_out": [
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "0x00",
        "0",
        "bool_param#0"
      ]
    },
    "196": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "biguint_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0",
        "uint64_param#0"
      ],
      "stack_out": [
        "uint64_param#0",
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "197": {
      "op": "uncover 5",
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_bool%0#0",
        "uint64_param#0"
      ]
    },
    "199": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "biguint_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "200": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "biguint_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0"
      ]
    },
    "201": {
      "op": "dig 4",
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0",
        "bytes_param#0 (copy)"
      ]
    },
    "203": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "biguint_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "204": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "biguint_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "205": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "biguint_param#0",
        "bytes_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "bytes_param#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "208": {
      "op": "uncover 5",
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "bytes_param#0"
      ]
    },
    "210": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "211": {
      "op": "swap",
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "212": {
      "op": "pushbytes 0x004d",
      "defined_out": [
        "0x004d",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "0x004d"
      ]
    },
    "216": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0"
      ]
    },
    "217": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%0#0 (copy)",
        "aggregate%head%2#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%0#0 (copy)"
      ]
    },
    "219": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%data_length%0#0"
      ]
    },
    "220": {
      "op": "pushint 77 // 77",
      "defined_out": [
        "77",
        "aggregate%data_length%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%data_length%0#0",
        "77"
      ]
    },
    "222": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "biguint_param#0",
        "len%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "len%3#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "223": {
      "op": "uncover 4",
      "stack_out": [
        "biguint_param#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "len%3#0"
      ]
    },
    "225": {
      "op": "intc_2 // 64",
      "stack_out": [
        "biguint_param#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "len%3#0",
        "64"
      ]
    },
    "226": {
      "op": "<=",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%len_ok%0#0",
        "biguint_param#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "227": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "biguint_param#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "228": {
      "op": "intc_2 // 64",
      "stack_out": [
        "biguint_param#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "64"
      ]
    },
    "229": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "biguint_param#0",
        "string_param#0"
      ],
      "stack_out": [
        "biguint_param#0",
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%bzero%0#0"
      ]
    },
    "230": {
      "op": "uncover 5",
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%bzero%0#0",
        "biguint_param#0"
      ]
    },
    "232": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "string_param#0"
      ],
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "233": {
      "op": "uncover 2",
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%arc4_encoded%0#0",
        "aggregate%head%2#0"
      ]
    },
    "235": {
      "op": "swap",
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "236": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0"
      ]
    },
    "237": {
      "op": "dig 3",
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "string_param#0 (copy)"
      ]
    },
    "239": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "aggregate%length%1#0",
        "string_param#0"
      ],
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%length%1#0"
      ]
    },
    "240": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "string_param#0"
      ],
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "241": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "string_param#0"
      ],
      "stack_out": [
        "string_param#0",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "244": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "string_param#0"
      ]
    },
    "246": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "247": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "249": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "aggregate%encoded_value%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "250": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0",
        "aggregate%encoded_value%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "253": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%3#0"
      ]
    },
    "255": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "256": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "257": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "aggregate%encoded_value%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "260": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "261": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "aggregate%concat%1#0"
      ]
    },
    "262": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "aggregate%concat%1#0",
        "0x151f7c75"
      ]
    },
    "263": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%concat%1#0"
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "265": {
      "op": "log",
      "stack_out": []
    },
    "266": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "267": {
      "op": "return",
      "stack_out": []
    },
    "268": {
      "subroutine": "test_cases.avm_types_in_abi.contract.TestContract.tuple_of_arc4[routing]",
      "params": {},
      "block": "tuple_of_arc4",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "271": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "272": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "273": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "33",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "33"
      ]
    },
    "275": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "276": {
      "error": "invalid number of bytes for (uint8,uint8[32])",
      "op": "assert // invalid number of bytes for (uint8,uint8[32])",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "277": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "278": {
      "op": "extract 0 1",
      "defined_out": [
        "args.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "args.0#0"
      ]
    },
    "281": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "args.0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "283": {
      "op": "extract 1 32",
      "defined_out": [
        "args.0#0",
        "args.1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "args.0#0",
        "args.1#0"
      ]
    },
    "286": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "args.1#0",
        "args.0#0"
      ]
    },
    "287": {
      "op": "len",
      "defined_out": [
        "args.1#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "args.1#0",
        "tmp%0#1"
      ]
    },
    "288": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "args.1#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "args.1#0",
        "tmp%0#1",
        "1"
      ]
    },
    "289": {
      "op": "==",
      "defined_out": [
        "args.1#0",
        "tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "args.1#0",
        "tmp%1#1"
      ]
    },
    "290": {
      "op": "assert",
      "stack_out": [
        "tmp%0#0",
        "args.1#0"
      ]
    },
    "291": {
      "op": "len",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#1"
      ]
    },
    "292": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#1",
        "32"
      ]
    },
    "294": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#1"
      ]
    },
    "295": {
      "op": "assert",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "296": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "297": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "298": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "299": {
      "op": "log",
      "stack_out": []
    },
    "300": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "301": {
      "op": "return",
      "stack_out": []
    }
  }
}