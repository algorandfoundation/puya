#pragma version 10

test_cases.loop_else.loop_else.LoopElseContract.approval_program:
    byte ""
    dup
    int 0
    callsub test_empty_loop
    int 0

main_while_top@1:
    txn NumAppArgs
    dig 1
    dup
    uncover 2
    <
    assert // access denied, missing secret argument
    txnas ApplicationArgs
    byte 0x7768696c655f736563726574
    ==
    bz main_after_if_else@16
    txn NumAccounts
    bury 2
    int 0
    bury 3

main_for_header@9:
    dig 2
    dup
    dig 3
    <
    assert // access denied, missing secret account
    txnas Accounts
    global ZeroAddress
    ==
    bz main_after_if_else@12
    dup
    int 48
    +
    itob
    dup
    len
    int 1
    -
    dup
    int 1
    +
    substring3
    byte "found secret argument at idx="
    swap
    concat
    byte " and secret account at idx="
    concat
    dig 3
    int 48
    +
    itob
    dup
    len
    int 1
    -
    dup
    int 1
    +
    substring3
    concat
    log
    int 1
    return

main_after_if_else@12:
    dig 2
    int 1
    +
    bury 3
    b main_for_header@9

main_after_if_else@16:
    dup
    int 1
    +
    bury 1
    b main_while_top@1


// test_cases.loop_else.loop_else.test_empty_loop(count: uint64) -> void:
test_empty_loop:
    proto 1 0
    byte ""
    frame_dig -1
    !
    assert
    int 0
    frame_dig -1
    bz test_empty_loop_after_for@7
    frame_dig -1
    int 1
    -
    int 1
    /
    frame_bury 0

test_empty_loop_for_body@2:
    frame_dig 0
    bz test_empty_loop_block@8
    frame_dig 0
    bz test_empty_loop_after_for@7
    frame_dig 0
    int 1
    -
    frame_bury 0
    b test_empty_loop_for_body@2

test_empty_loop_after_for@7:
    int 1
    frame_bury 1

test_empty_loop_block@8:
    frame_dig 1
    int 1
    ==
    assert
    retsub
