{
  "version": 3,
  "sources": [
    "../loop_else.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAMwB;AAAhB;;;AAEU;;;;AACM;;AAAV;;AAAA;AAAd;;;AAAA;;;AACqB;AAArB;;;;AAAqB;AAAO;;AAAP;AAArB;;;AAAA;;;AAAqB;AACG;AAAL;AAAnB;;;AAAA;;;AACoB;;;AAEL;AAAA;;AAAiC;;;;;;;;;;;;;;AAAjC;AAAf;;;AAAA;;;AACgB;AAAA;;AAC4B;;AAAA;;AAAP;AAArC;AAAqC;AAAjB;;;;;AAAiB;;AAAA;;AAAA;AAArC;;;AAAA;;;AAC8B;;AAAA;;AACI;;AAAX;AAAvB;;;AAAA;;;AACwB;;;AAGR;;;AAKJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADJ;AAEI;AAAQ;;AAAe;AAAf;AAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAGI;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAHJ;AAII;AAAQ;;AAAgB;AAAhB;AAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAMO;AAAP;;;;AAhB6B;;AAAA;AAAA;AAAA;;;;;AAKjB;AAER;AAAW;AAAX;AAAA;;;;;AAVI;AAYJ;AAaZ;;;;;;;AAEW;;AAAS;AAAT;AAAP;AACS;AACS;AAAtB;AAAsB;AAAtB;;AAAA;AAAA;;;AAAA;;;AAAsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;;;;;AACG;;AAAK;AAAL;AAAX;;;AAAA;;;AACY;;;AAGD;;AAAU;AAAV;AAAP;;;;;AALkB;AAAA;;AAAA;AAAtB;;;AAAA;;;AAAsB;;AAAA;AAAA;AAAA;;;;;AADT;AAKK;AAAV;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.loop_else.loop_else.LoopElseContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 48"
    },
    "6": {
      "op": "bytecblock \"\""
    },
    "9": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "account_index#0"
      ]
    },
    "10": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "account_index#0",
        "secret_index#0"
      ]
    },
    "11": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0"
      ]
    },
    "12": {
      "op": "b block@0"
    },
    "15": {
      "block": "block@0",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "0"
      ]
    },
    "16": {
      "callsub": "test_cases.loop_else.loop_else.test_empty_loop",
      "op": "callsub test_empty_loop",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0"
      ]
    },
    "19": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "20": {
      "op": "b while_top@1"
    },
    "23": {
      "block": "while_top@1",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%0#0"
      ]
    },
    "25": {
      "op": "dig 1",
      "defined_out": [
        "arg_idx#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%0#0",
        "arg_idx#0"
      ]
    },
    "27": {
      "op": ">",
      "defined_out": [
        "arg_idx#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%1#0"
      ]
    },
    "28": {
      "op": "bz after_while@17",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "31": {
      "op": "b while_body@2"
    },
    "34": {
      "block": "while_body@2",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "1"
      ]
    },
    "35": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "36": {
      "op": "b for_header@3"
    },
    "39": {
      "block": "for_header@3",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "0"
      ]
    },
    "40": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "10"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "0",
        "10"
      ]
    },
    "42": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "continue_looping%0#0"
      ]
    },
    "43": {
      "op": "bz after_for@7",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "46": {
      "op": "b for_body@4"
    },
    "49": {
      "block": "for_body@4",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "0"
      ]
    },
    "50": {
      "op": "intc_1 // 0",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "0",
        "0"
      ]
    },
    "51": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%2#0"
      ]
    },
    "52": {
      "op": "bz after_if_else@6",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "55": {
      "op": "b if_body@5"
    },
    "58": {
      "block": "if_body@5",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "b after_for@7"
    },
    "61": {
      "block": "after_for@7",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "arg_idx#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "arg_idx#0"
      ]
    },
    "62": {
      "op": "txnas ApplicationArgs",
      "defined_out": [
        "arg_idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%3#0"
      ]
    },
    "64": {
      "op": "pushbytes 0x7768696c655f736563726574",
      "defined_out": [
        "0x7768696c655f736563726574",
        "arg_idx#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%3#0",
        "0x7768696c655f736563726574"
      ]
    },
    "78": {
      "op": "==",
      "defined_out": [
        "arg_idx#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%4#0"
      ]
    },
    "79": {
      "op": "bz after_if_else@16",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "82": {
      "op": "b if_body@8"
    },
    "85": {
      "block": "if_body@8",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "arg_idx#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "arg_idx#0"
      ]
    },
    "86": {
      "op": "bury 3",
      "defined_out": [
        "arg_idx#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "88": {
      "op": "txn NumAccounts",
      "defined_out": [
        "arg_idx#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%5#0"
      ]
    },
    "90": {
      "op": "bury 2",
      "defined_out": [
        "arg_idx#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "92": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arg_idx#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "1"
      ]
    },
    "93": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "94": {
      "op": "intc_1 // 0",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "0"
      ]
    },
    "95": {
      "op": "bury 4",
      "defined_out": [
        "arg_idx#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "97": {
      "op": "b for_header@9"
    },
    "100": {
      "block": "for_header@9",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "account_index#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account_index#0"
      ]
    },
    "102": {
      "op": "dig 2",
      "defined_out": [
        "account_index#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account_index#0",
        "tmp%5#0"
      ]
    },
    "104": {
      "op": "<",
      "defined_out": [
        "account_index#0",
        "continue_looping%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "continue_looping%1#0"
      ]
    },
    "105": {
      "op": "bz after_for@14",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "108": {
      "op": "b for_body@10"
    },
    "111": {
      "block": "for_body@10",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "account_index#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account_index#0"
      ]
    },
    "113": {
      "op": "txnas Accounts",
      "defined_out": [
        "account#0",
        "account_index#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account#0"
      ]
    },
    "115": {
      "op": "global ZeroAddress",
      "defined_out": [
        "account#0",
        "account_index#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account#0",
        "tmp%7#0"
      ]
    },
    "117": {
      "op": "==",
      "defined_out": [
        "account_index#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%8#0"
      ]
    },
    "118": {
      "op": "bz after_if_else@12",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "121": {
      "op": "b if_body@11"
    },
    "124": {
      "block": "if_body@11",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "b after_loop_L17"
    },
    "127": {
      "block": "after_loop_L17",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "b after_loop_L10"
    },
    "130": {
      "block": "after_loop_L10",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "pushbytes \"found secret argument at idx=\"",
      "defined_out": [
        "\"found secret argument at idx=\""
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "\"found secret argument at idx=\""
      ]
    },
    "161": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "\"found secret argument at idx=\""
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "\"found secret argument at idx=\"",
        "\"\""
      ]
    },
    "162": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0"
      ]
    },
    "163": {
      "op": "dig 3",
      "defined_out": [
        "secret_index#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "secret_index#0"
      ]
    },
    "165": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "secret_index#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "secret_index#0",
        "48"
      ]
    },
    "166": {
      "op": "+",
      "defined_out": [
        "secret_index#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "167": {
      "op": "itob",
      "defined_out": [
        "secret_index#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "168": {
      "op": "dup",
      "defined_out": [
        "secret_index#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ]
    },
    "169": {
      "op": "len",
      "defined_out": [
        "secret_index#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "170": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "secret_index#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "1"
      ]
    },
    "171": {
      "op": "-",
      "defined_out": [
        "secret_index#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "172": {
      "op": "intc_0 // 1",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "1"
      ]
    },
    "173": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "secret_index#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%10#0",
        "extract%0#0"
      ]
    },
    "174": {
      "op": "concat",
      "defined_out": [
        "secret_index#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%15#0"
      ]
    },
    "175": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%15#0",
        "\"\""
      ]
    },
    "176": {
      "op": "concat",
      "defined_out": [
        "secret_index#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%16#0"
      ]
    },
    "177": {
      "op": "pushbytes \" and secret account at idx=\"",
      "defined_out": [
        "\" and secret account at idx=\"",
        "secret_index#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%16#0",
        "\" and secret account at idx=\""
      ]
    },
    "206": {
      "op": "concat",
      "defined_out": [
        "secret_index#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%17#0"
      ]
    },
    "207": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%17#0",
        "\"\""
      ]
    },
    "208": {
      "op": "concat",
      "defined_out": [
        "secret_index#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0"
      ]
    },
    "209": {
      "op": "dig 4",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "account_index#0"
      ]
    },
    "211": {
      "op": "intc_2 // 48",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "account_index#0",
        "48"
      ]
    },
    "212": {
      "op": "+",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "213": {
      "op": "itob",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "214": {
      "op": "dup",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "215": {
      "op": "len",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "216": {
      "op": "intc_0 // 1",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "1"
      ]
    },
    "217": {
      "op": "-",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "218": {
      "op": "intc_0 // 1",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%22#0",
        "1"
      ]
    },
    "219": {
      "op": "extract3",
      "defined_out": [
        "account_index#0",
        "extract%1#0",
        "secret_index#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%18#0",
        "extract%1#0"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%23#0"
      ]
    },
    "221": {
      "op": "log",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "222": {
      "op": "intc_0 // 1",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "1"
      ]
    },
    "223": {
      "op": "return",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "224": {
      "block": "after_if_else@12",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "b for_footer@13"
    },
    "227": {
      "block": "for_footer@13",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "account_index#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account_index#0"
      ]
    },
    "229": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "account_index#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account_index#0",
        "1"
      ]
    },
    "230": {
      "op": "+",
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "account_index#0"
      ]
    },
    "231": {
      "op": "bury 4",
      "defined_out": [
        "account_index#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "233": {
      "op": "b for_header@9"
    },
    "236": {
      "error": "access denied, missing secret account",
      "block": "after_for@14",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "err // access denied, missing secret account"
    },
    "237": {
      "block": "after_if_else@16",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "arg_idx#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "arg_idx#0"
      ]
    },
    "238": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arg_idx#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "arg_idx#0",
        "1"
      ]
    },
    "239": {
      "op": "+",
      "defined_out": [
        "arg_idx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0",
        "tmp%9#0"
      ]
    },
    "240": {
      "op": "bury 1",
      "defined_out": [
        "arg_idx#0"
      ],
      "stack_out": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ]
    },
    "242": {
      "op": "b while_top@1"
    },
    "245": {
      "error": "unreachable",
      "block": "after_if_else@6",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "err // unreachable"
    },
    "246": {
      "error": "access denied, missing secret argument",
      "block": "after_while@17",
      "stack_in": [
        "account_index#0",
        "secret_index#0",
        "tmp%5#0",
        "arg_idx#0"
      ],
      "op": "err // access denied, missing secret argument"
    },
    "247": {
      "subroutine": "test_cases.loop_else.loop_else.test_empty_loop",
      "params": {
        "count#0": "uint64"
      },
      "block": "test_empty_loop",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "250": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "251": {
      "op": "b test_empty_loop_block@0"
    },
    "254": {
      "block": "test_empty_loop_block@0",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "count#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "count#0 (copy)"
      ]
    },
    "256": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "count#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "count#0 (copy)",
        "0"
      ]
    },
    "257": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0"
      ]
    },
    "258": {
      "op": "assert",
      "stack_out": [
        "i#0"
      ]
    },
    "259": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "260": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "1"
      ]
    },
    "261": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "262": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#0",
        "result#0",
        "0"
      ]
    },
    "263": {
      "op": "frame_dig -1",
      "stack_out": [
        "i#0",
        "result#0",
        "0",
        "count#0 (copy)"
      ]
    },
    "265": {
      "op": "<",
      "defined_out": [
        "should_loop%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "should_loop%0#0"
      ]
    },
    "266": {
      "op": "bz test_empty_loop_after_for@7",
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "269": {
      "op": "b test_empty_loop_for_header@1"
    },
    "272": {
      "block": "test_empty_loop_for_header@1",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "count#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "count#0 (copy)"
      ]
    },
    "274": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "count#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "count#0 (copy)",
        "0"
      ]
    },
    "275": {
      "op": "-",
      "defined_out": [
        "range_length%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "range_length%0#0"
      ]
    },
    "276": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "range_length%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "range_length%0#0",
        "1"
      ]
    },
    "277": {
      "op": "-",
      "defined_out": [
        "range_length_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "range_length_minus_one%0#0"
      ]
    },
    "278": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "result#0",
        "range_length_minus_one%0#0",
        "1"
      ]
    },
    "279": {
      "op": "/",
      "defined_out": [
        "iteration_count_minus_one%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "iteration_count_minus_one%0#0"
      ]
    },
    "280": {
      "op": "intc_0 // 1",
      "stack_out": [
        "i#0",
        "result#0",
        "iteration_count_minus_one%0#0",
        "1"
      ]
    },
    "281": {
      "op": "*",
      "defined_out": [
        "range_delta%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "range_delta%0#0"
      ]
    },
    "282": {
      "op": "intc_1 // 0",
      "stack_out": [
        "i#0",
        "result#0",
        "range_delta%0#0",
        "0"
      ]
    },
    "283": {
      "op": "+",
      "defined_out": [
        "max_range_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "max_range_item%0#0"
      ]
    },
    "284": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "286": {
      "op": "b test_empty_loop_for_body@2"
    },
    "289": {
      "block": "test_empty_loop_for_body@2",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "i#0"
      ]
    },
    "291": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "i#0",
        "0"
      ]
    },
    "292": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "tmp%1#0"
      ]
    },
    "293": {
      "op": "bz test_empty_loop_after_if_else@4",
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "296": {
      "op": "b test_empty_loop_if_body@3"
    },
    "299": {
      "block": "test_empty_loop_if_body@3",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "b test_empty_loop_after_loop_L43"
    },
    "302": {
      "block": "test_empty_loop_after_loop_L43",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "result#0"
      ]
    },
    "304": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "result#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "result#0",
        "1"
      ]
    },
    "305": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "tmp%3#0"
      ]
    },
    "306": {
      "op": "assert",
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "307": {
      "retsub": true,
      "op": "retsub"
    },
    "308": {
      "block": "test_empty_loop_after_if_else@4",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "b test_empty_loop_for_footer@5"
    },
    "311": {
      "block": "test_empty_loop_for_footer@5",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "0"
      ]
    },
    "312": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "0",
        "i#0"
      ]
    },
    "314": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "continue_looping%0#0"
      ]
    },
    "315": {
      "op": "bz test_empty_loop_after_for@7",
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "318": {
      "op": "b test_empty_loop_for_increment@6"
    },
    "321": {
      "block": "test_empty_loop_for_increment@6",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "i#0"
      ]
    },
    "323": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "i#0",
        "1"
      ]
    },
    "324": {
      "op": "-",
      "stack_out": [
        "i#0",
        "result#0",
        "i#0"
      ]
    },
    "325": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "327": {
      "op": "b test_empty_loop_for_body@2"
    },
    "330": {
      "block": "test_empty_loop_after_for@7",
      "stack_in": [
        "i#0",
        "result#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "0"
      ]
    },
    "331": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "0",
        "1"
      ]
    },
    "332": {
      "op": "+",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "result#0",
        "tmp%2#0"
      ]
    },
    "333": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "result#0"
      ]
    },
    "335": {
      "op": "b test_empty_loop_after_loop_L43"
    }
  }
}