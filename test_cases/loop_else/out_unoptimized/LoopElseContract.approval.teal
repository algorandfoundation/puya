#pragma version 10

test_cases.loop_else.loop_else.LoopElseContract.approval_program:
    byte ""
    dupn 3
    // loop_else/loop_else.py:7
    // arg_idx = UInt64(0)
    int 0

main_while_top@1:
    // loop_else/loop_else.py:8
    // while arg_idx < Txn.num_app_args:
    txn NumAppArgs
    dig 1
    uncover 1
    <
    bz main_after_while@17
    // loop_else/loop_else.py:9
    // for i in urange(10):
    int 1
    assert // Step cannot be zero
    int 0
    int 10
    <
    bz main_after_for@7
    int 0
    // loop_else/loop_else.py:10
    // if i == 0:
    int 0
    ==
    bz main_after_if_else@6
    // loop_else/loop_else.py:11
    // break
    b main_after_for@7

main_after_if_else@6:
    // loop_else/loop_else.py:12
    // assert False, "unreachable"
    err // unreachable

main_after_for@7:
    // loop_else/loop_else.py:13
    // if Txn.application_args(arg_idx) == b"while_secret":
    dup
    txnas ApplicationArgs
    byte 0x7768696c655f736563726574
    ==
    bz main_after_if_else@16
    // loop_else/loop_else.py:14
    // secret_index = arg_idx
    dup
    bury 3
    // loop_else/loop_else.py:15
    // for account_index in urange(Txn.num_accounts):
    txn NumAccounts
    bury 2
    int 1
    assert // Step cannot be zero
    int 0
    bury 4

main_for_header@9:
    // loop_else/loop_else.py:15
    // for account_index in urange(Txn.num_accounts):
    dig 3
    dig 2
    <
    bz main_after_for@14
    dig 3
    dup
    bury 6
    // loop_else/loop_else.py:16
    // account = Txn.accounts(account_index)
    txnas Accounts
    // loop_else/loop_else.py:17
    // if account == Global.zero_address:
    global ZeroAddress
    ==
    bz main_after_if_else@12
    // loop_else/loop_else.py:18
    // break
    b main_block@15

main_after_if_else@12:
    // loop_else/loop_else.py:15
    // for account_index in urange(Txn.num_accounts):
    dig 3
    int 1
    +
    bury 4
    b main_for_header@9

main_after_for@14:
    // loop_else/loop_else.py:20
    // assert False, "access denied, missing secret account"
    err // access denied, missing secret account

main_block@15:
    // loop_else/loop_else.py:21
    // break
    b main_block@18

main_after_if_else@16:
    // loop_else/loop_else.py:22
    // arg_idx += 1
    dup
    int 1
    +
    bury 1
    b main_while_top@1

main_after_while@17:
    // loop_else/loop_else.py:24
    // assert False, "access denied, missing secret argument"
    err // access denied, missing secret argument

main_block@18:
    // loop_else/loop_else.py:26
    // "found secret argument at idx=",
    byte "found secret argument at idx="
    // loop_else/loop_else.py:25-30
    // log(
    //     "found secret argument at idx=",
    //     op.itob(secret_index + 48)[-1],
    //     " and secret account at idx=",
    //     op.itob(account_index + 48)[-1],
    // )
    byte ""
    // loop_else/loop_else.py:27
    // op.itob(secret_index + 48)[-1],
    concat
    dig 3
    dup
    int 48
    +
    itob
    len
    int 1
    -
    uncover 1
    int 48
    +
    itob
    dig 1
    int 1
    +
    uncover 1
    uncover 2
    uncover 2
    substring3
    concat
    // loop_else/loop_else.py:25-30
    // log(
    //     "found secret argument at idx=",
    //     op.itob(secret_index + 48)[-1],
    //     " and secret account at idx=",
    //     op.itob(account_index + 48)[-1],
    // )
    byte ""
    // loop_else/loop_else.py:28
    // " and secret account at idx=",
    concat
    byte " and secret account at idx="
    concat
    // loop_else/loop_else.py:25-30
    // log(
    //     "found secret argument at idx=",
    //     op.itob(secret_index + 48)[-1],
    //     " and secret account at idx=",
    //     op.itob(account_index + 48)[-1],
    // )
    byte ""
    // loop_else/loop_else.py:29
    // op.itob(account_index + 48)[-1],
    concat
    dig 5
    dup
    int 48
    +
    itob
    len
    int 1
    -
    uncover 1
    int 48
    +
    itob
    dig 1
    int 1
    +
    uncover 1
    uncover 2
    uncover 2
    substring3
    concat
    // loop_else/loop_else.py:25-30
    // log(
    //     "found secret argument at idx=",
    //     op.itob(secret_index + 48)[-1],
    //     " and secret account at idx=",
    //     op.itob(account_index + 48)[-1],
    // )
    log
    // loop_else/loop_else.py:31
    // return True
    int 1
    return
