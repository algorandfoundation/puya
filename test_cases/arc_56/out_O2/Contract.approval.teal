#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1 2 8 TMPL_AVM_UINT64
    bytecblock 0x 0x151f7c75 TMPL_ARC4_UINT8 TMPL_AVM_STRING TMPL_STRUCT
    intc_0 // 0
    dupn 5
    bytec_0 // ""
    dupn 9
    txn NumAppArgs
    bz main_bare_routing@18
    pushbytes 0x4c5c61ba // method "create()void"
    txna ApplicationArgs 0
    match main_create_route@5
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x97e8e4a7 0x76c4de11 0xc1ca7709 0x6de762c2 0x59fc5282 0x9d9eecb0 0x5e8eef9a // method "struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64", method "struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)", method "emits_error((uint64,string,(byte[],uint8)))void", method "emitter()void", method "conditional_emit(bool)void", method "template_value()((byte[],uint8),uint64,string,uint8)", method "with_constant_defaults(uint64,uint64,byte[],(uint64,uint64),(uint64,string),string[2],string[],uint64,uint64)void"
    txna ApplicationArgs 0
    match main_struct_arg_route@8 main_struct_return_route@9 main_emits_error_route@10 main_emitter_route@11 main_conditional_emit_route@12 main_template_value_route@13 main_with_constant_defaults_route@14

main_after_if_else@22:
    err

main_with_constant_defaults_route@14:
    txna ApplicationArgs 1
    dup
    bury 17
    len
    intc_3 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    txna ApplicationArgs 2
    dup
    len
    intc_3 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    bury 9
    txna ApplicationArgs 3
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    dig 1
    len
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
    extract 2 0
    bury 14
    txna ApplicationArgs 4
    dup
    bury 14
    len
    pushint 16 // 16
    ==
    assert // invalid number of bytes for test_cases.arc_56.contract.EventOnly
    txna ApplicationArgs 5
    dup
    intc_3 // 8
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 10 // 10
    ==
    assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]))
    dig 1
    len
    dig 2
    uncover 2
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 12 // 12
    +
    uncover 2
    ==
    assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.dynamic_array<arc4.uint8>>
    swap
    intc_0 // 0
    extract_uint64
    bury 9
    extract 2 0
    bury 12
    txna ApplicationArgs 6
    bury 11
    pushint 4 // 4
    bury 3
    intc_0 // 0
    bury 5

main_for_header@28:
    dig 4
    intc_2 // 2
    <
    bz main_after_for@30
    dig 4
    dup
    intc_2 // 2
    *
    dig 12
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    dig 6
    dup
    cover 4
    ==
    assert // invalid tail pointer for (len+utf8[])[2]
    dup2
    extract_uint16
    intc_2 // 2
    +
    extract3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    +
    bury 4
    intc_1 // 1
    +
    bury 5
    b main_for_header@28

main_after_for@30:
    dig 10
    len
    dig 3
    ==
    assert // invalid number of bytes for arc4.static_array<arc4.dynamic_array<arc4.uint8>, 2>
    txna ApplicationArgs 7
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    dup
    bury 12
    intc_2 // 2
    *
    bury 3
    dup
    len
    bury 2
    extract 2 0
    bury 15
    intc_0 // 0
    bury 4

main_for_header@31:
    dig 3
    dig 10
    <
    bz main_after_for@33
    dig 3
    dup
    intc_2 // 2
    *
    dig 16
    dup
    uncover 2
    extract_uint16 // on error: invalid array encoding
    dup
    dig 5
    dup
    cover 4
    ==
    assert // invalid tail pointer for (len+(len+utf8[])[])
    dup2
    extract_uint16
    intc_2 // 2
    +
    extract3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    intc_2 // 2
    +
    +
    bury 3
    intc_1 // 1
    +
    bury 4
    b main_for_header@31

main_after_for@33:
    dig 1
    intc_2 // 2
    +
    dig 1
    ==
    assert // invalid number of bytes for arc4.dynamic_array<arc4.dynamic_array<arc4.uint8>>
    txna ApplicationArgs 8
    dup
    len
    intc_3 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    bury 7
    txna ApplicationArgs 9
    dup
    len
    intc_3 // 8
    ==
    assert // invalid number of bytes for arc4.uint64
    btoi
    bury 6
    dig 15
    bytec_0 // 0x
    b!=
    assert
    dig 8
    assert
    dig 13
    len
    assert
    dig 12
    extract 0 8
    bytec_0 // 0x
    b!=
    bnz main_bool_true@35
    dig 12
    extract 8 8
    bytec_0 // 0x
    b!=
    bz main_bool_false@36

main_bool_true@35:
    intc_1 // 1

main_bool_merge@37:
    assert
    dig 7
    bnz main_bool_true@39
    dig 11
    len
    bz main_bool_false@40

main_bool_true@39:
    intc_1 // 1

main_bool_merge@41:
    assert
    dig 10
    dup
    intc_0 // 0
    extract_uint16
    dup2
    extract_uint16
    intc_2 // 2
    +
    extract3
    pushbytes 0x00026869
    ==
    assert
    dig 9
    intc_2 // 2
    ==
    assert
    dig 6
    pushint 42 // 42
    ==
    assert
    dig 5
    pushint 1234 // 1234
    ==
    return

main_bool_false@40:
    intc_0 // 0
    b main_bool_merge@41

main_bool_false@36:
    intc_0 // 0
    b main_bool_merge@37

main_template_value_route@13:
    bytec_2 // TMPL_ARC4_UINT8
    bytec_3 // TMPL_AVM_STRING
    intc 4 // TMPL_AVM_UINT64
    bytec 4 // TMPL_STRUCT
    dup
    len
    pushint 13 // 13
    +
    uncover 2
    itob
    pushbytes 0x000d
    swap
    concat
    dig 3
    len
    itob
    extract 6 2
    uncover 4
    concat
    uncover 2
    itob
    extract 6 2
    uncover 2
    swap
    concat
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

main_conditional_emit_route@12:
    txna ApplicationArgs 1
    dup
    len
    intc_1 // 1
    ==
    assert // invalid number of bytes for arc4.bool
    intc_0 // 0
    getbit
    bz main_after_if_else@47
    pushbytes 0x11c547ba000000000000002a000000000000002b001200032a000668656c6c6f33
    log

main_after_if_else@47:
    intc_1 // 1
    return

main_emitter_route@11:
    pushbytes 0xd93f374e00032a000668656c6c6f31
    log
    pushbytes 0x1e72af4e0004000b000568656c6c6f00032a000668656c6c6f32
    log
    intc_1 // 1
    return

main_emits_error_route@10:
    txna ApplicationArgs 1
    dup
    intc_3 // 8
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 12 // 12
    ==
    assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]),((len+uint8[]),uint8))
    dig 1
    pushint 10 // 10
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 14 // 14
    +
    dup2
    ==
    assert // invalid tail pointer at index 2 of (uint64,(len+utf8[]),((len+uint8[]),uint8))
    dig 2
    len
    dig 3
    uncover 3
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 3 // 3
    ==
    assert // invalid tail pointer at index 0 of ((len+uint8[]),uint8)
    dig 1
    len
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 5 // 5
    +
    uncover 2
    +
    ==
    assert // invalid number of bytes for test_cases.arc_56.contract.TopLevelStruct
    extract 0 8
    pushbytes 0x00
    ==
    assert // this will error
    intc_1 // 1
    return

main_struct_return_route@9:
    txna ApplicationArgs 1
    dup
    intc_3 // 8
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 12 // 12
    ==
    assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]),((len+uint8[]),uint8))
    dig 1
    pushint 10 // 10
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 14 // 14
    +
    dup2
    ==
    assert // invalid tail pointer at index 2 of (uint64,(len+utf8[]),((len+uint8[]),uint8))
    dig 2
    len
    uncover 3
    uncover 3
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 3 // 3
    ==
    assert // invalid tail pointer at index 0 of ((len+uint8[]),uint8)
    dig 1
    len
    dig 2
    cover 2
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 5 // 5
    +
    uncover 3
    +
    uncover 2
    ==
    assert // invalid number of bytes for test_cases.arc_56.contract.TopLevelStruct
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

main_struct_arg_route@8:
    txna ApplicationArgs 1
    dup
    intc_3 // 8
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 12 // 12
    ==
    assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]),((len+uint8[]),uint8))
    dig 1
    pushint 10 // 10
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 14 // 14
    +
    dup2
    ==
    assert // invalid tail pointer at index 2 of (uint64,(len+utf8[]),((len+uint8[]),uint8))
    dig 2
    len
    uncover 3
    uncover 3
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 3 // 3
    ==
    assert // invalid tail pointer at index 0 of ((len+uint8[]),uint8)
    dig 1
    len
    dig 2
    cover 2
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 5 // 5
    +
    uncover 3
    +
    uncover 2
    ==
    assert // invalid number of bytes for test_cases.arc_56.contract.TopLevelStruct
    txna ApplicationArgs 2
    dup
    intc_0 // 0
    extract_uint16 // on error: invalid tuple encoding
    dup
    pushint 3 // 3
    ==
    assert // invalid tail pointer at index 0 of ((len+uint8[]),uint8)
    dig 1
    len
    dig 2
    uncover 2
    dig 2
    substring3
    intc_0 // 0
    extract_uint16 // on error: invalid array length header
    pushint 5 // 5
    +
    ==
    assert // invalid number of bytes for test_cases.arc_56.contract.SharedStruct
    ==
    assert // this might error
    pushbytes 0x151f7c75000000000000002a
    log
    intc_1 // 1
    return

main_create_route@5:
    intc_1 // 1
    txn OnCompletion
    shl
    pushint 3 // 3
    &
    assert // OnCompletion must be one of NoOp, OptIn
    intc_1 // 1
    return

main_bare_routing@18:
    txn OnCompletion
    switch main_after_if_else@47 main_after_if_else@47 main_after_if_else@22 main_after_if_else@22 main_after_if_else@22 main_transient@20
    err

main_transient@20:
    txn ApplicationID
    !
    assert // can only call when creating
    intc_1 // 1
    return
