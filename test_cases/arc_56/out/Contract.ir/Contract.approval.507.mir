// Op                                                                                    Stack (out)
// test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // arc_56/contract.py:81
        // @arc4.abimethod(create="allow", allow_actions=["NoOp", "OptIn"])
        int 1                                                                            lifted%return#0
        f-store lifted%return#0                                                          (𝕗) lifted%return#0 |
        // arc_56/contract.py:54
        // class Contract(ARC4Contract):
        txn NumAppArgs                                                                   (𝕗) lifted%return#0 | tmp%0#2
        bz main_bare_routing@15 ; b main_abi_routing@4                                   (𝕗) lifted%return#0 |

    main_abi_routing@4:                                                                  (𝕗) lifted%return#0 |
        // arc_56/contract.py:54
        // class Contract(ARC4Contract):
        txna ApplicationArgs 0                                                           (𝕗) lifted%return#0 | tmp%2#0
        method create()void                                                              (𝕗) lifted%return#0 | tmp%2#0,Method(create()void)
        l-load tmp%2#0 1                                                                 (𝕗) lifted%return#0 | Method(create()void),tmp%2#0
        match main_create_route@5 ; b main_switch_case_next@6                            (𝕗) lifted%return#0 |

    main_create_route@5:                                                                 (𝕗) lifted%return#0 |
        // arc_56/contract.py:81
        // @arc4.abimethod(create="allow", allow_actions=["NoOp", "OptIn"])
        txn OnCompletion                                                                 (𝕗) lifted%return#0 | tmp%3#0
        int 1                                                                            (𝕗) lifted%return#0 | tmp%3#0,1
        l-load tmp%3#0 1                                                                 (𝕗) lifted%return#0 | 1,tmp%3#0
        shl                                                                              (𝕗) lifted%return#0 | tmp%4#0
        int 3                                                                            (𝕗) lifted%return#0 | tmp%4#0,3
        &                                                                                (𝕗) lifted%return#0 | tmp%5#0
        assert // OnCompletion must be one of NoOp, OptIn                                (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                           (𝕗) lifted%return#0 | lifted%return#0
        return                                                                           (𝕗) lifted%return#0 |

    main_switch_case_next@6:                                                             (𝕗) lifted%return#0 |
        // arc_56/contract.py:54
        // class Contract(ARC4Contract):
        txn OnCompletion                                                                 (𝕗) lifted%return#0 | tmp%6#0
        !                                                                                (𝕗) lifted%return#0 | tmp%7#0
        assert // OnCompletion is not NoOp                                               (𝕗) lifted%return#0 |
        txn ApplicationID                                                                (𝕗) lifted%return#0 | tmp%8#0
        assert                                                                           (𝕗) lifted%return#0 |
        txna ApplicationArgs 0                                                           (𝕗) lifted%return#0 | tmp%9#0
        method struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64           (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64)
        method struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)               (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8))
        method emits_error((uint64,string,(byte[],uint8)))void                           (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void)
        method emitter()void                                                             (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void)
        method conditional_emit(bool)void                                                (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void)
        method template_value()((byte[],uint8),uint64,string,uint8)                      (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void),Method(template_value()((byte[],uint8),uint64,string,uint8))
        method with_constant_defaults(uint64,uint64,byte[],(uint64,uint64),(uint64,string),string[2],string[],uint64,uint64)void (𝕗) lifted%return#0 | tmp%9#0,Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void),Method(template_value()((byte[],uint8),uint64,string,uint8)),Method(with_constant_defaults(uint64,uint64,byte[],(uint64,uint64),(uint64,string),string[2],string[],uint64,uint64)void)
        l-load tmp%9#0 7                                                                 (𝕗) lifted%return#0 | Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void),Method(template_value()((byte[],uint8),uint64,string,uint8)),Method(with_constant_defaults(uint64,uint64,byte[],(uint64,uint64),(uint64,string),string[2],string[],uint64,uint64)void),tmp%9#0
        match main_struct_arg_route@8 main_struct_return_route@9 main_emits_error_route@10 main_emitter_route@11 main_conditional_emit_route@12 main_template_value_route@13 main_with_constant_defaults_route@14 ; b main_after_if_else@18 (𝕗) lifted%return#0 | 

    main_struct_arg_route@8:                                                             (𝕗) lifted%return#0 |
        // arc_56/contract.py:89
        // @arc4.abimethod()
        callsub struct_arg                                                               (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_struct_return_route@9:                                                          (𝕗) lifted%return#0 |
        // arc_56/contract.py:95
        // @arc4.abimethod(readonly=True)
        callsub struct_return                                                            (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_emits_error_route@10:                                                           (𝕗) lifted%return#0 |
        // arc_56/contract.py:100
        // @arc4.abimethod(name="emits_error", readonly=True)
        callsub errors                                                                   (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_emitter_route@11:                                                               (𝕗) lifted%return#0 |
        // arc_56/contract.py:104
        // @arc4.abimethod()
        callsub emitter                                                                  (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_conditional_emit_route@12:                                                      (𝕗) lifted%return#0 |
        // arc_56/contract.py:114
        // @arc4.abimethod()
        callsub conditional_emit                                                         (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_template_value_route@13:                                                        (𝕗) lifted%return#0 |
        // arc_56/contract.py:123
        // @arc4.abimethod()
        callsub template_value                                                           (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_with_constant_defaults_route@14:                                                (𝕗) lifted%return#0 |
        // arc_56/contract.py:132-144
        // @arc4.abimethod(
        //     default_args={
        //         "a": arc4.UInt64(123),
        //         "c": Bytes(b"123"),
        //         "b": UInt64(234),
        //         "d": EventOnly(x=arc4.UInt64(1), y=arc4.UInt64(2)),
        //         "e": (UInt64(42), String("on the edge")),
        //         "f": arc4.StaticArray(arc4.String("hi"), arc4.String("there!")),
        //         "g": arc4.DynamicArray(arc4.String("one"), arc4.String("two")),
        //         "h": constant_method(),
        //         "i": echo_number(UInt64(1234)),
        //     }
        // )
        callsub with_constant_defaults                                                   (𝕗) lifted%return#0 |
        b main_after_if_else@18                                                          (𝕗) lifted%return#0 |

    main_bare_routing@15:                                                                (𝕗) lifted%return#0 |
        // arc_56/contract.py:54
        // class Contract(ARC4Contract):
        txn OnCompletion                                                                 (𝕗) lifted%return#0 | tmp%10#0
        switch main_bare_create@16 main_bare_create@16 main_after_if_else@18 main_after_if_else@18 main_after_if_else@18 main_transient@17 ; b main_after_if_else@18 (𝕗) lifted%return#0 | 

    main_bare_create@16:                                                                 (𝕗) lifted%return#0 |
        // arc_56/contract.py:77
        // @arc4.baremethod(create="allow", allow_actions=["NoOp", "OptIn"])
        f-load lifted%return#0                                                           (𝕗) lifted%return#0 | lifted%return#0
        return                                                                           (𝕗) lifted%return#0 |

    main_transient@17:                                                                   (𝕗) lifted%return#0 |
        // arc_56/contract.py:85
        // @arc4.baremethod(create="require", allow_actions=["DeleteApplication"])
        txn ApplicationID                                                                (𝕗) lifted%return#0 | tmp%11#0
        !                                                                                (𝕗) lifted%return#0 | tmp%12#0
        assert // can only call when creating                                            (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                           (𝕗) lifted%return#0 | lifted%return#0
        return                                                                           (𝕗) lifted%return#0 |

    main_after_if_else@18:                                                               (𝕗) lifted%return#0 |
        // arc_56/contract.py:54
        // class Contract(ARC4Contract):
        err                                                                              (𝕗) lifted%return#0 |


// test_cases.arc_56.contract.Contract.struct_arg[routing]() -> void:
subroutine struct_arg:
    struct_arg_block@0:
        // arc_56/contract.py:89
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                           arg#0
        txna ApplicationArgs 2                                                           arg#0,shared#0
        // arc_56/contract.py:92
        // assert arg.shared == shared, "this might error"
        l-load-copy arg#0 1                                                              arg#0,shared#0,arg#0 (copy)
        int 10                                                                           arg#0,shared#0,arg#0 (copy),10
        extract_uint16                                                                   arg#0,shared#0,aggregate%extract_uint16%0#0
        l-load-copy arg#0 2                                                              arg#0,shared#0,aggregate%extract_uint16%0#0,arg#0 (copy)
        len                                                                              arg#0,shared#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        l-load arg#0 3                                                                   shared#0,aggregate%extract_uint16%0#0,aggregate%len%0#0,arg#0
        l-load aggregate%extract_uint16%0#0 2                                            shared#0,aggregate%len%0#0,arg#0,aggregate%extract_uint16%0#0
        l-load aggregate%len%0#0 2                                                       shared#0,arg#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                       shared#0,aggregate%substring3%0#0
        l-load shared#0 1                                                                aggregate%substring3%0#0,shared#0
        ==                                                                               tmp%0#1
        assert // this might error
        // arc_56/contract.py:89
        // @arc4.abimethod()
        byte 0x151f7c75000000000000002a                                                  0x151f7c75000000000000002a
        log
        int 1                                                                            1
        return


// test_cases.arc_56.contract.Contract.struct_return[routing]() -> void:
subroutine struct_return:
    struct_return_block@0:
        // arc_56/contract.py:95
        // @arc4.abimethod(readonly=True)
        txna ApplicationArgs 1                                                           arg#0
        // arc_56/contract.py:97
        // assert arg.shared == echo(arg.shared), "this won't error"
        l-load-copy arg#0 0                                                              arg#0,arg#0 (copy)
        int 10                                                                           arg#0,arg#0 (copy),10
        extract_uint16                                                                   arg#0,aggregate%extract_uint16%0#0
        l-load-copy arg#0 1                                                              arg#0,aggregate%extract_uint16%0#0,arg#0 (copy)
        len                                                                              arg#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        l-load arg#0 2                                                                   aggregate%extract_uint16%0#0,aggregate%len%0#0,arg#0
        l-load aggregate%extract_uint16%0#0 2                                            aggregate%len%0#0,arg#0,aggregate%extract_uint16%0#0
        l-load aggregate%len%0#0 2                                                       arg#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                       s#0
        // arc_56/contract.py:95
        // @arc4.abimethod(readonly=True)
        byte 0x151f7c75                                                                  s#0,0x151f7c75
        l-load s#0 1                                                                     0x151f7c75,s#0
        concat                                                                           tmp%1#0
        log
        int 1                                                                            1
        return


// test_cases.arc_56.contract.Contract.errors[routing]() -> void:
subroutine errors:
    errors_block@0:
        // arc_56/contract.py:100
        // @arc4.abimethod(name="emits_error", readonly=True)
        txna ApplicationArgs 1                                                           arg#0
        // arc_56/contract.py:102
        // assert arg.a.bytes == arc4.UInt8(0).bytes, "this will error"
        extract 0 8                                                                      aggregate%extract%0#0
        byte 0x00                                                                        aggregate%extract%0#0,0x00
        ==                                                                               tmp%0#0
        assert // this will error
        // arc_56/contract.py:100
        // @arc4.abimethod(name="emits_error", readonly=True)
        int 1                                                                            1
        return


// test_cases.arc_56.contract.Contract.emitter[routing]() -> void:
subroutine emitter:
    emitter_block@0:
        // arc_56/contract.py:106
        // arc4.emit(SharedStruct(foo=arc4.DynamicBytes(b"hello1"), bar=arc4.UInt8(42)))
        byte 0xd93f374e00032a000668656c6c6f31                                            0xd93f374e00032a000668656c6c6f31
        log
        // arc_56/contract.py:108-112
        // arc4.emit(
        //     "Anonymous",
        //     String("hello"),
        //     SharedStruct(foo=arc4.DynamicBytes(b"hello2"), bar=arc4.UInt8(42)),
        // )
        byte 0x1e72af4e0004000b000568656c6c6f00032a000668656c6c6f32                      0x1e72af4e0004000b000568656c6c6f00032a000668656c6c6f32
        log
        // arc_56/contract.py:104
        // @arc4.abimethod()
        int 1                                                                            1
        return


// test_cases.arc_56.contract.Contract.conditional_emit[routing]() -> void:
subroutine conditional_emit:
    conditional_emit_block@0:
        // arc_56/contract.py:114
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                           reinterpret_Encoded(bool8)%0#0
        int 0                                                                            reinterpret_Encoded(bool8)%0#0,0
        getbit                                                                           should_emit#0
        // arc_56/contract.py:116
        // if should_emit:
        bz conditional_emit_after_if_else@3 ; b conditional_emit_if_body@2

    conditional_emit_if_body@2:
        // arc_56/contract.py:117-121
        // arc4.emit(
        //     "Anonymous2",
        //     EventOnly(arc4.UInt64(42), arc4.UInt64(43)),
        //     SharedStruct(foo=arc4.DynamicBytes(b"hello3"), bar=arc4.UInt8(42)),
        // )
        byte 0x11c547ba000000000000002a000000000000002b001200032a000668656c6c6f33        0x11c547ba000000000000002a000000000000002b001200032a000668656c6c6f33
        log
        b conditional_emit_after_if_else@3

    conditional_emit_after_if_else@3:
        // arc_56/contract.py:114
        // @arc4.abimethod()
        int 1                                                                            1
        return


// test_cases.arc_56.contract.Contract.template_value[routing]() -> void:
subroutine template_value:
    template_value_block@0:
        // arc_56/contract.py:126
        // TemplateVar[SharedStruct]("STRUCT"),
        byte TMPL_STRUCT                                                                 tmp%0#0
        // arc_56/contract.py:127
        // TemplateVar[UInt64]("AVM_UINT64"),
        int TMPL_AVM_UINT64                                                              tmp%0#0,tmp%1#0
        l-store tmp%1#0 1                                                                tmp%1#0,tmp%0#0
        // arc_56/contract.py:128
        // TemplateVar[String]("AVM_STRING"),
        byte TMPL_AVM_STRING                                                             tmp%1#0,tmp%0#0,tmp%2#0
        l-store tmp%2#0 2                                                                tmp%2#0,tmp%1#0,tmp%0#0
        // arc_56/contract.py:129
        // TemplateVar[arc4.UInt8]("ARC4_UINT8"),
        byte TMPL_ARC4_UINT8                                                             tmp%2#0,tmp%1#0,tmp%0#0,tmp%3#0
        l-store tmp%3#0 3                                                                tmp%3#0,tmp%2#0,tmp%1#0,tmp%0#0
        // arc_56/contract.py:123
        // @arc4.abimethod()
        l-load-copy tmp%0#0 0                                                            tmp%3#0,tmp%2#0,tmp%1#0,tmp%0#0,tmp%0#0 (copy)
        len                                                                              tmp%3#0,tmp%2#0,tmp%1#0,tmp%0#0,aggregate%data_length%0#0
        int 13                                                                           tmp%3#0,tmp%2#0,tmp%1#0,tmp%0#0,aggregate%data_length%0#0,13
        l-load aggregate%data_length%0#0 1                                               tmp%3#0,tmp%2#0,tmp%1#0,tmp%0#0,13,aggregate%data_length%0#0
        +                                                                                tmp%3#0,tmp%2#0,tmp%1#0,tmp%0#0,aggregate%current_tail_offset%0#0
        l-load tmp%1#0 2                                                                 tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,tmp%1#0
        itob                                                                             tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%val_as_bytes%0#0
        byte 0x000d                                                                      tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%val_as_bytes%0#0,0x000d
        l-load aggregate%val_as_bytes%0#0 1                                              tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,0x000d,aggregate%val_as_bytes%0#0
        concat                                                                           tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0
        l-load-copy tmp%2#0 3                                                            tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0,tmp%2#0 (copy)
        len                                                                              tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0,aggregate%length%0#0
        itob                                                                             tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0,aggregate%as_bytes%1#0
        extract 6 2                                                                      tmp%3#0,tmp%2#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0,aggregate%length_uint16%0#0
        l-load tmp%2#0 4                                                                 tmp%3#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0,aggregate%length_uint16%0#0,tmp%2#0
        concat                                                                           tmp%3#0,tmp%0#0,aggregate%current_tail_offset%0#0,aggregate%head%1#0,aggregate%encoded_value%0#0
        l-load aggregate%current_tail_offset%0#0 2                                       tmp%3#0,tmp%0#0,aggregate%head%1#0,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0
        itob                                                                             tmp%3#0,tmp%0#0,aggregate%head%1#0,aggregate%encoded_value%0#0,aggregate%as_bytes%2#0
        extract 6 2                                                                      tmp%3#0,tmp%0#0,aggregate%head%1#0,aggregate%encoded_value%0#0,aggregate%offset_as_uint16%1#0
        l-load aggregate%head%1#0 2                                                      tmp%3#0,tmp%0#0,aggregate%encoded_value%0#0,aggregate%offset_as_uint16%1#0,aggregate%head%1#0
        l-load aggregate%offset_as_uint16%1#0 1                                          tmp%3#0,tmp%0#0,aggregate%encoded_value%0#0,aggregate%head%1#0,aggregate%offset_as_uint16%1#0
        concat                                                                           tmp%3#0,tmp%0#0,aggregate%encoded_value%0#0,aggregate%head%2#0
        l-load tmp%3#0 3                                                                 tmp%0#0,aggregate%encoded_value%0#0,aggregate%head%2#0,tmp%3#0
        concat                                                                           tmp%0#0,aggregate%encoded_value%0#0,aggregate%head%3#0
        l-load tmp%0#0 2                                                                 aggregate%encoded_value%0#0,aggregate%head%3#0,tmp%0#0
        concat                                                                           aggregate%encoded_value%0#0,aggregate%concat%0#0
        l-load aggregate%encoded_value%0#0 1                                             aggregate%concat%0#0,aggregate%encoded_value%0#0
        concat                                                                           aggregate%concat%1#0
        byte 0x151f7c75                                                                  aggregate%concat%1#0,0x151f7c75
        l-load aggregate%concat%1#0 1                                                    0x151f7c75,aggregate%concat%1#0
        concat                                                                           tmp%5#0
        log
        int 1                                                                            1
        return


// test_cases.arc_56.contract.Contract.with_constant_defaults[routing]() -> void:
subroutine with_constant_defaults:
    with_constant_defaults_block@0:
        // arc_56/contract.py:132-144
        // @arc4.abimethod(
        //     default_args={
        //         "a": arc4.UInt64(123),
        //         "c": Bytes(b"123"),
        //         "b": UInt64(234),
        //         "d": EventOnly(x=arc4.UInt64(1), y=arc4.UInt64(2)),
        //         "e": (UInt64(42), String("on the edge")),
        //         "f": arc4.StaticArray(arc4.String("hi"), arc4.String("there!")),
        //         "g": arc4.DynamicArray(arc4.String("one"), arc4.String("two")),
        //         "h": constant_method(),
        //         "i": echo_number(UInt64(1234)),
        //     }
        // )
        txna ApplicationArgs 1                                                           a#0
        txna ApplicationArgs 2                                                           a#0,reinterpret_Encoded(uint64)%1#0
        btoi                                                                             a#0,b#0
        txna ApplicationArgs 3                                                           a#0,b#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                      a#0,b#0,c#0
        txna ApplicationArgs 4                                                           a#0,b#0,c#0,d#0
        l-store-copy d#0 3                                                               d#0,a#0,b#0,c#0,d#0
        f-store d#0                                                                      (𝕗) d#0 | d#0,a#0,b#0,c#0
        txna ApplicationArgs 5                                                           (𝕗) d#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0                       (𝕗) d#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy)
        int 0                                                                            (𝕗) d#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy),0
        extract_uint64                                                                   (𝕗) d#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,e.0#0
        f-store e.0#0                                                                    (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0                       (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy)
        int 8                                                                            (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy),8
        extract_uint16                                                                   (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 1                       (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy)
        len                                                                              (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        l-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0 2                            (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,aggregate%extract_uint16%0#0,aggregate%len%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0
        l-load aggregate%extract_uint16%0#0 2                                            (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,aggregate%len%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0
        l-load aggregate%len%0#0 2                                                       (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                       (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,aggregate%substring3%0#0
        extract 2 0                                                                      (𝕗) d#0,e.0#0 | d#0,a#0,b#0,c#0,e.1#0
        f-store e.1#0                                                                    (𝕗) d#0,e.0#0,e.1#0 | d#0,a#0,b#0,c#0
        txna ApplicationArgs 6                                                           (𝕗) d#0,e.0#0,e.1#0 | d#0,a#0,b#0,c#0,f#0
        f-store f#0                                                                      (𝕗) d#0,e.0#0,e.1#0,f#0 | d#0,a#0,b#0,c#0
        txna ApplicationArgs 7                                                           (𝕗) d#0,e.0#0,e.1#0,f#0 | d#0,a#0,b#0,c#0,g#0
        f-store g#0                                                                      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0 | d#0,a#0,b#0,c#0
        txna ApplicationArgs 8                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64)%2#0
        btoi                                                                             (𝕗) d#0,e.0#0,e.1#0,f#0,g#0 | d#0,a#0,b#0,c#0,h#0
        f-store h#0                                                                      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0 | d#0,a#0,b#0,c#0
        txna ApplicationArgs 9                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0 | d#0,a#0,b#0,c#0,reinterpret_Encoded(uint64)%3#0
        btoi                                                                             (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0 | d#0,a#0,b#0,c#0,i#0
        f-store i#0                                                                      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,a#0,b#0,c#0
        // arc_56/contract.py:157
        // assert a
        l-load a#0 2                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,b#0,c#0,a#0
        byte 0x                                                                          (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,b#0,c#0,a#0,0x
        b!=                                                                              (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,b#0,c#0,tmp%0#1
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,b#0,c#0
        // arc_56/contract.py:158
        // assert b
        l-load b#0 1                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,c#0,b#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,c#0
        // arc_56/contract.py:159
        // assert c
        l-load c#0 0                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,c#0
        len                                                                              (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0,tmp%2#1
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0
        // arc_56/contract.py:160
        // assert d.x or d.y
        l-load d#0 0                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0
        extract 0 8                                                                      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%extract%1#0
        byte 0x                                                                          (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%extract%1#0,0x
        b!=                                                                              (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%4#1
        bz with_constant_defaults_or_contd@2 ; b with_constant_defaults_bool_true@3      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |

    with_constant_defaults_or_contd@2:                                                   (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:160
        // assert d.x or d.y
        f-load d#0                                                                       (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | d#0
        extract 8 8                                                                      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%extract%2#0
        byte 0x                                                                          (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%extract%2#0,0x
        b!=                                                                              (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%5#1
        bz with_constant_defaults_bool_false@4 ; b with_constant_defaults_bool_true@3    (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |

    with_constant_defaults_bool_true@3:                                                  (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        int 1                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | or_result%0#0
        x-store or_result%0#0                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%0#0 |
        b with_constant_defaults_bool_merge@5                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%0#0 |

    with_constant_defaults_bool_false@4:                                                 (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        int 0                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | or_result%0#0
        x-store or_result%0#0                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%0#0 |
        b with_constant_defaults_bool_merge@5                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%0#0 |

    with_constant_defaults_bool_merge@5:                                                 (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%0#0 |
        // arc_56/contract.py:160
        // assert d.x or d.y
        x-load or_result%0#0                                                             (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | or_result%0#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:161
        // assert e[0] or e[1]
        f-load e.0#0                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | e.0#0
        bz with_constant_defaults_or_contd@6 ; b with_constant_defaults_bool_true@7      (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |

    with_constant_defaults_or_contd@6:                                                   (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:161
        // assert e[0] or e[1]
        f-load e.1#0                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | e.1#0
        len                                                                              (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%7#0
        bz with_constant_defaults_bool_false@8 ; b with_constant_defaults_bool_true@7    (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |

    with_constant_defaults_bool_true@7:                                                  (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        int 1                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | or_result%1#0
        x-store or_result%1#0                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%1#0 |
        b with_constant_defaults_bool_merge@9                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%1#0 |

    with_constant_defaults_bool_false@8:                                                 (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        int 0                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | or_result%1#0
        x-store or_result%1#0                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%1#0 |
        b with_constant_defaults_bool_merge@9                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%1#0 |

    with_constant_defaults_bool_merge@9:                                                 (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | (𝕏) or_result%1#0 |
        // arc_56/contract.py:161
        // assert e[0] or e[1]
        x-load or_result%1#0                                                             (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | or_result%1#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:162
        // assert f[0] == "hi"
        f-load f#0                                                                       (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0
        l-store-copy f#0 0                                                               (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,f#0 (copy)
        int 0                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,f#0 (copy),0
        extract_uint16                                                                   (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0
        l-load-copy f#0 1                                                                (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0,f#0 (copy)
        l-load-copy aggregate%item_offset%0#0 1                                          (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0,f#0 (copy),aggregate%item_offset%0#0 (copy)
        extract_uint16                                                                   (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0,aggregate%item_length%0#0
        int 2                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0,aggregate%item_length%0#0,2
        +                                                                                (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0,aggregate%item_head_tail_length%0#0
        l-load f#0 2                                                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%item_offset%0#0,aggregate%item_head_tail_length%0#0,f#0
        l-load aggregate%item_offset%0#0 2                                               (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%item_head_tail_length%0#0,f#0,aggregate%item_offset%0#0
        l-load aggregate%item_head_tail_length%0#0 2                                     (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | f#0,aggregate%item_offset%0#0,aggregate%item_head_tail_length%0#0
        extract3                                                                         (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%item%0#0
        byte 0x00026869                                                                  (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%item%0#0,0x00026869
        ==                                                                               (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%10#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:163
        // assert g.length == 2
        f-load g#0                                                                       (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | g#0
        int 0                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | g#0,0
        extract_uint16                                                                   (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%array_length%0#0
        int 2                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | aggregate%array_length%0#0,2
        ==                                                                               (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%12#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:164
        // assert h == 42
        f-load h#0                                                                       (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | h#0
        int 42                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | h#0,42
        ==                                                                               (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%13#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:165
        // assert i == 1234
        f-load i#0                                                                       (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | i#0
        int 1234                                                                         (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | i#0,1234
        ==                                                                               (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | tmp%14#0
        assert                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |
        // arc_56/contract.py:132-144
        // @arc4.abimethod(
        //     default_args={
        //         "a": arc4.UInt64(123),
        //         "c": Bytes(b"123"),
        //         "b": UInt64(234),
        //         "d": EventOnly(x=arc4.UInt64(1), y=arc4.UInt64(2)),
        //         "e": (UInt64(42), String("on the edge")),
        //         "f": arc4.StaticArray(arc4.String("hi"), arc4.String("there!")),
        //         "g": arc4.DynamicArray(arc4.String("one"), arc4.String("two")),
        //         "h": constant_method(),
        //         "i": echo_number(UInt64(1234)),
        //     }
        // )
        int 1                                                                            (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 | 1
        return                                                                           (𝕗) d#0,e.0#0,e.1#0,f#0,g#0,h#0,i#0 |


