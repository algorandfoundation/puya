{
    "name": "Contract",
    "structs": {
        "EventOnly": [
            {
                "name": "x",
                "type": "uint64"
            },
            {
                "name": "y",
                "type": "uint64"
            }
        ],
        "SharedStruct": [
            {
                "name": "foo",
                "type": "byte[]"
            },
            {
                "name": "bar",
                "type": "uint8"
            }
        ],
        "StateStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            }
        ],
        "TopLevelStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            },
            {
                "name": "shared",
                "type": "SharedStruct"
            }
        ]
    },
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp",
                    "OptIn"
                ],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Method docstring",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "struct_arg",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                },
                {
                    "type": "(byte[],uint8)",
                    "struct": "SharedStruct",
                    "name": "shared"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Method docstring2",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "struct_return",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "(byte[],uint8)",
                "struct": "SharedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emits_error",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emitter",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "SharedStruct",
                    "args": [
                        {
                            "type": "byte[]",
                            "name": "foo"
                        },
                        {
                            "type": "uint8",
                            "name": "bar"
                        }
                    ],
                    "desc": "This struct is shared"
                },
                {
                    "name": "Anonymous",
                    "args": [
                        {
                            "type": "string",
                            "name": "field1"
                        },
                        {
                            "type": "(byte[],uint8)",
                            "name": "field2",
                            "struct": "SharedStruct"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "conditional_emit",
            "args": [
                {
                    "type": "bool",
                    "name": "should_emit"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Anonymous2",
                    "args": [
                        {
                            "type": "(uint64,uint64)",
                            "name": "field1",
                            "struct": "EventOnly"
                        },
                        {
                            "type": "(byte[],uint8)",
                            "name": "field2",
                            "struct": "SharedStruct"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "template_value",
            "args": [],
            "returns": {
                "type": "((byte[],uint8),uint64,string,uint8)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "Contract docstring",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 2
            },
            "local": {
                "ints": 1,
                "bytes": 2
            }
        },
        "keys": {
            "global": {
                "g_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "Z19zdHJ1Y3Q="
                },
                "g_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "Z3U="
                },
                "g_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "Z2E="
                }
            },
            "local": {
                "l_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "bF9zdHJ1Y3Q="
                },
                "l_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "bHU="
                },
                "l_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "bGE="
                }
            },
            "box": {
                "b_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "Yl9zdHJ1Y3Q="
                },
                "b_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "YnU="
                },
                "b_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "YmE="
                },
                "box_ref": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94X3JlZg=="
                },
                "box_ref2": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMBytes",
                    "key": "YnI="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_map_struct": {
                    "keyType": "StateStruct",
                    "valueType": "SharedStruct",
                    "prefix": "Ym94X21hcF9zdHJ1Y3Q="
                },
                "box_map_uint64": {
                    "keyType": "AVMUint64",
                    "valueType": "SharedStruct",
                    "prefix": "Ym11"
                },
                "box_map_address": {
                    "keyType": "address",
                    "valueType": "SharedStruct",
                    "prefix": "Ym1h"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "DeleteApplication",
            "NoOp",
            "OptIn"
        ],
        "call": [
            "NoOp",
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        314
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        96,
                        151,
                        168,
                        180,
                        195,
                        214
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        241
                    ],
                    "errorMessage": "OnCompletion is not one of NoOp, OptIn"
                },
                {
                    "pc": [
                        266
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        99,
                        154,
                        171,
                        183,
                        198,
                        217
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        289
                    ],
                    "errorMessage": "this might error"
                },
                {
                    "pc": [
                        321
                    ],
                    "errorMessage": "this will error"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyB0ZXN0X2Nhc2VzLmFyY181Ni5jb250cmFjdC5Db250cmFjdC5fX2FsZ29weV9lbnRyeXBvaW50X3dpdGhfaW5pdCgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDAgMTAgVE1QTF9BVk1fVUlOVDY0CiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUgVE1QTF9BUkM0X1VJTlQ4IFRNUExfU1RSVUNUIFRNUExfQVZNX1NUUklORwogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjQxCiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDEyCiAgICBwdXNoYnl0ZXNzIDB4NGM1YzYxYmEgMHg5N2U4ZTRhNyAweDc2YzRkZTExIDB4YzFjYTc3MDkgMHg2ZGU3NjJjMiAweDU5ZmM1MjgyIDB4OWQ5ZWVjYjAgLy8gbWV0aG9kICJjcmVhdGUoKXZvaWQiLCBtZXRob2QgInN0cnVjdF9hcmcoKHVpbnQ2NCxzdHJpbmcsKGJ5dGVbXSx1aW50OCkpLChieXRlW10sdWludDgpKXVpbnQ2NCIsIG1ldGhvZCAic3RydWN0X3JldHVybigodWludDY0LHN0cmluZywoYnl0ZVtdLHVpbnQ4KSkpKGJ5dGVbXSx1aW50OCkiLCBtZXRob2QgImVtaXRzX2Vycm9yKCh1aW50NjQsc3RyaW5nLChieXRlW10sdWludDgpKSl2b2lkIiwgbWV0aG9kICJlbWl0dGVyKCl2b2lkIiwgbWV0aG9kICJjb25kaXRpb25hbF9lbWl0KGJvb2wpdm9pZCIsIG1ldGhvZCAidGVtcGxhdGVfdmFsdWUoKSgoYnl0ZVtdLHVpbnQ4KSx1aW50NjQsc3RyaW5nLHVpbnQ4KSIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fY3JlYXRlX3JvdXRlQDUgbWFpbl9zdHJ1Y3RfYXJnX3JvdXRlQDYgbWFpbl9zdHJ1Y3RfcmV0dXJuX3JvdXRlQDcgbWFpbl9lbWl0c19lcnJvcl9yb3V0ZUA4IG1haW5fZW1pdHRlcl9yb3V0ZUA5IG1haW5fY29uZGl0aW9uYWxfZW1pdF9yb3V0ZUAxMCBtYWluX3RlbXBsYXRlX3ZhbHVlX3JvdXRlQDExCgptYWluX2FmdGVyX2lmX2Vsc2VAMTU6CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6NDEKICAgIC8vIGNsYXNzIENvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICBpbnRjXzEgLy8gMAogICAgcmV0dXJuCgptYWluX3RlbXBsYXRlX3ZhbHVlX3JvdXRlQDExOgogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjExMAogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjExNgogICAgLy8gVGVtcGxhdGVWYXJbYXJjNC5VSW50OF0oIkFSQzRfVUlOVDgiKSwKICAgIGJ5dGVjXzEgLy8gVE1QTF9BUkM0X1VJTlQ4CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6MTEzCiAgICAvLyBUZW1wbGF0ZVZhcltTaGFyZWRTdHJ1Y3RdKCJTVFJVQ1QiKSwKICAgIGJ5dGVjXzIgLy8gVE1QTF9TVFJVQ1QKICAgIC8vIGFyY181Ni9jb250cmFjdC5weToxMTUKICAgIC8vIFRlbXBsYXRlVmFyW1N0cmluZ10oIkFWTV9TVFJJTkciKSwKICAgIGJ5dGVjXzMgLy8gVE1QTF9BVk1fU1RSSU5HCiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6MTE0CiAgICAvLyBUZW1wbGF0ZVZhcltVSW50NjRdKCJBVk1fVUlOVDY0IiksCiAgICBpbnRjXzMgLy8gVE1QTF9BVk1fVUlOVDY0CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6MTEwCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgaXRvYgogICAgZGlnIDEKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgMgogICAgY29uY2F0CiAgICBkaWcgMgogICAgbGVuCiAgICBwdXNoaW50IDEzIC8vIDEzCiAgICArCiAgICBwdXNoYnl0ZXMgMHgwMDBkCiAgICB1bmNvdmVyIDMKICAgIGNvbmNhdAogICAgc3dhcAogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIGNvbmNhdAogICAgdW5jb3ZlciAzCiAgICBjb25jYXQKICAgIHVuY292ZXIgMgogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fY29uZGl0aW9uYWxfZW1pdF9yb3V0ZUAxMDoKICAgIC8vIGFyY181Ni9jb250cmFjdC5weToxMDEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo0MQogICAgLy8gY2xhc3MgQ29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGludGNfMSAvLyAwCiAgICBnZXRiaXQKICAgIC8vIGFyY181Ni9jb250cmFjdC5weToxMDEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIGNvbmRpdGlvbmFsX2VtaXQKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fZW1pdHRlcl9yb3V0ZUA5OgogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjkxCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIGVtaXR0ZXIKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fZW1pdHNfZXJyb3Jfcm91dGVAODoKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo4NwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKG5hbWU9ImVtaXRzX2Vycm9yIiwgcmVhZG9ubHk9VHJ1ZSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjQxCiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5Ojg3CiAgICAvLyBAYXJjNC5hYmltZXRob2QobmFtZT0iZW1pdHNfZXJyb3IiLCByZWFkb25seT1UcnVlKQogICAgY2FsbHN1YiBlcnJvcnMKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fc3RydWN0X3JldHVybl9yb3V0ZUA3OgogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjgyCiAgICAvLyBAYXJjNC5hYmltZXRob2QocmVhZG9ubHk9VHJ1ZSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjQxCiAgICAvLyBjbGFzcyBDb250cmFjdChBUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjgyCiAgICAvLyBAYXJjNC5hYmltZXRob2QocmVhZG9ubHk9VHJ1ZSkKICAgIGNhbGxzdWIgc3RydWN0X3JldHVybgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9zdHJ1Y3RfYXJnX3JvdXRlQDY6CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6NzYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo0MQogICAgLy8gY2xhc3MgQ29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo3NgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgc3RydWN0X2FyZwogICAgaXRvYgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9jcmVhdGVfcm91dGVANToKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo2OAogICAgLy8gQGFyYzQuYWJpbWV0aG9kKGNyZWF0ZT0iYWxsb3ciLCBhbGxvd19hY3Rpb25zPVsiTm9PcCIsICJPcHRJbiJdKQogICAgaW50Y18wIC8vIDEKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIHNobAogICAgcHVzaGludCAzIC8vIDMKICAgICYKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IG9uZSBvZiBOb09wLCBPcHRJbgogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdAMTI6CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6NDEKICAgIC8vIGNsYXNzIENvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBzd2l0Y2ggbWFpbl9iYXJlX2NyZWF0ZUAxMyBtYWluX2JhcmVfY3JlYXRlQDEzIG1haW5fYWZ0ZXJfaWZfZWxzZUAxNSBtYWluX2FmdGVyX2lmX2Vsc2VAMTUgbWFpbl9hZnRlcl9pZl9lbHNlQDE1IG1haW5fdHJhbnNpZW50QDE0CiAgICBiIG1haW5fYWZ0ZXJfaWZfZWxzZUAxNQoKbWFpbl90cmFuc2llbnRAMTQ6CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6NzIKICAgIC8vIEBhcmM0LmJhcmVtZXRob2QoY3JlYXRlPSJyZXF1aXJlIiwgYWxsb3dfYWN0aW9ucz1bIkRlbGV0ZUFwcGxpY2F0aW9uIl0pCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjcyLTczCiAgICAvLyBAYXJjNC5iYXJlbWV0aG9kKGNyZWF0ZT0icmVxdWlyZSIsIGFsbG93X2FjdGlvbnM9WyJEZWxldGVBcHBsaWNhdGlvbiJdKQogICAgLy8gZGVmIHRyYW5zaWVudChzZWxmKSAtPiBOb25lOgogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX2NyZWF0ZUAxMzoKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo2NC02NQogICAgLy8gQGFyYzQuYmFyZW1ldGhvZChjcmVhdGU9ImFsbG93IiwgYWxsb3dfYWN0aW9ucz1bIk5vT3AiLCAiT3B0SW4iXSkKICAgIC8vIGRlZiBiYXJlX2NyZWF0ZShzZWxmKSAtPiBOb25lOgogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RfY2FzZXMuYXJjXzU2LmNvbnRyYWN0LkNvbnRyYWN0LnN0cnVjdF9hcmcoYXJnOiBieXRlcywgc2hhcmVkOiBieXRlcykgLT4gdWludDY0OgpzdHJ1Y3RfYXJnOgogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5Ojc2LTc3CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgLy8gZGVmIHN0cnVjdF9hcmcoc2VsZiwgYXJnOiBUb3BMZXZlbFN0cnVjdCwgc2hhcmVkOiBTaGFyZWRTdHJ1Y3QpIC0+IFVJbnQ2NDoKICAgIHByb3RvIDIgMQogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5Ojc5CiAgICAvLyBhc3NlcnQgYXJnLnNoYXJlZCA9PSBzaGFyZWQsICJ0aGlzIG1pZ2h0IGVycm9yIgogICAgZnJhbWVfZGlnIC0yCiAgICBpbnRjXzIgLy8gMTAKICAgIGV4dHJhY3RfdWludDE2CiAgICBmcmFtZV9kaWcgLTIKICAgIGxlbgogICAgZnJhbWVfZGlnIC0yCiAgICBjb3ZlciAyCiAgICBzdWJzdHJpbmczCiAgICBmcmFtZV9kaWcgLTEKICAgID09CiAgICBhc3NlcnQgLy8gdGhpcyBtaWdodCBlcnJvcgogICAgLy8gYXJjXzU2L2NvbnRyYWN0LnB5OjgwCiAgICAvLyByZXR1cm4gVUludDY0KDQyKQogICAgcHVzaGludCA0MiAvLyA0MgogICAgcmV0c3ViCgoKLy8gdGVzdF9jYXNlcy5hcmNfNTYuY29udHJhY3QuQ29udHJhY3Quc3RydWN0X3JldHVybihhcmc6IGJ5dGVzKSAtPiBieXRlczoKc3RydWN0X3JldHVybjoKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo4Mi04MwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKHJlYWRvbmx5PVRydWUpCiAgICAvLyBkZWYgc3RydWN0X3JldHVybihzZWxmLCBhcmc6IFRvcExldmVsU3RydWN0KSAtPiBTaGFyZWRTdHJ1Y3Q6CiAgICBwcm90byAxIDEKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo4NAogICAgLy8gYXNzZXJ0IGFyZy5zaGFyZWQgPT0gZWNobyhhcmcuc2hhcmVkKSwgInRoaXMgd29uJ3QgZXJyb3IiCiAgICBmcmFtZV9kaWcgLTEKICAgIGludGNfMiAvLyAxMAogICAgZXh0cmFjdF91aW50MTYKICAgIGZyYW1lX2RpZyAtMQogICAgbGVuCiAgICBmcmFtZV9kaWcgLTEKICAgIGNvdmVyIDIKICAgIHN1YnN0cmluZzMKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo4NQogICAgLy8gcmV0dXJuIGFyZy5zaGFyZWQKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMuYXJjXzU2LmNvbnRyYWN0LkNvbnRyYWN0LmVycm9ycyhhcmc6IGJ5dGVzKSAtPiB2b2lkOgplcnJvcnM6CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6ODctODgKICAgIC8vIEBhcmM0LmFiaW1ldGhvZChuYW1lPSJlbWl0c19lcnJvciIsIHJlYWRvbmx5PVRydWUpCiAgICAvLyBkZWYgZXJyb3JzKHNlbGYsIGFyZzogVG9wTGV2ZWxTdHJ1Y3QpIC0+IE5vbmU6CiAgICBwcm90byAxIDAKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo4OQogICAgLy8gYXNzZXJ0IGFyZy5hLmJ5dGVzID09IGFyYzQuVUludDgoMCkuYnl0ZXMsICJ0aGlzIHdpbGwgZXJyb3IiCiAgICBmcmFtZV9kaWcgLTEKICAgIGV4dHJhY3QgMCA4IC8vIG9uIGVycm9yOiBJbmRleCBhY2Nlc3MgaXMgb3V0IG9mIGJvdW5kcwogICAgcHVzaGJ5dGVzIDB4MDAKICAgID09CiAgICBhc3NlcnQgLy8gdGhpcyB3aWxsIGVycm9yCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLmFyY181Ni5jb250cmFjdC5Db250cmFjdC5lbWl0dGVyKCkgLT4gdm9pZDoKZW1pdHRlcjoKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo5MS05MgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIC8vIGRlZiBlbWl0dGVyKHNlbGYpIC0+IE5vbmU6CiAgICBwcm90byAwIDAKICAgIC8vIGFyY181Ni9jb250cmFjdC5weTo5MwogICAgLy8gYXJjNC5lbWl0KFNoYXJlZFN0cnVjdChmb289YXJjNC5EeW5hbWljQnl0ZXMoYiJoZWxsbzEiKSwgYmFyPWFyYzQuVUludDgoNDIpKSkKICAgIHB1c2hieXRlcyAweGQ5M2YzNzRlMDAwMzJhMDAwNjY4NjU2YzZjNmYzMQogICAgbG9nCiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6OTUtOTkKICAgIC8vIGFyYzQuZW1pdCgKICAgIC8vICAgICAiQW5vbnltb3VzIiwKICAgIC8vICAgICBTdHJpbmcoImhlbGxvIiksCiAgICAvLyAgICAgU2hhcmVkU3RydWN0KGZvbz1hcmM0LkR5bmFtaWNCeXRlcyhiImhlbGxvMiIpLCBiYXI9YXJjNC5VSW50OCg0MikpLAogICAgLy8gKQogICAgcHVzaGJ5dGVzIDB4MWU3MmFmNGUwMDA0MDAwYjAwMDU2ODY1NmM2YzZmMDAwMzJhMDAwNjY4NjU2YzZjNmYzMgogICAgbG9nCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLmFyY181Ni5jb250cmFjdC5Db250cmFjdC5jb25kaXRpb25hbF9lbWl0KHNob3VsZF9lbWl0OiB1aW50NjQpIC0+IHZvaWQ6CmNvbmRpdGlvbmFsX2VtaXQ6CiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6MTAxLTEwMgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIC8vIGRlZiBjb25kaXRpb25hbF9lbWl0KHNlbGYsIHNob3VsZF9lbWl0OiBib29sKSAtPiBOb25lOgogICAgcHJvdG8gMSAwCiAgICAvLyBhcmNfNTYvY29udHJhY3QucHk6MTAzCiAgICAvLyBpZiBzaG91bGRfZW1pdDoKICAgIGZyYW1lX2RpZyAtMQogICAgYnogY29uZGl0aW9uYWxfZW1pdF9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIGFyY181Ni9jb250cmFjdC5weToxMDQtMTA4CiAgICAvLyBhcmM0LmVtaXQoCiAgICAvLyAgICAgIkFub255bW91czIiLAogICAgLy8gICAgIEV2ZW50T25seShhcmM0LlVJbnQ2NCg0MiksIGFyYzQuVUludDY0KDQzKSksCiAgICAvLyAgICAgU2hhcmVkU3RydWN0KGZvbz1hcmM0LkR5bmFtaWNCeXRlcyhiImhlbGxvMyIpLCBiYXI9YXJjNC5VSW50OCg0MikpLAogICAgLy8gKQogICAgcHVzaGJ5dGVzIDB4MTFjNTQ3YmEwMDAwMDAwMDAwMDAwMDJhMDAwMDAwMDAwMDAwMDAyYjAwMTIwMDAzMmEwMDA2Njg2NTZjNmM2ZjMzCiAgICBsb2cKCmNvbmRpdGlvbmFsX2VtaXRfYWZ0ZXJfaWZfZWxzZUAyOgogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAQAKeyYEBBUffHUB/wcAA/8AAkhpBUhlbGxvMRtBANGCBwRMXGG6BJfo5KcEdsTeEQTByncJBG3nYsIEWfxSggSdnuywNhoAjgcAjwB4AGUAVgBKADkAAiNDMRkURDEYRCkqKyUWSwEVFlcGAk8CUEsCFYENCIACAA1PA1BMFlcGAlBPA1BPAlBMUChMULAiQzEZFEQxGEQ2GgEjU4gA0yJDMRkURDEYRIgAlCJDMRkURDEYRDYaAYgAdyJDMRkURDEYRDYaAYgAWChMULAiQzEZFEQxGEQ2GgE2GgKIACwWKExQsCJDIjEZkIEDGkQiQzEZjQYACQAJ/1f/V/9XAANC/1QxGBREIkMiQ4oCAYv+JFmL/hWL/k4CUov/EkSBKomKAQGL/yRZi/8Vi/9OAlKJigEAi/9XAAiAAQASRImKAACAD9k/N04AAyoABmhlbGxvMbCAGh5yr04ABAALAAVoZWxsbwADKgAGaGVsbG8ysImKAQCL/0EAJIAhEcVHugAAAAAAAAAqAAAAAAAAACsAEgADKgAGaGVsbG8zsIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [
        {
            "name": "SharedStruct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "foo"
                },
                {
                    "type": "uint8",
                    "name": "bar"
                }
            ],
            "desc": "This struct is shared"
        },
        {
            "name": "Anonymous",
            "args": [
                {
                    "type": "string",
                    "name": "field1"
                },
                {
                    "type": "(byte[],uint8)",
                    "name": "field2",
                    "struct": "SharedStruct"
                }
            ]
        },
        {
            "name": "Anonymous2",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "name": "field1",
                    "struct": "EventOnly"
                },
                {
                    "type": "(byte[],uint8)",
                    "name": "field2",
                    "struct": "SharedStruct"
                }
            ]
        }
    ],
    "templateVariables": {
        "AVM_UINT64": {
            "type": "AVMUint64",
            "value": "AAAAAAAAAHs="
        },
        "ARC4_UINT8": {
            "type": "uint8",
            "value": "/w=="
        },
        "STRUCT": {
            "type": "SharedStruct",
            "value": "AAP/AAJIaQ=="
        },
        "AVM_STRING": {
            "type": "AVMString",
            "value": "SGVsbG8="
        }
    }
}