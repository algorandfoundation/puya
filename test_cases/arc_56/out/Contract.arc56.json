{
    "name": "Contract",
    "structs": {
        "EventOnly": [
            {
                "name": "x",
                "type": "uint64"
            },
            {
                "name": "y",
                "type": "uint64"
            }
        ],
        "SharedStruct": [
            {
                "name": "foo",
                "type": "byte[]"
            },
            {
                "name": "bar",
                "type": "uint8"
            }
        ],
        "StateStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            }
        ],
        "TopLevelStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            },
            {
                "name": "shared",
                "type": "SharedStruct"
            }
        ]
    },
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp",
                    "OptIn"
                ],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "struct_arg",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                },
                {
                    "type": "(byte[],uint8)",
                    "struct": "SharedStruct",
                    "name": "shared"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "struct_return",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "(byte[],uint8)",
                "struct": "SharedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emits_error",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emitter",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "SharedStruct",
                    "args": [
                        {
                            "type": "byte[]",
                            "name": "foo"
                        },
                        {
                            "type": "uint8",
                            "name": "bar"
                        }
                    ],
                    "desc": "This struct is shared"
                },
                {
                    "name": "Anonymous",
                    "args": [
                        {
                            "type": "string",
                            "name": "field1"
                        },
                        {
                            "type": "(byte[],uint8)",
                            "name": "field2",
                            "struct": "SharedStruct"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "conditional_emit",
            "args": [
                {
                    "type": "bool",
                    "name": "should_emit"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Anonymous2",
                    "args": [
                        {
                            "type": "(uint64,uint64)",
                            "name": "field1",
                            "struct": "EventOnly"
                        },
                        {
                            "type": "(byte[],uint8)",
                            "name": "field2",
                            "struct": "SharedStruct"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "template_value",
            "args": [],
            "returns": {
                "type": "((byte[],uint8),uint64,string,uint8)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 2
            },
            "local": {
                "ints": 1,
                "bytes": 2
            }
        },
        "keys": {
            "global": {
                "g_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "Z19zdHJ1Y3Q="
                },
                "g_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "Z3U="
                },
                "g_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "Z2E="
                }
            },
            "local": {
                "l_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "bF9zdHJ1Y3Q="
                },
                "l_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "bHU="
                },
                "l_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "bGE="
                }
            },
            "box": {
                "b_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "Yl9zdHJ1Y3Q="
                },
                "b_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "YnU="
                },
                "b_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "YmE="
                },
                "box_ref": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94X3JlZg=="
                },
                "box_ref2": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMBytes",
                    "key": "YnI="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_map_struct": {
                    "keyType": "StateStruct",
                    "valueType": "SharedStruct",
                    "prefix": "Ym94X21hcF9zdHJ1Y3Q="
                },
                "box_map_uint64": {
                    "keyType": "AVMUint64",
                    "valueType": "SharedStruct",
                    "prefix": "Ym11"
                },
                "box_map_address": {
                    "keyType": "address",
                    "valueType": "SharedStruct",
                    "prefix": "Ym1h"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "DeleteApplication",
            "NoOp",
            "OptIn"
        ],
        "call": [
            "NoOp",
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        113,
                        136,
                        155,
                        170,
                        182,
                        199
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        107
                    ],
                    "errorMessage": "OnCompletion is not one of NoOp, OptIn"
                },
                {
                    "pc": [
                        275
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        116,
                        139,
                        158,
                        173,
                        185,
                        202
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        298
                    ],
                    "errorMessage": "this might error"
                },
                {
                    "pc": [
                        346
                    ],
                    "errorMessage": "this will error"
                },
                {
                    "pc": [
                        325
                    ],
                    "errorMessage": "this won't error"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmFyY181Ni5jb250cmFjdC5Db250cmFjdC5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiAEAQAKeyYEBBUffHUHAAP/AAJIaQVIZWxsbwH/iAABQ4oAATEbQQDSggcETFxhugSX6OSnBHbE3hEEwcp3CQRt52LCBFn8UoIEnZ7ssDYaAI4HAAIADAAjADYARQBRAGIjiSIxGZCBAxpEIokxGRREMRhENhoBNhoCiACaFihMULAiiTEZFEQxGEQ2GgGIAJwoTFCwIokxGRREMRhENhoBiACpIokxGRREMRhEiACrIokxGRREMRhENhoBI1OIANMiiTEZFEQxGESIAPdPAhZLAhUWVwYCTwNQSwMVgQ0IgAIADU8DUEwWVwYCUE8CUE8CUExQKExQsCKJMRmNBgACAAIACgAKAAoABCOJIokxGBREIokjiYoCAYv+JFmL/hWL/k4CUov/EkSBKomKAQGL/yRZi/8Vi/9OAlJJiAAGSEsBEkSJigECi/9JiYoBAIv/VwAIgAEAEkSJigAAggIE2T83TgsAAyoABmhlbGxvMVCwggIEHnKvThYABAALAAVoZWxsbwADKgAGaGVsbG8yULCJigEAi/9BACeCAgQRxUe6HQAAAAAAAAAqAAAAAAAAACsAEgADKgAGaGVsbG8zULCJigAEKSUqK4k=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [
        {
            "name": "SharedStruct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "foo"
                },
                {
                    "type": "uint8",
                    "name": "bar"
                }
            ],
            "desc": "This struct is shared"
        },
        {
            "name": "Anonymous",
            "args": [
                {
                    "type": "string",
                    "name": "field1"
                },
                {
                    "type": "(byte[],uint8)",
                    "name": "field2",
                    "struct": "SharedStruct"
                }
            ]
        },
        {
            "name": "Anonymous2",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "name": "field1",
                    "struct": "EventOnly"
                },
                {
                    "type": "(byte[],uint8)",
                    "name": "field2",
                    "struct": "SharedStruct"
                }
            ]
        }
    ],
    "templateVariables": {
        "STRUCT": {
            "type": "SharedStruct",
            "value": "AAP/AAJIaQ=="
        },
        "AVM_UINT64": {
            "type": "AVMUint64",
            "value": "AAAAAAAAAHs="
        },
        "AVM_STRING": {
            "type": "AVMString",
            "value": "SGVsbG8="
        },
        "ARC4_UINT8": {
            "type": "uint8",
            "value": "/w=="
        }
    }
}