{
    "name": "Contract",
    "structs": {
        "EventOnly": [
            {
                "name": "x",
                "type": "uint64"
            },
            {
                "name": "y",
                "type": "uint64"
            }
        ],
        "SharedStruct": [
            {
                "name": "foo",
                "type": "byte[]"
            },
            {
                "name": "bar",
                "type": "uint8"
            }
        ],
        "StateStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            }
        ],
        "TopLevelStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "string"
            },
            {
                "name": "shared",
                "type": "SharedStruct"
            }
        ]
    },
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp",
                    "OptIn"
                ],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Method docstring",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "struct_arg",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                },
                {
                    "type": "(byte[],uint8)",
                    "struct": "SharedStruct",
                    "name": "shared"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Method docstring2",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "struct_return",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "(byte[],uint8)",
                "struct": "SharedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emits_error",
            "args": [
                {
                    "type": "(uint64,string,(byte[],uint8))",
                    "struct": "TopLevelStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "emitter",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "SharedStruct",
                    "args": [
                        {
                            "type": "byte[]",
                            "name": "foo"
                        },
                        {
                            "type": "uint8",
                            "name": "bar"
                        }
                    ],
                    "desc": "This struct is shared"
                },
                {
                    "name": "Anonymous",
                    "args": [
                        {
                            "type": "string",
                            "name": "field1"
                        },
                        {
                            "type": "(byte[],uint8)",
                            "name": "field2",
                            "struct": "SharedStruct"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "conditional_emit",
            "args": [
                {
                    "type": "bool",
                    "name": "should_emit"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "Anonymous2",
                    "args": [
                        {
                            "type": "(uint64,uint64)",
                            "name": "field1",
                            "struct": "EventOnly"
                        },
                        {
                            "type": "(byte[],uint8)",
                            "name": "field2",
                            "struct": "SharedStruct"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "template_value",
            "args": [],
            "returns": {
                "type": "((byte[],uint8),uint64,string,uint8)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_constant_defaults",
            "args": [
                {
                    "type": "uint64",
                    "name": "a",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAAAAAAHs=",
                        "type": "uint64"
                    }
                },
                {
                    "type": "uint64",
                    "name": "b",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAAAAAAOo=",
                        "type": "uint64"
                    }
                },
                {
                    "type": "byte[]",
                    "name": "c",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAMxMjM=",
                        "type": "byte[]"
                    }
                },
                {
                    "type": "(uint64,uint64)",
                    "struct": "EventOnly",
                    "name": "d",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAAAAAAAEAAAAAAAAAAg==",
                        "type": "(uint64,uint64)"
                    }
                },
                {
                    "type": "(uint64,string)",
                    "name": "e",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAAAAAACoACgALb24gdGhlIGVkZ2U=",
                        "type": "(uint64,string)"
                    }
                },
                {
                    "type": "string[2]",
                    "name": "f",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAQACAACaGkABnRoZXJlIQ==",
                        "type": "string[2]"
                    }
                },
                {
                    "type": "string[]",
                    "name": "g",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAIABAAJAANvbmUAA3R3bw==",
                        "type": "string[]"
                    }
                },
                {
                    "type": "uint64",
                    "name": "h",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAAAAAACo=",
                        "type": "uint64"
                    }
                },
                {
                    "type": "uint64",
                    "name": "i",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAAAAABNI=",
                        "type": "uint64"
                    }
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "Contract docstring",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 2
            },
            "local": {
                "ints": 1,
                "bytes": 2
            }
        },
        "keys": {
            "global": {
                "g_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "Z19zdHJ1Y3Q="
                },
                "g_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "Z3U="
                },
                "g_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "Z2E="
                }
            },
            "local": {
                "l_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "bF9zdHJ1Y3Q="
                },
                "l_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "bHU="
                },
                "l_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "bGE="
                }
            },
            "box": {
                "b_struct": {
                    "keyType": "AVMString",
                    "valueType": "StateStruct",
                    "key": "Yl9zdHJ1Y3Q="
                },
                "b_uint64": {
                    "keyType": "AVMBytes",
                    "valueType": "uint64",
                    "key": "YnU="
                },
                "b_address": {
                    "keyType": "AVMBytes",
                    "valueType": "address",
                    "key": "YmE="
                },
                "box_ref": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94X3JlZg=="
                },
                "box_ref2": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMBytes",
                    "key": "YnI="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_map_struct": {
                    "keyType": "StateStruct",
                    "valueType": "SharedStruct",
                    "prefix": "Ym94X21hcF9zdHJ1Y3Q="
                },
                "box_map_uint64": {
                    "keyType": "uint64",
                    "valueType": "SharedStruct",
                    "prefix": "Ym11"
                },
                "box_map_address": {
                    "keyType": "address",
                    "valueType": "SharedStruct",
                    "prefix": "Ym1h"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "DeleteApplication",
            "NoOp",
            "OptIn"
        ],
        "call": [
            "NoOp",
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        53
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        121
                    ],
                    "errorMessage": "OnCompletion must be one of NoOp, OptIn"
                },
                {
                    "pc": [
                        142
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        394
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint8[])"
                },
                {
                    "pc": [
                        409
                    ],
                    "errorMessage": "invalid number of bytes for (uint64,uint64)"
                },
                {
                    "pc": [
                        267
                    ],
                    "errorMessage": "invalid number of bytes for bool8"
                },
                {
                    "pc": [
                        372,
                        380,
                        447,
                        458
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        165
                    ],
                    "errorMessage": "this might error"
                },
                {
                    "pc": [
                        210
                    ],
                    "errorMessage": "this will error"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAFAQAIAnsmBQAEFR98dQH/BUhlbGxvBwAD/wACSGkxG0EAVYAETFxhujYaAI4BAEAxGRREMRhEggcEl+jkpwR2xN4RBMHKdwkEbediwgRZ/FKCBJ2e7LAEXo7vmjYaAI4HACAARgBXAGIAkwDGAPwAIjEZkIEDGkMxGY0GAAUABf/n/+f/5wABADEYFEMiQzYaATYaAksBgQpZSwIVTwNOAlISRIAMFR98dQAAAAAAAAAqsCJDNhoBSYEKWUsBFVIpTFCwIkM2GgFXAAiAAQASQ4AP2T83TgADKgAGaGVsbG8xsIAaHnKvTgAEAAsABWhlbGxvAAMqAAZoZWxsbzKwIkM2GgFJFSISRCNTQQAkgCERxUe6AAAAAAAAACoAAAAAAAAAKwASAAMqAAZoZWxsbzOwIkMqKyEEJwRJFYENCE8CFoACAA1MUEsDFRZXBgJPBFBPAhZXBgJPAkxQTwNQTwJQTFApTFCwIkM2GgFJFSQSRDYaAkkVJBJEFzYaA0kjWSUISwEVEkRXAgA2GgRJTgRJFYEQEkQ2GgVJI1tOBUkkWUsBFVJXAgBOBDYaBk4ENhoHTgQ2GghJFSQSRBdOBDYaCUkVJBJEF04ETwMoqURPAkRMFURXAAgoqUAACksGVwgIKKlBADgiREsFQAAGSwQVQQAnIkRLA0kjWUpZJQhYgAQAAmhpEkRLAiNZJRJESwGBKhJESYHSCRJDI0L/1iNC/8U=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [
        {
            "name": "SharedStruct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "foo"
                },
                {
                    "type": "uint8",
                    "name": "bar"
                }
            ],
            "desc": "This struct is shared"
        },
        {
            "name": "Anonymous",
            "args": [
                {
                    "type": "string",
                    "name": "field1"
                },
                {
                    "type": "(byte[],uint8)",
                    "name": "field2",
                    "struct": "SharedStruct"
                }
            ]
        },
        {
            "name": "Anonymous2",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "name": "field1",
                    "struct": "EventOnly"
                },
                {
                    "type": "(byte[],uint8)",
                    "name": "field2",
                    "struct": "SharedStruct"
                }
            ]
        }
    ],
    "templateVariables": {
        "AVM_UINT64": {
            "type": "AVMUint64",
            "value": "AAAAAAAAAHs="
        },
        "ARC4_UINT8": {
            "type": "uint8",
            "value": "/w=="
        },
        "AVM_STRING": {
            "type": "AVMString",
            "value": "SGVsbG8="
        },
        "STRUCT": {
            "type": "SharedStruct",
            "value": "AAP/AAJIaQ=="
        }
    }
}