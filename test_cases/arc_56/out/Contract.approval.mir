// Op                                                                                Stack (out)
// test_cases.arc_56.contract.Contract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                                     tmp%1#0
    return


// test_cases.arc_56.contract.Contract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txn NumAppArgs                                                                   tmp%0#0
    bz __puya_arc4_router___bare_routing@11
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txna ApplicationArgs 0                                                           tmp%2#0
    method create()void                                                              tmp%2#0,Method(create()void)
    method struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64           tmp%2#0,Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64)
    method struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)               tmp%2#0,Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8))
    method emits_error((uint64,string,(byte[],uint8)))void                           tmp%2#0,Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void)
    method emitter()void                                                             tmp%2#0,Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void)
    method conditional_emit(bool)void                                                tmp%2#0,Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void)
    method template_value()((byte[],uint8),uint64,string,uint8)                      tmp%2#0,Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void),Method(template_value()((byte[],uint8),uint64,string,uint8))
    l-load tmp%2#0 7                                                                 Method(create()void),Method(struct_arg((uint64,string,(byte[],uint8)),(byte[],uint8))uint64),Method(struct_return((uint64,string,(byte[],uint8)))(byte[],uint8)),Method(emits_error((uint64,string,(byte[],uint8)))void),Method(emitter()void),Method(conditional_emit(bool)void),Method(template_value()((byte[],uint8),uint64,string,uint8)),tmp%2#0
    match __puya_arc4_router___create_route@2 __puya_arc4_router___struct_arg_route@3 __puya_arc4_router___struct_return_route@4 __puya_arc4_router___emits_error_route@5 __puya_arc4_router___emitter_route@6 __puya_arc4_router___conditional_emit_route@7 __puya_arc4_router___template_value_route@8 
    int 0                                                                            0
    retsub                                                                           0

__puya_arc4_router___create_route@2:
    // arc_56/contract.py:67
    // @arc4.abimethod(create="allow", allow_actions=["NoOp", "OptIn"])
    txn OnCompletion                                                                 tmp%3#0
    int 1                                                                            tmp%3#0,1
    l-load tmp%3#0 1                                                                 1,tmp%3#0
    shl                                                                              tmp%4#0
    int 3                                                                            tmp%4#0,3
    &                                                                                tmp%5#0
    assert // OnCompletion is not one of NoOp, OptIn
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___struct_arg_route@3:
    // arc_56/contract.py:75
    // @arc4.abimethod()
    txn OnCompletion                                                                 tmp%6#0
    !                                                                                tmp%7#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                tmp%8#0
    assert // can only call when not creating
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txna ApplicationArgs 1                                                           tmp%10#0
    txna ApplicationArgs 2                                                           tmp%10#0,tmp%11#0
    // arc_56/contract.py:75
    // @arc4.abimethod()
    l-load tmp%10#0 1                                                                tmp%11#0,tmp%10#0
    l-load tmp%11#0 1                                                                tmp%10#0,tmp%11#0
    callsub struct_arg                                                               to_encode%0#0
    itob                                                                             val_as_bytes%0#0
    byte 0x151f7c75                                                                  val_as_bytes%0#0,0x151f7c75
    l-load val_as_bytes%0#0 1                                                        0x151f7c75,val_as_bytes%0#0
    concat                                                                           tmp%12#0
    log
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___struct_return_route@4:
    // arc_56/contract.py:80
    // @arc4.abimethod(readonly=True)
    txn OnCompletion                                                                 tmp%13#0
    !                                                                                tmp%14#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                tmp%15#0
    assert // can only call when not creating
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txna ApplicationArgs 1                                                           tmp%17#0
    // arc_56/contract.py:80
    // @arc4.abimethod(readonly=True)
    callsub struct_return                                                            tmp%18#0
    byte 0x151f7c75                                                                  tmp%18#0,0x151f7c75
    l-load tmp%18#0 1                                                                0x151f7c75,tmp%18#0
    concat                                                                           tmp%19#0
    log
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___emits_error_route@5:
    // arc_56/contract.py:85
    // @arc4.abimethod(name="emits_error", readonly=True)
    txn OnCompletion                                                                 tmp%20#0
    !                                                                                tmp%21#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                tmp%22#0
    assert // can only call when not creating
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txna ApplicationArgs 1                                                           tmp%24#0
    // arc_56/contract.py:85
    // @arc4.abimethod(name="emits_error", readonly=True)
    callsub errors
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___emitter_route@6:
    // arc_56/contract.py:89
    // @arc4.abimethod()
    txn OnCompletion                                                                 tmp%25#0
    !                                                                                tmp%26#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                tmp%27#0
    assert // can only call when not creating
    callsub emitter
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___conditional_emit_route@7:
    // arc_56/contract.py:99
    // @arc4.abimethod()
    txn OnCompletion                                                                 tmp%29#0
    !                                                                                tmp%30#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                tmp%31#0
    assert // can only call when not creating
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txna ApplicationArgs 1                                                           tmp%33#0
    int 0                                                                            tmp%33#0,0
    getbit                                                                           tmp%34#0
    // arc_56/contract.py:99
    // @arc4.abimethod()
    callsub conditional_emit
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___template_value_route@8:
    // arc_56/contract.py:108
    // @arc4.abimethod()
    txn OnCompletion                                                                 tmp%35#0
    !                                                                                tmp%36#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                tmp%37#0
    assert // can only call when not creating
    callsub template_value                                                           elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0
    l-load elements_to_encode%1#0 2                                                  elements_to_encode%0#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%1#0
    itob                                                                             elements_to_encode%0#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%1#0
    l-load-copy elements_to_encode%2#0 2                                             elements_to_encode%0#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%1#0,elements_to_encode%2#0 (copy)
    len                                                                              elements_to_encode%0#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%1#0,length%0#0
    itob                                                                             elements_to_encode%0#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%1#0,as_bytes%0#0
    extract 6 2                                                                      elements_to_encode%0#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%1#0,length_uint16%0#0
    l-load elements_to_encode%2#0 3                                                  elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,length_uint16%0#0,elements_to_encode%2#0
    concat                                                                           elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0
    l-load-copy elements_to_encode%0#0 3                                             elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0,elements_to_encode%0#0 (copy)
    len                                                                              elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0,data_length%0#0
    int 13                                                                           elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0,data_length%0#0,13
    l-load data_length%0#0 1                                                         elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0,13,data_length%0#0
    +                                                                                elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0,current_tail_offset%1#0
    byte 0x000d                                                                      elements_to_encode%0#0,elements_to_encode%3#0,val_as_bytes%1#0,encoded_value%0#0,current_tail_offset%1#0,0x000d
    l-load val_as_bytes%1#0 3                                                        elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,current_tail_offset%1#0,0x000d,val_as_bytes%1#0
    concat                                                                           elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,current_tail_offset%1#0,encoded_tuple_buffer%2#0
    l-load current_tail_offset%1#0 1                                                 elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,encoded_tuple_buffer%2#0,current_tail_offset%1#0
    itob                                                                             elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,encoded_tuple_buffer%2#0,as_bytes%2#0
    extract 6 2                                                                      elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
    l-load encoded_tuple_buffer%2#0 1                                                elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,offset_as_uint16%1#0,encoded_tuple_buffer%2#0
    l-load offset_as_uint16%1#0 1                                                    elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
    concat                                                                           elements_to_encode%0#0,elements_to_encode%3#0,encoded_value%0#0,encoded_tuple_buffer%3#0
    l-load elements_to_encode%3#0 2                                                  elements_to_encode%0#0,encoded_value%0#0,encoded_tuple_buffer%3#0,elements_to_encode%3#0
    concat                                                                           elements_to_encode%0#0,encoded_value%0#0,encoded_tuple_buffer%4#0
    l-load elements_to_encode%0#0 2                                                  encoded_value%0#0,encoded_tuple_buffer%4#0,elements_to_encode%0#0
    concat                                                                           encoded_value%0#0,encoded_tuple_buffer%5#0
    l-load encoded_value%0#0 1                                                       encoded_tuple_buffer%5#0,encoded_value%0#0
    concat                                                                           encoded_tuple_buffer%6#0
    byte 0x151f7c75                                                                  encoded_tuple_buffer%6#0,0x151f7c75
    l-load encoded_tuple_buffer%6#0 1                                                0x151f7c75,encoded_tuple_buffer%6#0
    concat                                                                           tmp%39#0
    log
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___bare_routing@11:
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    txn OnCompletion                                                                 tmp%40#0
    switch __puya_arc4_router___bare_create@12 __puya_arc4_router___bare_create@12 __puya_arc4_router___after_if_else@16 __puya_arc4_router___after_if_else@16 __puya_arc4_router___after_if_else@16 __puya_arc4_router___transient@13 
    int 0                                                                            0
    retsub                                                                           0

__puya_arc4_router___bare_create@12:
    // arc_56/contract.py:63-64
    // @arc4.baremethod(create="allow", allow_actions=["NoOp", "OptIn"])
    // def bare_create(self) -> None:
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___transient@13:
    // arc_56/contract.py:71
    // @arc4.baremethod(create="require", allow_actions=["DeleteApplication"])
    txn ApplicationID                                                                tmp%41#0
    !                                                                                tmp%42#0
    assert // can only call when creating
    // arc_56/contract.py:71-72
    // @arc4.baremethod(create="require", allow_actions=["DeleteApplication"])
    // def transient(self) -> None:
    int 1                                                                            1
    retsub                                                                           1

__puya_arc4_router___after_if_else@16:
    // arc_56/contract.py:41
    // class Contract(ARC4Contract):
    int 0                                                                            0
    retsub                                                                           0


// test_cases.arc_56.contract.Contract.struct_arg(arg: bytes, shared: bytes) -> uint64:
struct_arg:                                                                          (𝕡) arg#0,shared#0 |
    // arc_56/contract.py:75-76
    // @arc4.abimethod()
    // def struct_arg(self, arg: TopLevelStruct, shared: SharedStruct) -> UInt64:
    proto 2 1                                                                        (𝕡) arg#0,shared#0 |

struct_arg_block@0:                                                                  (𝕡) arg#0,shared#0 |
    // arc_56/contract.py:77
    // assert arg.shared == shared, "this might error"
    p-load arg#0                                                                     (𝕡) arg#0,shared#0 | arg#0 (copy)
    int 10                                                                           (𝕡) arg#0,shared#0 | arg#0 (copy),10
    extract_uint16                                                                   (𝕡) arg#0,shared#0 | item_start_offset%0#0
    p-load arg#0                                                                     (𝕡) arg#0,shared#0 | item_start_offset%0#0,arg#0 (copy)
    len                                                                              (𝕡) arg#0,shared#0 | item_start_offset%0#0,item_end_offset%0#0
    p-load arg#0                                                                     (𝕡) arg#0,shared#0 | item_start_offset%0#0,item_end_offset%0#0,arg#0 (copy)
    l-load item_start_offset%0#0 2                                                   (𝕡) arg#0,shared#0 | item_end_offset%0#0,arg#0 (copy),item_start_offset%0#0
    l-load item_end_offset%0#0 2                                                     (𝕡) arg#0,shared#0 | arg#0 (copy),item_start_offset%0#0,item_end_offset%0#0
    substring3                                                                       (𝕡) arg#0,shared#0 | tmp%0#0
    p-load shared#0                                                                  (𝕡) arg#0,shared#0 | tmp%0#0,shared#0 (copy)
    ==                                                                               (𝕡) arg#0,shared#0 | tmp%1#0
    assert // this might error                                                       (𝕡) arg#0,shared#0 |
    // arc_56/contract.py:78
    // return UInt64(42)
    int 42                                                                           (𝕡) arg#0,shared#0 | 42
    retsub                                                                           42


// test_cases.arc_56.contract.Contract.struct_return(arg: bytes) -> bytes:
struct_return:                                                                       (𝕡) arg#0 |
    // arc_56/contract.py:80-81
    // @arc4.abimethod(readonly=True)
    // def struct_return(self, arg: TopLevelStruct) -> SharedStruct:
    proto 1 1                                                                        (𝕡) arg#0 |

struct_return_block@0:                                                               (𝕡) arg#0 |
    // arc_56/contract.py:82
    // assert arg.shared == echo(arg.shared), "this won't error"
    p-load arg#0                                                                     (𝕡) arg#0 | arg#0 (copy)
    int 10                                                                           (𝕡) arg#0 | arg#0 (copy),10
    extract_uint16                                                                   (𝕡) arg#0 | item_start_offset%0#0
    p-load arg#0                                                                     (𝕡) arg#0 | item_start_offset%0#0,arg#0 (copy)
    len                                                                              (𝕡) arg#0 | item_start_offset%0#0,item_end_offset%0#0
    p-load arg#0                                                                     (𝕡) arg#0 | item_start_offset%0#0,item_end_offset%0#0,arg#0 (copy)
    l-load item_start_offset%0#0 2                                                   (𝕡) arg#0 | item_end_offset%0#0,arg#0 (copy),item_start_offset%0#0
    l-load item_end_offset%0#0 2                                                     (𝕡) arg#0 | arg#0 (copy),item_start_offset%0#0,item_end_offset%0#0
    substring3                                                                       (𝕡) arg#0 | tmp%0#0
    l-load-copy tmp%0#0 0                                                            (𝕡) arg#0 | tmp%0#0,tmp%0#0 (copy)
    callsub echo                                                                     (𝕡) arg#0 | tmp%0#0,echo%0#0,echo%1#0
    pop 1                                                                            (𝕡) arg#0 | tmp%0#0,echo%0#0
    l-store echo%0#0 0                                                               (𝕡) arg#0 | tmp%0#0,echo%0#0
    l-load-copy tmp%0#0 1                                                            (𝕡) arg#0 | tmp%0#0,echo%0#0,tmp%0#0 (copy)
    l-load echo%0#0 1                                                                (𝕡) arg#0 | tmp%0#0,tmp%0#0 (copy),echo%0#0
    ==                                                                               (𝕡) arg#0 | tmp%0#0,tmp%2#0
    assert // this won't error                                                       (𝕡) arg#0 | tmp%0#0
    // arc_56/contract.py:83
    // return arg.shared
    l-load tmp%0#0 0                                                                 (𝕡) arg#0 | tmp%0#0
    retsub                                                                           tmp%0#0


// test_cases.arc_56.contract.echo(s: bytes) -> bytes, bytes:
echo:                                                                                (𝕡) s#0 |
    // arc_56/contract.py:118-119
    // @subroutine
    // def echo(s: SharedStruct) -> SharedStruct:
    proto 1 2                                                                        (𝕡) s#0 |

echo_block@0:                                                                        (𝕡) s#0 |
    // arc_56/contract.py:120
    // return s
    p-load s#0                                                                       (𝕡) s#0 | s#0 (copy)
    p-load s#0                                                                       (𝕡) s#0 | s#0 (copy),s#0 (copy)
    retsub                                                                           s#0 (copy),s#0 (copy)


// test_cases.arc_56.contract.Contract.errors(arg: bytes) -> void:
errors:                                                                              (𝕡) arg#0 |
    // arc_56/contract.py:85-86
    // @arc4.abimethod(name="emits_error", readonly=True)
    // def errors(self, arg: TopLevelStruct) -> None:
    proto 1 0                                                                        (𝕡) arg#0 |

errors_block@0:                                                                      (𝕡) arg#0 |
    // arc_56/contract.py:87
    // assert arg.a.bytes == arc4.UInt8(0).bytes, "this will error"
    p-load arg#0                                                                     (𝕡) arg#0 | arg#0 (copy)
    extract 0 8 // on error: Index access is out of bounds                           (𝕡) arg#0 | tmp%0#0
    byte 0x00                                                                        (𝕡) arg#0 | tmp%0#0,0x00
    ==                                                                               (𝕡) arg#0 | tmp%1#0
    assert // this will error                                                        (𝕡) arg#0 |
    retsub


// test_cases.arc_56.contract.Contract.emitter() -> void:
emitter:
    // arc_56/contract.py:89-90
    // @arc4.abimethod()
    // def emitter(self) -> None:
    proto 0 0

emitter_block@0:
    // arc_56/contract.py:91
    // arc4.emit(SharedStruct(foo=arc4.DynamicBytes(b"hello1"), bar=arc4.UInt8(42)))
    method SharedStruct(byte[],uint8)                                                Method(SharedStruct(byte[],uint8))
    byte 0x00032a000668656c6c6f31                                                    Method(SharedStruct(byte[],uint8)),0x00032a000668656c6c6f31
    concat                                                                           event%0#0
    log
    // arc_56/contract.py:93-97
    // arc4.emit(
    //     "Anonymous",
    //     String("hello"),
    //     SharedStruct(foo=arc4.DynamicBytes(b"hello2"), bar=arc4.UInt8(42)),
    // )
    method Anonymous(string,(byte[],uint8))                                          Method(Anonymous(string,(byte[],uint8)))
    byte 0x0004000b000568656c6c6f00032a000668656c6c6f32                              Method(Anonymous(string,(byte[],uint8))),0x0004000b000568656c6c6f00032a000668656c6c6f32
    concat                                                                           event%1#0
    log
    retsub


// test_cases.arc_56.contract.Contract.conditional_emit(should_emit: uint64) -> void:
conditional_emit:                                                                    (𝕡) should_emit#0 |
    // arc_56/contract.py:99-100
    // @arc4.abimethod()
    // def conditional_emit(self, should_emit: bool) -> None:
    proto 1 0                                                                        (𝕡) should_emit#0 |

conditional_emit_block@0:                                                            (𝕡) should_emit#0 |
    // arc_56/contract.py:101
    // if should_emit:
    p-load should_emit#0                                                             (𝕡) should_emit#0 | should_emit#0 (copy)
    bz conditional_emit_after_if_else@2                                              (𝕡) should_emit#0 |
    // Implicit fall through to conditional_emit_if_body@1                           (𝕡) should_emit#0 |

conditional_emit_if_body@1:                                                          (𝕡) should_emit#0 |
    // arc_56/contract.py:102-106
    // arc4.emit(
    //     "Anonymous2",
    //     EventOnly(arc4.UInt64(42), arc4.UInt64(43)),
    //     SharedStruct(foo=arc4.DynamicBytes(b"hello3"), bar=arc4.UInt8(42)),
    // )
    method Anonymous2((uint64,uint64),(byte[],uint8))                                (𝕡) should_emit#0 | Method(Anonymous2((uint64,uint64),(byte[],uint8)))
    byte 0x000000000000002a000000000000002b001200032a000668656c6c6f33                (𝕡) should_emit#0 | Method(Anonymous2((uint64,uint64),(byte[],uint8))),0x000000000000002a000000000000002b001200032a000668656c6c6f33
    concat                                                                           (𝕡) should_emit#0 | event%0#0
    log                                                                              (𝕡) should_emit#0 |
    // Implicit fall through to conditional_emit_after_if_else@2                     (𝕡) should_emit#0 |

conditional_emit_after_if_else@2:                                                    (𝕡) should_emit#0 |
    retsub


// test_cases.arc_56.contract.Contract.template_value() -> bytes, uint64, bytes, bytes:
template_value:
    // arc_56/contract.py:108-109
    // @arc4.abimethod()
    // def template_value(self) -> tuple[SharedStruct, UInt64, String, arc4.UInt8]:
    proto 0 4

template_value_block@0:
    // arc_56/contract.py:111
    // TemplateVar[SharedStruct]("STRUCT"),
    byte TMPL_STRUCT                                                                 TMPL_STRUCT
    // arc_56/contract.py:112
    // TemplateVar[UInt64]("AVM_UINT64"),
    int TMPL_AVM_UINT64                                                              TMPL_STRUCT,TMPL_AVM_UINT64
    // arc_56/contract.py:113
    // TemplateVar[String]("AVM_STRING"),
    byte TMPL_AVM_STRING                                                             TMPL_STRUCT,TMPL_AVM_UINT64,TMPL_AVM_STRING
    // arc_56/contract.py:114
    // TemplateVar[arc4.UInt8]("ARC4_UINT8"),
    byte TMPL_ARC4_UINT8                                                             TMPL_STRUCT,TMPL_AVM_UINT64,TMPL_AVM_STRING,TMPL_ARC4_UINT8
    // arc_56/contract.py:110-115
    // return (
    //     TemplateVar[SharedStruct]("STRUCT"),
    //     TemplateVar[UInt64]("AVM_UINT64"),
    //     TemplateVar[String]("AVM_STRING"),
    //     TemplateVar[arc4.UInt8]("ARC4_UINT8"),
    // )
    retsub                                                                           TMPL_STRUCT,TMPL_AVM_UINT64,TMPL_AVM_STRING,TMPL_ARC4_UINT8


