debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={'STRUCT': b'/x00/x03/xff/x00/x02Hi', 'AVM_UINT64': 123, 'AVM_STRING': b'Hello', 'ARC4_UINT8': b'/xff'}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['arc_56'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.arc_56.contract.constant_method
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.echo_number
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.echo
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:134:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:a
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:136:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:136:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:b at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:b at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (itob 234u) to 0x00000000000000ea
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
arc_56/contract.py:136:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:b, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:b using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:b
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:135:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:135:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:c at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:c at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x313233) to 3u
debug: Simplified (itob 3u) to 0x0000000000000003
debug: Simplified ((extract 6 2) 0x0000000000000003) to 0x0003
debug: Simplified (concat 0x0003 0x313233) to 0x0003313233
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
arc_56/contract.py:135:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:c, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:c using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:c
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:137:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:137:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:d at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:d at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0, tmp%0#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x0000000000000001 0x0000000000000002) to 0x00000000000000010000000000000002
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
arc_56/contract.py:137:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:d, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:d using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:d
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:138:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:138:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:e at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:e at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded(uint64,(len+utf8[]))%0#0, tmp%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (itob 42u) to 0x000000000000002a
debug: Simplified (concat 0x 0x000000000000002a) to 0x000000000000002a
debug: Simplified (len "on the edge") to 11u
debug: Simplified (itob 11u) to 0x000000000000000b
debug: Simplified ((extract 6 2) 0x000000000000000b) to 0x000b
debug: Simplified (concat 0x000b "on the edge") to 0x000b6f6e207468652065646765
debug: Simplified (itob 10u) to 0x000000000000000a
debug: Simplified ((extract 6 2) 0x000000000000000a) to 0x000a
debug: Simplified (concat 0x000000000000002a 0x000a) to 0x000000000000002a000a
debug: Simplified (concat 0x000000000000002a000a 0x000b6f6e207468652065646765) to 0x000000000000002a000a000b6f6e207468652065646765
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%concat%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
arc_56/contract.py:138:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:e, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:e using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:e
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:139:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:139:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:f at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:f at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%1#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded((len+utf8[])[2])%0#0, encoded_array%0#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "hi") to 2u
debug: Simplified (itob 2u) to 0x0000000000000002
debug: Simplified ((extract 6 2) 0x0000000000000002) to 0x0002
debug: Simplified (concat 0x0002 "hi") to 0x00026869
debug: Simplified (len "there!") to 6u
debug: Simplified (itob 6u) to 0x0000000000000006
debug: Simplified ((extract 6 2) 0x0000000000000006) to 0x0006
debug: Simplified (concat 0x0006 "there!") to 0x0006746865726521
debug: Simplified (itob 4u) to 0x0000000000000004
debug: Simplified ((extract 6 2) 0x0000000000000004) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified (len 0x00026869) to 4u
debug: Simplified (+ 4u 4u) to 8u
debug: Simplified (itob 8u) to 0x0000000000000008
debug: Simplified ((extract 6 2) 0x0000000000000008) to 0x0008
debug: Simplified (concat 0x0004 0x0008) to 0x00040008
debug: Simplified (concat 0x00040008 0x00026869) to 0x0004000800026869
debug: Simplified (concat 0x0004000800026869 0x0006746865726521) to 0x00040008000268690006746865726521
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable aggregate%concat%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
arc_56/contract.py:139:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:f, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:f using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:f
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:140:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:140:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:g at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:g at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%1#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(len+(len+utf8[])[])%0#0, encoded_array%0#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "one") to 3u
debug: Simplified (itob 3u) to 0x0000000000000003
debug: Simplified ((extract 6 2) 0x0000000000000003) to 0x0003
debug: Simplified (concat 0x0003 "one") to 0x00036f6e65
debug: Simplified (len "two") to 3u
debug: Simplified (itob 3u) to 0x0000000000000003
debug: Simplified ((extract 6 2) 0x0000000000000003) to 0x0003
debug: Simplified (concat 0x0003 "two") to 0x000374776f
debug: Simplified (itob 2u) to 0x0000000000000002
debug: Simplified ((extract 6 2) 0x0000000000000002) to 0x0002
debug: Simplified (itob 4u) to 0x0000000000000004
debug: Simplified ((extract 6 2) 0x0000000000000004) to 0x0004
debug: Simplified (concat 0x0002 0x0004) to 0x00020004
debug: Simplified (len 0x00036f6e65) to 5u
debug: Simplified (+ 4u 5u) to 9u
debug: Simplified (itob 9u) to 0x0000000000000009
debug: Simplified ((extract 6 2) 0x0000000000000009) to 0x0009
debug: Simplified (concat 0x00020004 0x0009) to 0x000200040009
debug: Simplified (concat 0x000200040009 0x00036f6e65) to 0x00020004000900036f6e65
debug: Simplified (concat 0x00020004000900036f6e65 0x000374776f) to 0x00020004000900036f6e65000374776f
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%4#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable aggregate%concat%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
arc_56/contract.py:140:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:g, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:g using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:g
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:141:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:141:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:h at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:141:18 debug: constant function call to test_cases.arc_56.contract.constant_method in test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 2, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:h at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (itob 42u) to 0x000000000000002a
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
arc_56/contract.py:141:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:h, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:h using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:h
debug: Performing post-SSA optimizations at level 2
arc_56/contract.py:142:18 debug: Building IR for ARC-4 method argument default constant
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Sealing block@0
debug: Terminated block@0
arc_56/contract.py:142:18 debug: Running optimizer at level 2 to encode compile time constant to bytes
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:i at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:142:18 debug: constant function call to test_cases.arc_56.contract.echo_number in test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 2, ending loop
debug: lowering array IR nodes in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: optimizing lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:i at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (itob 1234u) to 0x00000000000004d2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: removing local static slots in lsig program of test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
arc_56/contract.py:142:18 debug: auto reserving slots in test_cases.arc_56.contract.Contract.with_constant_defaults#default:i, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.with_constant_defaults#default:i using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.with_constant_defaults#default:i
debug: Performing post-SSA optimizations at level 2
debug: Building IR for function test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Building IR for function test_cases.arc_56.contract.Contract.create[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.struct_arg[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.struct_return[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.errors[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.emitter[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.conditional_emit[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.template_value[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.bare_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.transient
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.struct_arg
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.struct_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.errors
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.emitter
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.conditional_emit
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function test_cases.arc_56.contract.Contract.template_value
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.with_constant_defaults
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Created Phi assignment: let e.0#1: uint64 = undefined while trying to resolve 'e.0' in block@4
debug: Created Phi assignment: let e.0#2: uint64 = undefined while trying to resolve 'e.0' in block@2
debug: Added e.0#0 to Phi node: let e.0#2: uint64 = φ(e.0#0 <- block@0) in block@0
debug: Added e.0#0 to Phi node: let e.0#2: uint64 = φ(e.0#0 <- block@0, e.0#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let e.0#2: uint64 = φ(e.0#0 <- block@0, e.0#0 <- block@1) (e.0#2) with e.0#0
debug: Deleting Phi assignment: let e.0#2: uint64 = φ(e.0#0 <- block@0, e.0#0 <- block@1)
debug: Replaced trivial Phi node: let e.0#2: uint64 = φ(e.0#0 <- block@0, e.0#0 <- block@1) (e.0#2) with e.0#0 in current definition for 1 blocks
debug: Added e.0#0 to Phi node: let e.0#1: uint64 = φ(e.0#0 <- block@2) in block@2
debug: Added e.0#0 to Phi node: let e.0#1: uint64 = φ(e.0#0 <- block@2, e.0#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let e.0#1: uint64 = φ(e.0#0 <- block@2, e.0#0 <- block@3) (e.0#1) with e.0#0
debug: Deleting Phi assignment: let e.0#1: uint64 = φ(e.0#0 <- block@2, e.0#0 <- block@3)
debug: Replaced trivial Phi node: let e.0#1: uint64 = φ(e.0#0 <- block@2, e.0#0 <- block@3) (e.0#1) with e.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let e.1#1: string = undefined while trying to resolve 'e.1' in block@4
debug: Created Phi assignment: let e.1#2: string = undefined while trying to resolve 'e.1' in block@2
debug: Added e.1#0 to Phi node: let e.1#2: string = φ(e.1#0 <- block@0) in block@0
debug: Added e.1#0 to Phi node: let e.1#2: string = φ(e.1#0 <- block@0, e.1#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let e.1#2: string = φ(e.1#0 <- block@0, e.1#0 <- block@1) (e.1#2) with e.1#0
debug: Deleting Phi assignment: let e.1#2: string = φ(e.1#0 <- block@0, e.1#0 <- block@1)
debug: Replaced trivial Phi node: let e.1#2: string = φ(e.1#0 <- block@0, e.1#0 <- block@1) (e.1#2) with e.1#0 in current definition for 1 blocks
debug: Added e.1#0 to Phi node: let e.1#1: string = φ(e.1#0 <- block@2) in block@2
debug: Added e.1#0 to Phi node: let e.1#1: string = φ(e.1#0 <- block@2, e.1#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let e.1#1: string = φ(e.1#0 <- block@2, e.1#0 <- block@3) (e.1#1) with e.1#0
debug: Deleting Phi assignment: let e.1#1: string = φ(e.1#0 <- block@2, e.1#0 <- block@3)
debug: Replaced trivial Phi node: let e.1#1: string = φ(e.1#0 <- block@2, e.1#0 <- block@3) (e.1#1) with e.1#0 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7
debug: Created Phi assignment: let f#1: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'f' in block@8
debug: Created Phi assignment: let f#2: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'f' in block@6
debug: Created Phi assignment: let f#3: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'f' in block@4
debug: Created Phi assignment: let f#4: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'f' in block@2
debug: Added f#0 to Phi node: let f#4: Encoded((len+utf8[])[2]) = φ(f#0 <- block@0) in block@0
debug: Added f#0 to Phi node: let f#4: Encoded((len+utf8[])[2]) = φ(f#0 <- block@0, f#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let f#4: Encoded((len+utf8[])[2]) = φ(f#0 <- block@0, f#0 <- block@1) (f#4) with f#0
debug: Deleting Phi assignment: let f#4: Encoded((len+utf8[])[2]) = φ(f#0 <- block@0, f#0 <- block@1)
debug: Replaced trivial Phi node: let f#4: Encoded((len+utf8[])[2]) = φ(f#0 <- block@0, f#0 <- block@1) (f#4) with f#0 in current definition for 1 blocks
debug: Added f#0 to Phi node: let f#3: Encoded((len+utf8[])[2]) = φ(f#0 <- block@2) in block@2
debug: Added f#0 to Phi node: let f#3: Encoded((len+utf8[])[2]) = φ(f#0 <- block@2, f#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let f#3: Encoded((len+utf8[])[2]) = φ(f#0 <- block@2, f#0 <- block@3) (f#3) with f#0
debug: Deleting Phi assignment: let f#3: Encoded((len+utf8[])[2]) = φ(f#0 <- block@2, f#0 <- block@3)
debug: Replaced trivial Phi node: let f#3: Encoded((len+utf8[])[2]) = φ(f#0 <- block@2, f#0 <- block@3) (f#3) with f#0 in current definition for 1 blocks
debug: Added f#0 to Phi node: let f#2: Encoded((len+utf8[])[2]) = φ(f#0 <- block@4) in block@4
debug: Added f#0 to Phi node: let f#2: Encoded((len+utf8[])[2]) = φ(f#0 <- block@4, f#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let f#2: Encoded((len+utf8[])[2]) = φ(f#0 <- block@4, f#0 <- block@5) (f#2) with f#0
debug: Deleting Phi assignment: let f#2: Encoded((len+utf8[])[2]) = φ(f#0 <- block@4, f#0 <- block@5)
debug: Replaced trivial Phi node: let f#2: Encoded((len+utf8[])[2]) = φ(f#0 <- block@4, f#0 <- block@5) (f#2) with f#0 in current definition for 1 blocks
debug: Added f#0 to Phi node: let f#1: Encoded((len+utf8[])[2]) = φ(f#0 <- block@6) in block@6
debug: Added f#0 to Phi node: let f#1: Encoded((len+utf8[])[2]) = φ(f#0 <- block@6, f#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let f#1: Encoded((len+utf8[])[2]) = φ(f#0 <- block@6, f#0 <- block@7) (f#1) with f#0
debug: Deleting Phi assignment: let f#1: Encoded((len+utf8[])[2]) = φ(f#0 <- block@6, f#0 <- block@7)
debug: Replaced trivial Phi node: let f#1: Encoded((len+utf8[])[2]) = φ(f#0 <- block@6, f#0 <- block@7) (f#1) with f#0 in current definition for 1 blocks
debug: Created Phi assignment: let g#1: Encoded(len+(len+utf8[])[]) = undefined while trying to resolve 'g' in block@8
debug: Created Phi assignment: let g#2: Encoded(len+(len+utf8[])[]) = undefined while trying to resolve 'g' in block@6
debug: Created Phi assignment: let g#3: Encoded(len+(len+utf8[])[]) = undefined while trying to resolve 'g' in block@4
debug: Created Phi assignment: let g#4: Encoded(len+(len+utf8[])[]) = undefined while trying to resolve 'g' in block@2
debug: Added g#0 to Phi node: let g#4: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@0) in block@0
debug: Added g#0 to Phi node: let g#4: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@0, g#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let g#4: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@0, g#0 <- block@1) (g#4) with g#0
debug: Deleting Phi assignment: let g#4: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@0, g#0 <- block@1)
debug: Replaced trivial Phi node: let g#4: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@0, g#0 <- block@1) (g#4) with g#0 in current definition for 1 blocks
debug: Added g#0 to Phi node: let g#3: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@2) in block@2
debug: Added g#0 to Phi node: let g#3: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@2, g#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let g#3: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@2, g#0 <- block@3) (g#3) with g#0
debug: Deleting Phi assignment: let g#3: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@2, g#0 <- block@3)
debug: Replaced trivial Phi node: let g#3: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@2, g#0 <- block@3) (g#3) with g#0 in current definition for 1 blocks
debug: Added g#0 to Phi node: let g#2: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@4) in block@4
debug: Added g#0 to Phi node: let g#2: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@4, g#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let g#2: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@4, g#0 <- block@5) (g#2) with g#0
debug: Deleting Phi assignment: let g#2: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@4, g#0 <- block@5)
debug: Replaced trivial Phi node: let g#2: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@4, g#0 <- block@5) (g#2) with g#0 in current definition for 1 blocks
debug: Added g#0 to Phi node: let g#1: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@6) in block@6
debug: Added g#0 to Phi node: let g#1: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@6, g#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let g#1: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@6, g#0 <- block@7) (g#1) with g#0
debug: Deleting Phi assignment: let g#1: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@6, g#0 <- block@7)
debug: Replaced trivial Phi node: let g#1: Encoded(len+(len+utf8[])[]) = φ(g#0 <- block@6, g#0 <- block@7) (g#1) with g#0 in current definition for 1 blocks
debug: Created Phi assignment: let h#1: uint64 = undefined while trying to resolve 'h' in block@8
debug: Created Phi assignment: let h#2: uint64 = undefined while trying to resolve 'h' in block@6
debug: Created Phi assignment: let h#3: uint64 = undefined while trying to resolve 'h' in block@4
debug: Created Phi assignment: let h#4: uint64 = undefined while trying to resolve 'h' in block@2
debug: Added h#0 to Phi node: let h#4: uint64 = φ(h#0 <- block@0) in block@0
debug: Added h#0 to Phi node: let h#4: uint64 = φ(h#0 <- block@0, h#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let h#4: uint64 = φ(h#0 <- block@0, h#0 <- block@1) (h#4) with h#0
debug: Deleting Phi assignment: let h#4: uint64 = φ(h#0 <- block@0, h#0 <- block@1)
debug: Replaced trivial Phi node: let h#4: uint64 = φ(h#0 <- block@0, h#0 <- block@1) (h#4) with h#0 in current definition for 1 blocks
debug: Added h#0 to Phi node: let h#3: uint64 = φ(h#0 <- block@2) in block@2
debug: Added h#0 to Phi node: let h#3: uint64 = φ(h#0 <- block@2, h#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let h#3: uint64 = φ(h#0 <- block@2, h#0 <- block@3) (h#3) with h#0
debug: Deleting Phi assignment: let h#3: uint64 = φ(h#0 <- block@2, h#0 <- block@3)
debug: Replaced trivial Phi node: let h#3: uint64 = φ(h#0 <- block@2, h#0 <- block@3) (h#3) with h#0 in current definition for 1 blocks
debug: Added h#0 to Phi node: let h#2: uint64 = φ(h#0 <- block@4) in block@4
debug: Added h#0 to Phi node: let h#2: uint64 = φ(h#0 <- block@4, h#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let h#2: uint64 = φ(h#0 <- block@4, h#0 <- block@5) (h#2) with h#0
debug: Deleting Phi assignment: let h#2: uint64 = φ(h#0 <- block@4, h#0 <- block@5)
debug: Replaced trivial Phi node: let h#2: uint64 = φ(h#0 <- block@4, h#0 <- block@5) (h#2) with h#0 in current definition for 1 blocks
debug: Added h#0 to Phi node: let h#1: uint64 = φ(h#0 <- block@6) in block@6
debug: Added h#0 to Phi node: let h#1: uint64 = φ(h#0 <- block@6, h#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let h#1: uint64 = φ(h#0 <- block@6, h#0 <- block@7) (h#1) with h#0
debug: Deleting Phi assignment: let h#1: uint64 = φ(h#0 <- block@6, h#0 <- block@7)
debug: Replaced trivial Phi node: let h#1: uint64 = φ(h#0 <- block@6, h#0 <- block@7) (h#1) with h#0 in current definition for 1 blocks
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@8
debug: Created Phi assignment: let i#2: uint64 = undefined while trying to resolve 'i' in block@6
debug: Created Phi assignment: let i#3: uint64 = undefined while trying to resolve 'i' in block@4
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@2
debug: Added i#0 to Phi node: let i#4: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#0 to Phi node: let i#4: uint64 = φ(i#0 <- block@0, i#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let i#4: uint64 = φ(i#0 <- block@0, i#0 <- block@1) (i#4) with i#0
debug: Deleting Phi assignment: let i#4: uint64 = φ(i#0 <- block@0, i#0 <- block@1)
debug: Replaced trivial Phi node: let i#4: uint64 = φ(i#0 <- block@0, i#0 <- block@1) (i#4) with i#0 in current definition for 1 blocks
debug: Added i#0 to Phi node: let i#3: uint64 = φ(i#0 <- block@2) in block@2
debug: Added i#0 to Phi node: let i#3: uint64 = φ(i#0 <- block@2, i#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let i#3: uint64 = φ(i#0 <- block@2, i#0 <- block@3) (i#3) with i#0
debug: Deleting Phi assignment: let i#3: uint64 = φ(i#0 <- block@2, i#0 <- block@3)
debug: Replaced trivial Phi node: let i#3: uint64 = φ(i#0 <- block@2, i#0 <- block@3) (i#3) with i#0 in current definition for 1 blocks
debug: Added i#0 to Phi node: let i#2: uint64 = φ(i#0 <- block@4) in block@4
debug: Added i#0 to Phi node: let i#2: uint64 = φ(i#0 <- block@4, i#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let i#2: uint64 = φ(i#0 <- block@4, i#0 <- block@5) (i#2) with i#0
debug: Deleting Phi assignment: let i#2: uint64 = φ(i#0 <- block@4, i#0 <- block@5)
debug: Replaced trivial Phi node: let i#2: uint64 = φ(i#0 <- block@4, i#0 <- block@5) (i#2) with i#0 in current definition for 1 blocks
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@6) in block@6
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@6, i#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let i#1: uint64 = φ(i#0 <- block@6, i#0 <- block@7) (i#1) with i#0
debug: Deleting Phi assignment: let i#1: uint64 = φ(i#0 <- block@6, i#0 <- block@7)
debug: Replaced trivial Phi node: let i#1: uint64 = φ(i#0 <- block@6, i#0 <- block@7) (i#1) with i#0 in current definition for 1 blocks
debug: Terminated block@8
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc_56.contract.constant_method
debug: removing unused subroutine test_cases.arc_56.contract.echo_number
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc_56.contract.constant_method
debug: removing unused subroutine test_cases.arc_56.contract.echo_number
debug: removing unused subroutine test_cases.arc_56.contract.echo
debug: removing unused subroutine test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc_56.contract.Contract.create[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_arg[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_return[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.errors[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.emitter[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.conditional_emit[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.template_value[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.with_constant_defaults[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.__init__
debug: removing unused subroutine test_cases.arc_56.contract.Contract.bare_create
debug: removing unused subroutine test_cases.arc_56.contract.Contract.create
debug: removing unused subroutine test_cases.arc_56.contract.Contract.transient
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_arg
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_return
debug: removing unused subroutine test_cases.arc_56.contract.Contract.errors
debug: removing unused subroutine test_cases.arc_56.contract.Contract.emitter
debug: removing unused subroutine test_cases.arc_56.contract.Contract.conditional_emit
debug: removing unused subroutine test_cases.arc_56.contract.Contract.template_value
debug: removing unused subroutine test_cases.arc_56.contract.Contract.with_constant_defaults
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of test_cases.arc_56.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.arc_56.contract.echo for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.create[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_arg[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_return[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.errors[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.emitter[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.conditional_emit[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.template_value[routing] for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.with_constant_defaults[routing] for inlining
debug: marking trivial method test_cases.arc_56.contract.Contract.__init__ as inlineable
debug: marking trivial method test_cases.arc_56.contract.Contract.bare_create as inlineable
debug: marking trivial method test_cases.arc_56.contract.Contract.create as inlineable
debug: marking trivial method test_cases.arc_56.contract.Contract.transient as inlineable
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_arg for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_return for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.errors for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.emitter for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.conditional_emit for inlining
debug: marking trivial method test_cases.arc_56.contract.Contract.template_value as inlineable
debug: marking single-use function test_cases.arc_56.contract.Contract.with_constant_defaults for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: inlining call to test_cases.arc_56.contract.Contract.__init__ in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@1
debug: branching to block@1 will be replaced with block@2
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: s#0, s%out#0
debug: selected s#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable s%is_original#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:85:6 debug: inlining call to test_cases.arc_56.contract.Contract.transient in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:77:6 debug: inlining call to test_cases.arc_56.contract.Contract.bare_create in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:132:6 debug: inlining call to test_cases.arc_56.contract.Contract.with_constant_defaults[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:123:6 debug: inlining call to test_cases.arc_56.contract.Contract.template_value[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:114:6 debug: inlining call to test_cases.arc_56.contract.Contract.conditional_emit[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:104:6 debug: inlining call to test_cases.arc_56.contract.Contract.emitter[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:100:6 debug: inlining call to test_cases.arc_56.contract.Contract.errors[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:95:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_return[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:89:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_arg[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:81:6 debug: inlining call to test_cases.arc_56.contract.Contract.create[routing] in test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%6#0 NoOp) to (! tmp%6#0)
debug: Simplified (== tmp%12#0 0u) to (! tmp%12#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@15 from switch tmp%11#0 {NoOp => block@16, OptIn => block@16, DeleteApplication => block@17, * => block@18} to goto_nth [block@16, block@16, block@18, block@18, block@18, block@17][tmp%11#0] else goto block@18
debug: simplifying exit 0 to err
debug: simplified terminator of block@19 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Merged linear block@38 into block@2
debug: Merged linear block@36 into block@5
debug: Merged linear block@34 into block@6
debug: Merged linear block@32 into block@7
debug: Merged linear block@30 into block@8
debug: Merged linear block@28 into block@9
debug: Merged linear block@26 into block@10
debug: Merged linear block@24 into block@11
debug: Replaced predecessor block@22 with block@16 in block@23
debug: Merged linear block@22 into block@16
debug: Merged linear block@23 into block@16
debug: Replaced predecessor block@20 with block@17 in block@21
debug: Merged linear block@20 into block@17
debug: Merged linear block@21 into block@17
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@39
debug: Removing jump block block@37
debug: Removing jump block block@35
debug: Removing jump block block@33
debug: Removing jump block block@31
debug: Removing jump block block@29
debug: Removing jump block block@27
debug: Removing jump block block@25
debug: Removing jump block block@12
debug: Removing jump block block@13
debug: Removing jump block block@14
debug: Removing jump block block@18
debug: branching to block@39 will be replaced with block@3
debug: branching to block@37 will be replaced with block@19
debug: branching to block@35 will be replaced with block@19
debug: branching to block@33 will be replaced with block@19
debug: branching to block@31 will be replaced with block@19
debug: branching to block@29 will be replaced with block@19
debug: branching to block@27 will be replaced with block@19
debug: branching to block@25 will be replaced with block@19
debug: branching to block@12 will be replaced with block@19
debug: branching to block@13 will be replaced with block@19
debug: branching to block@14 will be replaced with block@19
debug: branching to block@18 will be replaced with block@19
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.create[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:81:6 debug: inlining call to test_cases.arc_56.contract.Contract.create in test_cases.arc_56.contract.Contract.create[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_arg[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:89:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_arg in test_cases.arc_56.contract.Contract.struct_arg[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+uint8[]),uint8)%0#0, shared#0
debug: selected shared#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_return[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:95:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_return in test_cases.arc_56.contract.Contract.struct_return[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: tuple_item%2#0, tmp%0#0
debug: selected tuple_item%2#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tuple_item%1#0: Encoded((len+uint8[]),uint8) = extract_value(arg#0, 2) with copy of existing registers [Register(source_location=arc_56/contract.py:97:15-25, ir_type=Encoded((len+uint8[]),uint8), name='tuple_item%0', version=0)]
debug: Replacing redundant declaration let tuple_item%2#0: Encoded((len+uint8[]),uint8) = extract_value(arg#0, 2) with copy of existing registers [Register(source_location=arc_56/contract.py:97:15-25, ir_type=Encoded((len+uint8[]),uint8), name='tuple_item%0', version=0)]
debug: Found equivalence set: tuple_item%0#0, tuple_item%1#0, tuple_item%2#0
debug: selected tuple_item%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.errors[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:100:6 debug: inlining call to test_cases.arc_56.contract.Contract.errors in test_cases.arc_56.contract.Contract.errors[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.emitter[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:104:6 debug: inlining call to test_cases.arc_56.contract.Contract.emitter in test_cases.arc_56.contract.Contract.emitter[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.conditional_emit[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:114:6 debug: inlining call to test_cases.arc_56.contract.Contract.conditional_emit in test_cases.arc_56.contract.Contract.conditional_emit[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, should_emit#0
debug: selected should_emit#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@4 into block@3
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.template_value[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:123:6 debug: inlining call to test_cases.arc_56.contract.Contract.template_value in test_cases.arc_56.contract.Contract.template_value[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults[routing]
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:132:6 debug: inlining call to test_cases.arc_56.contract.Contract.with_constant_defaults in test_cases.arc_56.contract.Contract.with_constant_defaults[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, a#0, reinterpret_biguint%0#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%0#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%2#0, e.0#0
debug: selected e.0#0 from equivalence set
debug: Found equivalence set: tmp%3#0, e.1#0
debug: selected e.1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+utf8[])[2])%0#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(len+utf8[])[])%0#0, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: tmp%4#0, h#0
debug: selected h#0 from equivalence set
debug: Found equivalence set: tmp%5#0, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, reinterpret_biguint%1#0
debug: selected tuple_item%0#0 from equivalence set
debug: Found equivalence set: tuple_item%1#0, reinterpret_biguint%2#0
debug: selected tuple_item%1#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.bare_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.transient
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:97:30 debug: inlining call to test_cases.arc_56.contract.echo in test_cases.arc_56.contract.Contract.struct_return
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_item%1#0, s#0, echo%0#0, echo%1#0
debug: selected s#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let s#0: Encoded((len+uint8[]),uint8) = extract_value(arg#0, 2) with copy of existing registers [Register(source_location=arc_56/contract.py:97:15-25, ir_type=Encoded((len+uint8[]),uint8), name='tuple_item%0', version=0)]
debug: Replacing redundant declaration let tuple_item%2#0: Encoded((len+uint8[]),uint8) = extract_value(arg#0, 2) with copy of existing registers [Register(source_location=arc_56/contract.py:97:15-25, ir_type=Encoded((len+uint8[]),uint8), name='tuple_item%0', version=0)]
debug: Found equivalence set: tuple_item%0#0, s#0, tuple_item%2#0
debug: selected s#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.errors
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.emitter
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.conditional_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.template_value
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a#0, reinterpret_biguint%0#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, reinterpret_biguint%1#0
debug: selected tuple_item%0#0 from equivalence set
debug: Found equivalence set: tuple_item%1#0, reinterpret_biguint%2#0
debug: selected tuple_item%1#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc_56.contract.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%9#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@4 from goto tmp%8#0 ? block@5 : block@16 to goto block@5
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@13
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Replaced predecessor block@5 with block@4 in block@8
debug: Replaced predecessor block@5 with block@4 in block@9
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Replaced predecessor block@5 with block@4 in block@11
debug: Replaced predecessor block@5 with block@4 in block@12
debug: Replaced predecessor block@5 with block@4 in block@16
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@17
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc_56.contract.echo
debug: removing unused subroutine test_cases.arc_56.contract.Contract.create[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_arg[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_return[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.errors[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.emitter[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.conditional_emit[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.template_value[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.with_constant_defaults[routing]
debug: removing unused subroutine test_cases.arc_56.contract.Contract.__init__
debug: removing unused subroutine test_cases.arc_56.contract.Contract.bare_create
debug: removing unused subroutine test_cases.arc_56.contract.Contract.transient
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.arc_56.contract.Contract.create as inlineable
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_arg for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_return for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.errors for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.emitter for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.conditional_emit for inlining
debug: marking trivial method test_cases.arc_56.contract.Contract.template_value as inlineable
debug: marking single-use function test_cases.arc_56.contract.Contract.with_constant_defaults for inlining
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc_56.contract.Contract.__puya_arc4_router__ in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%9#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@6 from goto tmp%8#0 ? block@7 : block@18 to goto block@7
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@15
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@7 with block@6 in block@8
debug: Replaced predecessor block@7 with block@6 in block@9
debug: Replaced predecessor block@7 with block@6 in block@10
debug: Replaced predecessor block@7 with block@6 in block@11
debug: Replaced predecessor block@7 with block@6 in block@12
debug: Replaced predecessor block@7 with block@6 in block@13
debug: Replaced predecessor block@7 with block@6 in block@14
debug: Replaced predecessor block@7 with block@6 in block@18
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@19
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:132:6 debug: inlining call to test_cases.arc_56.contract.Contract.with_constant_defaults in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:123:6 debug: inlining call to test_cases.arc_56.contract.Contract.template_value in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:114:6 debug: inlining call to test_cases.arc_56.contract.Contract.conditional_emit in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:104:6 debug: inlining call to test_cases.arc_56.contract.Contract.emitter in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:100:6 debug: inlining call to test_cases.arc_56.contract.Contract.errors in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:95:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_return in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:89:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_arg in test_cases.arc_56.contract.Contract.__puya_arc4_router__
arc_56/contract.py:81:6 debug: inlining call to test_cases.arc_56.contract.Contract.create in test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#2, arg#2
debug: selected arg#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+uint8[]),uint8)%0#0, shared#0
debug: selected shared#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#1, arg#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: s#0, tmp%0#4
debug: selected s#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: tmp%0#3, should_emit#0
debug: selected should_emit#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%0#1, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%1#1, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%2#1, e.0#0
debug: selected e.0#0 from equivalence set
debug: Found equivalence set: tmp%3#1, e.1#0
debug: selected e.1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+utf8[])[2])%0#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(len+utf8[])[])%0#0, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: tmp%4#1, h#0
debug: selected h#0 from equivalence set
debug: Found equivalence set: tmp%5#1, i#0
debug: selected i#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%0#5
debug: Removing unused variable tmp%1#5
debug: Removing unused variable tmp%3#3
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%8#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== s#0 s#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@3 from goto tmp%8#0 ? block@4 : block@19 to goto block@4
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@44 with block@2 in block@45
debug: Merged linear block@44 into block@2
debug: Merged linear block@45 into block@2
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Replaced predecessor block@4 with block@3 in block@6
debug: Replaced predecessor block@4 with block@3 in block@7
debug: Replaced predecessor block@4 with block@3 in block@8
debug: Replaced predecessor block@4 with block@3 in block@9
debug: Replaced predecessor block@4 with block@3 in block@10
debug: Replaced predecessor block@4 with block@3 in block@11
debug: Replaced predecessor block@4 with block@3 in block@19
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@42 with block@5 in block@43
debug: Merged linear block@42 into block@5
debug: Merged linear block@43 into block@5
debug: Replaced predecessor block@40 with block@6 in block@41
debug: Merged linear block@40 into block@6
debug: Merged linear block@41 into block@6
debug: Replaced predecessor block@38 with block@7 in block@39
debug: Merged linear block@38 into block@7
debug: Merged linear block@39 into block@7
debug: Replaced predecessor block@36 with block@8 in block@37
debug: Merged linear block@36 into block@8
debug: Merged linear block@37 into block@8
debug: Replaced predecessor block@32 with block@9 in block@34
debug: Replaced predecessor block@32 with block@9 in block@33
debug: Merged linear block@32 into block@9
debug: Merged linear block@35 into block@34
debug: Replaced predecessor block@30 with block@10 in block@31
debug: Merged linear block@30 into block@10
debug: Merged linear block@31 into block@10
debug: Replaced predecessor block@20 with block@11 in block@21
debug: Replaced predecessor block@20 with block@11 in block@22
debug: Merged linear block@20 into block@11
debug: Merged linear block@29 into block@28
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== s#0 s#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.errors
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.emitter
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.conditional_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.template_value
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%8#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc_56.contract.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking trivial method test_cases.arc_56.contract.Contract.create as inlineable
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_arg for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.struct_return for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.errors for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.emitter for inlining
debug: marking single-use function test_cases.arc_56.contract.Contract.conditional_emit for inlining
debug: marking trivial method test_cases.arc_56.contract.Contract.template_value as inlineable
debug: marking single-use function test_cases.arc_56.contract.Contract.with_constant_defaults for inlining
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
arc_56/contract.py:132:6 debug: inlining call to test_cases.arc_56.contract.Contract.with_constant_defaults in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:123:6 debug: inlining call to test_cases.arc_56.contract.Contract.template_value in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:114:6 debug: inlining call to test_cases.arc_56.contract.Contract.conditional_emit in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:104:6 debug: inlining call to test_cases.arc_56.contract.Contract.emitter in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:100:6 debug: inlining call to test_cases.arc_56.contract.Contract.errors in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:95:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_return in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:89:6 debug: inlining call to test_cases.arc_56.contract.Contract.struct_arg in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
arc_56/contract.py:81:6 debug: inlining call to test_cases.arc_56.contract.Contract.create in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#2, arg#2
debug: selected arg#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+uint8[]),uint8)%0#0, shared#0
debug: selected shared#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#1, arg#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: s#0, tmp%0#6
debug: selected s#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,(len+utf8[]),((len+uint8[]),uint8))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: tmp%0#5, should_emit#0
debug: selected should_emit#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%0#3, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%1#1, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%2#1, e.0#0
debug: selected e.0#0 from equivalence set
debug: Found equivalence set: tmp%3#1, e.1#0
debug: selected e.1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+utf8[])[2])%0#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(len+utf8[])[])%0#0, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: tmp%4#1, h#0
debug: selected h#0 from equivalence set
debug: Found equivalence set: tmp%5#1, i#0
debug: selected i#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#7
debug: Removing unused variable tmp%0#12
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@43 with block@5 in block@44
debug: Merged linear block@43 into block@5
debug: Merged linear block@44 into block@5
debug: Replaced predecessor block@41 with block@8 in block@42
debug: Merged linear block@41 into block@8
debug: Merged linear block@42 into block@8
debug: Replaced predecessor block@39 with block@9 in block@40
debug: Merged linear block@39 into block@9
debug: Merged linear block@40 into block@9
debug: Replaced predecessor block@37 with block@10 in block@38
debug: Merged linear block@37 into block@10
debug: Merged linear block@38 into block@10
debug: Replaced predecessor block@35 with block@11 in block@36
debug: Merged linear block@35 into block@11
debug: Merged linear block@36 into block@11
debug: Replaced predecessor block@31 with block@12 in block@33
debug: Replaced predecessor block@31 with block@12 in block@32
debug: Merged linear block@31 into block@12
debug: Merged linear block@34 into block@33
debug: Replaced predecessor block@29 with block@13 in block@30
debug: Merged linear block@29 into block@13
debug: Merged linear block@30 into block@13
debug: Replaced predecessor block@19 with block@14 in block@20
debug: Replaced predecessor block@19 with block@14 in block@21
debug: Merged linear block@19 into block@14
debug: Merged linear block@28 into block@27
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.errors
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.emitter
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.conditional_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.template_value
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.with_constant_defaults
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc_56.contract.Contract.create
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_arg
debug: removing unused subroutine test_cases.arc_56.contract.Contract.struct_return
debug: removing unused subroutine test_cases.arc_56.contract.Contract.errors
debug: removing unused subroutine test_cases.arc_56.contract.Contract.emitter
debug: removing unused subroutine test_cases.arc_56.contract.Contract.conditional_emit
debug: removing unused subroutine test_cases.arc_56.contract.Contract.template_value
debug: removing unused subroutine test_cases.arc_56.contract.Contract.with_constant_defaults
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc_56.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc_56.contract.Contract
debug: lowering array IR nodes in clear program of test_cases.arc_56.contract.Contract
debug: optimizing approval program of test_cases.arc_56.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%substring3%0#0, tuple_item%0#2
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#4
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, s#0
debug: selected s#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, tuple_item%0#1
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%0#10
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint8[]),uint8)%0#0, tmp%1#6
debug: selected aggregate%concat%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%2#6
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+uint8[])%1#0, tmp%3#4
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded((len+uint8[]),uint8)%1#0, tmp%4#4
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((len+utf8[]),((len+uint8[]),uint8))%0#0, tmp%5#4
debug: selected aggregate%concat%3#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%0#0, should_emit#0
debug: selected should_emit#0 from equivalence set
debug: Found equivalence set: aggregate%head%7#0, aggregate%as_Encoded(uint64,uint64)%0#0, tmp%0#9
debug: selected aggregate%head%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+uint8[])%2#0, tmp%1#5
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Found equivalence set: aggregate%concat%4#0, aggregate%as_Encoded((len+uint8[]),uint8)%2#0, tmp%2#5
debug: selected aggregate%concat%4#0 from equivalence set
debug: Found equivalence set: aggregate%concat%5#0, aggregate%as_Encoded((uint64,uint64),((len+uint8[]),uint8))%0#0, tmp%3#3
debug: selected aggregate%concat%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#0, aggregate%as_Encoded(len+utf8[])%1#0
debug: selected aggregate%encoded_value%4#0 from equivalence set
debug: Found equivalence set: aggregate%concat%7#0, aggregate%as_Encoded(((len+uint8[]),uint8),uint64,(len+utf8[]),uint8)%0#0, tmp%4#2
debug: selected aggregate%concat%7#0 from equivalence set
debug: Found equivalence set: aggregate%item0%0#0, e.0#0
debug: selected e.0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, e.1#0
debug: selected e.1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%2#0, tuple_item%0#0
debug: selected aggregate%extract%2#0 from equivalence set
debug: Found equivalence set: aggregate%extract%3#0, tuple_item%1#0
debug: selected aggregate%extract%3#0 from equivalence set
debug: Found equivalence set: aggregate%item%0#0, array_item%0#0
debug: selected aggregate%item%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%5#0, aggregate%as_Encoded(len+utf8[])%2#0, tmp%9#0
debug: selected aggregate%encoded_value%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%11#1
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Copy propagation made 32 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%current_tail_offset%4#0
debug: Removing unused variable aggregate%current_tail_offset%5#0
debug: Removing unused variable aggregate%current_tail_offset%7#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Removing unused variable aggregate%data_length%4#0
debug: Removing unused variable aggregate%data_length%5#0
debug: Removing unused variable aggregate%data_length%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x151f7c75 aggregate%val_as_bytes%0#0) to 0x151f7c75000000000000002a
debug: Simplified (len 0x68656c6c6f31) to 6u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0006
debug: Simplified (concat 0x0006 0x68656c6c6f31) to 0x000668656c6c6f31
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0003
debug: Simplified (concat 0x 0x0003) to 0x0003
debug: Simplified (concat 0x0003 0x2a) to 0x00032a
debug: Simplified (concat 0x00032a 0x000668656c6c6f31) to 0x00032a000668656c6c6f31
debug: Simplified (concat method "SharedStruct(byte[],uint8)" 0x00032a000668656c6c6f31) to 0xd93f374e00032a000668656c6c6f31
debug: Simplified (len "hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0005
debug: Simplified (concat 0x0005 "hello") to 0x000568656c6c6f
debug: Simplified (len 0x68656c6c6f32) to 6u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0006
debug: Simplified (concat 0x0006 0x68656c6c6f32) to 0x000668656c6c6f32
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0003
debug: Simplified (concat 0x 0x0003) to 0x0003
debug: Simplified (concat 0x0003 0x2a) to 0x00032a
debug: Simplified (concat 0x00032a 0x000668656c6c6f32) to 0x00032a000668656c6c6f32
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified (len 0x000568656c6c6f) to 7u
debug: Simplified (+ 4u 7u) to 11u
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x000b
debug: Simplified (concat 0x0004 0x000b) to 0x0004000b
debug: Simplified (concat 0x0004000b 0x000568656c6c6f) to 0x0004000b000568656c6c6f
debug: Simplified (concat 0x0004000b000568656c6c6f 0x00032a000668656c6c6f32) to 0x0004000b000568656c6c6f00032a000668656c6c6f32
debug: Simplified (concat method "Anonymous(string,(byte[],uint8))" 0x0004000b000568656c6c6f00032a000668656c6c6f32) to 0x1e72af4e0004000b000568656c6c6f00032a000668656c6c6f32
debug: Simplified (concat 0x 0x000000000000002a) to 0x000000000000002a
debug: Simplified (concat 0x000000000000002a 0x000000000000002b) to 0x000000000000002a000000000000002b
debug: Simplified (len 0x68656c6c6f33) to 6u
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x0006
debug: Simplified (concat 0x0006 0x68656c6c6f33) to 0x000668656c6c6f33
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0003
debug: Simplified (concat 0x 0x0003) to 0x0003
debug: Simplified (concat 0x0003 0x2a) to 0x00032a
debug: Simplified (concat 0x00032a 0x000668656c6c6f33) to 0x00032a000668656c6c6f33
debug: Simplified (concat 0x 0x000000000000002a000000000000002b) to 0x000000000000002a000000000000002b
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0012
debug: Simplified (concat 0x000000000000002a000000000000002b 0x0012) to 0x000000000000002a000000000000002b0012
debug: Simplified (concat 0x000000000000002a000000000000002b0012 0x00032a000668656c6c6f33) to 0x000000000000002a000000000000002b001200032a000668656c6c6f33
debug: Simplified (concat method "Anonymous2((uint64,uint64),(byte[],uint8))" 0x000000000000002a000000000000002b001200032a000668656c6c6f33) to 0x11c547ba000000000000002a000000000000002b001200032a000668656c6c6f33
debug: Simplified ((extract 6 2) aggregate%as_bytes%10#0) to 0x000d
debug: Simplified (concat 0x 0x000d) to 0x000d
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0u)
debug: Simplified (< 0u 2u) to 1u
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (* aggregate%item_length%0#0 1u) to aggregate%item_length%0#0
debug: Simplified (len "hi") to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%13#0) to 0x0002
debug: Simplified (concat 0x0002 "hi") to 0x00026869
debug: Simplified (extract3 arg#0 0u 8u) to ((extract 0 8) arg#0)
debug: Simplified (extract3 reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,(len+utf8[]))%0#0)
debug: Simplified (extract3 d#0 0u 8u) to ((extract 0 8) d#0)
debug: Simplified (extract3 d#0 8u 8u) to ((extract 8 8) d#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%3#0: bytes[8] = (itob 6u) with copy of existing registers [Register(source_location=arc_56/contract.py:106:35-63, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 3u) with copy of existing registers [Register(source_location=arc_56/contract.py:106:18-84, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0)]
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%3#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%1#0, aggregate%as_bytes%4#0
debug: selected aggregate%as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%item_length%0#0, aggregate%item_length_in_bytes%0#0
debug: selected aggregate%item_length%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable tmp%2#3
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable event%0#1
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%encoded_value%2#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%concat%1#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable aggregate%concat%3#0
debug: Removing unused variable event%1#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%as_bytes%7#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Removing unused variable aggregate%encoded_value%3#0
debug: Removing unused variable aggregate%as_bytes%8#0
debug: Removing unused variable aggregate%offset_as_uint16%4#0
debug: Removing unused variable aggregate%head%8#0
debug: Removing unused variable aggregate%head%9#0
debug: Removing unused variable aggregate%concat%4#0
debug: Removing unused variable aggregate%head%10#0
debug: Removing unused variable aggregate%as_bytes%9#0
debug: Removing unused variable aggregate%offset_as_uint16%5#0
debug: Removing unused variable aggregate%head%11#0
debug: Removing unused variable aggregate%concat%5#0
debug: Removing unused variable event%0#0
debug: Removing unused variable aggregate%as_bytes%10#0
debug: Removing unused variable aggregate%offset_as_uint16%6#0
debug: Removing unused variable aggregate%head%12#0
debug: Removing unused variable aggregate%extract%1#0
debug: Removing unused variable aggregate%lt%0#0
debug: Removing unused variable aggregate%item_offset_offset%0#0
debug: Removing unused variable aggregate%length%5#0
debug: Removing unused variable aggregate%as_bytes%13#0
debug: Removing unused variable aggregate%length_uint16%5#0
debug: Removing unused variable aggregate%encoded_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc_56.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc_56.contract.Contract
debug: auto reserving slots in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc_56.contract.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: splitting critical edge block@6->block@18
debug: Replaced predecessor block@6 with block@34 in block@18
debug: splitting critical edge block@12->block@33
debug: Replaced predecessor block@12 with block@35 in block@33
debug: splitting critical edge block@14->block@21
debug: Replaced predecessor block@14 with block@36 in block@21
debug: splitting critical edge block@20->block@21
debug: Replaced predecessor block@20 with block@37 in block@21
debug: splitting critical edge block@23->block@25
debug: Replaced predecessor block@23 with block@38 in block@25
debug: splitting critical edge block@24->block@25
debug: Replaced predecessor block@24 with block@39 in block@25
debug: splitting critical edge block@15->block@18
debug: Replaced predecessor block@15 with block@40 in block@18
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing arg#0 with [arg#2, arg#1]
debug: Coalescing tmp%0#8 with [tmp%0#13, tmp%0#11]
debug: Coalescing or_result%0#0 with [or_result%0#2, or_result%0#1]
debug: Coalescing or_result%1#0 with [or_result%1#2, or_result%1#1]
debug: Coalescing tmp%13#0 with [tmp%13#1]
debug: Coalescing resulted in 24 replacement/s
debug: Sequentializing parallel copies in test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 2
debug: Removing jump block block@34
debug: Removing jump block block@35
debug: Removing jump block block@36
debug: Removing jump block block@37
debug: Removing jump block block@38
debug: Removing jump block block@39
debug: Removing jump block block@40
debug: branching to block@34 will be replaced with block@18
debug: branching to block@35 will be replaced with block@33
debug: branching to block@36 will be replaced with block@21
debug: branching to block@37 will be replaced with block@21
debug: branching to block@38 will be replaced with block@25
debug: branching to block@39 will be replaced with block@25
debug: branching to block@40 will be replaced with block@18
debug: Removing duplicated block block@16 and updating references to block@33
debug: branching to block@16 will be replaced with block@33
debug: Output IR to arc_56/out_O2/Contract.ir/Contract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc_56/out_O2/Contract.ir/Contract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_create_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_create_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_create_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_create_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_create_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_create_route@5.ops[4]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_switch_case_next@6.ops[1]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_switch_case_next@6.ops[3]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_switch_case_next@6.ops[5]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_switch_case_next@6.ops[7]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_switch_case_next@6.ops[10]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_switch_case_next@6.ops[12]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_switch_case_next@6.ops[15]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_switch_case_next@6.ops[24]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_struct_arg_route@8.ops[15]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_struct_arg_route@8.ops[17]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_struct_arg_route@8.ops[20]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_struct_arg_route@8.ops[22]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_struct_arg_route@8.ops[1]: 'l-store-copy arg#0 0'
debug: Replaced main_struct_arg_route@8.ops[5]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_struct_arg_route@8.ops[10]: 'l-store-copy arg#0 0'
debug: Replaced main_struct_arg_route@8.ops[13]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_struct_arg_route@8.ops[12]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced main_struct_arg_route@8.ops[16]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted main_struct_arg_route@8.ops[6]: 'l-store-copy arg#0 0'
debug: Replaced main_struct_arg_route@8.ops[10]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_struct_arg_route@8.ops[9]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced main_struct_arg_route@8.ops[17]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted main_struct_arg_route@8.ops[4]: 'l-store-copy shared#0 1'
debug: Replaced main_struct_arg_route@8.ops[24]: 'v-load shared#0' with 'l-load shared#0'
debug: Inserted main_struct_return_route@9.ops[1]: 'l-store-copy arg#0 0'
debug: Replaced main_struct_return_route@9.ops[3]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_struct_return_route@9.ops[18]: 'l-store-copy tmp%1#3 0'
debug: Replaced main_struct_return_route@9.ops[20]: 'v-load tmp%1#3' with 'l-load tmp%1#3'
debug: Inserted main_struct_return_route@9.ops[14]: 'l-store-copy s#0 0'
debug: Replaced main_struct_return_route@9.ops[17]: 'v-load s#0' with 'l-load s#0'
debug: Inserted main_struct_return_route@9.ops[8]: 'l-store-copy arg#0 0'
debug: Replaced main_struct_return_route@9.ops[11]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_struct_return_route@9.ops[10]: 'l-store-copy aggregate%len%1#0 1'
debug: Replaced main_struct_return_route@9.ops[14]: 'v-load aggregate%len%1#0' with 'l-load aggregate%len%1#0'
debug: Inserted main_struct_return_route@9.ops[4]: 'l-store-copy arg#0 0'
debug: Replaced main_struct_return_route@9.ops[8]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_struct_return_route@9.ops[7]: 'l-store-copy aggregate%extract_uint16%1#0 1'
debug: Replaced main_struct_return_route@9.ops[15]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted main_emits_error_route@10.ops[1]: 'l-store-copy arg#0 0'
debug: Replaced main_emits_error_route@10.ops[3]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_emits_error_route@10.ops[5]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced main_emits_error_route@10.ops[7]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted main_emits_error_route@10.ops[10]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_emits_error_route@10.ops[12]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_conditional_emit_route@12.ops[1]: 'l-store-copy reinterpret_Encoded(bool8)%0#0 0'
debug: Replaced main_conditional_emit_route@12.ops[3]: 'v-load reinterpret_Encoded(bool8)%0#0' with 'l-load reinterpret_Encoded(bool8)%0#0'
debug: Inserted main_conditional_emit_route@12.ops[6]: 'l-store-copy should_emit#0 0'
debug: Replaced main_conditional_emit_route@12.ops[8]: 'v-load should_emit#0' with 'l-load should_emit#0'
debug: Inserted main_template_value_route@13.ops[24]: 'l-store-copy aggregate%length%4#0 0'
debug: Replaced main_template_value_route@13.ops[26]: 'v-load aggregate%length%4#0' with 'l-load aggregate%length%4#0'
debug: Inserted main_template_value_route@13.ops[28]: 'l-store-copy aggregate%as_bytes%11#0 0'
debug: Replaced main_template_value_route@13.ops[30]: 'v-load aggregate%as_bytes%11#0' with 'l-load aggregate%as_bytes%11#0'
debug: Inserted main_template_value_route@13.ops[32]: 'l-store-copy aggregate%length_uint16%4#0 0'
debug: Replaced main_template_value_route@13.ops[34]: 'v-load aggregate%length_uint16%4#0' with 'l-load aggregate%length_uint16%4#0'
debug: Inserted main_template_value_route@13.ops[40]: 'l-store-copy aggregate%as_bytes%12#0 0'
debug: Replaced main_template_value_route@13.ops[42]: 'v-load aggregate%as_bytes%12#0' with 'l-load aggregate%as_bytes%12#0'
debug: Inserted main_template_value_route@13.ops[48]: 'l-store-copy aggregate%head%14#0 0'
debug: Replaced main_template_value_route@13.ops[50]: 'v-load aggregate%head%14#0' with 'l-load aggregate%head%14#0'
debug: Inserted main_template_value_route@13.ops[53]: 'l-store-copy aggregate%head%15#0 0'
debug: Replaced main_template_value_route@13.ops[55]: 'v-load aggregate%head%15#0' with 'l-load aggregate%head%15#0'
debug: Inserted main_template_value_route@13.ops[58]: 'l-store-copy aggregate%concat%6#0 0'
debug: Replaced main_template_value_route@13.ops[60]: 'v-load aggregate%concat%6#0' with 'l-load aggregate%concat%6#0'
debug: Inserted main_template_value_route@13.ops[67]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_template_value_route@13.ops[69]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_template_value_route@13.ops[10]: 'l-store-copy aggregate%data_length%6#0 0'
debug: Replaced main_template_value_route@13.ops[13]: 'v-load aggregate%data_length%6#0' with 'l-load aggregate%data_length%6#0'
debug: Inserted main_template_value_route@13.ops[18]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_template_value_route@13.ops[21]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_template_value_route@13.ops[46]: 'l-store-copy aggregate%offset_as_uint16%7#0 0'
debug: Replaced main_template_value_route@13.ops[49]: 'v-load aggregate%offset_as_uint16%7#0' with 'l-load aggregate%offset_as_uint16%7#0'
debug: Inserted main_template_value_route@13.ops[66]: 'l-store-copy aggregate%concat%7#0 0'
debug: Replaced main_template_value_route@13.ops[69]: 'v-load aggregate%concat%7#0' with 'l-load aggregate%concat%7#0'
debug: Inserted main_template_value_route@13.ops[1]: 'l-store-copy tmp%0#4 0'
debug: Replaced main_template_value_route@13.ops[9]: 'v-load tmp%0#4' with 'l-load tmp%0#4'
debug: Inserted main_template_value_route@13.ops[26]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_template_value_route@13.ops[39]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_template_value_route@13.ops[4]: 'l-store-copy tmp%1#2 1'
debug: Replaced main_template_value_route@13.ops[18]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_template_value_route@13.ops[7]: 'l-store-copy tmp%2#2 2'
debug: Replaced main_template_value_route@13.ops[27]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_template_value_route@13.ops[26]: 'l-store-copy aggregate%head%13#0 1'
debug: Replaced main_template_value_route@13.ops[53]: 'v-load aggregate%head%13#0' with 'l-load aggregate%head%13#0'
debug: Inserted main_template_value_route@13.ops[44]: 'l-store-copy aggregate%encoded_value%4#0 1'
debug: Replaced main_template_value_route@13.ops[70]: 'v-load aggregate%encoded_value%4#0' with 'l-load aggregate%encoded_value%4#0'
debug: Inserted main_template_value_route@13.ops[18]: 'l-store-copy aggregate%current_tail_offset%6#0 2'
debug: Replaced main_template_value_route@13.ops[47]: 'v-load aggregate%current_tail_offset%6#0' with 'l-load aggregate%current_tail_offset%6#0'
debug: Inserted main_template_value_route@13.ops[10]: 'l-store-copy tmp%3#2 3'
debug: Replaced main_template_value_route@13.ops[62]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted main_template_value_route@13.ops[13]: 'l-store-copy tmp%0#4 3'
debug: Replaced main_template_value_route@13.ops[68]: 'v-load tmp%0#4' with 'l-load tmp%0#4'
debug: Inserted main_with_constant_defaults_route@14.ops[3]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[5]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted main_with_constant_defaults_route@14.ops[9]: 'l-store-copy reinterpret_Encoded(len+uint8[])%0#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[11]: 'v-load reinterpret_Encoded(len+uint8[])%0#0' with 'l-load reinterpret_Encoded(len+uint8[])%0#0'
debug: Inserted main_with_constant_defaults_route@14.ops[17]: 'l-store-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[19]: 'v-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0' with 'l-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0'
debug: Inserted main_with_constant_defaults_route@14.ops[34]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[36]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_with_constant_defaults_route@14.ops[44]: 'l-store-copy reinterpret_Encoded(uint64)%2#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[46]: 'v-load reinterpret_Encoded(uint64)%2#0' with 'l-load reinterpret_Encoded(uint64)%2#0'
debug: Inserted main_with_constant_defaults_route@14.ops[50]: 'l-store-copy reinterpret_Encoded(uint64)%3#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[52]: 'v-load reinterpret_Encoded(uint64)%3#0' with 'l-load reinterpret_Encoded(uint64)%3#0'
debug: Inserted main_with_constant_defaults_route@14.ops[58]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_with_constant_defaults_route@14.ops[60]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_with_constant_defaults_route@14.ops[66]: 'l-store-copy tmp%2#4 0'
debug: Replaced main_with_constant_defaults_route@14.ops[68]: 'v-load tmp%2#4' with 'l-load tmp%2#4'
debug: Inserted main_with_constant_defaults_route@14.ops[72]: 'l-store-copy aggregate%extract%2#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[74]: 'v-load aggregate%extract%2#0' with 'l-load aggregate%extract%2#0'
debug: Inserted main_with_constant_defaults_route@14.ops[77]: 'l-store-copy tmp%4#3 0'
debug: Replaced main_with_constant_defaults_route@14.ops[79]: 'v-load tmp%4#3' with 'l-load tmp%4#3'
debug: Inserted main_with_constant_defaults_route@14.ops[28]: 'l-store-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[31]: 'v-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0' with 'l-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0'
debug: Inserted main_with_constant_defaults_route@14.ops[30]: 'l-store-copy aggregate%len%2#0 1'
debug: Replaced main_with_constant_defaults_route@14.ops[34]: 'v-load aggregate%len%2#0' with 'l-load aggregate%len%2#0'
debug: Inserted main_with_constant_defaults_route@14.ops[20]: 'l-store-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[24]: 'v-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0' with 'l-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0'
debug: Inserted main_with_constant_defaults_route@14.ops[25]: 'l-store-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[29]: 'v-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0' with 'l-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0'
debug: Inserted main_with_constant_defaults_route@14.ops[28]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced main_with_constant_defaults_route@14.ops[36]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted main_with_constant_defaults_route@14.ops[13]: 'l-store-copy c#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[70]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_with_constant_defaults_route@14.ops[1]: 'l-store-copy a#0 0'
debug: Replaced main_with_constant_defaults_route@14.ops[62]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_with_constant_defaults_route@14.ops[8]: 'l-store-copy b#0 1'
debug: Replaced main_with_constant_defaults_route@14.ops[70]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_with_constant_defaults_route@14.ops[18]: 'l-store-copy d#0 3'
debug: Replaced main_with_constant_defaults_route@14.ops[79]: 'v-load d#0' with 'l-load d#0'
debug: Inserted main_or_contd@20.ops[2]: 'l-store-copy aggregate%extract%3#0 0'
debug: Replaced main_or_contd@20.ops[4]: 'v-load aggregate%extract%3#0' with 'l-load aggregate%extract%3#0'
debug: Inserted main_or_contd@20.ops[7]: 'l-store-copy tmp%5#3 0'
debug: Replaced main_or_contd@20.ops[9]: 'v-load tmp%5#3' with 'l-load tmp%5#3'
debug: Inserted main_or_contd@24.ops[2]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_or_contd@24.ops[4]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_bool_merge@27.ops[9]: 'l-store-copy aggregate%item_length%0#0 0'
debug: Replaced main_bool_merge@27.ops[11]: 'v-load aggregate%item_length%0#0' with 'l-load aggregate%item_length%0#0'
debug: Inserted main_bool_merge@27.ops[19]: 'l-store-copy aggregate%item%0#0 0'
debug: Replaced main_bool_merge@27.ops[21]: 'v-load aggregate%item%0#0' with 'l-load aggregate%item%0#0'
debug: Inserted main_bool_merge@27.ops[24]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_bool_merge@27.ops[26]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_bool_merge@27.ops[31]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced main_bool_merge@27.ops[33]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted main_bool_merge@27.ops[36]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_bool_merge@27.ops[38]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_bool_merge@27.ops[43]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_bool_merge@27.ops[45]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_bool_merge@27.ops[50]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_bool_merge@27.ops[52]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_bool_merge@27.ops[5]: 'l-store-copy aggregate%item_offset%0#0 0'
debug: Replaced main_bool_merge@27.ops[8]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted main_bool_merge@27.ops[15]: 'l-store-copy aggregate%item_head_tail_length%0#0 0'
debug: Replaced main_bool_merge@27.ops[19]: 'v-load aggregate%item_head_tail_length%0#0' with 'l-load aggregate%item_head_tail_length%0#0'
debug: Inserted main_bool_merge@27.ops[3]: 'l-store-copy f#0 0'
debug: Replaced main_bool_merge@27.ops[8]: 'v-load f#0' with 'l-load f#0'
debug: Inserted main_bool_merge@27.ops[9]: 'l-store-copy f#0 1'
debug: Replaced main_bool_merge@27.ops[19]: 'v-load f#0' with 'l-load f#0'
debug: Inserted main_bool_merge@27.ops[11]: 'l-store-copy aggregate%item_offset%0#0 2'
debug: Replaced main_bool_merge@27.ops[21]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted main_bare_routing@15.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_bare_routing@15.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_transient@17.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_transient@17.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_transient@17.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_transient@17.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Found 7 edge set/s for test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init
debug: Allocated 2 variable/s to x-stack: or_result%0#0, or_result%1#0
debug: shared x-stack for main_bool_true@21 -> main_bool_merge@23: or_result%0#0
debug: shared x-stack for main_bool_false@22 -> main_bool_merge@23: or_result%0#0
debug: shared x-stack for main_bool_true@25 -> main_bool_merge@27: or_result%1#0
debug: shared x-stack for main_bool_false@26 -> main_bool_merge@27: or_result%1#0
debug: test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init f-stack entry: ['d#0', 'e.1#0', 'f#0', 'g#0', 'e.0#0', 'h#0', 'i#0']
debug: test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init f-stack on first store: []
debug: optimizing TEAL subroutine ops test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine blocks test_cases.arc_56.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
arc_56/contract.py:54 debug: replacing `b main_after_if_else@18` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_switch_case_next@6 into main
debug: inlining single reference block main_or_contd@20 into main_with_constant_defaults_route@14
debug: inlining single reference block main_or_contd@24 into main_bool_merge@23
debug: inlining single reference block main_if_body@32 into main_conditional_emit_route@12
debug: removing explicit jump to fall-through block main_after_if_else@18
debug: removing explicit jump to fall-through block main_bool_true@21
debug: removing explicit jump to fall-through block main_bool_merge@23
debug: removing explicit jump to fall-through block main_bool_true@25
debug: removing explicit jump to fall-through block main_bool_merge@27
debug: removing explicit jump to fall-through block main_after_if_else@33
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing arc_56/out_O2/Contract.approval.teal
info: Writing arc_56/out_O2/Contract.clear.teal
info: Writing arc_56/out_O2/Contract.approval.bin
info: Writing arc_56/out_O2/Contract.clear.bin
info: Writing arc_56/out_O2/Contract.approval.stats.txt
info: Writing arc_56/out_O2/Contract.clear.stats.txt
info: Writing arc_56/out_O2/Contract.approval.puya.map
info: Writing arc_56/out_O2/Contract.clear.puya.map