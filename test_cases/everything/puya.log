debug: PuyaOptions(paths=['everything'], output_teal=True, output_arc32=True, output_client=True, output_awst=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>, target_avm_version=10, locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>)
info: Found python prefix: <git root>/.venv
debug: Sealing block@0: // L11
debug: Terminated block@0: // L11
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L19
debug: Terminated block@1: // while_top_L19
debug: Sealing block@None: // while_body_L19
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L19
debug: Terminated block@2: // while_body_L19
debug: Sealing block@None: // switch_case_default_L25
debug: Sealing block@None: // switch_case_0_L27
debug: Sealing block@None: // switch_case_1_L29
debug: Terminated block@3: // switch_case_0_L27
debug: Terminated block@4: // switch_case_1_L29
debug: Terminated block@5: // switch_case_default_L25
debug: Sealing block@6: // switch_case_next_L25
debug: Terminated block@6: // switch_case_next_L25
debug: Sealing block@1: // while_top_L19
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L25
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L25
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L19
debug: Terminated block@7: // after_while_L19
debug: Sealing block@0: // L20
debug: Terminated block@0: // L20
debug: Sealing block@0: // L39
debug: Terminated block@0: // L39
debug: Sealing block@0: // L57
debug: Terminated block@0: // L57
debug: Sealing block@0: // L84
debug: Terminated block@0: // L84
debug: Sealing block@None: // if_body_L106
debug: Sealing block@None: // else_body_L106
debug: Terminated block@1: // if_body_L106
debug: Sealing block@2: // after_if_else_L106
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L106
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L84
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L106
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L84
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L106
debug: Sealing block@None: // ternary_true_L110
debug: Sealing block@None: // ternary_false_L110
debug: Terminated block@3: // ternary_true_L110
debug: Terminated block@4: // ternary_false_L110
debug: Sealing block@5: // ternary_merge_L110
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@5: // ternary_merge_L110
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@3) in block@3: // ternary_true_L110
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@3, ternary_result%0#1 <- block@4) in block@4: // ternary_false_L110
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L106
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L84
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0 in current definition for 1 blocks
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3) in block@3: // ternary_true_L110
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@5: // ternary_merge_L110
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@6: // for_header_L110
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@6: // for_header_L110
debug: Terminated block@6: // for_header_L110
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@7: // for_body_L110
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@7: // for_body_L110
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@7: // for_body_L110
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@7: // for_body_L110
debug: Terminated block@7: // for_body_L110
debug: Sealing block@8: // for_footer_L110
debug: Terminated block@8: // for_footer_L110
debug: Sealing block@9: // for_increment_L110
debug: Terminated block@9: // for_increment_L110
debug: Sealing block@6: // for_header_L110
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5, range_item%0#3 <- block@9) in block@9: // for_increment_L110
debug: Sealing block@7: // for_body_L110
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@6: // for_header_L110
debug: Created Phi assignment: let result#5: bytes = undefined while trying to resolve 'result' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let result#6: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L106
debug: Added result#0 to Phi node: let result#6: bytes = φ(result#0 <- block@0) in block@0: // L84
debug: Added result#1 to Phi node: let result#6: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L106
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3) in block@3: // ternary_true_L110
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6
debug: Deleting Phi assignment: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4)
debug: Replaced trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6 in current definition for 1 blocks
debug: Added result#6 to Phi node: let result#4: bytes = φ(result#6 <- block@5) in block@5: // ternary_merge_L110
debug: Added result#3 to Phi node: let result#4: bytes = φ(result#6 <- block@5, result#3 <- block@9) in block@9: // for_increment_L110
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4
debug: Deleting Phi assignment: let result#2: bytes = φ(result#4 <- block@6)
debug: Replaced trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4 in current definition for 0 blocks
debug: Created Phi assignment: let write_offset#3: uint64 = undefined while trying to resolve 'write_offset' in block@6: // for_header_L110
debug: Created Phi assignment: let write_offset#4: uint64 = undefined while trying to resolve 'write_offset' in block@5: // ternary_merge_L110
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3) in block@3: // ternary_true_L110
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0
debug: Deleting Phi assignment: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4)
debug: Replaced trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0 in current definition for 1 blocks
debug: Added write_offset#0 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added write_offset#2 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5, write_offset#2 <- block@9) in block@9: // for_increment_L110
debug: Added write_offset#3 to Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3
debug: Deleting Phi assignment: let write_offset#1: uint64 = φ(write_offset#3 <- block@6)
debug: Replaced trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3 in current definition for 0 blocks
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@6: // for_header_L110
debug: Created Phi assignment: let new_items_bytes#3: bytes = undefined while trying to resolve 'new_items_bytes' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let new_items_bytes#4: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L106
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L84
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3) in block@3: // ternary_true_L110
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@9) in block@9: // for_increment_L110
debug: Added new_items_bytes#2 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6)
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L110
debug: Terminated block@10: // after_for_L110
debug: Sealing block@0: // L117
debug: Terminated block@0: // L117
debug: Sealing block@0: // L139
debug: Terminated block@0: // L139
debug: Sealing block@0: // L166
debug: Terminated block@0: // L166
debug: Sealing block@0: // L195
debug: Terminated block@0: // L195
debug: Sealing block@None: // if_body_L210
debug: Sealing block@None: // else_body_L210
debug: Terminated block@1: // if_body_L210
debug: Terminated block@2: // else_body_L210
debug: Sealing block@3: // after_if_else_L210
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@3: // after_if_else_L210
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1) in block@1: // if_body_L210
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0 in current definition for 1 blocks
debug: Created Phi assignment: let start_at_index#1: uint64 = undefined while trying to resolve 'start_at_index' in block@3: // after_if_else_L210
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1) in block@1: // if_body_L210
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0
debug: Deleting Phi assignment: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2)
debug: Replaced trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0 in current definition for 1 blocks
debug: Terminated block@3: // after_if_else_L210
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@4: // for_header_L215
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@4: // for_header_L215
debug: Terminated block@4: // for_header_L215
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@5: // for_body_L215
debug: Looking for 'tail_cursor' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let tail_cursor#2: uint64 = undefined while trying to resolve 'tail_cursor' in block@5: // for_body_L215
debug: Looking for 'array_data' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let array_data#1: bytes = undefined while trying to resolve 'array_data' in block@5: // for_body_L215
debug: Looking for 'header_cursor' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let header_cursor#1: uint64 = undefined while trying to resolve 'header_cursor' in block@5: // for_body_L215
debug: Terminated block@5: // for_body_L215
debug: Sealing block@6: // for_footer_L215
debug: Terminated block@6: // for_footer_L215
debug: Sealing block@7: // for_increment_L215
debug: Terminated block@7: // for_increment_L215
debug: Sealing block@4: // for_header_L215
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@3) in block@3: // after_if_else_L210
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@3, range_item%0#3 <- block@7) in block@7: // for_increment_L215
debug: Sealing block@5: // for_body_L215
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let tail_cursor#4: uint64 = undefined while trying to resolve 'tail_cursor' in block@4: // for_header_L215
debug: Created Phi assignment: let tail_cursor#5: uint64 = undefined while trying to resolve 'tail_cursor' in block@3: // after_if_else_L210
debug: Added tail_cursor#0 to Phi node: let tail_cursor#5: uint64 = φ(tail_cursor#0 <- block@1) in block@1: // if_body_L210
debug: Added tail_cursor#1 to Phi node: let tail_cursor#5: uint64 = φ(tail_cursor#0 <- block@1, tail_cursor#1 <- block@2) in block@2: // else_body_L210
debug: Added tail_cursor#5 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#5 <- block@3) in block@3: // after_if_else_L210
debug: Added tail_cursor#3 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#5 <- block@3, tail_cursor#3 <- block@7) in block@7: // for_increment_L215
debug: Added tail_cursor#4 to Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) (tail_cursor#2) with tail_cursor#4
debug: Deleting Phi assignment: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4)
debug: Replaced trivial Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) (tail_cursor#2) with tail_cursor#4 in current definition for 0 blocks
debug: Created Phi assignment: let array_data#3: bytes = undefined while trying to resolve 'array_data' in block@4: // for_header_L215
debug: Created Phi assignment: let array_data#4: bytes = undefined while trying to resolve 'array_data' in block@3: // after_if_else_L210
debug: Added array_data#0 to Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1) in block@1: // if_body_L210
debug: Added array_data#0 to Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#4) with array_data#0
debug: Deleting Phi assignment: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2)
debug: Replaced trivial Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#4) with array_data#0 in current definition for 1 blocks
debug: Added array_data#0 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@3) in block@3: // after_if_else_L210
debug: Added array_data#2 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@3, array_data#2 <- block@7) in block@7: // for_increment_L215
debug: Added array_data#3 to Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) (array_data#1) with array_data#3
debug: Deleting Phi assignment: let array_data#1: bytes = φ(array_data#3 <- block@4)
debug: Replaced trivial Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) (array_data#1) with array_data#3 in current definition for 0 blocks
debug: Created Phi assignment: let header_cursor#3: uint64 = undefined while trying to resolve 'header_cursor' in block@4: // for_header_L215
debug: Created Phi assignment: let header_cursor#4: uint64 = undefined while trying to resolve 'header_cursor' in block@3: // after_if_else_L210
debug: Added header_cursor#0 to Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1) in block@1: // if_body_L210
debug: Added header_cursor#0 to Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#4) with header_cursor#0
debug: Deleting Phi assignment: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2)
debug: Replaced trivial Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#4) with header_cursor#0 in current definition for 1 blocks
debug: Added header_cursor#0 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@3) in block@3: // after_if_else_L210
debug: Added header_cursor#2 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@3, header_cursor#2 <- block@7) in block@7: // for_increment_L215
debug: Added header_cursor#3 to Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) (header_cursor#1) with header_cursor#3
debug: Deleting Phi assignment: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4)
debug: Replaced trivial Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) (header_cursor#1) with header_cursor#3 in current definition for 0 blocks
debug: Sealing block@None: // after_for_L215
debug: Terminated block@8: // after_for_L215
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L41
debug: Terminated block@0: // L41
debug: Sealing block@0: // L77
debug: Terminated block@0: // L77
debug: Sealing block@0: // L23
debug: Terminated block@0: // L23
debug: Sealing block@0: // L7
debug: Terminated block@0: // L7
debug: Sealing block@0: // L47
debug: Terminated block@0: // L47
debug: Sealing block@None: // if_body_L50
debug: Sealing block@None: // else_body_L50
debug: Terminated block@1: // if_body_L50
debug: Sealing block@None: // if_body_L52
debug: Sealing block@None: // else_body_L52
debug: Terminated block@2: // if_body_L52
debug: Sealing block@3: // after_if_else_L52
debug: Terminated block@3: // after_if_else_L52
debug: Sealing block@4: // after_if_else_L50
debug: Created Phi assignment: let name#1: bytes = undefined while trying to resolve 'name' in block@4: // after_if_else_L50
debug: Added name#0 to Phi node: let name#1: bytes = φ(name#0 <- block@0) in block@0: // L47
debug: Created Phi assignment: let name#2: bytes = undefined while trying to resolve 'name' in block@3: // after_if_else_L52
debug: Added name#0 to Phi node: let name#2: bytes = φ(name#0 <- block@1) in block@1: // if_body_L50
debug: Added name#0 to Phi node: let name#2: bytes = φ(name#0 <- block@1, name#0 <- block@2) in block@2: // if_body_L52
debug: Replacing trivial Phi node: let name#2: bytes = φ(name#0 <- block@1, name#0 <- block@2) (name#2) with name#0
debug: Deleting Phi assignment: let name#2: bytes = φ(name#0 <- block@1, name#0 <- block@2)
debug: Replaced trivial Phi node: let name#2: bytes = φ(name#0 <- block@1, name#0 <- block@2) (name#2) with name#0 in current definition for 1 blocks
debug: Added name#0 to Phi node: let name#1: bytes = φ(name#0 <- block@0, name#0 <- block@3) in block@3: // after_if_else_L52
debug: Replacing trivial Phi node: let name#1: bytes = φ(name#0 <- block@0, name#0 <- block@3) (name#1) with name#0
debug: Deleting Phi assignment: let name#1: bytes = φ(name#0 <- block@0, name#0 <- block@3)
debug: Replaced trivial Phi node: let name#1: bytes = φ(name#0 <- block@0, name#0 <- block@3) (name#1) with name#0 in current definition for 1 blocks
debug: Terminated block@4: // after_if_else_L50
debug: Sealing block@0: // L18
debug: Terminated block@0: // L18
debug: Sealing block@0: // L56
debug: Terminated block@0: // L56
debug: Sealing block@None: // if_body_L60
debug: Sealing block@None: // else_body_L60
debug: Terminated block@1: // if_body_L60
debug: Sealing block@2: // after_if_else_L60
debug: Terminated block@2: // after_if_else_L60
debug: Sealing block@0: // L64
debug: Terminated block@0: // L64
debug: Sealing block@0: // L13
debug: Terminated block@0: // L13
debug: Sealing block@0: // L69
debug: Terminated block@0: // L69
debug: Sealing block@0: // L81
debug: Terminated block@0: // L81
debug: Sealing block@0: // L86
debug: Terminated block@0: // L86
debug: Sealing block@0: // L37
debug: Terminated block@0: // L37
debug: Sealing block@None: // switch_case_default_L37
debug: Sealing block@None: // create_route_L41
debug: Sealing block@None: // register_route_L47
debug: Sealing block@None: // say_hello_route_L56
debug: Sealing block@None: // calculate_route_L64
debug: Sealing block@None: // close_out_route_L69
debug: Terminated block@1: // create_route_L41
debug: Terminated block@2: // register_route_L47
debug: Terminated block@3: // say_hello_route_L56
debug: Terminated block@4: // calculate_route_L64
debug: Terminated block@5: // close_out_route_L69
debug: Terminated block@6: // switch_case_default_L37
debug: Sealing block@7: // switch_case_next_L37
debug: Terminated block@7: // switch_case_next_L37
debug: Sealing block@0: // L73
debug: Terminated block@0: // L73
debug: Output IR to everything/out/MyContract.ssa.ir
info: Optimizing test_cases.everything.contract.Everything at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%1#0 NoOp) to (! tmp%1#0)
debug: Simplified (== tmp%9#0 NoOp) to (! tmp%9#0)
debug: Simplified (== tmp%14#0 NoOp) to (! tmp%14#0)
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@0: // L37 as a predecessor of block@7: // switch_case_next_L37 due to inlining of block@6: // switch_case_default_L37
debug: simplified terminator of block@0: // L37 from switch tmp%0#0 {method "create()void" => block@1, method "register(string)void" => block@2, method "say_hello()string" => block@3, method "calculate(uint64,uint64)uint64" => block@4, method "close_out()void" => block@5, * => block@6} to switch tmp%0#0 {method "create()void" => block@1, method "register(string)void" => block@2, method "say_hello()string" => block@3, method "calculate(uint64,uint64)uint64" => block@4, method "close_out()void" => block@5, * => block@7}
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@0: // L37 from switch tmp%0#0 {method "create()void" => block@1, method "register(string)void" => block@2, method "say_hello()string" => block@3, method "calculate(uint64,uint64)uint64" => block@4, method "close_out()void" => block@5, * => block@7} to switch tmp%0#0 {method "create()void" => block@1, method "register(string)void" => block@2, method "say_hello()string" => block@3, method "calculate(uint64,uint64)uint64" => block@4, method "close_out()void" => block@5, * => fail // reject transaction}
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@7: // switch_case_next_L37 into block@6: // switch_case_default_L37
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@6: // switch_case_default_L37
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable addr#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, sender_name#0
debug: Replacing {tuple_assignment%0#0} with sender_name#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, sender_name_existed#0
debug: Replacing {tuple_assignment%1#0} with sender_name_existed#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3: // after_if_else_L52
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, name#0
debug: Replacing {tuple_assignment%0#0} with name#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Replacing {tuple_assignment%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "Howdy stranger!") to 15u
debug: Simplified (len "Hello, ") to 7u
debug: Simplified (len "!") to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to everything/out/MyContract.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) value_as_bytes%0#0) to 0x000f
debug: Simplified ((extract 6 2) value_as_bytes%1#0) to 0x0007
debug: Simplified ((extract 6 2) value_as_bytes%2#0) to 0x0001
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length%0#0
debug: Removing unused variable value_as_bytes%0#0
debug: Removing unused variable length%1#0
debug: Removing unused variable value_as_bytes%1#0
debug: Removing unused variable length%2#0
debug: Removing unused variable value_as_bytes%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to everything/out/MyContract.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x000f "Howdy stranger!") to 0x000f486f77647920737472616e67657221
debug: Simplified (concat 0x0007 "Hello, ") to 0x000748656c6c6f2c20
debug: Simplified (concat 0x0001 "!") to 0x000121
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value_as_uint16%0#0
debug: Removing unused variable value_as_uint16%1#0
debug: Removing unused variable value_as_uint16%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to everything/out/MyContract.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 2 0) 0x000748656c6c6f2c20) to 0x48656c6c6f2c20
debug: Simplified ((extract 2 0) 0x000121) to 0x21
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to everything/out/MyContract.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable expr_value_trimmed%0#0
debug: Removing unused variable expr_value_trimmed%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to everything/out/MyContract.ssa.opt_pass_5.ir
debug: Begin optimization pass 6/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 6, ending loop
debug: Removing Phis from test_cases.everything.contract.Everything.approval_program
debug: Removing Phis from test_cases.everything.contract.Everything.create
debug: Removing Phis from test_cases.everything.contract.Everything._check_ban_list
debug: Removing Phis from test_cases.everything.contract.get_banned
debug: Removing Phis from test_cases.everything.my_base.MyBase.remember_creator
debug: Removing Phis from test_cases.everything.contract.Everything.register
debug: Removing Phis from test_cases.everything.my_base.multiplicative_identity
debug: Removing Phis from test_cases.everything.contract.Everything.say_hello
debug: Removing Phis from test_cases.everything.contract.Everything.calculate
debug: Removing Phis from test_cases.everything.my_base.MyMiddleBase.calculate
debug: Removing Phis from test_cases.everything.contract.Everything.close_out
debug: Removing Phis from test_cases.everything.contract.Everything._remove_sender
debug: Removing Phis from test_cases.everything.contract.positive_one
debug: Removing Phis from test_cases.everything.contract.Everything.clear_state_program
debug: Coalescing local variables in test_cases.everything.contract.Everything.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything.create using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything._check_ban_list using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.get_banned using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.my_base.MyBase.remember_creator using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything.register using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.my_base.multiplicative_identity using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything.say_hello using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything.calculate using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.my_base.MyMiddleBase.calculate using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything.close_out using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything._remove_sender using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.positive_one using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.everything.contract.Everything.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.approval_program
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.create
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything._check_ban_list
debug: Sequentializing parallel copies in test_cases.everything.contract.get_banned
debug: Sequentializing parallel copies in test_cases.everything.my_base.MyBase.remember_creator
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.register
debug: Sequentializing parallel copies in test_cases.everything.my_base.multiplicative_identity
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.say_hello
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.calculate
debug: Sequentializing parallel copies in test_cases.everything.my_base.MyMiddleBase.calculate
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.close_out
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything._remove_sender
debug: Sequentializing parallel copies in test_cases.everything.contract.positive_one
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to everything/out/MyContract.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted main_create_route@1.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_create_route@1.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_create_route@1.ops[5]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_create_route@1.ops[7]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_create_route@1.ops[10]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_create_route@1.ops[12]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_create_route@1.ops[14]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_create_route@1.ops[16]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_register_route@2.ops[5]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_register_route@2.ops[7]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_register_route@2.ops[10]: 'store reinterpret_bool%0#0 to l-stack (copy)'
debug: Replaced main_register_route@2.ops[12]: 'load reinterpret_bool%0#0' with 'load reinterpret_bool%0#0 from l-stack (no copy)'
debug: Inserted main_register_route@2.ops[15]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_register_route@2.ops[17]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_register_route@2.ops[20]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_register_route@2.ops[22]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_register_route@2.ops[1]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_register_route@2.ops[4]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@3.ops[1]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@3.ops[3]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@3.ops[5]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@3.ops[7]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@3.ops[10]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@3.ops[12]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@3.ops[19]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@3.ops[21]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@3.ops[15]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@3.ops[18]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[1]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[3]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[5]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[7]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[10]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[12]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[25]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[27]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[17]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[20]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[22]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[25]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@4.ops[15]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_calculate_route@4.ops[20]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_close_out_route@5.ops[1]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_close_out_route@5.ops[3]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_close_out_route@5.ops[6]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_close_out_route@5.ops[8]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_close_out_route@5.ops[11]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_close_out_route@5.ops[13]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Found 1 edge set/s for test_cases.everything.contract.Everything.approval_program
debug: Inserted _check_ban_list_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _check_ban_list_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _check_ban_list_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _check_ban_list_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _check_ban_list_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _check_ban_list_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted remember_creator_block@0.ops[1]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced remember_creator_block@0.ops[4]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted register_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced register_block@0.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted register_block@0.ops[7]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced register_block@0.ops[9]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted register_if_body@1.ops[4]: 'store sender_name_existed#0 to l-stack (copy)'
debug: Replaced register_if_body@1.ops[7]: 'load sender_name_existed#0' with 'load sender_name_existed#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[3]: 'store counter_exists%0#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[6]: 'load counter_exists%0#0' with 'load counter_exists%0#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[14]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[17]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[5]: 'store counter_value%0#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[12]: 'load counter_value%0#0' with 'load counter_value%0#0 from l-stack (no copy)'
debug: Found 1 edge set/s for test_cases.everything.contract.Everything.register
debug: Inserted say_hello_block@0.ops[5]: 'store exists#0 to l-stack (copy)'
debug: Replaced say_hello_block@0.ops[8]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[6]: 'store concatenated%0#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[8]: 'load concatenated%0#0' with 'load concatenated%0#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[10]: 'store len_%0#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[12]: 'load len_%0#0' with 'load len_%0#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[14]: 'store len_bytes%0#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[16]: 'load len_bytes%0#0' with 'load len_bytes%0#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[18]: 'store len_16_bit%0#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[20]: 'load len_16_bit%0#0' with 'load len_16_bit%0#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[23]: 'store concat_result%0#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[25]: 'load concat_result%0#0' with 'load concat_result%0#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[27]: 'store expr_value_trimmed%2#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[29]: 'load expr_value_trimmed%2#0' with 'load expr_value_trimmed%2#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[32]: 'store concatenated%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[34]: 'load concatenated%1#0' with 'load concatenated%1#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[36]: 'store len_%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[38]: 'load len_%1#0' with 'load len_%1#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[40]: 'store len_bytes%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[42]: 'load len_bytes%1#0' with 'load len_bytes%1#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[44]: 'store len_16_bit%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[46]: 'load len_16_bit%1#0' with 'load len_16_bit%1#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[49]: 'store concat_result%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[51]: 'load concat_result%1#0' with 'load concat_result%1#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[2]: 'store expr_value_trimmed%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[5]: 'load expr_value_trimmed%1#0' with 'load expr_value_trimmed%1#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[10]: 'store concatenated%0#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[23]: 'load concatenated%0#0' with 'load concatenated%0#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[37]: 'store concatenated%1#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[50]: 'load concatenated%1#0' with 'load concatenated%1#0 from l-stack (no copy)'
debug: Found 1 edge set/s for test_cases.everything.contract.Everything.say_hello
debug: test_cases.everything.contract.Everything.say_hello f-stack entry: []
debug: test_cases.everything.contract.Everything.say_hello f-stack on first store: ['name#0']
debug: Inserted calculate_block@0.ops[3]: 'store c#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[5]: 'load c#0' with 'load c#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[18]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[20]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[13]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[7]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[13]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[13]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[15]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[5]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[8]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[3]: 'store counter_exists%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[6]: 'load counter_exists%0#0' with 'load counter_exists%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[9]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[14]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[17]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[5]: 'store counter_value%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load counter_value%0#0' with 'load counter_value%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[3]: 'store counter_exists%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[6]: 'load counter_exists%0#0' with 'load counter_exists%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[9]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[14]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[17]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[5]: 'store counter_value%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load counter_value%0#0' with 'load counter_value%0#0 from l-stack (no copy)'
info: Writing everything/out/MyContract.approval.teal
info: Writing everything/out/MyContract.clear.teal
info: Writing everything/out/MyContract.arc32.json
info: Writing everything/out/client_MyContract.py