debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['everything'], output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing everything/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.everything.my_base.multiplicative_identity
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.get_banned
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.add_one
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.positive_one
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.everything.contract.Everything.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything.create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything.register
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
everything/contract.py:53:17 debug: encountered already materialized expression ('counter'), reusing result: "counter"
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let name#1: Encoded(len+utf8[]) = undefined while trying to resolve 'name' in block@4
debug: Added name#0 to Phi node: let name#1: Encoded(len+utf8[]) = φ(name#0 <- block@0) in block@0
debug: Created Phi assignment: let name#2: Encoded(len+utf8[]) = undefined while trying to resolve 'name' in block@3
debug: Added name#0 to Phi node: let name#2: Encoded(len+utf8[]) = φ(name#0 <- block@1) in block@1
debug: Added name#0 to Phi node: let name#2: Encoded(len+utf8[]) = φ(name#0 <- block@1, name#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let name#2: Encoded(len+utf8[]) = φ(name#0 <- block@1, name#0 <- block@2) (name#2) with name#0
debug: Deleting Phi assignment: let name#2: Encoded(len+utf8[]) = φ(name#0 <- block@1, name#0 <- block@2)
debug: Replaced trivial Phi node: let name#2: Encoded(len+utf8[]) = φ(name#0 <- block@1, name#0 <- block@2) (name#2) with name#0 in current definition for 1 blocks
debug: Added name#0 to Phi node: let name#1: Encoded(len+utf8[]) = φ(name#0 <- block@0, name#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let name#1: Encoded(len+utf8[]) = φ(name#0 <- block@0, name#0 <- block@3) (name#1) with name#0
debug: Deleting Phi assignment: let name#1: Encoded(len+utf8[]) = φ(name#0 <- block@0, name#0 <- block@3)
debug: Replaced trivial Phi node: let name#1: Encoded(len+utf8[]) = φ(name#0 <- block@0, name#0 <- block@3) (name#1) with name#0 in current definition for 1 blocks
debug: Terminated block@4
debug: Building IR for function test_cases.everything.contract.Everything.say_hello
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function test_cases.everything.contract.Everything.calculate
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything.close_out
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything._check_ban_list
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything._remove_sender
debug: Sealing block@0
everything/contract.py:83:9 debug: encountered already materialized expression ('counter'), reusing result: "counter"
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.my_base.MyMiddleBase.calculate
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.my_base.MyBase.remember_creator
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.everything.contract.add_one
debug: removing unused subroutine test_cases.everything.contract.Everything.clear_state_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.everything.contract.Everything.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.everything.my_base.multiplicative_identity
debug: removing unused subroutine test_cases.everything.contract.get_banned
debug: removing unused subroutine test_cases.everything.contract.add_one
debug: removing unused subroutine test_cases.everything.contract.Everything.__puya_arc4_router__
debug: removing unused subroutine test_cases.everything.contract.Everything.__init__
debug: removing unused subroutine test_cases.everything.contract.Everything.create
debug: removing unused subroutine test_cases.everything.contract.Everything.register
debug: removing unused subroutine test_cases.everything.contract.Everything.say_hello
debug: removing unused subroutine test_cases.everything.contract.Everything.calculate
debug: removing unused subroutine test_cases.everything.contract.Everything.close_out
debug: removing unused subroutine test_cases.everything.contract.Everything.clear_state_program
debug: removing unused subroutine test_cases.everything.contract.Everything._check_ban_list
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: removing unused subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.000.ssa.ir
debug: Output IR to everything/out/MyContract.ir/MyContract.clear.000.ssa.ir
debug: optimizing approval program of test_cases.everything.contract.Everything at level 1
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.everything.my_base.multiplicative_identity as inlineable
debug: marking single-use function test_cases.everything.contract.get_banned for inlining
debug: marking trivial method test_cases.everything.contract.positive_one as inlineable
debug: marking trivial method test_cases.everything.contract.Everything.__init__ as inlineable
debug: marking single-use function test_cases.everything.contract.Everything._remove_sender for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: marking single-use function test_cases.everything.my_base.MyMiddleBase.calculate for inlining
debug: marking single-use function test_cases.everything.my_base.MyBase.remember_creator for inlining
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: inlining call to test_cases.everything.contract.Everything.__init__ in test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.my_base.multiplicative_identity
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.get_banned
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable addr#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%5#0 0u) to (! tmp%5#0)
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (== tmp%18#0 NoOp) to (! tmp%18#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@8 with block@7 in block@10
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@7
debug: Removed empty block: block@9
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:44:9 debug: inlining call to test_cases.everything.my_base.MyBase.remember_creator in test_cases.everything.contract.Everything.create
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:53:33 debug: inlining call to test_cases.everything.my_base.multiplicative_identity in test_cases.everything.contract.Everything.register
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, sender_name#0
debug: selected sender_name#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, sender_name_existed#0
debug: selected sender_name_existed#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@2 in block@6
debug: Merged linear block@5 into block@2
debug: Replaced predecessor block@6 with block@2 in block@3
debug: Merged linear block@6 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, name#0
debug: selected name#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+utf8[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+utf8[])%1#0
debug: selected replace%1#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Removing unused variable array_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (/ len%0#0 1u) to len%0#0
debug: Simplified (/ len%1#0 1u) to len%1#0
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:66:13 debug: inlining call to test_cases.everything.my_base.MyMiddleBase.calculate in test_cases.everything.contract.Everything.calculate
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a#0, a#1
debug: selected a#0 from equivalence set
debug: Found equivalence set: b#0, b#1
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%0#0, c#0
debug: selected c#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: uint64 = decode_bytes<uint64>(b#0) with copy of existing registers (Register(source_location=everything/my_base.py:15:38-46, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, tmp%2#0
debug: selected tmp%1#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: tmp%2#1
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:71:9 debug: inlining call to test_cases.everything.contract.Everything._remove_sender in test_cases.everything.contract.Everything.close_out
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:79:33 debug: inlining call to test_cases.everything.contract.get_banned in test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:83:25 debug: inlining call to test_cases.everything.contract.positive_one in test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.everything.contract.Everything.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%27#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@8
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.everything.my_base.multiplicative_identity
debug: removing unused subroutine test_cases.everything.contract.get_banned
debug: removing unused subroutine test_cases.everything.contract.Everything.__init__
debug: removing unused subroutine test_cases.everything.contract.Everything._remove_sender
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine test_cases.everything.my_base.MyMiddleBase.calculate
debug: removing unused subroutine test_cases.everything.my_base.MyBase.remember_creator
debug: Unused subroutines removed
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.everything.contract.positive_one as inlineable
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.everything.contract.Everything.__puya_arc4_router__ in test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%27#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@10
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%27#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: len%0#0, div_floor%0#0
debug: selected len%0#0 from equivalence set
debug: Found equivalence set: len%1#0, div_floor%1#0
debug: selected len%1#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#1, tmp%1#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let c#0: Encoded(uint64) = bytes_encode<uint64>(tmp%2#1)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:83:25 debug: inlining call to test_cases.everything.contract.positive_one in test_cases.everything.contract.Everything.close_out
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.everything.contract.positive_one
debug: removing unused subroutine test_cases.everything.contract.Everything.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: marking simple function test_cases.everything.contract.Everything._check_ban_list for inlining (complexity=3 <= threshold=3)
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:43:9 debug: inlining call to test_cases.everything.contract.Everything._check_ban_list in test_cases.everything.contract.Everything.create
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:49:9 debug: inlining call to test_cases.everything.contract.Everything._check_ban_list in test_cases.everything.contract.Everything.register
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@4
debug: Replaced predecessor block@6 with block@0 in block@1
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:58:9 debug: inlining call to test_cases.everything.contract.Everything._check_ban_list in test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@1
debug: Replaced predecessor block@4 with block@0 in block@2
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let c#0: Encoded(uint64) = bytes_encode<uint64>(tmp%2#1)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.everything.contract.Everything._check_ban_list
debug: Unused subroutines removed
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let c#0: Encoded(uint64) = bytes_encode<uint64>(tmp%2#1)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.everything.contract.Everything at level 1
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.everything.contract.positive_one as inlineable
debug: marking single-use function test_cases.everything.contract.Everything._remove_sender for inlining
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:74:9 debug: inlining call to test_cases.everything.contract.Everything._remove_sender in test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:83:25 debug: inlining call to test_cases.everything.contract.positive_one in test_cases.everything.contract.Everything._remove_sender
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.everything.contract.Everything._remove_sender
debug: Unused subroutines removed
debug: Output IR to everything/out/MyContract.ir/MyContract.clear.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.everything.contract.positive_one as inlineable
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
everything/contract.py:83:25 debug: inlining call to test_cases.everything.contract.positive_one in test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.positive_one
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.everything.contract.positive_one
debug: Unused subroutines removed
debug: Output IR to everything/out/MyContract.ir/MyContract.clear.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: lowering array IR nodes in approval program of test_cases.everything.contract.Everything
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.everything.contract.Everything
debug: Output IR to everything/out/MyContract.ir/MyContract.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.everything.contract.Everything at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#1, aggregate%as_Encoded(len+utf8[])%0#1, encoded%0#0
debug: selected aggregate%encoded_value%0#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#1, aggregate%as_Encoded(len+utf8[])%1#1, encoded%1#0
debug: selected aggregate%encoded_value%1#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#1, aggregate%as_Encoded(len+utf8[])%2#1, encoded%2#0
debug: selected aggregate%encoded_value%2#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x486f77647920737472616e67657221) to 15u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#1) to 0x000f
debug: Simplified (concat 0x000f 0x486f77647920737472616e67657221) to 0x000f486f77647920737472616e67657221
debug: Simplified (len 0x48656c6c6f2c20) to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#1) to 0x0007
debug: Simplified (concat 0x0007 0x48656c6c6f2c20) to 0x000748656c6c6f2c20
debug: Simplified (len 0x21) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#1) to 0x0001
debug: Simplified (concat 0x0001 0x21) to 0x000121
debug: Simplified ((extract 2 0) 0x000121) to 0x21
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#1, aggregate%as_Encoded(uint64)%0#1, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#1, aggregate%as_Encoded(uint64)%1#1, tmp%4#0
debug: selected aggregate%val_as_bytes%1#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable c#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#1
debug: Removing unused variable aggregate%as_bytes%0#1
debug: Removing unused variable aggregate%length_uint16%0#1
debug: Removing unused variable aggregate%encoded_value%0#1
debug: Removing unused variable aggregate%length%1#1
debug: Removing unused variable aggregate%as_bytes%1#1
debug: Removing unused variable aggregate%length_uint16%1#1
debug: Removing unused variable aggregate%encoded_value%1#1
debug: Removing unused variable aggregate%length%2#1
debug: Removing unused variable aggregate%as_bytes%2#1
debug: Removing unused variable aggregate%length_uint16%2#1
debug: Removing unused variable aggregate%encoded_value%2#1
debug: Removing unused variable extract_to_end%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.register
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.say_hello
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.calculate
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.everything.contract.Everything.close_out
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.everything.contract.Everything at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.everything.contract.Everything.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.everything.contract.Everything
debug: auto reserving slots in test_cases.everything.contract.Everything.__algopy_entrypoint_with_init, []
everything/contract.py:41 debug: auto reserving slots in test_cases.everything.contract.Everything.create, []
everything/contract.py:47 debug: auto reserving slots in test_cases.everything.contract.Everything.register, []
everything/contract.py:56 debug: auto reserving slots in test_cases.everything.contract.Everything.say_hello, []
everything/contract.py:64 debug: auto reserving slots in test_cases.everything.contract.Everything.calculate, []
everything/contract.py:69 debug: auto reserving slots in test_cases.everything.contract.Everything.close_out, []
debug: Slot allocation not required
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.everything.contract.Everything
everything/contract.py:73 debug: auto reserving slots in test_cases.everything.contract.Everything.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to everything/out/MyContract.ir/MyContract.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 with [test_cases.everything.contract.Everything.__puya_arc4_router__%0#1, test_cases.everything.contract.Everything.__puya_arc4_router__%0#2, test_cases.everything.contract.Everything.__puya_arc4_router__%0#3, test_cases.everything.contract.Everything.__puya_arc4_router__%0#4, test_cases.everything.contract.Everything.__puya_arc4_router__%0#5]
debug: Coalescing tmp%0#1 with [tmp%0#3]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.create
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.create using strategy RootOperandGrouping
debug: Coalescing tmp%0#0 with [tmp%0#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.create
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.register
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.register using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.register
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.say_hello
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.say_hello using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.say_hello
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.calculate
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.calculate using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.calculate
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.close_out
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.close_out using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.close_out
debug: Performing post-SSA optimizations at level 1
debug: Output IR to everything/out/MyContract.ir/MyContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.everything.contract.Everything.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.everything.contract.Everything.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.everything.contract.Everything.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to everything/out/MyContract.ir/MyContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_create_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_create_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_create_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_create_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_create_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_create_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_create_route@5.ops[14]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_create_route@5.ops[16]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_create_route@5.ops[20]: 'l-store-copy test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0'
debug: Replaced main_create_route@5.ops[22]: 'v-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0' with 'l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0'
debug: Inserted main_register_route@6.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_register_route@6.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_register_route@6.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_register_route@6.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_register_route@6.ops[15]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_register_route@6.ops[17]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_register_route@6.ops[20]: 'l-store-copy reinterpret_Encoded(len+utf8[])%0#0 0'
debug: Replaced main_register_route@6.ops[22]: 'v-load reinterpret_Encoded(len+utf8[])%0#0' with 'l-load reinterpret_Encoded(len+utf8[])%0#0'
debug: Inserted main_register_route@6.ops[25]: 'l-store-copy test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0'
debug: Replaced main_register_route@6.ops[27]: 'v-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0' with 'l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0'
debug: Inserted main_register_route@6.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_register_route@6.ops[4]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_say_hello_route@7.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_say_hello_route@7.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_say_hello_route@7.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_say_hello_route@7.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_say_hello_route@7.ops[10]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_say_hello_route@7.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_say_hello_route@7.ops[19]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_say_hello_route@7.ops[21]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_say_hello_route@7.ops[24]: 'l-store-copy test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0'
debug: Replaced main_say_hello_route@7.ops[26]: 'v-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0' with 'l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0'
debug: Inserted main_say_hello_route@7.ops[15]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_say_hello_route@7.ops[18]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_calculate_route@8.ops[1]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_calculate_route@8.ops[3]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_calculate_route@8.ops[5]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_calculate_route@8.ops[7]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_calculate_route@8.ops[10]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_calculate_route@8.ops[12]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_calculate_route@8.ops[25]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_calculate_route@8.ops[27]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_calculate_route@8.ops[30]: 'l-store-copy test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0'
debug: Replaced main_calculate_route@8.ops[32]: 'v-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0' with 'l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0'
debug: Inserted main_calculate_route@8.ops[17]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced main_calculate_route@8.ops[20]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted main_calculate_route@8.ops[22]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_calculate_route@8.ops[25]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_calculate_route@8.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced main_calculate_route@8.ops[20]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted main_close_out_route@9.ops[1]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_close_out_route@9.ops[3]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_close_out_route@9.ops[6]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_close_out_route@9.ops[8]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_close_out_route@9.ops[11]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_close_out_route@9.ops[13]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_close_out_route@9.ops[17]: 'l-store-copy test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0'
debug: Replaced main_close_out_route@9.ops[19]: 'v-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0' with 'l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@10.ops[1]: 'l-store-copy test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@10.ops[3]: 'v-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0' with 'l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0'
debug: Inserted create_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced create_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted create_block@0.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced create_block@0.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted create_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced create_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted register_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced register_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted register_block@0.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced register_block@0.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted register_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced register_block@0.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted register_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced register_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted register_if_body@1.ops[4]: 'l-store-copy sender_name_existed#0 1'
debug: Replaced register_if_body@1.ops[7]: 'v-load sender_name_existed#0' with 'l-load sender_name_existed#0'
debug: Inserted register_if_body@2.ops[3]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced register_if_body@2.ops[6]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted register_if_body@2.ops[11]: 'l-store-copy tmp%3#0 0'
debug: Replaced register_if_body@2.ops[14]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted register_if_body@2.ops[5]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced register_if_body@2.ops[9]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted say_hello_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced say_hello_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted say_hello_block@0.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced say_hello_block@0.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted say_hello_block@0.ops[14]: 'l-store-copy exists#0 1'
debug: Replaced say_hello_block@0.ops[17]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted say_hello_after_if_else@2.ops[6]: 'l-store-copy concat%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[8]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted say_hello_after_if_else@2.ops[10]: 'l-store-copy extract_to_end%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[12]: 'v-load extract_to_end%1#0' with 'l-load extract_to_end%1#0'
debug: Inserted say_hello_after_if_else@2.ops[14]: 'l-store-copy len%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[16]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted say_hello_after_if_else@2.ops[18]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[20]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted say_hello_after_if_else@2.ops[26]: 'l-store-copy replace%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[28]: 'v-load replace%0#0' with 'l-load replace%0#0'
debug: Inserted say_hello_after_if_else@2.ops[31]: 'l-store-copy concat%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[33]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted say_hello_after_if_else@2.ops[35]: 'l-store-copy extract_to_end%3#0 0'
debug: Replaced say_hello_after_if_else@2.ops[37]: 'v-load extract_to_end%3#0' with 'l-load extract_to_end%3#0'
debug: Inserted say_hello_after_if_else@2.ops[39]: 'l-store-copy len%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[41]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted say_hello_after_if_else@2.ops[43]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[45]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted say_hello_after_if_else@2.ops[51]: 'l-store-copy replace%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[53]: 'v-load replace%1#0' with 'l-load replace%1#0'
debug: Inserted say_hello_after_if_else@2.ops[2]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[5]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted say_hello_after_if_else@2.ops[23]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[26]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted say_hello_after_if_else@2.ops[49]: 'l-store-copy as_u16_bytes%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[52]: 'v-load as_u16_bytes%1#0' with 'l-load as_u16_bytes%1#0'
debug: Inserted say_hello_after_if_else@2.ops[10]: 'l-store-copy concat%0#0 0'
debug: Replaced say_hello_after_if_else@2.ops[26]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted say_hello_after_if_else@2.ops[37]: 'l-store-copy concat%1#0 0'
debug: Replaced say_hello_after_if_else@2.ops[53]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted calculate_block@0.ops[9]: 'l-store-copy tmp%2#1 0'
debug: Replaced calculate_block@0.ops[11]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted calculate_block@0.ops[14]: 'l-store-copy tmp%3#0 0'
debug: Replaced calculate_block@0.ops[16]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted calculate_block@0.ops[18]: 'l-store-copy aggregate%val_as_bytes%1#1 0'
debug: Replaced calculate_block@0.ops[20]: 'v-load aggregate%val_as_bytes%1#1' with 'l-load aggregate%val_as_bytes%1#1'
debug: Inserted calculate_block@0.ops[5]: 'l-store-copy tmp%1#1 0'
debug: Replaced calculate_block@0.ops[8]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted calculate_block@0.ops[2]: 'l-store-copy tmp%0#1 0'
debug: Replaced calculate_block@0.ops[8]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted calculate_block@0.ops[10]: 'l-store-copy tmp%1#1 1'
debug: Replaced calculate_block@0.ops[15]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted close_out_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced close_out_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted close_out_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced close_out_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted close_out_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced close_out_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Found 2 edge set/s for test_cases.everything.contract.Everything.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#1
debug: shared x-stack for main_create_route@5 -> main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11: tmp%0#1
debug: shared x-stack for main_register_route@6 -> main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11: tmp%0#1
debug: shared x-stack for main_say_hello_route@7 -> main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11: tmp%0#1
debug: shared x-stack for main_calculate_route@8 -> main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11: tmp%0#1
debug: shared x-stack for main_close_out_route@9 -> main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11: tmp%0#1
debug: shared x-stack for main_after_if_else@10 -> main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11: tmp%0#1
debug: Found 1 edge set/s for test_cases.everything.contract.Everything.register
debug: Found 1 edge set/s for test_cases.everything.contract.Everything.say_hello
debug: test_cases.everything.contract.Everything.say_hello f-stack entry: []
debug: test_cases.everything.contract.Everything.say_hello f-stack on first store: ['name#0']
debug: Inserted main_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.__algopy_entrypoint_with_init() -> uint64:
everything/contract.py:41 debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.create() -> void:
everything/contract.py:47 debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.register(name: bytes) -> void:
everything/contract.py:56 debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.say_hello() -> bytes:
everything/contract.py:64 debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.calculate(a: bytes, b: bytes) -> bytes:
everything/contract.py:69 debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.close_out() -> void:
debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 into main_after_if_else@10
debug: removing explicit jump to fall-through block main_after_if_else@10
everything/contract.py:41 debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.create() -> void:
debug: inlining single reference block create_block@0 into create
everything/contract.py:47 debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.register(name: bytes) -> void:
debug: inlining single reference block register_block@0 into register
debug: inlining single reference block register_if_body@1 into register
debug: inlining single reference block register_if_body@2 into register
debug: removing explicit jump to fall-through block register_after_if_else@4
everything/contract.py:56 debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.say_hello() -> bytes:
debug: inlining single reference block say_hello_block@0 into say_hello
debug: inlining single reference block say_hello_if_body@1 into say_hello
everything/contract.py:64 debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.calculate(a: bytes, b: bytes) -> bytes:
debug: inlining single reference block calculate_block@0 into calculate
everything/contract.py:69 debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.close_out() -> void:
debug: inlining single reference block close_out_block@0 into close_out
everything/contract.py:73 debug: optimizing TEAL subroutine ops test_cases.everything.contract.Everything.clear_state_program() -> uint64:
everything/contract.py:73 debug: optimizing TEAL subroutine blocks test_cases.everything.contract.Everything.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing everything/out/MyContract.arc32.json
info: Writing everything/out/MyContract.arc56.json
info: Writing everything/out/MyContract.approval.teal
info: Writing everything/out/MyContract.clear.teal
info: Writing everything/out/MyContract.approval.bin
info: Writing everything/out/MyContract.clear.bin
info: Writing everything/out/MyContract.approval.stats.txt
info: Writing everything/out/MyContract.clear.stats.txt
info: Writing everything/out/MyContract.approval.puya.map
info: Writing everything/out/MyContract.clear.puya.map
info: writing everything/out/client_MyContract.py