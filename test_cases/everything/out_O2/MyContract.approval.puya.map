{
  "version": 3,
  "sources": [
    "../contract.py",
    "../my_base.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AA2BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;ACjDsB;AAAA;AAAgB;AAAA;AAAhB;AAAA;;AAAA;ADoDA;AAAZ;AAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAeU;;AAtDJ;AAsDI;AAAP;AApBuC;AAAxB;AAAA;AAAA;AAAA;AAAA;;AACZ;;;AACQ;;;;;;;;;;;;;;;;;;;AALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAMU;AAAA;;;AAAA;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;;AANV;;;AAnBL;;;;;;AAAA;;;AAAA;;;;AAAA;AA0Ce;;AAtDJ;AAsDI;AAAP;ACtEA;;;;;;;;;AAAe;;AAAf;ADoCA;AAAe;AAAf;AAJH;AAAA;AA4BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcG;AAAA;AAAA;AAAA;AAKG;AALH;AAAA;AAAA;AAAA;AAdH;AAAA;AAtBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCU;;AAtDJ;AAsDI;AAAP;AA7BG;;AAAwB;AAAxB;AAAX;;;AACuE;AAAxB;AAAA;AAAA;AAAA;;AAChC;;;AACC;AAAA;AAAA;AAAA;ACjCL;ADiCK;AAAA;AAAA;AAAA;AACE;AAAV;AAAA;;AAAA;AAPH;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "85": {
      "error": "OnCompletion must be NoOp"
    },
    "120": {
      "error": "invalid number of bytes for uint64"
    },
    "128": {
      "error": "invalid number of bytes for uint64"
    },
    "149": {
      "error": "You are banned, goodbye"
    },
    "201": {
      "error": "max array length exceeded"
    },
    "216": {
      "error": "max array length exceeded"
    },
    "249": {
      "error": "You are banned, goodbye"
    },
    "274": {
      "error": "OnCompletion must be CloseOut && can only call when not creating"
    },
    "278": {
      "error": "check self.counter exists"
    },
    "296": {
      "error": "OnCompletion must be one of NoOp, OptIn && can only call when not creating"
    },
    "311": {
      "error": "invalid number of bytes for (len+utf8[])"
    },
    "316": {
      "error": "You are banned, goodbye"
    },
    "336": {
      "error": "check self.counter exists"
    }
  }
}