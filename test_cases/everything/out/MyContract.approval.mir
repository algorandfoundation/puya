// Op                                                                      Stack (out)
// test_cases.everything.contract.Everything.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                           tmp%1#0
    return


// test_cases.everything.contract.Everything.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // everything/contract.py:37
    // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
    proto 0 1

__puya_arc4_router___block@0:
    // everything/contract.py:37
    // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
    txn NumAppArgs                                                         tmp%0#0
    bz __puya_arc4_router___after_if_else@10
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // everything/contract.py:37
    // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
    txna ApplicationArgs 0                                                 tmp%2#0
    method create()void                                                    tmp%2#0,Method(create()void)
    method register(string)void                                            tmp%2#0,Method(create()void),Method(register(string)void)
    method say_hello()string                                               tmp%2#0,Method(create()void),Method(register(string)void),Method(say_hello()string)
    method calculate(uint64,uint64)uint64                                  tmp%2#0,Method(create()void),Method(register(string)void),Method(say_hello()string),Method(calculate(uint64,uint64)uint64)
    method close_out()void                                                 tmp%2#0,Method(create()void),Method(register(string)void),Method(say_hello()string),Method(calculate(uint64,uint64)uint64),Method(close_out()void)
    l-load tmp%2#0 5                                                       Method(create()void),Method(register(string)void),Method(say_hello()string),Method(calculate(uint64,uint64)uint64),Method(close_out()void),tmp%2#0
    match __puya_arc4_router___create_route@2 __puya_arc4_router___register_route@3 __puya_arc4_router___say_hello_route@4 __puya_arc4_router___calculate_route@5 __puya_arc4_router___close_out_route@6 
    int 0                                                                  0
    retsub                                                                 0

__puya_arc4_router___create_route@2:
    // everything/contract.py:41
    // @abimethod(create="require")
    txn OnCompletion                                                       tmp%3#0
    !                                                                      tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                      tmp%5#0
    !                                                                      tmp%6#0
    assert // can only call when creating
    callsub create
    int 1                                                                  1
    retsub                                                                 1

__puya_arc4_router___register_route@3:
    // everything/contract.py:47
    // @abimethod(allow_actions=["NoOp", "OptIn"])
    txn OnCompletion                                                       tmp%7#0
    int 1                                                                  tmp%7#0,1
    l-load tmp%7#0 1                                                       1,tmp%7#0
    shl                                                                    tmp%8#0
    int 3                                                                  tmp%8#0,3
    &                                                                      tmp%9#0
    assert // OnCompletion is not one of NoOp, OptIn
    txn ApplicationID                                                      tmp%10#0
    assert // can only call when not creating
    // everything/contract.py:37
    // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
    txna ApplicationArgs 1                                                 tmp%12#0
    // everything/contract.py:47
    // @abimethod(allow_actions=["NoOp", "OptIn"])
    callsub register
    int 1                                                                  1
    retsub                                                                 1

__puya_arc4_router___say_hello_route@4:
    // everything/contract.py:56
    // @abimethod
    txn OnCompletion                                                       tmp%13#0
    !                                                                      tmp%14#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                      tmp%15#0
    assert // can only call when not creating
    callsub say_hello                                                      tmp%17#0
    byte 0x151f7c75                                                        tmp%17#0,0x151f7c75
    l-load tmp%17#0 1                                                      0x151f7c75,tmp%17#0
    concat                                                                 tmp%18#0
    log
    int 1                                                                  1
    retsub                                                                 1

__puya_arc4_router___calculate_route@5:
    // everything/contract.py:64
    // @abimethod
    txn OnCompletion                                                       tmp%19#0
    !                                                                      tmp%20#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                      tmp%21#0
    assert // can only call when not creating
    // everything/contract.py:37
    // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
    txna ApplicationArgs 1                                                 tmp%23#0
    txna ApplicationArgs 2                                                 tmp%23#0,tmp%24#0
    // everything/contract.py:64
    // @abimethod
    l-load tmp%23#0 1                                                      tmp%24#0,tmp%23#0
    l-load tmp%24#0 1                                                      tmp%23#0,tmp%24#0
    callsub calculate                                                      tmp%25#0
    byte 0x151f7c75                                                        tmp%25#0,0x151f7c75
    l-load tmp%25#0 1                                                      0x151f7c75,tmp%25#0
    concat                                                                 tmp%26#0
    log
    int 1                                                                  1
    retsub                                                                 1

__puya_arc4_router___close_out_route@6:
    // everything/contract.py:69
    // @abimethod(allow_actions=["CloseOut"])
    txn OnCompletion                                                       tmp%27#0
    int CloseOut                                                           tmp%27#0,CloseOut
    ==                                                                     tmp%28#0
    assert // OnCompletion is not CloseOut
    txn ApplicationID                                                      tmp%29#0
    assert // can only call when not creating
    callsub close_out
    int 1                                                                  1
    retsub                                                                 1

__puya_arc4_router___after_if_else@10:
    // everything/contract.py:37
    // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
    int 0                                                                  0
    retsub                                                                 0


// test_cases.everything.contract.Everything.create() -> void:
create:
    // everything/contract.py:41-42
    // @abimethod(create="require")
    // def create(self) -> None:
    proto 0 0

create_block@0:
    // everything/contract.py:43
    // self._check_ban_list()
    callsub _check_ban_list
    // everything/contract.py:44
    // self.remember_creator()
    callsub remember_creator
    // everything/contract.py:45
    // self.counter = UInt64(ZERO)
    byte "counter"                                                         "counter"
    int 0                                                                  "counter",0
    app_global_put
    retsub


// test_cases.everything.contract.Everything._check_ban_list() -> void:
_check_ban_list:
    // everything/contract.py:77-78
    // @subroutine
    // def _check_ban_list(self) -> None:
    proto 0 0

_check_ban_list_block@0:
    // everything/contract.py:79
    // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
    txn Sender                                                             tmp%0#0
    callsub get_banned                                                     tmp%0#0,tmp%1#0
    l-load tmp%0#0 1                                                       tmp%1#0,tmp%0#0
    l-load tmp%1#0 1                                                       tmp%0#0,tmp%1#0
    !=                                                                     tmp%2#0
    assert // You are banned, goodbye
    retsub


// test_cases.everything.contract.get_banned() -> bytes:
get_banned:
    // everything/contract.py:23-24
    // @subroutine
    // def get_banned() -> Account:
    proto 0 1

get_banned_block@0:
    // everything/contract.py:25
    // addr = Account(BANNED)
    addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"      Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
    // everything/contract.py:26
    // return addr
    retsub                                                                 Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)


// test_cases.everything.my_base.MyBase.remember_creator() -> void:
remember_creator:
    // everything/my_base.py:7-8
    // @subroutine
    // def remember_creator(self) -> None:
    proto 0 0

remember_creator_block@0:
    // everything/my_base.py:9
    // self.creator = op.Txn.sender
    txn Sender                                                             new_state_value%0#0
    byte "creator"                                                         new_state_value%0#0,"creator"
    l-load new_state_value%0#0 1                                           "creator",new_state_value%0#0
    app_global_put
    retsub


// test_cases.everything.contract.Everything.register(name: bytes) -> void:
register:                                                                  (𝕡) name#0 |
    // everything/contract.py:47-48
    // @abimethod(allow_actions=["NoOp", "OptIn"])
    // def register(self, name: String) -> None:
    proto 1 0                                                              (𝕡) name#0 |

register_block@0:                                                          (𝕡) name#0 |
    // everything/contract.py:49
    // self._check_ban_list()
    callsub _check_ban_list                                                (𝕡) name#0 |
    // everything/contract.py:50
    // if op.Txn.on_completion == OnCompleteAction.OptIn:
    txn OnCompletion                                                       (𝕡) name#0 | tmp%0#0
    int OptIn                                                              (𝕡) name#0 | tmp%0#0,OptIn
    ==                                                                     (𝕡) name#0 | tmp%1#0
    bz register_after_if_else@4                                            (𝕡) name#0 |
    // Implicit fall through to register_if_body@1                         (𝕡) name#0 |

register_if_body@1:                                                        (𝕡) name#0 |
    // everything/contract.py:51
    // sender_name, sender_name_existed = self.name.maybe(account=0)
    int 0                                                                  (𝕡) name#0 | 0
    int 0                                                                  (𝕡) name#0 | 0,0
    byte "name"                                                            (𝕡) name#0 | 0,0,"name"
    app_local_get_ex                                                       (𝕡) name#0 | sender_name#0,sender_name_existed#0
    l-store sender_name_existed#0 1                                        (𝕡) name#0 | sender_name_existed#0,sender_name#0
    pop 1                                                                  (𝕡) name#0 | sender_name_existed#0
    // everything/contract.py:52
    // if not sender_name_existed:
    l-load sender_name_existed#0 0                                         (𝕡) name#0 | sender_name_existed#0
    bnz register_after_if_else@4                                           (𝕡) name#0 |
    // Implicit fall through to register_if_body@2                         (𝕡) name#0 |

register_if_body@2:                                                        (𝕡) name#0 |
    // everything/contract.py:53
    // self.counter += multiplicative_identity()  # has full FuncDef
    int 0                                                                  (𝕡) name#0 | 0
    byte "counter"                                                         (𝕡) name#0 | 0,"counter"
    app_global_get_ex                                                      (𝕡) name#0 | maybe_value%1#0,maybe_exists%1#0
    assert // check self.counter exists                                    (𝕡) name#0 | maybe_value%1#0
    callsub multiplicative_identity                                        (𝕡) name#0 | maybe_value%1#0,tmp%2#0
    l-load maybe_value%1#0 1                                               (𝕡) name#0 | tmp%2#0,maybe_value%1#0
    l-load tmp%2#0 1                                                       (𝕡) name#0 | maybe_value%1#0,tmp%2#0
    +                                                                      (𝕡) name#0 | new_state_value%0#0
    byte "counter"                                                         (𝕡) name#0 | new_state_value%0#0,"counter"
    l-load new_state_value%0#0 1                                           (𝕡) name#0 | "counter",new_state_value%0#0
    app_global_put                                                         (𝕡) name#0 |
    // Implicit fall through to register_after_if_else@4                   (𝕡) name#0 |

register_after_if_else@4:                                                  (𝕡) name#0 |
    // everything/contract.py:54
    // self.name[0] = name
    int 0                                                                  (𝕡) name#0 | 0
    byte "name"                                                            (𝕡) name#0 | 0,"name"
    p-load name#0                                                          (𝕡) name#0 | 0,"name",name#0 (copy)
    app_local_put                                                          (𝕡) name#0 |
    retsub


// test_cases.everything.my_base.multiplicative_identity() -> uint64:
multiplicative_identity:
    // everything/my_base.py:18-19
    // @subroutine
    // def multiplicative_identity() -> UInt64:
    proto 0 1

multiplicative_identity_block@0:
    // everything/my_base.py:20
    // return UInt64(1)
    int 1                                                                  1
    retsub                                                                 1


// test_cases.everything.contract.Everything.say_hello() -> bytes:
say_hello:
    // everything/contract.py:56-57
    // @abimethod
    // def say_hello(self) -> String:
    proto 0 1

say_hello_block@0:
    // everything/contract.py:58
    // self._check_ban_list()
    callsub _check_ban_list
    // everything/contract.py:59
    // name, exists = self.name.maybe(account=0)
    int 0                                                                  0
    int 0                                                                  0,0
    byte "name"                                                            0,0,"name"
    app_local_get_ex                                                       name#0,exists#0
    l-store exists#0 1                                                     exists#0,name#0
    f-store name#0                                                         (𝕗) name#0 | exists#0
    // everything/contract.py:60
    // if not exists:
    l-load exists#0 0                                                      (𝕗) name#0 | exists#0
    bnz say_hello_after_if_else@2                                          (𝕗) name#0 |
    // Implicit fall through to say_hello_if_body@1                        (𝕗) name#0 |

say_hello_if_body@1:                                                       (𝕗) name#0 |
    // everything/contract.py:61
    // return String("Howdy stranger!")
    byte 0x000f486f77647920737472616e67657221                              (𝕗) name#0 | 0x000f486f77647920737472616e67657221
    retsub                                                                 0x000f486f77647920737472616e67657221

say_hello_after_if_else@2:                                                 (𝕗) name#0 |
    // everything/contract.py:62
    // return "Hello, " + name + "!"
    f-load name#0                                                          (𝕗) name#0 | name#0
    extract 2 0                                                            (𝕗) name#0 | expr_value_trimmed%1#0
    byte 0x48656c6c6f2c20                                                  (𝕗) name#0 | expr_value_trimmed%1#0,0x48656c6c6f2c20
    l-load expr_value_trimmed%1#0 1                                        (𝕗) name#0 | 0x48656c6c6f2c20,expr_value_trimmed%1#0
    concat                                                                 (𝕗) name#0 | concatenated%0#0
    l-load-copy concatenated%0#0 0                                         (𝕗) name#0 | concatenated%0#0,concatenated%0#0 (copy)
    len                                                                    (𝕗) name#0 | concatenated%0#0,len_%0#0
    itob                                                                   (𝕗) name#0 | concatenated%0#0,as_bytes%0#0
    extract 6 2                                                            (𝕗) name#0 | concatenated%0#0,len_16_bit%0#0
    l-load concatenated%0#0 1                                              (𝕗) name#0 | len_16_bit%0#0,concatenated%0#0
    concat                                                                 (𝕗) name#0 | concat_result%0#0
    extract 2 0                                                            (𝕗) name#0 | expr_value_trimmed%2#0
    byte 0x21                                                              (𝕗) name#0 | expr_value_trimmed%2#0,0x21
    concat                                                                 (𝕗) name#0 | concatenated%1#0
    l-load-copy concatenated%1#0 0                                         (𝕗) name#0 | concatenated%1#0,concatenated%1#0 (copy)
    len                                                                    (𝕗) name#0 | concatenated%1#0,len_%1#0
    itob                                                                   (𝕗) name#0 | concatenated%1#0,as_bytes%1#0
    extract 6 2                                                            (𝕗) name#0 | concatenated%1#0,len_16_bit%1#0
    l-load concatenated%1#0 1                                              (𝕗) name#0 | len_16_bit%1#0,concatenated%1#0
    concat                                                                 (𝕗) name#0 | concat_result%1#0
    retsub                                                                 concat_result%1#0


// test_cases.everything.contract.Everything.calculate(a: bytes, b: bytes) -> bytes:
calculate:                                                                 (𝕡) a#0,b#0 |
    // everything/contract.py:64-65
    // @abimethod
    // def calculate(self, a: arc4_UInt64, b: arc4_UInt64) -> arc4_UInt64:
    proto 2 1                                                              (𝕡) a#0,b#0 |

calculate_block@0:                                                         (𝕡) a#0,b#0 |
    // everything/contract.py:66
    // c = super().calculate(a, b)
    p-load a#0                                                             (𝕡) a#0,b#0 | a#0 (copy)
    p-load b#0                                                             (𝕡) a#0,b#0 | a#0 (copy),b#0 (copy)
    callsub test_cases.everything.my_base.MyMiddleBase.calculate           (𝕡) a#0,b#0 | c#0
    // everything/contract.py:67
    // return arc4_UInt64(c.native * b.native)
    btoi                                                                   (𝕡) a#0,b#0 | tmp%0#0
    p-load b#0                                                             (𝕡) a#0,b#0 | tmp%0#0,b#0 (copy)
    btoi                                                                   (𝕡) a#0,b#0 | tmp%0#0,tmp%1#0
    l-load tmp%0#0 1                                                       (𝕡) a#0,b#0 | tmp%1#0,tmp%0#0
    l-load tmp%1#0 1                                                       (𝕡) a#0,b#0 | tmp%0#0,tmp%1#0
    *                                                                      (𝕡) a#0,b#0 | to_encode%0#0
    itob                                                                   (𝕡) a#0,b#0 | val_as_bytes%0#0
    retsub                                                                 val_as_bytes%0#0


// test_cases.everything.my_base.MyMiddleBase.calculate(a: bytes, b: bytes) -> bytes:
test_cases.everything.my_base.MyMiddleBase.calculate:                      (𝕡) a#0,b#0 |
    // everything/my_base.py:13-14
    // @subroutine
    // def calculate(self, a: arc4.UInt64, b: arc4.UInt64) -> arc4.UInt64:
    proto 2 1                                                              (𝕡) a#0,b#0 |

test_cases.everything.my_base.MyMiddleBase.calculate_block@0:              (𝕡) a#0,b#0 |
    // everything/my_base.py:15
    // return arc4.UInt64(a.native + b.native)
    p-load a#0                                                             (𝕡) a#0,b#0 | a#0 (copy)
    btoi                                                                   (𝕡) a#0,b#0 | tmp%0#0
    p-load b#0                                                             (𝕡) a#0,b#0 | tmp%0#0,b#0 (copy)
    btoi                                                                   (𝕡) a#0,b#0 | tmp%0#0,tmp%1#0
    l-load tmp%0#0 1                                                       (𝕡) a#0,b#0 | tmp%1#0,tmp%0#0
    l-load tmp%1#0 1                                                       (𝕡) a#0,b#0 | tmp%0#0,tmp%1#0
    +                                                                      (𝕡) a#0,b#0 | to_encode%0#0
    itob                                                                   (𝕡) a#0,b#0 | val_as_bytes%0#0
    retsub                                                                 val_as_bytes%0#0


// test_cases.everything.contract.Everything.close_out() -> void:
close_out:
    // everything/contract.py:69-70
    // @abimethod(allow_actions=["CloseOut"])
    // def close_out(self) -> None:
    proto 0 0

close_out_block@0:
    // everything/contract.py:71
    // self._remove_sender()
    callsub _remove_sender
    retsub


// test_cases.everything.contract.Everything._remove_sender() -> void:
_remove_sender:
    // everything/contract.py:81-82
    // @subroutine
    // def _remove_sender(self) -> None:
    proto 0 0

_remove_sender_block@0:
    // everything/contract.py:83
    // self.counter -= positive_one()
    int 0                                                                  0
    byte "counter"                                                         0,"counter"
    app_global_get_ex                                                      maybe_value%0#0,maybe_exists%0#0
    assert // check self.counter exists                                    maybe_value%0#0
    callsub positive_one                                                   maybe_value%0#0,tmp%0#0
    l-load maybe_value%0#0 1                                               tmp%0#0,maybe_value%0#0
    l-load tmp%0#0 1                                                       maybe_value%0#0,tmp%0#0
    -                                                                      new_state_value%0#0
    byte "counter"                                                         new_state_value%0#0,"counter"
    l-load new_state_value%0#0 1                                           "counter",new_state_value%0#0
    app_global_put
    retsub


// test_cases.everything.contract.positive_one() -> uint64:
positive_one:
    // everything/contract.py:86-87
    // @subroutine
    // def positive_one() -> UInt64:
    proto 0 1

positive_one_block@0:
    // everything/contract.py:88
    // return UInt64(1)
    int 1                                                                  1
    retsub                                                                 1


