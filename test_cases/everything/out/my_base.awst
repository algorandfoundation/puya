abstract contract MyBase
{
  globals {
    ['creator']: account
  }
  
  subroutine remember_creator(): void
  {
    this.creator: account = txn<Sender>()
  }
}

abstract contract MyMiddleBase extends (test_cases.everything.my_base::MyBase)
{
  subroutine calculate(a: arc4.uint64, b: arc4.uint64): arc4.uint64
  {
    return arc4_encode(arc4_decode(a, uint64) + arc4_decode(b, uint64), arc4.uint64)
  }
}

subroutine multiplicative_identity(): uint64
{
  return 1u
}