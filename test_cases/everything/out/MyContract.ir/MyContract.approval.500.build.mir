// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txna ApplicationArgs 0                                                          tmp%0#1
        v-store tmp%0#1
        method register(string)void                                                     Method(register(string)void)
        method close_out()void                                                          Method(register(string)void),Method(close_out()void)
        v-load tmp%0#1                                                                  Method(register(string)void),Method(close_out()void),tmp%0#1
        match main_register_route@4 main_close_out_route@5 ; b main_switch_case_next@6

    main_register_route@4:
        // everything/contract.py:47
        // @abimethod(allow_actions=["NoOp", "OptIn"])
        txn OnCompletion                                                                tmp%1#1
        v-store tmp%1#1
        int 1                                                                           1
        v-load tmp%1#1                                                                  1,tmp%1#1
        shl                                                                             tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        int 3                                                                           tmp%2#0,3
        &                                                                               tmp%3#0
        v-store tmp%3#0
        txn ApplicationID                                                               tmp%4#0
        v-store tmp%4#0
        v-load tmp%3#0                                                                  tmp%3#0
        v-load tmp%4#0                                                                  tmp%3#0,tmp%4#0
        &&                                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        assert // OnCompletion must be one of NoOp, OptIn && can only call when not creating 
        callsub register
        b main_switch_case_next@6

    main_close_out_route@5:
        // everything/contract.py:69
        // @abimethod(allow_actions=["CloseOut"])
        txn OnCompletion                                                                tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        int CloseOut                                                                    tmp%7#0,CloseOut
        ==                                                                              tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                               tmp%9#0
        v-store tmp%9#0
        v-load tmp%8#0                                                                  tmp%8#0
        v-load tmp%9#0                                                                  tmp%8#0,tmp%9#0
        &&                                                                              tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                 tmp%11#0
        assert // OnCompletion must be CloseOut && can only call when not creating
        callsub close_out
        b main_switch_case_next@6

    main_switch_case_next@6:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txn OnCompletion                                                                tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                 tmp%12#0
        !                                                                               tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                 tmp%13#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                               tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                 tmp%14#0
        bz main_create_NoOp@11 ; b main_call_NoOp@7

    main_call_NoOp@7:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txna ApplicationArgs 0                                                          tmp%16#0
        v-store tmp%16#0
        method say_hello()string                                                        Method(say_hello()string)
        method calculate(uint64,uint64)uint64                                           Method(say_hello()string),Method(calculate(uint64,uint64)uint64)
        v-load tmp%16#0                                                                 Method(say_hello()string),Method(calculate(uint64,uint64)uint64),tmp%16#0
        match main_say_hello_route@8 main_calculate_route@9 ; b main_after_if_else@14

    main_say_hello_route@8:
        // everything/contract.py:56
        // @abimethod
        callsub say_hello
        b main_after_if_else@14

    main_calculate_route@9:
        // everything/contract.py:64
        // @abimethod
        callsub calculate
        b main_after_if_else@14

    main_create_NoOp@11:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txna ApplicationArgs 0                                                          tmp%17#0
        v-store tmp%17#0
        method create()void                                                             Method(create()void)
        v-load tmp%17#0                                                                 Method(create()void),tmp%17#0
        match main_create_route@12 ; b main_after_if_else@14

    main_create_route@12:
        // everything/contract.py:41
        // @abimethod(create="require")
        callsub create
        b main_after_if_else@14

    main_after_if_else@14:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        err


// test_cases.everything.contract.Everything.create[routing]() -> void:
subroutine create:
    create_block@0:
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        txn Sender                                                                      tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                  tmp%0#0
        // everything/contract.py:25
        // addr = Account(BANNED)
        addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"               tmp%0#0,Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        !=                                                                              tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        assert // You are banned, goodbye
        // everything/my_base.py:9
        // self.creator = op.Txn.sender
        txn Sender                                                                      tmp%0#0
        v-store tmp%0#0
        byte "creator"                                                                  "creator"
        v-load tmp%0#0                                                                  "creator",tmp%0#0
        app_global_put
        // everything/contract.py:45
        // self.counter = UInt64(ZERO)
        byte "counter"                                                                  "counter"
        int 0                                                                           "counter",0
        app_global_put
        // everything/contract.py:41
        // @abimethod(create="require")
        int 1                                                                           1
        return


// test_cases.everything.contract.Everything.register[routing]() -> void:
subroutine register:
    register_block@0:
        // everything/contract.py:47
        // @abimethod(allow_actions=["NoOp", "OptIn"])
        txna ApplicationArgs 1                                                          name#0
        v-store name#0
        v-load name#0                                                                   name#0
        int 0                                                                           name#0,0
        extract_uint16                                                                  aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                               aggregate%array_length%0#0
        int 2                                                                           aggregate%array_length%0#0,2
        +                                                                               add%0#0
        v-store add%0#0
        v-load name#0                                                                   name#0
        len                                                                             len%0#0
        v-store len%0#0
        v-load len%0#0                                                                  len%0#0
        v-load add%0#0                                                                  len%0#0,add%0#0
        ==                                                                              eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                   eq%0#0
        assert // invalid number of bytes for (len+utf8[])
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        txn Sender                                                                      tmp%0#2
        v-store tmp%0#2
        v-load tmp%0#2                                                                  tmp%0#2
        // everything/contract.py:25
        // addr = Account(BANNED)
        addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"               tmp%0#2,Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        !=                                                                              tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        assert // You are banned, goodbye
        // everything/contract.py:50
        // if op.Txn.on_completion == OnCompleteAction.OptIn:
        txn OnCompletion                                                                tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        int OptIn                                                                       tmp%0#1,OptIn
        ==                                                                              tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        bz register_after_if_else@5 ; b register_if_body@2

    register_if_body@2:
        // everything/contract.py:51
        // sender_name, sender_name_existed = self.name.maybe(account=0)
        int 0                                                                           0
        int 0                                                                           0,0
        byte "name"                                                                     0,0,"name"
        app_local_get_ex                                                                sender_name#0,sender_name_existed#0
        v-store sender_name_existed#0                                                   sender_name#0
        v-store sender_name#0
        // everything/contract.py:52
        // if not sender_name_existed:
        v-load sender_name_existed#0                                                    sender_name_existed#0
        bz register_if_body@3 ; b register_after_if_else@5

    register_if_body@3:
        // everything/contract.py:53
        // self.counter += multiplicative_identity()  # has full FuncDef
        int 0                                                                           0
        byte "counter"                                                                  0,"counter"
        app_global_get_ex                                                               maybe_value%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                        maybe_value%1#0
        v-store maybe_value%1#0
        v-load maybe_exists%1#0                                                         maybe_exists%1#0
        assert // check self.counter exists
        v-load maybe_value%1#0                                                          maybe_value%1#0
        // everything/my_base.py:20
        // return UInt64(1)
        int 1                                                                           maybe_value%1#0,1
        // everything/contract.py:53
        // self.counter += multiplicative_identity()  # has full FuncDef
        +                                                                               tmp%3#0
        v-store tmp%3#0
        byte "counter"                                                                  "counter"
        v-load tmp%3#0                                                                  "counter",tmp%3#0
        app_global_put
        b register_after_if_else@5

    register_after_if_else@5:
        // everything/contract.py:54
        // self.name[0] = name
        int 0                                                                           0
        byte "name"                                                                     0,"name"
        v-load name#0                                                                   0,"name",name#0
        app_local_put
        // everything/contract.py:47
        // @abimethod(allow_actions=["NoOp", "OptIn"])
        int 1                                                                           1
        return


// test_cases.everything.contract.Everything.say_hello[routing]() -> void:
subroutine say_hello:
    say_hello_block@0:
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        txn Sender                                                                      tmp%0#2
        v-store tmp%0#2
        v-load tmp%0#2                                                                  tmp%0#2
        // everything/contract.py:25
        // addr = Account(BANNED)
        addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"               tmp%0#2,Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        !=                                                                              tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                  tmp%2#1
        assert // You are banned, goodbye
        // everything/contract.py:59
        // name, exists = self.name.maybe(account=0)
        int 0                                                                           0
        int 0                                                                           0,0
        byte "name"                                                                     0,0,"name"
        app_local_get_ex                                                                name#0,exists#0
        v-store exists#0                                                                name#0
        v-store name#0
        // everything/contract.py:60
        // if not exists:
        v-load exists#0                                                                 exists#0
        bz say_hello_if_body@2 ; b say_hello_after_if_else@3

    say_hello_if_body@2:
        // everything/contract.py:61
        // return String("Howdy stranger!")
        byte 0x000f486f77647920737472616e67657221                                       0x000f486f77647920737472616e67657221
        v-store aggregate%encoded_value%0#0
        v-load aggregate%encoded_value%0#0                                              aggregate%encoded_value%0#0
        v-store tmp%0#0
        // everything/contract.py:56
        // @abimethod
        b say_hello_after_inlined_test_cases.everything.contract.Everything.say_hello@4

    say_hello_after_if_else@3:
        // everything/contract.py:62
        // return "Hello, " + name + "!"
        v-load name#0                                                                   name#0
        extract 2 0                                                                     extract_to_end%0#0
        v-store extract_to_end%0#0
        byte 0x000748656c6c6f2c20                                                       0x000748656c6c6f2c20
        v-load extract_to_end%0#0                                                       0x000748656c6c6f2c20,extract_to_end%0#0
        concat // on error: max array length exceeded                                   concat%0#0
        v-store concat%0#0
        v-load concat%0#0                                                               concat%0#0
        extract 2 0                                                                     extract_to_end%1#0
        v-store extract_to_end%1#0
        v-load extract_to_end%1#0                                                       extract_to_end%1#0
        len                                                                             len%0#0
        v-store len%0#0
        v-load len%0#0                                                                  len%0#0
        itob                                                                            as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                             as_bytes%0#0
        extract 6 2                                                                     as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load concat%0#0                                                               concat%0#0
        v-load as_u16_bytes%0#0                                                         concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                      replace%0#0
        v-store replace%0#0
        v-load replace%0#0                                                              replace%0#0
        byte 0x21                                                                       replace%0#0,0x21
        concat // on error: max array length exceeded                                   concat%1#0
        v-store concat%1#0
        v-load concat%1#0                                                               concat%1#0
        extract 2 0                                                                     extract_to_end%3#0
        v-store extract_to_end%3#0
        v-load extract_to_end%3#0                                                       extract_to_end%3#0
        len                                                                             len%1#0
        v-store len%1#0
        v-load len%1#0                                                                  len%1#0
        itob                                                                            as_bytes%1#0
        v-store as_bytes%1#0
        v-load as_bytes%1#0                                                             as_bytes%1#0
        extract 6 2                                                                     as_u16_bytes%1#0
        v-store as_u16_bytes%1#0
        v-load concat%1#0                                                               concat%1#0
        v-load as_u16_bytes%1#0                                                         concat%1#0,as_u16_bytes%1#0
        replace2 0                                                                      replace%1#0
        v-store replace%1#0
        v-load replace%1#0                                                              replace%1#0
        v-store tmp%0#0
        // everything/contract.py:56
        // @abimethod
        b say_hello_after_inlined_test_cases.everything.contract.Everything.say_hello@4

    say_hello_after_inlined_test_cases.everything.contract.Everything.say_hello@4:
        // everything/contract.py:56
        // @abimethod
        byte 0x151f7c75                                                                 0x151f7c75
        v-load tmp%0#0                                                                  0x151f7c75,tmp%0#0
        concat                                                                          tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        log
        int 1                                                                           1
        return


// test_cases.everything.contract.Everything.calculate[routing]() -> void:
subroutine calculate:
    calculate_block@0:
        // everything/contract.py:64
        // @abimethod
        txna ApplicationArgs 1                                                          a#0
        v-store a#0
        v-load a#0                                                                      a#0
        len                                                                             len%0#0
        v-store len%0#0
        v-load len%0#0                                                                  len%0#0
        int 8                                                                           len%0#0,8
        ==                                                                              eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                   eq%0#0
        assert // invalid number of bytes for uint64
        txna ApplicationArgs 2                                                          b#0
        v-store b#0
        v-load b#0                                                                      b#0
        len                                                                             len%1#0
        v-store len%1#0
        v-load len%1#0                                                                  len%1#0
        int 8                                                                           len%1#0,8
        ==                                                                              eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                                   eq%1#0
        assert // invalid number of bytes for uint64
        // everything/my_base.py:15
        // return arc4.UInt64(a.as_uint64() + b.as_uint64())
        v-load a#0                                                                      a#0
        btoi                                                                            tmp%0#0
        v-store tmp%0#0
        v-load b#0                                                                      b#0
        btoi                                                                            tmp%1#2
        v-store tmp%1#2
        v-load tmp%0#0                                                                  tmp%0#0
        v-load tmp%1#2                                                                  tmp%0#0,tmp%1#2
        +                                                                               tmp%2#2
        v-store tmp%2#2
        // everything/contract.py:67
        // return arc4_UInt64(c.as_uint64() * b.as_uint64())
        v-load tmp%2#2                                                                  tmp%2#2
        v-load tmp%1#2                                                                  tmp%2#2,tmp%1#2
        *                                                                               tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                  tmp%3#1
        itob                                                                            aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        // everything/contract.py:64
        // @abimethod
        byte 0x151f7c75                                                                 0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                               0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                          tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                  tmp%3#0
        log
        int 1                                                                           1
        return


// test_cases.everything.contract.Everything.close_out[routing]() -> void:
subroutine close_out:
    close_out_block@0:
        // everything/contract.py:83
        // self.counter -= positive_one()
        int 0                                                                           0
        byte "counter"                                                                  0,"counter"
        app_global_get_ex                                                               maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                        maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                         maybe_exists%0#0
        assert // check self.counter exists
        v-load maybe_value%0#0                                                          maybe_value%0#0
        // everything/contract.py:88
        // return UInt64(1)
        int 1                                                                           maybe_value%0#0,1
        // everything/contract.py:83
        // self.counter -= positive_one()
        -                                                                               tmp%1#0
        v-store tmp%1#0
        byte "counter"                                                                  "counter"
        v-load tmp%1#0                                                                  "counter",tmp%1#0
        app_global_put
        // everything/contract.py:69
        // @abimethod(allow_actions=["CloseOut"])
        int 1                                                                           1
        return


