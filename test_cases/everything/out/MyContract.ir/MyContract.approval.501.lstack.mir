// Op                                                                                     Stack (out)
// test_cases.everything.contract.Everything.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txn NumAppArgs                                                                    tmp%0#2
        l-load tmp%0#2 0                                                                  tmp%0#2
        bz main_after_if_else@10 ; b main_abi_routing@4

    main_abi_routing@4:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txna ApplicationArgs 0                                                            tmp%2#0
        method create()void                                                               tmp%2#0,Method(create()void)
        method register(string)void                                                       tmp%2#0,Method(create()void),Method(register(string)void)
        method say_hello()string                                                          tmp%2#0,Method(create()void),Method(register(string)void),Method(say_hello()string)
        method calculate(uint64,uint64)uint64                                             tmp%2#0,Method(create()void),Method(register(string)void),Method(say_hello()string),Method(calculate(uint64,uint64)uint64)
        method close_out()void                                                            tmp%2#0,Method(create()void),Method(register(string)void),Method(say_hello()string),Method(calculate(uint64,uint64)uint64),Method(close_out()void)
        l-load tmp%2#0 5                                                                  Method(create()void),Method(register(string)void),Method(say_hello()string),Method(calculate(uint64,uint64)uint64),Method(close_out()void),tmp%2#0
        match main_create_route@5 main_register_route@6 main_say_hello_route@7 main_calculate_route@8 main_close_out_route@9 ; b main_after_if_else@10 

    main_create_route@5:
        // everything/contract.py:41
        // @abimethod(create="require")
        txn OnCompletion                                                                  tmp%3#0
        l-load tmp%3#0 0                                                                  tmp%3#0
        !                                                                                 tmp%4#0
        l-load tmp%4#0 0                                                                  tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                 tmp%5#0
        l-load tmp%5#0 0                                                                  tmp%5#0
        !                                                                                 tmp%6#0
        l-load tmp%6#0 0                                                                  tmp%6#0
        assert // can only call when creating
        callsub create
        int 1                                                                             1
        l-store test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0      test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0       test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 

    main_register_route@6:
        // everything/contract.py:47
        // @abimethod(allow_actions=["NoOp", "OptIn"])
        txn OnCompletion                                                                  tmp%7#0
        int 1                                                                             tmp%7#0,1
        l-load tmp%7#0 1                                                                  1,tmp%7#0
        shl                                                                               tmp%8#0
        l-load tmp%8#0 0                                                                  tmp%8#0
        int 3                                                                             tmp%8#0,3
        &                                                                                 tmp%9#0
        l-load tmp%9#0 0                                                                  tmp%9#0
        assert // OnCompletion is not one of NoOp, OptIn
        txn ApplicationID                                                                 tmp%10#0
        l-load tmp%10#0 0                                                                 tmp%10#0
        assert // can only call when not creating
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txna ApplicationArgs 1                                                            tmp%12#0
        // everything/contract.py:47
        // @abimethod(allow_actions=["NoOp", "OptIn"])
        l-load tmp%12#0 0                                                                 tmp%12#0
        callsub register
        int 1                                                                             1
        l-store test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0      test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0       test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 

    main_say_hello_route@7:
        // everything/contract.py:56
        // @abimethod
        txn OnCompletion                                                                  tmp%13#0
        l-load tmp%13#0 0                                                                 tmp%13#0
        !                                                                                 tmp%14#0
        l-load tmp%14#0 0                                                                 tmp%14#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                 tmp%15#0
        l-load tmp%15#0 0                                                                 tmp%15#0
        assert // can only call when not creating
        callsub say_hello                                                                 tmp%17#0
        byte 0x151f7c75                                                                   tmp%17#0,0x151f7c75
        l-load tmp%17#0 1                                                                 0x151f7c75,tmp%17#0
        concat                                                                            tmp%18#0
        l-load tmp%18#0 0                                                                 tmp%18#0
        log
        int 1                                                                             1
        l-store test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0      test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0       test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 

    main_calculate_route@8:
        // everything/contract.py:64
        // @abimethod
        txn OnCompletion                                                                  tmp%19#0
        l-load tmp%19#0 0                                                                 tmp%19#0
        !                                                                                 tmp%20#0
        l-load tmp%20#0 0                                                                 tmp%20#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                 tmp%21#0
        l-load tmp%21#0 0                                                                 tmp%21#0
        assert // can only call when not creating
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        txna ApplicationArgs 1                                                            reinterpret_bytes[8]%0#0
        txna ApplicationArgs 2                                                            reinterpret_bytes[8]%0#0,reinterpret_bytes[8]%1#0
        // everything/contract.py:64
        // @abimethod
        l-load reinterpret_bytes[8]%0#0 1                                                 reinterpret_bytes[8]%1#0,reinterpret_bytes[8]%0#0
        l-load reinterpret_bytes[8]%1#0 1                                                 reinterpret_bytes[8]%0#0,reinterpret_bytes[8]%1#0
        callsub calculate                                                                 tmp%23#0
        byte 0x151f7c75                                                                   tmp%23#0,0x151f7c75
        l-load tmp%23#0 1                                                                 0x151f7c75,tmp%23#0
        concat                                                                            tmp%24#0
        l-load tmp%24#0 0                                                                 tmp%24#0
        log
        int 1                                                                             1
        l-store test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0      test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0       test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 

    main_close_out_route@9:
        // everything/contract.py:69
        // @abimethod(allow_actions=["CloseOut"])
        txn OnCompletion                                                                  tmp%25#0
        l-load tmp%25#0 0                                                                 tmp%25#0
        int CloseOut                                                                      tmp%25#0,CloseOut
        ==                                                                                tmp%26#0
        l-load tmp%26#0 0                                                                 tmp%26#0
        assert // OnCompletion is not CloseOut
        txn ApplicationID                                                                 tmp%27#0
        l-load tmp%27#0 0                                                                 tmp%27#0
        assert // can only call when not creating
        callsub close_out
        int 1                                                                             1
        l-store test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0      test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0       test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 

    main_after_if_else@10:
        // everything/contract.py:37
        // class Everything(ARC4Contract, MyMiddleBase, name="MyContract"):
        int 0                                                                             0
        l-store test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0      test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        l-load test_cases.everything.contract.Everything.__puya_arc4_router__%0#0 0       test_cases.everything.contract.Everything.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11 

    main_after_inlined_test_cases.everything.contract.Everything.__puya_arc4_router__@11:
        v-load tmp%0#1                                                                    tmp%0#1
        return


// test_cases.everything.contract.Everything.create() -> void:
subroutine create:
    create_block@0:
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        txn Sender                                                                        tmp%0#0
        l-load tmp%0#0 0                                                                  tmp%0#0
        // everything/contract.py:25
        // addr = Account(BANNED)
        addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"                 tmp%0#0,Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        !=                                                                                tmp%2#0
        l-load tmp%2#0 0                                                                  tmp%2#0
        assert // You are banned, goodbye
        // everything/my_base.py:9
        // self.creator = op.Txn.sender
        txn Sender                                                                        materialized_values%0#0
        byte "creator"                                                                    materialized_values%0#0,"creator"
        l-load materialized_values%0#0 1                                                  "creator",materialized_values%0#0
        app_global_put
        // everything/contract.py:45
        // self.counter = UInt64(ZERO)
        byte "counter"                                                                    "counter"
        int 0                                                                             "counter",0
        app_global_put
        retsub


// test_cases.everything.contract.Everything.register(name: bytes) -> void:
subroutine register:
    register_block@0:                                                                     (𝕡) name#0 |
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        txn Sender                                                                        (𝕡) name#0 | tmp%0#1
        l-load tmp%0#1 0                                                                  (𝕡) name#0 | tmp%0#1
        // everything/contract.py:25
        // addr = Account(BANNED)
        addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"                 (𝕡) name#0 | tmp%0#1,Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        !=                                                                                (𝕡) name#0 | tmp%2#0
        l-load tmp%2#0 0                                                                  (𝕡) name#0 | tmp%2#0
        assert // You are banned, goodbye                                                 (𝕡) name#0 |
        // everything/contract.py:50
        // if op.Txn.on_completion == OnCompleteAction.OptIn:
        txn OnCompletion                                                                  (𝕡) name#0 | tmp%0#0
        l-load tmp%0#0 0                                                                  (𝕡) name#0 | tmp%0#0
        int OptIn                                                                         (𝕡) name#0 | tmp%0#0,OptIn
        ==                                                                                (𝕡) name#0 | tmp%1#0
        l-load tmp%1#0 0                                                                  (𝕡) name#0 | tmp%1#0
        bz register_after_if_else@4 ; b register_if_body@1                                (𝕡) name#0 |

    register_if_body@1:                                                                   (𝕡) name#0 |
        // everything/contract.py:51
        // sender_name, sender_name_existed = self.name.maybe(account=0)
        int 0                                                                             (𝕡) name#0 | 0
        int 0                                                                             (𝕡) name#0 | 0,0
        byte "name"                                                                       (𝕡) name#0 | 0,0,"name"
        app_local_get_ex                                                                  (𝕡) name#0 | sender_name#0,sender_name_existed#0
        l-store sender_name_existed#0 1                                                   (𝕡) name#0 | sender_name_existed#0,sender_name#0
        v-store sender_name#0                                                             (𝕡) name#0 | sender_name_existed#0
        // everything/contract.py:52
        // if not sender_name_existed:
        l-load sender_name_existed#0 0                                                    (𝕡) name#0 | sender_name_existed#0
        bz register_if_body@2 ; b register_after_if_else@4                                (𝕡) name#0 |

    register_if_body@2:                                                                   (𝕡) name#0 |
        // everything/contract.py:53
        // self.counter += multiplicative_identity()  # has full FuncDef
        int 0                                                                             (𝕡) name#0 | 0
        byte "counter"                                                                    (𝕡) name#0 | 0,"counter"
        app_global_get_ex                                                                 (𝕡) name#0 | maybe_value%1#0,maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                         (𝕡) name#0 | maybe_value%1#0,maybe_exists%1#0
        assert // check self.counter exists                                               (𝕡) name#0 | maybe_value%1#0
        l-load maybe_value%1#0 0                                                          (𝕡) name#0 | maybe_value%1#0
        // everything/my_base.py:20
        // return UInt64(1)
        int 1                                                                             (𝕡) name#0 | maybe_value%1#0,1
        // everything/contract.py:53
        // self.counter += multiplicative_identity()  # has full FuncDef
        +                                                                                 (𝕡) name#0 | materialized_values%0#0
        byte "counter"                                                                    (𝕡) name#0 | materialized_values%0#0,"counter"
        l-load materialized_values%0#0 1                                                  (𝕡) name#0 | "counter",materialized_values%0#0
        app_global_put                                                                    (𝕡) name#0 |
        b register_after_if_else@4                                                        (𝕡) name#0 |

    register_after_if_else@4:                                                             (𝕡) name#0 |
        // everything/contract.py:54
        // self.name[0] = name
        int 0                                                                             (𝕡) name#0 | 0
        byte "name"                                                                       (𝕡) name#0 | 0,"name"
        p-load name#0                                                                     (𝕡) name#0 | 0,"name",name#0 (copy)
        app_local_put                                                                     (𝕡) name#0 |
        retsub


// test_cases.everything.contract.Everything.say_hello() -> bytes:
subroutine say_hello:
    say_hello_block@0:
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        txn Sender                                                                        tmp%0#0
        l-load tmp%0#0 0                                                                  tmp%0#0
        // everything/contract.py:25
        // addr = Account(BANNED)
        addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"                 tmp%0#0,Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
        // everything/contract.py:79
        // assert op.Txn.sender != get_banned(), "You are banned, goodbye"
        !=                                                                                tmp%2#0
        l-load tmp%2#0 0                                                                  tmp%2#0
        assert // You are banned, goodbye
        // everything/contract.py:59
        // name, exists = self.name.maybe(account=0)
        int 0                                                                             0
        int 0                                                                             0,0
        byte "name"                                                                       0,0,"name"
        app_local_get_ex                                                                  name#0,exists#0
        l-store exists#0 1                                                                exists#0,name#0
        v-store name#0                                                                    exists#0
        // everything/contract.py:60
        // if not exists:
        l-load exists#0 0                                                                 exists#0
        bz say_hello_if_body@1 ; b say_hello_after_if_else@2

    say_hello_if_body@1:
        // everything/contract.py:61
        // return String("Howdy stranger!")
        byte 0x000f486f77647920737472616e67657221                                         0x000f486f77647920737472616e67657221
        retsub                                                                            0x000f486f77647920737472616e67657221

    say_hello_after_if_else@2:
        // everything/contract.py:62
        // return "Hello, " + name + "!"
        v-load name#0                                                                     name#0
        extract 2 0                                                                       expr_value_trimmed%1#0
        byte 0x48656c6c6f2c20                                                             expr_value_trimmed%1#0,0x48656c6c6f2c20
        l-load expr_value_trimmed%1#0 1                                                   0x48656c6c6f2c20,expr_value_trimmed%1#0
        concat                                                                            concatenated%0#0
        l-load-copy concatenated%0#0 0                                                    concatenated%0#0,concatenated%0#0 (copy)
        len                                                                               concatenated%0#0,len_%0#0
        l-load len_%0#0 0                                                                 concatenated%0#0,len_%0#0
        itob                                                                              concatenated%0#0,as_bytes%0#0
        l-load as_bytes%0#0 0                                                             concatenated%0#0,as_bytes%0#0
        extract 6 2                                                                       concatenated%0#0,len_16_bit%0#0
        l-load len_16_bit%0#0 0                                                           concatenated%0#0,len_16_bit%0#0
        l-load concatenated%0#0 1                                                         len_16_bit%0#0,concatenated%0#0
        concat                                                                            concat_result%0#0
        l-load concat_result%0#0 0                                                        concat_result%0#0
        extract 2 0                                                                       expr_value_trimmed%2#0
        l-load expr_value_trimmed%2#0 0                                                   expr_value_trimmed%2#0
        byte 0x21                                                                         expr_value_trimmed%2#0,0x21
        concat                                                                            concatenated%1#0
        l-load-copy concatenated%1#0 0                                                    concatenated%1#0,concatenated%1#0 (copy)
        len                                                                               concatenated%1#0,len_%1#0
        l-load len_%1#0 0                                                                 concatenated%1#0,len_%1#0
        itob                                                                              concatenated%1#0,as_bytes%1#0
        l-load as_bytes%1#0 0                                                             concatenated%1#0,as_bytes%1#0
        extract 6 2                                                                       concatenated%1#0,len_16_bit%1#0
        l-load len_16_bit%1#0 0                                                           concatenated%1#0,len_16_bit%1#0
        l-load concatenated%1#0 1                                                         len_16_bit%1#0,concatenated%1#0
        concat                                                                            concat_result%1#0
        l-load concat_result%1#0 0                                                        concat_result%1#0
        retsub                                                                            concat_result%1#0


// test_cases.everything.contract.Everything.calculate(a: bytes, b: bytes) -> bytes:
subroutine calculate:
    calculate_block@0:                                                                    (𝕡) a#0,b#0 |
        // everything/my_base.py:15
        // return arc4.UInt64(a.native + b.native)
        p-load a#0                                                                        (𝕡) a#0,b#0 | a#0 (copy)
        btoi                                                                              (𝕡) a#0,b#0 | tmp%0#0
        p-load b#0                                                                        (𝕡) a#0,b#0 | tmp%0#0,b#0 (copy)
        btoi                                                                              (𝕡) a#0,b#0 | tmp%0#0,tmp%1#1
        l-load tmp%0#0 1                                                                  (𝕡) a#0,b#0 | tmp%1#1,tmp%0#0
        l-load-copy tmp%1#1 1                                                             (𝕡) a#0,b#0 | tmp%1#1,tmp%0#0,tmp%1#1 (copy)
        +                                                                                 (𝕡) a#0,b#0 | tmp%1#1,to_encode%0#0
        l-load to_encode%0#0 0                                                            (𝕡) a#0,b#0 | tmp%1#1,to_encode%0#0
        itob                                                                              (𝕡) a#0,b#0 | tmp%1#1,c#0
        // everything/contract.py:67
        // return arc4_UInt64(c.native * b.native)
        l-load c#0 0                                                                      (𝕡) a#0,b#0 | tmp%1#1,c#0
        btoi                                                                              (𝕡) a#0,b#0 | tmp%1#1,tmp%0#0
        l-load tmp%0#0 0                                                                  (𝕡) a#0,b#0 | tmp%1#1,tmp%0#0
        l-load tmp%1#1 1                                                                  (𝕡) a#0,b#0 | tmp%0#0,tmp%1#1
        *                                                                                 (𝕡) a#0,b#0 | to_encode%0#0
        l-load to_encode%0#0 0                                                            (𝕡) a#0,b#0 | to_encode%0#0
        itob                                                                              (𝕡) a#0,b#0 | val_as_bytes%0#0
        l-load val_as_bytes%0#0 0                                                         (𝕡) a#0,b#0 | val_as_bytes%0#0
        retsub                                                                            val_as_bytes%0#0


// test_cases.everything.contract.Everything.close_out() -> void:
subroutine close_out:
    close_out_block@0:
        // everything/contract.py:83
        // self.counter -= positive_one()
        int 0                                                                             0
        byte "counter"                                                                    0,"counter"
        app_global_get_ex                                                                 maybe_value%0#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                         maybe_value%0#0,maybe_exists%0#0
        assert // check self.counter exists                                               maybe_value%0#0
        l-load maybe_value%0#0 0                                                          maybe_value%0#0
        // everything/contract.py:88
        // return UInt64(1)
        int 1                                                                             maybe_value%0#0,1
        // everything/contract.py:83
        // self.counter -= positive_one()
        -                                                                                 materialized_values%0#0
        byte "counter"                                                                    materialized_values%0#0,"counter"
        l-load materialized_values%0#0 1                                                  "counter",materialized_values%0#0
        app_global_put
        retsub


