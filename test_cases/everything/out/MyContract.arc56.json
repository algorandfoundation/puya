{
    "name": "MyContract",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "register",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "say_hello",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "calculate",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "close_out",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "creator": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Y3JlYXRvcg=="
                },
                "counter": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y291bnRlcg=="
                }
            },
            "local": {
                "name": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "bmFtZQ=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        133
                    ],
                    "errorMessage": "OnCompletion must be CloseOut && can only call when not creating"
                },
                {
                    "pc": [
                        84
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        147
                    ],
                    "errorMessage": "OnCompletion must be one of NoOp, OptIn && can only call when not creating"
                },
                {
                    "pc": [
                        155,
                        190,
                        227
                    ],
                    "errorMessage": "You are banned, goodbye"
                },
                {
                    "pc": [
                        210,
                        341
                    ],
                    "errorMessage": "check self.counter exists"
                },
                {
                    "pc": [
                        179
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        185
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        313,
                        321
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        276,
                        291
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [
                {
                    "pc": [
                        15
                    ],
                    "errorMessage": "check self.counter exists"
                }
            ],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyB0ZXN0X2Nhc2VzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5jbGVhcl9zdGF0ZV9wcm9ncmFtKCkgLT4gdWludDY0OgptYWluOgogICAgYnl0ZWNibG9jayAiY291bnRlciIKICAgIC8vIGV2ZXJ5dGhpbmcvY29udHJhY3QucHk6ODMKICAgIC8vIHNlbGYuY291bnRlciAtPSBwb3NpdGl2ZV9vbmUoKQogICAgcHVzaGludCAwIC8vIDAKICAgIGJ5dGVjXzAgLy8gImNvdW50ZXIiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuY291bnRlciBleGlzdHMKICAgIC8vIGV2ZXJ5dGhpbmcvY29udHJhY3QucHk6ODgKICAgIC8vIHJldHVybiBVSW50NjQoMSkKICAgIHB1c2hpbnQgMSAvLyAxCiAgICAvLyBldmVyeXRoaW5nL2NvbnRyYWN0LnB5OjgzCiAgICAvLyBzZWxmLmNvdW50ZXIgLT0gcG9zaXRpdmVfb25lKCkKICAgIC0KICAgIGJ5dGVjXzAgLy8gImNvdW50ZXIiCiAgICBzd2FwCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gZXZlcnl0aGluZy9jb250cmFjdC5weTo3NQogICAgLy8gcmV0dXJuIFRydWUKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQACCCYEB2NvdW50ZXIgqJiVWdjr+v/JTMlK4RIuekWXTQljUYbQSj/XF3OpYl8EbmFtZQQVH3x1ggIEvWCZ5QQWWKovNhoAjgIAOAAtMRkURDEYQQAWggIEXVyExwT9ByZONhoAjgIAcADDAIAETFxhujYaAI4BABoAMRkkEjEYEERCAMkiMRmQgQMaMRgQREIAFjEAKRNEgAdjcmVhdG9yMQBnKCNnIkM2GgFHAiNZJAhMFRJEMQApE0QxGSISQQASI0kqY0UBQAAJIyhlRCIIKExnIypLAmYiQzEAKRNEI0kqY0AAGYARAA9Ib3dkeSBzdHJhbmdlciErTFCwIkNJVwIAgAkAB0hlbGxvLCBMUElXAgAVFlcGAlwAgAEhUElXAgAVFlcGAlwAQv/MNhoBSRUlEkQ2GgJJFSUSREwXTBdMSwEICxYrTFCwIkMjKGVEIgkoTGciQw==",
        "clear": "CyYBB2NvdW50ZXKBAChlRIEBCShMZ4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}