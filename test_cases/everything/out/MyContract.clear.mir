// Op                              //                                                      Op Description                                  Stack (out)                                    X stack                        Source code                                    Source line

#pragma version 10

// test_cases.everything.contract.Everything.clear_state_program() -> uint64:
main_block@0:
    callsub _remove_sender         //                                                                                                                                                                                    self._remove_sender()                          everything/contract.py:74
    int 1                          //                                                                                                      1                                                                             True                                           everything/contract.py:75
    return                         //                                                                                                                                                                                    return True                                    everything/contract.py:75


// test_cases.everything.contract.Everything._remove_sender() -> void:
_remove_sender:
    proto 0 0                      //                                                                                                                                                                                    @subroutine\ndef _remove_sender(self) -> None: everything/contract.py:81-82

_remove_sender_block@0:
    int 0                          //                                                                                                      0                                                                             self.counter                                   everything/contract.py:83
    byte "counter"                 //                                                                                                      0,"counter"                                                                   self.counter                                   everything/contract.py:83
    app_global_get_ex              //                                                                                                      {app_global_get_ex}.0,{app_global_get_ex}.1                                   self.counter                                   everything/contract.py:83
    //                             virtual: store counter_exists%0#0 to l-stack (no copy)  counter_exists%0#0,{app_global_get_ex}.0                                                       self.counter                   everything/contract.py:83
    //                             virtual: store counter_value%0#0 to l-stack (no copy)   counter_value%0#0,counter_exists%0#0                                                           self.counter                   everything/contract.py:83
    //                             virtual: load counter_exists%0#0 from l-stack (no copy) counter_value%0#0,counter_exists%0#0                                                           self.counter                   everything/contract.py:83
    assert // check counter exists //                                                                                                      counter_value%0#0                                                             self.counter                                   everything/contract.py:83
    callsub positive_one           //                                                                                                      counter_value%0#0,{positive_one}                                              positive_one()                                 everything/contract.py:83
    //                             virtual: store tmp%0#0 to l-stack (no copy)             counter_value%0#0,tmp%0#0                                                                      positive_one()                 everything/contract.py:83
    //                             virtual: load counter_value%0#0 from l-stack (no copy)  tmp%0#0,counter_value%0#0                                                                      self.counter -= positive_one() everything/contract.py:83
    //                             virtual: load tmp%0#0 from l-stack (no copy)            counter_value%0#0,tmp%0#0                                                                      self.counter -= positive_one() everything/contract.py:83
    -                              //                                                                                                      {-}                                                                           self.counter -= positive_one()                 everything/contract.py:83
    //                             virtual: store new_state_value%0#0 to l-stack (no copy) new_state_value%0#0                                                                            self.counter -= positive_one() everything/contract.py:83
    byte "counter"                 //                                                                                                      new_state_value%0#0,"counter"                                                 self.counter                                   everything/contract.py:83
    uncover 1                      //                                                      load new_state_value%0#0 from l-stack (no copy) "counter",new_state_value%0#0                                                 self.counter -= positive_one()                 everything/contract.py:83
    app_global_put                 //                                                                                                                                                                                    self.counter -= positive_one()                 everything/contract.py:83
    retsub                         //


// test_cases.everything.contract.positive_one() -> uint64:
positive_one:
    proto 0 1                      //                                                                                                                                                                                    @subroutine\ndef positive_one() -> UInt64:     everything/contract.py:86-87

positive_one_block@0:
    int 1                          //                                                                                                      1                                                                             UInt64(1)                                      everything/contract.py:88
    retsub                         //                                                                                                      1                                                                             return UInt64(1)                               everything/contract.py:88

