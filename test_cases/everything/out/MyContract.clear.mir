// Op                                    Stack (out)
// test_cases.everything.contract.Everything.clear_state_program() -> uint64:
main_block@0:
    // everything/contract.py:74
    // self._remove_sender()
    callsub _remove_sender
    // everything/contract.py:75
    // return True
    int 1                                1
    return


// test_cases.everything.contract.Everything._remove_sender() -> void:
_remove_sender:
    // everything/contract.py:81-82
    // @subroutine
    // def _remove_sender(self) -> None:
    proto 0 0

_remove_sender_block@0:
    // everything/contract.py:83
    // self.counter -= positive_one()
    int 0                                0
    byte "counter"                       0,"counter"
    app_global_get_ex                    maybe_value%0#0,maybe_exists%0#0
    assert // check self.counter exists  maybe_value%0#0
    callsub positive_one                 maybe_value%0#0,tmp%0#0
    l-load maybe_value%0#0 1             tmp%0#0,maybe_value%0#0
    l-load tmp%0#0 1                     maybe_value%0#0,tmp%0#0
    -                                    new_state_value%0#0
    byte "counter"                       new_state_value%0#0,"counter"
    l-load new_state_value%0#0 1         "counter",new_state_value%0#0
    app_global_put
    retsub


// test_cases.everything.contract.positive_one() -> uint64:
positive_one:
    // everything/contract.py:86-87
    // @subroutine
    // def positive_one() -> UInt64:
    proto 0 1

positive_one_block@0:
    // everything/contract.py:88
    // return UInt64(1)
    int 1                                1
    retsub                               1


