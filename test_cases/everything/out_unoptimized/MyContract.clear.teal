#pragma version 10
#pragma typetrack false

// test_cases.everything.contract.Everything.clear_state_program() -> uint64:
main:
    bytecblock "counter"
    // everything/contract.py:74
    // self._remove_sender()
    callsub _remove_sender
    // everything/contract.py:75
    // return True
    pushint 1 // 1
    return


// test_cases.everything.contract.Everything._remove_sender() -> void:
_remove_sender:
    // everything/contract.py:81-82
    // @subroutine
    // def _remove_sender(self) -> None:
    proto 0 0
    // everything/contract.py:83
    // self.counter -= positive_one()
    pushint 0 // 0
    bytec_0 // "counter"
    app_global_get_ex
    assert // check self.counter exists
    callsub positive_one
    -
    bytec_0 // "counter"
    swap
    app_global_put
    retsub


// test_cases.everything.contract.positive_one() -> uint64:
positive_one:
    // everything/contract.py:86-87
    // @subroutine
    // def positive_one() -> UInt64:
    proto 0 1
    // everything/contract.py:88
    // return UInt64(1)
    pushint 1 // 1
    retsub
