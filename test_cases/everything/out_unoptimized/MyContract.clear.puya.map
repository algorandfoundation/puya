{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAyEQ;;;AACO;;AAAP;;;;AAaG;;AAAP;;;;AALI;;AAAA;AAAA;AAAA;AAAgB;;;AAAhB;AAAA;AAAA;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.everything.contract.Everything.clear_state_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock \"counter\""
    },
    "11": {
      "op": "b main_block@0"
    },
    "14": {
      "block": "main_block@0",
      "stack_in": [],
      "callsub": "test_cases.everything.contract.Everything._remove_sender",
      "op": "callsub _remove_sender"
    },
    "17": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "19": {
      "op": "return",
      "stack_out": []
    },
    "20": {
      "subroutine": "test_cases.everything.contract.positive_one",
      "params": {},
      "block": "positive_one",
      "stack_in": [],
      "op": "b positive_one_block@0"
    },
    "23": {
      "block": "positive_one_block@0",
      "stack_in": [],
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "25": {
      "retsub": true,
      "op": "retsub"
    },
    "26": {
      "subroutine": "test_cases.everything.contract.Everything._remove_sender",
      "params": {},
      "block": "_remove_sender",
      "stack_in": [],
      "op": "b _remove_sender_block@0"
    },
    "29": {
      "block": "_remove_sender_block@0",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "31": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "32": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "33": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "34": {
      "callsub": "test_cases.everything.contract.positive_one",
      "op": "callsub positive_one",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "37": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "38": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "tmp%1#0",
        "\"counter\""
      ]
    },
    "39": {
      "op": "uncover 1",
      "stack_out": [
        "\"counter\"",
        "tmp%1#0"
      ]
    },
    "41": {
      "op": "app_global_put",
      "stack_out": []
    },
    "42": {
      "retsub": true,
      "op": "retsub"
    }
  }
}