{
    "hints": {
        "test_static_elements()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_dynamic_elements()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_mixed_single_dynamic_elements()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_mixed_multiple_dynamic_elements()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_nested_struct_replacement()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_nested_tuple_modification()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "DynamicArrayContract",
        "methods": [
            {
                "name": "test_static_elements",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_dynamic_elements",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_mixed_single_dynamic_elements",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_mixed_multiple_dynamic_elements",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_nested_struct_replacement",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_nested_tuple_modification",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}