#pragma version 10

test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.approval_program:
    // arc4_dynamic_arrays/contract.py:35
    // dynamic_array = arc4.DynamicArray(dynamic_struct1.copy(), dynamic_struct2.copy())
    byte 0x00020004001200040009000361796500036265650004000b000548656c6c6f0003617965
    // arc4_dynamic_arrays/contract.py:36
    // log(dynamic_array)
    log
    // arc4_dynamic_arrays/contract.py:37
    // log(dynamic_array[0])
    byte 0x000400090003
    log
    // arc4_dynamic_arrays/contract.py:38
    // log(dynamic_array[1])
    byte 0x0004000b0005
    log
    // arc4_dynamic_arrays/contract.py:42
    // dynamic_fixed = arc4.DynamicArray(fixed1.copy(), fixed2.copy())
    byte 0x00020000000000000003040500000400000000002a50
    // arc4_dynamic_arrays/contract.py:43
    // log(dynamic_fixed)
    log
    // arc4_dynamic_arrays/contract.py:44
    // log(dynamic_fixed[0])
    byte 0x00000000000000030405
    log
    // arc4_dynamic_arrays/contract.py:45
    // log(dynamic_fixed[1])
    byte 0x00000400000000002a50
    log
    // arc4_dynamic_arrays/contract.py:49
    // dynamic_mixed = arc4.DynamicArray(mixed1.copy(), mixed2.copy())
    byte 0x00020004001b00000000000000030012000004000000000000036179650000040000000000001200000000000000030003626565
    // arc4_dynamic_arrays/contract.py:50
    // log(dynamic_mixed)
    log
    // arc4_dynamic_arrays/contract.py:51
    // log(dynamic_mixed[0])
    byte 0x0000
    log
    // arc4_dynamic_arrays/contract.py:52
    // log(dynamic_mixed[1])
    byte 0x0000
    log
    // arc4_dynamic_arrays/contract.py:54
    // return True
    int 1
    return
