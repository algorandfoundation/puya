// Op                                                                                                        Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc4_dynamic_arrays/contract.py:38
        // class DynamicArrayContract(ARC4Contract):
        txn NumAppArgs                                                                                       tmp%0#1
        bz main_bare_routing@11 ; b main_abi_routing@2

    main_abi_routing@2:
        // arc4_dynamic_arrays/contract.py:38
        // class DynamicArrayContract(ARC4Contract):
        txna ApplicationArgs 0                                                                               tmp%2#0
        method test_static_elements()void                                                                    tmp%2#0,Method(test_static_elements()void)
        method test_dynamic_elements()void                                                                   tmp%2#0,Method(test_static_elements()void),Method(test_dynamic_elements()void)
        method test_mixed_single_dynamic_elements()void                                                      tmp%2#0,Method(test_static_elements()void),Method(test_dynamic_elements()void),Method(test_mixed_single_dynamic_elements()void)
        method test_mixed_multiple_dynamic_elements()void                                                    tmp%2#0,Method(test_static_elements()void),Method(test_dynamic_elements()void),Method(test_mixed_single_dynamic_elements()void),Method(test_mixed_multiple_dynamic_elements()void)
        method test_nested_struct_replacement()void                                                          tmp%2#0,Method(test_static_elements()void),Method(test_dynamic_elements()void),Method(test_mixed_single_dynamic_elements()void),Method(test_mixed_multiple_dynamic_elements()void),Method(test_nested_struct_replacement()void)
        method test_nested_tuple_modification()void                                                          tmp%2#0,Method(test_static_elements()void),Method(test_dynamic_elements()void),Method(test_mixed_single_dynamic_elements()void),Method(test_mixed_multiple_dynamic_elements()void),Method(test_nested_struct_replacement()void),Method(test_nested_tuple_modification()void)
        l-load tmp%2#0 6                                                                                     Method(test_static_elements()void),Method(test_dynamic_elements()void),Method(test_mixed_single_dynamic_elements()void),Method(test_mixed_multiple_dynamic_elements()void),Method(test_nested_struct_replacement()void),Method(test_nested_tuple_modification()void),tmp%2#0
        match main_test_static_elements_route@3 main_test_dynamic_elements_route@4 main_test_mixed_single_dynamic_elements_route@5 main_test_mixed_multiple_dynamic_elements_route@6 main_test_nested_struct_replacement_route@7 main_test_nested_tuple_modification_route@8 ; b main_after_if_else@15 

    main_test_static_elements_route@3:
        // arc4_dynamic_arrays/contract.py:39
        // @arc4.abimethod()
        txn OnCompletion                                                                                     tmp%3#0
        !                                                                                                    tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                    tmp%5#0
        assert // can only call when not creating
        callsub test_static_elements
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_test_dynamic_elements_route@4:
        // arc4_dynamic_arrays/contract.py:55
        // @arc4.abimethod()
        txn OnCompletion                                                                                     tmp%7#0
        !                                                                                                    tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                    tmp%9#0
        assert // can only call when not creating
        callsub test_dynamic_elements
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_test_mixed_single_dynamic_elements_route@5:
        // arc4_dynamic_arrays/contract.py:74
        // @arc4.abimethod()
        txn OnCompletion                                                                                     tmp%11#0
        !                                                                                                    tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                    tmp%13#0
        assert // can only call when not creating
        callsub test_mixed_single_dynamic_elements
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_test_mixed_multiple_dynamic_elements_route@6:
        // arc4_dynamic_arrays/contract.py:89
        // @arc4.abimethod()
        txn OnCompletion                                                                                     tmp%15#0
        !                                                                                                    tmp%16#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                    tmp%17#0
        assert // can only call when not creating
        callsub test_mixed_multiple_dynamic_elements
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_test_nested_struct_replacement_route@7:
        // arc4_dynamic_arrays/contract.py:106
        // @arc4.abimethod()
        txn OnCompletion                                                                                     tmp%19#0
        !                                                                                                    tmp%20#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                    tmp%21#0
        assert // can only call when not creating
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_test_nested_tuple_modification_route@8:
        // arc4_dynamic_arrays/contract.py:133
        // @arc4.abimethod()
        txn OnCompletion                                                                                     tmp%23#0
        !                                                                                                    tmp%24#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                    tmp%25#0
        assert // can only call when not creating
        callsub test_nested_tuple_modification
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_bare_routing@11:
        // arc4_dynamic_arrays/contract.py:38
        // class DynamicArrayContract(ARC4Contract):
        txn OnCompletion                                                                                     tmp%27#0
        bz main___algopy_default_create@12 ; b main_after_if_else@15

    main___algopy_default_create@12:
        txn ApplicationID                                                                                    tmp%28#0
        !                                                                                                    tmp%29#0
        assert // can only call when creating
        int 1                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_after_if_else@15:
        // arc4_dynamic_arrays/contract.py:38
        // class DynamicArrayContract(ARC4Contract):
        int 0                                                                                                test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                                      (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16 (ùïè) tmp%0#0 | 

    main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__puya_arc4_router__@16: (ùïè) tmp%0#0 |
        x-load tmp%0#0                                                                                       tmp%0#0
        return


// _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
subroutine dynamic_array_pop_fixed_size:
    dynamic_array_pop_fixed_size_block@0:                                                                    (ùï°) array#0,fixed_byte_size#0 |
        p-load array#0                                                                                       (ùï°) array#0,fixed_byte_size#0 | array#0 (copy)
        int 0                                                                                                (ùï°) array#0,fixed_byte_size#0 | array#0 (copy),0
        extract_uint16                                                                                       (ùï°) array#0,fixed_byte_size#0 | array_length#0
        int 1                                                                                                (ùï°) array#0,fixed_byte_size#0 | array_length#0,1
        -                                                                                                    (ùï°) array#0,fixed_byte_size#0 | length_minus_1#0
        itob                                                                                                 (ùï°) array#0,fixed_byte_size#0 | tmp%0#0
        extract 6 0                                                                                          (ùï°) array#0,fixed_byte_size#0 | tmp%1#0
        p-load array#0                                                                                       (ùï°) array#0,fixed_byte_size#0 | tmp%1#0,array#0 (copy)
        l-load tmp%1#0 1                                                                                     (ùï°) array#0,fixed_byte_size#0 | array#0 (copy),tmp%1#0
        replace2 0                                                                                           (ùï°) array#0,fixed_byte_size#0 | result#0
        l-load-copy result#0 0                                                                               (ùï°) array#0,fixed_byte_size#0 | result#0,result#0 (copy)
        len                                                                                                  (ùï°) array#0,fixed_byte_size#0 | result#0,tmp%2#0
        p-load fixed_byte_size#0                                                                             (ùï°) array#0,fixed_byte_size#0 | result#0,tmp%2#0,fixed_byte_size#0 (copy)
        -                                                                                                    (ùï°) array#0,fixed_byte_size#0 | result#0,item_location#0
        l-load-copy result#0 1                                                                               (ùï°) array#0,fixed_byte_size#0 | result#0,item_location#0,result#0 (copy)
        l-load-copy item_location#0 1                                                                        (ùï°) array#0,fixed_byte_size#0 | result#0,item_location#0,result#0 (copy),item_location#0 (copy)
        p-load fixed_byte_size#0                                                                             (ùï°) array#0,fixed_byte_size#0 | result#0,item_location#0,result#0 (copy),item_location#0 (copy),fixed_byte_size#0 (copy)
        extract3                                                                                             (ùï°) array#0,fixed_byte_size#0 | result#0,item_location#0,popped#0
        l-load result#0 2                                                                                    (ùï°) array#0,fixed_byte_size#0 | item_location#0,popped#0,result#0
        int 0                                                                                                (ùï°) array#0,fixed_byte_size#0 | item_location#0,popped#0,result#0,0
        l-load item_location#0 3                                                                             (ùï°) array#0,fixed_byte_size#0 | popped#0,result#0,0,item_location#0
        substring3                                                                                           (ùï°) array#0,fixed_byte_size#0 | popped#0,result#0
        l-load popped#0 1                                                                                    (ùï°) array#0,fixed_byte_size#0 | result#0,popped#0
        l-load result#0 1                                                                                    (ùï°) array#0,fixed_byte_size#0 | popped#0,result#0
        retsub                                                                                               popped#0,result#0


// _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
subroutine dynamic_array_pop_dynamic_element:
    dynamic_array_pop_dynamic_element_block@0:                                                               (ùï°) array#0 |
        p-load array#0                                                                                       (ùï°) array#0 | array#0 (copy)
        int 0                                                                                                (ùï°) array#0 | array#0 (copy),0
        extract_uint16                                                                                       (ùï°) array#0 | array_length#0
        int 1                                                                                                (ùï°) array#0 | array_length#0,1
        -                                                                                                    (ùï°) array#0 | length_minus_1#0
        l-store-copy length_minus_1#0 0                                                                      (ùï°) array#0 | length_minus_1#0,length_minus_1#0 (copy)
        v-store length_minus_1#0                                                                             (ùï°) array#0 | length_minus_1#0
        l-load length_minus_1#0 0                                                                            (ùï°) array#0 | length_minus_1#0
        int 2                                                                                                (ùï°) array#0 | length_minus_1#0,2
        *                                                                                                    (ùï°) array#0 | popped_header_offset#0
        l-store-copy popped_header_offset#0 0                                                                (ùï°) array#0 | popped_header_offset#0,popped_header_offset#0 (copy)
        v-store popped_header_offset#0                                                                       (ùï°) array#0 | popped_header_offset#0
        p-load array#0                                                                                       (ùï°) array#0 | popped_header_offset#0,array#0 (copy)
        extract 2 0                                                                                          (ùï°) array#0 | popped_header_offset#0,head_and_tail#0
        l-store-copy head_and_tail#0 0                                                                       (ùï°) array#0 | popped_header_offset#0,head_and_tail#0,head_and_tail#0 (copy)
        v-store head_and_tail#0                                                                              (ùï°) array#0 | popped_header_offset#0,head_and_tail#0
        l-load-copy head_and_tail#0 0                                                                        (ùï°) array#0 | popped_header_offset#0,head_and_tail#0,head_and_tail#0 (copy)
        l-load popped_header_offset#0 2                                                                      (ùï°) array#0 | head_and_tail#0,head_and_tail#0 (copy),popped_header_offset#0
        extract_uint16                                                                                       (ùï°) array#0 | head_and_tail#0,popped_offset#0
        l-store-copy popped_offset#0 1                                                                       (ùï°) array#0 | popped_offset#0,head_and_tail#0,popped_offset#0 (copy)
        v-store popped_offset#0                                                                              (ùï°) array#0 | popped_offset#0,head_and_tail#0
        l-load-copy head_and_tail#0 0                                                                        (ùï°) array#0 | popped_offset#0,head_and_tail#0,head_and_tail#0 (copy)
        len                                                                                                  (ùï°) array#0 | popped_offset#0,head_and_tail#0,tmp%0#0
        l-load head_and_tail#0 1                                                                             (ùï°) array#0 | popped_offset#0,tmp%0#0,head_and_tail#0
        l-load popped_offset#0 2                                                                             (ùï°) array#0 | tmp%0#0,head_and_tail#0,popped_offset#0
        l-load tmp%0#0 2                                                                                     (ùï°) array#0 | head_and_tail#0,popped_offset#0,tmp%0#0
        substring3                                                                                           (ùï°) array#0 | popped#0
        v-store popped#0                                                                                     (ùï°) array#0 |
        byte 0x                                                                                              (ùï°) array#0 | 0x
        v-store new_head#0                                                                                   (ùï°) array#0 |
        int 0                                                                                                (ùï°) array#0 | 0
        v-store head_offset#0                                                                                (ùï°) array#0 |
        b dynamic_array_pop_dynamic_element_for_header@1                                                     (ùï°) array#0 |

    dynamic_array_pop_dynamic_element_for_header@1:                                                          (ùï°) array#0 |
        v-load head_offset#0                                                                                 (ùï°) array#0 | head_offset#0
        v-load popped_header_offset#0                                                                        (ùï°) array#0 | head_offset#0,popped_header_offset#0
        <                                                                                                    (ùï°) array#0 | continue_looping%0#0
        bz dynamic_array_pop_dynamic_element_after_for@4 ; b dynamic_array_pop_dynamic_element_for_body@2 (ùï°) array#0 | 

    dynamic_array_pop_dynamic_element_for_body@2:                                                            (ùï°) array#0 |
        v-load head_and_tail#0                                                                               (ùï°) array#0 | head_and_tail#0
        v-load head_offset#0                                                                                 (ùï°) array#0 | head_and_tail#0,head_offset#0
        l-store-copy head_offset#0 1                                                                         (ùï°) array#0 | head_offset#0,head_and_tail#0,head_offset#0 (copy)
        extract_uint16                                                                                       (ùï°) array#0 | head_offset#0,item_offset#0
        int 2                                                                                                (ùï°) array#0 | head_offset#0,item_offset#0,2
        -                                                                                                    (ùï°) array#0 | head_offset#0,item_offset#0
        itob                                                                                                 (ùï°) array#0 | head_offset#0,tmp%2#0
        extract 6 2                                                                                          (ùï°) array#0 | head_offset#0,tmp%3#0
        v-load new_head#0                                                                                    (ùï°) array#0 | head_offset#0,tmp%3#0,new_head#0
        l-load tmp%3#0 1                                                                                     (ùï°) array#0 | head_offset#0,new_head#0,tmp%3#0
        concat                                                                                               (ùï°) array#0 | head_offset#0,new_head#0
        v-store new_head#0                                                                                   (ùï°) array#0 | head_offset#0
        l-load head_offset#0 0                                                                               (ùï°) array#0 | head_offset#0
        int 2                                                                                                (ùï°) array#0 | head_offset#0,2
        +                                                                                                    (ùï°) array#0 | head_offset#0
        v-store head_offset#0                                                                                (ùï°) array#0 |
        b dynamic_array_pop_dynamic_element_for_header@1                                                     (ùï°) array#0 |

    dynamic_array_pop_dynamic_element_after_for@4:                                                           (ùï°) array#0 |
        v-load length_minus_1#0                                                                              (ùï°) array#0 | length_minus_1#0
        itob                                                                                                 (ùï°) array#0 | tmp%4#0
        extract 6 2                                                                                          (ùï°) array#0 | tmp%5#0
        v-load new_head#0                                                                                    (ùï°) array#0 | tmp%5#0,new_head#0
        concat                                                                                               (ùï°) array#0 | tmp%6#0
        v-load popped_header_offset#0                                                                        (ùï°) array#0 | tmp%6#0,popped_header_offset#0
        int 2                                                                                                (ùï°) array#0 | tmp%6#0,popped_header_offset#0,2
        +                                                                                                    (ùï°) array#0 | tmp%6#0,tmp%7#0
        v-load head_and_tail#0                                                                               (ùï°) array#0 | tmp%6#0,tmp%7#0,head_and_tail#0
        l-load tmp%7#0 1                                                                                     (ùï°) array#0 | tmp%6#0,head_and_tail#0,tmp%7#0
        v-load popped_offset#0                                                                               (ùï°) array#0 | tmp%6#0,head_and_tail#0,tmp%7#0,popped_offset#0
        substring3                                                                                           (ùï°) array#0 | tmp%6#0,tmp%8#0
        l-load tmp%6#0 1                                                                                     (ùï°) array#0 | tmp%8#0,tmp%6#0
        l-load tmp%8#0 1                                                                                     (ùï°) array#0 | tmp%6#0,tmp%8#0
        concat                                                                                               (ùï°) array#0 | updated#0
        v-load popped#0                                                                                      (ùï°) array#0 | updated#0,popped#0
        l-load updated#0 1                                                                                   (ùï°) array#0 | popped#0,updated#0
        retsub                                                                                               popped#0,updated#0


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
subroutine dynamic_array_concat_dynamic_element:
    dynamic_array_concat_dynamic_element_block@0:                                                            (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        byte 0x                                                                                              (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 0x
        v-store new_head#0                                                                                   (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load new_items_count#0                                                                             (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_items_count#0 (copy)
        int 2                                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_items_count#0 (copy),2
        *                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | item_offset_adjustment#0
        v-store item_offset_adjustment#0                                                                     (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_items_count#0                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy)
        int 2                                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy),2
        *                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%0#0
        v-store tmp%0#0                                                                                      (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        int 0                                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 0
        v-store head_offset#0                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@1                                                  (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_for_header@1:                                                       (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        v-load head_offset#0                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-load tmp%0#0                                                                                       (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%0#0
        <                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | continue_looping%0#0
        bz dynamic_array_concat_dynamic_element_after_for@4 ; b dynamic_array_concat_dynamic_element_for_body@2 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 

    dynamic_array_concat_dynamic_element_for_body@2:                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_head_and_tail#0                                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_head_and_tail#0 (copy)
        v-load head_offset#0                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_head_and_tail#0 (copy),head_offset#0
        l-store-copy head_offset#0 1                                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,array_head_and_tail#0 (copy),head_offset#0 (copy)
        extract_uint16                                                                                       (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0
        v-load item_offset_adjustment#0                                                                      (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0,item_offset_adjustment#0
        l-load item_offset#0 1                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset_adjustment#0,item_offset#0
        +                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%1#0
        itob                                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%2#0
        extract 6 2                                                                                          (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%3#0
        v-load new_head#0                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%3#0,new_head#0
        l-load tmp%3#0 1                                                                                     (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0,tmp%3#0
        concat                                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0
        v-store new_head#0                                                                                   (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        l-load head_offset#0 0                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        int 2                                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,2
        +                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-store head_offset#0                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@1                                                  (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_after_for@4:                                                        (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_head_and_tail#0                                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_head_and_tail#0 (copy)
        len                                                                                                  (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | item_offset_adjustment#2
        v-store item_offset_adjustment#2                                                                     (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        int 0                                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 0
        v-store head_offset#0                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@5                                                  (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_for_header@5:                                                       (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        v-load head_offset#0                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-load item_offset_adjustment#0                                                                      (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset_adjustment#0
        <                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | continue_looping%1#0
        bz dynamic_array_concat_dynamic_element_after_for@8 ; b dynamic_array_concat_dynamic_element_for_body@6 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 

    dynamic_array_concat_dynamic_element_for_body@6:                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load new_head_and_tail#0                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_head_and_tail#0 (copy)
        v-load head_offset#0                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_head_and_tail#0 (copy),head_offset#0
        l-store-copy head_offset#0 1                                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head_and_tail#0 (copy),head_offset#0 (copy)
        extract_uint16                                                                                       (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0
        v-load item_offset_adjustment#2                                                                      (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0,item_offset_adjustment#2
        l-load item_offset#0 1                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset_adjustment#2,item_offset#0
        +                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%5#0
        itob                                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%6#0
        extract 6 2                                                                                          (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%7#0
        v-load new_head#0                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%7#0,new_head#0
        l-load tmp%7#0 1                                                                                     (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0,tmp%7#0
        concat                                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0
        v-store new_head#0                                                                                   (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        l-load head_offset#0 0                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        int 2                                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,2
        +                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-store head_offset#0                                                                                (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@5                                                  (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_after_for@8:                                                        (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_items_count#0                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy)
        p-load new_items_count#0                                                                             (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy),new_items_count#0 (copy)
        +                                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%8#0
        itob                                                                                                 (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%9#0
        extract 6 2                                                                                          (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%10#0
        v-load new_head#0                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%10#0,new_head#0
        concat                                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0
        p-load array_head_and_tail#0                                                                         (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,array_head_and_tail#0 (copy)
        v-load tmp%0#0                                                                                       (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,array_head_and_tail#0 (copy),tmp%0#0
        v-load item_offset_adjustment#2                                                                      (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,array_head_and_tail#0 (copy),tmp%0#0,item_offset_adjustment#2
        substring3                                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,tmp%14#0
        l-load tmp%11#0 1                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%14#0,tmp%11#0
        l-load tmp%14#0 1                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,tmp%14#0
        concat                                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0
        p-load new_head_and_tail#0                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,new_head_and_tail#0 (copy)
        len                                                                                                  (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%17#0
        p-load new_head_and_tail#0                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0 (copy)
        v-load item_offset_adjustment#0                                                                      (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0 (copy),item_offset_adjustment#0
        l-load tmp%17#0 2                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,new_head_and_tail#0 (copy),item_offset_adjustment#0,tmp%17#0
        substring3                                                                                           (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%18#0
        l-load tmp%15#0 1                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%18#0,tmp%15#0
        l-load tmp%18#0 1                                                                                    (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%18#0
        concat                                                                                               (ùï°) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%19#0
        retsub                                                                                               tmp%19#0


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
subroutine dynamic_array_replace_dynamic_element:
    dynamic_array_replace_dynamic_element_block@0:                                                           (ùï°) source#0,new_item#0,index#0 |
        p-load source#0                                                                                      (ùï°) source#0,new_item#0,index#0 | source#0 (copy)
        substring 0 2                                                                                        (ùï°) source#0,new_item#0,index#0 | size_b#0
        l-store-copy size_b#0 0                                                                              (ùï°) source#0,new_item#0,index#0 | size_b#0,size_b#0 (copy)
        v-store size_b#0                                                                                     (ùï°) source#0,new_item#0,index#0 | size_b#0
        l-load size_b#0 0                                                                                    (ùï°) source#0,new_item#0,index#0 | size_b#0
        btoi                                                                                                 (ùï°) source#0,new_item#0,index#0 | array_length#0
        p-load source#0                                                                                      (ùï°) source#0,new_item#0,index#0 | array_length#0,source#0 (copy)
        extract 2 0                                                                                          (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0
        p-load index#0                                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,index#0 (copy)
        int 2                                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,index#0 (copy),2
        *                                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,tmp%0#1
        l-load-copy array_head_and_tail#0 1                                                                  (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,tmp%0#1,array_head_and_tail#0 (copy)
        l-load tmp%0#1 1                                                                                     (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,array_head_and_tail#0 (copy),tmp%0#1
        extract_uint16                                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0
        p-load index#0                                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,index#0 (copy)
        int 1                                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,index#0 (copy),1
        +                                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,tmp%1#1
        int 2                                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,tmp%1#1,2
        *                                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,head_offset#0
        l-store-copy head_offset#0 0                                                                         (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,head_offset#0,head_offset#0 (copy)
        v-store head_offset#0                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,head_offset#0
        l-load-copy array_head_and_tail#0 2                                                                  (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,head_offset#0,array_head_and_tail#0 (copy)
        l-load head_offset#0 1                                                                               (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,array_head_and_tail#0 (copy),head_offset#0
        extract_uint16                                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0
        l-load-copy array_head_and_tail#0 2                                                                  (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,array_head_and_tail#0 (copy)
        len                                                                                                  (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0
        l-load-copy array_length#0 4                                                                         (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0,array_length#0 (copy)
        p-load index#0                                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0,array_length#0 (copy),index#0 (copy)
        -                                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0
        int 1                                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0,1
        -                                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0,is_before_end#0
        l-load-copy end_of_tail#0 1                                                                          (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,next_item_offset#0,end_of_tail#0,is_before_end#0,end_of_tail#0 (copy)
        l-load next_item_offset#0 3                                                                          (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,is_before_end#0,end_of_tail#0 (copy),next_item_offset#0
        l-load is_before_end#0 2                                                                             (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_of_tail#0 (copy),next_item_offset#0,is_before_end#0
        select                                                                                               (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0
        l-load-copy end_offset#0 0                                                                           (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,end_offset#0 (copy)
        l-load-copy original_offset#0 3                                                                      (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,end_offset#0 (copy),original_offset#0 (copy)
        -                                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,original_item_length#0
        v-store original_item_length#0                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0
        p-load new_item#0                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,new_item#0 (copy)
        len                                                                                                  (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,new_item_length#0
        v-store new_item_length#0                                                                            (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0
        l-load-copy array_head_and_tail#0 3                                                                  (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,array_head_and_tail#0 (copy)
        int 0                                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,original_offset#0,end_of_tail#0,end_offset#0,array_head_and_tail#0 (copy),0
        l-load original_offset#0 4                                                                           (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,end_of_tail#0,end_offset#0,array_head_and_tail#0 (copy),0,original_offset#0
        substring3                                                                                           (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,end_of_tail#0,end_offset#0,tmp%4#0
        p-load new_item#0                                                                                    (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,end_of_tail#0,end_offset#0,tmp%4#0,new_item#0 (copy)
        concat                                                                                               (ùï°) source#0,new_item#0,index#0 | array_length#0,array_head_and_tail#0,end_of_tail#0,end_offset#0,tmp%5#0
        l-load array_head_and_tail#0 3                                                                       (ùï°) source#0,new_item#0,index#0 | array_length#0,end_of_tail#0,end_offset#0,tmp%5#0,array_head_and_tail#0
        l-load end_offset#0 2                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,end_of_tail#0,tmp%5#0,array_head_and_tail#0,end_offset#0
        l-load end_of_tail#0 3                                                                               (ùï°) source#0,new_item#0,index#0 | array_length#0,tmp%5#0,array_head_and_tail#0,end_offset#0,end_of_tail#0
        substring3                                                                                           (ùï°) source#0,new_item#0,index#0 | array_length#0,tmp%5#0,tmp%6#0
        l-load tmp%5#0 1                                                                                     (ùï°) source#0,new_item#0,index#0 | array_length#0,tmp%6#0,tmp%5#0
        l-load tmp%6#0 1                                                                                     (ùï°) source#0,new_item#0,index#0 | array_length#0,tmp%5#0,tmp%6#0
        concat                                                                                               (ùï°) source#0,new_item#0,index#0 | array_length#0,new_head_and_tail#0
        v-store new_head_and_tail#0                                                                          (ùï°) source#0,new_item#0,index#0 | array_length#0
        l-load array_length#0 0                                                                              (ùï°) source#0,new_item#0,index#0 | array_length#0
        int 2                                                                                                (ùï°) source#0,new_item#0,index#0 | array_length#0,2
        *                                                                                                    (ùï°) source#0,new_item#0,index#0 | tmp%7#0
        v-store tmp%7#0                                                                                      (ùï°) source#0,new_item#0,index#0 |
        b dynamic_array_replace_dynamic_element_for_header@2                                                 (ùï°) source#0,new_item#0,index#0 |

    dynamic_array_replace_dynamic_element_for_header@2:                                                      (ùï°) source#0,new_item#0,index#0 |
        v-load head_offset#0                                                                                 (ùï°) source#0,new_item#0,index#0 | head_offset#0
        v-load tmp%7#0                                                                                       (ùï°) source#0,new_item#0,index#0 | head_offset#0,tmp%7#0
        <                                                                                                    (ùï°) source#0,new_item#0,index#0 | continue_looping%0#0
        bz dynamic_array_replace_dynamic_element_after_for@5 ; b dynamic_array_replace_dynamic_element_for_body@3 (ùï°) source#0,new_item#0,index#0 | 

    dynamic_array_replace_dynamic_element_for_body@3:                                                        (ùï°) source#0,new_item#0,index#0 |
        v-load new_head_and_tail#0                                                                           (ùï°) source#0,new_item#0,index#0 | new_head_and_tail#0
        l-store-copy new_head_and_tail#0 0                                                                   (ùï°) source#0,new_item#0,index#0 | new_head_and_tail#0,new_head_and_tail#0 (copy)
        v-load head_offset#0                                                                                 (ùï°) source#0,new_item#0,index#0 | new_head_and_tail#0,new_head_and_tail#0 (copy),head_offset#0
        l-store-copy head_offset#0 2                                                                         (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,new_head_and_tail#0 (copy),head_offset#0 (copy)
        extract_uint16                                                                                       (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tail_offset#0
        v-load new_item_length#0                                                                             (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tail_offset#0,new_item_length#0
        +                                                                                                    (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tail_offset#0
        v-load original_item_length#0                                                                        (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tail_offset#0,original_item_length#0
        -                                                                                                    (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tail_offset#0
        itob                                                                                                 (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tmp%10#0
        extract 6 2                                                                                          (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,tail_offset_bytes#0
        l-load new_head_and_tail#0 1                                                                         (ùï°) source#0,new_item#0,index#0 | head_offset#0,tail_offset_bytes#0,new_head_and_tail#0
        l-load-copy head_offset#0 2                                                                          (ùï°) source#0,new_item#0,index#0 | head_offset#0,tail_offset_bytes#0,new_head_and_tail#0,head_offset#0 (copy)
        l-load tail_offset_bytes#0 2                                                                         (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0,head_offset#0 (copy),tail_offset_bytes#0
        replace3                                                                                             (ùï°) source#0,new_item#0,index#0 | head_offset#0,new_head_and_tail#0
        v-store new_head_and_tail#0                                                                          (ùï°) source#0,new_item#0,index#0 | head_offset#0
        l-load head_offset#0 0                                                                               (ùï°) source#0,new_item#0,index#0 | head_offset#0
        int 2                                                                                                (ùï°) source#0,new_item#0,index#0 | head_offset#0,2
        +                                                                                                    (ùï°) source#0,new_item#0,index#0 | head_offset#0
        v-store head_offset#0                                                                                (ùï°) source#0,new_item#0,index#0 |
        b dynamic_array_replace_dynamic_element_for_header@2                                                 (ùï°) source#0,new_item#0,index#0 |

    dynamic_array_replace_dynamic_element_after_for@5:                                                       (ùï°) source#0,new_item#0,index#0 |
        v-load size_b#0                                                                                      (ùï°) source#0,new_item#0,index#0 | size_b#0
        v-load new_head_and_tail#0                                                                           (ùï°) source#0,new_item#0,index#0 | size_b#0,new_head_and_tail#0
        concat                                                                                               (ùï°) source#0,new_item#0,index#0 | tmp%2#0
        retsub                                                                                               tmp%2#0


// test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements() -> void:
subroutine test_static_elements:
    test_static_elements_block@0:
        // arc4_dynamic_arrays/contract.py:47
        // array[1] = struct2.copy()
        byte 0x00020000000000000003040500000400000000002aff                                                  0x00020000000000000003040500000400000000002aff
        // arc4_dynamic_arrays/contract.py:48
        // log(array)
        log
        // arc4_dynamic_arrays/contract.py:49
        // log(array[0])
        byte 0x00000000000000030405                                                                          0x00000000000000030405
        log
        // arc4_dynamic_arrays/contract.py:50
        // log(array[1])
        byte 0x00000400000000002aff                                                                          0x00000400000000002aff
        log
        // arc4_dynamic_arrays/contract.py:47
        // array[1] = struct2.copy()
        byte 0x00020000000000000003040500000400000000002aff                                                  0x00020000000000000003040500000400000000002aff
        // arc4_dynamic_arrays/contract.py:52
        // assert array.pop() == struct2
        int 10                                                                                               0x00020000000000000003040500000400000000002aff,10
        callsub dynamic_array_pop_fixed_size                                                                 popped%0#0,array#2
        l-load popped%0#0 1                                                                                  array#2,popped%0#0
        // arc4_dynamic_arrays/contract.py:45
        // struct2 = StaticStruct(get_uint2(), byte_array2.copy())
        byte 0x00000400000000002aff                                                                          array#2,popped%0#0,0x00000400000000002aff
        // arc4_dynamic_arrays/contract.py:52
        // assert array.pop() == struct2
        ==                                                                                                   array#2,tmp%6#0
        assert                                                                                               array#2
        // arc4_dynamic_arrays/contract.py:53
        // assert array.pop() == struct1
        l-load array#2 0                                                                                     array#2
        int 10                                                                                               array#2,10
        callsub dynamic_array_pop_fixed_size                                                                 popped%1#0,array#2
        pop 1                                                                                                popped%1#0
        l-store popped%1#0 0                                                                                 popped%1#0
        l-load popped%1#0 0                                                                                  popped%1#0
        // arc4_dynamic_arrays/contract.py:44
        // struct1 = StaticStruct(get_uint1(), byte_array1.copy())
        byte 0x00000000000000030405                                                                          popped%1#0,0x00000000000000030405
        // arc4_dynamic_arrays/contract.py:53
        // assert array.pop() == struct1
        ==                                                                                                   tmp%7#0
        assert
        retsub


// test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements() -> void:
subroutine test_dynamic_elements:
    test_dynamic_elements_block@0:
        // arc4_dynamic_arrays/contract.py:60
        // array.append(struct1.copy())
        int 2                                                                                                2
        byte 0x00040010000400070001610003626565000400070001610003626565                                      2,0x00040010000400070001610003626565000400070001610003626565
        int 1                                                                                                2,0x00040010000400070001610003626565000400070001610003626565,1
        byte 0x0002000400070001610003626565                                                                  2,0x00040010000400070001610003626565000400070001610003626565,1,0x0002000400070001610003626565
        callsub dynamic_array_concat_dynamic_element                                                         array#1
        // arc4_dynamic_arrays/contract.py:61
        // array[1] = struct2.copy()  # replace
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        int 0                                                                                                array#1,array#1 (copy),0
        extract_uint16                                                                                       array#1,array%array_length%1#1
        int 1                                                                                                array#1,array%array_length%1#1,1
        l-load array%array_length%1#1 1                                                                      array#1,1,array%array_length%1#1
        <                                                                                                    array#1,lt%0#0
        assert // index access is out of bounds                                                              array#1
        l-load array#1 0                                                                                     array#1
        // arc4_dynamic_arrays/contract.py:58
        // struct2 = DynamicStruct(get_string3(), get_string1())
        byte 0x00040011000b48656c6c6f20576f726c64000161                                                      array#1,0x00040011000b48656c6c6f20576f726c64000161
        // arc4_dynamic_arrays/contract.py:61
        // array[1] = struct2.copy()  # replace
        int 1                                                                                                array#1,0x00040011000b48656c6c6f20576f726c64000161,1
        callsub dynamic_array_replace_dynamic_element                                                        array#1
        // arc4_dynamic_arrays/contract.py:62
        // log(array)
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:63
        // log(array[0])
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        extract 2 0                                                                                          array#1,array_head_and_tail%0#0
        l-load-copy array_head_and_tail%0#0 0                                                                array#1,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy)
        int 0                                                                                                array#1,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),0
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0
        l-load-copy array#1 2                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array#1 (copy)
        int 0                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array#1 (copy),0
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1
        l-load-copy array%array_length%2#1 0                                                                 array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,array%array_length%2#1 (copy)
        int 1                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,array%array_length%2#1 (copy),1
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0
        l-load-copy array_head_and_tail%0#0 3                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,array_head_and_tail%0#0 (copy)
        len                                                                                                  array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,end_of_array%0#0
        l-load-copy array_head_and_tail%0#0 4                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy)
        int 2                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),2
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load-copy end_of_array%0#0 1                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy)
        l-load-copy next_item_offset%0#0 1                                                                   array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy),next_item_offset%0#0 (copy)
        l-load has_next%0#0 4                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy),next_item_offset%0#0 (copy),has_next%0#0
        select                                                                                               array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0
        l-load-copy array_head_and_tail%0#0 5                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset%0#0 5                                                                             array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0
        l-load end_offset%0#0 2                                                                              array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0,end_offset%0#0
        substring3                                                                                           array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,substring3%0#0
        log                                                                                                  array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0
        // arc4_dynamic_arrays/contract.py:64
        // log(array[1])
        l-load-copy array%array_length%2#1 2                                                                 array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,array%array_length%2#1 (copy)
        int 2                                                                                                array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,array%array_length%2#1 (copy),2
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,has_next%1#0
        l-load-copy array_head_and_tail%0#0 4                                                                array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,array_head_and_tail%0#0 (copy)
        int 4                                                                                                array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,array_head_and_tail%0#0 (copy),4
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0
        l-load-copy end_of_array%0#0 3                                                                       array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0,end_of_array%0#0 (copy)
        l-load-copy next_item_offset%1#0 1                                                                   array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0,end_of_array%0#0 (copy),next_item_offset%1#0 (copy)
        l-load has_next%1#0 3                                                                                array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,next_item_offset%1#0,end_of_array%0#0 (copy),next_item_offset%1#0 (copy),has_next%1#0
        select                                                                                               array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,next_item_offset%1#0,end_offset%1#0
        l-load-copy array_head_and_tail%0#0 5                                                                array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%0#0,next_item_offset%1#0,end_offset%1#0,array_head_and_tail%0#0 (copy)
        l-load next_item_offset%0#0 3                                                                        array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%1#0,end_offset%1#0,array_head_and_tail%0#0 (copy),next_item_offset%0#0
        l-load end_offset%1#0 2                                                                              array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%1#0,array_head_and_tail%0#0 (copy),next_item_offset%0#0,end_offset%1#0
        substring3                                                                                           array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%1#0,substring3%1#0
        log                                                                                                  array#1,array_head_and_tail%0#0,array%array_length%2#1,end_of_array%0#0,next_item_offset%1#0
        // arc4_dynamic_arrays/contract.py:65
        // log(array[2])
        l-load array%array_length%2#1 2                                                                      array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%1#0,array%array_length%2#1
        int 3                                                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%1#0,array%array_length%2#1,3
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%1#0,has_next%2#0
        l-load-copy array_head_and_tail%0#0 3                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%1#0,has_next%2#0,array_head_and_tail%0#0 (copy)
        int 6                                                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%1#0,has_next%2#0,array_head_and_tail%0#0 (copy),6
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%1#0,has_next%2#0,next_item_offset%2#0
        l-load end_of_array%0#0 3                                                                            array#1,array_head_and_tail%0#0,next_item_offset%1#0,has_next%2#0,next_item_offset%2#0,end_of_array%0#0
        l-load next_item_offset%2#0 1                                                                        array#1,array_head_and_tail%0#0,next_item_offset%1#0,has_next%2#0,end_of_array%0#0,next_item_offset%2#0
        l-load has_next%2#0 2                                                                                array#1,array_head_and_tail%0#0,next_item_offset%1#0,end_of_array%0#0,next_item_offset%2#0,has_next%2#0
        select                                                                                               array#1,array_head_and_tail%0#0,next_item_offset%1#0,end_offset%2#0
        l-load array_head_and_tail%0#0 2                                                                     array#1,next_item_offset%1#0,end_offset%2#0,array_head_and_tail%0#0
        l-load next_item_offset%1#0 2                                                                        array#1,end_offset%2#0,array_head_and_tail%0#0,next_item_offset%1#0
        l-load end_offset%2#0 2                                                                              array#1,array_head_and_tail%0#0,next_item_offset%1#0,end_offset%2#0
        substring3                                                                                           array#1,substring3%2#0
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:67
        // assert array.pop() == struct1
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%0#0,array#1
        l-load popped%0#0 1                                                                                  array#1,popped%0#0
        // arc4_dynamic_arrays/contract.py:57
        // struct1 = DynamicStruct(get_string1(), get_string2())
        byte 0x000400070001610003626565                                                                      array#1,popped%0#0,0x000400070001610003626565
        // arc4_dynamic_arrays/contract.py:67
        // assert array.pop() == struct1
        ==                                                                                                   array#1,tmp%4#0
        assert                                                                                               array#1
        // arc4_dynamic_arrays/contract.py:68
        // log(array)
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:69
        // assert array.pop() == struct2
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%1#0,array#1
        l-load popped%1#0 1                                                                                  array#1,popped%1#0
        // arc4_dynamic_arrays/contract.py:58
        // struct2 = DynamicStruct(get_string3(), get_string1())
        byte 0x00040011000b48656c6c6f20576f726c64000161                                                      array#1,popped%1#0,0x00040011000b48656c6c6f20576f726c64000161
        // arc4_dynamic_arrays/contract.py:69
        // assert array.pop() == struct2
        ==                                                                                                   array#1,tmp%5#0
        assert                                                                                               array#1
        // arc4_dynamic_arrays/contract.py:70
        // log(array)
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:71
        // assert array.pop() == struct1
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%2#0,array#1
        l-load popped%2#0 1                                                                                  array#1,popped%2#0
        // arc4_dynamic_arrays/contract.py:57
        // struct1 = DynamicStruct(get_string1(), get_string2())
        byte 0x000400070001610003626565                                                                      array#1,popped%2#0,0x000400070001610003626565
        // arc4_dynamic_arrays/contract.py:71
        // assert array.pop() == struct1
        ==                                                                                                   array#1,tmp%6#0
        assert                                                                                               array#1
        // arc4_dynamic_arrays/contract.py:72
        // log(array)
        l-load array#1 0                                                                                     array#1
        log
        retsub


// test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements() -> void:
subroutine test_mixed_single_dynamic_elements:
    test_mixed_single_dynamic_elements_block@0:
        // arc4_dynamic_arrays/contract.py:79
        // array.append(struct2.copy())
        int 0                                                                                                0
        byte 0x                                                                                              0,0x
        int 1                                                                                                0,0x,1
        byte 0x00020000040000000000001200000000000000030003626565                                            0,0x,1,0x00020000040000000000001200000000000000030003626565
        callsub dynamic_array_concat_dynamic_element                                                         array#1
        // arc4_dynamic_arrays/contract.py:80
        // array.append(struct2.copy())
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        int 0                                                                                                array#1,array#1 (copy),0
        extract_uint16                                                                                       array#1,array%array_length%1#1
        l-load array#1 1                                                                                     array%array_length%1#1,array#1
        extract 2 0                                                                                          array%array_length%1#1,l_head_and_tail%1#0
        l-load array%array_length%1#1 1                                                                      l_head_and_tail%1#0,array%array_length%1#1
        l-load l_head_and_tail%1#0 1                                                                         array%array_length%1#1,l_head_and_tail%1#0
        int 1                                                                                                array%array_length%1#1,l_head_and_tail%1#0,1
        byte 0x00020000040000000000001200000000000000030003626565                                            array%array_length%1#1,l_head_and_tail%1#0,1,0x00020000040000000000001200000000000000030003626565
        callsub dynamic_array_concat_dynamic_element                                                         array#1
        // arc4_dynamic_arrays/contract.py:81
        // array[0] = struct1.copy()  # replace
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        int 0                                                                                                array#1,array#1 (copy),0
        extract_uint16                                                                                       array#1,array%array_length%2#1
        assert // index access is out of bounds                                                              array#1
        l-load array#1 0                                                                                     array#1
        // arc4_dynamic_arrays/contract.py:76
        // struct1 = MixedSingleStruct(get_uint1(), get_string1(), get_uint2())
        byte 0x000000000000000300120000040000000000000161                                                    array#1,0x000000000000000300120000040000000000000161
        // arc4_dynamic_arrays/contract.py:81
        // array[0] = struct1.copy()  # replace
        int 0                                                                                                array#1,0x000000000000000300120000040000000000000161,0
        callsub dynamic_array_replace_dynamic_element                                                        array#1
        // arc4_dynamic_arrays/contract.py:82
        // log(array)
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:83
        // log(array[0])
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        extract 2 0                                                                                          array#1,array_head_and_tail%0#0
        l-load-copy array_head_and_tail%0#0 0                                                                array#1,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy)
        int 0                                                                                                array#1,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),0
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0
        l-load-copy array#1 2                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array#1 (copy)
        int 0                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array#1 (copy),0
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1
        l-load-copy array%array_length%3#1 0                                                                 array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,array%array_length%3#1 (copy)
        int 1                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,array%array_length%3#1 (copy),1
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0
        l-load-copy array_head_and_tail%0#0 3                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,array_head_and_tail%0#0 (copy)
        len                                                                                                  array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,end_of_array%0#0
        l-load-copy array_head_and_tail%0#0 4                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy)
        int 2                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),2
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load-copy end_of_array%0#0 1                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy)
        l-load-copy next_item_offset%0#0 1                                                                   array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy),next_item_offset%0#0 (copy)
        l-load has_next%0#0 4                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy),next_item_offset%0#0 (copy),has_next%0#0
        select                                                                                               array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0
        l-load-copy array_head_and_tail%0#0 5                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset%0#0 5                                                                             array#1,array_head_and_tail%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0
        l-load end_offset%0#0 2                                                                              array#1,array_head_and_tail%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0,end_offset%0#0
        substring3                                                                                           array#1,array_head_and_tail%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0,substring3%0#0
        log                                                                                                  array#1,array_head_and_tail%0#0,array%array_length%3#1,end_of_array%0#0,next_item_offset%0#0
        // arc4_dynamic_arrays/contract.py:84
        // log(array[1])
        l-load array%array_length%3#1 2                                                                      array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,array%array_length%3#1
        int 2                                                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,array%array_length%3#1,2
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0
        l-load-copy array_head_and_tail%0#0 3                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,array_head_and_tail%0#0 (copy)
        int 4                                                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,array_head_and_tail%0#0 (copy),4
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0
        l-load end_of_array%0#0 3                                                                            array#1,array_head_and_tail%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0,end_of_array%0#0
        l-load next_item_offset%1#0 1                                                                        array#1,array_head_and_tail%0#0,next_item_offset%0#0,has_next%1#0,end_of_array%0#0,next_item_offset%1#0
        l-load has_next%1#0 2                                                                                array#1,array_head_and_tail%0#0,next_item_offset%0#0,end_of_array%0#0,next_item_offset%1#0,has_next%1#0
        select                                                                                               array#1,array_head_and_tail%0#0,next_item_offset%0#0,end_offset%1#0
        l-load array_head_and_tail%0#0 2                                                                     array#1,next_item_offset%0#0,end_offset%1#0,array_head_and_tail%0#0
        l-load next_item_offset%0#0 2                                                                        array#1,end_offset%1#0,array_head_and_tail%0#0,next_item_offset%0#0
        l-load end_offset%1#0 2                                                                              array#1,array_head_and_tail%0#0,next_item_offset%0#0,end_offset%1#0
        substring3                                                                                           array#1,substring3%1#0
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:86
        // assert array.pop() == struct2
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%0#0,array#1
        l-load popped%0#0 1                                                                                  array#1,popped%0#0
        // arc4_dynamic_arrays/contract.py:77
        // struct2 = MixedSingleStruct(get_uint2(), get_string2(), get_uint1())
        byte 0x0000040000000000001200000000000000030003626565                                                array#1,popped%0#0,0x0000040000000000001200000000000000030003626565
        // arc4_dynamic_arrays/contract.py:86
        // assert array.pop() == struct2
        ==                                                                                                   array#1,tmp%6#0
        assert                                                                                               array#1
        // arc4_dynamic_arrays/contract.py:87
        // assert array.pop() == struct1
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%1#0,array#1
        pop 1                                                                                                popped%1#0
        l-store popped%1#0 0                                                                                 popped%1#0
        l-load popped%1#0 0                                                                                  popped%1#0
        // arc4_dynamic_arrays/contract.py:76
        // struct1 = MixedSingleStruct(get_uint1(), get_string1(), get_uint2())
        byte 0x000000000000000300120000040000000000000161                                                    popped%1#0,0x000000000000000300120000040000000000000161
        // arc4_dynamic_arrays/contract.py:87
        // assert array.pop() == struct1
        ==                                                                                                   tmp%7#0
        assert
        retsub


// test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements() -> void:
subroutine test_mixed_multiple_dynamic_elements:
    test_mixed_multiple_dynamic_elements_block@0:
        // arc4_dynamic_arrays/contract.py:97
        // array = arc4.DynamicArray(struct1.copy(), struct1.copy())
        byte 0x00020004002b0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a 0x00020004002b0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a
        // arc4_dynamic_arrays/contract.py:94-96
        // struct2 = MixedMultipleStruct(
        //     get_uint2(), get_string2(), get_uint1(), get_u16_arr2(), get_uint2()
        // )
        byte 0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004 0x00020004002b0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a,0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004
        // arc4_dynamic_arrays/contract.py:98
        // array[1] = struct2.copy()
        int 1                                                                                                0x00020004002b0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a,0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004,1
        callsub dynamic_array_replace_dynamic_element                                                        array#1
        // arc4_dynamic_arrays/contract.py:99
        // log(array)
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:100
        // log(array[0])
        l-load-copy array#1 0                                                                                array#1,array#1 (copy)
        extract 2 0                                                                                          array#1,array_head_and_tail%0#0
        l-load-copy array_head_and_tail%0#0 0                                                                array#1,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy)
        int 0                                                                                                array#1,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),0
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0
        l-load-copy array#1 2                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array#1 (copy)
        int 0                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array#1 (copy),0
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1
        l-load-copy array%array_length%1#1 0                                                                 array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,array%array_length%1#1 (copy)
        int 1                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,array%array_length%1#1 (copy),1
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0
        l-load-copy array_head_and_tail%0#0 3                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,array_head_and_tail%0#0 (copy)
        len                                                                                                  array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,end_of_array%0#0
        l-load-copy array_head_and_tail%0#0 4                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy)
        int 2                                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),2
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load-copy end_of_array%0#0 1                                                                       array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy)
        l-load-copy next_item_offset%0#0 1                                                                   array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,has_next%0#0,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy),next_item_offset%0#0 (copy)
        l-load has_next%0#0 4                                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0,end_of_array%0#0 (copy),next_item_offset%0#0 (copy),has_next%0#0
        select                                                                                               array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0
        l-load-copy array_head_and_tail%0#0 5                                                                array#1,array_head_and_tail%0#0,item_offset%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset%0#0 5                                                                             array#1,array_head_and_tail%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0
        l-load end_offset%0#0 2                                                                              array#1,array_head_and_tail%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0,end_offset%0#0
        substring3                                                                                           array#1,array_head_and_tail%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0,substring3%0#0
        log                                                                                                  array#1,array_head_and_tail%0#0,array%array_length%1#1,end_of_array%0#0,next_item_offset%0#0
        // arc4_dynamic_arrays/contract.py:101
        // log(array[1])
        l-load array%array_length%1#1 2                                                                      array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,array%array_length%1#1
        int 2                                                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,array%array_length%1#1,2
        - // on error: index access is out of bounds                                                         array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0
        l-load-copy array_head_and_tail%0#0 3                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,array_head_and_tail%0#0 (copy)
        int 4                                                                                                array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,array_head_and_tail%0#0 (copy),4
        extract_uint16                                                                                       array#1,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0
        l-load end_of_array%0#0 3                                                                            array#1,array_head_and_tail%0#0,next_item_offset%0#0,has_next%1#0,next_item_offset%1#0,end_of_array%0#0
        l-load next_item_offset%1#0 1                                                                        array#1,array_head_and_tail%0#0,next_item_offset%0#0,has_next%1#0,end_of_array%0#0,next_item_offset%1#0
        l-load has_next%1#0 2                                                                                array#1,array_head_and_tail%0#0,next_item_offset%0#0,end_of_array%0#0,next_item_offset%1#0,has_next%1#0
        select                                                                                               array#1,array_head_and_tail%0#0,next_item_offset%0#0,end_offset%1#0
        l-load array_head_and_tail%0#0 2                                                                     array#1,next_item_offset%0#0,end_offset%1#0,array_head_and_tail%0#0
        l-load next_item_offset%0#0 2                                                                        array#1,end_offset%1#0,array_head_and_tail%0#0,next_item_offset%0#0
        l-load end_offset%1#0 2                                                                              array#1,array_head_and_tail%0#0,next_item_offset%0#0,end_offset%1#0
        substring3                                                                                           array#1,substring3%1#0
        log                                                                                                  array#1
        // arc4_dynamic_arrays/contract.py:103
        // assert array.pop() == struct2
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%0#0,array#1
        l-load popped%0#0 1                                                                                  array#1,popped%0#0
        // arc4_dynamic_arrays/contract.py:94-96
        // struct2 = MixedMultipleStruct(
        //     get_uint2(), get_string2(), get_uint1(), get_u16_arr2(), get_uint2()
        // )
        byte 0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004 array#1,popped%0#0,0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004
        // arc4_dynamic_arrays/contract.py:103
        // assert array.pop() == struct2
        ==                                                                                                   array#1,tmp%10#0
        assert                                                                                               array#1
        // arc4_dynamic_arrays/contract.py:104
        // assert array.pop() == struct1
        l-load array#1 0                                                                                     array#1
        callsub dynamic_array_pop_dynamic_element                                                            popped%1#0,array#1
        pop 1                                                                                                popped%1#0
        l-store popped%1#0 0                                                                                 popped%1#0
        l-load popped%1#0 0                                                                                  popped%1#0
        // arc4_dynamic_arrays/contract.py:91-93
        // struct1 = MixedMultipleStruct(
        //     get_uint1(), get_string1(), get_uint2(), get_u16_arr1(), get_uint1()
        // )
        byte 0x0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a popped%1#0,0x0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a
        // arc4_dynamic_arrays/contract.py:104
        // assert array.pop() == struct1
        ==                                                                                                   tmp%11#0
        assert
        retsub


// test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification() -> void:
subroutine test_nested_tuple_modification:
    test_nested_tuple_modification_block@0:
        // arc4_dynamic_arrays/contract.py:168
        // tup2[3].d.pop()
        byte 0x0004ffff0000002a007b                                                                          0x0004ffff0000002a007b
        int 2                                                                                                0x0004ffff0000002a007b,2
        callsub dynamic_array_pop_fixed_size                                                                 popped%0#0,data%0#0
        l-store data%0#0 1                                                                                   data%0#0,popped%0#0
        pop 1                                                                                                data%0#0
        byte 0x0000000000000003001c0000040000000000001f0000000000000003000161                                data%0#0,0x0000000000000003001c0000040000000000001f0000000000000003000161
        l-load data%0#0 1                                                                                    0x0000000000000003001c0000040000000000001f0000000000000003000161,data%0#0
        concat                                                                                               updated_data%0#0
        byte 0x00000000000000030405001a000004000000000005040026004f000400070001610003626565 updated_data%0#0,0x00000000000000030405001a000004000000000005040026004f000400070001610003626565
        l-load-copy updated_data%0#0 1                                                                       updated_data%0#0,0x00000000000000030405001a000004000000000005040026004f000400070001610003626565,updated_data%0#0 (copy)
        concat                                                                                               updated_data%0#0,updated_data%1#0
        byte 0x000400070001610003626565                                                                      updated_data%0#0,updated_data%1#0,0x000400070001610003626565
        concat                                                                                               updated_data%0#0,updated_data%2#0
        l-load updated_data%0#0 1                                                                            updated_data%2#0,updated_data%0#0
        len                                                                                                  updated_data%2#0,new_value_length%0#0
        l-load-copy updated_data%2#0 1                                                                       updated_data%2#0,new_value_length%0#0,updated_data%2#0 (copy)
        int 24                                                                                               updated_data%2#0,new_value_length%0#0,updated_data%2#0 (copy),24
        extract_uint16                                                                                       updated_data%2#0,new_value_length%0#0,tail_offset%0#0
        l-load new_value_length%0#0 1                                                                        updated_data%2#0,tail_offset%0#0,new_value_length%0#0
        +                                                                                                    updated_data%2#0,tail_offset%1#0
        int 41                                                                                               updated_data%2#0,tail_offset%1#0,41
        -                                                                                                    updated_data%2#0,tail_offset%2#0
        itob                                                                                                 updated_data%2#0,as_bytes%15#0
        extract 6 2                                                                                          updated_data%2#0,tail_offset_bytes%0#0
        l-load updated_data%2#0 1                                                                            tail_offset_bytes%0#0,updated_data%2#0
        l-load tail_offset_bytes%0#0 1                                                                       updated_data%2#0,tail_offset_bytes%0#0
        replace2 24                                                                                          tup2#1
        // arc4_dynamic_arrays/contract.py:149-157
        // tup1 = arc4.Tuple(
        //     (
        //         one.copy(),
        //         two.copy(),
        //         three.copy(),
        //         four1.copy(),
        //         five.copy(),
        //     )
        // )
        byte 0x00000000000000030405001a000004000000000005040026004d0004000700016100036265650000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a000400070001610003626565 tup2#1,0x00000000000000030405001a000004000000000005040026004d0004000700016100036265650000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a000400070001610003626565
        // arc4_dynamic_arrays/contract.py:169
        // assert tup1.bytes == tup2.bytes, "tup1 does not match tup2"
        l-load tup2#1 1                                                                                      0x00000000000000030405001a000004000000000005040026004d0004000700016100036265650000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a000400070001610003626565,tup2#1
        ==                                                                                                   tmp%22#0
        assert // tup1 does not match tup2
        retsub


