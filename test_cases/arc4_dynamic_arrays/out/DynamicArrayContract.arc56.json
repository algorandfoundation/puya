{
    "name": "DynamicArrayContract",
    "structs": {},
    "methods": [
        {
            "name": "test_static_elements",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_dynamic_elements",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_mixed_single_dynamic_elements",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_mixed_multiple_dynamic_elements",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_nested_struct_replacement",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_nested_tuple_modification",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        240,
                        252,
                        261,
                        273,
                        285,
                        297
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        314
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        243,
                        255,
                        264,
                        276,
                        288,
                        300
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        793,
                        817,
                        840,
                        864,
                        930,
                        954,
                        977,
                        1139,
                        1162
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        1438
                    ],
                    "errorMessage": "tup1 does not match tup2"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAQIABCYJAAwABAAHAAFhAANiZWUWAAIAAAAAAAAAAwQFAAAEAAAAAAAq/woAAAAAAAAAAwQFCgAABAAAAAAAKv8UAAQAEQALSGVsbG8gV29ybGQAAWEZAAIAAAQAAAAAAAASAAAAAAAAAAMAA2JlZRUAAAAAAAAAAwASAAAEAAAAAAAAAWErAAAEAAAAAAAAHAAAAAAAAAADACEAAAQAAAAAAAADYmVlAAQAAQACAAMABDEbQQB4ggYEVXFYJwRxPdbbBDcViqwEhXC+OwRRqoxJBCg6GG82GgCOBgA7AC8AIwAXAA4AAiRDMRkURDEYRIgD2CJDMRkURDEYRCJDMRkURDEYRIgC+iJDMRkURDEYRIgCciJDMRkURDEYRIgBvSJDMRkURDEYRIgBlSJDMRlA/7QxGBREIkOKAgKL/iRZIgkWVwYAi/5MXABJFYv/CUqL/1hPAiRPA1KJigECi/8kWSIJSSMLSYv/VwIASU4CSU8CWUlPAkkVTE4CUigkiwaLAQxBABuLAosGSU4CWSMJFlcGAosFTFCMBSMIjAZC/92LABZXBgKLBVCLASMIiwJMiwNSUIsEjACMAYmKBAEoSYv+IwuL/CMLJIsEiwMMQQAci/2LBElOAlmLAggWVwYCiwFMUIwBIwiMBEL/3Iv9FYwAJIwEiwSLAgxBAByL/4sESU4CWYsACBZXBgKLAUxQjAEjCIwEQv/ci/yL/ggWVwYCiwFQi/2LA4sAUlCL/xWL/4sCTwJSUIwAiYoDAYv9UQACSReL/VcCAIv/IwtLAUxZi/8iCCMLSU4ESwJMWUsCFUsEi/8JIglLAU8DTwJNSUsDCU4Fi/4VTgVLAyRPBFKL/lBPA08CTwNSUEwjC4sBiwUMQQAgiwRJiwFJTgNZiwMIiwIJFlcGAksCTF2MBCMIjAFC/9iLAIsEUIwAiSqwK7AnBLAqgQqI/mtMJwQSRIEKiP5hSCsSRIkjgBwABAAQAAQABwABYQADYmVlAAQABwABYQADYmVlIoAOAAIABAAHAAFhAANiZWWI/q1JJFkiDUQnBSKI/yFJsElXAgBLASRZSwEkWUsBIglLAxVLBCNZSk8ETUsFTwRPAlKwSwIjCUsEJVlLA0sBTwNNSwVPA08CUrBPAoEDCUsDgQZZTwNMTwJNUrCI/e5MKRJESbCI/eVMJwUSREmwiP3bTCkSRLCJJCgiJwaI/i9JJFlMVwIAIicGiP4iSSRZRCcHJIj+mEmwSVcCAEsBJFlLASRZSwEiCUsDFUsEI1lKTwRNSwVPBE8CUrBPAiMJSwMlWU8DTE8CTVKwiP1+TIAXAAAEAAAAAAAAEgAAAAAAAAADAANiZWUSRIj9X0gnBxJEiYBUAAIABAArAAAAAAAAAAMAHAAABAAAAAAAAB8AAAAAAAAAAwABYQAD//8AAAAqAAAAAAAAAAMAHAAABAAAAAAAAB8AAAAAAAAAAwABYQAD//8AAAAqJwgiiP3fSbBJVwIASwEkWUsBJFlLASIJSwMVSwQjWUpPBE1LBU8ETwJSsE8CIwlLAyVZTwNMTwJNUrCI/MVMJwgSRIj8vUiAJwAAAAAAAAADABwAAAQAAAAAAAAfAAAAAAAAAAMAAWEAA///AAAAKhJEiYAKAAT//wAAACoAeyOI/F5FAYAfAAAAAAAAAAMAHAAABAAAAAAAAB8AAAAAAAAAAwABYUxQgCYAAAAAAAAAAwQFABoAAAQAAAAAAAUEACYATwAEAAcAAWEAA2JlZUsBUClQTBVLAYEYWQiBKQkWVwYCXBiAWQAAAAAAAAADBAUAGgAABAAAAAAABQQAJgBNAAQABwABYQADYmVlAAAAAAAAAAMAHAAABAAAAAAAAB8AAAAAAAAAAwABYQAD//8AAAAqAAQABwABYQADYmVlEkSJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}