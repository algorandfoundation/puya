#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 2 1 0 4
    bytecblock 0x 0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004 0x00020000040000000000001200000000000000030003626565 0x000000000000000300120000040000000000000161 0x00040011000b48656c6c6f20576f726c64000161 0x000400070001610003626565
    txn NumAppArgs
    bz main_bare_routing@11
    pushbytess 0x55715827 0x713dd6db 0x37158aac 0x8570be3b 0x51aa8c49 0x283a186f // method "test_static_elements()void", method "test_dynamic_elements()void", method "test_mixed_single_dynamic_elements()void", method "test_mixed_multiple_dynamic_elements()void", method "test_nested_struct_replacement()void", method "test_nested_tuple_modification()void"
    txna ApplicationArgs 0
    match main_test_static_elements_route@3 main_test_dynamic_elements_route@4 main_test_mixed_single_dynamic_elements_route@5 main_test_mixed_multiple_dynamic_elements_route@6 main_test_nested_struct_replacement_route@7 main_test_nested_tuple_modification_route@8

main_after_if_else@15:
    intc_2 // 0
    return

main_test_nested_tuple_modification_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_1 // 1
    return

main_test_nested_struct_replacement_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_1 // 1
    return

main_test_mixed_multiple_dynamic_elements_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushbytes 0x00020004002b0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a
    bytec_1 // 0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004
    intc_1 // 1
    callsub dynamic_array_replace_dynamic_element
    dup
    log
    dup
    extract 2 0
    dup
    intc_2 // 0
    extract_uint16
    dig 2
    intc_2 // 0
    extract_uint16
    dup
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_0 // 2
    extract_uint16
    dup2
    uncover 4
    select
    dig 5
    uncover 5
    uncover 2
    substring3
    log
    uncover 2
    intc_0 // 2
    - // on error: index access is out of bounds
    dig 3
    intc_3 // 4
    extract_uint16
    uncover 3
    swap
    uncover 2
    select
    substring3
    log
    callsub dynamic_array_pop_dynamic_element
    swap
    bytec_1 // 0x0000040000000000001c000000000000000300210000040000000000000362656500040001000200030004
    ==
    assert
    callsub dynamic_array_pop_dynamic_element
    pop
    pushbytes 0x0000000000000003001c0000040000000000001f00000000000000030001610003ffff0000002a
    ==
    assert
    intc_1 // 1
    return

main_test_mixed_single_dynamic_elements_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_2 // 0
    bytec_0 // 0x
    intc_1 // 1
    bytec_2 // 0x00020000040000000000001200000000000000030003626565
    callsub dynamic_array_concat_dynamic_element
    dup
    intc_2 // 0
    extract_uint16
    swap
    extract 2 0
    intc_1 // 1
    bytec_2 // 0x00020000040000000000001200000000000000030003626565
    callsub dynamic_array_concat_dynamic_element
    bytec_3 // 0x000000000000000300120000040000000000000161
    intc_2 // 0
    callsub dynamic_array_replace_dynamic_element
    dup
    log
    dup
    extract 2 0
    dup
    intc_2 // 0
    extract_uint16
    dig 2
    intc_2 // 0
    extract_uint16
    dup
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_0 // 2
    extract_uint16
    dup2
    uncover 4
    select
    dig 5
    uncover 5
    uncover 2
    substring3
    log
    uncover 2
    intc_0 // 2
    - // on error: index access is out of bounds
    dig 3
    intc_3 // 4
    extract_uint16
    uncover 3
    swap
    uncover 2
    select
    substring3
    log
    callsub dynamic_array_pop_dynamic_element
    swap
    pushbytes 0x0000040000000000001200000000000000030003626565
    ==
    assert
    callsub dynamic_array_pop_dynamic_element
    pop
    bytec_3 // 0x000000000000000300120000040000000000000161
    ==
    assert
    intc_1 // 1
    return

main_test_dynamic_elements_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_0 // 2
    pushbytes 0x00040010000400070001610003626565000400070001610003626565
    intc_1 // 1
    pushbytes 0x0002000400070001610003626565
    callsub dynamic_array_concat_dynamic_element
    bytec 4 // 0x00040011000b48656c6c6f20576f726c64000161
    intc_1 // 1
    callsub dynamic_array_replace_dynamic_element
    dup
    log
    dup
    extract 2 0
    dup
    intc_2 // 0
    extract_uint16
    dig 2
    intc_2 // 0
    extract_uint16
    dup
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_0 // 2
    extract_uint16
    dup2
    uncover 4
    select
    dig 5
    uncover 5
    uncover 2
    substring3
    log
    dig 2
    intc_0 // 2
    - // on error: index access is out of bounds
    dig 4
    intc_3 // 4
    extract_uint16
    dig 3
    dig 1
    uncover 3
    select
    dig 5
    uncover 3
    uncover 2
    substring3
    log
    uncover 2
    pushint 3 // 3
    - // on error: index access is out of bounds
    dig 3
    pushint 6 // 6
    extract_uint16
    uncover 3
    swap
    uncover 2
    select
    substring3
    log
    callsub dynamic_array_pop_dynamic_element
    swap
    bytec 5 // 0x000400070001610003626565
    ==
    assert
    dup
    log
    callsub dynamic_array_pop_dynamic_element
    swap
    bytec 4 // 0x00040011000b48656c6c6f20576f726c64000161
    ==
    assert
    dup
    log
    callsub dynamic_array_pop_dynamic_element
    swap
    bytec 5 // 0x000400070001610003626565
    ==
    assert
    log
    intc_1 // 1
    return

main_test_static_elements_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushbytes 0x00020000000000000003040500000400000000002aff
    log
    pushbytes 0x00000000000000030405
    log
    pushbytes 0x00000400000000002aff
    log
    intc_1 // 1
    return

main_bare_routing@11:
    txn OnCompletion
    bnz main_after_if_else@15
    txn ApplicationID
    !
    assert // can only call when creating
    intc_1 // 1
    return


// _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
dynamic_array_pop_dynamic_element:
    proto 1 2
    frame_dig -1
    intc_2 // 0
    extract_uint16
    intc_1 // 1
    -
    dup
    intc_0 // 2
    *
    dup
    frame_dig -1
    extract 2 0
    dup
    cover 2
    dup
    uncover 2
    extract_uint16
    dup
    uncover 2
    dup
    len
    swap
    cover 2
    substring3
    bytec_0 // 0x
    intc_2 // 0

dynamic_array_pop_dynamic_element_for_header@1:
    frame_dig 6
    frame_dig 1
    <
    bz dynamic_array_pop_dynamic_element_after_for@4
    frame_dig 2
    frame_dig 6
    dup
    cover 2
    extract_uint16
    intc_0 // 2
    -
    itob
    extract 6 2
    frame_dig 5
    swap
    concat
    frame_bury 5
    intc_0 // 2
    +
    frame_bury 6
    b dynamic_array_pop_dynamic_element_for_header@1

dynamic_array_pop_dynamic_element_after_for@4:
    frame_dig 0
    itob
    extract 6 2
    frame_dig 5
    concat
    frame_dig 1
    intc_0 // 2
    +
    frame_dig 2
    swap
    frame_dig 3
    substring3
    concat
    frame_dig 4
    frame_bury 0
    frame_bury 1
    retsub


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1
    bytec_0 // ""
    dup
    frame_dig -2
    intc_0 // 2
    *
    frame_dig -4
    intc_0 // 2
    *
    intc_2 // 0

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    frame_dig -3
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_0 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3
    len
    frame_bury 0
    intc_2 // 0
    frame_bury 4

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4
    frame_dig 2
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    frame_dig -1
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 0
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_0 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    frame_dig 1
    concat
    frame_dig -3
    frame_dig 3
    frame_dig 0
    substring3
    concat
    frame_dig -1
    len
    frame_dig -1
    frame_dig 2
    uncover 2
    substring3
    concat
    frame_bury 0
    retsub


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:
    proto 3 1
    frame_dig -3
    substring 0 2
    dup
    btoi
    frame_dig -3
    extract 2 0
    frame_dig -1
    intc_0 // 2
    *
    dig 1
    swap
    extract_uint16
    frame_dig -1
    intc_1 // 1
    +
    intc_0 // 2
    *
    dup
    cover 4
    dig 2
    swap
    extract_uint16
    dig 2
    len
    dig 4
    frame_dig -1
    -
    intc_1 // 1
    -
    dig 1
    uncover 3
    uncover 2
    select
    dup
    dig 3
    -
    cover 5
    frame_dig -2
    len
    cover 5
    dig 3
    intc_2 // 0
    uncover 4
    substring3
    frame_dig -2
    concat
    cover 3
    swap
    substring3
    concat
    swap
    intc_0 // 2
    *

dynamic_array_replace_dynamic_element_for_header@2:
    frame_dig 1
    frame_dig 5
    <
    bz dynamic_array_replace_dynamic_element_after_for@5
    frame_dig 4
    dup
    frame_dig 1
    dup
    cover 3
    extract_uint16
    frame_dig 3
    +
    frame_dig 2
    -
    itob
    extract 6 2
    dig 2
    swap
    replace3
    frame_bury 4
    intc_0 // 2
    +
    frame_bury 1
    b dynamic_array_replace_dynamic_element_for_header@2

dynamic_array_replace_dynamic_element_after_for@5:
    frame_dig 0
    frame_dig 4
    concat
    frame_bury 0
    retsub
