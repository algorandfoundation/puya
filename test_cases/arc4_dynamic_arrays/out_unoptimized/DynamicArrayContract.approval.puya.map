{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAuGK;;;;;;AA3BA;;;;;;AAjBA;;;;;;AAvBA;;;;;;AAnBA;;;;;;AAhgJW;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;;;AAKO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;;;AAKO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;;;AAKO;;;;;;;;;;AAAP;;;;AAKO;;;;;;;;;;AAAP;;;;AAKO;;;AAAP;;;;AAKO;;;AAAP;;;;AAKO;;;AAAP;;;;AAKO;;;AAAP;;;;AAKO;;AAAA;AAAA;;;AAAkB;;;;AAAlB;AAA0C;;;;AAA1C;AAA0D;;;;AAA1D;AAAP;;;;AAKO;AAAA;AAAA;;;AAAkB;;;;AAAlB;AAAkC;;;;AAAlC;AAAkD;;;;AAAlD;AAAkE;;;;AAAlE;AAAP;;;;AAjMC;;;AAAA;AAAA;;;;AAgBA;;;AAAA;AAAA;;;;AAmBA;;;AAAA;AAAA;;;;AAuBA;;;AAAA;AAAA;;;;AAiBA;;;AAAA;AAAA;;;;AA2BA;;;AAAA;AAAA;AAtGL;;;;;;AAEuC;;;AAAa;;;AAAA;;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AACiB;;;AAAa;;;AAAA;;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AAES;;;AAAb;AAAA;;AAAA;AAAA;;AAAA;AAAV;;AACuB;;;AAAb;AAAA;;AAAA;AAAA;;AAAA;AAAV;;AACQ;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACF;AAAN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAM;AAAN;;AAAA;AAAA;;AAAA;AAAJ;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAM;AAAN;;AAAA;AAAA;;AAAA;AAAJ;AAEO;;AAAA;;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;;AAAA;;AAAA;AAAP;;;;;AAIwB;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACc;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAV;;AACQ;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACA;AAAA;AAAA;AAAM;AAAN;AAAA;AAAA;;AAAM;AAAN;;;AACA;AAAA;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AAEO;;;AAAA;;AAAA;;AAAA;AAAP;AACA;AAAA;AACO;;;AAAA;;AAAA;;AAAA;AAAP;AACA;AAAA;AACO;;;AAAA;;AAAA;;AAAA;AAAP;AACA;;AAER;;;;;;AAEoC;;;AAAa;;;AAAA;;AAAe;;;AAAA;;AAA9C;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACkB;;;AAAa;;;AAAA;;AAAe;;;AAAA;;AAA9C;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACF;AAAA;AAAA;;;AACR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACA;AAAA;AAAA;AAAM;AAAN;AAAA;AAAA;;AAAM;AAAN;;;AACA;AAAA;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AAEA;AAEO;;;AAAA;;AAAA;;AAAA;AAAP;AACO;;;AAAA;;AAAA;;AAAA;AAAP;AAEO;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AACO;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACc;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAP;AACc;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAP;;AAER;;;;;;AAGY;;;AAAa;;;AAAA;;AAAe;;;AAAA;;AAAa;;;AAAA;;AAAgB;;;AAAA;;AADnD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAIN;;;AAAa;;;AAAA;;AAAe;;;AAAA;;AAAa;;;AAAA;;AAAgB;;;AAAA;;AADnD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAGF;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACR;AAAA;AAAA;AAAM;AAAN;AAAA;AAAA;;AAAM;AAAN;;;AACA;AAAA;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AACI;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAM;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAJ;AAEO;;;AAAA;;AAAA;;AAAA;AAAP;AACO;;;AAAA;;AAAA;AAAP;;;;;AAImB;;;AAA8B;;;AAAa;;;AAAA;;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AAA1B;AAAA;;AAAA;AAAA;;AAAA;AACc;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACe;;;AAA8B;;;AAAa;;;AAAA;;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AAA1B;AAAA;;AAAA;AAAA;;AAAA;AAEJ;;;AAAa;;;AAAA;;AAAe;;;AAAA;;AAAa;;;AAAA;;AAAgB;;;AAAA;;AADtD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAGc;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACG;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAV;;AASsB;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAFE;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAQV;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AACO;AAAP;;AAER;;;;;;AAE2B;;;AAA8B;;;AAAa;;;AAAA;;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AAA1B;AAAA;;AAAA;AAAA;;AAAA;AACc;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACe;;;AAA8B;;;AAAa;;;AAAA;;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AAA1B;AAAA;;AAAA;AAAA;;AAAA;AAEJ;;;AAAa;;;AAAA;;AAAe;;;AAAA;;AAAa;;;AAAA;;AAAgB;;;AAAA;;AADrD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAIJ;;;AACA;;;AAAA;;AACA;;;AAAA;;AACA;;;AAAA;AAAkB;;;;AAAlB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACA;;;AALI;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAOa;;;AAAe;;;AAAA;;AAA7B;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;;AASO;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAUP;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AACO;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 2 0 1 4"
    },
    "7": {
      "op": "bytecblock 0x \"a\" \"bee\" \"Hello World\""
    },
    "28": {
      "op": "b main_block@0"
    },
    "31": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "34": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "36": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "37": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "38": {
      "op": "bz main_bare_routing@20",
      "stack_out": []
    },
    "41": {
      "op": "b main_abi_routing@2"
    },
    "44": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "47": {
      "op": "match",
      "stack_out": []
    },
    "49": {
      "op": "b main_route_NoOp@3"
    },
    "52": {
      "block": "main_route_NoOp@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "54": {
      "op": "intc_1 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "55": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "56": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "57": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "60": {
      "op": "match",
      "stack_out": []
    },
    "62": {
      "op": "b main_switch_case_default@4"
    },
    "65": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "67": {
      "op": "bz main_create_NoOp@14",
      "stack_out": []
    },
    "70": {
      "op": "b main_call_NoOp@5"
    },
    "73": {
      "block": "main_call_NoOp@5",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "76": {
      "op": "pushbytes 0x55715827 // method \"test_static_elements()void\"",
      "defined_out": [
        "Method(test_static_elements()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_static_elements()void)"
      ]
    },
    "82": {
      "op": "pushbytes 0x713dd6db // method \"test_dynamic_elements()void\"",
      "defined_out": [
        "Method(test_dynamic_elements()void)",
        "Method(test_static_elements()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_static_elements()void)",
        "Method(test_dynamic_elements()void)"
      ]
    },
    "88": {
      "op": "pushbytes 0x37158aac // method \"test_mixed_single_dynamic_elements()void\"",
      "defined_out": [
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_static_elements()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_static_elements()void)",
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)"
      ]
    },
    "94": {
      "op": "pushbytes 0x8570be3b // method \"test_mixed_multiple_dynamic_elements()void\"",
      "defined_out": [
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_static_elements()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_static_elements()void)",
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)"
      ]
    },
    "100": {
      "op": "pushbytes 0x51aa8c49 // method \"test_nested_struct_replacement()void\"",
      "defined_out": [
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_nested_struct_replacement()void)",
        "Method(test_static_elements()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_static_elements()void)",
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)",
        "Method(test_nested_struct_replacement()void)"
      ]
    },
    "106": {
      "op": "pushbytes 0x283a186f // method \"test_nested_tuple_modification()void\"",
      "defined_out": [
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_nested_struct_replacement()void)",
        "Method(test_nested_tuple_modification()void)",
        "Method(test_static_elements()void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(test_static_elements()void)",
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)",
        "Method(test_nested_struct_replacement()void)",
        "Method(test_nested_tuple_modification()void)"
      ]
    },
    "112": {
      "op": "uncover 6",
      "stack_out": [
        "Method(test_static_elements()void)",
        "Method(test_dynamic_elements()void)",
        "Method(test_mixed_single_dynamic_elements()void)",
        "Method(test_mixed_multiple_dynamic_elements()void)",
        "Method(test_nested_struct_replacement()void)",
        "Method(test_nested_tuple_modification()void)",
        "tmp%7#0"
      ]
    },
    "114": {
      "op": "match main_test_static_elements_route@6 main_test_dynamic_elements_route@7 main_test_mixed_single_dynamic_elements_route@8 main_test_mixed_multiple_dynamic_elements_route@9 main_test_nested_struct_replacement_route@10 main_test_nested_tuple_modification_route@11",
      "stack_out": []
    },
    "128": {
      "op": "b main_switch_case_default@12"
    },
    "131": {
      "block": "main_switch_case_default@12",
      "stack_in": [],
      "op": "b main_switch_case_next@13"
    },
    "134": {
      "block": "main_switch_case_next@13",
      "stack_in": [],
      "op": "b main_after_if_else@17"
    },
    "137": {
      "block": "main_after_if_else@17",
      "stack_in": [],
      "op": "b main_switch_case_next@18"
    },
    "140": {
      "block": "main_switch_case_next@18",
      "stack_in": [],
      "op": "b main_switch_case_next@19"
    },
    "143": {
      "block": "main_switch_case_next@19",
      "stack_in": [],
      "op": "b main_after_if_else@24"
    },
    "146": {
      "block": "main_after_if_else@24",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "147": {
      "block": "main_test_nested_tuple_modification_route@11",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification[routing]",
      "op": "callsub test_nested_tuple_modification"
    },
    "150": {
      "op": "b main_switch_case_next@13"
    },
    "153": {
      "block": "main_test_nested_struct_replacement_route@10",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement[routing]",
      "op": "callsub test_nested_struct_replacement"
    },
    "156": {
      "op": "b main_switch_case_next@13"
    },
    "159": {
      "block": "main_test_mixed_multiple_dynamic_elements_route@9",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements[routing]",
      "op": "callsub test_mixed_multiple_dynamic_elements"
    },
    "162": {
      "op": "b main_switch_case_next@13"
    },
    "165": {
      "block": "main_test_mixed_single_dynamic_elements_route@8",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements[routing]",
      "op": "callsub test_mixed_single_dynamic_elements"
    },
    "168": {
      "op": "b main_switch_case_next@13"
    },
    "171": {
      "block": "main_test_dynamic_elements_route@7",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements[routing]",
      "op": "callsub test_dynamic_elements"
    },
    "174": {
      "op": "b main_switch_case_next@13"
    },
    "177": {
      "block": "main_test_static_elements_route@6",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements[routing]",
      "op": "callsub test_static_elements"
    },
    "180": {
      "op": "b main_switch_case_next@13"
    },
    "183": {
      "block": "main_create_NoOp@14",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "186": {
      "op": "match",
      "stack_out": []
    },
    "188": {
      "op": "b main_switch_case_default@15"
    },
    "191": {
      "block": "main_switch_case_default@15",
      "stack_in": [],
      "op": "b main_switch_case_next@16"
    },
    "194": {
      "block": "main_switch_case_next@16",
      "stack_in": [],
      "op": "b main_after_if_else@17"
    },
    "197": {
      "block": "main_bare_routing@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "199": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "200": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%9#0"
      ]
    },
    "202": {
      "op": "match main___algopy_default_create@21",
      "stack_out": []
    },
    "206": {
      "op": "b main_switch_case_default@22"
    },
    "209": {
      "block": "main_switch_case_default@22",
      "stack_in": [],
      "op": "b main_switch_case_next@23"
    },
    "212": {
      "block": "main_switch_case_next@23",
      "stack_in": [],
      "op": "b main_after_if_else@24"
    },
    "215": {
      "block": "main___algopy_default_create@21",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "217": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "218": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "219": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "220": {
      "op": "b main_block@26"
    },
    "223": {
      "block": "main_block@26",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__algopy_default_create@27"
    },
    "226": {
      "block": "main_after_inlined_test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.__algopy_default_create@27",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "227": {
      "op": "return",
      "stack_out": []
    },
    "228": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "231": {
      "op": "b dynamic_array_pop_fixed_size_block@0"
    },
    "234": {
      "block": "dynamic_array_pop_fixed_size_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "236": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "237": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "238": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "239": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "240": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "241": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "244": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "246": {
      "op": "uncover 1",
      "stack_out": [
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "248": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "250": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "251": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0"
      ]
    },
    "252": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "254": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "255": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "256": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "258": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "tmp%7#0"
      ]
    },
    "259": {
      "op": "cover 2",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0",
        "item_location#0"
      ]
    },
    "261": {
      "op": "uncover 1",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0"
      ]
    },
    "263": {
      "op": "intc_1 // 0",
      "stack_out": [
        "popped#0",
        "item_location#0",
        "result#0",
        "0"
      ]
    },
    "264": {
      "op": "uncover 2",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "266": {
      "op": "substring3",
      "defined_out": [
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "267": {
      "retsub": true,
      "op": "retsub"
    },
    "268": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "271": {
      "op": "b dynamic_array_pop_dynamic_element_block@0"
    },
    "274": {
      "block": "dynamic_array_pop_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "276": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "277": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "278": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "279": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "280": {
      "op": "dupn 2",
      "defined_out": [
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "282": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "2"
      ]
    },
    "283": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "tmp%2#0"
      ]
    },
    "284": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0 (copy)"
      ]
    },
    "285": {
      "op": "cover 2",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "287": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "289": {
      "op": "extract 2 0",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%3#0"
      ]
    },
    "292": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "293": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "295": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "296": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "298": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "tmp%4#0"
      ]
    },
    "299": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "300": {
      "op": "cover 3",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "302": {
      "op": "dig 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "304": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "305": {
      "op": "cover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "tmp%5#0",
        "popped_offset#0"
      ]
    },
    "307": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%5#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "309": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%5#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "311": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "313": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "length_minus_1#0",
        "tmp%6#0"
      ]
    },
    "314": {
      "op": "cover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0"
      ]
    },
    "316": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "length_minus_1#0",
        "0x"
      ]
    },
    "317": {
      "op": "cover 1",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0"
      ]
    },
    "319": {
      "op": "intc_0 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "320": {
      "op": "*",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "321": {
      "op": "intc_0 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "2"
      ]
    },
    "322": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "323": {
      "op": "intc_1 // 0",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "324": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "327": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "329": {
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "331": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "332": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "335": {
      "op": "b dynamic_array_pop_dynamic_element_for_body@2"
    },
    "338": {
      "block": "dynamic_array_pop_dynamic_element_for_body@2",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "340": {
      "op": "frame_dig 7",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "342": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "343": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "344": {
      "op": "-",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "345": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "346": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "349": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%11#0",
        "new_head#0"
      ]
    },
    "351": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "new_head#0",
        "tmp%11#0"
      ]
    },
    "353": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "354": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "356": {
      "op": "b dynamic_array_pop_dynamic_element_for_footer@3"
    },
    "359": {
      "block": "dynamic_array_pop_dynamic_element_for_footer@3",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "361": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "362": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "363": {
      "op": "frame_bury 7",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ]
    },
    "365": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "368": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "length_minus_1#0"
      ]
    },
    "370": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "371": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "374": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%14#0",
        "new_head#0"
      ]
    },
    "376": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "377": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0"
      ]
    },
    "379": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "380": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "381": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "head_and_tail#0"
      ]
    },
    "383": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0"
      ]
    },
    "385": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0",
        "popped_offset#0"
      ]
    },
    "387": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "388": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "updated#0"
      ]
    },
    "389": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "updated#0",
        "popped#0"
      ]
    },
    "391": {
      "op": "uncover 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "tmp%7#0",
        "head_offset#0",
        "popped#0",
        "updated#0"
      ]
    },
    "393": {
      "op": "frame_bury 1"
    },
    "395": {
      "op": "frame_bury 0"
    },
    "397": {
      "retsub": true,
      "op": "retsub"
    },
    "398": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "401": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "402": {
      "op": "b dynamic_array_concat_dynamic_element_block@0"
    },
    "405": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "406": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "408": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "409": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "410": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "412": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "413": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "414": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "415": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "416": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "417": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "420": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "422": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "424": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "425": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "428": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@2"
    },
    "431": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "433": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "435": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "436": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "438": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "439": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "440": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "443": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "445": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "447": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "448": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "450": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@3"
    },
    "453": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "455": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "456": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "457": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "459": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "462": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "464": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "465": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "467": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "469": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "470": {
      "op": "*",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "471": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "473": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "474": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "475": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "0"
      ]
    },
    "476": {
      "op": "frame_bury 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "478": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "481": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "483": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "485": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "486": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "489": {
      "op": "b dynamic_array_concat_dynamic_element_for_body@6"
    },
    "492": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "494": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "496": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "497": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "499": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "500": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "501": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "504": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "506": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "508": {
      "op": "concat",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "509": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "511": {
      "op": "b dynamic_array_concat_dynamic_element_for_footer@7"
    },
    "514": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "516": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "517": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "518": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "520": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "523": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "525": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "527": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "528": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "529": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "532": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "534": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "535": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "537": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "538": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "539": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "541": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "542": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "544": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "546": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "548": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "549": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "550": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "552": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "553": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "554": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "556": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "557": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "559": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "561": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "563": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "564": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "565": {
      "op": "frame_bury 0"
    },
    "567": {
      "retsub": true,
      "op": "retsub"
    },
    "568": {
      "subroutine": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "params": {
        "source#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64"
      },
      "block": "dynamic_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "571": {
      "op": "b dynamic_array_replace_dynamic_element_block@0"
    },
    "574": {
      "block": "dynamic_array_replace_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "source#0 (copy)"
      ],
      "stack_out": [
        "source#0 (copy)"
      ]
    },
    "576": {
      "op": "substring 0 2",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0"
      ]
    },
    "579": {
      "op": "dup",
      "defined_out": [
        "size_b#0",
        "size_b#0 (copy)"
      ],
      "stack_out": [
        "size_b#0",
        "size_b#0 (copy)"
      ]
    },
    "580": {
      "op": "btoi",
      "defined_out": [
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0"
      ]
    },
    "581": {
      "op": "frame_dig -3",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "source#0 (copy)"
      ]
    },
    "583": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length#0",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0"
      ]
    },
    "586": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_item#0 (copy)",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0",
        "new_item#0 (copy)"
      ]
    },
    "588": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "index#0 (copy)",
        "new_item#0 (copy)",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0",
        "new_item#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "590": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "tmp%2#0",
        "new_item#0 (copy)",
        "index#0 (copy)",
        "array_length#0"
      ]
    },
    "592": {
      "callsub": "_puya_lib.arc4.static_array_replace_dynamic_element",
      "op": "callsub static_array_replace_dynamic_element",
      "defined_out": [
        "size_b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "size_b#0",
        "tmp%3#0"
      ]
    },
    "595": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "596": {
      "retsub": true,
      "op": "retsub"
    },
    "597": {
      "subroutine": "_puya_lib.arc4.static_array_replace_dynamic_element",
      "params": {
        "array_head_and_tail#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64",
        "array_length#0": "uint64"
      },
      "block": "static_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "600": {
      "op": "b static_array_replace_dynamic_element_block@0"
    },
    "603": {
      "block": "static_array_replace_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "index#0 (copy)"
      ],
      "stack_out": [
        "index#0 (copy)"
      ]
    },
    "605": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "index#0 (copy)"
      ],
      "stack_out": [
        "index#0 (copy)",
        "2"
      ]
    },
    "606": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "607": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "609": {
      "op": "uncover 1",
      "stack_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "611": {
      "op": "extract_uint16",
      "defined_out": [
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0"
      ]
    },
    "612": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_offset#0",
        "index#0 (copy)"
      ]
    },
    "614": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "index#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "615": {
      "op": "+",
      "defined_out": [
        "original_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "original_offset#0",
        "tmp%2#0"
      ]
    },
    "616": {
      "op": "intc_0 // 2",
      "stack_out": [
        "original_offset#0",
        "tmp%2#0",
        "2"
      ]
    },
    "617": {
      "op": "*",
      "defined_out": [
        "original_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_offset#0",
        "tmp%3#0"
      ]
    },
    "618": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_offset#0",
        "tmp%3#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "620": {
      "op": "uncover 1",
      "stack_out": [
        "original_offset#0",
        "array_head_and_tail#0 (copy)",
        "tmp%3#0"
      ]
    },
    "622": {
      "op": "extract_uint16",
      "defined_out": [
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0"
      ]
    },
    "623": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "625": {
      "op": "len",
      "defined_out": [
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0"
      ]
    },
    "626": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0 (copy)",
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "628": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "630": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0"
      ]
    },
    "631": {
      "op": "intc_2 // 1",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0",
        "1"
      ]
    },
    "632": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0"
      ]
    },
    "633": {
      "op": "dig 1",
      "defined_out": [
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)"
      ]
    },
    "635": {
      "op": "uncover 3",
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0"
      ]
    },
    "637": {
      "op": "uncover 2",
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0",
        "is_before_end#0"
      ]
    },
    "639": {
      "op": "select",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "640": {
      "op": "dup",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)"
      ]
    },
    "641": {
      "op": "dig 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0",
        "original_offset#0 (copy)"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0 (copy)"
      ]
    },
    "643": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%9#0"
      ]
    },
    "644": {
      "op": "cover 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "646": {
      "op": "frame_dig -3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)"
      ]
    },
    "648": {
      "op": "len",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%10#0"
      ]
    },
    "649": {
      "op": "cover 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "651": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "653": {
      "op": "intc_1 // 0",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0"
      ]
    },
    "654": {
      "op": "uncover 4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0",
        "original_offset#0"
      ]
    },
    "656": {
      "op": "substring3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0"
      ]
    },
    "657": {
      "op": "frame_dig -3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0",
        "new_item#0 (copy)"
      ]
    },
    "659": {
      "op": "concat",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0"
      ]
    },
    "660": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "662": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)",
        "end_offset#0"
      ]
    },
    "664": {
      "op": "uncover 3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)",
        "end_offset#0",
        "end_of_tail#0"
      ]
    },
    "666": {
      "op": "substring3",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "667": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0"
      ]
    },
    "668": {
      "op": "frame_dig -1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "670": {
      "op": "intc_0 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0 (copy)",
        "2"
      ]
    },
    "671": {
      "op": "*",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ]
    },
    "672": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "index#0 (copy)"
      ]
    },
    "674": {
      "op": "intc_2 // 1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "675": {
      "op": "+",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "676": {
      "op": "intc_0 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%16#0",
        "2"
      ]
    },
    "677": {
      "op": "*",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "678": {
      "op": "intc_0 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%17#0",
        "2"
      ]
    },
    "679": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "680": {
      "op": "b static_array_replace_dynamic_element_for_header@1"
    },
    "683": {
      "block": "static_array_replace_dynamic_element_for_header@1",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "685": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "687": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "688": {
      "op": "bz static_array_replace_dynamic_element_after_for@4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "691": {
      "op": "b static_array_replace_dynamic_element_for_body@2"
    },
    "694": {
      "block": "static_array_replace_dynamic_element_for_body@2",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "696": {
      "op": "dup",
      "defined_out": [
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "697": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "699": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "700": {
      "op": "cover 3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "702": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "703": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "new_item_length#0"
      ]
    },
    "705": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "706": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "original_item_length#0"
      ]
    },
    "708": {
      "op": "-",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "709": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%21#0"
      ]
    },
    "710": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset_bytes#0"
      ]
    },
    "713": {
      "op": "uncover 1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "new_head_and_tail#0"
      ]
    },
    "715": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "new_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "717": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "719": {
      "op": "replace3",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "tmp%23#0"
      ]
    },
    "720": {
      "op": "frame_bury 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "722": {
      "op": "b static_array_replace_dynamic_element_for_footer@3"
    },
    "725": {
      "block": "static_array_replace_dynamic_element_for_footer@3",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "727": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "728": {
      "op": "+",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "729": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "731": {
      "op": "b static_array_replace_dynamic_element_for_header@1"
    },
    "734": {
      "block": "static_array_replace_dynamic_element_after_for@4",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "736": {
      "op": "frame_bury 0"
    },
    "738": {
      "retsub": true,
      "op": "retsub"
    },
    "739": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "params": {},
      "block": "get_string1",
      "stack_in": [],
      "op": "b get_string1_block@0"
    },
    "742": {
      "block": "get_string1_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "743": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "744": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "745": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "748": {
      "op": "bytec_1 // \"a\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"a\""
      ]
    },
    "749": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "750": {
      "retsub": true,
      "op": "retsub"
    },
    "751": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "params": {},
      "block": "get_string2",
      "stack_in": [],
      "op": "b get_string2_block@0"
    },
    "754": {
      "block": "get_string2_block@0",
      "stack_in": [],
      "op": "bytec_2 // \"bee\"",
      "defined_out": [
        "\"bee\""
      ],
      "stack_out": [
        "\"bee\""
      ]
    },
    "755": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "756": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "757": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "760": {
      "op": "bytec_2 // \"bee\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"bee\""
      ]
    },
    "761": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "762": {
      "retsub": true,
      "op": "retsub"
    },
    "763": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_string3",
      "params": {},
      "block": "get_string3",
      "stack_in": [],
      "op": "b get_string3_block@0"
    },
    "766": {
      "block": "get_string3_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"Hello World\"",
      "defined_out": [
        "\"Hello World\""
      ],
      "stack_out": [
        "\"Hello World\""
      ]
    },
    "767": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "768": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "769": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "772": {
      "op": "bytec_3 // \"Hello World\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"Hello World\""
      ]
    },
    "773": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "774": {
      "retsub": true,
      "op": "retsub"
    },
    "775": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "params": {},
      "block": "get_uint1",
      "stack_in": [],
      "op": "b get_uint1_block@0"
    },
    "778": {
      "block": "get_uint1_block@0",
      "stack_in": [],
      "op": "pushbytes 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "0x0000000000000003"
      ]
    },
    "788": {
      "retsub": true,
      "op": "retsub"
    },
    "789": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "params": {},
      "block": "get_uint2",
      "stack_in": [],
      "op": "b get_uint2_block@0"
    },
    "792": {
      "block": "get_uint2_block@0",
      "stack_in": [],
      "op": "pushbytes 0x0000040000000000",
      "defined_out": [
        "0x0000040000000000"
      ],
      "stack_out": [
        "0x0000040000000000"
      ]
    },
    "802": {
      "retsub": true,
      "op": "retsub"
    },
    "803": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_byte1",
      "params": {},
      "block": "get_byte1",
      "stack_in": [],
      "op": "b get_byte1_block@0"
    },
    "806": {
      "block": "get_byte1_block@0",
      "stack_in": [],
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04"
      ],
      "stack_out": [
        "0x04"
      ]
    },
    "809": {
      "retsub": true,
      "op": "retsub"
    },
    "810": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_byte2",
      "params": {},
      "block": "get_byte2",
      "stack_in": [],
      "op": "b get_byte2_block@0"
    },
    "813": {
      "block": "get_byte2_block@0",
      "stack_in": [],
      "op": "pushbytes 0x05",
      "defined_out": [
        "0x05"
      ],
      "stack_out": [
        "0x05"
      ]
    },
    "816": {
      "retsub": true,
      "op": "retsub"
    },
    "817": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_byte3",
      "params": {},
      "block": "get_byte3",
      "stack_in": [],
      "op": "b get_byte3_block@0"
    },
    "820": {
      "block": "get_byte3_block@0",
      "stack_in": [],
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x2a"
      ],
      "stack_out": [
        "0x2a"
      ]
    },
    "823": {
      "retsub": true,
      "op": "retsub"
    },
    "824": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_byte4",
      "params": {},
      "block": "get_byte4",
      "stack_in": [],
      "op": "b get_byte4_block@0"
    },
    "827": {
      "block": "get_byte4_block@0",
      "stack_in": [],
      "op": "pushbytes 0xff",
      "defined_out": [
        "0xff"
      ],
      "stack_out": [
        "0xff"
      ]
    },
    "830": {
      "retsub": true,
      "op": "retsub"
    },
    "831": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr1",
      "params": {},
      "block": "get_u16_arr1",
      "stack_in": [],
      "op": "b get_u16_arr1_block@0"
    },
    "834": {
      "block": "get_u16_arr1_block@0",
      "stack_in": [],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "836": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "837": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "840": {
      "op": "pushbytes 0xffff",
      "defined_out": [
        "0xffff",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0xffff"
      ]
    },
    "844": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "845": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x0000"
      ]
    },
    "849": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "850": {
      "op": "pushbytes 0x002a",
      "defined_out": [
        "0x002a",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "0x002a"
      ]
    },
    "854": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "855": {
      "retsub": true,
      "op": "retsub"
    },
    "856": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr2",
      "params": {},
      "block": "get_u16_arr2",
      "stack_in": [],
      "op": "b get_u16_arr2_block@0"
    },
    "859": {
      "block": "get_u16_arr2_block@0",
      "stack_in": [],
      "op": "intc_3 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "860": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "861": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "864": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0001"
      ]
    },
    "868": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "869": {
      "op": "pushbytes 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x0002"
      ]
    },
    "873": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "874": {
      "op": "pushbytes 0x0003",
      "defined_out": [
        "0x0003",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "0x0003"
      ]
    },
    "878": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0"
      ]
    },
    "879": {
      "op": "pushbytes 0x0004",
      "defined_out": [
        "0x0004",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "0x0004"
      ]
    },
    "883": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "884": {
      "retsub": true,
      "op": "retsub"
    },
    "885": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements[routing]",
      "params": {},
      "block": "test_static_elements",
      "stack_in": [],
      "op": "b test_static_elements_block@0"
    },
    "888": {
      "block": "test_static_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements",
      "op": "callsub test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements"
    },
    "891": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "892": {
      "op": "return",
      "stack_out": []
    },
    "893": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements[routing]",
      "params": {},
      "block": "test_dynamic_elements",
      "stack_in": [],
      "op": "b test_dynamic_elements_block@0"
    },
    "896": {
      "block": "test_dynamic_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements",
      "op": "callsub test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements"
    },
    "899": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "900": {
      "op": "return",
      "stack_out": []
    },
    "901": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements[routing]",
      "params": {},
      "block": "test_mixed_single_dynamic_elements",
      "stack_in": [],
      "op": "b test_mixed_single_dynamic_elements_block@0"
    },
    "904": {
      "block": "test_mixed_single_dynamic_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements",
      "op": "callsub test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements"
    },
    "907": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "908": {
      "op": "return",
      "stack_out": []
    },
    "909": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements[routing]",
      "params": {},
      "block": "test_mixed_multiple_dynamic_elements",
      "stack_in": [],
      "op": "b test_mixed_multiple_dynamic_elements_block@0"
    },
    "912": {
      "block": "test_mixed_multiple_dynamic_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements",
      "op": "callsub test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements"
    },
    "915": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "916": {
      "op": "return",
      "stack_out": []
    },
    "917": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement[routing]",
      "params": {},
      "block": "test_nested_struct_replacement",
      "stack_in": [],
      "op": "b test_nested_struct_replacement_block@0"
    },
    "920": {
      "block": "test_nested_struct_replacement_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement",
      "op": "callsub test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement"
    },
    "923": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "924": {
      "op": "return",
      "stack_out": []
    },
    "925": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification[routing]",
      "params": {},
      "block": "test_nested_tuple_modification",
      "stack_in": [],
      "op": "b test_nested_tuple_modification_block@0"
    },
    "928": {
      "block": "test_nested_tuple_modification_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification",
      "op": "callsub test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification"
    },
    "931": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "932": {
      "op": "return",
      "stack_out": []
    },
    "933": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements",
      "params": {},
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "936": {
      "op": "b test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements_block@0"
    },
    "939": {
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_static_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte1",
      "op": "callsub get_byte1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "942": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte2",
      "op": "callsub get_byte2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "945": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "947": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "948": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "0x",
        "tmp%0#0"
      ]
    },
    "950": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "951": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "953": {
      "op": "concat",
      "defined_out": [
        "byte_array1#0"
      ],
      "stack_out": [
        "byte_array1#0"
      ]
    },
    "954": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte3",
      "op": "callsub get_byte3",
      "defined_out": [
        "byte_array1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "byte_array1#0",
        "tmp%2#0"
      ]
    },
    "957": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte4",
      "op": "callsub get_byte4",
      "defined_out": [
        "byte_array1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "byte_array1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "960": {
      "op": "cover 1",
      "stack_out": [
        "byte_array1#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "962": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "byte_array1#0",
        "tmp%3#0",
        "tmp%2#0",
        "0x"
      ]
    },
    "963": {
      "op": "uncover 1",
      "stack_out": [
        "byte_array1#0",
        "tmp%3#0",
        "0x",
        "tmp%2#0"
      ]
    },
    "965": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "byte_array1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "byte_array1#0",
        "tmp%3#0",
        "aggregate%head%2#0"
      ]
    },
    "966": {
      "op": "uncover 1",
      "stack_out": [
        "byte_array1#0",
        "aggregate%head%2#0",
        "tmp%3#0"
      ]
    },
    "968": {
      "op": "concat",
      "defined_out": [
        "byte_array1#0",
        "byte_array2#0"
      ],
      "stack_out": [
        "byte_array1#0",
        "byte_array2#0"
      ]
    },
    "969": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "byte_array1#0",
        "byte_array2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "byte_array1#0",
        "byte_array2#0",
        "tmp%4#0"
      ]
    },
    "972": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "byte_array1#0",
        "byte_array2#0",
        "tmp%4#0",
        "0x"
      ]
    },
    "973": {
      "op": "uncover 1",
      "stack_out": [
        "byte_array1#0",
        "byte_array2#0",
        "0x",
        "tmp%4#0"
      ]
    },
    "975": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "byte_array1#0",
        "byte_array2#0"
      ],
      "stack_out": [
        "byte_array1#0",
        "byte_array2#0",
        "aggregate%head%4#0"
      ]
    },
    "976": {
      "op": "uncover 2",
      "stack_out": [
        "byte_array2#0",
        "aggregate%head%4#0",
        "byte_array1#0"
      ]
    },
    "978": {
      "op": "concat",
      "defined_out": [
        "byte_array2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "byte_array2#0",
        "tmp%5#0"
      ]
    },
    "979": {
      "op": "cover 1",
      "defined_out": [
        "byte_array2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "byte_array2#0"
      ]
    },
    "981": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "byte_array2#0",
        "struct1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "byte_array2#0",
        "tmp%6#0"
      ]
    },
    "984": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "byte_array2#0",
        "tmp%6#0",
        "0x"
      ]
    },
    "985": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "byte_array2#0",
        "0x",
        "tmp%6#0"
      ]
    },
    "987": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "byte_array2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "byte_array2#0",
        "aggregate%head%6#0"
      ]
    },
    "988": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "aggregate%head%6#0",
        "byte_array2#0"
      ]
    },
    "990": {
      "op": "concat",
      "defined_out": [
        "struct1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%7#0"
      ]
    },
    "991": {
      "op": "cover 1",
      "defined_out": [
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0"
      ]
    },
    "993": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "2"
      ]
    },
    "994": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "995": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "998": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct1#0 (copy)",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%len_u16%0#0",
        "struct1#0 (copy)"
      ]
    },
    "1000": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%8#0"
      ]
    },
    "1001": {
      "op": "dig 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%8#0",
        "struct1#0 (copy)"
      ]
    },
    "1003": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1004": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "1"
      ]
    },
    "1005": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "1",
        "10",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "1",
        "10"
      ]
    },
    "1007": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "1008": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "1009": {
      "op": "+",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "1010": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "array#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%write_offset_with_length_header%0#0",
        "struct2#0 (copy)"
      ]
    },
    "1012": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1013": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1014": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1015": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1016": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%total_length%1#0"
      ]
    },
    "1017": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%1#0",
        "array#0"
      ]
    },
    "1019": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1020": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1021": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "1023": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "1024": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "aggregate%array_trimmed%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%1#0",
        "0"
      ]
    },
    "1025": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%1#0",
        "0",
        "10"
      ]
    },
    "1027": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1028": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "10"
      ]
    },
    "1030": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "array_item%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array_item%0#0"
      ]
    },
    "1031": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1032": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1033": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%total_length%2#0"
      ]
    },
    "1034": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%2#0",
        "array#0"
      ]
    },
    "1036": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1037": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1038": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "1040": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1041": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%2#0",
        "1"
      ]
    },
    "1042": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%2#0",
        "1",
        "10"
      ]
    },
    "1044": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1045": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "10"
      ]
    },
    "1047": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array#0",
        "array_item%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array_item%1#0"
      ]
    },
    "1048": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1049": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "10"
      ]
    },
    "1051": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "struct1#0",
        "struct2#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1054": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "tmp%8#0"
      ]
    },
    "1056": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%8#0",
        "struct2#0"
      ]
    },
    "1058": {
      "op": "==",
      "defined_out": [
        "array#0",
        "struct1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%10#0"
      ]
    },
    "1059": {
      "op": "assert",
      "stack_out": [
        "struct1#0",
        "array#0"
      ]
    },
    "1060": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "struct1#0",
        "array#0",
        "10"
      ]
    },
    "1062": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "struct1#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1065": {
      "op": "cover 2",
      "defined_out": [
        "struct1#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "struct1#0",
        "tmp%11#0"
      ]
    },
    "1067": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1068": {
      "op": "assert",
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1069": {
      "retsub": true,
      "op": "retsub"
    },
    "1070": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements",
      "params": {},
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements",
      "stack_in": [],
      "op": "b test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements_block@0"
    },
    "1073": {
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_dynamic_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1076": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1079": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1081": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "4"
      ]
    },
    "1082": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1083": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1086": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "1087": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1089": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "1090": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ]
    },
    "1092": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1093": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1094": {
      "op": "intc_3 // 4",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "1095": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1096": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1097": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1100": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%0#0"
      ]
    },
    "1102": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1104": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1105": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "1107": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "1108": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%1#0"
      ]
    },
    "1110": {
      "op": "concat",
      "defined_out": [
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0"
      ]
    },
    "1111": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string3",
      "op": "callsub get_string3",
      "defined_out": [
        "struct1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%3#0"
      ]
    },
    "1114": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1117": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "1119": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "4"
      ]
    },
    "1120": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1121": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1124": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "1125": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1127": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0"
      ]
    },
    "1128": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0"
      ]
    },
    "1130": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1131": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%2#0",
        "aggregate%head%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "aggregate%data_length%2#0"
      ]
    },
    "1132": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "aggregate%data_length%2#0",
        "4"
      ]
    },
    "1133": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "1134": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%head%2#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1135": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%3#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1138": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%2#0"
      ]
    },
    "1140": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1142": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "struct1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%3#0"
      ]
    },
    "1143": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "tmp%3#0"
      ]
    },
    "1145": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "struct1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "aggregate%concat%2#0"
      ]
    },
    "1146": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "aggregate%concat%2#0",
        "tmp%4#0"
      ]
    },
    "1148": {
      "op": "concat",
      "defined_out": [
        "struct1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0"
      ]
    },
    "1149": {
      "op": "cover 1",
      "defined_out": [
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0"
      ]
    },
    "1151": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "2"
      ]
    },
    "1152": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1153": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "1156": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%len_u16%0#0",
        "4"
      ]
    },
    "1157": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "1158": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "1161": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0"
      ]
    },
    "1162": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "struct1#0",
        "struct1#0 (copy)",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0",
        "struct1#0 (copy)"
      ]
    },
    "1164": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%4#0",
        "aggregate%head%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0",
        "aggregate%data_length%4#0"
      ]
    },
    "1165": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0",
        "aggregate%data_length%4#0",
        "4"
      ]
    },
    "1166": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0",
        "aggregate%current_tail_offset%4#0"
      ]
    },
    "1167": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "aggregate%head%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "1168": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%5#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "1171": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%5#0"
      ]
    },
    "1172": {
      "op": "dig 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%head%5#0",
        "struct1#0 (copy)"
      ]
    },
    "1174": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%concat%4#0"
      ]
    },
    "1175": {
      "op": "dig 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%concat%4#0",
        "struct1#0 (copy)"
      ]
    },
    "1177": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1178": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1179": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0",
        "array#0 (copy)",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1180": {
      "op": "extract_uint16",
      "defined_out": [
        "array#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "extract_uint16%0#0"
      ]
    },
    "1181": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "array#0"
      ]
    },
    "1183": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1184": {
      "op": "len",
      "defined_out": [
        "array#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "array#0",
        "total_length%0#0"
      ]
    },
    "1185": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "array#0"
      ]
    },
    "1187": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "array#0",
        "2"
      ]
    },
    "1188": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "array#0",
        "2",
        "total_length%0#0"
      ]
    },
    "1190": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1191": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "1192": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "1193": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%6#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "1196": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%6#0",
        "0x"
      ]
    },
    "1197": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "1199": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%6#0"
      ]
    },
    "1200": {
      "op": "dig 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%6#0",
        "struct1#0 (copy)"
      ]
    },
    "1202": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%6#0"
      ]
    },
    "1203": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_to_end%0#0",
        "tmp%6#0",
        "extract_uint16%0#0"
      ]
    },
    "1205": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "tmp%6#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1207": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "tmp%6#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "1208": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%6#0"
      ]
    },
    "1210": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1213": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1214": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1215": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1216": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_length%1#0",
        "1"
      ]
    },
    "1217": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%lt%0#0"
      ]
    },
    "1218": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1219": {
      "op": "dig 2",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "struct2#0 (copy)"
      ]
    },
    "1221": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "struct2#0 (copy)",
        "1"
      ]
    },
    "1222": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1225": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1226": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1227": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1228": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%total_length%1#0"
      ]
    },
    "1229": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%1#0",
        "array#0"
      ]
    },
    "1231": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1232": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1233": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "1235": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "1236": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0"
      ]
    },
    "1238": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1239": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1240": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "aggregate%array_length%2#0"
      ]
    },
    "1241": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0"
      ]
    },
    "1243": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0"
      ]
    },
    "1244": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0",
        "2"
      ]
    },
    "1245": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "1246": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "1248": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "1250": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "1251": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0"
      ]
    },
    "1253": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0"
      ]
    },
    "1254": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0",
        "1"
      ]
    },
    "1255": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "1256": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "1258": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "1260": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "1261": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "1263": {
      "op": "dig 4",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "1265": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "1266": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "1268": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "1269": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "1270": {
      "op": "dig 5",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "1272": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "1274": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "1275": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "1277": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "1279": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "1281": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "1282": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "1284": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "1286": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "1288": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array_item%0#0"
      ]
    },
    "1289": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1290": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1291": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%total_length%2#0"
      ]
    },
    "1292": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%2#0",
        "array#0"
      ]
    },
    "1294": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1295": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1296": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "1298": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "1299": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0"
      ]
    },
    "1301": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1302": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1303": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1304": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0"
      ]
    },
    "1306": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1"
      ]
    },
    "1307": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1",
        "2"
      ]
    },
    "1308": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "1309": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "1311": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "1313": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "1314": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0"
      ]
    },
    "1316": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1"
      ]
    },
    "1317": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1",
        "1"
      ]
    },
    "1318": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "1319": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1321": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "1323": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "1324": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "1326": {
      "op": "dig 4",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "1328": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "1329": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "1331": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "1332": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "1333": {
      "op": "dig 5",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "1335": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "1337": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "1338": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "1340": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "1342": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "1344": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "1345": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "1347": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "1349": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "1351": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array_item%1#0"
      ]
    },
    "1352": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1353": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1354": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%total_length%3#0"
      ]
    },
    "1355": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%3#0",
        "array#0"
      ]
    },
    "1357": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%3#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1358": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%total_length%3#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1359": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "1361": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "1362": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "array#0"
      ]
    },
    "1364": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1365": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1366": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "array#0",
        "aggregate%array_length%4#0"
      ]
    },
    "1367": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0"
      ]
    },
    "1369": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "2"
      ]
    },
    "1370": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "2",
        "2"
      ]
    },
    "1371": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "1372": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "1374": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "1376": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "1377": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%4#0",
        "array#0"
      ]
    },
    "1379": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "2"
      ]
    },
    "1380": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "2",
        "1"
      ]
    },
    "1381": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%4#0",
        "array#0",
        "aggregate%next_index%3#0"
      ]
    },
    "1382": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%4#0"
      ]
    },
    "1384": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "1386": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "1387": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "array#0",
        "aggregate%next_index%3#0"
      ]
    },
    "1389": {
      "op": "dig 4",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "array#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "1391": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "array#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "1392": {
      "op": "cover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array#0",
        "aggregate%next_index%3#0"
      ]
    },
    "1394": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "1395": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset_offset%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "1396": {
      "op": "dig 5",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "1398": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "1400": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "1401": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "array#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "1403": {
      "op": "uncover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%has_next%3#0",
        "array#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "1405": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "1407": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "1408": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "aggregate%item_offset%3#0",
        "array#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "1410": {
      "op": "uncover 3",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "1412": {
      "op": "uncover 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "1414": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%2#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array_item%2#0"
      ]
    },
    "1415": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1416": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "struct1#0",
        "struct2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1419": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "tmp%7#0"
      ]
    },
    "1421": {
      "op": "dig 2",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "tmp%7#0",
        "struct1#0 (copy)"
      ]
    },
    "1423": {
      "op": "==",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "tmp%9#0"
      ]
    },
    "1424": {
      "op": "assert",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1425": {
      "op": "dup",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1426": {
      "op": "log",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0"
      ]
    },
    "1427": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "struct1#0",
        "struct2#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1430": {
      "op": "cover 1",
      "stack_out": [
        "struct2#0",
        "struct1#0",
        "array#0",
        "tmp%10#0"
      ]
    },
    "1432": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%10#0",
        "struct2#0"
      ]
    },
    "1434": {
      "op": "==",
      "defined_out": [
        "array#0",
        "struct1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%12#0"
      ]
    },
    "1435": {
      "op": "assert",
      "stack_out": [
        "struct1#0",
        "array#0"
      ]
    },
    "1436": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1437": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "array#0"
      ]
    },
    "1438": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "struct1#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1441": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%13#0"
      ]
    },
    "1443": {
      "op": "uncover 2",
      "stack_out": [
        "array#0",
        "tmp%13#0",
        "struct1#0"
      ]
    },
    "1445": {
      "op": "==",
      "defined_out": [
        "array#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "array#0",
        "tmp%15#0"
      ]
    },
    "1446": {
      "op": "assert",
      "stack_out": [
        "array#0"
      ]
    },
    "1447": {
      "op": "log",
      "stack_out": []
    },
    "1448": {
      "retsub": true,
      "op": "retsub"
    },
    "1449": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements",
      "params": {},
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1452": {
      "op": "b test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements_block@0"
    },
    "1455": {
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_single_dynamic_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1458": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1461": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1463": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1466": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "1468": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "1469": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x",
        "tmp%0#0"
      ]
    },
    "1471": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%head%0#0"
      ]
    },
    "1472": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "18"
      ]
    },
    "1474": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1475": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1478": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%head%1#0"
      ]
    },
    "1479": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%2#0"
      ]
    },
    "1481": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%2#0"
      ]
    },
    "1482": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "tmp%1#0"
      ]
    },
    "1484": {
      "op": "concat",
      "defined_out": [
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0"
      ]
    },
    "1485": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "struct1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0"
      ]
    },
    "1488": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1491": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%4#0"
      ]
    },
    "1493": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "struct1#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "1496": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%4#0"
      ]
    },
    "1498": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%4#0",
        "0x"
      ]
    },
    "1499": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "0x",
        "tmp%4#0"
      ]
    },
    "1501": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "aggregate%head%3#0"
      ]
    },
    "1502": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "aggregate%head%3#0",
        "18"
      ]
    },
    "1504": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%3#0",
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "aggregate%head%3#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1505": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0",
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1508": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "tmp%6#0",
        "aggregate%head%4#0"
      ]
    },
    "1509": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%6#0"
      ]
    },
    "1511": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "struct1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%5#0",
        "aggregate%head%5#0"
      ]
    },
    "1512": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "aggregate%head%5#0",
        "tmp%5#0"
      ]
    },
    "1514": {
      "op": "concat",
      "defined_out": [
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0"
      ]
    },
    "1515": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "0"
      ]
    },
    "1516": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1517": {
      "op": "extract 6 2",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1520": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1521": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1522": {
      "op": "extract_uint16",
      "defined_out": [
        "array#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "extract_uint16%0#0"
      ]
    },
    "1523": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "array#0"
      ]
    },
    "1525": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1526": {
      "op": "len",
      "defined_out": [
        "array#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "array#0",
        "total_length%0#0"
      ]
    },
    "1527": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "array#0"
      ]
    },
    "1529": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "array#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "array#0",
        "2"
      ]
    },
    "1530": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "array#0",
        "2",
        "total_length%0#0"
      ]
    },
    "1532": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1533": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "1534": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1535": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%2#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1538": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "1539": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1541": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%6#0"
      ]
    },
    "1542": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%6#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%6#0",
        "struct2#0 (copy)"
      ]
    },
    "1544": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%8#0"
      ]
    },
    "1545": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_to_end%0#0",
        "tmp%8#0",
        "extract_uint16%0#0"
      ]
    },
    "1547": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "tmp%8#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1549": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct1#0",
        "struct2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "tmp%8#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "1550": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%8#0"
      ]
    },
    "1552": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1555": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1556": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1557": {
      "op": "extract_uint16",
      "defined_out": [
        "array#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "extract_uint16%1#0"
      ]
    },
    "1558": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "array#0"
      ]
    },
    "1560": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1561": {
      "op": "len",
      "defined_out": [
        "array#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "array#0",
        "total_length%1#0"
      ]
    },
    "1562": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "total_length%1#0",
        "array#0"
      ]
    },
    "1564": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "total_length%1#0",
        "array#0",
        "2"
      ]
    },
    "1565": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "array#0",
        "2",
        "total_length%1#0"
      ]
    },
    "1567": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "1568": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "2"
      ]
    },
    "1569": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1570": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%3#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1573": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%offset_as_uint16%3#0",
        "0x"
      ]
    },
    "1574": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "0x",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1576": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%head%7#0"
      ]
    },
    "1577": {
      "op": "dig 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%head%7#0",
        "struct2#0 (copy)"
      ]
    },
    "1579": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct1#0",
        "struct2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "tmp%9#0"
      ]
    },
    "1580": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_to_end%1#0",
        "tmp%9#0",
        "extract_uint16%1#0"
      ]
    },
    "1582": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "tmp%9#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "1584": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "tmp%9#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "1585": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "tmp%9#0"
      ]
    },
    "1587": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1590": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1591": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1592": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1593": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_length%1#0",
        "0"
      ]
    },
    "1594": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%lt%0#0"
      ]
    },
    "1595": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1596": {
      "op": "dig 2",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct1#0 (copy)",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "struct1#0 (copy)"
      ]
    },
    "1598": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "struct1#0 (copy)",
        "0"
      ]
    },
    "1599": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1602": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1603": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1604": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1605": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%total_length%1#0"
      ]
    },
    "1606": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%1#0",
        "array#0"
      ]
    },
    "1608": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1609": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1610": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "1612": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "1613": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0"
      ]
    },
    "1615": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1616": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1617": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "aggregate%array_length%2#0"
      ]
    },
    "1618": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0"
      ]
    },
    "1620": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0"
      ]
    },
    "1621": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0",
        "2"
      ]
    },
    "1622": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "1623": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "1625": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "1627": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "1628": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0"
      ]
    },
    "1630": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0"
      ]
    },
    "1631": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0",
        "1"
      ]
    },
    "1632": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "1633": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "1635": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "1637": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "1638": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "1640": {
      "op": "dig 4",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "1642": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "1643": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "1645": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "1646": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "1647": {
      "op": "dig 5",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "1649": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "1651": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "1652": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "1654": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "1656": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "1658": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "1659": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "1661": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "1663": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "1665": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array_item%0#0"
      ]
    },
    "1666": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1667": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1668": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%total_length%2#0"
      ]
    },
    "1669": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%2#0",
        "array#0"
      ]
    },
    "1671": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1672": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1673": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "1675": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "1676": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0"
      ]
    },
    "1678": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "1679": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "1680": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1681": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0"
      ]
    },
    "1683": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1"
      ]
    },
    "1684": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1",
        "2"
      ]
    },
    "1685": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "1686": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "1688": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "1690": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "1691": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0"
      ]
    },
    "1693": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1"
      ]
    },
    "1694": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1",
        "1"
      ]
    },
    "1695": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "1696": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1698": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "1700": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "1701": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "1703": {
      "op": "dig 4",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "1705": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "1706": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "1708": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "1709": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "1710": {
      "op": "dig 5",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "1712": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "1714": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "1715": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "1717": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "1719": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "1721": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "1722": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "1724": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "1726": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "1728": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array_item%1#0"
      ]
    },
    "1729": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "1730": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array2#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array#0"
      ]
    },
    "1731": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1734": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array#0",
        "tmp%10#0"
      ]
    },
    "1736": {
      "op": "dig 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array#0",
        "tmp%10#0",
        "struct2#0 (copy)"
      ]
    },
    "1738": {
      "op": "==",
      "defined_out": [
        "array#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array#0",
        "tmp%12#0"
      ]
    },
    "1739": {
      "op": "assert",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array#0"
      ]
    },
    "1740": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1743": {
      "op": "cover 4",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%13#0"
      ]
    },
    "1745": {
      "op": "dig 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%13#0",
        "struct1#0 (copy)"
      ]
    },
    "1747": {
      "op": "==",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%15#0"
      ]
    },
    "1748": {
      "op": "assert",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0"
      ]
    },
    "1749": {
      "op": "dup",
      "defined_out": [
        "array2#0",
        "array2#0 (copy)",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1750": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)",
        "0"
      ]
    },
    "1751": {
      "op": "extract_uint16",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%16#0"
      ]
    },
    "1752": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%16#0",
        "2"
      ]
    },
    "1753": {
      "op": "==",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%17#0"
      ]
    },
    "1754": {
      "op": "assert",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0"
      ]
    },
    "1755": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1756": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)",
        "0"
      ]
    },
    "1757": {
      "op": "extract_uint16",
      "defined_out": [
        "array2#0",
        "extract_uint16%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "extract_uint16%2#0"
      ]
    },
    "1758": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "array2#0"
      ]
    },
    "1760": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1761": {
      "op": "len",
      "defined_out": [
        "array2#0",
        "extract_uint16%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "total_length%2#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "array2#0",
        "total_length%2#0"
      ]
    },
    "1762": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "total_length%2#0",
        "array2#0"
      ]
    },
    "1764": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "total_length%2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1765": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "total_length%2#0",
        "array2#0",
        "array2#0 (copy)",
        "2"
      ]
    },
    "1766": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "array2#0",
        "array2#0 (copy)",
        "2",
        "total_length%2#0"
      ]
    },
    "1768": {
      "op": "substring3",
      "defined_out": [
        "array2#0",
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "array2#0",
        "extract_to_end%2#0"
      ]
    },
    "1769": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "array2#0"
      ]
    },
    "1771": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1772": {
      "op": "len",
      "defined_out": [
        "array2#0",
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "total_length%3#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "array2#0",
        "total_length%3#0"
      ]
    },
    "1773": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "total_length%3#0",
        "array2#0"
      ]
    },
    "1775": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "total_length%3#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1776": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "total_length%3#0",
        "array2#0",
        "array2#0 (copy)",
        "2"
      ]
    },
    "1777": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "array2#0",
        "array2#0 (copy)",
        "2",
        "total_length%3#0"
      ]
    },
    "1779": {
      "op": "substring3",
      "defined_out": [
        "array2#0",
        "extract_to_end%2#0",
        "extract_to_end%3#0",
        "extract_uint16%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "array2#0",
        "extract_to_end%3#0"
      ]
    },
    "1780": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "extract_to_end%3#0",
        "array2#0"
      ]
    },
    "1782": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "extract_to_end%3#0",
        "array2#0",
        "0"
      ]
    },
    "1783": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_to_end%2#0",
        "extract_to_end%3#0",
        "extract_uint16%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "extract_to_end%3#0",
        "tmp%18#0"
      ]
    },
    "1784": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_to_end%2#0",
        "extract_to_end%3#0",
        "tmp%18#0",
        "extract_uint16%2#0"
      ]
    },
    "1786": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_to_end%3#0",
        "tmp%18#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0"
      ]
    },
    "1788": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_to_end%3#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "tmp%18#0"
      ]
    },
    "1790": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "tmp%18#0",
        "extract_to_end%3#0"
      ]
    },
    "1792": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0"
      ]
    },
    "1795": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1796": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)",
        "0"
      ]
    },
    "1797": {
      "op": "extract_uint16",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%19#0"
      ]
    },
    "1798": {
      "op": "intc_3 // 4",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%19#0",
        "4"
      ]
    },
    "1799": {
      "op": "==",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%20#0"
      ]
    },
    "1800": {
      "op": "assert",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0"
      ]
    },
    "1801": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1802": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array2#0 (copy)",
        "0"
      ]
    },
    "1803": {
      "op": "extract_uint16",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%21#0"
      ]
    },
    "1804": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%21#0",
        "1"
      ]
    },
    "1805": {
      "op": "-",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "tmp%22#0"
      ]
    },
    "1806": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "array2#0"
      ]
    },
    "1808": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1809": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "array2#0",
        "aggregate%total_length%3#0"
      ]
    },
    "1810": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "array2#0"
      ]
    },
    "1812": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1813": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%total_length%3#0",
        "array2#0",
        "array2#0 (copy)",
        "2"
      ]
    },
    "1814": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "array2#0",
        "array2#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "1816": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "array2#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "1817": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0"
      ]
    },
    "1819": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1820": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "array2#0 (copy)",
        "0"
      ]
    },
    "1821": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%8#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%array_length%8#0"
      ]
    },
    "1822": {
      "op": "cover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0"
      ]
    },
    "1824": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%8#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0",
        "tmp%22#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "tmp%22#0 (copy)"
      ]
    },
    "1826": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "tmp%22#0 (copy)",
        "2"
      ]
    },
    "1827": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%8#0",
        "aggregate%item_offset_offset%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "1828": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%8#0",
        "aggregate%item_offset_offset%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "1830": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "1832": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%8#0",
        "aggregate%item_offset%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "1833": {
      "op": "cover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "tmp%22#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0"
      ]
    },
    "1835": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "tmp%22#0"
      ]
    },
    "1837": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "tmp%22#0",
        "1"
      ]
    },
    "1838": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%8#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_length%8#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%next_index%3#0"
      ]
    },
    "1839": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%8#0"
      ]
    },
    "1841": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%8#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%8#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "1843": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "1844": {
      "op": "cover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "array2#0",
        "aggregate%next_index%3#0"
      ]
    },
    "1846": {
      "op": "dig 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "array2#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "1848": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_index%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "array2#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "1849": {
      "op": "cover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array2#0",
        "aggregate%next_index%3#0"
      ]
    },
    "1851": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array2#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "1852": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset_offset%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array2#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "1853": {
      "op": "dig 4",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array2#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "1855": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array2#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "1857": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%next_item_offset%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "array2#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "1858": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "array2#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "1860": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "array2#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "1862": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "1864": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%3#0",
        "array2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "array2#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "1865": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%3#0",
        "array2#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "1867": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "1869": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%3#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "1871": {
      "op": "substring3",
      "defined_out": [
        "array2#0",
        "array_item%2#0",
        "struct1#0",
        "struct2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "struct2#0",
        "array2#0",
        "array_item%2#0"
      ]
    },
    "1872": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "array_item%2#0",
        "struct2#0"
      ]
    },
    "1874": {
      "op": "==",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "tmp%23#0"
      ]
    },
    "1875": {
      "op": "assert",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0"
      ]
    },
    "1876": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1877": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "array2#0 (copy)",
        "0"
      ]
    },
    "1878": {
      "op": "extract_uint16",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "tmp%24#0"
      ]
    },
    "1879": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "tmp%24#0",
        "2"
      ]
    },
    "1880": {
      "op": "-",
      "defined_out": [
        "array2#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array2#0",
        "tmp%25#0"
      ]
    },
    "1881": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "array2#0"
      ]
    },
    "1883": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1884": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%4#0",
        "array2#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "array2#0",
        "aggregate%total_length%4#0"
      ]
    },
    "1885": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "aggregate%total_length%4#0",
        "array2#0"
      ]
    },
    "1887": {
      "op": "dup",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "aggregate%total_length%4#0",
        "array2#0",
        "array2#0 (copy)"
      ]
    },
    "1888": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "aggregate%total_length%4#0",
        "array2#0",
        "array2#0 (copy)",
        "2"
      ]
    },
    "1889": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "array2#0",
        "array2#0 (copy)",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "1891": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "array2#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "array2#0",
        "aggregate%array_head_and_tail%4#0"
      ]
    },
    "1892": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "array2#0"
      ]
    },
    "1894": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "array2#0",
        "0"
      ]
    },
    "1895": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0"
      ]
    },
    "1896": {
      "op": "cover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0"
      ]
    },
    "1898": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0",
        "tmp%25#0 (copy)"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "tmp%25#0 (copy)"
      ]
    },
    "1900": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "tmp%25#0 (copy)",
        "2"
      ]
    },
    "1901": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0",
        "aggregate%item_offset_offset%4#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%item_offset_offset%4#0"
      ]
    },
    "1902": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_head_and_tail%4#0 (copy)",
        "aggregate%array_length%10#0",
        "aggregate%item_offset_offset%4#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%item_offset_offset%4#0",
        "aggregate%array_head_and_tail%4#0 (copy)"
      ]
    },
    "1904": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_head_and_tail%4#0 (copy)",
        "aggregate%item_offset_offset%4#0"
      ]
    },
    "1906": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0",
        "aggregate%item_offset%4#0",
        "struct1#0",
        "tmp%14#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "1907": {
      "op": "cover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%10#0",
        "tmp%25#0",
        "aggregate%array_head_and_tail%4#0"
      ]
    },
    "1909": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%10#0",
        "aggregate%array_head_and_tail%4#0",
        "tmp%25#0"
      ]
    },
    "1911": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%10#0",
        "aggregate%array_head_and_tail%4#0",
        "tmp%25#0",
        "1"
      ]
    },
    "1912": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%4#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%10#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0"
      ]
    },
    "1913": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0",
        "aggregate%array_length%10#0"
      ]
    },
    "1915": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_length%10#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%4#0",
        "aggregate%next_index%4#0 (copy)",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0",
        "aggregate%array_length%10#0",
        "aggregate%next_index%4#0 (copy)"
      ]
    },
    "1917": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%has_next%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%4#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0",
        "aggregate%has_next%4#0"
      ]
    },
    "1918": {
      "op": "cover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0"
      ]
    },
    "1920": {
      "op": "dig 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0",
        "aggregate%array_head_and_tail%4#0 (copy)"
      ]
    },
    "1922": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%has_next%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%4#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0",
        "aggregate%end_of_array%4#0"
      ]
    },
    "1923": {
      "op": "cover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0"
      ]
    },
    "1925": {
      "op": "intc_0 // 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_index%4#0",
        "2"
      ]
    },
    "1926": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%has_next%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset_offset%4#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_item_offset_offset%4#0"
      ]
    },
    "1927": {
      "op": "dig 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_item_offset_offset%4#0",
        "aggregate%array_head_and_tail%4#0 (copy)"
      ]
    },
    "1929": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%array_head_and_tail%4#0 (copy)",
        "aggregate%next_item_offset_offset%4#0"
      ]
    },
    "1931": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%has_next%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%4#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_item_offset%4#0"
      ]
    },
    "1932": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%next_item_offset%4#0",
        "aggregate%end_of_array%4#0"
      ]
    },
    "1934": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%next_item_offset%4#0"
      ]
    },
    "1936": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_of_array%4#0",
        "aggregate%next_item_offset%4#0",
        "aggregate%has_next%4#0"
      ]
    },
    "1938": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_offset%4#0",
        "aggregate%item_offset%4#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%end_offset%4#0"
      ]
    },
    "1939": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_offset%4#0",
        "aggregate%array_head_and_tail%4#0"
      ]
    },
    "1941": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%end_offset%4#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "1943": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "aggregate%array_head_and_tail%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_offset%4#0"
      ]
    },
    "1945": {
      "op": "substring3",
      "defined_out": [
        "array_item%3#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "struct1#0",
        "array_item%3#0"
      ]
    },
    "1946": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%26#0"
      ]
    },
    "1947": {
      "op": "assert",
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1948": {
      "retsub": true,
      "op": "retsub"
    },
    "1949": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements",
      "params": {},
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1952": {
      "op": "b test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements_block@0"
    },
    "1955": {
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_mixed_multiple_dynamic_elements_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1958": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1961": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1963": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1966": {
      "op": "cover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1968": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr1",
      "op": "callsub get_u16_arr1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "1971": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1973": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "1976": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1978": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "1979": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "tmp%0#0"
      ]
    },
    "1981": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "1982": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0",
        "28"
      ]
    },
    "1984": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1985": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1988": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%1#0"
      ]
    },
    "1989": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1991": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%1#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1992": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%1#0",
        "aggregate%data_length%0#0",
        "28"
      ]
    },
    "1994": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1995": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1997": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%2#0"
      ]
    },
    "1999": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0"
      ]
    },
    "2000": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2002": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%2#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2003": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2006": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0",
        "aggregate%head%3#0"
      ]
    },
    "2007": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%1#0",
        "aggregate%head%3#0",
        "tmp%4#0"
      ]
    },
    "2009": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%1#0",
        "aggregate%head%4#0"
      ]
    },
    "2010": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%4#0",
        "tmp%1#0"
      ]
    },
    "2012": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%concat%0#0"
      ]
    },
    "2013": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%3#0"
      ]
    },
    "2015": {
      "op": "concat",
      "defined_out": [
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0"
      ]
    },
    "2016": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "struct1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%6#0"
      ]
    },
    "2019": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "struct1#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2022": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "2024": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "struct1#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2027": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "2029": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr2",
      "op": "callsub get_u16_arr2",
      "defined_out": [
        "struct1#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "2032": {
      "op": "cover 3",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "2034": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "struct1#0",
        "tmp%10#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%10#0"
      ]
    },
    "2037": {
      "op": "cover 3",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "2039": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "0x"
      ]
    },
    "2040": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "0x",
        "tmp%6#0"
      ]
    },
    "2042": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%5#0"
      ]
    },
    "2043": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%5#0",
        "28"
      ]
    },
    "2045": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%5#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%5#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2046": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%offset_as_uint16%2#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%5#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2049": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%6#0"
      ]
    },
    "2050": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%6#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%6#0",
        "tmp%7#0 (copy)"
      ]
    },
    "2052": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%2#0",
        "aggregate%head%6#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%6#0",
        "aggregate%data_length%2#0"
      ]
    },
    "2053": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%6#0",
        "aggregate%data_length%2#0",
        "28"
      ]
    },
    "2055": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%6#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%6#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "2056": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%6#0"
      ]
    },
    "2058": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%7#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%6#0",
        "tmp%8#0"
      ]
    },
    "2060": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%7#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%7#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%7#0"
      ]
    },
    "2061": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%7#0",
        "aggregate%head%7#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "2063": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%head%7#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%7#0",
        "aggregate%head%7#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "2064": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%offset_as_uint16%3#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%7#0",
        "aggregate%head%7#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2067": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "struct1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%7#0",
        "aggregate%head%8#0"
      ]
    },
    "2068": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%7#0",
        "aggregate%head%8#0",
        "tmp%10#0"
      ]
    },
    "2070": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%9#0",
        "struct1#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "tmp%7#0",
        "aggregate%head%9#0"
      ]
    },
    "2071": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "aggregate%head%9#0",
        "tmp%7#0"
      ]
    },
    "2073": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "struct1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%9#0",
        "aggregate%concat%2#0"
      ]
    },
    "2074": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "aggregate%concat%2#0",
        "tmp%9#0"
      ]
    },
    "2076": {
      "op": "concat",
      "defined_out": [
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0"
      ]
    },
    "2077": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "2"
      ]
    },
    "2078": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "2079": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "2082": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%len_u16%0#0",
        "4"
      ]
    },
    "2083": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "aggregate%len_u16%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%len_u16%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "2084": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%len_u16%0#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "2087": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0"
      ]
    },
    "2088": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%10#0",
        "struct1#0",
        "struct1#0 (copy)",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0",
        "struct1#0 (copy)"
      ]
    },
    "2090": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%4#0",
        "aggregate%head%10#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0",
        "aggregate%data_length%4#0"
      ]
    },
    "2091": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0",
        "aggregate%data_length%4#0",
        "4"
      ]
    },
    "2092": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%10#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0",
        "aggregate%current_tail_offset%4#0"
      ]
    },
    "2093": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "aggregate%head%10#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "2094": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%5#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "2097": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%11#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%11#0"
      ]
    },
    "2098": {
      "op": "dig 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%head%11#0",
        "struct1#0 (copy)"
      ]
    },
    "2100": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%4#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%concat%4#0"
      ]
    },
    "2101": {
      "op": "dig 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%concat%4#0",
        "struct1#0 (copy)"
      ]
    },
    "2103": {
      "op": "concat",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "2104": {
      "op": "dup",
      "defined_out": [
        "array#0",
        "array#0 (copy)",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2105": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array#0",
        "array#0 (copy)",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "2106": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2107": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_length%1#0",
        "1"
      ]
    },
    "2108": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%lt%0#0"
      ]
    },
    "2109": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "2110": {
      "op": "dig 1",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "struct2#0 (copy)"
      ]
    },
    "2112": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "struct2#0 (copy)",
        "1"
      ]
    },
    "2113": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "2116": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2117": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "2118": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2119": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%total_length%1#0"
      ]
    },
    "2120": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%1#0",
        "array#0"
      ]
    },
    "2122": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2123": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%1#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "2124": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "2126": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2127": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0"
      ]
    },
    "2129": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2130": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "2131": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "array#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2132": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0"
      ]
    },
    "2134": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0"
      ]
    },
    "2135": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0",
        "2"
      ]
    },
    "2136": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "2137": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2139": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "2141": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2142": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0"
      ]
    },
    "2144": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0"
      ]
    },
    "2145": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "0",
        "1"
      ]
    },
    "2146": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%2#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "2147": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2149": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "2151": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2152": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "2154": {
      "op": "dig 4",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2156": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2157": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_index%1#0"
      ]
    },
    "2159": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "2160": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "2161": {
      "op": "dig 5",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2163": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "2165": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "array#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2166": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2168": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "array#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2170": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2172": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2173": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%1#0",
        "array#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2175": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2177": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2179": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%0#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array_item%0#0"
      ]
    },
    "2180": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "2181": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2182": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%total_length%2#0"
      ]
    },
    "2183": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%2#0",
        "array#0"
      ]
    },
    "2185": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2186": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%total_length%2#0",
        "array#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "2187": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "2189": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "2190": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0"
      ]
    },
    "2192": {
      "op": "dup",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "array#0 (copy)"
      ]
    },
    "2193": {
      "op": "intc_1 // 0",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "2194": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "array#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2195": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0"
      ]
    },
    "2197": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1"
      ]
    },
    "2198": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1",
        "2"
      ]
    },
    "2199": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2200": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "2202": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2204": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2205": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0"
      ]
    },
    "2207": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1"
      ]
    },
    "2208": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "1",
        "1"
      ]
    },
    "2209": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%3#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2210": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2212": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "2214": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2215": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2217": {
      "op": "dig 4",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "2219": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "2220": {
      "op": "cover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2222": {
      "op": "intc_0 // 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "2223": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2224": {
      "op": "dig 5",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "2226": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2228": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2229": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "2231": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "array#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2233": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2235": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "2236": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%item_offset%2#0",
        "array#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "2238": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2240": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "2242": {
      "op": "substring3",
      "defined_out": [
        "array#0",
        "array_item%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "array_item%1#0"
      ]
    },
    "2243": {
      "op": "log",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0"
      ]
    },
    "2244": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "struct1#0",
        "struct2#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2247": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "array#0",
        "tmp%12#0"
      ]
    },
    "2249": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%12#0",
        "struct2#0"
      ]
    },
    "2251": {
      "op": "==",
      "defined_out": [
        "array#0",
        "struct1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "struct1#0",
        "array#0",
        "tmp%14#0"
      ]
    },
    "2252": {
      "op": "assert",
      "stack_out": [
        "struct1#0",
        "array#0"
      ]
    },
    "2253": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "struct1#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "struct1#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2256": {
      "op": "cover 2",
      "defined_out": [
        "struct1#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "struct1#0",
        "tmp%15#0"
      ]
    },
    "2258": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "2259": {
      "op": "assert",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2260": {
      "retsub": true,
      "op": "retsub"
    },
    "2261": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement",
      "params": {},
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement",
      "stack_in": [],
      "op": "b test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement_block@0"
    },
    "2264": {
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_struct_replacement_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2267": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte1",
      "op": "callsub get_byte1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2270": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte2",
      "op": "callsub get_byte2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2273": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "2275": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x"
      ]
    },
    "2276": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "0x",
        "tmp%1#0"
      ]
    },
    "2278": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "aggregate%head%0#0"
      ]
    },
    "2279": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%2#0"
      ]
    },
    "2281": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_array%0#0"
      ]
    },
    "2282": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%0#0",
        "encoded_array%0#0",
        "0x"
      ]
    },
    "2283": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_array%0#0",
        "0x",
        "tmp%0#0"
      ]
    },
    "2285": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%2#0"
      ]
    },
    "2286": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ]
    },
    "2288": {
      "op": "concat",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "one#0"
      ]
    },
    "2289": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "one#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%4#0"
      ]
    },
    "2292": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2295": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0"
      ]
    },
    "2297": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "4"
      ]
    },
    "2298": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2299": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2302": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "2303": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2305": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%4#0"
      ]
    },
    "2306": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0"
      ]
    },
    "2308": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2309": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%data_length%0#0"
      ]
    },
    "2310": {
      "op": "intc_3 // 4",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "2311": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2312": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2313": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%1#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2316": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%4#0"
      ]
    },
    "2318": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2320": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%5#0"
      ]
    },
    "2321": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%5#0",
        "tmp%4#0"
      ]
    },
    "2323": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "one#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%concat%0#0"
      ]
    },
    "2324": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "aggregate%concat%0#0",
        "tmp%5#0"
      ]
    },
    "2326": {
      "op": "concat",
      "defined_out": [
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0"
      ]
    },
    "2327": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "one#0",
        "tmp%7#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0"
      ]
    },
    "2330": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte2",
      "op": "callsub get_byte2",
      "defined_out": [
        "one#0",
        "tmp%7#0",
        "tmp%8#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2333": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte1",
      "op": "callsub get_byte1",
      "defined_out": [
        "one#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2336": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%8#0"
      ]
    },
    "2338": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%8#0",
        "0x"
      ]
    },
    "2339": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "0x",
        "tmp%8#0"
      ]
    },
    "2341": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "one#0",
        "tmp%7#0",
        "tmp%9#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%head%6#0"
      ]
    },
    "2342": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "aggregate%head%6#0",
        "tmp%9#0"
      ]
    },
    "2344": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0",
        "one#0",
        "tmp%7#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "encoded_array%1#0"
      ]
    },
    "2345": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "encoded_array%1#0",
        "0x"
      ]
    },
    "2346": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "encoded_array%1#0",
        "0x",
        "tmp%7#0"
      ]
    },
    "2348": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "encoded_array%1#0",
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "encoded_array%1#0",
        "aggregate%head%8#0"
      ]
    },
    "2349": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "aggregate%head%8#0",
        "encoded_array%1#0"
      ]
    },
    "2351": {
      "op": "concat",
      "defined_out": [
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0"
      ]
    },
    "2352": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%11#0"
      ]
    },
    "2355": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2358": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2360": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2363": {
      "op": "cover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2365": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr1",
      "op": "callsub get_u16_arr1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "2368": {
      "op": "cover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2370": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%15#0"
      ]
    },
    "2373": {
      "op": "cover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2375": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "0x"
      ]
    },
    "2376": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "0x",
        "tmp%11#0"
      ]
    },
    "2378": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0"
      ]
    },
    "2379": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "aggregate%head%10#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0",
        "28"
      ]
    },
    "2381": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%10#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2382": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%2#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2385": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0"
      ]
    },
    "2386": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "tmp%12#0 (copy)"
      ]
    },
    "2388": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%2#0",
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "aggregate%data_length%2#0"
      ]
    },
    "2389": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "aggregate%data_length%2#0",
        "28"
      ]
    },
    "2391": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "2392": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%11#0"
      ]
    },
    "2394": {
      "op": "uncover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%11#0",
        "tmp%13#0"
      ]
    },
    "2396": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%12#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%12#0"
      ]
    },
    "2397": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%12#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "2399": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%head%12#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%12#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "2400": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%12#0",
        "aggregate%offset_as_uint16%3#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%12#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2403": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%13#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%13#0"
      ]
    },
    "2404": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%12#0",
        "aggregate%head%13#0",
        "tmp%15#0"
      ]
    },
    "2406": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%14#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%12#0",
        "aggregate%head%14#0"
      ]
    },
    "2407": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "aggregate%head%14#0",
        "tmp%12#0"
      ]
    },
    "2409": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "one#0",
        "three#0",
        "tmp%14#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "aggregate%concat%2#0"
      ]
    },
    "2410": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "aggregate%concat%2#0",
        "tmp%14#0"
      ]
    },
    "2412": {
      "op": "concat",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0"
      ]
    },
    "2413": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%17#0"
      ]
    },
    "2416": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2419": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0"
      ]
    },
    "2421": {
      "op": "intc_3 // 4",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "4"
      ]
    },
    "2422": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "2423": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%4#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "2426": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%offset_as_uint16%4#0",
        "0x"
      ]
    },
    "2427": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "0x",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "2429": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%15#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%head%15#0"
      ]
    },
    "2430": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0"
      ]
    },
    "2432": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%15#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "2433": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%4#0",
        "aggregate%head%15#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0",
        "aggregate%data_length%4#0"
      ]
    },
    "2434": {
      "op": "intc_3 // 4",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0",
        "aggregate%data_length%4#0",
        "4"
      ]
    },
    "2435": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%15#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0",
        "aggregate%current_tail_offset%4#0"
      ]
    },
    "2436": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "aggregate%head%15#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "2437": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%15#0",
        "aggregate%offset_as_uint16%5#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%15#0",
        "tmp%17#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "2440": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%offset_as_uint16%5#0",
        "aggregate%head%15#0"
      ]
    },
    "2442": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%head%15#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "2444": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%16#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "tmp%17#0",
        "aggregate%head%16#0"
      ]
    },
    "2445": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%head%16#0",
        "tmp%17#0"
      ]
    },
    "2447": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%4#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%18#0",
        "aggregate%concat%4#0"
      ]
    },
    "2448": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "aggregate%concat%4#0",
        "tmp%18#0"
      ]
    },
    "2450": {
      "op": "concat",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0"
      ]
    },
    "2451": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "0x"
      ]
    },
    "2452": {
      "op": "dig 5",
      "defined_out": [
        "0x",
        "five#0",
        "four#0",
        "one#0",
        "one#0 (copy)",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "0x",
        "one#0 (copy)"
      ]
    },
    "2454": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%17#0"
      ]
    },
    "2455": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "aggregate%head%17#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%17#0",
        "26"
      ]
    },
    "2457": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "aggregate%head%17#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%17#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "2458": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%offset_as_uint16%6#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%17#0",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "2461": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%18#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%18#0"
      ]
    },
    "2462": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%head%18#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0",
        "two#0 (copy)"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%18#0",
        "two#0 (copy)"
      ]
    },
    "2464": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%6#0",
        "aggregate%head%18#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%18#0",
        "aggregate%data_length%6#0"
      ]
    },
    "2465": {
      "op": "pushint 26 // 26",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%18#0",
        "aggregate%data_length%6#0",
        "26"
      ]
    },
    "2467": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%18#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%18#0",
        "aggregate%current_tail_offset%6#0"
      ]
    },
    "2468": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%18#0"
      ]
    },
    "2470": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%18#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "three#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%18#0",
        "three#0 (copy)"
      ]
    },
    "2472": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%19#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%19#0"
      ]
    },
    "2473": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%19#0",
        "aggregate%current_tail_offset%6#0"
      ]
    },
    "2475": {
      "op": "dup",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%current_tail_offset%6#0 (copy)",
        "aggregate%head%19#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%19#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%current_tail_offset%6#0 (copy)"
      ]
    },
    "2476": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%19#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%19#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "2477": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%19#0",
        "aggregate%offset_as_uint16%7#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%19#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%offset_as_uint16%7#0"
      ]
    },
    "2480": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%offset_as_uint16%7#0",
        "aggregate%head%19#0"
      ]
    },
    "2482": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%19#0",
        "aggregate%offset_as_uint16%7#0"
      ]
    },
    "2484": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%20#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%20#0"
      ]
    },
    "2485": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%20#0",
        "aggregate%current_tail_offset%6#0"
      ]
    },
    "2487": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%20#0",
        "five#0",
        "four#0",
        "four#0 (copy)",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%20#0",
        "aggregate%current_tail_offset%6#0",
        "four#0 (copy)"
      ]
    },
    "2489": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%data_length%7#0",
        "aggregate%head%20#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%20#0",
        "aggregate%current_tail_offset%6#0",
        "aggregate%data_length%7#0"
      ]
    },
    "2490": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%20#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%20#0",
        "aggregate%current_tail_offset%7#0"
      ]
    },
    "2491": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#0",
        "aggregate%head%20#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%20#0",
        "aggregate%as_bytes%8#0"
      ]
    },
    "2492": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%20#0",
        "aggregate%offset_as_uint16%8#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%20#0",
        "aggregate%offset_as_uint16%8#0"
      ]
    },
    "2495": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%21#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%21#0"
      ]
    },
    "2496": {
      "op": "dig 4",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%head%21#0",
        "two#0 (copy)"
      ]
    },
    "2498": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%6#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%concat%6#0"
      ]
    },
    "2499": {
      "op": "dig 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%concat%6#0",
        "four#0 (copy)"
      ]
    },
    "2501": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%7#0",
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%concat%7#0"
      ]
    },
    "2502": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%concat%7#0",
        "five#0",
        "five#0 (copy)",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%concat%7#0",
        "five#0 (copy)"
      ]
    },
    "2504": {
      "op": "concat",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%20#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%20#0"
      ]
    },
    "2505": {
      "op": "cover 5",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0"
      ]
    },
    "2507": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%21#0"
      ]
    },
    "2510": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2513": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0"
      ]
    },
    "2515": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "4"
      ]
    },
    "2516": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%as_bytes%9#0"
      ]
    },
    "2517": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%9#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%offset_as_uint16%9#0"
      ]
    },
    "2520": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%offset_as_uint16%9#0",
        "0x"
      ]
    },
    "2521": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "0x",
        "aggregate%offset_as_uint16%9#0"
      ]
    },
    "2523": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%22#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%head%22#0"
      ]
    },
    "2524": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0"
      ]
    },
    "2526": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%22#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%21#0 (copy)",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "2527": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%9#0",
        "aggregate%head%22#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0",
        "aggregate%data_length%9#0"
      ]
    },
    "2528": {
      "op": "intc_3 // 4",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0",
        "aggregate%data_length%9#0",
        "4"
      ]
    },
    "2529": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%9#0",
        "aggregate%head%22#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0",
        "aggregate%current_tail_offset%9#0"
      ]
    },
    "2530": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%10#0",
        "aggregate%head%22#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0",
        "aggregate%as_bytes%10#0"
      ]
    },
    "2531": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%22#0",
        "aggregate%offset_as_uint16%10#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%22#0",
        "tmp%21#0",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "2534": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%offset_as_uint16%10#0",
        "aggregate%head%22#0"
      ]
    },
    "2536": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%head%22#0",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "2538": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%23#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%21#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "tmp%21#0",
        "aggregate%head%23#0"
      ]
    },
    "2539": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%head%23#0",
        "tmp%21#0"
      ]
    },
    "2541": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%9#0",
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%22#0",
        "aggregate%concat%9#0"
      ]
    },
    "2542": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "aggregate%concat%9#0",
        "tmp%22#0"
      ]
    },
    "2544": {
      "op": "concat",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0"
      ]
    },
    "2545": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "struct1#0",
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "0x"
      ]
    },
    "2546": {
      "op": "uncover 6",
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "0x",
        "one#0"
      ]
    },
    "2548": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%24#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%24#0"
      ]
    },
    "2549": {
      "op": "pushint 26 // 26",
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%24#0",
        "26"
      ]
    },
    "2551": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%11#0",
        "aggregate%head%24#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%24#0",
        "aggregate%as_bytes%11#0"
      ]
    },
    "2552": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%24#0",
        "aggregate%offset_as_uint16%11#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%24#0",
        "aggregate%offset_as_uint16%11#0"
      ]
    },
    "2555": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%25#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%25#0"
      ]
    },
    "2556": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%25#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%25#0",
        "tmp%23#0 (copy)"
      ]
    },
    "2558": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%11#0",
        "aggregate%head%25#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%25#0",
        "aggregate%data_length%11#0"
      ]
    },
    "2559": {
      "op": "pushint 26 // 26",
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%25#0",
        "aggregate%data_length%11#0",
        "26"
      ]
    },
    "2561": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%25#0",
        "five#0",
        "four#0",
        "struct1#0",
        "three#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%25#0",
        "aggregate%current_tail_offset%11#0"
      ]
    },
    "2562": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%25#0"
      ]
    },
    "2564": {
      "op": "uncover 5",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%25#0",
        "three#0"
      ]
    },
    "2566": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%26#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%26#0"
      ]
    },
    "2567": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%11#0"
      ]
    },
    "2569": {
      "op": "dup",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%current_tail_offset%11#0 (copy)",
        "aggregate%head%26#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%current_tail_offset%11#0 (copy)"
      ]
    },
    "2570": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%12#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%26#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%as_bytes%12#0"
      ]
    },
    "2571": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%26#0",
        "aggregate%offset_as_uint16%12#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%offset_as_uint16%12#0"
      ]
    },
    "2574": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%offset_as_uint16%12#0",
        "aggregate%head%26#0"
      ]
    },
    "2576": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%26#0",
        "aggregate%offset_as_uint16%12#0"
      ]
    },
    "2578": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%27#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%27#0"
      ]
    },
    "2579": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%27#0",
        "aggregate%current_tail_offset%11#0"
      ]
    },
    "2581": {
      "op": "dig 4",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%27#0",
        "aggregate%current_tail_offset%11#0",
        "four#0 (copy)"
      ]
    },
    "2583": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%data_length%12#0",
        "aggregate%head%27#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%27#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%data_length%12#0"
      ]
    },
    "2584": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%head%27#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%27#0",
        "aggregate%current_tail_offset%12#0"
      ]
    },
    "2585": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%13#0",
        "aggregate%head%27#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%27#0",
        "aggregate%as_bytes%13#0"
      ]
    },
    "2586": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%27#0",
        "aggregate%offset_as_uint16%13#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%27#0",
        "aggregate%offset_as_uint16%13#0"
      ]
    },
    "2589": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%28#0",
        "five#0",
        "four#0",
        "struct1#0",
        "tmp%23#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "tmp%23#0",
        "aggregate%head%28#0"
      ]
    },
    "2590": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "aggregate%head%28#0",
        "tmp%23#0"
      ]
    },
    "2592": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%11#0",
        "five#0",
        "four#0",
        "struct1#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "four#0",
        "five#0",
        "aggregate%concat%11#0"
      ]
    },
    "2593": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "two#0",
        "five#0",
        "aggregate%concat%11#0",
        "four#0"
      ]
    },
    "2595": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%12#0",
        "five#0",
        "struct1#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "five#0",
        "aggregate%concat%12#0"
      ]
    },
    "2596": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "aggregate%concat%12#0",
        "five#0"
      ]
    },
    "2598": {
      "op": "concat",
      "defined_out": [
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0"
      ]
    },
    "2599": {
      "op": "dup",
      "defined_out": [
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "struct2#0 (copy)"
      ]
    },
    "2600": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "struct2#0 (copy)",
        "10"
      ]
    },
    "2602": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2603": {
      "op": "dig 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)"
      ]
    },
    "2605": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "aggregate%item_offset%0#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)",
        "0"
      ]
    },
    "2606": {
      "op": "dig 2",
      "defined_out": [
        "0",
        "aggregate%item_offset%0#0",
        "aggregate%item_offset%0#0 (copy)",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)",
        "0",
        "aggregate%item_offset%0#0 (copy)"
      ]
    },
    "2608": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%0#0",
        "aggregate%item_offset%0#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_up_to_item%0#0"
      ]
    },
    "2609": {
      "op": "dig 3",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_up_to_item%0#0",
        "two#0 (copy)"
      ]
    },
    "2611": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "2612": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2614": {
      "op": "dig 2",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)"
      ]
    },
    "2616": {
      "op": "pushint 22 // 22",
      "defined_out": [
        "22",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)",
        "22"
      ]
    },
    "2618": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_data%0#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "2619": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2621": {
      "op": "dig 3",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)"
      ]
    },
    "2623": {
      "op": "len",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%updated_data%0#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2624": {
      "op": "cover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2626": {
      "op": "dig 4",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)"
      ]
    },
    "2628": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%0#0",
        "aggregate%updated_data%0#0",
        "struct1#0",
        "struct2#0",
        "struct2#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)"
      ]
    },
    "2630": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "struct2#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%0#0"
      ]
    },
    "2632": {
      "op": "substring3",
      "defined_out": [
        "aggregate%data_beyond_item%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_data%0#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "2633": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_beyond_item%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "2635": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "2637": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "two#0",
        "struct2#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "2638": {
      "op": "cover 4",
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "two#0",
        "struct2#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2640": {
      "op": "-",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0",
        "two#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "two#0",
        "struct2#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "2641": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "two#0"
      ]
    },
    "2643": {
      "op": "len",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0"
      ]
    },
    "2644": {
      "op": "dig 2",
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "struct2#0 (copy)"
      ]
    },
    "2646": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "struct2#0 (copy)",
        "22"
      ]
    },
    "2648": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%0#0"
      ]
    },
    "2649": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%new_value_length%0#0 (copy)",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%0#0",
        "aggregate%new_value_length%0#0 (copy)"
      ]
    },
    "2651": {
      "op": "+",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%1#0"
      ]
    },
    "2652": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%old_value_length%0#0 (copy)",
        "aggregate%tail_offset%1#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%1#0",
        "aggregate%old_value_length%0#0 (copy)"
      ]
    },
    "2654": {
      "op": "-",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%2#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%2#0"
      ]
    },
    "2655": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%14#0",
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%as_bytes%14#0"
      ]
    },
    "2656": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%1#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "2659": {
      "op": "uncover 4",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "2661": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%1#0",
        "22"
      ]
    },
    "2663": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%updated_data%1#0",
        "22",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "2665": {
      "op": "replace3",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%2#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "2666": {
      "op": "uncover 3",
      "stack_out": [
        "struct1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%updated_data%2#0",
        "struct2#0"
      ]
    },
    "2668": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%2#0",
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%updated_data%2#0",
        "struct2#0",
        "24"
      ]
    },
    "2670": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%3#0",
        "aggregate%updated_data%2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%3#0"
      ]
    },
    "2671": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%3#0",
        "aggregate%new_value_length%0#0"
      ]
    },
    "2673": {
      "op": "+",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%4#0",
        "aggregate%updated_data%2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%4#0"
      ]
    },
    "2674": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%4#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "2676": {
      "op": "-",
      "defined_out": [
        "aggregate%tail_offset%5#0",
        "aggregate%updated_data%2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%5#0"
      ]
    },
    "2677": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%15#0",
        "aggregate%updated_data%2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%2#0",
        "aggregate%as_bytes%15#0"
      ]
    },
    "2678": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%tail_offset_bytes%1#0",
        "aggregate%updated_data%2#0",
        "struct1#0"
      ],
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset_bytes%1#0"
      ]
    },
    "2681": {
      "op": "uncover 1",
      "stack_out": [
        "struct1#0",
        "aggregate%tail_offset_bytes%1#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "2683": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "struct1#0",
        "aggregate%tail_offset_bytes%1#0",
        "aggregate%updated_data%2#0",
        "24"
      ]
    },
    "2685": {
      "op": "uncover 2",
      "stack_out": [
        "struct1#0",
        "aggregate%updated_data%2#0",
        "24",
        "aggregate%tail_offset_bytes%1#0"
      ]
    },
    "2687": {
      "op": "replace3",
      "defined_out": [
        "struct1#0",
        "struct2#0"
      ],
      "stack_out": [
        "struct1#0",
        "struct2#0"
      ]
    },
    "2688": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "2689": {
      "error": "struct1 does not match struct2",
      "op": "assert // struct1 does not match struct2",
      "stack_out": []
    },
    "2690": {
      "retsub": true,
      "op": "retsub"
    },
    "2691": {
      "subroutine": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification",
      "params": {},
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2694": {
      "op": "b test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification_block@0"
    },
    "2697": {
      "block": "test_cases.arc4_dynamic_arrays.contract.DynamicArrayContract.test_nested_tuple_modification_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2700": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte1",
      "op": "callsub get_byte1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2703": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte2",
      "op": "callsub get_byte2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2706": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "2708": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x"
      ]
    },
    "2709": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "0x",
        "tmp%1#0"
      ]
    },
    "2711": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "aggregate%head%0#0"
      ]
    },
    "2712": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%2#0"
      ]
    },
    "2714": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_array%0#0"
      ]
    },
    "2715": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%0#0",
        "encoded_array%0#0",
        "0x"
      ]
    },
    "2716": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_array%0#0",
        "0x",
        "tmp%0#0"
      ]
    },
    "2718": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%2#0"
      ]
    },
    "2719": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ]
    },
    "2721": {
      "op": "concat",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "one#0"
      ]
    },
    "2722": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "one#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%4#0"
      ]
    },
    "2725": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2728": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0"
      ]
    },
    "2730": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "4"
      ]
    },
    "2731": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2732": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2735": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "2736": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2738": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%4#0"
      ]
    },
    "2739": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0"
      ]
    },
    "2741": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2742": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%data_length%0#0"
      ]
    },
    "2743": {
      "op": "intc_3 // 4",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "2744": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2745": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%4#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2746": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%1#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%4#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2749": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%4#0"
      ]
    },
    "2751": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2753": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "one#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%5#0"
      ]
    },
    "2754": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%head%5#0",
        "tmp%4#0"
      ]
    },
    "2756": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "one#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%5#0",
        "aggregate%concat%0#0"
      ]
    },
    "2757": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "aggregate%concat%0#0",
        "tmp%5#0"
      ]
    },
    "2759": {
      "op": "concat",
      "defined_out": [
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0"
      ]
    },
    "2760": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "one#0",
        "tmp%7#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0"
      ]
    },
    "2763": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte2",
      "op": "callsub get_byte2",
      "defined_out": [
        "one#0",
        "tmp%7#0",
        "tmp%8#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2766": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_byte1",
      "op": "callsub get_byte1",
      "defined_out": [
        "one#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2769": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%8#0"
      ]
    },
    "2771": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%8#0",
        "0x"
      ]
    },
    "2772": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "0x",
        "tmp%8#0"
      ]
    },
    "2774": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "one#0",
        "tmp%7#0",
        "tmp%9#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%head%6#0"
      ]
    },
    "2775": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "aggregate%head%6#0",
        "tmp%9#0"
      ]
    },
    "2777": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0",
        "one#0",
        "tmp%7#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "encoded_array%1#0"
      ]
    },
    "2778": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%7#0",
        "encoded_array%1#0",
        "0x"
      ]
    },
    "2779": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "encoded_array%1#0",
        "0x",
        "tmp%7#0"
      ]
    },
    "2781": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "encoded_array%1#0",
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "encoded_array%1#0",
        "aggregate%head%8#0"
      ]
    },
    "2782": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "aggregate%head%8#0",
        "encoded_array%1#0"
      ]
    },
    "2784": {
      "op": "concat",
      "defined_out": [
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0"
      ]
    },
    "2785": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%11#0"
      ]
    },
    "2788": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2791": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2793": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2796": {
      "op": "cover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2798": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr1",
      "op": "callsub get_u16_arr1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "2801": {
      "op": "cover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2803": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "tmp%15#0"
      ]
    },
    "2806": {
      "op": "cover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "2808": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "tmp%11#0",
        "0x"
      ]
    },
    "2809": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "0x",
        "tmp%11#0"
      ]
    },
    "2811": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0"
      ]
    },
    "2812": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "aggregate%head%10#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0",
        "28"
      ]
    },
    "2814": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%10#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2815": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%2#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2818": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0"
      ]
    },
    "2819": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "tmp%12#0 (copy)"
      ]
    },
    "2821": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%2#0",
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "aggregate%data_length%2#0"
      ]
    },
    "2822": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "aggregate%data_length%2#0",
        "28"
      ]
    },
    "2824": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%11#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%head%11#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "2825": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%13#0",
        "tmp%12#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%11#0"
      ]
    },
    "2827": {
      "op": "uncover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%11#0",
        "tmp%13#0"
      ]
    },
    "2829": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%12#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%12#0"
      ]
    },
    "2830": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%12#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "2832": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%head%12#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%12#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "2833": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%12#0",
        "aggregate%offset_as_uint16%3#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%12#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2836": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%13#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%12#0",
        "aggregate%head%13#0"
      ]
    },
    "2837": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%12#0",
        "aggregate%head%13#0",
        "tmp%15#0"
      ]
    },
    "2839": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%14#0",
        "one#0",
        "three#0",
        "tmp%12#0",
        "tmp%14#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "tmp%12#0",
        "aggregate%head%14#0"
      ]
    },
    "2840": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "aggregate%head%14#0",
        "tmp%12#0"
      ]
    },
    "2842": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "one#0",
        "three#0",
        "tmp%14#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%14#0",
        "aggregate%concat%2#0"
      ]
    },
    "2843": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "aggregate%concat%2#0",
        "tmp%14#0"
      ]
    },
    "2845": {
      "op": "concat",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0"
      ]
    },
    "2846": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%17#0"
      ]
    },
    "2849": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2852": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "tmp%17#0"
      ]
    },
    "2854": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint2",
      "op": "callsub get_uint2",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "2857": {
      "op": "cover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0"
      ]
    },
    "2859": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_u16_arr1",
      "op": "callsub get_u16_arr1",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "2862": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0",
        "0x"
      ]
    },
    "2863": {
      "op": "pushbytes 0x007b",
      "defined_out": [
        "0x",
        "0x007b",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0",
        "0x",
        "0x007b"
      ]
    },
    "2867": {
      "op": "concat",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "2868": {
      "op": "dig 1",
      "defined_out": [
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "tmp%21#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%20#0 (copy)"
      ]
    },
    "2870": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "tmp%21#0"
      ]
    },
    "2872": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%20#0",
        "concat%0#0"
      ]
    },
    "2873": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "tmp%20#0"
      ]
    },
    "2875": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "tmp%20#0",
        "0"
      ]
    },
    "2876": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2877": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2878": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2879": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2880": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2883": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2885": {
      "op": "intc_1 // 0",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2886": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2888": {
      "op": "replace3",
      "defined_out": [
        "four1#0",
        "one#0",
        "replace%0#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "replace%0#0"
      ]
    },
    "2889": {
      "op": "cover 1",
      "defined_out": [
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%17#0"
      ]
    },
    "2891": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_uint1",
      "op": "callsub get_uint1",
      "defined_out": [
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%17#0",
        "tmp%22#0"
      ]
    },
    "2894": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%17#0",
        "tmp%22#0",
        "0x"
      ]
    },
    "2895": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "0x",
        "tmp%17#0"
      ]
    },
    "2897": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%16#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%16#0"
      ]
    },
    "2898": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%16#0",
        "28"
      ]
    },
    "2900": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%16#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%16#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "2901": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%16#0",
        "aggregate%offset_as_uint16%4#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%16#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "2904": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%17#0"
      ]
    },
    "2905": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%17#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%18#0 (copy)",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%17#0",
        "tmp%18#0 (copy)"
      ]
    },
    "2907": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%4#0",
        "aggregate%head%17#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%17#0",
        "aggregate%data_length%4#0"
      ]
    },
    "2908": {
      "op": "pushint 28 // 28",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%17#0",
        "aggregate%data_length%4#0",
        "28"
      ]
    },
    "2910": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%17#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%17#0",
        "aggregate%current_tail_offset%4#0"
      ]
    },
    "2911": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%19#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%17#0"
      ]
    },
    "2913": {
      "op": "uncover 5",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%17#0",
        "tmp%19#0"
      ]
    },
    "2915": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%18#0"
      ]
    },
    "2916": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%18#0",
        "aggregate%current_tail_offset%4#0"
      ]
    },
    "2918": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "aggregate%head%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%18#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "2919": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%18#0",
        "aggregate%offset_as_uint16%5#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%18#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "2922": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%19#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "tmp%22#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "tmp%22#0",
        "aggregate%head%19#0"
      ]
    },
    "2923": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "aggregate%head%19#0",
        "tmp%22#0"
      ]
    },
    "2925": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%20#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "tmp%18#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "tmp%18#0",
        "as_Encoded(len+uint16[])%0#0",
        "aggregate%head%20#0"
      ]
    },
    "2926": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "as_Encoded(len+uint16[])%0#0",
        "aggregate%head%20#0",
        "tmp%18#0"
      ]
    },
    "2928": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%4#0",
        "as_Encoded(len+uint16[])%0#0",
        "four1#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "as_Encoded(len+uint16[])%0#0",
        "aggregate%concat%4#0"
      ]
    },
    "2929": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "aggregate%concat%4#0",
        "as_Encoded(len+uint16[])%0#0"
      ]
    },
    "2931": {
      "op": "concat",
      "defined_out": [
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0"
      ]
    },
    "2932": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string1",
      "op": "callsub get_string1",
      "defined_out": [
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%24#0"
      ]
    },
    "2935": {
      "callsub": "test_cases.arc4_dynamic_arrays.contract.get_string2",
      "op": "callsub get_string2",
      "defined_out": [
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "2938": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0"
      ]
    },
    "2940": {
      "op": "intc_3 // 4",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "4"
      ]
    },
    "2941": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "2942": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%6#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "2945": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%offset_as_uint16%6#0",
        "0x"
      ]
    },
    "2946": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "0x",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "2948": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%21#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%head%21#0"
      ]
    },
    "2949": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0"
      ]
    },
    "2951": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%21#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%24#0 (copy)",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0",
        "tmp%24#0 (copy)"
      ]
    },
    "2952": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%6#0",
        "aggregate%head%21#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0",
        "aggregate%data_length%6#0"
      ]
    },
    "2953": {
      "op": "intc_3 // 4",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0",
        "aggregate%data_length%6#0",
        "4"
      ]
    },
    "2954": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%6#0",
        "aggregate%head%21#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0",
        "aggregate%current_tail_offset%6#0"
      ]
    },
    "2955": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "aggregate%head%21#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "2956": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%21#0",
        "aggregate%offset_as_uint16%7#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%21#0",
        "tmp%24#0",
        "aggregate%offset_as_uint16%7#0"
      ]
    },
    "2959": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%offset_as_uint16%7#0",
        "aggregate%head%21#0"
      ]
    },
    "2961": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%head%21#0",
        "aggregate%offset_as_uint16%7#0"
      ]
    },
    "2963": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%22#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%24#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "tmp%24#0",
        "aggregate%head%22#0"
      ]
    },
    "2964": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%head%22#0",
        "tmp%24#0"
      ]
    },
    "2966": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%6#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%25#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "tmp%25#0",
        "aggregate%concat%6#0"
      ]
    },
    "2967": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "aggregate%concat%6#0",
        "tmp%25#0"
      ]
    },
    "2969": {
      "op": "concat",
      "defined_out": [
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0"
      ]
    },
    "2970": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "0x"
      ]
    },
    "2971": {
      "op": "dig 6",
      "defined_out": [
        "0x",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "one#0 (copy)",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "0x",
        "one#0 (copy)"
      ]
    },
    "2973": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%23#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%23#0"
      ]
    },
    "2974": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "aggregate%head%23#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%23#0",
        "26"
      ]
    },
    "2976": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#0",
        "aggregate%head%23#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%23#0",
        "aggregate%as_bytes%8#0"
      ]
    },
    "2977": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%23#0",
        "aggregate%offset_as_uint16%8#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%23#0",
        "aggregate%offset_as_uint16%8#0"
      ]
    },
    "2980": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%24#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%24#0"
      ]
    },
    "2981": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%head%24#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0",
        "two#0 (copy)"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%24#0",
        "two#0 (copy)"
      ]
    },
    "2983": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%8#0",
        "aggregate%head%24#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%24#0",
        "aggregate%data_length%8#0"
      ]
    },
    "2984": {
      "op": "pushint 26 // 26",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%24#0",
        "aggregate%data_length%8#0",
        "26"
      ]
    },
    "2986": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%24#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%24#0",
        "aggregate%current_tail_offset%8#0"
      ]
    },
    "2987": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%24#0"
      ]
    },
    "2989": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%24#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "three#0 (copy)",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%24#0",
        "three#0 (copy)"
      ]
    },
    "2991": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%25#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%25#0"
      ]
    },
    "2992": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%25#0",
        "aggregate%current_tail_offset%8#0"
      ]
    },
    "2994": {
      "op": "dup",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%8#0 (copy)",
        "aggregate%head%25#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%25#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%current_tail_offset%8#0 (copy)"
      ]
    },
    "2995": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%25#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%25#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%as_bytes%9#0"
      ]
    },
    "2996": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%25#0",
        "aggregate%offset_as_uint16%9#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%25#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%offset_as_uint16%9#0"
      ]
    },
    "2999": {
      "op": "uncover 2",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%offset_as_uint16%9#0",
        "aggregate%head%25#0"
      ]
    },
    "3001": {
      "op": "uncover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%25#0",
        "aggregate%offset_as_uint16%9#0"
      ]
    },
    "3003": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%26#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%26#0"
      ]
    },
    "3004": {
      "op": "cover 1",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%8#0"
      ]
    },
    "3006": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%head%26#0",
        "five#0",
        "four1#0",
        "four1#0 (copy)",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%8#0",
        "four1#0 (copy)"
      ]
    },
    "3008": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%8#0",
        "aggregate%data_length%9#0",
        "aggregate%head%26#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%8#0",
        "aggregate%data_length%9#0"
      ]
    },
    "3009": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%9#0",
        "aggregate%head%26#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%26#0",
        "aggregate%current_tail_offset%9#0"
      ]
    },
    "3010": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%10#0",
        "aggregate%head%26#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%26#0",
        "aggregate%as_bytes%10#0"
      ]
    },
    "3011": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%26#0",
        "aggregate%offset_as_uint16%10#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%26#0",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "3014": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%27#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%27#0"
      ]
    },
    "3015": {
      "op": "dig 5",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%head%27#0",
        "two#0 (copy)"
      ]
    },
    "3017": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%8#0",
        "five#0",
        "four1#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four1#0",
        "four2#0",
        "five#0",
        "aggregate%concat%8#0"
      ]
    },
    "3018": {
      "op": "uncover 3",
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%concat%8#0",
        "four1#0"
      ]
    },
    "3020": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%9#0",
        "five#0",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%concat%9#0"
      ]
    },
    "3021": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%concat%9#0",
        "five#0",
        "five#0 (copy)",
        "four2#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%concat%9#0",
        "five#0 (copy)"
      ]
    },
    "3023": {
      "op": "concat",
      "defined_out": [
        "five#0",
        "four2#0",
        "one#0",
        "three#0",
        "tmp%27#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "tmp%27#0"
      ]
    },
    "3024": {
      "op": "cover 5",
      "defined_out": [
        "five#0",
        "four2#0",
        "one#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "one#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0"
      ]
    },
    "3026": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tup1#0",
        "one#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "0x"
      ]
    },
    "3027": {
      "op": "uncover 5",
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "0x",
        "one#0"
      ]
    },
    "3029": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%28#0",
        "five#0",
        "four2#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%28#0"
      ]
    },
    "3030": {
      "op": "pushint 26 // 26",
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%28#0",
        "26"
      ]
    },
    "3032": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%11#0",
        "aggregate%head%28#0",
        "five#0",
        "four2#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%28#0",
        "aggregate%as_bytes%11#0"
      ]
    },
    "3033": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%28#0",
        "aggregate%offset_as_uint16%11#0",
        "five#0",
        "four2#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%28#0",
        "aggregate%offset_as_uint16%11#0"
      ]
    },
    "3036": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%29#0",
        "five#0",
        "four2#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%29#0"
      ]
    },
    "3037": {
      "op": "dig 4",
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%29#0",
        "two#0 (copy)"
      ]
    },
    "3039": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%11#0",
        "aggregate%head%29#0",
        "five#0",
        "four2#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%29#0",
        "aggregate%data_length%11#0"
      ]
    },
    "3040": {
      "op": "pushint 26 // 26",
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%29#0",
        "aggregate%data_length%11#0",
        "26"
      ]
    },
    "3042": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%29#0",
        "five#0",
        "four2#0",
        "three#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%head%29#0",
        "aggregate%current_tail_offset%11#0"
      ]
    },
    "3043": {
      "op": "uncover 1",
      "stack_out": [
        "tup1#0",
        "two#0",
        "three#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%29#0"
      ]
    },
    "3045": {
      "op": "uncover 4",
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%29#0",
        "three#0"
      ]
    },
    "3047": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%30#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%30#0"
      ]
    },
    "3048": {
      "op": "cover 1",
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%30#0",
        "aggregate%current_tail_offset%11#0"
      ]
    },
    "3050": {
      "op": "dup",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%current_tail_offset%11#0 (copy)",
        "aggregate%head%30#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%30#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%current_tail_offset%11#0 (copy)"
      ]
    },
    "3051": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%12#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%30#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%30#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%as_bytes%12#0"
      ]
    },
    "3052": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%30#0",
        "aggregate%offset_as_uint16%12#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%30#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%offset_as_uint16%12#0"
      ]
    },
    "3055": {
      "op": "uncover 2",
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%offset_as_uint16%12#0",
        "aggregate%head%30#0"
      ]
    },
    "3057": {
      "op": "uncover 1",
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%30#0",
        "aggregate%offset_as_uint16%12#0"
      ]
    },
    "3059": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%31#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%31#0"
      ]
    },
    "3060": {
      "op": "cover 1",
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%31#0",
        "aggregate%current_tail_offset%11#0"
      ]
    },
    "3062": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%head%31#0",
        "five#0",
        "four2#0",
        "four2#0 (copy)",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%31#0",
        "aggregate%current_tail_offset%11#0",
        "four2#0 (copy)"
      ]
    },
    "3064": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%11#0",
        "aggregate%data_length%12#0",
        "aggregate%head%31#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%31#0",
        "aggregate%current_tail_offset%11#0",
        "aggregate%data_length%12#0"
      ]
    },
    "3065": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%12#0",
        "aggregate%head%31#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%31#0",
        "aggregate%current_tail_offset%12#0"
      ]
    },
    "3066": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%13#0",
        "aggregate%head%31#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%31#0",
        "aggregate%as_bytes%13#0"
      ]
    },
    "3067": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%31#0",
        "aggregate%offset_as_uint16%13#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%31#0",
        "aggregate%offset_as_uint16%13#0"
      ]
    },
    "3070": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%32#0",
        "five#0",
        "four2#0",
        "tup1#0",
        "two#0"
      ],
      "stack_out": [
        "tup1#0",
        "two#0",
        "four2#0",
        "five#0",
        "aggregate%head%32#0"
      ]
    },
    "3071": {
      "op": "uncover 3",
      "stack_out": [
        "tup1#0",
        "four2#0",
        "five#0",
        "aggregate%head%32#0",
        "two#0"
      ]
    },
    "3073": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%11#0",
        "five#0",
        "four2#0",
        "tup1#0"
      ],
      "stack_out": [
        "tup1#0",
        "four2#0",
        "five#0",
        "aggregate%concat%11#0"
      ]
    },
    "3074": {
      "op": "uncover 2",
      "stack_out": [
        "tup1#0",
        "five#0",
        "aggregate%concat%11#0",
        "four2#0"
      ]
    },
    "3076": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%12#0",
        "five#0",
        "tup1#0"
      ],
      "stack_out": [
        "tup1#0",
        "five#0",
        "aggregate%concat%12#0"
      ]
    },
    "3077": {
      "op": "uncover 1",
      "stack_out": [
        "tup1#0",
        "aggregate%concat%12#0",
        "five#0"
      ]
    },
    "3079": {
      "op": "concat",
      "defined_out": [
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0"
      ]
    },
    "3080": {
      "op": "dup",
      "defined_out": [
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)"
      ]
    },
    "3081": {
      "op": "pushint 22 // 22",
      "defined_out": [
        "22",
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)",
        "22"
      ]
    },
    "3083": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3084": {
      "op": "cover 1",
      "stack_out": [
        "tup1#0",
        "aggregate%extract_uint16%0#0",
        "tup2#0"
      ]
    },
    "3086": {
      "op": "dup",
      "stack_out": [
        "tup1#0",
        "aggregate%extract_uint16%0#0",
        "tup2#0",
        "tup2#0 (copy)"
      ]
    },
    "3087": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "aggregate%extract_uint16%0#0",
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)"
      ],
      "stack_out": [
        "tup1#0",
        "aggregate%extract_uint16%0#0",
        "tup2#0",
        "tup2#0 (copy)",
        "24"
      ]
    },
    "3089": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup1#0",
        "aggregate%extract_uint16%0#0",
        "tup2#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3090": {
      "op": "dig 1",
      "stack_out": [
        "tup1#0",
        "aggregate%extract_uint16%0#0",
        "tup2#0",
        "aggregate%extract_uint16%1#0",
        "tup2#0 (copy)"
      ]
    },
    "3092": {
      "op": "uncover 3",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%1#0",
        "tup2#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3094": {
      "op": "uncover 2",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3096": {
      "op": "substring3",
      "defined_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0"
      ]
    },
    "3097": {
      "op": "dup",
      "defined_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)"
      ]
    },
    "3098": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)",
        "18"
      ]
    },
    "3100": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3101": {
      "op": "cover 1",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%2#0",
        "tuple_item%0#0"
      ]
    },
    "3103": {
      "op": "dup",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%2#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)"
      ]
    },
    "3104": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%2#0",
        "tuple_item%0#0",
        "aggregate%len%0#0"
      ]
    },
    "3105": {
      "op": "cover 1",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "tuple_item%0#0"
      ]
    },
    "3107": {
      "op": "uncover 2",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "aggregate%len%0#0",
        "tuple_item%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3109": {
      "op": "uncover 2",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "3111": {
      "op": "substring3",
      "defined_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%1#0"
      ]
    },
    "3112": {
      "op": "intc_0 // 2",
      "defined_out": [
        "2",
        "tup1#0",
        "tup2#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tuple_item%1#0",
        "2"
      ]
    },
    "3113": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "3116": {
      "op": "cover 1",
      "stack_out": [
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "tmp%29#0"
      ]
    },
    "3118": {
      "op": "cover 3",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0"
      ]
    },
    "3120": {
      "op": "dig 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "tup2#0 (copy)"
      ]
    },
    "3122": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "tup2#0 (copy)",
        "22"
      ]
    },
    "3124": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3125": {
      "op": "cover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%30#0"
      ]
    },
    "3127": {
      "op": "dig 2",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%30#0",
        "tup2#0 (copy)"
      ]
    },
    "3129": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%30#0",
        "tup2#0 (copy)",
        "24"
      ]
    },
    "3131": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%30#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3132": {
      "op": "dig 3",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%30#0",
        "aggregate%extract_uint16%4#0",
        "tup2#0 (copy)"
      ]
    },
    "3134": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%extract_uint16%4#0",
        "tup2#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3136": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "tup2#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3138": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%substring3%2#0"
      ]
    },
    "3139": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "3140": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "18"
      ]
    },
    "3142": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%substring3%2#0",
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%substring3%2#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3143": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%item_offset%0#0",
        "aggregate%substring3%2#0"
      ]
    },
    "3145": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%item_offset%0#0",
        "aggregate%substring3%2#0",
        "0"
      ]
    },
    "3146": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%substring3%2#0",
        "0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3148": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%0#0",
        "tmp%29#0",
        "tmp%30#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tmp%30#0",
        "aggregate%data_up_to_item%0#0"
      ]
    },
    "3149": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%data_up_to_item%0#0",
        "tmp%30#0"
      ]
    },
    "3151": {
      "op": "concat",
      "defined_out": [
        "aggregate%updated_data%0#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "3152": {
      "op": "dig 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "tup2#0 (copy)"
      ]
    },
    "3154": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "tup2#0 (copy)",
        "22"
      ]
    },
    "3156": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%0#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3157": {
      "op": "dig 2",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)"
      ]
    },
    "3159": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)",
        "0"
      ]
    },
    "3160": {
      "op": "dig 2",
      "defined_out": [
        "0",
        "aggregate%item_offset%1#0",
        "aggregate%item_offset%1#0 (copy)",
        "aggregate%updated_data%0#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)",
        "0",
        "aggregate%item_offset%1#0 (copy)"
      ]
    },
    "3162": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%0#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%data_up_to_item%1#0"
      ]
    },
    "3163": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%data_up_to_item%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%0#0 (copy)",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%data_up_to_item%1#0",
        "aggregate%updated_data%0#0 (copy)"
      ]
    },
    "3165": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "3166": {
      "op": "cover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3168": {
      "op": "dig 3",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)"
      ]
    },
    "3170": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)",
        "24"
      ]
    },
    "3172": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3173": {
      "op": "cover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3175": {
      "op": "dig 4",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)"
      ]
    },
    "3177": {
      "op": "len",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3178": {
      "op": "cover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3180": {
      "op": "dig 5",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)"
      ]
    },
    "3182": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "tup2#0 (copy)"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)"
      ]
    },
    "3184": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "tup2#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%0#0"
      ]
    },
    "3186": {
      "op": "substring3",
      "defined_out": [
        "aggregate%data_beyond_item%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "3187": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%data_beyond_item%0#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "3189": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%1#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "3191": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "3192": {
      "op": "cover 4",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3194": {
      "op": "-",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "tup2#0",
        "aggregate%updated_data%0#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "3195": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "tup2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "3197": {
      "op": "len",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "tup2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0"
      ]
    },
    "3198": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "tup2#0"
      ]
    },
    "3200": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "tup2#0",
        "24"
      ]
    },
    "3202": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%0#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%0#0"
      ]
    },
    "3203": {
      "op": "+",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0"
      ]
    },
    "3204": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%1#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "3206": {
      "op": "-",
      "defined_out": [
        "aggregate%tail_offset%2#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset%2#0"
      ]
    },
    "3207": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%14#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%as_bytes%14#0"
      ]
    },
    "3208": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%2#0",
        "tmp%29#0",
        "tup1#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "3211": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "3213": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%2#0",
        "24"
      ]
    },
    "3215": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "aggregate%updated_data%2#0",
        "24",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "3217": {
      "op": "replace3",
      "defined_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tup1#0",
        "tup2#0"
      ]
    },
    "3218": {
      "op": "==",
      "defined_out": [
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "3219": {
      "error": "tup1 does not match tup2",
      "op": "assert // tup1 does not match tup2",
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "3220": {
      "retsub": true,
      "op": "retsub"
    }
  }
}