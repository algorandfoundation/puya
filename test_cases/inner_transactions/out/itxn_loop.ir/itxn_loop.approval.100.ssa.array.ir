main test_cases.inner_transactions.itxn_loop.MyContract.approval_program:
    block@0: // L19
        let app_params%%param_ApplicationArgs_idx_0#5: bytes = undefined
        let app_params%%param_ApplicationArgs_idx_1#5: bytes = undefined
        let app_params%%param_ApplicationArgs_idx_2#5: bytes = undefined
        let app_params%%param_Note_idx_0#0: bytes[0] = 0x
        let app_params%%ApplicationArgs_length#0: uint64 = 0u
        let value_internal%0#0: uint64 = 0u
        goto block@1
    block@1: // for_header_L27
        let i#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@10)
        let app_params%%ApplicationArgs_length#5: uint64 = φ(app_params%%ApplicationArgs_length#0 <- block@0, app_params%%ApplicationArgs_length#4 <- block@10)
        let app_params%%param_ApplicationArgs_idx_0#4: bytes = φ(app_params%%param_ApplicationArgs_idx_0#5 <- block@0, app_params%%param_ApplicationArgs_idx_0#3 <- block@10)
        let app_params%%param_ApplicationArgs_idx_1#3: bytes = φ(app_params%%param_ApplicationArgs_idx_1#5 <- block@0, app_params%%param_ApplicationArgs_idx_1#2 <- block@10)
        let app_params%%param_ApplicationArgs_idx_2#2: bytes = φ(app_params%%param_ApplicationArgs_idx_2#5 <- block@0, app_params%%param_ApplicationArgs_idx_2#1 <- block@10)
        let app_params%%param_Note_idx_0#6: bytes = φ(app_params%%param_Note_idx_0#0 <- block@0, app_params%%param_Note_idx_0#5 <- block@10)
        let continue_looping%0#0: bool = (< i#1 4u)
        goto continue_looping%0#0 ? block@2 : block@13
    block@2: // for_body_L28
        let i_note#0: bytes = (extract3 0x4142434445 0u i#1)
        goto_nth [block@6, block@3, block@4, block@5][i#1] else goto block@6
    block@3: // switch_case_0_L31
        let app_params%%param_ApplicationArgs_idx_0#0: bytes[1] = 0x31
        let app_params%%ApplicationArgs_length#1: uint64 = 1u
        goto block@6
    block@4: // switch_case_1_L33
        let app_params%%param_ApplicationArgs_idx_0#1: bytes[1] = 0x32
        let app_params%%param_ApplicationArgs_idx_1#0: bytes[1] = 0x31
        let app_params%%ApplicationArgs_length#2: uint64 = 2u
        goto block@6
    block@5: // switch_case_2_L35
        let app_params%%param_ApplicationArgs_idx_0#2: bytes[1] = 0x33
        let app_params%%param_ApplicationArgs_idx_1#1: bytes[1] = 0x32
        let app_params%%param_ApplicationArgs_idx_2#0: bytes[1] = 0x31
        let app_params%%ApplicationArgs_length#3: uint64 = 3u
        goto block@6
    block@6: // switch_case_next_L29
        let app_params%%ApplicationArgs_length#4: uint64 = φ(app_params%%ApplicationArgs_length#5 <- block@2, app_params%%ApplicationArgs_length#1 <- block@3, app_params%%ApplicationArgs_length#2 <- block@4, app_params%%ApplicationArgs_length#3 <- block@5)
        let app_params%%param_ApplicationArgs_idx_0#3: bytes = φ(app_params%%param_ApplicationArgs_idx_0#4 <- block@2, app_params%%param_ApplicationArgs_idx_0#0 <- block@3, app_params%%param_ApplicationArgs_idx_0#1 <- block@4, app_params%%param_ApplicationArgs_idx_0#2 <- block@5)
        let app_params%%param_ApplicationArgs_idx_1#2: bytes = φ(app_params%%param_ApplicationArgs_idx_1#3 <- block@2, app_params%%param_ApplicationArgs_idx_1#3 <- block@3, app_params%%param_ApplicationArgs_idx_1#0 <- block@4, app_params%%param_ApplicationArgs_idx_1#1 <- block@5)
        let app_params%%param_ApplicationArgs_idx_2#1: bytes = φ(app_params%%param_ApplicationArgs_idx_2#2 <- block@2, app_params%%param_ApplicationArgs_idx_2#2 <- block@3, app_params%%param_ApplicationArgs_idx_2#2 <- block@4, app_params%%param_ApplicationArgs_idx_2#0 <- block@5)
        let app_params%%param_Note_idx_0#5: bytes = φ(app_params%%param_Note_idx_0#6 <- block@2, i_note#0 <- block@3, i_note#0 <- block@4, i_note#0 <- block@5)
        itxn_begin
        goto app_params%%ApplicationArgs_length#4 ? block@7 : block@10
    block@7: // set_ApplicationArgs_0_to_0_L39
        ((itxn_field ApplicationArgs) app_params%%param_ApplicationArgs_idx_0#3)
        let is_ApplicationArgs_count_gte_2%0#0: bool = (>= app_params%%ApplicationArgs_length#4 2u)
        goto is_ApplicationArgs_count_gte_2%0#0 ? block@8 : block@10
    block@8: // set_ApplicationArgs_1_to_1_L39
        ((itxn_field ApplicationArgs) app_params%%param_ApplicationArgs_idx_1#2)
        let is_ApplicationArgs_count_gte_3%0#0: bool = (>= app_params%%ApplicationArgs_length#4 3u)
        goto is_ApplicationArgs_count_gte_3%0#0 ? block@9 : block@10
    block@9: // set_ApplicationArgs_2_to_2_L39
        ((itxn_field ApplicationArgs) app_params%%param_ApplicationArgs_idx_2#1)
        goto block@10
    block@10: // next_field_L39
        ((itxn_field Note) app_params%%param_Note_idx_0#5)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x0a8101)
        ((itxn_field ApprovalProgramPages) 0x0a8101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app_txn.Note#0: bytes = (itxn Note)
        let app_txn.NumAppArgs#0: uint64 = (itxn NumAppArgs)
        (log app_txn.Note#0)
        let tmp%1#0: bytes = (itob app_txn.NumAppArgs#0)
        (log tmp%1#0)
        let value_internal%0#2: uint64 = (+ i#1 1u)
        goto block@1
    block@13: // after_for_L27
        return 1u