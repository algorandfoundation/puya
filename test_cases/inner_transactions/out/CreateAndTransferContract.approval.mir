// Op                                                                          // Op Description                                                                             Stack (out)                                                                                                   Source code                                                                                          Source line

#pragma version 10

// test_cases.inner_transactions.asset_transfer.CreateAndTransferContract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                               //                                                                                            {__puya_arc4_router__}                                                                                                                                                                                             /algopy/arc4.py:1
                                                                               // virtual: store tmp%0#0 to l-stack (no copy)                                                tmp%0#0                                                                                                                                                                                                            /algopy/arc4.py:1
                                                                               // virtual: load tmp%0#0 from l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                            /algopy/arc4.py:1
    return                                                                     //                                                                                                                                                                                                                                                                                                               /algopy/arc4.py:1


// test_cases.inner_transactions.asset_transfer.CreateAndTransferContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1                                                                  //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10

__puya_arc4_router___block@0:
    txn NumAppArgs                                                             //                                                                                            {txn}                                                                                                         class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: store tmp%0#0 to l-stack (no copy)                                                tmp%0#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: load tmp%0#0 from l-stack (no copy)                                               tmp%0#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    bz __puya_arc4_router___bare_routing@5                                     //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    // Implicit fall through to __puya_arc4_router___abi_routing@1             //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10

__puya_arc4_router___abi_routing@1:
    txna ApplicationArgs 0                                                     //                                                                                            {txna}                                                                                                        class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: store tmp%2#0 to l-stack (no copy)                                                tmp%2#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    method "create_and_transfer()void"                                         //                                                                                            tmp%2#0,method<"create_and_transfer()void">                                                                   class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    uncover 1                                                                  // load tmp%2#0 from l-stack (no copy)                                                        method<"create_and_transfer()void">,tmp%2#0                                                                   class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    match __puya_arc4_router___create_and_transfer_route@2                     //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    int 0                                                                      //                                                                                            0                                                                                                             class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    retsub                                                                     //                                                                                            0                                                                                                             class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10

__puya_arc4_router___create_and_transfer_route@2:
    txn OnCompletion                                                           //                                                                                            {txn}                                                                                                         arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
                                                                               // virtual: store tmp%3#0 to l-stack (no copy)                                                tmp%3#0                                                                                                       arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
                                                                               // virtual: load tmp%3#0 from l-stack (no copy)                                               tmp%3#0                                                                                                       arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    !                                                                          //                                                                                            {!}                                                                                                           arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
                                                                               // virtual: store tmp%4#0 to l-stack (no copy)                                                tmp%4#0                                                                                                       arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
                                                                               // virtual: load tmp%4#0 from l-stack (no copy)                                               tmp%4#0                                                                                                       arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    assert // OnCompletion is NoOp                                             //                                                                                                                                                                                                          arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    txn ApplicationID                                                          //                                                                                            {txn}                                                                                                         arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
                                                                               // virtual: store tmp%5#0 to l-stack (no copy)                                                tmp%5#0                                                                                                       arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
                                                                               // virtual: load tmp%5#0 from l-stack (no copy)                                               tmp%5#0                                                                                                       arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    assert // is not creating                                                  //                                                                                                                                                                                                          arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    callsub create_and_transfer                                                //                                                                                                                                                                                                          arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    int 1                                                                      //                                                                                            1                                                                                                             arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11
    retsub                                                                     //                                                                                            1                                                                                                             arc4.abimethod()                                                                                     inner_transactions/asset_transfer.py:11

__puya_arc4_router___bare_routing@5:
    txn OnCompletion                                                           //                                                                                            {txn}                                                                                                         class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: store tmp%7#0 to l-stack (no copy)                                                tmp%7#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: load tmp%7#0 from l-stack (no copy)                                               tmp%7#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    bnz __puya_arc4_router___after_if_else@9                                   //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@6 //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10

__puya_arc4_router_____algopy_default_create@6:
    txn ApplicationID                                                          //                                                                                            {txn}                                                                                                         class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: store tmp%8#0 to l-stack (no copy)                                                tmp%8#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: load tmp%8#0 from l-stack (no copy)                                               tmp%8#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    !                                                                          //                                                                                            {!}                                                                                                           class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: store tmp%9#0 to l-stack (no copy)                                                tmp%9#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
                                                                               // virtual: load tmp%9#0 from l-stack (no copy)                                               tmp%9#0                                                                                                       class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    assert // is creating                                                      //                                                                                                                                                                                                          class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    int 1                                                                      //                                                                                            1                                                                                                             class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    retsub                                                                     //                                                                                            1                                                                                                             class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10

__puya_arc4_router___after_if_else@9:
    int 0                                                                      //                                                                                            0                                                                                                             class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10
    retsub                                                                     //                                                                                            0                                                                                                             class CreateAndTransferContract(ARC4Contract):                                                       inner_transactions/asset_transfer.py:10


// test_cases.inner_transactions.asset_transfer.CreateAndTransferContract.create_and_transfer() -> void:
create_and_transfer:
    proto 0 0                                                                  //                                                                                                                                                                                                          @arc4.abimethod()\ndef create_and_transfer(self) -> None:                                            inner_transactions/asset_transfer.py:11-12

create_and_transfer_block@0:
    itxn_begin                                                                 //                                                                                                                                                                                                          itxn.AssetConfig(\ntotal=1000,\nasset_name="test",\nunit_name="TST",\ndecimals=0,\nmanager=op.Glo... inner_transactions/asset_transfer.py:15-23
    global CurrentApplicationAddress                                           //                                                                                            {global}                                                                                                      op.Global.current_application_address                                                                inner_transactions/asset_transfer.py:20
                                                                               // virtual: store inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 to l-stack (no copy)   inner_txn_params%0%%param_ConfigAssetManager_idx_0#0                                                          op.Global.current_application_address                                                                inner_transactions/asset_transfer.py:20
    global CurrentApplicationAddress                                           //                                                                                            inner_txn_params%0%%param_ConfigAssetManager_idx_0#0,{global}                                                 op.Global.current_application_address                                                                inner_transactions/asset_transfer.py:21
                                                                               // virtual: store inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0 to l-stack (no copy)  inner_txn_params%0%%param_ConfigAssetManager_idx_0#0,inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0    op.Global.current_application_address                                                                inner_transactions/asset_transfer.py:21
                                                                               // virtual: load inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0 from l-stack (no copy) inner_txn_params%0%%param_ConfigAssetManager_idx_0#0,inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0
    itxn_field ConfigAssetClawback                                             //                                                                                            inner_txn_params%0%%param_ConfigAssetManager_idx_0#0
                                                                               // virtual: load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 from l-stack (no copy)  inner_txn_params%0%%param_ConfigAssetManager_idx_0#0
    itxn_field ConfigAssetManager                                              //
    int 0                                                                      //                                                                                            0                                                                                                             0                                                                                                    inner_transactions/asset_transfer.py:19
    itxn_field ConfigAssetDecimals                                             //
    byte "TST"                                                                 //                                                                                            "TST"                                                                                                         "TST"                                                                                                inner_transactions/asset_transfer.py:18
    itxn_field ConfigAssetUnitName                                             //
    byte "test"                                                                //                                                                                            "test"                                                                                                        "test"                                                                                               inner_transactions/asset_transfer.py:17
    itxn_field ConfigAssetName                                                 //
    int 1000                                                                   //                                                                                            1000                                                                                                          1000                                                                                                 inner_transactions/asset_transfer.py:16
    itxn_field ConfigAssetTotal                                                //
    int acfg                                                                   //                                                                                            acfg                                                                                                          itxn.AssetConfig                                                                                     inner_transactions/asset_transfer.py:15
    itxn_field TypeEnum                                                        //
    int 0                                                                      //                                                                                            0                                                                                                             itxn.AssetConfig                                                                                     inner_transactions/asset_transfer.py:15
    itxn_field Fee                                                             //
    itxn_submit                                                                //                                                                                                                                                                                                          itxn.AssetConfig(\ntotal=1000,\nasset_name="test",\nunit_name="TST",\ndecimals=0,\nmanager=op.Glo... inner_transactions/asset_transfer.py:15-23
    itxn CreatedAssetID                                                        //                                                                                            {itxn}                                                                                                        itxn.AssetConfig(\ntotal=1000,\nasset_name="test",\nunit_name="TST",\ndecimals=0,\nmanager=op.Glo... inner_transactions/asset_transfer.py:15-24
                                                                               // virtual: store new_asset#0 to l-stack (no copy)                                            new_asset#0                                                                                                   new_asset = (\nitxn.AssetConfig(\ntotal=1000,\nasset_name="test",\nunit_name="TST",\ndecimals=0,\... inner_transactions/asset_transfer.py:14-25
    itxn_begin                                                                 //                                                                                            new_asset#0                                                                                                   itxn.AssetTransfer(\nasset_sender=new_asset.creator,\nasset_receiver=Global.current_application_a... inner_transactions/asset_transfer.py:28-33
    dup                                                                        // load new_asset#0 from l-stack (copy)                                                       new_asset#0,new_asset#0                                                                                       new_asset.creator                                                                                    inner_transactions/asset_transfer.py:29
    asset_params_get AssetCreator                                              //                                                                                            new_asset#0,{asset_params_get}.0,{asset_params_get}.1                                                         new_asset.creator                                                                                    inner_transactions/asset_transfer.py:29
    cover 1                                                                    // store check%0#0 to l-stack (no copy)                                                       new_asset#0,check%0#0,{asset_params_get}.0                                                                    new_asset.creator                                                                                    inner_transactions/asset_transfer.py:29
    cover 2                                                                    // store value%0#0 to l-stack (no copy)                                                       value%0#0,new_asset#0,check%0#0                                                                               new_asset.creator                                                                                    inner_transactions/asset_transfer.py:29
                                                                               // virtual: load check%0#0 from l-stack (no copy)                                             value%0#0,new_asset#0,check%0#0                                                                               new_asset.creator                                                                                    inner_transactions/asset_transfer.py:29
    assert // asset exists                                                     //                                                                                            value%0#0,new_asset#0                                                                                         new_asset.creator                                                                                    inner_transactions/asset_transfer.py:29
    global CurrentApplicationAddress                                           //                                                                                            value%0#0,new_asset#0,{global}                                                                                Global.current_application_address                                                                   inner_transactions/asset_transfer.py:30
                                                                               // virtual: store inner_txn_params%1%%param_AssetReceiver_idx_0#0 to l-stack (no copy)        value%0#0,new_asset#0,inner_txn_params%1%%param_AssetReceiver_idx_0#0                                         Global.current_application_address                                                                   inner_transactions/asset_transfer.py:30
    uncover 1                                                                  // load new_asset#0 from l-stack (no copy)                                                    value%0#0,inner_txn_params%1%%param_AssetReceiver_idx_0#0,new_asset#0
    itxn_field XferAsset                                                       //                                                                                            value%0#0,inner_txn_params%1%%param_AssetReceiver_idx_0#0
    int 1000                                                                   //                                                                                            value%0#0,inner_txn_params%1%%param_AssetReceiver_idx_0#0,1000                                                1000                                                                                                 inner_transactions/asset_transfer.py:31
    itxn_field AssetAmount                                                     //                                                                                            value%0#0,inner_txn_params%1%%param_AssetReceiver_idx_0#0
                                                                               // virtual: load inner_txn_params%1%%param_AssetReceiver_idx_0#0 from l-stack (no copy)       value%0#0,inner_txn_params%1%%param_AssetReceiver_idx_0#0
    itxn_field AssetReceiver                                                   //                                                                                            value%0#0
                                                                               // virtual: load value%0#0 from l-stack (no copy)                                             value%0#0
    itxn_field AssetSender                                                     //
    int axfer                                                                  //                                                                                            axfer                                                                                                         itxn.AssetTransfer                                                                                   inner_transactions/asset_transfer.py:28
    itxn_field TypeEnum                                                        //
    int 0                                                                      //                                                                                            0                                                                                                             itxn.AssetTransfer                                                                                   inner_transactions/asset_transfer.py:28
    itxn_field Fee                                                             //
    itxn_submit                                                                //                                                                                                                                                                                                          itxn.AssetTransfer(\nasset_sender=new_asset.creator,\nasset_receiver=Global.current_application_a... inner_transactions/asset_transfer.py:28-33
    retsub                                                                     //

