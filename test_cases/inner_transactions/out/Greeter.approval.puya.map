{
  "version": 3,
  "sources": [
    "../c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOQ;AAAiB;AAAjB;AAFR;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;;;;AAMmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEI;AAEwB;;;;;;;AADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADrB;;;AAAA;;;AAAA;AAAA;;AADJ;AAAA;;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAEgB;AACF;AAAA;AAAA;AAAA;AACG;;;;;;;;;;;;AAFD;;;AAAA;;;AAAA;;;AAIF;AAAA;;;AAAA;AAAA;AAAA;AACkB;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAA7B;AAPH;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1"
    },
    "6": {
      "op": "bytecblock \"hello_app\" 0x151f7c75"
    },
    "23": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "25": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "28": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\""
      ],
      "stack_out": [
        "\"hello_app\""
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "\"hello_app\"",
        "0"
      ]
    },
    "30": {
      "op": "app_global_put",
      "stack_out": []
    },
    "31": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "33": {
      "op": "bz main___algopy_default_create@9",
      "stack_out": []
    },
    "36": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "38": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "39": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "40": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "42": {
      "op": "assert",
      "stack_out": []
    },
    "43": {
      "op": "pushbytess 0x786b6291 0x33fb5d48 // method \"bootstrap()uint64\", method \"log_greetings(string)void\"",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ],
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ]
    },
    "55": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%5#0"
      ]
    },
    "58": {
      "op": "match bootstrap log_greetings",
      "stack_out": []
    },
    "64": {
      "op": "err"
    },
    "65": {
      "block": "main___algopy_default_create@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "67": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "68": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "70": {
      "op": "!",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "71": {
      "op": "&&",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "72": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "73": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.bootstrap[routing]",
      "params": {},
      "block": "bootstrap",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "74": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"hello_app\""
      ]
    },
    "75": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "76": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "77": {
      "op": "!",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "78": {
      "error": "already bootstrapped",
      "op": "assert // already bootstrapped",
      "stack_out": []
    },
    "79": {
      "op": "itxn_begin"
    },
    "80": {
      "op": "pushbytes 0x0a8101",
      "defined_out": [
        "0x0a8101"
      ],
      "stack_out": [
        "0x0a8101"
      ]
    },
    "85": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "87": {
      "op": "pushbytes 0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089",
      "defined_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ],
      "stack_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ]
    },
    "174": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "176": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "177": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "180": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "182": {
      "op": "itxn_submit"
    },
    "183": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "185": {
      "op": "bytec_0 // \"hello_app\"",
      "stack_out": [
        "tmp%1#1",
        "\"hello_app\""
      ]
    },
    "186": {
      "op": "dig 1",
      "defined_out": [
        "\"hello_app\"",
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ],
      "stack_out": [
        "tmp%1#1",
        "\"hello_app\"",
        "tmp%1#1 (copy)"
      ]
    },
    "188": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "189": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "190": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "192": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "193": {
      "op": "log",
      "stack_out": []
    },
    "194": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "195": {
      "op": "return",
      "stack_out": []
    },
    "196": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.log_greetings[routing]",
      "params": {},
      "block": "log_greetings",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "199": {
      "op": "itxn_begin"
    },
    "200": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0"
      ]
    },
    "201": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0",
        "\"hello_app\""
      ]
    },
    "202": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "203": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "204": {
      "op": "pushbytes 0x02bece11 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "Method(hello(string)string)"
      ]
    },
    "210": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "212": {
      "op": "itxn_field ApplicationID"
    },
    "214": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "216": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "217": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "220": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "222": {
      "op": "itxn_submit"
    },
    "223": {
      "op": "itxn LastLog",
      "defined_out": [
        "hello_call.LastLog#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "225": {
      "op": "dup",
      "defined_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ]
    },
    "226": {
      "op": "extract 0 4",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%1#0"
      ]
    },
    "229": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "hello_call.LastLog#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "230": {
      "op": "==",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%2#0"
      ]
    },
    "231": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "232": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "235": {
      "op": "pushbytes \"HelloWorld returned: \"",
      "defined_out": [
        "\"HelloWorld returned: \"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"HelloWorld returned: \""
      ]
    },
    "258": {
      "op": "swap",
      "stack_out": [
        "\"HelloWorld returned: \"",
        "tmp%4#0"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "260": {
      "op": "log",
      "stack_out": []
    },
    "261": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "262": {
      "op": "return",
      "stack_out": []
    }
  }
}