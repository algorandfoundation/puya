{
  "version": 3,
  "sources": [
    "../c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOQ;AAAiB;AAAjB;AAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAMmB;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEI;AAEwB;;;;;;;AADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADrB;;;AAAA;;;AAAA;AAAA;;AADJ;AAAA;;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAEgB;AACF;AAAA;AAAA;AAAA;AACG;;;;;;;;;;;;AAFD;;;AAAA;;;AAAA;;;AAIF;AAAA;;;AAAA;AAAA;AAAA;AACkB;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAA7B;AAPH;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock \"hello_app\" 0x151f7c75"
    },
    "23": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "25": {
      "op": "bnz after_if_else@2",
      "stack_out": []
    },
    "28": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\""
      ],
      "stack_out": [
        "\"hello_app\""
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "\"hello_app\"",
        "0"
      ]
    },
    "30": {
      "op": "app_global_put",
      "stack_out": []
    },
    "31": {
      "block": "after_if_else@2",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "34": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "36": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "37": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "38": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "39": {
      "op": "switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED",
      "stack_out": []
    },
    "65": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "66": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "68": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "69": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "op": "return // on error: this contract does not implement the given ABI method for create NoOp",
      "defined_out": [],
      "stack_out": []
    },
    "70": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "pushbytess 0x786b6291 0x33fb5d48 // method \"bootstrap()uint64\", method \"log_greetings(string)void\"",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ],
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ]
    },
    "82": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%5#0"
      ]
    },
    "85": {
      "op": "match bootstrap log_greetings",
      "stack_out": []
    },
    "91": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "92": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.bootstrap[routing]",
      "params": {},
      "block": "bootstrap",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "93": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"hello_app\""
      ]
    },
    "94": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "95": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "96": {
      "op": "!",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "97": {
      "error": "already bootstrapped",
      "op": "assert // already bootstrapped",
      "stack_out": []
    },
    "98": {
      "op": "itxn_begin"
    },
    "99": {
      "op": "pushbytes 0x0a8101",
      "defined_out": [
        "0x0a8101"
      ],
      "stack_out": [
        "0x0a8101"
      ]
    },
    "104": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "106": {
      "op": "pushbytes 0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089",
      "defined_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ],
      "stack_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ]
    },
    "193": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "195": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "196": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "198": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "199": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "201": {
      "op": "itxn_submit"
    },
    "202": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "204": {
      "op": "bytec_0 // \"hello_app\"",
      "stack_out": [
        "tmp%1#1",
        "\"hello_app\""
      ]
    },
    "205": {
      "op": "dig 1",
      "defined_out": [
        "\"hello_app\"",
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ],
      "stack_out": [
        "tmp%1#1",
        "\"hello_app\"",
        "tmp%1#1 (copy)"
      ]
    },
    "207": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "208": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "209": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "210": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "211": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "212": {
      "op": "log",
      "stack_out": []
    },
    "213": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "214": {
      "op": "return",
      "stack_out": []
    },
    "215": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.log_greetings[routing]",
      "params": {},
      "block": "log_greetings",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "218": {
      "op": "itxn_begin"
    },
    "219": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0"
      ]
    },
    "220": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0",
        "\"hello_app\""
      ]
    },
    "221": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "222": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "223": {
      "op": "pushbytes 0x02bece11 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "Method(hello(string)string)"
      ]
    },
    "229": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "231": {
      "op": "itxn_field ApplicationID"
    },
    "233": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "235": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "236": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "238": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "239": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "241": {
      "op": "itxn_submit"
    },
    "242": {
      "op": "itxn LastLog",
      "defined_out": [
        "hello_call.LastLog#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "244": {
      "op": "dup",
      "defined_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ]
    },
    "245": {
      "op": "extract 0 4",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%1#0"
      ]
    },
    "248": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "hello_call.LastLog#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "249": {
      "op": "==",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%2#0"
      ]
    },
    "250": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "251": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "254": {
      "op": "pushbytes \"HelloWorld returned: \"",
      "defined_out": [
        "\"HelloWorld returned: \"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"HelloWorld returned: \""
      ]
    },
    "277": {
      "op": "swap",
      "stack_out": [
        "\"HelloWorld returned: \"",
        "tmp%4#0"
      ]
    },
    "278": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "279": {
      "op": "log",
      "stack_out": []
    },
    "280": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "281": {
      "op": "return",
      "stack_out": []
    }
  }
}