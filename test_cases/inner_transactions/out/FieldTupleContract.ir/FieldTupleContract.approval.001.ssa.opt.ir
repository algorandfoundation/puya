main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%0#1 ? block@2 : block@10
    block@2: // abi_routing_L24
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion is not NoOp
        let tmp%4#0: bool = (txn ApplicationID)
        goto tmp%4#0 ? block@3 : block@9
    block@3: // call_NoOp_L24
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "test_assign_tuple()void" => block@4, method "test_assign_tuple_mixed()void" => block@5, * => block@9}
    block@4: // test_assign_tuple_route_L25
        test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple[routing]()
        goto block@9
    block@5: // test_assign_tuple_mixed_route_L85
        test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple_mixed[routing]()
        goto block@9
    block@9: // after_if_else_L24
        fail
    block@10: // __algopy_default_create_L1
        let tmp%6#0: uint64 = (txn OnCompletion)
        let tmp%7#0: bool = (! tmp%6#0)
        let tmp%8#0: uint64 = (txn ApplicationID)
        let tmp%9#0: bool = (! tmp%8#0)
        let tmp%10#0: bool = (&& tmp%7#0 tmp%9#0)
        (assert tmp%10#0) // OnCompletion must be NoOp && can only call when creating
        test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.__algopy_default_create()
        exit 1u

subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple[routing]() -> void:
    block@0: // L25
        let tmp%0#0: bytes = (itob 42u)
        let tmp%1#0: bytes = (itob 1u)
        itxn_begin
        ((itxn_field ApplicationArgs) 0x3161)
        ((itxn_field ApplicationArgs) 0x3261)
        ((itxn_field ApplicationArgs) 0x68656c6c6f)
        ((itxn_field ApplicationArgs) "world")
        ((itxn_field ApplicationArgs) "!")
        ((itxn_field ApplicationArgs) tmp%0#0)
        ((itxn_field ApplicationArgs) tmp%1#0)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field Note) 0x646966666572656e7420706172616d20736574)
        ((itxn_field ApplicationArgs) 0x3361)
        ((itxn_field ApplicationArgs) 0x3461)
        ((itxn_field ApplicationArgs) 0x3561)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%2#0: bytes = ((gitxnas 0 ApplicationArgs) 0u)
        let tmp%3#0: bool = (== tmp%2#0 0x3161)
        (assert tmp%3#0)
        let tmp%4#0: bytes = ((gitxnas 0 ApplicationArgs) 1u)
        let tmp%5#0: bool = (== tmp%4#0 0x3261)
        (assert tmp%5#0)
        let tmp%6#0: bytes = ((gitxnas 0 ApplicationArgs) 2u)
        let tmp%7#0: bool = (== tmp%6#0 0x68656c6c6f)
        (assert tmp%7#0)
        let tmp%8#0: bytes = ((gitxnas 0 ApplicationArgs) 3u)
        let tmp%9#0: bool = (== tmp%8#0 0x776f726c64)
        (assert tmp%9#0)
        let tmp%10#0: bytes = ((gitxnas 0 ApplicationArgs) 4u)
        let tmp%11#0: bool = (== tmp%10#0 0x21)
        (assert tmp%11#0)
        let tmp%12#0: bytes = ((gitxnas 0 ApplicationArgs) 5u)
        let tmp%14#0: bool = (== tmp%12#0 tmp%0#0)
        (assert tmp%14#0)
        let tmp%15#0: bytes = ((gitxnas 0 ApplicationArgs) 6u)
        let tmp%16#0: bytes = (itob 1u)
        let tmp%17#0: bool = (== tmp%15#0 tmp%16#0)
        (assert tmp%17#0)
        let tmp%18#0: bytes = ((itxnas ApplicationArgs) 0u)
        let tmp%19#0: bool = (== tmp%18#0 0x3361)
        (assert tmp%19#0)
        let tmp%20#0: bytes = ((itxnas ApplicationArgs) 1u)
        let tmp%21#0: bool = (== tmp%20#0 0x3461)
        (assert tmp%21#0)
        let tmp%22#0: bytes = ((itxnas ApplicationArgs) 2u)
        let tmp%23#0: bool = (== tmp%22#0 0x3561)
        (assert tmp%23#0)
        itxn_begin
        ((itxn_field Note) 0x646966666572656e7420706172616d20736574)
        ((itxn_field ApplicationArgs) 0x3362)
        ((itxn_field ApplicationArgs) 0x3462)
        ((itxn_field ApplicationArgs) 0x3562)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field ApplicationArgs) 0x3162)
        ((itxn_field ApplicationArgs) 0x3262)
        let is_ApplicationArgs_count_gte_7%0#0: bool = 0u
        goto block@6
    block@6: // next_field_L66
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%24#0: bytes = ((itxnas ApplicationArgs) 0u)
        let tmp%25#0: bool = (== tmp%24#0 0x3162)
        (assert tmp%25#0)
        let tmp%26#0: bytes = ((itxnas ApplicationArgs) 1u)
        let tmp%27#0: bool = (== tmp%26#0 0x3262)
        (assert tmp%27#0)
        let tmp%28#0: bytes = ((gitxnas 0 ApplicationArgs) 0u)
        let tmp%29#0: bool = (== tmp%28#0 0x3362)
        (assert tmp%29#0)
        let tmp%30#0: bytes = ((gitxnas 0 ApplicationArgs) 1u)
        let tmp%31#0: bool = (== tmp%30#0 0x3462)
        (assert tmp%31#0)
        let tmp%32#0: bytes = ((gitxnas 0 ApplicationArgs) 2u)
        let tmp%33#0: bool = (== tmp%32#0 0x3562)
        (assert tmp%33#0)
        itxn_begin
        ((itxn_field ApplicationArgs) 0x3163)
        ((itxn_field ApplicationArgs) 0x3263)
        let is_ApplicationArgs_count_gte_7%1#0: bool = 0u
        goto block@9
    block@9: // next_field_L77
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_next
        ((itxn_field Note) 0x646966666572656e7420706172616d20736574)
        ((itxn_field ApplicationArgs) 0x3363)
        ((itxn_field ApplicationArgs) 0x3463)
        ((itxn_field ApplicationArgs) 0x3563)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%34#0: bytes = ((gitxnas 0 ApplicationArgs) 0u)
        let tmp%35#0: bool = (== tmp%34#0 0x3163)
        (assert tmp%35#0)
        let tmp%36#0: bytes = ((gitxnas 0 ApplicationArgs) 1u)
        let tmp%37#0: bool = (== tmp%36#0 0x3263)
        (assert tmp%37#0)
        let tmp%38#0: bytes = ((itxnas ApplicationArgs) 0u)
        let tmp%39#0: bool = (== tmp%38#0 0x3363)
        (assert tmp%39#0)
        let tmp%40#0: bytes = ((itxnas ApplicationArgs) 1u)
        let tmp%41#0: bool = (== tmp%40#0 0x3463)
        (assert tmp%41#0)
        let tmp%42#0: bytes = ((itxnas ApplicationArgs) 2u)
        let tmp%43#0: bool = (== tmp%42#0 0x3563)
        (assert tmp%43#0)
        exit 1u

subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple_mixed[routing]() -> void:
    block@0: // L85
        itxn_begin
        ((itxn_field ApplicationArgs) 0x3161)
        ((itxn_field ApplicationArgs) 0x3261)
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ClearStateProgramPages) 0x098101)
        ((itxn_field ApprovalProgramPages) 0x098101)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%0#0: bytes = ((itxnas ApplicationArgs) 0u)
        let tmp%1#0: bool = (== tmp%0#0 0x3161)
        (assert tmp%1#0)
        let tmp%2#0: bytes = ((itxnas ApplicationArgs) 1u)
        let tmp%3#0: bool = (== tmp%2#0 0x3261)
        (assert tmp%3#0)
        let tmp%4#0: bool = 1u
        exit 1u

subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.__algopy_default_create() -> void:
    block@0: // L1
        return 