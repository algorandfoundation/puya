main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__() -> bool:
    block@0: // L11
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@7
    block@1: // abi_routing_L11
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "named_tuple_itxn(uint64)void" => block@2, method "named_tuple_itxn2(uint64)void" => block@3, method "named_tuple_itxn3(uint64)void" => block@4, * => block@5}
    block@2: // named_tuple_itxn_route_L12
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let reinterpret_bytes[8]%0#0: bytes[8] = (txna ApplicationArgs 1)
        let tmp%7#0: uint64 = (btoi reinterpret_bytes[8]%0#0)
        test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn(tmp%7#0)
        return 1u
    block@3: // named_tuple_itxn2_route_L17
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 NoOp)
        (assert tmp%9#0) // OnCompletion is not NoOp
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (!= tmp%10#0 0u)
        (assert tmp%11#0) // can only call when not creating
        let reinterpret_bytes[8]%1#0: bytes[8] = (txna ApplicationArgs 1)
        let tmp%12#0: uint64 = (btoi reinterpret_bytes[8]%1#0)
        test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2(tmp%12#0)
        return 1u
    block@4: // named_tuple_itxn3_route_L22
        let tmp%13#0: uint64 = (txn OnCompletion)
        let tmp%14#0: bool = (== tmp%13#0 NoOp)
        (assert tmp%14#0) // OnCompletion is not NoOp
        let tmp%15#0: uint64 = (txn ApplicationID)
        let tmp%16#0: bool = (!= tmp%15#0 0u)
        (assert tmp%16#0) // can only call when not creating
        let reinterpret_bytes[8]%2#0: bytes[8] = (txna ApplicationArgs 1)
        let tmp%17#0: uint64 = (btoi reinterpret_bytes[8]%2#0)
        test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3(tmp%17#0)
        return 1u
    block@5: // switch_case_default_L11
        goto block@6
    block@6: // switch_case_next_L11
        goto block@11
    block@7: // bare_routing_L11
        let tmp%18#0: uint64 = (txn OnCompletion)
        switch tmp%18#0 {0u => block@8, * => block@9}
    block@8: // __algopy_default_create_L1
        let tmp%19#0: uint64 = (txn ApplicationID)
        let tmp%20#0: bool = (== tmp%19#0 0u)
        (assert tmp%20#0) // can only call when creating
        test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create()
        return 1u
    block@9: // switch_case_default_L11
        goto block@10
    block@10: // switch_case_next_L11
        goto block@11
    block@11: // after_if_else_L11
        return 0u

subroutine test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn(amt: uint64) -> void:
    block@0: // L12
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = pay
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Receiver_idx_0#0: bytes[32] = (txn Sender)
        let inner_txn_params%0%%Receiver_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Amount_idx_0#0: uint64 = amt#0
        let inner_txn_params%0%%Amount_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field Amount) inner_txn_params%0%%param_Amount_idx_0#0)
        ((itxn_field Receiver) inner_txn_params%0%%param_Receiver_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L14
        itxn_submit
        let (hmm.foo#0: uint64, hmm.bar#0: itxn_group_idx) = (amt#0, itxn_group_idx(0))
        let hmm.bar._is_last#0: bool = 1u
        let hmm.bar.Sender#0: bytes[32] = itxn[hmm.bar#0].Sender
        let hmm.bar.Fee#0: uint64 = itxn[hmm.bar#0].Fee
        let hmm.bar.FirstValid#0: uint64 = itxn[hmm.bar#0].FirstValid
        let hmm.bar.FirstValidTime#0: uint64 = itxn[hmm.bar#0].FirstValidTime
        let hmm.bar.LastValid#0: uint64 = itxn[hmm.bar#0].LastValid
        let hmm.bar.Note#0: bytes = itxn[hmm.bar#0].Note
        let hmm.bar.Lease#0: bytes = itxn[hmm.bar#0].Lease
        let hmm.bar.Receiver#0: bytes[32] = itxn[hmm.bar#0].Receiver
        let hmm.bar.Amount#0: uint64 = itxn[hmm.bar#0].Amount
        let hmm.bar.CloseRemainderTo#0: bytes[32] = itxn[hmm.bar#0].CloseRemainderTo
        let hmm.bar.VotePK#0: bytes = itxn[hmm.bar#0].VotePK
        let hmm.bar.SelectionPK#0: bytes = itxn[hmm.bar#0].SelectionPK
        let hmm.bar.VoteFirst#0: uint64 = itxn[hmm.bar#0].VoteFirst
        let hmm.bar.VoteLast#0: uint64 = itxn[hmm.bar#0].VoteLast
        let hmm.bar.VoteKeyDilution#0: uint64 = itxn[hmm.bar#0].VoteKeyDilution
        let hmm.bar.Type#0: bytes = itxn[hmm.bar#0].Type
        let hmm.bar.TypeEnum#0: uint64 = itxn[hmm.bar#0].TypeEnum
        let hmm.bar.XferAsset#0: uint64 = itxn[hmm.bar#0].XferAsset
        let hmm.bar.AssetAmount#0: uint64 = itxn[hmm.bar#0].AssetAmount
        let hmm.bar.AssetSender#0: bytes[32] = itxn[hmm.bar#0].AssetSender
        let hmm.bar.AssetReceiver#0: bytes[32] = itxn[hmm.bar#0].AssetReceiver
        let hmm.bar.AssetCloseTo#0: bytes[32] = itxn[hmm.bar#0].AssetCloseTo
        let hmm.bar.GroupIndex#0: uint64 = itxn[hmm.bar#0].GroupIndex
        let hmm.bar.TxID#0: bytes = itxn[hmm.bar#0].TxID
        let hmm.bar.ApplicationID#0: uint64 = itxn[hmm.bar#0].ApplicationID
        let hmm.bar.OnCompletion#0: uint64 = itxn[hmm.bar#0].OnCompletion
        let hmm.bar.NumAppArgs#0: uint64 = itxn[hmm.bar#0].NumAppArgs
        let hmm.bar.NumAccounts#0: uint64 = itxn[hmm.bar#0].NumAccounts
        let hmm.bar.ApprovalProgram#0: bytes = itxn[hmm.bar#0].ApprovalProgram
        let hmm.bar.ClearStateProgram#0: bytes = itxn[hmm.bar#0].ClearStateProgram
        let hmm.bar.RekeyTo#0: bytes[32] = itxn[hmm.bar#0].RekeyTo
        let hmm.bar.ConfigAsset#0: uint64 = itxn[hmm.bar#0].ConfigAsset
        let hmm.bar.ConfigAssetTotal#0: uint64 = itxn[hmm.bar#0].ConfigAssetTotal
        let hmm.bar.ConfigAssetDecimals#0: uint64 = itxn[hmm.bar#0].ConfigAssetDecimals
        let hmm.bar.ConfigAssetDefaultFrozen#0: bool = itxn[hmm.bar#0].ConfigAssetDefaultFrozen
        let hmm.bar.ConfigAssetUnitName#0: bytes = itxn[hmm.bar#0].ConfigAssetUnitName
        let hmm.bar.ConfigAssetName#0: bytes = itxn[hmm.bar#0].ConfigAssetName
        let hmm.bar.ConfigAssetURL#0: bytes = itxn[hmm.bar#0].ConfigAssetURL
        let hmm.bar.ConfigAssetMetadataHash#0: bytes = itxn[hmm.bar#0].ConfigAssetMetadataHash
        let hmm.bar.ConfigAssetManager#0: bytes[32] = itxn[hmm.bar#0].ConfigAssetManager
        let hmm.bar.ConfigAssetReserve#0: bytes[32] = itxn[hmm.bar#0].ConfigAssetReserve
        let hmm.bar.ConfigAssetFreeze#0: bytes[32] = itxn[hmm.bar#0].ConfigAssetFreeze
        let hmm.bar.ConfigAssetClawback#0: bytes[32] = itxn[hmm.bar#0].ConfigAssetClawback
        let hmm.bar.FreezeAsset#0: uint64 = itxn[hmm.bar#0].FreezeAsset
        let hmm.bar.FreezeAssetAccount#0: bytes[32] = itxn[hmm.bar#0].FreezeAssetAccount
        let hmm.bar.FreezeAssetFrozen#0: bool = itxn[hmm.bar#0].FreezeAssetFrozen
        let hmm.bar.NumAssets#0: uint64 = itxn[hmm.bar#0].NumAssets
        let hmm.bar.NumApplications#0: uint64 = itxn[hmm.bar#0].NumApplications
        let hmm.bar.GlobalNumUint#0: uint64 = itxn[hmm.bar#0].GlobalNumUint
        let hmm.bar.GlobalNumByteSlice#0: uint64 = itxn[hmm.bar#0].GlobalNumByteSlice
        let hmm.bar.LocalNumUint#0: uint64 = itxn[hmm.bar#0].LocalNumUint
        let hmm.bar.LocalNumByteSlice#0: uint64 = itxn[hmm.bar#0].LocalNumByteSlice
        let hmm.bar.ExtraProgramPages#0: uint64 = itxn[hmm.bar#0].ExtraProgramPages
        let hmm.bar.Nonparticipation#0: bool = itxn[hmm.bar#0].Nonparticipation
        let hmm.bar.NumLogs#0: uint64 = itxn[hmm.bar#0].NumLogs
        let hmm.bar.CreatedAssetID#0: uint64 = itxn[hmm.bar#0].CreatedAssetID
        let hmm.bar.CreatedApplicationID#0: uint64 = itxn[hmm.bar#0].CreatedApplicationID
        let hmm.bar.LastLog#0: bytes = itxn[hmm.bar#0].LastLog
        let hmm.bar.StateProofPK#0: bytes = itxn[hmm.bar#0].StateProofPK
        let hmm.bar.NumApprovalProgramPages#0: uint64 = itxn[hmm.bar#0].NumApprovalProgramPages
        let hmm.bar.NumClearStateProgramPages#0: uint64 = itxn[hmm.bar#0].NumClearStateProgramPages
        let tmp%0#0: bool = (== hmm.bar.Amount#0 0u)
        (assert tmp%0#0)
        return 

subroutine test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2(amt: uint64) -> void:
    block@0: // L17
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = pay
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Receiver_idx_0#0: bytes[32] = (txn Sender)
        let inner_txn_params%0%%Receiver_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Amount_idx_0#0: uint64 = amt#0
        let inner_txn_params%0%%Amount_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field Amount) inner_txn_params%0%%param_Amount_idx_0#0)
        ((itxn_field Receiver) inner_txn_params%0%%param_Receiver_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L19
        itxn_submit
        let txn#0: itxn_group_idx = itxn_group_idx(0)
        let txn._is_last#0: bool = 1u
        let txn.Sender#0: bytes[32] = itxn[txn#0].Sender
        let txn.Fee#0: uint64 = itxn[txn#0].Fee
        let txn.FirstValid#0: uint64 = itxn[txn#0].FirstValid
        let txn.FirstValidTime#0: uint64 = itxn[txn#0].FirstValidTime
        let txn.LastValid#0: uint64 = itxn[txn#0].LastValid
        let txn.Note#0: bytes = itxn[txn#0].Note
        let txn.Lease#0: bytes = itxn[txn#0].Lease
        let txn.Receiver#0: bytes[32] = itxn[txn#0].Receiver
        let txn.Amount#0: uint64 = itxn[txn#0].Amount
        let txn.CloseRemainderTo#0: bytes[32] = itxn[txn#0].CloseRemainderTo
        let txn.VotePK#0: bytes = itxn[txn#0].VotePK
        let txn.SelectionPK#0: bytes = itxn[txn#0].SelectionPK
        let txn.VoteFirst#0: uint64 = itxn[txn#0].VoteFirst
        let txn.VoteLast#0: uint64 = itxn[txn#0].VoteLast
        let txn.VoteKeyDilution#0: uint64 = itxn[txn#0].VoteKeyDilution
        let txn.Type#0: bytes = itxn[txn#0].Type
        let txn.TypeEnum#0: uint64 = itxn[txn#0].TypeEnum
        let txn.XferAsset#0: uint64 = itxn[txn#0].XferAsset
        let txn.AssetAmount#0: uint64 = itxn[txn#0].AssetAmount
        let txn.AssetSender#0: bytes[32] = itxn[txn#0].AssetSender
        let txn.AssetReceiver#0: bytes[32] = itxn[txn#0].AssetReceiver
        let txn.AssetCloseTo#0: bytes[32] = itxn[txn#0].AssetCloseTo
        let txn.GroupIndex#0: uint64 = itxn[txn#0].GroupIndex
        let txn.TxID#0: bytes = itxn[txn#0].TxID
        let txn.ApplicationID#0: uint64 = itxn[txn#0].ApplicationID
        let txn.OnCompletion#0: uint64 = itxn[txn#0].OnCompletion
        let txn.NumAppArgs#0: uint64 = itxn[txn#0].NumAppArgs
        let txn.NumAccounts#0: uint64 = itxn[txn#0].NumAccounts
        let txn.ApprovalProgram#0: bytes = itxn[txn#0].ApprovalProgram
        let txn.ClearStateProgram#0: bytes = itxn[txn#0].ClearStateProgram
        let txn.RekeyTo#0: bytes[32] = itxn[txn#0].RekeyTo
        let txn.ConfigAsset#0: uint64 = itxn[txn#0].ConfigAsset
        let txn.ConfigAssetTotal#0: uint64 = itxn[txn#0].ConfigAssetTotal
        let txn.ConfigAssetDecimals#0: uint64 = itxn[txn#0].ConfigAssetDecimals
        let txn.ConfigAssetDefaultFrozen#0: bool = itxn[txn#0].ConfigAssetDefaultFrozen
        let txn.ConfigAssetUnitName#0: bytes = itxn[txn#0].ConfigAssetUnitName
        let txn.ConfigAssetName#0: bytes = itxn[txn#0].ConfigAssetName
        let txn.ConfigAssetURL#0: bytes = itxn[txn#0].ConfigAssetURL
        let txn.ConfigAssetMetadataHash#0: bytes = itxn[txn#0].ConfigAssetMetadataHash
        let txn.ConfigAssetManager#0: bytes[32] = itxn[txn#0].ConfigAssetManager
        let txn.ConfigAssetReserve#0: bytes[32] = itxn[txn#0].ConfigAssetReserve
        let txn.ConfigAssetFreeze#0: bytes[32] = itxn[txn#0].ConfigAssetFreeze
        let txn.ConfigAssetClawback#0: bytes[32] = itxn[txn#0].ConfigAssetClawback
        let txn.FreezeAsset#0: uint64 = itxn[txn#0].FreezeAsset
        let txn.FreezeAssetAccount#0: bytes[32] = itxn[txn#0].FreezeAssetAccount
        let txn.FreezeAssetFrozen#0: bool = itxn[txn#0].FreezeAssetFrozen
        let txn.NumAssets#0: uint64 = itxn[txn#0].NumAssets
        let txn.NumApplications#0: uint64 = itxn[txn#0].NumApplications
        let txn.GlobalNumUint#0: uint64 = itxn[txn#0].GlobalNumUint
        let txn.GlobalNumByteSlice#0: uint64 = itxn[txn#0].GlobalNumByteSlice
        let txn.LocalNumUint#0: uint64 = itxn[txn#0].LocalNumUint
        let txn.LocalNumByteSlice#0: uint64 = itxn[txn#0].LocalNumByteSlice
        let txn.ExtraProgramPages#0: uint64 = itxn[txn#0].ExtraProgramPages
        let txn.Nonparticipation#0: bool = itxn[txn#0].Nonparticipation
        let txn.NumLogs#0: uint64 = itxn[txn#0].NumLogs
        let txn.CreatedAssetID#0: uint64 = itxn[txn#0].CreatedAssetID
        let txn.CreatedApplicationID#0: uint64 = itxn[txn#0].CreatedApplicationID
        let txn.LastLog#0: bytes = itxn[txn#0].LastLog
        let txn.StateProofPK#0: bytes = itxn[txn#0].StateProofPK
        let txn.NumApprovalProgramPages#0: uint64 = itxn[txn#0].NumApprovalProgramPages
        let txn.NumClearStateProgramPages#0: uint64 = itxn[txn#0].NumClearStateProgramPages
        let tmp%0#0: bool = (== txn.Amount#0 0u)
        (assert tmp%0#0)
        return 

subroutine test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3(amt: uint64) -> void:
    block@0: // L22
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = pay
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Receiver_idx_0#0: bytes[32] = (txn Sender)
        let inner_txn_params%0%%Receiver_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Amount_idx_0#0: uint64 = amt#0
        let inner_txn_params%0%%Amount_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field Amount) inner_txn_params%0%%param_Amount_idx_0#0)
        ((itxn_field Receiver) inner_txn_params%0%%param_Receiver_idx_0#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L24
        itxn_submit
        let (hmmm.foo#0: uint64, hmmm.bar#0: itxn_group_idx) = (amt#0, itxn_group_idx(0))
        let hmmm.bar._is_last#0: bool = 1u
        let hmmm.bar.Sender#0: bytes[32] = itxn[hmmm.bar#0].Sender
        let hmmm.bar.Fee#0: uint64 = itxn[hmmm.bar#0].Fee
        let hmmm.bar.FirstValid#0: uint64 = itxn[hmmm.bar#0].FirstValid
        let hmmm.bar.FirstValidTime#0: uint64 = itxn[hmmm.bar#0].FirstValidTime
        let hmmm.bar.LastValid#0: uint64 = itxn[hmmm.bar#0].LastValid
        let hmmm.bar.Note#0: bytes = itxn[hmmm.bar#0].Note
        let hmmm.bar.Lease#0: bytes = itxn[hmmm.bar#0].Lease
        let hmmm.bar.Receiver#0: bytes[32] = itxn[hmmm.bar#0].Receiver
        let hmmm.bar.Amount#0: uint64 = itxn[hmmm.bar#0].Amount
        let hmmm.bar.CloseRemainderTo#0: bytes[32] = itxn[hmmm.bar#0].CloseRemainderTo
        let hmmm.bar.VotePK#0: bytes = itxn[hmmm.bar#0].VotePK
        let hmmm.bar.SelectionPK#0: bytes = itxn[hmmm.bar#0].SelectionPK
        let hmmm.bar.VoteFirst#0: uint64 = itxn[hmmm.bar#0].VoteFirst
        let hmmm.bar.VoteLast#0: uint64 = itxn[hmmm.bar#0].VoteLast
        let hmmm.bar.VoteKeyDilution#0: uint64 = itxn[hmmm.bar#0].VoteKeyDilution
        let hmmm.bar.Type#0: bytes = itxn[hmmm.bar#0].Type
        let hmmm.bar.TypeEnum#0: uint64 = itxn[hmmm.bar#0].TypeEnum
        let hmmm.bar.XferAsset#0: uint64 = itxn[hmmm.bar#0].XferAsset
        let hmmm.bar.AssetAmount#0: uint64 = itxn[hmmm.bar#0].AssetAmount
        let hmmm.bar.AssetSender#0: bytes[32] = itxn[hmmm.bar#0].AssetSender
        let hmmm.bar.AssetReceiver#0: bytes[32] = itxn[hmmm.bar#0].AssetReceiver
        let hmmm.bar.AssetCloseTo#0: bytes[32] = itxn[hmmm.bar#0].AssetCloseTo
        let hmmm.bar.GroupIndex#0: uint64 = itxn[hmmm.bar#0].GroupIndex
        let hmmm.bar.TxID#0: bytes = itxn[hmmm.bar#0].TxID
        let hmmm.bar.ApplicationID#0: uint64 = itxn[hmmm.bar#0].ApplicationID
        let hmmm.bar.OnCompletion#0: uint64 = itxn[hmmm.bar#0].OnCompletion
        let hmmm.bar.NumAppArgs#0: uint64 = itxn[hmmm.bar#0].NumAppArgs
        let hmmm.bar.NumAccounts#0: uint64 = itxn[hmmm.bar#0].NumAccounts
        let hmmm.bar.ApprovalProgram#0: bytes = itxn[hmmm.bar#0].ApprovalProgram
        let hmmm.bar.ClearStateProgram#0: bytes = itxn[hmmm.bar#0].ClearStateProgram
        let hmmm.bar.RekeyTo#0: bytes[32] = itxn[hmmm.bar#0].RekeyTo
        let hmmm.bar.ConfigAsset#0: uint64 = itxn[hmmm.bar#0].ConfigAsset
        let hmmm.bar.ConfigAssetTotal#0: uint64 = itxn[hmmm.bar#0].ConfigAssetTotal
        let hmmm.bar.ConfigAssetDecimals#0: uint64 = itxn[hmmm.bar#0].ConfigAssetDecimals
        let hmmm.bar.ConfigAssetDefaultFrozen#0: bool = itxn[hmmm.bar#0].ConfigAssetDefaultFrozen
        let hmmm.bar.ConfigAssetUnitName#0: bytes = itxn[hmmm.bar#0].ConfigAssetUnitName
        let hmmm.bar.ConfigAssetName#0: bytes = itxn[hmmm.bar#0].ConfigAssetName
        let hmmm.bar.ConfigAssetURL#0: bytes = itxn[hmmm.bar#0].ConfigAssetURL
        let hmmm.bar.ConfigAssetMetadataHash#0: bytes = itxn[hmmm.bar#0].ConfigAssetMetadataHash
        let hmmm.bar.ConfigAssetManager#0: bytes[32] = itxn[hmmm.bar#0].ConfigAssetManager
        let hmmm.bar.ConfigAssetReserve#0: bytes[32] = itxn[hmmm.bar#0].ConfigAssetReserve
        let hmmm.bar.ConfigAssetFreeze#0: bytes[32] = itxn[hmmm.bar#0].ConfigAssetFreeze
        let hmmm.bar.ConfigAssetClawback#0: bytes[32] = itxn[hmmm.bar#0].ConfigAssetClawback
        let hmmm.bar.FreezeAsset#0: uint64 = itxn[hmmm.bar#0].FreezeAsset
        let hmmm.bar.FreezeAssetAccount#0: bytes[32] = itxn[hmmm.bar#0].FreezeAssetAccount
        let hmmm.bar.FreezeAssetFrozen#0: bool = itxn[hmmm.bar#0].FreezeAssetFrozen
        let hmmm.bar.NumAssets#0: uint64 = itxn[hmmm.bar#0].NumAssets
        let hmmm.bar.NumApplications#0: uint64 = itxn[hmmm.bar#0].NumApplications
        let hmmm.bar.GlobalNumUint#0: uint64 = itxn[hmmm.bar#0].GlobalNumUint
        let hmmm.bar.GlobalNumByteSlice#0: uint64 = itxn[hmmm.bar#0].GlobalNumByteSlice
        let hmmm.bar.LocalNumUint#0: uint64 = itxn[hmmm.bar#0].LocalNumUint
        let hmmm.bar.LocalNumByteSlice#0: uint64 = itxn[hmmm.bar#0].LocalNumByteSlice
        let hmmm.bar.ExtraProgramPages#0: uint64 = itxn[hmmm.bar#0].ExtraProgramPages
        let hmmm.bar.Nonparticipation#0: bool = itxn[hmmm.bar#0].Nonparticipation
        let hmmm.bar.NumLogs#0: uint64 = itxn[hmmm.bar#0].NumLogs
        let hmmm.bar.CreatedAssetID#0: uint64 = itxn[hmmm.bar#0].CreatedAssetID
        let hmmm.bar.CreatedApplicationID#0: uint64 = itxn[hmmm.bar#0].CreatedApplicationID
        let hmmm.bar.LastLog#0: bytes = itxn[hmmm.bar#0].LastLog
        let hmmm.bar.StateProofPK#0: bytes = itxn[hmmm.bar#0].StateProofPK
        let hmmm.bar.NumApprovalProgramPages#0: uint64 = itxn[hmmm.bar#0].NumApprovalProgramPages
        let hmmm.bar.NumClearStateProgramPages#0: uint64 = itxn[hmmm.bar#0].NumClearStateProgramPages
        let txn#0: itxn_group_idx = hmmm.bar#0
        let txn.Sender#0: bytes[32] = hmmm.bar.Sender#0
        let txn.Fee#0: uint64 = hmmm.bar.Fee#0
        let txn.FirstValid#0: uint64 = hmmm.bar.FirstValid#0
        let txn.FirstValidTime#0: uint64 = hmmm.bar.FirstValidTime#0
        let txn.LastValid#0: uint64 = hmmm.bar.LastValid#0
        let txn.Note#0: bytes = hmmm.bar.Note#0
        let txn.Lease#0: bytes = hmmm.bar.Lease#0
        let txn.Receiver#0: bytes[32] = hmmm.bar.Receiver#0
        let txn.Amount#0: uint64 = hmmm.bar.Amount#0
        let txn.CloseRemainderTo#0: bytes[32] = hmmm.bar.CloseRemainderTo#0
        let txn.VotePK#0: bytes = hmmm.bar.VotePK#0
        let txn.SelectionPK#0: bytes = hmmm.bar.SelectionPK#0
        let txn.VoteFirst#0: uint64 = hmmm.bar.VoteFirst#0
        let txn.VoteLast#0: uint64 = hmmm.bar.VoteLast#0
        let txn.VoteKeyDilution#0: uint64 = hmmm.bar.VoteKeyDilution#0
        let txn.Type#0: bytes = hmmm.bar.Type#0
        let txn.TypeEnum#0: uint64 = hmmm.bar.TypeEnum#0
        let txn.XferAsset#0: uint64 = hmmm.bar.XferAsset#0
        let txn.AssetAmount#0: uint64 = hmmm.bar.AssetAmount#0
        let txn.AssetSender#0: bytes[32] = hmmm.bar.AssetSender#0
        let txn.AssetReceiver#0: bytes[32] = hmmm.bar.AssetReceiver#0
        let txn.AssetCloseTo#0: bytes[32] = hmmm.bar.AssetCloseTo#0
        let txn.GroupIndex#0: uint64 = hmmm.bar.GroupIndex#0
        let txn.TxID#0: bytes = hmmm.bar.TxID#0
        let txn.ApplicationID#0: uint64 = hmmm.bar.ApplicationID#0
        let txn.OnCompletion#0: uint64 = hmmm.bar.OnCompletion#0
        let txn.NumAppArgs#0: uint64 = hmmm.bar.NumAppArgs#0
        let txn.NumAccounts#0: uint64 = hmmm.bar.NumAccounts#0
        let txn.ApprovalProgram#0: bytes = hmmm.bar.ApprovalProgram#0
        let txn.ClearStateProgram#0: bytes = hmmm.bar.ClearStateProgram#0
        let txn.RekeyTo#0: bytes[32] = hmmm.bar.RekeyTo#0
        let txn.ConfigAsset#0: uint64 = hmmm.bar.ConfigAsset#0
        let txn.ConfigAssetTotal#0: uint64 = hmmm.bar.ConfigAssetTotal#0
        let txn.ConfigAssetDecimals#0: uint64 = hmmm.bar.ConfigAssetDecimals#0
        let txn.ConfigAssetDefaultFrozen#0: bool = hmmm.bar.ConfigAssetDefaultFrozen#0
        let txn.ConfigAssetUnitName#0: bytes = hmmm.bar.ConfigAssetUnitName#0
        let txn.ConfigAssetName#0: bytes = hmmm.bar.ConfigAssetName#0
        let txn.ConfigAssetURL#0: bytes = hmmm.bar.ConfigAssetURL#0
        let txn.ConfigAssetMetadataHash#0: bytes = hmmm.bar.ConfigAssetMetadataHash#0
        let txn.ConfigAssetManager#0: bytes[32] = hmmm.bar.ConfigAssetManager#0
        let txn.ConfigAssetReserve#0: bytes[32] = hmmm.bar.ConfigAssetReserve#0
        let txn.ConfigAssetFreeze#0: bytes[32] = hmmm.bar.ConfigAssetFreeze#0
        let txn.ConfigAssetClawback#0: bytes[32] = hmmm.bar.ConfigAssetClawback#0
        let txn.FreezeAsset#0: uint64 = hmmm.bar.FreezeAsset#0
        let txn.FreezeAssetAccount#0: bytes[32] = hmmm.bar.FreezeAssetAccount#0
        let txn.FreezeAssetFrozen#0: bool = hmmm.bar.FreezeAssetFrozen#0
        let txn.NumAssets#0: uint64 = hmmm.bar.NumAssets#0
        let txn.NumApplications#0: uint64 = hmmm.bar.NumApplications#0
        let txn.GlobalNumUint#0: uint64 = hmmm.bar.GlobalNumUint#0
        let txn.GlobalNumByteSlice#0: uint64 = hmmm.bar.GlobalNumByteSlice#0
        let txn.LocalNumUint#0: uint64 = hmmm.bar.LocalNumUint#0
        let txn.LocalNumByteSlice#0: uint64 = hmmm.bar.LocalNumByteSlice#0
        let txn.ExtraProgramPages#0: uint64 = hmmm.bar.ExtraProgramPages#0
        let txn.Nonparticipation#0: bool = hmmm.bar.Nonparticipation#0
        let txn.NumLogs#0: uint64 = hmmm.bar.NumLogs#0
        let txn.CreatedAssetID#0: uint64 = hmmm.bar.CreatedAssetID#0
        let txn.CreatedApplicationID#0: uint64 = hmmm.bar.CreatedApplicationID#0
        let txn.LastLog#0: bytes = hmmm.bar.LastLog#0
        let txn.StateProofPK#0: bytes = hmmm.bar.StateProofPK#0
        let txn.NumApprovalProgramPages#0: uint64 = hmmm.bar.NumApprovalProgramPages#0
        let txn.NumClearStateProgramPages#0: uint64 = hmmm.bar.NumClearStateProgramPages#0
        let tmp%0#0: bool = (== txn.Amount#0 0u)
        (assert tmp%0#0)
        return 

subroutine test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create() -> void:
    block@0: // L1
        return 