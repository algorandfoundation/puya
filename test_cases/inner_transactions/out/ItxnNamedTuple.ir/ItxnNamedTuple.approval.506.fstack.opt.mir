// Op                                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        txn NumAppArgs                                                                                  tmp%0#1
        bz main_bare_routing@8 ; b main_abi_routing@2

    main_abi_routing@2:
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                          tmp%2#0
        method named_tuple_itxn(uint64)void                                                             tmp%2#0,Method(named_tuple_itxn(uint64)void)
        method named_tuple_itxn2(uint64)void                                                            tmp%2#0,Method(named_tuple_itxn(uint64)void),Method(named_tuple_itxn2(uint64)void)
        method named_tuple_itxn3(uint64)void                                                            tmp%2#0,Method(named_tuple_itxn(uint64)void),Method(named_tuple_itxn2(uint64)void),Method(named_tuple_itxn3(uint64)void)
        l-load tmp%2#0 3                                                                                Method(named_tuple_itxn(uint64)void),Method(named_tuple_itxn2(uint64)void),Method(named_tuple_itxn3(uint64)void),tmp%2#0
        match main_named_tuple_itxn_route@3 main_named_tuple_itxn2_route@4 main_named_tuple_itxn3_route@5 ; b main_after_if_else@12 

    main_named_tuple_itxn_route@3:
        // inner_transactions/itxn_tuple.py:12
        // @arc4.abimethod()
        txn OnCompletion                                                                                tmp%3#0
        !                                                                                               tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                               tmp%5#0
        assert // can only call when not creating
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                          reinterpret_Encoded(uint64)%0#0
        btoi                                                                                            tmp%7#0
        // inner_transactions/itxn_tuple.py:12
        // @arc4.abimethod()
        callsub named_tuple_itxn
        int 1                                                                                           tmp%0#0
        x-store tmp%0#0                                                                                 (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13 (洧뎶) tmp%0#0 | 

    main_named_tuple_itxn2_route@4:
        // inner_transactions/itxn_tuple.py:17
        // @arc4.abimethod()
        txn OnCompletion                                                                                tmp%8#0
        !                                                                                               tmp%9#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                               tmp%10#0
        assert // can only call when not creating
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                          reinterpret_Encoded(uint64)%1#0
        btoi                                                                                            tmp%12#0
        // inner_transactions/itxn_tuple.py:17
        // @arc4.abimethod()
        callsub named_tuple_itxn2
        int 1                                                                                           tmp%0#0
        x-store tmp%0#0                                                                                 (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13 (洧뎶) tmp%0#0 | 

    main_named_tuple_itxn3_route@5:
        // inner_transactions/itxn_tuple.py:22
        // @arc4.abimethod()
        txn OnCompletion                                                                                tmp%13#0
        !                                                                                               tmp%14#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                               tmp%15#0
        assert // can only call when not creating
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                          reinterpret_Encoded(uint64)%2#0
        btoi                                                                                            tmp%17#0
        // inner_transactions/itxn_tuple.py:22
        // @arc4.abimethod()
        callsub named_tuple_itxn3
        int 1                                                                                           tmp%0#0
        x-store tmp%0#0                                                                                 (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13 (洧뎶) tmp%0#0 | 

    main_bare_routing@8:
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        txn OnCompletion                                                                                tmp%18#0
        bz main___algopy_default_create@9 ; b main_after_if_else@12

    main___algopy_default_create@9:
        txn ApplicationID                                                                               tmp%19#0
        !                                                                                               tmp%20#0
        assert // can only call when creating
        int 1                                                                                           tmp%0#0
        x-store tmp%0#0                                                                                 (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13 (洧뎶) tmp%0#0 | 

    main_after_if_else@12:
        // inner_transactions/itxn_tuple.py:11
        // class ItxnNamedTuple(arc4.ARC4Contract):
        int 0                                                                                           tmp%0#0
        x-store tmp%0#0                                                                                 (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13 (洧뎶) tmp%0#0 | 

    main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13: (洧뎶) tmp%0#0 |
        x-load tmp%0#0                                                                                  tmp%0#0
        return


// test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn(amt: uint64) -> void:
subroutine named_tuple_itxn:
    named_tuple_itxn_block@0:                                                                           (洧도) amt#0 |
        // inner_transactions/itxn_tuple.py:14
        // hmm = Hmmm(foo=amt, bar=itxn.Payment(receiver=Txn.sender, amount=amt).submit())
        itxn_begin                                                                                      (洧도) amt#0 |
        txn Sender                                                                                      (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        p-load amt#0                                                                                    (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0,amt#0 (copy)
        itxn_field Amount                                                                               (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        l-load inner_txn_params%0%%param_Receiver_idx_0#0 0                                             (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        itxn_field Receiver                                                                             (洧도) amt#0 |
        int pay                                                                                         (洧도) amt#0 | pay
        itxn_field TypeEnum                                                                             (洧도) amt#0 |
        int 0                                                                                           (洧도) amt#0 | 0
        itxn_field Fee                                                                                  (洧도) amt#0 |
        itxn_submit                                                                                     (洧도) amt#0 |
        itxn Amount                                                                                     (洧도) amt#0 | hmm.bar.Amount#0
        // inner_transactions/itxn_tuple.py:15
        // assert hmm.bar.amount == 0
        !                                                                                               (洧도) amt#0 | tmp%0#0
        assert                                                                                          (洧도) amt#0 |
        retsub


// test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2(amt: uint64) -> void:
subroutine named_tuple_itxn2:
    named_tuple_itxn2_block@0:                                                                          (洧도) amt#0 |
        // inner_transactions/itxn_tuple.py:19
        // txn = Hmmm(foo=amt, bar=itxn.Payment(receiver=Txn.sender, amount=amt).submit()).bar
        itxn_begin                                                                                      (洧도) amt#0 |
        txn Sender                                                                                      (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        p-load amt#0                                                                                    (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0,amt#0 (copy)
        itxn_field Amount                                                                               (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        l-load inner_txn_params%0%%param_Receiver_idx_0#0 0                                             (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        itxn_field Receiver                                                                             (洧도) amt#0 |
        int pay                                                                                         (洧도) amt#0 | pay
        itxn_field TypeEnum                                                                             (洧도) amt#0 |
        int 0                                                                                           (洧도) amt#0 | 0
        itxn_field Fee                                                                                  (洧도) amt#0 |
        itxn_submit                                                                                     (洧도) amt#0 |
        itxn Amount                                                                                     (洧도) amt#0 | txn.Amount#0
        // inner_transactions/itxn_tuple.py:20
        // assert txn.amount == 0
        !                                                                                               (洧도) amt#0 | tmp%0#0
        assert                                                                                          (洧도) amt#0 |
        retsub


// test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3(amt: uint64) -> void:
subroutine named_tuple_itxn3:
    named_tuple_itxn3_block@0:                                                                          (洧도) amt#0 |
        // inner_transactions/itxn_tuple.py:24
        // hmmm = Hmmm(foo=amt, bar=itxn.Payment(receiver=Txn.sender, amount=amt).submit())
        itxn_begin                                                                                      (洧도) amt#0 |
        txn Sender                                                                                      (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        p-load amt#0                                                                                    (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0,amt#0 (copy)
        itxn_field Amount                                                                               (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        l-load inner_txn_params%0%%param_Receiver_idx_0#0 0                                             (洧도) amt#0 | inner_txn_params%0%%param_Receiver_idx_0#0
        itxn_field Receiver                                                                             (洧도) amt#0 |
        int pay                                                                                         (洧도) amt#0 | pay
        itxn_field TypeEnum                                                                             (洧도) amt#0 |
        int 0                                                                                           (洧도) amt#0 | 0
        itxn_field Fee                                                                                  (洧도) amt#0 |
        itxn_submit                                                                                     (洧도) amt#0 |
        itxn Amount                                                                                     (洧도) amt#0 | hmmm.bar.Amount#0
        // inner_transactions/itxn_tuple.py:26
        // assert txn.amount == 0
        !                                                                                               (洧도) amt#0 | tmp%0#0
        assert                                                                                          (洧도) amt#0 |
        retsub


