contract test_cases.inner_transactions.itxn_loop.MyContract:
    program approval:
        subroutine test_cases.inner_transactions.itxn_loop.MyContract.approval_program() -> bool:
            block@0: // L19
                let app_params%%param_ApplicationArgs_idx_0#6: bytes = undefined
                let app_params%%param_ApplicationArgs_idx_1#5: bytes = undefined
                let app_params%%param_ApplicationArgs_idx_2#4: bytes = undefined
                let note#0: bytes = 0x4142434445
                let app_params#0: itxn_field_set = itxn_field_set(0)
                let app_params%%param_Fee_idx_0#0: uint64 = 0u
                let app_params%%Fee_length#0: uint64 = 1u
                let app_params%%param_TypeEnum_idx_0#0: uint64 = appl
                let app_params%%TypeEnum_length#0: uint64 = 1u
                let app_params%%param_ApprovalProgramPages_idx_0#0: bytes = 0x0a8101
                let app_params%%ApprovalProgramPages_length#0: uint64 = 1u
                let app_params%%param_ClearStateProgramPages_idx_0#0: bytes = 0x0a8101
                let app_params%%ClearStateProgramPages_length#0: uint64 = 1u
                let app_params%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let app_params%%OnCompletion_length#0: uint64 = 1u
                let app_params%%param_Note_idx_0#0: bytes = ""
                let app_params%%Note_length#0: uint64 = 1u
                let app_params%%Sender_length#0: uint64 = 0u
                let app_params%%Receiver_length#0: uint64 = 0u
                let app_params%%Amount_length#0: uint64 = 0u
                let app_params%%CloseRemainderTo_length#0: uint64 = 0u
                let app_params%%VotePK_length#0: uint64 = 0u
                let app_params%%SelectionPK_length#0: uint64 = 0u
                let app_params%%VoteFirst_length#0: uint64 = 0u
                let app_params%%VoteLast_length#0: uint64 = 0u
                let app_params%%VoteKeyDilution_length#0: uint64 = 0u
                let app_params%%Type_length#0: uint64 = 0u
                let app_params%%XferAsset_length#0: uint64 = 0u
                let app_params%%AssetAmount_length#0: uint64 = 0u
                let app_params%%AssetSender_length#0: uint64 = 0u
                let app_params%%AssetReceiver_length#0: uint64 = 0u
                let app_params%%AssetCloseTo_length#0: uint64 = 0u
                let app_params%%ApplicationID_length#0: uint64 = 0u
                let app_params%%ApprovalProgram_length#0: uint64 = 0u
                let app_params%%ClearStateProgram_length#0: uint64 = 0u
                let app_params%%RekeyTo_length#0: uint64 = 0u
                let app_params%%ConfigAsset_length#0: uint64 = 0u
                let app_params%%ConfigAssetTotal_length#0: uint64 = 0u
                let app_params%%ConfigAssetDecimals_length#0: uint64 = 0u
                let app_params%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let app_params%%ConfigAssetUnitName_length#0: uint64 = 0u
                let app_params%%ConfigAssetName_length#0: uint64 = 0u
                let app_params%%ConfigAssetURL_length#0: uint64 = 0u
                let app_params%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let app_params%%ConfigAssetManager_length#0: uint64 = 0u
                let app_params%%ConfigAssetReserve_length#0: uint64 = 0u
                let app_params%%ConfigAssetFreeze_length#0: uint64 = 0u
                let app_params%%ConfigAssetClawback_length#0: uint64 = 0u
                let app_params%%FreezeAsset_length#0: uint64 = 0u
                let app_params%%FreezeAssetAccount_length#0: uint64 = 0u
                let app_params%%FreezeAssetFrozen_length#0: uint64 = 0u
                let app_params%%GlobalNumUint_length#0: uint64 = 0u
                let app_params%%GlobalNumByteSlice_length#0: uint64 = 0u
                let app_params%%LocalNumUint_length#0: uint64 = 0u
                let app_params%%LocalNumByteSlice_length#0: uint64 = 0u
                let app_params%%ExtraProgramPages_length#0: uint64 = 0u
                let app_params%%Nonparticipation_length#0: uint64 = 0u
                let app_params%%StateProofPK_length#0: uint64 = 0u
                let app_params%%ApplicationArgs_length#0: uint64 = 0u
                let app_params%%Accounts_length#0: uint64 = 0u
                let app_params%%Assets_length#0: uint64 = 0u
                let app_params%%Applications_length#0: uint64 = 0u
                (assert 1u) // Step cannot be zero
                let range_item%0#0: uint64 = 0u
                goto block@1
            block@1: // for_header_L27
                let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#5 <- block@14)
                let app_params%%ApplicationArgs_length#6: uint64 = φ(app_params%%ApplicationArgs_length#0 <- block@0, app_params%%ApplicationArgs_length#4 <- block@14)
                let app_params%%param_ApplicationArgs_idx_0#5: bytes = φ(app_params%%param_ApplicationArgs_idx_0#6 <- block@0, app_params%%param_ApplicationArgs_idx_0#3 <- block@14)
                let app_params%%param_ApplicationArgs_idx_1#4: bytes = φ(app_params%%param_ApplicationArgs_idx_1#5 <- block@0, app_params%%param_ApplicationArgs_idx_1#2 <- block@14)
                let app_params%%param_ApplicationArgs_idx_2#3: bytes = φ(app_params%%param_ApplicationArgs_idx_2#4 <- block@0, app_params%%param_ApplicationArgs_idx_2#1 <- block@14)
                let app_params%%param_Note_idx_0#7: bytes = φ(app_params%%param_Note_idx_0#0 <- block@0, app_params%%param_Note_idx_0#5 <- block@14)
                let continue_looping%0#0: bool = (< range_item%0#1 4u)
                goto continue_looping%0#0 ? block@2 : block@15
            block@2: // for_body_L27
                let i#0: uint64 = range_item%0#1
                let i_note#0: bytes = (extract3 note#0 0u i#0)
                switch i#0 {1u => block@3, 2u => block@4, 3u => block@5, * => block@6}
            block@3: // switch_case_0_L31
                let app_params#1: itxn_field_set = itxn_field_set(1)
                let app_params%%param_Note_idx_0#1: bytes = i_note#0
                let app_params%%Note_length#1: uint64 = 1u
                let app_params%%param_ApplicationArgs_idx_0#0: bytes = 0x31
                let app_params%%ApplicationArgs_length#1: uint64 = 1u
                goto block@7
            block@4: // switch_case_1_L33
                let app_params#2: itxn_field_set = itxn_field_set(2)
                let app_params%%param_Note_idx_0#2: bytes = i_note#0
                let app_params%%Note_length#2: uint64 = 1u
                let app_params%%param_ApplicationArgs_idx_0#1: bytes = 0x32
                let app_params%%param_ApplicationArgs_idx_1#0: bytes = 0x31
                let app_params%%ApplicationArgs_length#2: uint64 = 2u
                goto block@7
            block@5: // switch_case_2_L35
                let app_params#3: itxn_field_set = itxn_field_set(3)
                let app_params%%param_Note_idx_0#3: bytes = i_note#0
                let app_params%%Note_length#3: uint64 = 1u
                let app_params%%param_ApplicationArgs_idx_0#2: bytes = 0x33
                let app_params%%param_ApplicationArgs_idx_1#1: bytes = 0x32
                let app_params%%param_ApplicationArgs_idx_2#0: bytes = 0x31
                let app_params%%ApplicationArgs_length#3: uint64 = 3u
                goto block@7
            block@6: // switch_case_default_L29
                goto block@7
            block@7: // switch_case_next_L29
                let app_params%%ApplicationArgs_length#4: uint64 = φ(app_params%%ApplicationArgs_length#1 <- block@3, app_params%%ApplicationArgs_length#2 <- block@4, app_params%%ApplicationArgs_length#3 <- block@5, app_params%%ApplicationArgs_length#6 <- block@6)
                let app_params%%param_ApplicationArgs_idx_0#3: bytes = φ(app_params%%param_ApplicationArgs_idx_0#0 <- block@3, app_params%%param_ApplicationArgs_idx_0#1 <- block@4, app_params%%param_ApplicationArgs_idx_0#2 <- block@5, app_params%%param_ApplicationArgs_idx_0#5 <- block@6)
                let app_params%%param_ApplicationArgs_idx_1#2: bytes = φ(app_params%%param_ApplicationArgs_idx_1#4 <- block@3, app_params%%param_ApplicationArgs_idx_1#0 <- block@4, app_params%%param_ApplicationArgs_idx_1#1 <- block@5, app_params%%param_ApplicationArgs_idx_1#4 <- block@6)
                let app_params%%param_ApplicationArgs_idx_2#1: bytes = φ(app_params%%param_ApplicationArgs_idx_2#3 <- block@3, app_params%%param_ApplicationArgs_idx_2#3 <- block@4, app_params%%param_ApplicationArgs_idx_2#0 <- block@5, app_params%%param_ApplicationArgs_idx_2#3 <- block@6)
                let app_params%%param_Note_idx_0#5: bytes = φ(app_params%%param_Note_idx_0#1 <- block@3, app_params%%param_Note_idx_0#2 <- block@4, app_params%%param_Note_idx_0#3 <- block@5, app_params%%param_Note_idx_0#7 <- block@6)
                itxn_begin
                let is_ApplicationArgs_count_gte_1%0#0: bool = (>= app_params%%ApplicationArgs_length#4 1u)
                goto is_ApplicationArgs_count_gte_1%0#0 ? block@8 : block@11
            block@8: // set_ApplicationArgs_0_to_0_L39
                ((itxn_field ApplicationArgs) app_params%%param_ApplicationArgs_idx_0#3)
                let is_ApplicationArgs_count_gte_2%0#0: bool = (>= app_params%%ApplicationArgs_length#4 2u)
                goto is_ApplicationArgs_count_gte_2%0#0 ? block@9 : block@11
            block@9: // set_ApplicationArgs_1_to_1_L39
                ((itxn_field ApplicationArgs) app_params%%param_ApplicationArgs_idx_1#2)
                let is_ApplicationArgs_count_gte_3%0#0: bool = (>= app_params%%ApplicationArgs_length#4 3u)
                goto is_ApplicationArgs_count_gte_3%0#0 ? block@10 : block@11
            block@10: // set_ApplicationArgs_2_to_2_L39
                ((itxn_field ApplicationArgs) app_params%%param_ApplicationArgs_idx_2#1)
                goto block@11
            block@11: // next_field_L39
                ((itxn_field Note) app_params%%param_Note_idx_0#5)
                ((itxn_field OnCompletion) app_params%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) app_params%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_params%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) app_params%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_params%%param_Fee_idx_0#0)
                goto block@12
            block@12: // next_txn_L39
                itxn_submit
                let app_txn#0: itxn_group_idx = itxn_group_idx(0)
                let app_txn._is_last#0: bool = 1u
                let app_txn.Sender#0: bytes = itxn[app_txn#0].Sender
                let app_txn.Fee#0: uint64 = itxn[app_txn#0].Fee
                let app_txn.FirstValid#0: uint64 = itxn[app_txn#0].FirstValid
                let app_txn.FirstValidTime#0: uint64 = itxn[app_txn#0].FirstValidTime
                let app_txn.LastValid#0: uint64 = itxn[app_txn#0].LastValid
                let app_txn.Note#0: bytes = itxn[app_txn#0].Note
                let app_txn.Lease#0: bytes = itxn[app_txn#0].Lease
                let app_txn.Receiver#0: bytes = itxn[app_txn#0].Receiver
                let app_txn.Amount#0: uint64 = itxn[app_txn#0].Amount
                let app_txn.CloseRemainderTo#0: bytes = itxn[app_txn#0].CloseRemainderTo
                let app_txn.VotePK#0: bytes = itxn[app_txn#0].VotePK
                let app_txn.SelectionPK#0: bytes = itxn[app_txn#0].SelectionPK
                let app_txn.VoteFirst#0: uint64 = itxn[app_txn#0].VoteFirst
                let app_txn.VoteLast#0: uint64 = itxn[app_txn#0].VoteLast
                let app_txn.VoteKeyDilution#0: uint64 = itxn[app_txn#0].VoteKeyDilution
                let app_txn.Type#0: bytes = itxn[app_txn#0].Type
                let app_txn.TypeEnum#0: uint64 = itxn[app_txn#0].TypeEnum
                let app_txn.XferAsset#0: uint64 = itxn[app_txn#0].XferAsset
                let app_txn.AssetAmount#0: uint64 = itxn[app_txn#0].AssetAmount
                let app_txn.AssetSender#0: bytes = itxn[app_txn#0].AssetSender
                let app_txn.AssetReceiver#0: bytes = itxn[app_txn#0].AssetReceiver
                let app_txn.AssetCloseTo#0: bytes = itxn[app_txn#0].AssetCloseTo
                let app_txn.GroupIndex#0: uint64 = itxn[app_txn#0].GroupIndex
                let app_txn.TxID#0: bytes = itxn[app_txn#0].TxID
                let app_txn.ApplicationID#0: uint64 = itxn[app_txn#0].ApplicationID
                let app_txn.OnCompletion#0: uint64 = itxn[app_txn#0].OnCompletion
                let app_txn.NumAppArgs#0: uint64 = itxn[app_txn#0].NumAppArgs
                let app_txn.NumAccounts#0: uint64 = itxn[app_txn#0].NumAccounts
                let app_txn.ApprovalProgram#0: bytes = itxn[app_txn#0].ApprovalProgram
                let app_txn.ClearStateProgram#0: bytes = itxn[app_txn#0].ClearStateProgram
                let app_txn.RekeyTo#0: bytes = itxn[app_txn#0].RekeyTo
                let app_txn.ConfigAsset#0: uint64 = itxn[app_txn#0].ConfigAsset
                let app_txn.ConfigAssetTotal#0: uint64 = itxn[app_txn#0].ConfigAssetTotal
                let app_txn.ConfigAssetDecimals#0: uint64 = itxn[app_txn#0].ConfigAssetDecimals
                let app_txn.ConfigAssetDefaultFrozen#0: bool = itxn[app_txn#0].ConfigAssetDefaultFrozen
                let app_txn.ConfigAssetUnitName#0: bytes = itxn[app_txn#0].ConfigAssetUnitName
                let app_txn.ConfigAssetName#0: bytes = itxn[app_txn#0].ConfigAssetName
                let app_txn.ConfigAssetURL#0: bytes = itxn[app_txn#0].ConfigAssetURL
                let app_txn.ConfigAssetMetadataHash#0: bytes = itxn[app_txn#0].ConfigAssetMetadataHash
                let app_txn.ConfigAssetManager#0: bytes = itxn[app_txn#0].ConfigAssetManager
                let app_txn.ConfigAssetReserve#0: bytes = itxn[app_txn#0].ConfigAssetReserve
                let app_txn.ConfigAssetFreeze#0: bytes = itxn[app_txn#0].ConfigAssetFreeze
                let app_txn.ConfigAssetClawback#0: bytes = itxn[app_txn#0].ConfigAssetClawback
                let app_txn.FreezeAsset#0: uint64 = itxn[app_txn#0].FreezeAsset
                let app_txn.FreezeAssetAccount#0: bytes = itxn[app_txn#0].FreezeAssetAccount
                let app_txn.FreezeAssetFrozen#0: bool = itxn[app_txn#0].FreezeAssetFrozen
                let app_txn.NumAssets#0: uint64 = itxn[app_txn#0].NumAssets
                let app_txn.NumApplications#0: uint64 = itxn[app_txn#0].NumApplications
                let app_txn.GlobalNumUint#0: uint64 = itxn[app_txn#0].GlobalNumUint
                let app_txn.GlobalNumByteSlice#0: uint64 = itxn[app_txn#0].GlobalNumByteSlice
                let app_txn.LocalNumUint#0: uint64 = itxn[app_txn#0].LocalNumUint
                let app_txn.LocalNumByteSlice#0: uint64 = itxn[app_txn#0].LocalNumByteSlice
                let app_txn.ExtraProgramPages#0: uint64 = itxn[app_txn#0].ExtraProgramPages
                let app_txn.Nonparticipation#0: bool = itxn[app_txn#0].Nonparticipation
                let app_txn.NumLogs#0: uint64 = itxn[app_txn#0].NumLogs
                let app_txn.CreatedAssetID#0: uint64 = itxn[app_txn#0].CreatedAssetID
                let app_txn.CreatedApplicationID#0: uint64 = itxn[app_txn#0].CreatedApplicationID
                let app_txn.LastLog#0: bytes = itxn[app_txn#0].LastLog
                let app_txn.StateProofPK#0: bytes = itxn[app_txn#0].StateProofPK
                let app_txn.NumApprovalProgramPages#0: uint64 = itxn[app_txn#0].NumApprovalProgramPages
                let app_txn.NumClearStateProgramPages#0: uint64 = itxn[app_txn#0].NumClearStateProgramPages
                (log app_txn.Note#0)
                let tmp%0#0: bytes = (itob app_txn.NumAppArgs#0)
                (log tmp%0#0)
                goto block@13
            block@13: // for_footer_L27
                goto block@14
            block@14: // for_increment_L27
                let range_item%0#5: uint64 = (+ range_item%0#1 1u)
                goto block@1
            block@15: // after_for_L27
                return 1u
    
    program clear-state:
        subroutine test_cases.inner_transactions.itxn_loop.MyContract.clear_state_program() -> bool:
            block@0: // L16
                return 1u