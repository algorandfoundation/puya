LOG_1ST_ARG_AND_APPROVE = b'\t6\x1a\x00\xb0\x81\x01'
ALWAYS_APPROVE = b'\t\x81\x01'

contract FieldTupleContract
{
  abimethod test_assign_tuple(): void
  {
    create_txns: tuple<inner_transaction_fields_appl,inner_transaction_fields_appl> = (create_inner_transaction(Fee=0u, TypeEnum=appl, ApprovalProgramPages=hex<"098101">, ClearStateProgramPages=hex<"098101">, OnCompletion=DeleteApplication, ApplicationArgs=(hex<"3161">, hex<"3261">)), create_inner_transaction(Fee=0u, TypeEnum=appl, ApprovalProgramPages=hex<"098101">, ClearStateProgramPages=hex<"098101">, OnCompletion=DeleteApplication, ApplicationArgs=(hex<"3361">, hex<"3461">, hex<"3561">), Note='different param set'))
    (txn_1, txn_2): tuple<inner_transaction_appl,inner_transaction_appl> = submit_txn(create_txns[0], create_txns[1])
    assert(txn_1.ApplicationArgs[0u] == '1a')
    assert(txn_1.ApplicationArgs[1u] == '2a')
    assert(txn_2.ApplicationArgs[0u] == '3a')
    assert(txn_2.ApplicationArgs[1u] == '4a')
    assert(txn_2.ApplicationArgs[2u] == '5a')
    update_inner_transaction(create_txns[0],ApplicationArgs=(hex<"3162">, hex<"3262">))
    update_inner_transaction(create_txns[1],ApplicationArgs=(hex<"3362">, hex<"3462">, hex<"3562">))
    (txn_1, txn_2): tuple<inner_transaction_appl,inner_transaction_appl> = submit_txn(create_txns[1], create_txns[0])
    assert(txn_2.ApplicationArgs[0u] == '1b')
    assert(txn_2.ApplicationArgs[1u] == '2b')
    assert(txn_1.ApplicationArgs[0u] == '3b')
    assert(txn_1.ApplicationArgs[1u] == '4b')
    assert(txn_1.ApplicationArgs[2u] == '5b')
    update_inner_transaction(create_txns[0],ApplicationArgs=(hex<"3163">, hex<"3263">))
    update_inner_transaction(create_txns[1],ApplicationArgs=(hex<"3363">, hex<"3463">, hex<"3563">))
    txn_tuple: tuple<inner_transaction_appl,inner_transaction_appl> = submit_txn(create_txns[0], create_txns[1])
    assert(txn_tuple[0].ApplicationArgs[0u] == '1c')
    assert(txn_tuple[0].ApplicationArgs[1u] == '2c')
    assert(txn_tuple[1].ApplicationArgs[0u] == '3c')
    assert(txn_tuple[1].ApplicationArgs[1u] == '4c')
    assert(txn_tuple[1].ApplicationArgs[2u] == '5c')
  }
  
  abimethod test_assign_tuple_mixed(): void
  {
    tuple_with_txn_fields: tuple<inner_transaction_fields_appl,bytes> = (create_inner_transaction(Fee=0u, TypeEnum=appl, ApprovalProgramPages=hex<"098101">, ClearStateProgramPages=hex<"098101">, OnCompletion=DeleteApplication, ApplicationArgs=(hex<"3161">, hex<"3261">)), hex<"736F6D65206F746865722076616C7565">)
    result_with_txn: tuple<inner_transaction_appl,bytes> = (submit_txn(tuple_with_txn_fields[0]), tuple_with_txn_fields[1])
    assert(result_with_txn[0].ApplicationArgs[0u] == '1a')
    assert(result_with_txn[0].ApplicationArgs[1u] == '2a')
    assert(result_with_txn[1] == 'some other value')
  }
}