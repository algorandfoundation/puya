{
  "version": 3,
  "sources": [
    "../asset_transfer.py"
  ],
  "mappings": ";;;;;;AASA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AACK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;;AAIO;AAKY;;AACC;;;;;AAFA;;;AADC;;;;;;;AADC;;;;;;;;AADL;;;AADV;;;;AAAA;;;AAAA;AAAA;;AAaJ;AACiB;AAAA;;AAAA;AACE;;;;;;AACF;;;;;;;AAHjB;;;;AAAA;;;AAAA;AAjBH;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1000"
    },
    "6": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "8": {
      "op": "bz main___algopy_default_create@5",
      "stack_out": []
    },
    "11": {
      "op": "pushbytes 0x48e9ed7c // method \"create_and_transfer()void\"",
      "defined_out": [
        "Method(create_and_transfer()void)"
      ],
      "stack_out": [
        "Method(create_and_transfer()void)"
      ]
    },
    "17": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_and_transfer()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_and_transfer()void)",
        "tmp%2#0"
      ]
    },
    "20": {
      "op": "match main_create_and_transfer_route@3",
      "stack_out": []
    },
    "24": {
      "op": "err"
    },
    "25": {
      "block": "main_create_and_transfer_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "30": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "31": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": []
    },
    "32": {
      "op": "b create_and_transfer"
    },
    "35": {
      "block": "main___algopy_default_create@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "37": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "38": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "40": {
      "op": "!",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "41": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "42": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "43": {
      "subroutine": "test_cases.inner_transactions.asset_transfer.CreateAndTransferContract.create_and_transfer[routing]",
      "params": {},
      "block": "create_and_transfer",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "44": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "46": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "47": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "49": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "51": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "52": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "54": {
      "op": "pushbytes \"TST\"",
      "defined_out": [
        "\"TST\""
      ],
      "stack_out": [
        "\"TST\""
      ]
    },
    "59": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "61": {
      "op": "pushbytes \"test\"",
      "defined_out": [
        "\"test\""
      ],
      "stack_out": [
        "\"test\""
      ]
    },
    "67": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "69": {
      "op": "intc_1 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "70": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "72": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "74": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "76": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "77": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "79": {
      "op": "itxn_submit"
    },
    "80": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "new_asset#0"
      ],
      "stack_out": [
        "new_asset#0"
      ]
    },
    "82": {
      "op": "itxn_begin"
    },
    "83": {
      "op": "dup",
      "defined_out": [
        "new_asset#0",
        "new_asset#0 (copy)"
      ],
      "stack_out": [
        "new_asset#0",
        "new_asset#0 (copy)"
      ]
    },
    "84": {
      "op": "asset_params_get AssetCreator",
      "defined_out": [
        "check%0#0",
        "new_asset#0",
        "value%0#0"
      ],
      "stack_out": [
        "new_asset#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "86": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "new_asset#0",
        "value%0#0"
      ]
    },
    "87": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "new_asset#0",
        "value%0#0"
      ],
      "stack_out": [
        "new_asset#0",
        "value%0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "89": {
      "op": "uncover 2",
      "stack_out": [
        "value%0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "new_asset#0"
      ]
    },
    "91": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "value%0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "93": {
      "op": "intc_1 // 1000",
      "stack_out": [
        "value%0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "1000"
      ]
    },
    "94": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "value%0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "96": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "value%0#0"
      ]
    },
    "98": {
      "op": "itxn_field AssetSender",
      "stack_out": []
    },
    "100": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "102": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "104": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "105": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "107": {
      "op": "itxn_submit"
    },
    "108": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "110": {
      "op": "return",
      "stack_out": []
    }
  }
}