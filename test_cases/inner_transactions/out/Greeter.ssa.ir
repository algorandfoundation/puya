contract test_cases.inner_transactions.c2c.Greeter:
    program approval:
        subroutine test_cases.inner_transactions.c2c.Greeter.approval_program() -> uint64:
            block@0: // L6
                let app_id%0#0: uint64 = (txn ApplicationID)
                goto app_id%0#0 ? block@2 : block@1
            block@1: // on_create_L7
                test_cases.inner_transactions.c2c.Greeter.__init__()
                goto block@2
            block@2: // entrypoint_L7
                let tmp%1#0: uint64 = (txn NumAppArgs)
                goto tmp%1#0 ? block@3 : block@8
            block@3: // abi_routing_L6
                let tmp%2#0: bytes = (txna ApplicationArgs 0)
                switch tmp%2#0 {method "bootstrap()uint64" => block@4, method "log_greetings(string)void" => block@5, * => block@6}
            block@4: // bootstrap_route_L10
                let tmp%3#0: uint64 = (txn OnCompletion)
                let tmp%4#0: uint64 = (== tmp%3#0 NoOp)
                (assert tmp%4#0) // OnCompletion is NoOp
                let tmp%5#0: uint64 = (txn ApplicationID)
                (assert tmp%5#0) // is not creating
                let tmp%6#0: uint64 = test_cases.inner_transactions.c2c.Greeter.bootstrap()
                let val_as_bytes%7#0: bytes = (itob tmp%6#0)
                let tmp%8#0: bytes = (concat 0x151f7c75 val_as_bytes%7#0)
                (log tmp%8#0)
                return 1u
            block@5: // log_greetings_route_L24
                let tmp%9#0: uint64 = (txn OnCompletion)
                let tmp%10#0: uint64 = (== tmp%9#0 NoOp)
                (assert tmp%10#0) // OnCompletion is NoOp
                let tmp%11#0: uint64 = (txn ApplicationID)
                (assert tmp%11#0) // is not creating
                let tmp%12#0: bytes = (txna ApplicationArgs 1)
                test_cases.inner_transactions.c2c.Greeter.log_greetings(tmp%12#0)
                return 1u
            block@6: // switch_case_default_L6
                goto block@7
            block@7: // switch_case_next_L6
                goto block@11
            block@8: // bare_routing_L6
                let tmp%13#0: uint64 = (txn OnCompletion)
                switch tmp%13#0 {0u => block@9, * => block@10}
            block@9: // create_L6
                let tmp%14#0: uint64 = (txn ApplicationID)
                let tmp%15#0: uint64 = (! tmp%14#0)
                (assert tmp%15#0) // is creating
                return 1u
            block@10: // reject_bare_on_completion_L6
                fail // reject transaction
            block@11: // after_if_else_L6
                fail // reject transaction
        
        subroutine test_cases.inner_transactions.c2c.Greeter.bootstrap() -> uint64:
            block@0: // L10
                let (hello_app_value%0#0: uint64, hello_app_exists%1#0: uint64) = (app_global_get_ex 0u "hello_app")
                (assert hello_app_exists%1#0) // check hello_app exists
                let tmp%2#0: uint64 = (! hello_app_value%0#0)
                (assert tmp%2#0) // already bootstrapped
                itxn_begin
                let inner_txn_params%4%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%4%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%4%%param_ApprovalProgramPages_idx_0#0: bytes = 0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089
                let inner_txn_params%4%%ApprovalProgramPages_length#0: uint64 = 1u
                let inner_txn_params%4%%param_ClearStateProgramPages_idx_0#0: bytes = 0x0a8101
                let inner_txn_params%4%%ClearStateProgramPages_length#0: uint64 = 1u
                let inner_txn_params%4%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%4%%Fee_length#0: uint64 = 1u
                let inner_txn_params%4%%Sender_length#0: uint64 = 0u
                let inner_txn_params%4%%Note_length#0: uint64 = 0u
                let inner_txn_params%4%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%4%%Amount_length#0: uint64 = 0u
                let inner_txn_params%4%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%4%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%4%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%4%%Type_length#0: uint64 = 0u
                let inner_txn_params%4%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%4%%ApplicationID_length#0: uint64 = 0u
                let inner_txn_params%4%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%4%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%4%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%4%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%4%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%4%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%4%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%4%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%4%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%4%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%4%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%4%%ApplicationArgs_length#0: uint64 = 0u
                let inner_txn_params%4%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%4%%Assets_length#0: uint64 = 0u
                let inner_txn_params%4%%Applications_length#0: uint64 = 0u
                ((itxn_field Fee) inner_txn_params%4%%param_Fee_idx_0#0)
                ((itxn_field ClearStateProgramPages) inner_txn_params%4%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) inner_txn_params%4%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) inner_txn_params%4%%param_TypeEnum_idx_0#0)
                goto block@1
            block@1: // next_txn_L14
                itxn_submit
                let %%inner_txn_submit_id#0: uint64 = 1u
                let submit_result_0%3%%Sender#0: bytes = (itxn Sender)
                let submit_result_0%3%%Fee#0: uint64 = (itxn Fee)
                let submit_result_0%3%%FirstValid#0: uint64 = (itxn FirstValid)
                let submit_result_0%3%%FirstValidTime#0: uint64 = (itxn FirstValidTime)
                let submit_result_0%3%%LastValid#0: uint64 = (itxn LastValid)
                let submit_result_0%3%%Note#0: bytes = (itxn Note)
                let submit_result_0%3%%Lease#0: bytes = (itxn Lease)
                let submit_result_0%3%%Receiver#0: bytes = (itxn Receiver)
                let submit_result_0%3%%Amount#0: uint64 = (itxn Amount)
                let submit_result_0%3%%CloseRemainderTo#0: bytes = (itxn CloseRemainderTo)
                let submit_result_0%3%%VotePK#0: bytes = (itxn VotePK)
                let submit_result_0%3%%SelectionPK#0: bytes = (itxn SelectionPK)
                let submit_result_0%3%%VoteFirst#0: uint64 = (itxn VoteFirst)
                let submit_result_0%3%%VoteLast#0: uint64 = (itxn VoteLast)
                let submit_result_0%3%%VoteKeyDilution#0: uint64 = (itxn VoteKeyDilution)
                let submit_result_0%3%%Type#0: bytes = (itxn Type)
                let submit_result_0%3%%TypeEnum#0: uint64 = (itxn TypeEnum)
                let submit_result_0%3%%XferAsset#0: uint64 = (itxn XferAsset)
                let submit_result_0%3%%AssetAmount#0: uint64 = (itxn AssetAmount)
                let submit_result_0%3%%AssetSender#0: bytes = (itxn AssetSender)
                let submit_result_0%3%%AssetReceiver#0: bytes = (itxn AssetReceiver)
                let submit_result_0%3%%AssetCloseTo#0: bytes = (itxn AssetCloseTo)
                let submit_result_0%3%%GroupIndex#0: uint64 = (itxn GroupIndex)
                let submit_result_0%3%%TxID#0: bytes = (itxn TxID)
                let submit_result_0%3%%ApplicationID#0: uint64 = (itxn ApplicationID)
                let submit_result_0%3%%OnCompletion#0: uint64 = (itxn OnCompletion)
                let submit_result_0%3%%NumAppArgs#0: uint64 = (itxn NumAppArgs)
                let submit_result_0%3%%NumAccounts#0: uint64 = (itxn NumAccounts)
                let submit_result_0%3%%ApprovalProgram#0: bytes = (itxn ApprovalProgram)
                let submit_result_0%3%%ClearStateProgram#0: bytes = (itxn ClearStateProgram)
                let submit_result_0%3%%RekeyTo#0: bytes = (itxn RekeyTo)
                let submit_result_0%3%%ConfigAsset#0: uint64 = (itxn ConfigAsset)
                let submit_result_0%3%%ConfigAssetTotal#0: uint64 = (itxn ConfigAssetTotal)
                let submit_result_0%3%%ConfigAssetDecimals#0: uint64 = (itxn ConfigAssetDecimals)
                let submit_result_0%3%%ConfigAssetDefaultFrozen#0: uint64 = (itxn ConfigAssetDefaultFrozen)
                let submit_result_0%3%%ConfigAssetUnitName#0: bytes = (itxn ConfigAssetUnitName)
                let submit_result_0%3%%ConfigAssetName#0: bytes = (itxn ConfigAssetName)
                let submit_result_0%3%%ConfigAssetURL#0: bytes = (itxn ConfigAssetURL)
                let submit_result_0%3%%ConfigAssetMetadataHash#0: bytes = (itxn ConfigAssetMetadataHash)
                let submit_result_0%3%%ConfigAssetManager#0: bytes = (itxn ConfigAssetManager)
                let submit_result_0%3%%ConfigAssetReserve#0: bytes = (itxn ConfigAssetReserve)
                let submit_result_0%3%%ConfigAssetFreeze#0: bytes = (itxn ConfigAssetFreeze)
                let submit_result_0%3%%ConfigAssetClawback#0: bytes = (itxn ConfigAssetClawback)
                let submit_result_0%3%%FreezeAsset#0: uint64 = (itxn FreezeAsset)
                let submit_result_0%3%%FreezeAssetAccount#0: bytes = (itxn FreezeAssetAccount)
                let submit_result_0%3%%FreezeAssetFrozen#0: uint64 = (itxn FreezeAssetFrozen)
                let submit_result_0%3%%NumAssets#0: uint64 = (itxn NumAssets)
                let submit_result_0%3%%NumApplications#0: uint64 = (itxn NumApplications)
                let submit_result_0%3%%GlobalNumUint#0: uint64 = (itxn GlobalNumUint)
                let submit_result_0%3%%GlobalNumByteSlice#0: uint64 = (itxn GlobalNumByteSlice)
                let submit_result_0%3%%LocalNumUint#0: uint64 = (itxn LocalNumUint)
                let submit_result_0%3%%LocalNumByteSlice#0: uint64 = (itxn LocalNumByteSlice)
                let submit_result_0%3%%ExtraProgramPages#0: uint64 = (itxn ExtraProgramPages)
                let submit_result_0%3%%Nonparticipation#0: uint64 = (itxn Nonparticipation)
                let submit_result_0%3%%NumLogs#0: uint64 = (itxn NumLogs)
                let submit_result_0%3%%CreatedAssetID#0: uint64 = (itxn CreatedAssetID)
                let submit_result_0%3%%CreatedApplicationID#0: uint64 = (itxn CreatedApplicationID)
                let submit_result_0%3%%LastLog#0: bytes = (itxn LastLog)
                let submit_result_0%3%%StateProofPK#0: bytes = (itxn StateProofPK)
                let submit_result_0%3%%NumApprovalProgramPages#0: uint64 = (itxn NumApprovalProgramPages)
                let submit_result_0%3%%NumClearStateProgramPages#0: uint64 = (itxn NumClearStateProgramPages)
                (app_global_put "hello_app" submit_result_0%3%%CreatedApplicationID#0)
                let (hello_app_value%5#0: uint64, hello_app_exists%6#0: uint64) = (app_global_get_ex 0u "hello_app")
                (assert hello_app_exists%6#0) // check hello_app exists
                return hello_app_value%5#0
        
        subroutine test_cases.inner_transactions.c2c.Greeter.log_greetings(name: bytes) -> void:
            block@0: // L24
                itxn_begin
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let (hello_app_value%1#0: uint64, hello_app_exists%2#0: uint64) = (app_global_get_ex 0u "hello_app")
                (assert hello_app_exists%2#0) // check hello_app exists
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = hello_app_value%1#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "hello(string)string"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = name#0
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                goto block@1
            block@1: // next_txn_L26
                itxn_submit
                let %%inner_txn_submit_id#0: uint64 = 1u
                let hello_call%%Sender#0: bytes = (itxn Sender)
                let hello_call%%Fee#0: uint64 = (itxn Fee)
                let hello_call%%FirstValid#0: uint64 = (itxn FirstValid)
                let hello_call%%FirstValidTime#0: uint64 = (itxn FirstValidTime)
                let hello_call%%LastValid#0: uint64 = (itxn LastValid)
                let hello_call%%Note#0: bytes = (itxn Note)
                let hello_call%%Lease#0: bytes = (itxn Lease)
                let hello_call%%Receiver#0: bytes = (itxn Receiver)
                let hello_call%%Amount#0: uint64 = (itxn Amount)
                let hello_call%%CloseRemainderTo#0: bytes = (itxn CloseRemainderTo)
                let hello_call%%VotePK#0: bytes = (itxn VotePK)
                let hello_call%%SelectionPK#0: bytes = (itxn SelectionPK)
                let hello_call%%VoteFirst#0: uint64 = (itxn VoteFirst)
                let hello_call%%VoteLast#0: uint64 = (itxn VoteLast)
                let hello_call%%VoteKeyDilution#0: uint64 = (itxn VoteKeyDilution)
                let hello_call%%Type#0: bytes = (itxn Type)
                let hello_call%%TypeEnum#0: uint64 = (itxn TypeEnum)
                let hello_call%%XferAsset#0: uint64 = (itxn XferAsset)
                let hello_call%%AssetAmount#0: uint64 = (itxn AssetAmount)
                let hello_call%%AssetSender#0: bytes = (itxn AssetSender)
                let hello_call%%AssetReceiver#0: bytes = (itxn AssetReceiver)
                let hello_call%%AssetCloseTo#0: bytes = (itxn AssetCloseTo)
                let hello_call%%GroupIndex#0: uint64 = (itxn GroupIndex)
                let hello_call%%TxID#0: bytes = (itxn TxID)
                let hello_call%%ApplicationID#0: uint64 = (itxn ApplicationID)
                let hello_call%%OnCompletion#0: uint64 = (itxn OnCompletion)
                let hello_call%%NumAppArgs#0: uint64 = (itxn NumAppArgs)
                let hello_call%%NumAccounts#0: uint64 = (itxn NumAccounts)
                let hello_call%%ApprovalProgram#0: bytes = (itxn ApprovalProgram)
                let hello_call%%ClearStateProgram#0: bytes = (itxn ClearStateProgram)
                let hello_call%%RekeyTo#0: bytes = (itxn RekeyTo)
                let hello_call%%ConfigAsset#0: uint64 = (itxn ConfigAsset)
                let hello_call%%ConfigAssetTotal#0: uint64 = (itxn ConfigAssetTotal)
                let hello_call%%ConfigAssetDecimals#0: uint64 = (itxn ConfigAssetDecimals)
                let hello_call%%ConfigAssetDefaultFrozen#0: uint64 = (itxn ConfigAssetDefaultFrozen)
                let hello_call%%ConfigAssetUnitName#0: bytes = (itxn ConfigAssetUnitName)
                let hello_call%%ConfigAssetName#0: bytes = (itxn ConfigAssetName)
                let hello_call%%ConfigAssetURL#0: bytes = (itxn ConfigAssetURL)
                let hello_call%%ConfigAssetMetadataHash#0: bytes = (itxn ConfigAssetMetadataHash)
                let hello_call%%ConfigAssetManager#0: bytes = (itxn ConfigAssetManager)
                let hello_call%%ConfigAssetReserve#0: bytes = (itxn ConfigAssetReserve)
                let hello_call%%ConfigAssetFreeze#0: bytes = (itxn ConfigAssetFreeze)
                let hello_call%%ConfigAssetClawback#0: bytes = (itxn ConfigAssetClawback)
                let hello_call%%FreezeAsset#0: uint64 = (itxn FreezeAsset)
                let hello_call%%FreezeAssetAccount#0: bytes = (itxn FreezeAssetAccount)
                let hello_call%%FreezeAssetFrozen#0: uint64 = (itxn FreezeAssetFrozen)
                let hello_call%%NumAssets#0: uint64 = (itxn NumAssets)
                let hello_call%%NumApplications#0: uint64 = (itxn NumApplications)
                let hello_call%%GlobalNumUint#0: uint64 = (itxn GlobalNumUint)
                let hello_call%%GlobalNumByteSlice#0: uint64 = (itxn GlobalNumByteSlice)
                let hello_call%%LocalNumUint#0: uint64 = (itxn LocalNumUint)
                let hello_call%%LocalNumByteSlice#0: uint64 = (itxn LocalNumByteSlice)
                let hello_call%%ExtraProgramPages#0: uint64 = (itxn ExtraProgramPages)
                let hello_call%%Nonparticipation#0: uint64 = (itxn Nonparticipation)
                let hello_call%%NumLogs#0: uint64 = (itxn NumLogs)
                let hello_call%%CreatedAssetID#0: uint64 = (itxn CreatedAssetID)
                let hello_call%%CreatedApplicationID#0: uint64 = (itxn CreatedApplicationID)
                let hello_call%%LastLog#0: bytes = (itxn LastLog)
                let hello_call%%StateProofPK#0: bytes = (itxn StateProofPK)
                let hello_call%%NumApprovalProgramPages#0: uint64 = (itxn NumApprovalProgramPages)
                let hello_call%%NumClearStateProgramPages#0: uint64 = (itxn NumClearStateProgramPages)
                let awst_tmp%3#0: bytes = hello_call%%LastLog#0
                let tmp%4#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%5#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%6#0: uint64 = (== tmp%5#0 0x151f7c75)
                let (value%7#0: bytes, check%8#0: uint64) = (tmp%4#0, tmp%6#0)
                (assert check%8#0) // ARC4 prefix is valid
                let greeting#0: bytes = value%7#0
                let tmp%9#0: bytes = (concat "HelloWorld returned: " "")
                let tmp%10#0: bytes = ((extract 2 0) greeting#0)
                let tmp%11#0: bytes = (concat tmp%9#0 tmp%10#0)
                (log tmp%11#0)
                return 
        
        subroutine test_cases.inner_transactions.c2c.Greeter.__init__() -> void:
            block@0: // L7
                (app_global_put "hello_app" 0u)
                return 
    
    program clear-state:
        subroutine test_cases.inner_transactions.c2c.Greeter.clear_state_program() -> uint64:
            block@0: // L6
                return 1u