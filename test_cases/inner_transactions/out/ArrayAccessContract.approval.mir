// Op                                                                     //                                               Op Description                       Stack (out)                                                             X stack                                                          Source code                                                                                          Source line

#pragma version 10

// test_cases.inner_transactions.array_access.ArrayAccessContract.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                                        //                                                                                    {txn}                                                                                                                                    class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store tmp%0#0 to l-stack (no copy)      tmp%0#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    //                                                                    virtual: load tmp%0#0 from l-stack (no copy)     tmp%0#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    bz main_bare_routing@5                                                //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    // Implicit fall through to main_abi_routing@1                        //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20

main_abi_routing@1:
    txna ApplicationArgs 0                                                //                                                                                    {txna}                                                                                                                                   class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store tmp%1#0 to l-stack (no copy)      tmp%1#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    method "test_branching_array_call(bool)void"                          //                                                                                    tmp%1#0,method<"test_branching_array_call(bool)void">                                                                                    class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    swap                                                                  //                                               load tmp%1#0 from l-stack (no copy)  method<"test_branching_array_call(bool)void">,tmp%1#0                                                                                    class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    match main_test_branching_array_call_route@2                          //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    err // reject transaction                                             //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20

main_test_branching_array_call_route@2:
    txn OnCompletion                                                      //                                                                                    {txn}                                                                                                                                    arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    //                                                                    virtual: store tmp%2#0 to l-stack (no copy)      tmp%2#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    //                                                                    virtual: load tmp%2#0 from l-stack (no copy)     tmp%2#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    !                                                                     //                                                                                    {!}                                                                                                                                      arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    //                                                                    virtual: store tmp%3#0 to l-stack (no copy)      tmp%3#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    //                                                                    virtual: load tmp%3#0 from l-stack (no copy)     tmp%3#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    assert // OnCompletion is NoOp                                        //                                                                                                                                                                                                                             arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    txn ApplicationID                                                     //                                                                                    {txn}                                                                                                                                    arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    //                                                                    virtual: store tmp%4#0 to l-stack (no copy)      tmp%4#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    //                                                                    virtual: load tmp%4#0 from l-stack (no copy)     tmp%4#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    assert // is not creating                                             //                                                                                                                                                                                                                             arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    txna ApplicationArgs 1                                                //                                                                                    {txna}                                                                                                                                   class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store tmp%5#0 to l-stack (no copy)      tmp%5#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    //                                                                    virtual: load tmp%5#0 from l-stack (no copy)     tmp%5#0                                                                                                      arc4.abimethod                                                   inner_transactions/array_access.py:21
    callsub test_branching_array_call                                     //                                                                                                                                                                                                                             arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    int 1                                                                 //                                                                                    1                                                                                                                                        arc4.abimethod                                                                                       inner_transactions/array_access.py:21
    return                                                                //                                                                                                                                                                                                                             arc4.abimethod                                                                                       inner_transactions/array_access.py:21

main_bare_routing@5:
    txn OnCompletion                                                      //                                                                                    {txn}                                                                                                                                    class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store tmp%6#0 to l-stack (no copy)      tmp%6#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    //                                                                    virtual: load tmp%6#0 from l-stack (no copy)     tmp%6#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    !                                                                     //                                                                                    {!}                                                                                                                                      class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store not%tmp%6#0 to l-stack (no copy)  not%tmp%6#0                                                                                                  class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    //                                                                    virtual: load not%tmp%6#0 from l-stack (no copy) not%tmp%6#0                                                                                                  class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    assert // reject transaction                                          //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    txn ApplicationID                                                     //                                                                                    {txn}                                                                                                                                    class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store tmp%7#0 to l-stack (no copy)      tmp%7#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    //                                                                    virtual: load tmp%7#0 from l-stack (no copy)     tmp%7#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    !                                                                     //                                                                                    {!}                                                                                                                                      class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    //                                                                    virtual: store tmp%8#0 to l-stack (no copy)      tmp%8#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    //                                                                    virtual: load tmp%8#0 from l-stack (no copy)     tmp%8#0                                                                                                      class ArrayAccessContract(ARC4Contract):                         inner_transactions/array_access.py:20
    assert // is creating                                                 //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    int 1                                                                 //                                                                                    1                                                                                                                                        class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20
    return                                                                //                                                                                                                                                                                                                             class ArrayAccessContract(ARC4Contract):                                                             inner_transactions/array_access.py:20


// test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call(maybe: bytes) -> void:
test_branching_array_call:
    proto 1 0                                                             //                                                                                    (𝕡) maybe#0 |                                                                                                                            @arc4.abimethod\ndef test_branching_array_call(self, maybe: arc4.Bool) -> None:                      inner_transactions/array_access.py:21-22

test_branching_array_call_block@0:
    frame_dig -1                                                          //                                               load maybe#0 from parameters         (𝕡) maybe#0 | maybe#0                                                                                                                    maybe                                                                                                inner_transactions/array_access.py:23
    byte 0x00                                                             //                                                                                    (𝕡) maybe#0 | maybe#0,0x00                                                                                                               maybe                                                                                                inner_transactions/array_access.py:23
    !=                                                                    //                                                                                    (𝕡) maybe#0 | {!=}                                                                                                                       maybe                                                                                                inner_transactions/array_access.py:23
    dup                                                                   //                                               store tmp%0#0 to l-stack (copy)      (𝕡) maybe#0 | tmp%0#0,tmp%0#0                                                                                                            maybe                                                                                                inner_transactions/array_access.py:23
    swap                                                                  //                                               store tmp%0#0 to f-stack             (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%0#0                                                                                                      maybe                                                                                                inner_transactions/array_access.py:23
    //                                                                    virtual: load tmp%0#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%0#0                                                                          if maybe:                                                        inner_transactions/array_access.py:23
    bz test_branching_array_call_else_body@3                              //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              if maybe:                                                                                            inner_transactions/array_access.py:23
    // Implicit fall through to test_branching_array_call_if_body@1       //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              if maybe:                                                                                            inner_transactions/array_access.py:23

test_branching_array_call_if_body@1:
    itxn_begin                                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              itxn.ApplicationCall(\napproval_program=ALWAYS_APPROVE,\nclear_state_program=ALWAYS_APPROVE,\napp... inner_transactions/array_access.py:24-28
    byte 0x31                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x31                                                                                                         Bytes(b"1")                                                                                          inner_transactions/array_access.py:27
    itxn_field ApplicationArgs                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x32                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x32                                                                                                         Bytes(b"2")                                                                                          inner_transactions/array_access.py:27
    itxn_field ApplicationArgs                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x098101                                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x098101                                                                                                     ALWAYS_APPROVE                                                                                       inner_transactions/array_access.py:26
    itxn_field ClearStateProgramPages                                     //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x098101                                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x098101                                                                                                     ALWAYS_APPROVE                                                                                       inner_transactions/array_access.py:25
    itxn_field ApprovalProgramPages                                       //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    int appl                                                              //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | appl                                                                                                         itxn.ApplicationCall                                                                                 inner_transactions/array_access.py:24
    itxn_field TypeEnum                                                   //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    int 0                                                                 //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0                                                                                                            itxn.ApplicationCall                                                                                 inner_transactions/array_access.py:24
    itxn_field Fee                                                        //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    itxn_submit                                                           //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              itxn.ApplicationCall(\napproval_program=ALWAYS_APPROVE,\nclear_state_program=ALWAYS_APPROVE,\napp... inner_transactions/array_access.py:24-28
    b test_branching_array_call_after_if_else@5                           //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |

test_branching_array_call_else_body@3:
    itxn_begin                                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              itxn.ApplicationCall(\napproval_program=ALWAYS_APPROVE,\nclear_state_program=ALWAYS_APPROVE,\napp... inner_transactions/array_access.py:30-35
    byte 0x646966666572656e7420706172616d20736574                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x646966666572656e7420706172616d20736574                                                                     b"different param set"                                                                               inner_transactions/array_access.py:34
    itxn_field Note                                                       //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x33                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x33                                                                                                         Bytes(b"3")                                                                                          inner_transactions/array_access.py:33
    itxn_field ApplicationArgs                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x34                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x34                                                                                                         Bytes(b"4")                                                                                          inner_transactions/array_access.py:33
    itxn_field ApplicationArgs                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x35                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x35                                                                                                         Bytes(b"5")                                                                                          inner_transactions/array_access.py:33
    itxn_field ApplicationArgs                                            //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x098101                                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x098101                                                                                                     ALWAYS_APPROVE                                                                                       inner_transactions/array_access.py:32
    itxn_field ClearStateProgramPages                                     //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    byte 0x098101                                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0x098101                                                                                                     ALWAYS_APPROVE                                                                                       inner_transactions/array_access.py:31
    itxn_field ApprovalProgramPages                                       //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    int appl                                                              //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | appl                                                                                                         itxn.ApplicationCall                                                                                 inner_transactions/array_access.py:30
    itxn_field TypeEnum                                                   //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    int 0                                                                 //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | 0                                                                                                            itxn.ApplicationCall                                                                                 inner_transactions/array_access.py:30
    itxn_field Fee                                                        //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |
    itxn_submit                                                           //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              itxn.ApplicationCall(\napproval_program=ALWAYS_APPROVE,\nclear_state_program=ALWAYS_APPROVE,\napp... inner_transactions/array_access.py:30-35
    // Implicit fall through to test_branching_array_call_after_if_else@5 //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |

test_branching_array_call_after_if_else@5:
    frame_dig 0                                                           //                                               load tmp%0#0 from f-stack            (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%0#0                                                                                                      if maybe:                                                                                            inner_transactions/array_access.py:36
    bz test_branching_array_call_else_body@7                              //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              if maybe:                                                                                            inner_transactions/array_access.py:36
    // Implicit fall through to test_branching_array_call_if_body@6       //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              if maybe:                                                                                            inner_transactions/array_access.py:36

test_branching_array_call_if_body@6:
    itxna ApplicationArgs 0                                               //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {itxna}                                                                                                      create_app_txn.app_args(0)                                                                           inner_transactions/array_access.py:37
    //                                                                    virtual: store tmp%2#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%2#0                                                                          create_app_txn.app_args(0)                                       inner_transactions/array_access.py:37
    //                                                                    virtual: load tmp%2#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%2#0                                                                          create_app_txn.app_args(0) == b"1", "correct args used 1"        inner_transactions/array_access.py:37
    byte 0x31                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%2#0,0x31                                                                                                 b"1"                                                                                                 inner_transactions/array_access.py:37
    ==                                                                    //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {==}                                                                                                         create_app_txn.app_args(0) == b"1", "correct args used 1"                                            inner_transactions/array_access.py:37
    //                                                                    virtual: store tmp%3#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%3#0                                                                          create_app_txn.app_args(0) == b"1", "correct args used 1"        inner_transactions/array_access.py:37
    //                                                                    virtual: load tmp%3#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%3#0                                                                          assert create_app_txn.app_args(0) == b"1", "correct args used 1" inner_transactions/array_access.py:37
    assert // correct args used 1                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              assert create_app_txn.app_args(0) == b"1", "correct args used 1"                                     inner_transactions/array_access.py:37
    itxna ApplicationArgs 1                                               //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {itxna}                                                                                                      create_app_txn.app_args(1)                                                                           inner_transactions/array_access.py:38
    //                                                                    virtual: store tmp%4#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%4#0                                                                          create_app_txn.app_args(1)                                       inner_transactions/array_access.py:38
    //                                                                    virtual: load tmp%4#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%4#0                                                                          create_app_txn.app_args(1) == b"2", "correct args used 2"        inner_transactions/array_access.py:38
    byte 0x32                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%4#0,0x32                                                                                                 b"2"                                                                                                 inner_transactions/array_access.py:38
    ==                                                                    //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {==}                                                                                                         create_app_txn.app_args(1) == b"2", "correct args used 2"                                            inner_transactions/array_access.py:38
    //                                                                    virtual: store tmp%5#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%5#0                                                                          create_app_txn.app_args(1) == b"2", "correct args used 2"        inner_transactions/array_access.py:38
    //                                                                    virtual: load tmp%5#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%5#0                                                                          assert create_app_txn.app_args(1) == b"2", "correct args used 2" inner_transactions/array_access.py:38
    assert // correct args used 2                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              assert create_app_txn.app_args(1) == b"2", "correct args used 2"                                     inner_transactions/array_access.py:38
    b test_branching_array_call_after_if_else@8                           //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |

test_branching_array_call_else_body@7:
    itxna ApplicationArgs 0                                               //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {itxna}                                                                                                      create_app_txn.app_args(0)                                                                           inner_transactions/array_access.py:40
    //                                                                    virtual: store tmp%6#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%6#0                                                                          create_app_txn.app_args(0)                                       inner_transactions/array_access.py:40
    //                                                                    virtual: load tmp%6#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%6#0                                                                          create_app_txn.app_args(0) == b"3", "correct args used 1"        inner_transactions/array_access.py:40
    byte 0x33                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%6#0,0x33                                                                                                 b"3"                                                                                                 inner_transactions/array_access.py:40
    ==                                                                    //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {==}                                                                                                         create_app_txn.app_args(0) == b"3", "correct args used 1"                                            inner_transactions/array_access.py:40
    //                                                                    virtual: store tmp%7#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%7#0                                                                          create_app_txn.app_args(0) == b"3", "correct args used 1"        inner_transactions/array_access.py:40
    //                                                                    virtual: load tmp%7#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%7#0                                                                          assert create_app_txn.app_args(0) == b"3", "correct args used 1" inner_transactions/array_access.py:40
    assert // correct args used 1                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              assert create_app_txn.app_args(0) == b"3", "correct args used 1"                                     inner_transactions/array_access.py:40
    itxna ApplicationArgs 1                                               //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {itxna}                                                                                                      create_app_txn.app_args(1)                                                                           inner_transactions/array_access.py:41
    //                                                                    virtual: store tmp%8#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%8#0                                                                          create_app_txn.app_args(1)                                       inner_transactions/array_access.py:41
    //                                                                    virtual: load tmp%8#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%8#0                                                                          create_app_txn.app_args(1) == b"4", "correct args used 2"        inner_transactions/array_access.py:41
    byte 0x34                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%8#0,0x34                                                                                                 b"4"                                                                                                 inner_transactions/array_access.py:41
    ==                                                                    //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {==}                                                                                                         create_app_txn.app_args(1) == b"4", "correct args used 2"                                            inner_transactions/array_access.py:41
    //                                                                    virtual: store tmp%9#0 to l-stack (no copy)      (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%9#0                                                                          create_app_txn.app_args(1) == b"4", "correct args used 2"        inner_transactions/array_access.py:41
    //                                                                    virtual: load tmp%9#0 from l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%9#0                                                                          assert create_app_txn.app_args(1) == b"4", "correct args used 2" inner_transactions/array_access.py:41
    assert // correct args used 2                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              assert create_app_txn.app_args(1) == b"4", "correct args used 2"                                     inner_transactions/array_access.py:41
    itxna ApplicationArgs 2                                               //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {itxna}                                                                                                      create_app_txn.app_args(2)                                                                           inner_transactions/array_access.py:42
    //                                                                    virtual: store tmp%10#0 to l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%10#0                                                                         create_app_txn.app_args(2)                                       inner_transactions/array_access.py:42
    //                                                                    virtual: load tmp%10#0 from l-stack (no copy)    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%10#0                                                                         create_app_txn.app_args(2) == b"5", "correct args used 3"        inner_transactions/array_access.py:42
    byte 0x35                                                             //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%10#0,0x35                                                                                                b"5"                                                                                                 inner_transactions/array_access.py:42
    ==                                                                    //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 | {==}                                                                                                         create_app_txn.app_args(2) == b"5", "correct args used 3"                                            inner_transactions/array_access.py:42
    //                                                                    virtual: store tmp%11#0 to l-stack (no copy)     (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%11#0                                                                         create_app_txn.app_args(2) == b"5", "correct args used 3"        inner_transactions/array_access.py:42
    //                                                                    virtual: load tmp%11#0 from l-stack (no copy)    (𝕡) maybe#0 | (𝕗) tmp%0#0 | tmp%11#0                                                                         assert create_app_txn.app_args(2) == b"5", "correct args used 3" inner_transactions/array_access.py:42
    assert // correct args used 3                                         //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |                                                                                                              assert create_app_txn.app_args(2) == b"5", "correct args used 3"                                     inner_transactions/array_access.py:42
    // Implicit fall through to test_branching_array_call_after_if_else@8 //                                                                                    (𝕡) maybe#0 | (𝕗) tmp%0#0 |

test_branching_array_call_after_if_else@8:
    retsub                                                                //

