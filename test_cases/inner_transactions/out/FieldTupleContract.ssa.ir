contract test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract:
    program approval:
        subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.approval_program() -> bool:
            block@0: // L21
                let tmp%0#0: bool = (txn NumAppArgs)
                goto tmp%0#0 ? block@1 : block@6
            block@1: // abi_routing_L21
                let tmp%1#0: bytes = (txna ApplicationArgs 0)
                switch tmp%1#0 {method "test_assign_tuple()void" => block@2, method "test_assign_tuple_mixed()void" => block@3, * => block@4}
            block@2: // test_assign_tuple_route_L22
                let tmp%2#0: uint64 = (txn OnCompletion)
                let tmp%3#0: bool = (== tmp%2#0 NoOp)
                (assert tmp%3#0) // OnCompletion is NoOp
                let tmp%4#0: bool = (txn ApplicationID)
                (assert tmp%4#0) // is not creating
                test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple()
                return 1u
            block@3: // test_assign_tuple_mixed_route_L69
                let tmp%5#0: uint64 = (txn OnCompletion)
                let tmp%6#0: bool = (== tmp%5#0 NoOp)
                (assert tmp%6#0) // OnCompletion is NoOp
                let tmp%7#0: bool = (txn ApplicationID)
                (assert tmp%7#0) // is not creating
                test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple_mixed()
                return 1u
            block@4: // switch_case_default_L21
                goto block@5
            block@5: // switch_case_next_L21
                fail // reject transaction
            block@6: // bare_routing_L21
                let tmp%8#0: uint64 = (txn OnCompletion)
                switch tmp%8#0 {0u => block@7, * => block@8}
            block@7: // create_L21
                let tmp%9#0: bool = (txn ApplicationID)
                let tmp%10#0: bool = (! tmp%9#0)
                (assert tmp%10#0) // is creating
                return 1u
            block@8: // reject_bare_on_completion_L21
                fail // reject transaction
        
        subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple() -> void:
            block@0: // L22
                let create_txns.0#0: itxn_field_set = itxn_field_set(0)
                let create_txns.0%%param_Fee_idx_0#0: uint64 = 0u
                let create_txns.0%%Fee_length#0: uint64 = 1u
                let create_txns.0%%param_TypeEnum_idx_0#0: uint64 = appl
                let create_txns.0%%TypeEnum_length#0: uint64 = 1u
                let create_txns.0%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let create_txns.0%%ApprovalProgramPages_length#0: uint64 = 1u
                let create_txns.0%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let create_txns.0%%ClearStateProgramPages_length#0: uint64 = 1u
                let create_txns.0%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let create_txns.0%%OnCompletion_length#0: uint64 = 1u
                let create_txns.0%%param_ApplicationArgs_idx_0#0: bytes = 0x3161
                let create_txns.0%%param_ApplicationArgs_idx_1#0: bytes = 0x3261
                let create_txns.0%%ApplicationArgs_length#0: uint64 = 2u
                let create_txns.0%%Sender_length#0: uint64 = 0u
                let create_txns.0%%Note_length#0: uint64 = 0u
                let create_txns.0%%Receiver_length#0: uint64 = 0u
                let create_txns.0%%Amount_length#0: uint64 = 0u
                let create_txns.0%%CloseRemainderTo_length#0: uint64 = 0u
                let create_txns.0%%VotePK_length#0: uint64 = 0u
                let create_txns.0%%SelectionPK_length#0: uint64 = 0u
                let create_txns.0%%VoteFirst_length#0: uint64 = 0u
                let create_txns.0%%VoteLast_length#0: uint64 = 0u
                let create_txns.0%%VoteKeyDilution_length#0: uint64 = 0u
                let create_txns.0%%Type_length#0: uint64 = 0u
                let create_txns.0%%XferAsset_length#0: uint64 = 0u
                let create_txns.0%%AssetAmount_length#0: uint64 = 0u
                let create_txns.0%%AssetSender_length#0: uint64 = 0u
                let create_txns.0%%AssetReceiver_length#0: uint64 = 0u
                let create_txns.0%%AssetCloseTo_length#0: uint64 = 0u
                let create_txns.0%%ApplicationID_length#0: uint64 = 0u
                let create_txns.0%%ApprovalProgram_length#0: uint64 = 0u
                let create_txns.0%%ClearStateProgram_length#0: uint64 = 0u
                let create_txns.0%%RekeyTo_length#0: uint64 = 0u
                let create_txns.0%%ConfigAsset_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetTotal_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetName_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetURL_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetManager_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetReserve_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let create_txns.0%%ConfigAssetClawback_length#0: uint64 = 0u
                let create_txns.0%%FreezeAsset_length#0: uint64 = 0u
                let create_txns.0%%FreezeAssetAccount_length#0: uint64 = 0u
                let create_txns.0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let create_txns.0%%GlobalNumUint_length#0: uint64 = 0u
                let create_txns.0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let create_txns.0%%LocalNumUint_length#0: uint64 = 0u
                let create_txns.0%%LocalNumByteSlice_length#0: uint64 = 0u
                let create_txns.0%%ExtraProgramPages_length#0: uint64 = 0u
                let create_txns.0%%Nonparticipation_length#0: uint64 = 0u
                let create_txns.0%%StateProofPK_length#0: uint64 = 0u
                let create_txns.0%%Accounts_length#0: uint64 = 0u
                let create_txns.0%%Assets_length#0: uint64 = 0u
                let create_txns.0%%Applications_length#0: uint64 = 0u
                let create_txns.1#0: itxn_field_set = itxn_field_set(1)
                let create_txns.1%%param_Fee_idx_0#0: uint64 = 0u
                let create_txns.1%%Fee_length#0: uint64 = 1u
                let create_txns.1%%param_TypeEnum_idx_0#0: uint64 = appl
                let create_txns.1%%TypeEnum_length#0: uint64 = 1u
                let create_txns.1%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let create_txns.1%%ApprovalProgramPages_length#0: uint64 = 1u
                let create_txns.1%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let create_txns.1%%ClearStateProgramPages_length#0: uint64 = 1u
                let create_txns.1%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let create_txns.1%%OnCompletion_length#0: uint64 = 1u
                let create_txns.1%%param_ApplicationArgs_idx_0#0: bytes = 0x3361
                let create_txns.1%%param_ApplicationArgs_idx_1#0: bytes = 0x3461
                let create_txns.1%%param_ApplicationArgs_idx_2#0: bytes = 0x3561
                let create_txns.1%%ApplicationArgs_length#0: uint64 = 3u
                let create_txns.1%%param_Note_idx_0#0: bytes = "different param set"
                let create_txns.1%%Note_length#0: uint64 = 1u
                let create_txns.1%%Sender_length#0: uint64 = 0u
                let create_txns.1%%Receiver_length#0: uint64 = 0u
                let create_txns.1%%Amount_length#0: uint64 = 0u
                let create_txns.1%%CloseRemainderTo_length#0: uint64 = 0u
                let create_txns.1%%VotePK_length#0: uint64 = 0u
                let create_txns.1%%SelectionPK_length#0: uint64 = 0u
                let create_txns.1%%VoteFirst_length#0: uint64 = 0u
                let create_txns.1%%VoteLast_length#0: uint64 = 0u
                let create_txns.1%%VoteKeyDilution_length#0: uint64 = 0u
                let create_txns.1%%Type_length#0: uint64 = 0u
                let create_txns.1%%XferAsset_length#0: uint64 = 0u
                let create_txns.1%%AssetAmount_length#0: uint64 = 0u
                let create_txns.1%%AssetSender_length#0: uint64 = 0u
                let create_txns.1%%AssetReceiver_length#0: uint64 = 0u
                let create_txns.1%%AssetCloseTo_length#0: uint64 = 0u
                let create_txns.1%%ApplicationID_length#0: uint64 = 0u
                let create_txns.1%%ApprovalProgram_length#0: uint64 = 0u
                let create_txns.1%%ClearStateProgram_length#0: uint64 = 0u
                let create_txns.1%%RekeyTo_length#0: uint64 = 0u
                let create_txns.1%%ConfigAsset_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetTotal_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetName_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetURL_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetManager_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetReserve_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let create_txns.1%%ConfigAssetClawback_length#0: uint64 = 0u
                let create_txns.1%%FreezeAsset_length#0: uint64 = 0u
                let create_txns.1%%FreezeAssetAccount_length#0: uint64 = 0u
                let create_txns.1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let create_txns.1%%GlobalNumUint_length#0: uint64 = 0u
                let create_txns.1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let create_txns.1%%LocalNumUint_length#0: uint64 = 0u
                let create_txns.1%%LocalNumByteSlice_length#0: uint64 = 0u
                let create_txns.1%%ExtraProgramPages_length#0: uint64 = 0u
                let create_txns.1%%Nonparticipation_length#0: uint64 = 0u
                let create_txns.1%%StateProofPK_length#0: uint64 = 0u
                let create_txns.1%%Accounts_length#0: uint64 = 0u
                let create_txns.1%%Assets_length#0: uint64 = 0u
                let create_txns.1%%Applications_length#0: uint64 = 0u
                itxn_begin
                ((itxn_field ApplicationArgs) create_txns.0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) create_txns.0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field OnCompletion) create_txns.0%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) create_txns.0%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_txns.0%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_txns.0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) create_txns.0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L39
                itxn_next
                ((itxn_field Note) create_txns.1%%param_Note_idx_0#0)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_2#0)
                ((itxn_field OnCompletion) create_txns.1%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) create_txns.1%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_txns.1%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_txns.1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) create_txns.1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L39
                itxn_submit
                let txn_1#0: itxn_group_idx = itxn_group_idx(0)
                let txn_1._is_last#0: bool = 0u
                let txn_1.Sender#0: bytes = itxn[txn_1#0].Sender
                let txn_1.Fee#0: uint64 = itxn[txn_1#0].Fee
                let txn_1.FirstValid#0: uint64 = itxn[txn_1#0].FirstValid
                let txn_1.FirstValidTime#0: uint64 = itxn[txn_1#0].FirstValidTime
                let txn_1.LastValid#0: uint64 = itxn[txn_1#0].LastValid
                let txn_1.Note#0: bytes = itxn[txn_1#0].Note
                let txn_1.Lease#0: bytes = itxn[txn_1#0].Lease
                let txn_1.Receiver#0: bytes = itxn[txn_1#0].Receiver
                let txn_1.Amount#0: uint64 = itxn[txn_1#0].Amount
                let txn_1.CloseRemainderTo#0: bytes = itxn[txn_1#0].CloseRemainderTo
                let txn_1.VotePK#0: bytes = itxn[txn_1#0].VotePK
                let txn_1.SelectionPK#0: bytes = itxn[txn_1#0].SelectionPK
                let txn_1.VoteFirst#0: uint64 = itxn[txn_1#0].VoteFirst
                let txn_1.VoteLast#0: uint64 = itxn[txn_1#0].VoteLast
                let txn_1.VoteKeyDilution#0: uint64 = itxn[txn_1#0].VoteKeyDilution
                let txn_1.Type#0: bytes = itxn[txn_1#0].Type
                let txn_1.TypeEnum#0: uint64 = itxn[txn_1#0].TypeEnum
                let txn_1.XferAsset#0: uint64 = itxn[txn_1#0].XferAsset
                let txn_1.AssetAmount#0: uint64 = itxn[txn_1#0].AssetAmount
                let txn_1.AssetSender#0: bytes = itxn[txn_1#0].AssetSender
                let txn_1.AssetReceiver#0: bytes = itxn[txn_1#0].AssetReceiver
                let txn_1.AssetCloseTo#0: bytes = itxn[txn_1#0].AssetCloseTo
                let txn_1.GroupIndex#0: uint64 = itxn[txn_1#0].GroupIndex
                let txn_1.TxID#0: bytes = itxn[txn_1#0].TxID
                let txn_1.ApplicationID#0: uint64 = itxn[txn_1#0].ApplicationID
                let txn_1.OnCompletion#0: uint64 = itxn[txn_1#0].OnCompletion
                let txn_1.NumAppArgs#0: uint64 = itxn[txn_1#0].NumAppArgs
                let txn_1.NumAccounts#0: uint64 = itxn[txn_1#0].NumAccounts
                let txn_1.ApprovalProgram#0: bytes = itxn[txn_1#0].ApprovalProgram
                let txn_1.ClearStateProgram#0: bytes = itxn[txn_1#0].ClearStateProgram
                let txn_1.RekeyTo#0: bytes = itxn[txn_1#0].RekeyTo
                let txn_1.ConfigAsset#0: uint64 = itxn[txn_1#0].ConfigAsset
                let txn_1.ConfigAssetTotal#0: uint64 = itxn[txn_1#0].ConfigAssetTotal
                let txn_1.ConfigAssetDecimals#0: uint64 = itxn[txn_1#0].ConfigAssetDecimals
                let txn_1.ConfigAssetDefaultFrozen#0: bool = itxn[txn_1#0].ConfigAssetDefaultFrozen
                let txn_1.ConfigAssetUnitName#0: bytes = itxn[txn_1#0].ConfigAssetUnitName
                let txn_1.ConfigAssetName#0: bytes = itxn[txn_1#0].ConfigAssetName
                let txn_1.ConfigAssetURL#0: bytes = itxn[txn_1#0].ConfigAssetURL
                let txn_1.ConfigAssetMetadataHash#0: bytes = itxn[txn_1#0].ConfigAssetMetadataHash
                let txn_1.ConfigAssetManager#0: bytes = itxn[txn_1#0].ConfigAssetManager
                let txn_1.ConfigAssetReserve#0: bytes = itxn[txn_1#0].ConfigAssetReserve
                let txn_1.ConfigAssetFreeze#0: bytes = itxn[txn_1#0].ConfigAssetFreeze
                let txn_1.ConfigAssetClawback#0: bytes = itxn[txn_1#0].ConfigAssetClawback
                let txn_1.FreezeAsset#0: uint64 = itxn[txn_1#0].FreezeAsset
                let txn_1.FreezeAssetAccount#0: bytes = itxn[txn_1#0].FreezeAssetAccount
                let txn_1.FreezeAssetFrozen#0: bool = itxn[txn_1#0].FreezeAssetFrozen
                let txn_1.NumAssets#0: uint64 = itxn[txn_1#0].NumAssets
                let txn_1.NumApplications#0: uint64 = itxn[txn_1#0].NumApplications
                let txn_1.GlobalNumUint#0: uint64 = itxn[txn_1#0].GlobalNumUint
                let txn_1.GlobalNumByteSlice#0: uint64 = itxn[txn_1#0].GlobalNumByteSlice
                let txn_1.LocalNumUint#0: uint64 = itxn[txn_1#0].LocalNumUint
                let txn_1.LocalNumByteSlice#0: uint64 = itxn[txn_1#0].LocalNumByteSlice
                let txn_1.ExtraProgramPages#0: uint64 = itxn[txn_1#0].ExtraProgramPages
                let txn_1.Nonparticipation#0: bool = itxn[txn_1#0].Nonparticipation
                let txn_1.NumLogs#0: uint64 = itxn[txn_1#0].NumLogs
                let txn_1.CreatedAssetID#0: uint64 = itxn[txn_1#0].CreatedAssetID
                let txn_1.CreatedApplicationID#0: uint64 = itxn[txn_1#0].CreatedApplicationID
                let txn_1.LastLog#0: bytes = itxn[txn_1#0].LastLog
                let txn_1.StateProofPK#0: bytes = itxn[txn_1#0].StateProofPK
                let txn_1.NumApprovalProgramPages#0: uint64 = itxn[txn_1#0].NumApprovalProgramPages
                let txn_1.NumClearStateProgramPages#0: uint64 = itxn[txn_1#0].NumClearStateProgramPages
                let txn_2#0: itxn_group_idx = itxn_group_idx(1)
                let txn_2._is_last#0: bool = 1u
                let txn_2.Sender#0: bytes = itxn[txn_2#0].Sender
                let txn_2.Fee#0: uint64 = itxn[txn_2#0].Fee
                let txn_2.FirstValid#0: uint64 = itxn[txn_2#0].FirstValid
                let txn_2.FirstValidTime#0: uint64 = itxn[txn_2#0].FirstValidTime
                let txn_2.LastValid#0: uint64 = itxn[txn_2#0].LastValid
                let txn_2.Note#0: bytes = itxn[txn_2#0].Note
                let txn_2.Lease#0: bytes = itxn[txn_2#0].Lease
                let txn_2.Receiver#0: bytes = itxn[txn_2#0].Receiver
                let txn_2.Amount#0: uint64 = itxn[txn_2#0].Amount
                let txn_2.CloseRemainderTo#0: bytes = itxn[txn_2#0].CloseRemainderTo
                let txn_2.VotePK#0: bytes = itxn[txn_2#0].VotePK
                let txn_2.SelectionPK#0: bytes = itxn[txn_2#0].SelectionPK
                let txn_2.VoteFirst#0: uint64 = itxn[txn_2#0].VoteFirst
                let txn_2.VoteLast#0: uint64 = itxn[txn_2#0].VoteLast
                let txn_2.VoteKeyDilution#0: uint64 = itxn[txn_2#0].VoteKeyDilution
                let txn_2.Type#0: bytes = itxn[txn_2#0].Type
                let txn_2.TypeEnum#0: uint64 = itxn[txn_2#0].TypeEnum
                let txn_2.XferAsset#0: uint64 = itxn[txn_2#0].XferAsset
                let txn_2.AssetAmount#0: uint64 = itxn[txn_2#0].AssetAmount
                let txn_2.AssetSender#0: bytes = itxn[txn_2#0].AssetSender
                let txn_2.AssetReceiver#0: bytes = itxn[txn_2#0].AssetReceiver
                let txn_2.AssetCloseTo#0: bytes = itxn[txn_2#0].AssetCloseTo
                let txn_2.GroupIndex#0: uint64 = itxn[txn_2#0].GroupIndex
                let txn_2.TxID#0: bytes = itxn[txn_2#0].TxID
                let txn_2.ApplicationID#0: uint64 = itxn[txn_2#0].ApplicationID
                let txn_2.OnCompletion#0: uint64 = itxn[txn_2#0].OnCompletion
                let txn_2.NumAppArgs#0: uint64 = itxn[txn_2#0].NumAppArgs
                let txn_2.NumAccounts#0: uint64 = itxn[txn_2#0].NumAccounts
                let txn_2.ApprovalProgram#0: bytes = itxn[txn_2#0].ApprovalProgram
                let txn_2.ClearStateProgram#0: bytes = itxn[txn_2#0].ClearStateProgram
                let txn_2.RekeyTo#0: bytes = itxn[txn_2#0].RekeyTo
                let txn_2.ConfigAsset#0: uint64 = itxn[txn_2#0].ConfigAsset
                let txn_2.ConfigAssetTotal#0: uint64 = itxn[txn_2#0].ConfigAssetTotal
                let txn_2.ConfigAssetDecimals#0: uint64 = itxn[txn_2#0].ConfigAssetDecimals
                let txn_2.ConfigAssetDefaultFrozen#0: bool = itxn[txn_2#0].ConfigAssetDefaultFrozen
                let txn_2.ConfigAssetUnitName#0: bytes = itxn[txn_2#0].ConfigAssetUnitName
                let txn_2.ConfigAssetName#0: bytes = itxn[txn_2#0].ConfigAssetName
                let txn_2.ConfigAssetURL#0: bytes = itxn[txn_2#0].ConfigAssetURL
                let txn_2.ConfigAssetMetadataHash#0: bytes = itxn[txn_2#0].ConfigAssetMetadataHash
                let txn_2.ConfigAssetManager#0: bytes = itxn[txn_2#0].ConfigAssetManager
                let txn_2.ConfigAssetReserve#0: bytes = itxn[txn_2#0].ConfigAssetReserve
                let txn_2.ConfigAssetFreeze#0: bytes = itxn[txn_2#0].ConfigAssetFreeze
                let txn_2.ConfigAssetClawback#0: bytes = itxn[txn_2#0].ConfigAssetClawback
                let txn_2.FreezeAsset#0: uint64 = itxn[txn_2#0].FreezeAsset
                let txn_2.FreezeAssetAccount#0: bytes = itxn[txn_2#0].FreezeAssetAccount
                let txn_2.FreezeAssetFrozen#0: bool = itxn[txn_2#0].FreezeAssetFrozen
                let txn_2.NumAssets#0: uint64 = itxn[txn_2#0].NumAssets
                let txn_2.NumApplications#0: uint64 = itxn[txn_2#0].NumApplications
                let txn_2.GlobalNumUint#0: uint64 = itxn[txn_2#0].GlobalNumUint
                let txn_2.GlobalNumByteSlice#0: uint64 = itxn[txn_2#0].GlobalNumByteSlice
                let txn_2.LocalNumUint#0: uint64 = itxn[txn_2#0].LocalNumUint
                let txn_2.LocalNumByteSlice#0: uint64 = itxn[txn_2#0].LocalNumByteSlice
                let txn_2.ExtraProgramPages#0: uint64 = itxn[txn_2#0].ExtraProgramPages
                let txn_2.Nonparticipation#0: bool = itxn[txn_2#0].Nonparticipation
                let txn_2.NumLogs#0: uint64 = itxn[txn_2#0].NumLogs
                let txn_2.CreatedAssetID#0: uint64 = itxn[txn_2#0].CreatedAssetID
                let txn_2.CreatedApplicationID#0: uint64 = itxn[txn_2#0].CreatedApplicationID
                let txn_2.LastLog#0: bytes = itxn[txn_2#0].LastLog
                let txn_2.StateProofPK#0: bytes = itxn[txn_2#0].StateProofPK
                let txn_2.NumApprovalProgramPages#0: uint64 = itxn[txn_2#0].NumApprovalProgramPages
                let txn_2.NumClearStateProgramPages#0: uint64 = itxn[txn_2#0].NumClearStateProgramPages
                let tmp%0#0: bytes = itxn[txn_1#0].ApplicationArgs[0u]
                let tmp%1#0: bool = (== tmp%0#0 "1a")
                (assert tmp%1#0)
                let tmp%2#0: bytes = itxn[txn_1#0].ApplicationArgs[1u]
                let tmp%3#0: bool = (== tmp%2#0 "2a")
                (assert tmp%3#0)
                let tmp%4#0: bytes = itxn[txn_2#0].ApplicationArgs[0u]
                let tmp%5#0: bool = (== tmp%4#0 "3a")
                (assert tmp%5#0)
                let tmp%6#0: bytes = itxn[txn_2#0].ApplicationArgs[1u]
                let tmp%7#0: bool = (== tmp%6#0 "4a")
                (assert tmp%7#0)
                let tmp%8#0: bytes = itxn[txn_2#0].ApplicationArgs[2u]
                let tmp%9#0: bool = (== tmp%8#0 "5a")
                (assert tmp%9#0)
                let create_txns.0#1: itxn_field_set = itxn_field_set(2)
                let create_txns.0%%param_ApplicationArgs_idx_0#1: bytes = 0x3162
                let create_txns.0%%param_ApplicationArgs_idx_1#1: bytes = 0x3262
                let create_txns.0%%ApplicationArgs_length#1: uint64 = 2u
                let create_txns.1#1: itxn_field_set = itxn_field_set(3)
                let create_txns.1%%param_ApplicationArgs_idx_0#1: bytes = 0x3362
                let create_txns.1%%param_ApplicationArgs_idx_1#1: bytes = 0x3462
                let create_txns.1%%param_ApplicationArgs_idx_2#1: bytes = 0x3562
                let create_txns.1%%ApplicationArgs_length#1: uint64 = 3u
                itxn_begin
                ((itxn_field Note) create_txns.1%%param_Note_idx_0#0)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_0#1)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_1#1)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_2#1)
                ((itxn_field OnCompletion) create_txns.1%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) create_txns.1%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_txns.1%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_txns.1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) create_txns.1%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L50
                itxn_next
                ((itxn_field ApplicationArgs) create_txns.0%%param_ApplicationArgs_idx_0#1)
                ((itxn_field ApplicationArgs) create_txns.0%%param_ApplicationArgs_idx_1#1)
                ((itxn_field OnCompletion) create_txns.0%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) create_txns.0%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_txns.0%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_txns.0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) create_txns.0%%param_Fee_idx_0#0)
                goto block@4
            block@4: // next_txn_L50
                itxn_submit
                let txn_1#1: itxn_group_idx = itxn_group_idx(0)
                let txn_1._is_last#1: bool = 0u
                let txn_1.Sender#1: bytes = itxn[txn_1#1].Sender
                let txn_1.Fee#1: uint64 = itxn[txn_1#1].Fee
                let txn_1.FirstValid#1: uint64 = itxn[txn_1#1].FirstValid
                let txn_1.FirstValidTime#1: uint64 = itxn[txn_1#1].FirstValidTime
                let txn_1.LastValid#1: uint64 = itxn[txn_1#1].LastValid
                let txn_1.Note#1: bytes = itxn[txn_1#1].Note
                let txn_1.Lease#1: bytes = itxn[txn_1#1].Lease
                let txn_1.Receiver#1: bytes = itxn[txn_1#1].Receiver
                let txn_1.Amount#1: uint64 = itxn[txn_1#1].Amount
                let txn_1.CloseRemainderTo#1: bytes = itxn[txn_1#1].CloseRemainderTo
                let txn_1.VotePK#1: bytes = itxn[txn_1#1].VotePK
                let txn_1.SelectionPK#1: bytes = itxn[txn_1#1].SelectionPK
                let txn_1.VoteFirst#1: uint64 = itxn[txn_1#1].VoteFirst
                let txn_1.VoteLast#1: uint64 = itxn[txn_1#1].VoteLast
                let txn_1.VoteKeyDilution#1: uint64 = itxn[txn_1#1].VoteKeyDilution
                let txn_1.Type#1: bytes = itxn[txn_1#1].Type
                let txn_1.TypeEnum#1: uint64 = itxn[txn_1#1].TypeEnum
                let txn_1.XferAsset#1: uint64 = itxn[txn_1#1].XferAsset
                let txn_1.AssetAmount#1: uint64 = itxn[txn_1#1].AssetAmount
                let txn_1.AssetSender#1: bytes = itxn[txn_1#1].AssetSender
                let txn_1.AssetReceiver#1: bytes = itxn[txn_1#1].AssetReceiver
                let txn_1.AssetCloseTo#1: bytes = itxn[txn_1#1].AssetCloseTo
                let txn_1.GroupIndex#1: uint64 = itxn[txn_1#1].GroupIndex
                let txn_1.TxID#1: bytes = itxn[txn_1#1].TxID
                let txn_1.ApplicationID#1: uint64 = itxn[txn_1#1].ApplicationID
                let txn_1.OnCompletion#1: uint64 = itxn[txn_1#1].OnCompletion
                let txn_1.NumAppArgs#1: uint64 = itxn[txn_1#1].NumAppArgs
                let txn_1.NumAccounts#1: uint64 = itxn[txn_1#1].NumAccounts
                let txn_1.ApprovalProgram#1: bytes = itxn[txn_1#1].ApprovalProgram
                let txn_1.ClearStateProgram#1: bytes = itxn[txn_1#1].ClearStateProgram
                let txn_1.RekeyTo#1: bytes = itxn[txn_1#1].RekeyTo
                let txn_1.ConfigAsset#1: uint64 = itxn[txn_1#1].ConfigAsset
                let txn_1.ConfigAssetTotal#1: uint64 = itxn[txn_1#1].ConfigAssetTotal
                let txn_1.ConfigAssetDecimals#1: uint64 = itxn[txn_1#1].ConfigAssetDecimals
                let txn_1.ConfigAssetDefaultFrozen#1: bool = itxn[txn_1#1].ConfigAssetDefaultFrozen
                let txn_1.ConfigAssetUnitName#1: bytes = itxn[txn_1#1].ConfigAssetUnitName
                let txn_1.ConfigAssetName#1: bytes = itxn[txn_1#1].ConfigAssetName
                let txn_1.ConfigAssetURL#1: bytes = itxn[txn_1#1].ConfigAssetURL
                let txn_1.ConfigAssetMetadataHash#1: bytes = itxn[txn_1#1].ConfigAssetMetadataHash
                let txn_1.ConfigAssetManager#1: bytes = itxn[txn_1#1].ConfigAssetManager
                let txn_1.ConfigAssetReserve#1: bytes = itxn[txn_1#1].ConfigAssetReserve
                let txn_1.ConfigAssetFreeze#1: bytes = itxn[txn_1#1].ConfigAssetFreeze
                let txn_1.ConfigAssetClawback#1: bytes = itxn[txn_1#1].ConfigAssetClawback
                let txn_1.FreezeAsset#1: uint64 = itxn[txn_1#1].FreezeAsset
                let txn_1.FreezeAssetAccount#1: bytes = itxn[txn_1#1].FreezeAssetAccount
                let txn_1.FreezeAssetFrozen#1: bool = itxn[txn_1#1].FreezeAssetFrozen
                let txn_1.NumAssets#1: uint64 = itxn[txn_1#1].NumAssets
                let txn_1.NumApplications#1: uint64 = itxn[txn_1#1].NumApplications
                let txn_1.GlobalNumUint#1: uint64 = itxn[txn_1#1].GlobalNumUint
                let txn_1.GlobalNumByteSlice#1: uint64 = itxn[txn_1#1].GlobalNumByteSlice
                let txn_1.LocalNumUint#1: uint64 = itxn[txn_1#1].LocalNumUint
                let txn_1.LocalNumByteSlice#1: uint64 = itxn[txn_1#1].LocalNumByteSlice
                let txn_1.ExtraProgramPages#1: uint64 = itxn[txn_1#1].ExtraProgramPages
                let txn_1.Nonparticipation#1: bool = itxn[txn_1#1].Nonparticipation
                let txn_1.NumLogs#1: uint64 = itxn[txn_1#1].NumLogs
                let txn_1.CreatedAssetID#1: uint64 = itxn[txn_1#1].CreatedAssetID
                let txn_1.CreatedApplicationID#1: uint64 = itxn[txn_1#1].CreatedApplicationID
                let txn_1.LastLog#1: bytes = itxn[txn_1#1].LastLog
                let txn_1.StateProofPK#1: bytes = itxn[txn_1#1].StateProofPK
                let txn_1.NumApprovalProgramPages#1: uint64 = itxn[txn_1#1].NumApprovalProgramPages
                let txn_1.NumClearStateProgramPages#1: uint64 = itxn[txn_1#1].NumClearStateProgramPages
                let txn_2#1: itxn_group_idx = itxn_group_idx(1)
                let txn_2._is_last#1: bool = 1u
                let txn_2.Sender#1: bytes = itxn[txn_2#1].Sender
                let txn_2.Fee#1: uint64 = itxn[txn_2#1].Fee
                let txn_2.FirstValid#1: uint64 = itxn[txn_2#1].FirstValid
                let txn_2.FirstValidTime#1: uint64 = itxn[txn_2#1].FirstValidTime
                let txn_2.LastValid#1: uint64 = itxn[txn_2#1].LastValid
                let txn_2.Note#1: bytes = itxn[txn_2#1].Note
                let txn_2.Lease#1: bytes = itxn[txn_2#1].Lease
                let txn_2.Receiver#1: bytes = itxn[txn_2#1].Receiver
                let txn_2.Amount#1: uint64 = itxn[txn_2#1].Amount
                let txn_2.CloseRemainderTo#1: bytes = itxn[txn_2#1].CloseRemainderTo
                let txn_2.VotePK#1: bytes = itxn[txn_2#1].VotePK
                let txn_2.SelectionPK#1: bytes = itxn[txn_2#1].SelectionPK
                let txn_2.VoteFirst#1: uint64 = itxn[txn_2#1].VoteFirst
                let txn_2.VoteLast#1: uint64 = itxn[txn_2#1].VoteLast
                let txn_2.VoteKeyDilution#1: uint64 = itxn[txn_2#1].VoteKeyDilution
                let txn_2.Type#1: bytes = itxn[txn_2#1].Type
                let txn_2.TypeEnum#1: uint64 = itxn[txn_2#1].TypeEnum
                let txn_2.XferAsset#1: uint64 = itxn[txn_2#1].XferAsset
                let txn_2.AssetAmount#1: uint64 = itxn[txn_2#1].AssetAmount
                let txn_2.AssetSender#1: bytes = itxn[txn_2#1].AssetSender
                let txn_2.AssetReceiver#1: bytes = itxn[txn_2#1].AssetReceiver
                let txn_2.AssetCloseTo#1: bytes = itxn[txn_2#1].AssetCloseTo
                let txn_2.GroupIndex#1: uint64 = itxn[txn_2#1].GroupIndex
                let txn_2.TxID#1: bytes = itxn[txn_2#1].TxID
                let txn_2.ApplicationID#1: uint64 = itxn[txn_2#1].ApplicationID
                let txn_2.OnCompletion#1: uint64 = itxn[txn_2#1].OnCompletion
                let txn_2.NumAppArgs#1: uint64 = itxn[txn_2#1].NumAppArgs
                let txn_2.NumAccounts#1: uint64 = itxn[txn_2#1].NumAccounts
                let txn_2.ApprovalProgram#1: bytes = itxn[txn_2#1].ApprovalProgram
                let txn_2.ClearStateProgram#1: bytes = itxn[txn_2#1].ClearStateProgram
                let txn_2.RekeyTo#1: bytes = itxn[txn_2#1].RekeyTo
                let txn_2.ConfigAsset#1: uint64 = itxn[txn_2#1].ConfigAsset
                let txn_2.ConfigAssetTotal#1: uint64 = itxn[txn_2#1].ConfigAssetTotal
                let txn_2.ConfigAssetDecimals#1: uint64 = itxn[txn_2#1].ConfigAssetDecimals
                let txn_2.ConfigAssetDefaultFrozen#1: bool = itxn[txn_2#1].ConfigAssetDefaultFrozen
                let txn_2.ConfigAssetUnitName#1: bytes = itxn[txn_2#1].ConfigAssetUnitName
                let txn_2.ConfigAssetName#1: bytes = itxn[txn_2#1].ConfigAssetName
                let txn_2.ConfigAssetURL#1: bytes = itxn[txn_2#1].ConfigAssetURL
                let txn_2.ConfigAssetMetadataHash#1: bytes = itxn[txn_2#1].ConfigAssetMetadataHash
                let txn_2.ConfigAssetManager#1: bytes = itxn[txn_2#1].ConfigAssetManager
                let txn_2.ConfigAssetReserve#1: bytes = itxn[txn_2#1].ConfigAssetReserve
                let txn_2.ConfigAssetFreeze#1: bytes = itxn[txn_2#1].ConfigAssetFreeze
                let txn_2.ConfigAssetClawback#1: bytes = itxn[txn_2#1].ConfigAssetClawback
                let txn_2.FreezeAsset#1: uint64 = itxn[txn_2#1].FreezeAsset
                let txn_2.FreezeAssetAccount#1: bytes = itxn[txn_2#1].FreezeAssetAccount
                let txn_2.FreezeAssetFrozen#1: bool = itxn[txn_2#1].FreezeAssetFrozen
                let txn_2.NumAssets#1: uint64 = itxn[txn_2#1].NumAssets
                let txn_2.NumApplications#1: uint64 = itxn[txn_2#1].NumApplications
                let txn_2.GlobalNumUint#1: uint64 = itxn[txn_2#1].GlobalNumUint
                let txn_2.GlobalNumByteSlice#1: uint64 = itxn[txn_2#1].GlobalNumByteSlice
                let txn_2.LocalNumUint#1: uint64 = itxn[txn_2#1].LocalNumUint
                let txn_2.LocalNumByteSlice#1: uint64 = itxn[txn_2#1].LocalNumByteSlice
                let txn_2.ExtraProgramPages#1: uint64 = itxn[txn_2#1].ExtraProgramPages
                let txn_2.Nonparticipation#1: bool = itxn[txn_2#1].Nonparticipation
                let txn_2.NumLogs#1: uint64 = itxn[txn_2#1].NumLogs
                let txn_2.CreatedAssetID#1: uint64 = itxn[txn_2#1].CreatedAssetID
                let txn_2.CreatedApplicationID#1: uint64 = itxn[txn_2#1].CreatedApplicationID
                let txn_2.LastLog#1: bytes = itxn[txn_2#1].LastLog
                let txn_2.StateProofPK#1: bytes = itxn[txn_2#1].StateProofPK
                let txn_2.NumApprovalProgramPages#1: uint64 = itxn[txn_2#1].NumApprovalProgramPages
                let txn_2.NumClearStateProgramPages#1: uint64 = itxn[txn_2#1].NumClearStateProgramPages
                let tmp%10#0: bytes = itxn[txn_2#1].ApplicationArgs[0u]
                let tmp%11#0: bool = (== tmp%10#0 "1b")
                (assert tmp%11#0)
                let tmp%12#0: bytes = itxn[txn_2#1].ApplicationArgs[1u]
                let tmp%13#0: bool = (== tmp%12#0 "2b")
                (assert tmp%13#0)
                let tmp%14#0: bytes = itxn[txn_1#1].ApplicationArgs[0u]
                let tmp%15#0: bool = (== tmp%14#0 "3b")
                (assert tmp%15#0)
                let tmp%16#0: bytes = itxn[txn_1#1].ApplicationArgs[1u]
                let tmp%17#0: bool = (== tmp%16#0 "4b")
                (assert tmp%17#0)
                let tmp%18#0: bytes = itxn[txn_1#1].ApplicationArgs[2u]
                let tmp%19#0: bool = (== tmp%18#0 "5b")
                (assert tmp%19#0)
                let create_txns.0#2: itxn_field_set = itxn_field_set(4)
                let create_txns.0%%param_ApplicationArgs_idx_0#2: bytes = 0x3163
                let create_txns.0%%param_ApplicationArgs_idx_1#2: bytes = 0x3263
                let create_txns.0%%ApplicationArgs_length#2: uint64 = 2u
                let create_txns.1#2: itxn_field_set = itxn_field_set(5)
                let create_txns.1%%param_ApplicationArgs_idx_0#2: bytes = 0x3363
                let create_txns.1%%param_ApplicationArgs_idx_1#2: bytes = 0x3463
                let create_txns.1%%param_ApplicationArgs_idx_2#2: bytes = 0x3563
                let create_txns.1%%ApplicationArgs_length#2: uint64 = 3u
                itxn_begin
                ((itxn_field ApplicationArgs) create_txns.0%%param_ApplicationArgs_idx_0#2)
                ((itxn_field ApplicationArgs) create_txns.0%%param_ApplicationArgs_idx_1#2)
                ((itxn_field OnCompletion) create_txns.0%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) create_txns.0%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_txns.0%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_txns.0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) create_txns.0%%param_Fee_idx_0#0)
                goto block@5
            block@5: // next_txn_L61
                itxn_next
                ((itxn_field Note) create_txns.1%%param_Note_idx_0#0)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_0#2)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_1#2)
                ((itxn_field ApplicationArgs) create_txns.1%%param_ApplicationArgs_idx_2#2)
                ((itxn_field OnCompletion) create_txns.1%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) create_txns.1%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_txns.1%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_txns.1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) create_txns.1%%param_Fee_idx_0#0)
                goto block@6
            block@6: // next_txn_L61
                itxn_submit
                let txn_tuple.0#0: itxn_group_idx = itxn_group_idx(0)
                let txn_tuple.0._is_last#0: bool = 0u
                let txn_tuple.0.Sender#0: bytes = itxn[txn_tuple.0#0].Sender
                let txn_tuple.0.Fee#0: uint64 = itxn[txn_tuple.0#0].Fee
                let txn_tuple.0.FirstValid#0: uint64 = itxn[txn_tuple.0#0].FirstValid
                let txn_tuple.0.FirstValidTime#0: uint64 = itxn[txn_tuple.0#0].FirstValidTime
                let txn_tuple.0.LastValid#0: uint64 = itxn[txn_tuple.0#0].LastValid
                let txn_tuple.0.Note#0: bytes = itxn[txn_tuple.0#0].Note
                let txn_tuple.0.Lease#0: bytes = itxn[txn_tuple.0#0].Lease
                let txn_tuple.0.Receiver#0: bytes = itxn[txn_tuple.0#0].Receiver
                let txn_tuple.0.Amount#0: uint64 = itxn[txn_tuple.0#0].Amount
                let txn_tuple.0.CloseRemainderTo#0: bytes = itxn[txn_tuple.0#0].CloseRemainderTo
                let txn_tuple.0.VotePK#0: bytes = itxn[txn_tuple.0#0].VotePK
                let txn_tuple.0.SelectionPK#0: bytes = itxn[txn_tuple.0#0].SelectionPK
                let txn_tuple.0.VoteFirst#0: uint64 = itxn[txn_tuple.0#0].VoteFirst
                let txn_tuple.0.VoteLast#0: uint64 = itxn[txn_tuple.0#0].VoteLast
                let txn_tuple.0.VoteKeyDilution#0: uint64 = itxn[txn_tuple.0#0].VoteKeyDilution
                let txn_tuple.0.Type#0: bytes = itxn[txn_tuple.0#0].Type
                let txn_tuple.0.TypeEnum#0: uint64 = itxn[txn_tuple.0#0].TypeEnum
                let txn_tuple.0.XferAsset#0: uint64 = itxn[txn_tuple.0#0].XferAsset
                let txn_tuple.0.AssetAmount#0: uint64 = itxn[txn_tuple.0#0].AssetAmount
                let txn_tuple.0.AssetSender#0: bytes = itxn[txn_tuple.0#0].AssetSender
                let txn_tuple.0.AssetReceiver#0: bytes = itxn[txn_tuple.0#0].AssetReceiver
                let txn_tuple.0.AssetCloseTo#0: bytes = itxn[txn_tuple.0#0].AssetCloseTo
                let txn_tuple.0.GroupIndex#0: uint64 = itxn[txn_tuple.0#0].GroupIndex
                let txn_tuple.0.TxID#0: bytes = itxn[txn_tuple.0#0].TxID
                let txn_tuple.0.ApplicationID#0: uint64 = itxn[txn_tuple.0#0].ApplicationID
                let txn_tuple.0.OnCompletion#0: uint64 = itxn[txn_tuple.0#0].OnCompletion
                let txn_tuple.0.NumAppArgs#0: uint64 = itxn[txn_tuple.0#0].NumAppArgs
                let txn_tuple.0.NumAccounts#0: uint64 = itxn[txn_tuple.0#0].NumAccounts
                let txn_tuple.0.ApprovalProgram#0: bytes = itxn[txn_tuple.0#0].ApprovalProgram
                let txn_tuple.0.ClearStateProgram#0: bytes = itxn[txn_tuple.0#0].ClearStateProgram
                let txn_tuple.0.RekeyTo#0: bytes = itxn[txn_tuple.0#0].RekeyTo
                let txn_tuple.0.ConfigAsset#0: uint64 = itxn[txn_tuple.0#0].ConfigAsset
                let txn_tuple.0.ConfigAssetTotal#0: uint64 = itxn[txn_tuple.0#0].ConfigAssetTotal
                let txn_tuple.0.ConfigAssetDecimals#0: uint64 = itxn[txn_tuple.0#0].ConfigAssetDecimals
                let txn_tuple.0.ConfigAssetDefaultFrozen#0: bool = itxn[txn_tuple.0#0].ConfigAssetDefaultFrozen
                let txn_tuple.0.ConfigAssetUnitName#0: bytes = itxn[txn_tuple.0#0].ConfigAssetUnitName
                let txn_tuple.0.ConfigAssetName#0: bytes = itxn[txn_tuple.0#0].ConfigAssetName
                let txn_tuple.0.ConfigAssetURL#0: bytes = itxn[txn_tuple.0#0].ConfigAssetURL
                let txn_tuple.0.ConfigAssetMetadataHash#0: bytes = itxn[txn_tuple.0#0].ConfigAssetMetadataHash
                let txn_tuple.0.ConfigAssetManager#0: bytes = itxn[txn_tuple.0#0].ConfigAssetManager
                let txn_tuple.0.ConfigAssetReserve#0: bytes = itxn[txn_tuple.0#0].ConfigAssetReserve
                let txn_tuple.0.ConfigAssetFreeze#0: bytes = itxn[txn_tuple.0#0].ConfigAssetFreeze
                let txn_tuple.0.ConfigAssetClawback#0: bytes = itxn[txn_tuple.0#0].ConfigAssetClawback
                let txn_tuple.0.FreezeAsset#0: uint64 = itxn[txn_tuple.0#0].FreezeAsset
                let txn_tuple.0.FreezeAssetAccount#0: bytes = itxn[txn_tuple.0#0].FreezeAssetAccount
                let txn_tuple.0.FreezeAssetFrozen#0: bool = itxn[txn_tuple.0#0].FreezeAssetFrozen
                let txn_tuple.0.NumAssets#0: uint64 = itxn[txn_tuple.0#0].NumAssets
                let txn_tuple.0.NumApplications#0: uint64 = itxn[txn_tuple.0#0].NumApplications
                let txn_tuple.0.GlobalNumUint#0: uint64 = itxn[txn_tuple.0#0].GlobalNumUint
                let txn_tuple.0.GlobalNumByteSlice#0: uint64 = itxn[txn_tuple.0#0].GlobalNumByteSlice
                let txn_tuple.0.LocalNumUint#0: uint64 = itxn[txn_tuple.0#0].LocalNumUint
                let txn_tuple.0.LocalNumByteSlice#0: uint64 = itxn[txn_tuple.0#0].LocalNumByteSlice
                let txn_tuple.0.ExtraProgramPages#0: uint64 = itxn[txn_tuple.0#0].ExtraProgramPages
                let txn_tuple.0.Nonparticipation#0: bool = itxn[txn_tuple.0#0].Nonparticipation
                let txn_tuple.0.NumLogs#0: uint64 = itxn[txn_tuple.0#0].NumLogs
                let txn_tuple.0.CreatedAssetID#0: uint64 = itxn[txn_tuple.0#0].CreatedAssetID
                let txn_tuple.0.CreatedApplicationID#0: uint64 = itxn[txn_tuple.0#0].CreatedApplicationID
                let txn_tuple.0.LastLog#0: bytes = itxn[txn_tuple.0#0].LastLog
                let txn_tuple.0.StateProofPK#0: bytes = itxn[txn_tuple.0#0].StateProofPK
                let txn_tuple.0.NumApprovalProgramPages#0: uint64 = itxn[txn_tuple.0#0].NumApprovalProgramPages
                let txn_tuple.0.NumClearStateProgramPages#0: uint64 = itxn[txn_tuple.0#0].NumClearStateProgramPages
                let txn_tuple.1#0: itxn_group_idx = itxn_group_idx(1)
                let txn_tuple.1._is_last#0: bool = 1u
                let txn_tuple.1.Sender#0: bytes = itxn[txn_tuple.1#0].Sender
                let txn_tuple.1.Fee#0: uint64 = itxn[txn_tuple.1#0].Fee
                let txn_tuple.1.FirstValid#0: uint64 = itxn[txn_tuple.1#0].FirstValid
                let txn_tuple.1.FirstValidTime#0: uint64 = itxn[txn_tuple.1#0].FirstValidTime
                let txn_tuple.1.LastValid#0: uint64 = itxn[txn_tuple.1#0].LastValid
                let txn_tuple.1.Note#0: bytes = itxn[txn_tuple.1#0].Note
                let txn_tuple.1.Lease#0: bytes = itxn[txn_tuple.1#0].Lease
                let txn_tuple.1.Receiver#0: bytes = itxn[txn_tuple.1#0].Receiver
                let txn_tuple.1.Amount#0: uint64 = itxn[txn_tuple.1#0].Amount
                let txn_tuple.1.CloseRemainderTo#0: bytes = itxn[txn_tuple.1#0].CloseRemainderTo
                let txn_tuple.1.VotePK#0: bytes = itxn[txn_tuple.1#0].VotePK
                let txn_tuple.1.SelectionPK#0: bytes = itxn[txn_tuple.1#0].SelectionPK
                let txn_tuple.1.VoteFirst#0: uint64 = itxn[txn_tuple.1#0].VoteFirst
                let txn_tuple.1.VoteLast#0: uint64 = itxn[txn_tuple.1#0].VoteLast
                let txn_tuple.1.VoteKeyDilution#0: uint64 = itxn[txn_tuple.1#0].VoteKeyDilution
                let txn_tuple.1.Type#0: bytes = itxn[txn_tuple.1#0].Type
                let txn_tuple.1.TypeEnum#0: uint64 = itxn[txn_tuple.1#0].TypeEnum
                let txn_tuple.1.XferAsset#0: uint64 = itxn[txn_tuple.1#0].XferAsset
                let txn_tuple.1.AssetAmount#0: uint64 = itxn[txn_tuple.1#0].AssetAmount
                let txn_tuple.1.AssetSender#0: bytes = itxn[txn_tuple.1#0].AssetSender
                let txn_tuple.1.AssetReceiver#0: bytes = itxn[txn_tuple.1#0].AssetReceiver
                let txn_tuple.1.AssetCloseTo#0: bytes = itxn[txn_tuple.1#0].AssetCloseTo
                let txn_tuple.1.GroupIndex#0: uint64 = itxn[txn_tuple.1#0].GroupIndex
                let txn_tuple.1.TxID#0: bytes = itxn[txn_tuple.1#0].TxID
                let txn_tuple.1.ApplicationID#0: uint64 = itxn[txn_tuple.1#0].ApplicationID
                let txn_tuple.1.OnCompletion#0: uint64 = itxn[txn_tuple.1#0].OnCompletion
                let txn_tuple.1.NumAppArgs#0: uint64 = itxn[txn_tuple.1#0].NumAppArgs
                let txn_tuple.1.NumAccounts#0: uint64 = itxn[txn_tuple.1#0].NumAccounts
                let txn_tuple.1.ApprovalProgram#0: bytes = itxn[txn_tuple.1#0].ApprovalProgram
                let txn_tuple.1.ClearStateProgram#0: bytes = itxn[txn_tuple.1#0].ClearStateProgram
                let txn_tuple.1.RekeyTo#0: bytes = itxn[txn_tuple.1#0].RekeyTo
                let txn_tuple.1.ConfigAsset#0: uint64 = itxn[txn_tuple.1#0].ConfigAsset
                let txn_tuple.1.ConfigAssetTotal#0: uint64 = itxn[txn_tuple.1#0].ConfigAssetTotal
                let txn_tuple.1.ConfigAssetDecimals#0: uint64 = itxn[txn_tuple.1#0].ConfigAssetDecimals
                let txn_tuple.1.ConfigAssetDefaultFrozen#0: bool = itxn[txn_tuple.1#0].ConfigAssetDefaultFrozen
                let txn_tuple.1.ConfigAssetUnitName#0: bytes = itxn[txn_tuple.1#0].ConfigAssetUnitName
                let txn_tuple.1.ConfigAssetName#0: bytes = itxn[txn_tuple.1#0].ConfigAssetName
                let txn_tuple.1.ConfigAssetURL#0: bytes = itxn[txn_tuple.1#0].ConfigAssetURL
                let txn_tuple.1.ConfigAssetMetadataHash#0: bytes = itxn[txn_tuple.1#0].ConfigAssetMetadataHash
                let txn_tuple.1.ConfigAssetManager#0: bytes = itxn[txn_tuple.1#0].ConfigAssetManager
                let txn_tuple.1.ConfigAssetReserve#0: bytes = itxn[txn_tuple.1#0].ConfigAssetReserve
                let txn_tuple.1.ConfigAssetFreeze#0: bytes = itxn[txn_tuple.1#0].ConfigAssetFreeze
                let txn_tuple.1.ConfigAssetClawback#0: bytes = itxn[txn_tuple.1#0].ConfigAssetClawback
                let txn_tuple.1.FreezeAsset#0: uint64 = itxn[txn_tuple.1#0].FreezeAsset
                let txn_tuple.1.FreezeAssetAccount#0: bytes = itxn[txn_tuple.1#0].FreezeAssetAccount
                let txn_tuple.1.FreezeAssetFrozen#0: bool = itxn[txn_tuple.1#0].FreezeAssetFrozen
                let txn_tuple.1.NumAssets#0: uint64 = itxn[txn_tuple.1#0].NumAssets
                let txn_tuple.1.NumApplications#0: uint64 = itxn[txn_tuple.1#0].NumApplications
                let txn_tuple.1.GlobalNumUint#0: uint64 = itxn[txn_tuple.1#0].GlobalNumUint
                let txn_tuple.1.GlobalNumByteSlice#0: uint64 = itxn[txn_tuple.1#0].GlobalNumByteSlice
                let txn_tuple.1.LocalNumUint#0: uint64 = itxn[txn_tuple.1#0].LocalNumUint
                let txn_tuple.1.LocalNumByteSlice#0: uint64 = itxn[txn_tuple.1#0].LocalNumByteSlice
                let txn_tuple.1.ExtraProgramPages#0: uint64 = itxn[txn_tuple.1#0].ExtraProgramPages
                let txn_tuple.1.Nonparticipation#0: bool = itxn[txn_tuple.1#0].Nonparticipation
                let txn_tuple.1.NumLogs#0: uint64 = itxn[txn_tuple.1#0].NumLogs
                let txn_tuple.1.CreatedAssetID#0: uint64 = itxn[txn_tuple.1#0].CreatedAssetID
                let txn_tuple.1.CreatedApplicationID#0: uint64 = itxn[txn_tuple.1#0].CreatedApplicationID
                let txn_tuple.1.LastLog#0: bytes = itxn[txn_tuple.1#0].LastLog
                let txn_tuple.1.StateProofPK#0: bytes = itxn[txn_tuple.1#0].StateProofPK
                let txn_tuple.1.NumApprovalProgramPages#0: uint64 = itxn[txn_tuple.1#0].NumApprovalProgramPages
                let txn_tuple.1.NumClearStateProgramPages#0: uint64 = itxn[txn_tuple.1#0].NumClearStateProgramPages
                let tmp%20#0: bytes = itxn[txn_tuple.0#0].ApplicationArgs[0u]
                let tmp%21#0: bool = (== tmp%20#0 "1c")
                (assert tmp%21#0)
                let tmp%22#0: bytes = itxn[txn_tuple.0#0].ApplicationArgs[1u]
                let tmp%23#0: bool = (== tmp%22#0 "2c")
                (assert tmp%23#0)
                let tmp%24#0: bytes = itxn[txn_tuple.1#0].ApplicationArgs[0u]
                let tmp%25#0: bool = (== tmp%24#0 "3c")
                (assert tmp%25#0)
                let tmp%26#0: bytes = itxn[txn_tuple.1#0].ApplicationArgs[1u]
                let tmp%27#0: bool = (== tmp%26#0 "4c")
                (assert tmp%27#0)
                let tmp%28#0: bytes = itxn[txn_tuple.1#0].ApplicationArgs[2u]
                let tmp%29#0: bool = (== tmp%28#0 "5c")
                (assert tmp%29#0)
                return 
        
        subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple_mixed() -> void:
            block@0: // L69
                let tuple_with_txn_fields.0#0: itxn_field_set = itxn_field_set(0)
                let tuple_with_txn_fields.0%%param_Fee_idx_0#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Fee_length#0: uint64 = 1u
                let tuple_with_txn_fields.0%%param_TypeEnum_idx_0#0: uint64 = appl
                let tuple_with_txn_fields.0%%TypeEnum_length#0: uint64 = 1u
                let tuple_with_txn_fields.0%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let tuple_with_txn_fields.0%%ApprovalProgramPages_length#0: uint64 = 1u
                let tuple_with_txn_fields.0%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let tuple_with_txn_fields.0%%ClearStateProgramPages_length#0: uint64 = 1u
                let tuple_with_txn_fields.0%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let tuple_with_txn_fields.0%%OnCompletion_length#0: uint64 = 1u
                let tuple_with_txn_fields.0%%param_ApplicationArgs_idx_0#0: bytes = 0x3161
                let tuple_with_txn_fields.0%%param_ApplicationArgs_idx_1#0: bytes = 0x3261
                let tuple_with_txn_fields.0%%ApplicationArgs_length#0: uint64 = 2u
                let tuple_with_txn_fields.0%%Sender_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Note_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Receiver_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Amount_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%CloseRemainderTo_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%VotePK_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%SelectionPK_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%VoteFirst_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%VoteLast_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%VoteKeyDilution_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Type_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%XferAsset_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%AssetAmount_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%AssetSender_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%AssetReceiver_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%AssetCloseTo_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ApplicationID_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ApprovalProgram_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ClearStateProgram_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%RekeyTo_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAsset_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetTotal_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetName_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetURL_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetManager_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetReserve_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ConfigAssetClawback_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%FreezeAsset_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%FreezeAssetAccount_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%GlobalNumUint_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%LocalNumUint_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%LocalNumByteSlice_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%ExtraProgramPages_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Nonparticipation_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%StateProofPK_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Accounts_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Assets_length#0: uint64 = 0u
                let tuple_with_txn_fields.0%%Applications_length#0: uint64 = 0u
                let tuple_with_txn_fields.1#0: bytes = 0x736f6d65206f746865722076616c7565
                itxn_begin
                ((itxn_field ApplicationArgs) tuple_with_txn_fields.0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) tuple_with_txn_fields.0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field OnCompletion) tuple_with_txn_fields.0%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) tuple_with_txn_fields.0%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) tuple_with_txn_fields.0%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) tuple_with_txn_fields.0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) tuple_with_txn_fields.0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L80
                itxn_submit
                let result_with_txn.0#0: itxn_group_idx = itxn_group_idx(0)
                let result_with_txn.0._is_last#0: bool = 1u
                let result_with_txn.0.Sender#0: bytes = itxn[result_with_txn.0#0].Sender
                let result_with_txn.0.Fee#0: uint64 = itxn[result_with_txn.0#0].Fee
                let result_with_txn.0.FirstValid#0: uint64 = itxn[result_with_txn.0#0].FirstValid
                let result_with_txn.0.FirstValidTime#0: uint64 = itxn[result_with_txn.0#0].FirstValidTime
                let result_with_txn.0.LastValid#0: uint64 = itxn[result_with_txn.0#0].LastValid
                let result_with_txn.0.Note#0: bytes = itxn[result_with_txn.0#0].Note
                let result_with_txn.0.Lease#0: bytes = itxn[result_with_txn.0#0].Lease
                let result_with_txn.0.Receiver#0: bytes = itxn[result_with_txn.0#0].Receiver
                let result_with_txn.0.Amount#0: uint64 = itxn[result_with_txn.0#0].Amount
                let result_with_txn.0.CloseRemainderTo#0: bytes = itxn[result_with_txn.0#0].CloseRemainderTo
                let result_with_txn.0.VotePK#0: bytes = itxn[result_with_txn.0#0].VotePK
                let result_with_txn.0.SelectionPK#0: bytes = itxn[result_with_txn.0#0].SelectionPK
                let result_with_txn.0.VoteFirst#0: uint64 = itxn[result_with_txn.0#0].VoteFirst
                let result_with_txn.0.VoteLast#0: uint64 = itxn[result_with_txn.0#0].VoteLast
                let result_with_txn.0.VoteKeyDilution#0: uint64 = itxn[result_with_txn.0#0].VoteKeyDilution
                let result_with_txn.0.Type#0: bytes = itxn[result_with_txn.0#0].Type
                let result_with_txn.0.TypeEnum#0: uint64 = itxn[result_with_txn.0#0].TypeEnum
                let result_with_txn.0.XferAsset#0: uint64 = itxn[result_with_txn.0#0].XferAsset
                let result_with_txn.0.AssetAmount#0: uint64 = itxn[result_with_txn.0#0].AssetAmount
                let result_with_txn.0.AssetSender#0: bytes = itxn[result_with_txn.0#0].AssetSender
                let result_with_txn.0.AssetReceiver#0: bytes = itxn[result_with_txn.0#0].AssetReceiver
                let result_with_txn.0.AssetCloseTo#0: bytes = itxn[result_with_txn.0#0].AssetCloseTo
                let result_with_txn.0.GroupIndex#0: uint64 = itxn[result_with_txn.0#0].GroupIndex
                let result_with_txn.0.TxID#0: bytes = itxn[result_with_txn.0#0].TxID
                let result_with_txn.0.ApplicationID#0: uint64 = itxn[result_with_txn.0#0].ApplicationID
                let result_with_txn.0.OnCompletion#0: uint64 = itxn[result_with_txn.0#0].OnCompletion
                let result_with_txn.0.NumAppArgs#0: uint64 = itxn[result_with_txn.0#0].NumAppArgs
                let result_with_txn.0.NumAccounts#0: uint64 = itxn[result_with_txn.0#0].NumAccounts
                let result_with_txn.0.ApprovalProgram#0: bytes = itxn[result_with_txn.0#0].ApprovalProgram
                let result_with_txn.0.ClearStateProgram#0: bytes = itxn[result_with_txn.0#0].ClearStateProgram
                let result_with_txn.0.RekeyTo#0: bytes = itxn[result_with_txn.0#0].RekeyTo
                let result_with_txn.0.ConfigAsset#0: uint64 = itxn[result_with_txn.0#0].ConfigAsset
                let result_with_txn.0.ConfigAssetTotal#0: uint64 = itxn[result_with_txn.0#0].ConfigAssetTotal
                let result_with_txn.0.ConfigAssetDecimals#0: uint64 = itxn[result_with_txn.0#0].ConfigAssetDecimals
                let result_with_txn.0.ConfigAssetDefaultFrozen#0: bool = itxn[result_with_txn.0#0].ConfigAssetDefaultFrozen
                let result_with_txn.0.ConfigAssetUnitName#0: bytes = itxn[result_with_txn.0#0].ConfigAssetUnitName
                let result_with_txn.0.ConfigAssetName#0: bytes = itxn[result_with_txn.0#0].ConfigAssetName
                let result_with_txn.0.ConfigAssetURL#0: bytes = itxn[result_with_txn.0#0].ConfigAssetURL
                let result_with_txn.0.ConfigAssetMetadataHash#0: bytes = itxn[result_with_txn.0#0].ConfigAssetMetadataHash
                let result_with_txn.0.ConfigAssetManager#0: bytes = itxn[result_with_txn.0#0].ConfigAssetManager
                let result_with_txn.0.ConfigAssetReserve#0: bytes = itxn[result_with_txn.0#0].ConfigAssetReserve
                let result_with_txn.0.ConfigAssetFreeze#0: bytes = itxn[result_with_txn.0#0].ConfigAssetFreeze
                let result_with_txn.0.ConfigAssetClawback#0: bytes = itxn[result_with_txn.0#0].ConfigAssetClawback
                let result_with_txn.0.FreezeAsset#0: uint64 = itxn[result_with_txn.0#0].FreezeAsset
                let result_with_txn.0.FreezeAssetAccount#0: bytes = itxn[result_with_txn.0#0].FreezeAssetAccount
                let result_with_txn.0.FreezeAssetFrozen#0: bool = itxn[result_with_txn.0#0].FreezeAssetFrozen
                let result_with_txn.0.NumAssets#0: uint64 = itxn[result_with_txn.0#0].NumAssets
                let result_with_txn.0.NumApplications#0: uint64 = itxn[result_with_txn.0#0].NumApplications
                let result_with_txn.0.GlobalNumUint#0: uint64 = itxn[result_with_txn.0#0].GlobalNumUint
                let result_with_txn.0.GlobalNumByteSlice#0: uint64 = itxn[result_with_txn.0#0].GlobalNumByteSlice
                let result_with_txn.0.LocalNumUint#0: uint64 = itxn[result_with_txn.0#0].LocalNumUint
                let result_with_txn.0.LocalNumByteSlice#0: uint64 = itxn[result_with_txn.0#0].LocalNumByteSlice
                let result_with_txn.0.ExtraProgramPages#0: uint64 = itxn[result_with_txn.0#0].ExtraProgramPages
                let result_with_txn.0.Nonparticipation#0: bool = itxn[result_with_txn.0#0].Nonparticipation
                let result_with_txn.0.NumLogs#0: uint64 = itxn[result_with_txn.0#0].NumLogs
                let result_with_txn.0.CreatedAssetID#0: uint64 = itxn[result_with_txn.0#0].CreatedAssetID
                let result_with_txn.0.CreatedApplicationID#0: uint64 = itxn[result_with_txn.0#0].CreatedApplicationID
                let result_with_txn.0.LastLog#0: bytes = itxn[result_with_txn.0#0].LastLog
                let result_with_txn.0.StateProofPK#0: bytes = itxn[result_with_txn.0#0].StateProofPK
                let result_with_txn.0.NumApprovalProgramPages#0: uint64 = itxn[result_with_txn.0#0].NumApprovalProgramPages
                let result_with_txn.0.NumClearStateProgramPages#0: uint64 = itxn[result_with_txn.0#0].NumClearStateProgramPages
                let result_with_txn.1#0: bytes = tuple_with_txn_fields.1#0
                let tmp%0#0: bytes = itxn[result_with_txn.0#0].ApplicationArgs[0u]
                let tmp%1#0: bool = (== tmp%0#0 "1a")
                (assert tmp%1#0)
                let tmp%2#0: bytes = itxn[result_with_txn.0#0].ApplicationArgs[1u]
                let tmp%3#0: bool = (== tmp%2#0 "2a")
                (assert tmp%3#0)
                let tmp%4#0: bool = (== result_with_txn.1#0 "some other value")
                (assert tmp%4#0)
                return 
    
    program clear-state:
        subroutine test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.clear_state_program() -> bool:
            block@0: // L21
                return 1u