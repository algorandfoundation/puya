// Op                                                                                                          Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txn NumAppArgs                                                                                         tmp%0#1
        l-load tmp%0#1 0                                                                                       tmp%0#1
        bz main_bare_routing@6 ; b main_abi_routing@2

    main_abi_routing@2:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txna ApplicationArgs 0                                                                                 tmp%2#0
        method test_branching_array_call(bool)void                                                             tmp%2#0,Method(test_branching_array_call(bool)void)
        l-load tmp%2#0 1                                                                                       Method(test_branching_array_call(bool)void),tmp%2#0
        match main_test_branching_array_call_route@3 ; b main_after_if_else@10

    main_test_branching_array_call_route@3:
        // inner_transactions/array_access.py:21
        // @arc4.abimethod
        txn OnCompletion                                                                                       tmp%3#0
        l-load tmp%3#0 0                                                                                       tmp%3#0
        !                                                                                                      tmp%4#0
        l-load tmp%4#0 0                                                                                       tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                      tmp%5#0
        l-load tmp%5#0 0                                                                                       tmp%5#0
        assert // can only call when not creating
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txna ApplicationArgs 1                                                                                 reinterpret_bytes[1]%0#0
        // inner_transactions/array_access.py:21
        // @arc4.abimethod
        l-load reinterpret_bytes[1]%0#0 0                                                                      reinterpret_bytes[1]%0#0
        callsub test_branching_array_call
        int 1                                                                                                  1
        l-store test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0 0 test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0
        l-load test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0 0 test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11 

    main_bare_routing@6:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txn OnCompletion                                                                                       tmp%7#0
        l-load tmp%7#0 0                                                                                       tmp%7#0
        bz main___algopy_default_create@7 ; b main_after_if_else@10

    main___algopy_default_create@7:
        txn ApplicationID                                                                                      tmp%8#0
        l-load tmp%8#0 0                                                                                       tmp%8#0
        !                                                                                                      tmp%9#0
        l-load tmp%9#0 0                                                                                       tmp%9#0
        assert // can only call when creating
        int 1                                                                                                  1
        l-store test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0 0 test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0
        l-load test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0 0 test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11 

    main_after_if_else@10:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        int 0                                                                                                  0
        l-store test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0 0 test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0
        l-load test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0 0 test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11 

    main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11:
        v-load tmp%0#0                                                                                         tmp%0#0
        return


// test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call(maybe: bytes) -> void:
subroutine test_branching_array_call:
    test_branching_array_call_block@0:                                                                         (洧도) maybe#0 |
        // inner_transactions/array_access.py:23
        // if maybe:
        p-load maybe#0                                                                                         (洧도) maybe#0 | maybe#0 (copy)
        byte 0x00                                                                                              (洧도) maybe#0 | maybe#0 (copy),0x00
        !=                                                                                                     (洧도) maybe#0 | tmp%0#0
        l-store-copy tmp%0#0 0                                                                                 (洧도) maybe#0 | tmp%0#0,tmp%0#0 (copy)
        v-store tmp%0#0                                                                                        (洧도) maybe#0 | tmp%0#0
        l-load tmp%0#0 0                                                                                       (洧도) maybe#0 | tmp%0#0
        bz test_branching_array_call_else_body@3 ; b test_branching_array_call_if_body@1                       (洧도) maybe#0 |

    test_branching_array_call_if_body@1:                                                                       (洧도) maybe#0 |
        // inner_transactions/array_access.py:24-28
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"1"), Bytes(b"2")),
        // ).submit()
        itxn_begin                                                                                             (洧도) maybe#0 |
        // inner_transactions/array_access.py:27
        // app_args=(Bytes(b"1"), Bytes(b"2")),
        byte 0x31                                                                                              (洧도) maybe#0 | 0x31
        itxn_field ApplicationArgs                                                                             (洧도) maybe#0 |
        byte 0x32                                                                                              (洧도) maybe#0 | 0x32
        itxn_field ApplicationArgs                                                                             (洧도) maybe#0 |
        // inner_transactions/array_access.py:26
        // clear_state_program=ALWAYS_APPROVE,
        byte 0x098101                                                                                          (洧도) maybe#0 | 0x098101
        itxn_field ClearStateProgramPages                                                                      (洧도) maybe#0 |
        // inner_transactions/array_access.py:25
        // approval_program=ALWAYS_APPROVE,
        byte 0x098101                                                                                          (洧도) maybe#0 | 0x098101
        itxn_field ApprovalProgramPages                                                                        (洧도) maybe#0 |
        // inner_transactions/array_access.py:24
        // create_app_txn = itxn.ApplicationCall(
        int appl                                                                                               (洧도) maybe#0 | appl
        itxn_field TypeEnum                                                                                    (洧도) maybe#0 |
        int 0                                                                                                  (洧도) maybe#0 | 0
        itxn_field Fee                                                                                         (洧도) maybe#0 |
        // inner_transactions/array_access.py:24-28
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"1"), Bytes(b"2")),
        // ).submit()
        itxn_submit                                                                                            (洧도) maybe#0 |
        b test_branching_array_call_after_if_else@5                                                            (洧도) maybe#0 |

    test_branching_array_call_else_body@3:                                                                     (洧도) maybe#0 |
        // inner_transactions/array_access.py:30-35
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"3"), Bytes(b"4"), Bytes(b"5")),
        //     note=b"different param set",
        // ).submit()
        itxn_begin                                                                                             (洧도) maybe#0 |
        // inner_transactions/array_access.py:34
        // note=b"different param set",
        byte 0x646966666572656e7420706172616d20736574                                                          (洧도) maybe#0 | 0x646966666572656e7420706172616d20736574
        itxn_field Note                                                                                        (洧도) maybe#0 |
        // inner_transactions/array_access.py:33
        // app_args=(Bytes(b"3"), Bytes(b"4"), Bytes(b"5")),
        byte 0x33                                                                                              (洧도) maybe#0 | 0x33
        itxn_field ApplicationArgs                                                                             (洧도) maybe#0 |
        byte 0x34                                                                                              (洧도) maybe#0 | 0x34
        itxn_field ApplicationArgs                                                                             (洧도) maybe#0 |
        byte 0x35                                                                                              (洧도) maybe#0 | 0x35
        itxn_field ApplicationArgs                                                                             (洧도) maybe#0 |
        // inner_transactions/array_access.py:32
        // clear_state_program=ALWAYS_APPROVE,
        byte 0x098101                                                                                          (洧도) maybe#0 | 0x098101
        itxn_field ClearStateProgramPages                                                                      (洧도) maybe#0 |
        // inner_transactions/array_access.py:31
        // approval_program=ALWAYS_APPROVE,
        byte 0x098101                                                                                          (洧도) maybe#0 | 0x098101
        itxn_field ApprovalProgramPages                                                                        (洧도) maybe#0 |
        // inner_transactions/array_access.py:30
        // create_app_txn = itxn.ApplicationCall(
        int appl                                                                                               (洧도) maybe#0 | appl
        itxn_field TypeEnum                                                                                    (洧도) maybe#0 |
        int 0                                                                                                  (洧도) maybe#0 | 0
        itxn_field Fee                                                                                         (洧도) maybe#0 |
        // inner_transactions/array_access.py:30-35
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"3"), Bytes(b"4"), Bytes(b"5")),
        //     note=b"different param set",
        // ).submit()
        itxn_submit                                                                                            (洧도) maybe#0 |
        b test_branching_array_call_after_if_else@5                                                            (洧도) maybe#0 |

    test_branching_array_call_after_if_else@5:                                                                 (洧도) maybe#0 |
        // inner_transactions/array_access.py:36
        // if maybe:
        v-load tmp%0#0                                                                                         (洧도) maybe#0 | tmp%0#0
        bz test_branching_array_call_else_body@7 ; b test_branching_array_call_if_body@6                       (洧도) maybe#0 |

    test_branching_array_call_if_body@6:                                                                       (洧도) maybe#0 |
        // inner_transactions/array_access.py:37
        // assert create_app_txn.app_args(0) == b"1", "correct args used 1"
        itxna ApplicationArgs 0                                                                                (洧도) maybe#0 | tmp%2#0
        l-load tmp%2#0 0                                                                                       (洧도) maybe#0 | tmp%2#0
        byte 0x31                                                                                              (洧도) maybe#0 | tmp%2#0,0x31
        ==                                                                                                     (洧도) maybe#0 | tmp%3#0
        l-load tmp%3#0 0                                                                                       (洧도) maybe#0 | tmp%3#0
        assert // correct args used 1                                                                          (洧도) maybe#0 |
        // inner_transactions/array_access.py:38
        // assert create_app_txn.app_args(1) == b"2", "correct args used 2"
        itxna ApplicationArgs 1                                                                                (洧도) maybe#0 | tmp%4#0
        l-load tmp%4#0 0                                                                                       (洧도) maybe#0 | tmp%4#0
        byte 0x32                                                                                              (洧도) maybe#0 | tmp%4#0,0x32
        ==                                                                                                     (洧도) maybe#0 | tmp%5#0
        l-load tmp%5#0 0                                                                                       (洧도) maybe#0 | tmp%5#0
        assert // correct args used 2                                                                          (洧도) maybe#0 |
        b test_branching_array_call_after_if_else@8                                                            (洧도) maybe#0 |

    test_branching_array_call_else_body@7:                                                                     (洧도) maybe#0 |
        // inner_transactions/array_access.py:40
        // assert create_app_txn.app_args(0) == b"3", "correct args used 1"
        itxna ApplicationArgs 0                                                                                (洧도) maybe#0 | tmp%6#0
        l-load tmp%6#0 0                                                                                       (洧도) maybe#0 | tmp%6#0
        byte 0x33                                                                                              (洧도) maybe#0 | tmp%6#0,0x33
        ==                                                                                                     (洧도) maybe#0 | tmp%7#0
        l-load tmp%7#0 0                                                                                       (洧도) maybe#0 | tmp%7#0
        assert // correct args used 1                                                                          (洧도) maybe#0 |
        // inner_transactions/array_access.py:41
        // assert create_app_txn.app_args(1) == b"4", "correct args used 2"
        itxna ApplicationArgs 1                                                                                (洧도) maybe#0 | tmp%8#0
        l-load tmp%8#0 0                                                                                       (洧도) maybe#0 | tmp%8#0
        byte 0x34                                                                                              (洧도) maybe#0 | tmp%8#0,0x34
        ==                                                                                                     (洧도) maybe#0 | tmp%9#0
        l-load tmp%9#0 0                                                                                       (洧도) maybe#0 | tmp%9#0
        assert // correct args used 2                                                                          (洧도) maybe#0 |
        // inner_transactions/array_access.py:42
        // assert create_app_txn.app_args(2) == b"5", "correct args used 3"
        itxna ApplicationArgs 2                                                                                (洧도) maybe#0 | tmp%10#0
        l-load tmp%10#0 0                                                                                      (洧도) maybe#0 | tmp%10#0
        byte 0x35                                                                                              (洧도) maybe#0 | tmp%10#0,0x35
        ==                                                                                                     (洧도) maybe#0 | tmp%11#0
        l-load tmp%11#0 0                                                                                      (洧도) maybe#0 | tmp%11#0
        assert // correct args used 3                                                                          (洧도) maybe#0 |
        b test_branching_array_call_after_if_else@8                                                            (洧도) maybe#0 |

    test_branching_array_call_after_if_else@8:                                                                 (洧도) maybe#0 |
        retsub


