// Op                                                                                    Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txn NumAppArgs                                                                   tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                   tmp%0#1
        bz main_bare_routing@6 ; b main_abi_routing@2

    main_abi_routing@2:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txna ApplicationArgs 0                                                           tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                   tmp%2#0
        method test_branching_array_call(bool)void                                       tmp%2#0,Method(test_branching_array_call(bool)void)
        ==                                                                               eq%tmp%2#0
        v-store eq%tmp%2#0
        v-load eq%tmp%2#0                                                                eq%tmp%2#0
        assert
        // inner_transactions/array_access.py:21
        // @arc4.abimethod
        txn OnCompletion                                                                 tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                   tmp%3#0
        !                                                                                tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                   tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                   tmp%5#0
        assert // can only call when not creating
        callsub test_branching_array_call
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        err

    main_bare_routing@6:
        // inner_transactions/array_access.py:20
        // class ArrayAccessContract(ARC4Contract):
        txn OnCompletion                                                                 tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                   tmp%7#0
        !                                                                                not%tmp%7#0
        v-store not%tmp%7#0
        v-load not%tmp%7#0                                                               not%tmp%7#0
        assert
        txn ApplicationID                                                                tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                   tmp%8#0
        !                                                                                tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                   tmp%9#0
        assert // can only call when creating
        int 1                                                                            1
        return


// test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call[routing]() -> void:
subroutine test_branching_array_call:
    test_branching_array_call_block@0:
        // inner_transactions/array_access.py:21
        // @arc4.abimethod
        txna ApplicationArgs 1                                                           maybe#0
        v-store maybe#0
        // inner_transactions/array_access.py:23
        // if maybe:
        v-load maybe#0                                                                   maybe#0
        byte 0x00                                                                        maybe#0,0x00
        !=                                                                               tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                   tmp%1#0
        bz test_branching_array_call_else_body@4 ; b test_branching_array_call_if_body@2

    test_branching_array_call_if_body@2:
        // inner_transactions/array_access.py:24-28
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"1"), Bytes(b"2")),
        // ).submit()
        itxn_begin
        // inner_transactions/array_access.py:27
        // app_args=(Bytes(b"1"), Bytes(b"2")),
        byte 0x31                                                                        0x31
        itxn_field ApplicationArgs
        byte 0x32                                                                        0x32
        itxn_field ApplicationArgs
        // inner_transactions/array_access.py:26
        // clear_state_program=ALWAYS_APPROVE,
        byte 0x098101                                                                    0x098101
        itxn_field ClearStateProgramPages
        // inner_transactions/array_access.py:25
        // approval_program=ALWAYS_APPROVE,
        byte 0x098101                                                                    0x098101
        itxn_field ApprovalProgramPages
        // inner_transactions/array_access.py:24
        // create_app_txn = itxn.ApplicationCall(
        int appl                                                                         appl
        itxn_field TypeEnum
        int 0                                                                            0
        itxn_field Fee
        // inner_transactions/array_access.py:24-28
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"1"), Bytes(b"2")),
        // ).submit()
        itxn_submit
        b test_branching_array_call_after_if_else@6

    test_branching_array_call_else_body@4:
        // inner_transactions/array_access.py:30-35
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"3"), Bytes(b"4"), Bytes(b"5")),
        //     note=b"different param set",
        // ).submit()
        itxn_begin
        // inner_transactions/array_access.py:34
        // note=b"different param set",
        byte 0x646966666572656e7420706172616d20736574                                    0x646966666572656e7420706172616d20736574
        itxn_field Note
        // inner_transactions/array_access.py:33
        // app_args=(Bytes(b"3"), Bytes(b"4"), Bytes(b"5")),
        byte 0x33                                                                        0x33
        itxn_field ApplicationArgs
        byte 0x34                                                                        0x34
        itxn_field ApplicationArgs
        byte 0x35                                                                        0x35
        itxn_field ApplicationArgs
        // inner_transactions/array_access.py:32
        // clear_state_program=ALWAYS_APPROVE,
        byte 0x098101                                                                    0x098101
        itxn_field ClearStateProgramPages
        // inner_transactions/array_access.py:31
        // approval_program=ALWAYS_APPROVE,
        byte 0x098101                                                                    0x098101
        itxn_field ApprovalProgramPages
        // inner_transactions/array_access.py:30
        // create_app_txn = itxn.ApplicationCall(
        int appl                                                                         appl
        itxn_field TypeEnum
        int 0                                                                            0
        itxn_field Fee
        // inner_transactions/array_access.py:30-35
        // create_app_txn = itxn.ApplicationCall(
        //     approval_program=ALWAYS_APPROVE,
        //     clear_state_program=ALWAYS_APPROVE,
        //     app_args=(Bytes(b"3"), Bytes(b"4"), Bytes(b"5")),
        //     note=b"different param set",
        // ).submit()
        itxn_submit
        b test_branching_array_call_after_if_else@6

    test_branching_array_call_after_if_else@6:
        // inner_transactions/array_access.py:36
        // if maybe:
        v-load tmp%1#0                                                                   tmp%1#0
        bz test_branching_array_call_else_body@8 ; b test_branching_array_call_if_body@7

    test_branching_array_call_if_body@7:
        // inner_transactions/array_access.py:37
        // assert create_app_txn.app_args(0) == b"1", "correct args used 1"
        itxna ApplicationArgs 0                                                          tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                   tmp%4#0
        byte 0x31                                                                        tmp%4#0,0x31
        ==                                                                               tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                   tmp%5#0
        assert // correct args used 1
        // inner_transactions/array_access.py:38
        // assert create_app_txn.app_args(1) == b"2", "correct args used 2"
        itxna ApplicationArgs 1                                                          tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                   tmp%6#0
        byte 0x32                                                                        tmp%6#0,0x32
        ==                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                   tmp%7#0
        assert // correct args used 2
        b test_branching_array_call_after_if_else@9

    test_branching_array_call_else_body@8:
        // inner_transactions/array_access.py:40
        // assert create_app_txn.app_args(0) == b"3", "correct args used 1"
        itxna ApplicationArgs 0                                                          tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                   tmp%8#0
        byte 0x33                                                                        tmp%8#0,0x33
        ==                                                                               tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                   tmp%9#0
        assert // correct args used 1
        // inner_transactions/array_access.py:41
        // assert create_app_txn.app_args(1) == b"4", "correct args used 2"
        itxna ApplicationArgs 1                                                          tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                  tmp%10#0
        byte 0x34                                                                        tmp%10#0,0x34
        ==                                                                               tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                  tmp%11#0
        assert // correct args used 2
        // inner_transactions/array_access.py:42
        // assert create_app_txn.app_args(2) == b"5", "correct args used 3"
        itxna ApplicationArgs 2                                                          tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                  tmp%12#0
        byte 0x35                                                                        tmp%12#0,0x35
        ==                                                                               tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                  tmp%13#0
        assert // correct args used 3
        b test_branching_array_call_after_if_else@9

    test_branching_array_call_after_if_else@9:
        // inner_transactions/array_access.py:21
        // @arc4.abimethod
        int 1                                                                            1
        return


