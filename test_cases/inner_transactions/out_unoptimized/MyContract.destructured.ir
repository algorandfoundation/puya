contract test_cases.inner_transactions.contract.MyContract:
    program approval:
        subroutine test_cases.inner_transactions.contract.MyContract.approval_program() -> uint64:
            block@0: // L26
                let app_id%0#0: uint64 = (txn ApplicationID)
                goto app_id%0#0 ? block@2 : block@1
            block@1: // on_create_L23
                test_cases.inner_transactions.contract.MyContract.__init__()
                goto block@2
            block@2: // entrypoint_L23
                let tmp%0#0: uint64 = (txn NumAppArgs)
                goto tmp%0#0 ? block@3 : block@10
            block@3: // if_body_L27
                let awst_tmp%0#0: bytes = (txna ApplicationArgs 0)
                switch awst_tmp%0#0 {"test1" => block@4, "test2" => block@5, "test3" => block@6, "test4" => block@7, * => block@8}
            block@4: // switch_case_0_L30
                test_cases.inner_transactions.contract.MyContract.test1()
                goto block@9
            block@5: // switch_case_1_L32
                test_cases.inner_transactions.contract.MyContract.test2()
                goto block@9
            block@6: // switch_case_2_L34
                test_cases.inner_transactions.contract.MyContract.test3()
                goto block@9
            block@7: // switch_case_3_L36
                test_cases.inner_transactions.contract.MyContract.test4()
                goto block@9
            block@8: // switch_case_default_L28
                goto block@9
            block@9: // switch_case_next_L28
                goto block@10
            block@10: // after_if_else_L27
                return 1u
        
        subroutine test_cases.inner_transactions.contract.MyContract.test1() -> void:
            block@0: // L42
                (app_global_put "name" "AST1")
                let asset_params%%param_TypeEnum_idx_0#0: uint64 = acfg
                let asset_params%%param_ConfigAssetTotal_idx_0#0: uint64 = 1000u
                let (name_value%0#0: bytes, name_exists%0#0: uint64) = (app_global_get_ex 0u "name")
                (assert name_exists%0#0) // check name exists
                let asset_params%%param_ConfigAssetName_idx_0#0: bytes = name_value%0#0
                let asset_params%%param_ConfigAssetUnitName_idx_0#0: bytes = "unit"
                let asset_params%%param_ConfigAssetDecimals_idx_0#0: uint64 = 3u
                let asset_params%%param_ConfigAssetManager_idx_0#0: bytes = (global CurrentApplicationAddress)
                let asset_params%%param_ConfigAssetReserve_idx_0#0: bytes = (global CurrentApplicationAddress)
                let asset_params%%param_Fee_idx_0#0: uint64 = 0u
                (app_global_put "name" "AST2")
                itxn_begin
                ((itxn_field Fee) asset_params%%param_Fee_idx_0#0)
                ((itxn_field ConfigAssetReserve) asset_params%%param_ConfigAssetReserve_idx_0#0)
                ((itxn_field ConfigAssetManager) asset_params%%param_ConfigAssetManager_idx_0#0)
                ((itxn_field ConfigAssetDecimals) asset_params%%param_ConfigAssetDecimals_idx_0#0)
                ((itxn_field ConfigAssetUnitName) asset_params%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field ConfigAssetName) asset_params%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetTotal) asset_params%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field TypeEnum) asset_params%%param_TypeEnum_idx_0#0)
                goto block@1
            block@1: // next_txn_L55
                itxn_submit
                let asset1_txn%%ConfigAssetName#0: bytes = (itxn ConfigAssetName)
                let asset1_txn%%CreatedAssetID#0: uint64 = (itxn CreatedAssetID)
                let (name_value%1#0: bytes, name_exists%1#0: uint64) = (app_global_get_ex 0u "name")
                (assert name_exists%1#0) // check name exists
                let asset_params%%param_ConfigAssetName_idx_0#0: bytes = name_value%1#0
                itxn_begin
                ((itxn_field Fee) asset_params%%param_Fee_idx_0#0)
                ((itxn_field ConfigAssetReserve) asset_params%%param_ConfigAssetReserve_idx_0#0)
                ((itxn_field ConfigAssetManager) asset_params%%param_ConfigAssetManager_idx_0#0)
                ((itxn_field ConfigAssetDecimals) asset_params%%param_ConfigAssetDecimals_idx_0#0)
                ((itxn_field ConfigAssetUnitName) asset_params%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field ConfigAssetName) asset_params%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetTotal) asset_params%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field TypeEnum) asset_params%%param_TypeEnum_idx_0#0)
                goto block@2
            block@2: // next_txn_L61
                itxn_submit
                let asset2_txn%%ConfigAssetName#0: bytes = (itxn ConfigAssetName)
                let asset2_txn%%CreatedAssetID#0: uint64 = (itxn CreatedAssetID)
                let tmp%0#0: uint64 = (== asset1_txn%%ConfigAssetName#0 "AST1")
                (assert tmp%0#0) // asset1_txn is correct
                let tmp%1#0: uint64 = (== asset2_txn%%ConfigAssetName#0 "AST2")
                (assert tmp%1#0) // asset2_txn is correct
                let (value%0#0: bytes, check%0#0: uint64) = ((asset_params_get AssetName) asset1_txn%%CreatedAssetID#0)
                (assert check%0#0) // asset exists
                let tmp%2#0: uint64 = (== value%0#0 "AST1")
                (assert tmp%2#0) // created asset 1 is correct
                let (value%1#0: bytes, check%1#0: uint64) = ((asset_params_get AssetName) asset2_txn%%CreatedAssetID#0)
                (assert check%1#0) // asset exists
                let tmp%3#0: uint64 = (== value%1#0 "AST2")
                (assert tmp%3#0) // created asset 2 is correct
                let app_create_params%%param_TypeEnum_idx_0#0: uint64 = appl
                let app_create_params%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let app_create_params%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let app_create_params%%param_Fee_idx_0#0: uint64 = 0u
                let asset_params%%param_ConfigAssetName_idx_0#0: bytes = "AST3"
                itxn_begin
                ((itxn_field Fee) app_create_params%%param_Fee_idx_0#0)
                ((itxn_field ClearStateProgramPages) app_create_params%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_create_params%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) app_create_params%%param_TypeEnum_idx_0#0)
                goto block@3
            block@3: // next_txn_L79
                itxn_next
                ((itxn_field Fee) asset_params%%param_Fee_idx_0#0)
                ((itxn_field ConfigAssetReserve) asset_params%%param_ConfigAssetReserve_idx_0#0)
                ((itxn_field ConfigAssetManager) asset_params%%param_ConfigAssetManager_idx_0#0)
                ((itxn_field ConfigAssetDecimals) asset_params%%param_ConfigAssetDecimals_idx_0#0)
                ((itxn_field ConfigAssetUnitName) asset_params%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field ConfigAssetName) asset_params%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetTotal) asset_params%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field TypeEnum) asset_params%%param_TypeEnum_idx_0#0)
                goto block@4
            block@4: // next_txn_L79
                itxn_submit
                let app_create_txn%%CreatedApplicationID#0: uint64 = (gitxn 0 CreatedApplicationID)
                let asset3_txn%%ConfigAssetName#0: bytes = (itxn ConfigAssetName)
                (assert app_create_txn%%CreatedApplicationID#0) // created app
                let tmp%4#0: uint64 = (== asset3_txn%%ConfigAssetName#0 "AST3")
                (assert tmp%4#0) // asset3_txn is correct
                let app_create_params%%param_Note_idx_0#0: bytes = "3rd"
                let app_create_params%%Note_length#1: uint64 = 1u
                let asset_params%%param_Note_idx_0#0: bytes = "3rd"
                let asset_params%%Note_length#1: uint64 = 1u
                itxn_begin
                let is_Note_count_gte_1%0#0: uint64 = (>= app_create_params%%Note_length#1 1u)
                goto is_Note_count_gte_1%0#0 ? block@5 : block@6
            block@5: // set_Note_0_to_0_L86
                ((itxn_field Note) app_create_params%%param_Note_idx_0#0)
                goto block@6
            block@6: // next_field_L86
                ((itxn_field Fee) app_create_params%%param_Fee_idx_0#0)
                ((itxn_field ClearStateProgramPages) app_create_params%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_create_params%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) app_create_params%%param_TypeEnum_idx_0#0)
                goto block@7
            block@7: // next_txn_L86
                itxn_next
                let is_Note_count_gte_1%1#0: uint64 = (>= asset_params%%Note_length#1 1u)
                goto is_Note_count_gte_1%1#0 ? block@8 : block@9
            block@8: // set_Note_0_to_0_L86
                ((itxn_field Note) asset_params%%param_Note_idx_0#0)
                goto block@9
            block@9: // next_field_L86
                ((itxn_field Fee) asset_params%%param_Fee_idx_0#0)
                ((itxn_field ConfigAssetReserve) asset_params%%param_ConfigAssetReserve_idx_0#0)
                ((itxn_field ConfigAssetManager) asset_params%%param_ConfigAssetManager_idx_0#0)
                ((itxn_field ConfigAssetDecimals) asset_params%%param_ConfigAssetDecimals_idx_0#0)
                ((itxn_field ConfigAssetUnitName) asset_params%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field ConfigAssetName) asset_params%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetTotal) asset_params%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field TypeEnum) asset_params%%param_TypeEnum_idx_0#0)
                goto block@10
            block@10: // next_txn_L86
                itxn_submit
                return 
        
        subroutine test_cases.inner_transactions.contract.MyContract.test2() -> void:
            block@0: // L89
                let tmp%0#0: uint64 = (txn NumAppArgs)
                goto tmp%0#0 ? block@1 : block@2
            block@1: // if_body_L91
                let args.0#0: bytes = "1"
                let args.1#0: bytes = "2"
                let create_app_params%%param_TypeEnum_idx_0#0: uint64 = appl
                let create_app_params%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let create_app_params%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let create_app_params%%param_ApplicationArgs_idx_0#0: bytes = args.0#0
                let create_app_params%%param_ApplicationArgs_idx_1#0: bytes = args.1#0
                let create_app_params%%ApplicationArgs_length#0: uint64 = 2u
                let create_app_params%%param_Fee_idx_0#0: uint64 = 0u
                let create_app_params%%Note_length#0: uint64 = 0u
                goto block@3
            block@2: // else_body_L91
                let create_app_params%%param_TypeEnum_idx_0#0: uint64 = appl
                let create_app_params%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let create_app_params%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let create_app_params%%param_ApplicationArgs_idx_0#0: bytes = "3"
                let create_app_params%%param_ApplicationArgs_idx_1#0: bytes = "4"
                let create_app_params%%param_ApplicationArgs_idx_2#0: bytes = "5"
                let create_app_params%%ApplicationArgs_length#0: uint64 = 3u
                let create_app_params%%param_Note_idx_0#0: bytes = "different param set"
                let create_app_params%%Note_length#0: uint64 = 1u
                let create_app_params%%param_Fee_idx_0#0: uint64 = 0u
                goto block@3
            block@3: // after_if_else_L91
                itxn_begin
                let is_Note_count_gte_1%0#0: uint64 = (>= create_app_params%%Note_length#0 1u)
                goto is_Note_count_gte_1%0#0 ? block@4 : block@5
            block@4: // set_Note_0_to_0_L107
                ((itxn_field Note) create_app_params%%param_Note_idx_0#0)
                goto block@5
            block@5: // next_field_L107
                ((itxn_field Fee) create_app_params%%param_Fee_idx_0#0)
                ((itxn_field ApplicationArgs) create_app_params%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) create_app_params%%param_ApplicationArgs_idx_1#0)
                let is_ApplicationArgs_count_gte_3%0#0: uint64 = (>= create_app_params%%ApplicationArgs_length#0 3u)
                goto is_ApplicationArgs_count_gte_3%0#0 ? block@6 : block@7
            block@6: // set_ApplicationArgs_2_to_2_L107
                ((itxn_field ApplicationArgs) create_app_params%%param_ApplicationArgs_idx_2#0)
                goto block@7
            block@7: // next_field_L107
                ((itxn_field ClearStateProgramPages) create_app_params%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) create_app_params%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) create_app_params%%param_TypeEnum_idx_0#0)
                goto block@8
            block@8: // next_txn_L107
                itxn_submit
                let %%inner_txn_submit_id#0: uint64 = 1u
                let submit_id_is_1%0#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%0#0) // 'create_app_txn' can still be accessed
                let tmp%1#0: bytes = ((itxnas ApplicationArgs) 0u)
                let tmp%2#0: uint64 = (== tmp%1#0 "1")
                (assert tmp%2#0) // correct args used 1
                let submit_id_is_1%1#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%1#0) // 'create_app_txn' can still be accessed
                let tmp%3#0: bytes = ((itxnas ApplicationArgs) 1u)
                let tmp%4#0: uint64 = (== tmp%3#0 "2")
                (assert tmp%4#0) // correct args used 2
                let tmp%5#0: uint64 = (txn NumAppArgs)
                let tmp%6#0: uint64 = (> tmp%5#0 1u)
                goto tmp%6#0 ? block@9 : block@11
            block@9: // if_body_L111
                itxn_begin
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%param_ApprovalProgramPages_idx_0#0: bytes = 0x098101
                let inner_txn_params%0%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let inner_txn_params%0%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = "42"
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field OnCompletion) inner_txn_params%0%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) inner_txn_params%0%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) inner_txn_params%0%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                goto block@10
            block@10: // next_txn_L112
                itxn_submit
                let %%inner_txn_submit_id#0: uint64 = 2u
                let submit_id_is_2%0#0: uint64 = (== %%inner_txn_submit_id#0 2u)
                (assert submit_id_is_2%0#0) // 'create_app_txn2' can still be accessed
                let tmp%7#0: bytes = ((itxnas ApplicationArgs) 0u)
                let tmp%8#0: uint64 = (== tmp%7#0 "42")
                (assert tmp%8#0) // correct args used 2
                goto block@11
            block@11: // after_if_else_L111
                let submit_id_is_1%2#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%2#0) // 'create_app_txn' can still be accessed
                let tmp%9#0: bytes = ((itxnas ApplicationArgs) 0u)
                let tmp%10#0: uint64 = (== tmp%9#0 "1")
                (assert tmp%10#0) // this will error on access if create_app_txn2 was submitted
                return 
        
        subroutine test_cases.inner_transactions.contract.MyContract.test3() -> void:
            block@0: // L124
                let app_p_1%%param_TypeEnum_idx_0#0: uint64 = appl
                let app_p_1%%param_ApprovalProgramPages_idx_0#0: bytes = 0x09361a00b08101
                let app_p_1%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let app_p_1%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let app_p_1%%param_ApplicationArgs_idx_0#0: bytes = "1"
                let app_p_1%%param_Fee_idx_0#0: uint64 = 0u
                let app_p_2%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_2%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_2%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_2%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_2%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_2%%param_ApplicationArgs_idx_0#1: bytes = "2"
                let app_p_3%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_3%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_3%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_3%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_3%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_3%%param_ApplicationArgs_idx_0#1: bytes = "3"
                let app_p_4%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_4%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_4%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_4%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_4%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_4%%param_ApplicationArgs_idx_0#1: bytes = "4"
                let app_p_5%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_5%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_5%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_5%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_5%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_5%%param_ApplicationArgs_idx_0#1: bytes = "5"
                let app_p_6%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_6%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_6%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_6%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_6%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_6%%param_ApplicationArgs_idx_0#1: bytes = "6"
                let app_p_7%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_7%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_7%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_7%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_7%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_7%%param_ApplicationArgs_idx_0#1: bytes = "7"
                let app_p_8%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_8%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_8%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_8%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_8%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_8%%param_ApplicationArgs_idx_0#1: bytes = "8"
                let app_p_9%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_9%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_9%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_9%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_9%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_9%%param_ApplicationArgs_idx_0#1: bytes = "9"
                let app_p_10%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_10%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_10%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_10%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_10%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_10%%param_ApplicationArgs_idx_0#1: bytes = "10"
                let app_p_11%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_11%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_11%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_11%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_11%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_11%%param_ApplicationArgs_idx_0#1: bytes = "11"
                let app_p_12%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_12%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_12%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_12%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_12%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_12%%param_ApplicationArgs_idx_0#1: bytes = "12"
                let app_p_13%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_13%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_13%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_13%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_13%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_13%%param_ApplicationArgs_idx_0#1: bytes = "13"
                let app_p_14%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_14%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_14%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_14%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_14%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_14%%param_ApplicationArgs_idx_0#1: bytes = "14"
                let app_p_15%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_15%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_15%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_15%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_15%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_15%%param_ApplicationArgs_idx_0#1: bytes = "15"
                let app_p_16%%param_Fee_idx_0#0: uint64 = app_p_1%%param_Fee_idx_0#0
                let app_p_16%%param_TypeEnum_idx_0#0: uint64 = app_p_1%%param_TypeEnum_idx_0#0
                let app_p_16%%param_OnCompletion_idx_0#0: uint64 = app_p_1%%param_OnCompletion_idx_0#0
                let app_p_16%%param_ApprovalProgramPages_idx_0#0: bytes = app_p_1%%param_ApprovalProgramPages_idx_0#0
                let app_p_16%%param_ClearStateProgramPages_idx_0#0: bytes = app_p_1%%param_ClearStateProgramPages_idx_0#0
                let app_p_16%%param_ApplicationArgs_idx_0#1: bytes = "16"
                itxn_begin
                ((itxn_field Fee) app_p_1%%param_Fee_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field OnCompletion) app_p_1%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) app_p_1%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_1%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field TypeEnum) app_p_1%%param_TypeEnum_idx_0#0)
                goto block@1
            block@1: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_2%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_2%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_2%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_2%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_2%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_3%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_3%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_3%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_3%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_3%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_3%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_4%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_4%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_4%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_4%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_4%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_4%%param_Fee_idx_0#0)
                goto block@4
            block@4: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_5%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_5%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_5%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_5%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_5%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_5%%param_Fee_idx_0#0)
                goto block@5
            block@5: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_6%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_6%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_6%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_6%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_6%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_6%%param_Fee_idx_0#0)
                goto block@6
            block@6: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_7%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_7%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_7%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_7%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_7%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_7%%param_Fee_idx_0#0)
                goto block@7
            block@7: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_8%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_8%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_8%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_8%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_8%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_8%%param_Fee_idx_0#0)
                goto block@8
            block@8: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_9%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_9%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_9%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_9%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_9%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_9%%param_Fee_idx_0#0)
                goto block@9
            block@9: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_10%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_10%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_10%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_10%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_10%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_10%%param_Fee_idx_0#0)
                goto block@10
            block@10: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_11%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_11%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_11%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_11%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_11%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_11%%param_Fee_idx_0#0)
                goto block@11
            block@11: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_12%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_12%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_12%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_12%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_12%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_12%%param_Fee_idx_0#0)
                goto block@12
            block@12: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_13%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_13%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_13%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_13%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_13%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_13%%param_Fee_idx_0#0)
                goto block@13
            block@13: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_14%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_14%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_14%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_14%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_14%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_14%%param_Fee_idx_0#0)
                goto block@14
            block@14: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_15%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_15%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_15%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_15%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_15%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_15%%param_Fee_idx_0#0)
                goto block@15
            block@15: // next_txn_L195
                itxn_next
                ((itxn_field ClearStateProgramPages) app_p_16%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_16%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_16%%param_ApplicationArgs_idx_0#1)
                ((itxn_field OnCompletion) app_p_16%%param_OnCompletion_idx_0#0)
                ((itxn_field TypeEnum) app_p_16%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) app_p_16%%param_Fee_idx_0#0)
                goto block@16
            block@16: // next_txn_L195
                itxn_submit
                let %%inner_txn_submit_id#0: uint64 = 1u
                let submit_id_is_1%0#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%0#0) // 'app1' can still be accessed
                let tmp%0#0: bytes = ((gitxnas 0 Logs) 0u)
                let tmp%1#0: uint64 = (== tmp%0#0 "1")
                (assert tmp%1#0)
                let submit_id_is_1%1#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%1#0) // 'app2' can still be accessed
                let tmp%2#0: bytes = ((gitxnas 1 Logs) 0u)
                let tmp%3#0: uint64 = (== tmp%2#0 "2")
                (assert tmp%3#0)
                let submit_id_is_1%2#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%2#0) // 'app3' can still be accessed
                let tmp%4#0: bytes = ((gitxnas 2 Logs) 0u)
                let tmp%5#0: uint64 = (== tmp%4#0 "3")
                (assert tmp%5#0)
                let submit_id_is_1%3#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%3#0) // 'app4' can still be accessed
                let tmp%6#0: bytes = ((gitxnas 3 Logs) 0u)
                let tmp%7#0: uint64 = (== tmp%6#0 "4")
                (assert tmp%7#0)
                let submit_id_is_1%4#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%4#0) // 'app5' can still be accessed
                let tmp%8#0: bytes = ((gitxnas 4 Logs) 0u)
                let tmp%9#0: uint64 = (== tmp%8#0 "5")
                (assert tmp%9#0)
                let submit_id_is_1%5#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%5#0) // 'app6' can still be accessed
                let tmp%10#0: bytes = ((gitxnas 5 Logs) 0u)
                let tmp%11#0: uint64 = (== tmp%10#0 "6")
                (assert tmp%11#0)
                let submit_id_is_1%6#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%6#0) // 'app7' can still be accessed
                let tmp%12#0: bytes = ((gitxnas 6 Logs) 0u)
                let tmp%13#0: uint64 = (== tmp%12#0 "7")
                (assert tmp%13#0)
                let submit_id_is_1%7#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%7#0) // 'app8' can still be accessed
                let tmp%14#0: bytes = ((gitxnas 7 Logs) 0u)
                let tmp%15#0: uint64 = (== tmp%14#0 "8")
                (assert tmp%15#0)
                let submit_id_is_1%8#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%8#0) // 'app9' can still be accessed
                let tmp%16#0: bytes = ((gitxnas 8 Logs) 0u)
                let tmp%17#0: uint64 = (== tmp%16#0 "9")
                (assert tmp%17#0)
                let submit_id_is_1%9#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%9#0) // 'app10' can still be accessed
                let tmp%18#0: bytes = ((gitxnas 9 Logs) 0u)
                let tmp%19#0: uint64 = (== tmp%18#0 "10")
                (assert tmp%19#0)
                let submit_id_is_1%10#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%10#0) // 'app11' can still be accessed
                let tmp%20#0: bytes = ((gitxnas 10 Logs) 0u)
                let tmp%21#0: uint64 = (== tmp%20#0 "11")
                (assert tmp%21#0)
                let submit_id_is_1%11#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%11#0) // 'app12' can still be accessed
                let tmp%22#0: bytes = ((gitxnas 11 Logs) 0u)
                let tmp%23#0: uint64 = (== tmp%22#0 "12")
                (assert tmp%23#0)
                let submit_id_is_1%12#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%12#0) // 'app13' can still be accessed
                let tmp%24#0: bytes = ((gitxnas 12 Logs) 0u)
                let tmp%25#0: uint64 = (== tmp%24#0 "13")
                (assert tmp%25#0)
                let submit_id_is_1%13#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%13#0) // 'app14' can still be accessed
                let tmp%26#0: bytes = ((gitxnas 13 Logs) 0u)
                let tmp%27#0: uint64 = (== tmp%26#0 "14")
                (assert tmp%27#0)
                let submit_id_is_1%14#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%14#0) // 'app15' can still be accessed
                let tmp%28#0: bytes = ((gitxnas 14 Logs) 0u)
                let tmp%29#0: uint64 = (== tmp%28#0 "15")
                (assert tmp%29#0)
                let submit_id_is_1%15#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%15#0) // 'app16' can still be accessed
                let tmp%30#0: bytes = ((itxnas Logs) 0u)
                let tmp%31#0: uint64 = (== tmp%30#0 "16")
                (assert tmp%31#0)
                return 
        
        subroutine test_cases.inner_transactions.contract.MyContract.test4() -> void:
            block@0: // L231
                let lots_of_bytes#0: bytes = (bzero 2044u)
                let approval_1#0: bytes = 0x098101
                let tmp%0#0: bytes = (concat 0x80fc0f lots_of_bytes#0)
                let approval_2#0: bytes = (concat tmp%0#0 "H")
                let app_p_1%%param_TypeEnum_idx_0#0: uint64 = appl
                let app_p_1%%param_ApprovalProgramPages_idx_0#0: bytes = approval_1#0
                let app_p_1%%param_ApprovalProgramPages_idx_1#0: bytes = approval_2#0
                let app_p_1%%param_ApprovalProgramPages_idx_2#0: bytes = approval_2#0
                let app_p_1%%param_ApprovalProgramPages_idx_3#0: bytes = approval_2#0
                let app_p_1%%param_ClearStateProgramPages_idx_0#0: bytes = 0x098101
                let app_p_1%%param_OnCompletion_idx_0#0: uint64 = DeleteApplication
                let app_p_1%%param_ApplicationArgs_idx_0#0: bytes = "1"
                let app_p_1%%param_ExtraProgramPages_idx_0#0: uint64 = 3u
                let app_p_1%%param_Fee_idx_0#0: uint64 = 0u
                itxn_begin
                ((itxn_field Fee) app_p_1%%param_Fee_idx_0#0)
                ((itxn_field ExtraProgramPages) app_p_1%%param_ExtraProgramPages_idx_0#0)
                ((itxn_field ApplicationArgs) app_p_1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field OnCompletion) app_p_1%%param_OnCompletion_idx_0#0)
                ((itxn_field ClearStateProgramPages) app_p_1%%param_ClearStateProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_1%%param_ApprovalProgramPages_idx_0#0)
                ((itxn_field ApprovalProgramPages) app_p_1%%param_ApprovalProgramPages_idx_1#0)
                ((itxn_field ApprovalProgramPages) app_p_1%%param_ApprovalProgramPages_idx_2#0)
                ((itxn_field ApprovalProgramPages) app_p_1%%param_ApprovalProgramPages_idx_3#0)
                ((itxn_field TypeEnum) app_p_1%%param_TypeEnum_idx_0#0)
                goto block@1
            block@1: // next_txn_L251
                itxn_submit
                let %%inner_txn_submit_id#0: uint64 = 1u
                let app_1%%ExtraProgramPages#0: uint64 = (itxn ExtraProgramPages)
                let app_1%%NumApprovalProgramPages#0: uint64 = (itxn NumApprovalProgramPages)
                let app_1%%NumClearStateProgramPages#0: uint64 = (itxn NumClearStateProgramPages)
                let tmp%1#0: uint64 = (== app_1%%ExtraProgramPages#0 3u)
                (assert tmp%1#0) // extra_pages == 3
                let tmp%2#0: uint64 = (== app_1%%NumApprovalProgramPages#0 2u)
                (assert tmp%2#0) // approval_pages == 2
                let submit_id_is_1%0#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%0#0) // 'app_1' can still be accessed
                let tmp%3#0: bytes = ((itxnas ApprovalProgramPages) 0u)
                let tmp%4#0: bytes = (concat approval_1#0 approval_2#0)
                let awst_tmp%0#0: bytes = approval_2#0
                let tmp%5#0: uint64 = (len awst_tmp%0#0)
                let tmp%6#0: uint64 = (len awst_tmp%0#0)
                let tmp%7#0: uint64 = (len awst_tmp%0#0)
                let tmp%8#0: uint64 = (< 3u tmp%7#0)
                let tmp%9#0: uint64 = (select tmp%6#0 3u tmp%8#0)
                let tmp%10#0: uint64 = (- tmp%5#0 tmp%9#0)
                let tmp%11#0: bytes = (substring3 awst_tmp%0#0 0u tmp%10#0)
                let tmp%12#0: bytes = (concat tmp%4#0 tmp%11#0)
                let tmp%13#0: uint64 = (== tmp%3#0 tmp%12#0)
                (assert tmp%13#0) // expected approval page 0
                let submit_id_is_1%1#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%1#0) // 'app_1' can still be accessed
                let tmp%14#0: bytes = ((itxnas ApprovalProgramPages) 1u)
                let awst_tmp%1#0: bytes = approval_2#0
                let tmp%15#0: uint64 = (len awst_tmp%1#0)
                let tmp%16#0: uint64 = (len awst_tmp%1#0)
                let tmp%17#0: uint64 = (len awst_tmp%1#0)
                let tmp%18#0: uint64 = (< 3u tmp%17#0)
                let tmp%19#0: uint64 = (select tmp%16#0 3u tmp%18#0)
                let tmp%20#0: uint64 = (- tmp%15#0 tmp%19#0)
                let base_length%0#0: uint64 = (len awst_tmp%1#0)
                let tmp%21#0: bytes = (substring3 awst_tmp%1#0 tmp%20#0 base_length%0#0)
                let tmp%22#0: bytes = (concat tmp%21#0 approval_2#0)
                let tmp%23#0: uint64 = (== tmp%14#0 tmp%22#0)
                (assert tmp%23#0) // expected approval page 1
                let tmp%24#0: uint64 = (== app_1%%NumClearStateProgramPages#0 1u)
                (assert tmp%24#0) // clear_state_pages == 1
                let submit_id_is_1%2#0: uint64 = (== %%inner_txn_submit_id#0 1u)
                (assert submit_id_is_1%2#0) // 'app_1' can still be accessed
                let tmp%25#0: bytes = ((itxnas ClearStateProgramPages) 0u)
                let tmp%26#0: uint64 = (== tmp%25#0 0x098101)
                (assert tmp%26#0) // expected clear_state_pages
                return 
        
        subroutine test_cases.inner_transactions.contract.MyContract.__init__() -> void:
            block@0: // L23
                (app_global_put "name" "")
                return 
    
    program clear-state:
        subroutine test_cases.inner_transactions.contract.MyContract.clear_state_program() -> uint64:
            block@0: // L39
                return 1u