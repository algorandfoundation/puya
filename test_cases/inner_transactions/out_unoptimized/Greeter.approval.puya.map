{
  "version": 3,
  "sources": [
    "../c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAaA;;;AAAA;;;AAAA;AAAA;;;;AAfG;AAAiB;AAAjB;;;;;AAIW;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAP;AAEI;AAEwB;;;;;;;AADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADrB;;;AAAA;;;;;;AAAA;AAAA;;AADJ;AAAA;;AAAA;AAQO;AAAA;AAAA;AAAA;AAAP;AAER;;;;;;AAEqB;AACF;AAAA;AAAA;AAAA;AAC+C;;AAA5C;;;;;;;;;;;;AAFD;;;AAAA;;;;;;AAAA;;;AAIF;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACP;;;;;;;;;;;;;;;;;;;;;;;AAAJ;;AAA6B;AAAA;;AAAA;;;AAAA;AAA7B;;;;;;;;AAxBR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAiBK;;;;;;AAbA;;;;;;AAJL;;;AAAA;;AAAA;;;;;;;;;AAAA;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock \"hello_app\" 0x151f7c75"
    },
    "23": {
      "op": "b main_block@0"
    },
    "26": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "28": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "31": {
      "op": "b main_call___init__@1"
    },
    "34": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.c2c.Greeter.__init__",
      "op": "callsub __init__"
    },
    "37": {
      "op": "b main_after_if_else@2"
    },
    "40": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "43": {
      "op": "return",
      "stack_out": []
    },
    "44": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.bootstrap[routing]",
      "params": {},
      "block": "bootstrap",
      "stack_in": [],
      "op": "b bootstrap_block@0"
    },
    "47": {
      "block": "bootstrap_block@0",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.c2c.Greeter.bootstrap",
      "op": "callsub test_cases.inner_transactions.c2c.Greeter.bootstrap",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "50": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "51": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "52": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "54": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "55": {
      "op": "log",
      "stack_out": []
    },
    "56": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "57": {
      "op": "return",
      "stack_out": []
    },
    "58": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.log_greetings[routing]",
      "params": {},
      "block": "log_greetings",
      "stack_in": [],
      "op": "b log_greetings_block@0"
    },
    "61": {
      "block": "log_greetings_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "64": {
      "callsub": "test_cases.inner_transactions.c2c.Greeter.log_greetings",
      "op": "callsub test_cases.inner_transactions.c2c.Greeter.log_greetings",
      "stack_out": []
    },
    "67": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "68": {
      "op": "return",
      "stack_out": []
    },
    "69": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "72": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\""
      ],
      "stack_out": [
        "\"hello_app\""
      ]
    },
    "73": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "\"hello_app\"",
        "0"
      ]
    },
    "74": {
      "op": "app_global_put",
      "stack_out": []
    },
    "75": {
      "retsub": true,
      "op": "retsub"
    },
    "76": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.bootstrap",
      "params": {},
      "block": "test_cases.inner_transactions.c2c.Greeter.bootstrap",
      "stack_in": [],
      "op": "b test_cases.inner_transactions.c2c.Greeter.bootstrap_block@0"
    },
    "79": {
      "block": "test_cases.inner_transactions.c2c.Greeter.bootstrap_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "80": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"hello_app\""
      ]
    },
    "81": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "82": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "83": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "84": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "85": {
      "error": "already bootstrapped",
      "op": "assert // already bootstrapped",
      "stack_out": []
    },
    "86": {
      "op": "itxn_begin"
    },
    "87": {
      "op": "pushbytes 0x0a8101",
      "defined_out": [
        "0x0a8101"
      ],
      "stack_out": [
        "0x0a8101"
      ]
    },
    "92": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "94": {
      "op": "pushbytes 0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089",
      "defined_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ],
      "stack_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ]
    },
    "181": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "183": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "184": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "186": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "187": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "189": {
      "op": "b test_cases.inner_transactions.c2c.Greeter.bootstrap_next_txn@1"
    },
    "192": {
      "block": "test_cases.inner_transactions.c2c.Greeter.bootstrap_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "193": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "195": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"hello_app\""
      ]
    },
    "196": {
      "op": "uncover 1",
      "stack_out": [
        "\"hello_app\"",
        "tmp%1#0"
      ]
    },
    "198": {
      "op": "app_global_put",
      "stack_out": []
    },
    "199": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "200": {
      "op": "bytec_0 // \"hello_app\"",
      "stack_out": [
        "0",
        "\"hello_app\""
      ]
    },
    "201": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "202": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "203": {
      "retsub": true,
      "op": "retsub"
    },
    "204": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.log_greetings",
      "params": {
        "name#0": "bytes"
      },
      "block": "test_cases.inner_transactions.c2c.Greeter.log_greetings",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "207": {
      "op": "b test_cases.inner_transactions.c2c.Greeter.log_greetings_block@0"
    },
    "210": {
      "block": "test_cases.inner_transactions.c2c.Greeter.log_greetings_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "211": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "212": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"hello_app\""
      ]
    },
    "213": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "214": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "215": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "217": {
      "op": "pushbytes 0x02bece11 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(hello(string)string)"
      ]
    },
    "223": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "225": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "227": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "229": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "230": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "232": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "233": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "235": {
      "op": "b test_cases.inner_transactions.c2c.Greeter.log_greetings_next_txn@1"
    },
    "238": {
      "block": "test_cases.inner_transactions.c2c.Greeter.log_greetings_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "239": {
      "op": "itxn LastLog",
      "defined_out": [
        "hello_call.LastLog#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "241": {
      "op": "dup",
      "defined_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ]
    },
    "242": {
      "op": "extract 4 0",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%0#0"
      ]
    },
    "245": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "hello_call.LastLog#0"
      ]
    },
    "247": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "250": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "251": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "252": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "greeting#0"
      ],
      "stack_out": [
        "greeting#0"
      ]
    },
    "253": {
      "op": "pushbytes \"HelloWorld returned: \"",
      "defined_out": [
        "\"HelloWorld returned: \"",
        "greeting#0"
      ],
      "stack_out": [
        "greeting#0",
        "\"HelloWorld returned: \""
      ]
    },
    "276": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "\"HelloWorld returned: \"",
        "greeting#0"
      ],
      "stack_out": [
        "greeting#0",
        "\"HelloWorld returned: \"",
        "\"\""
      ]
    },
    "278": {
      "op": "concat",
      "defined_out": [
        "greeting#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "greeting#0",
        "tmp%3#0"
      ]
    },
    "279": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "greeting#0"
      ]
    },
    "281": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "284": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "285": {
      "op": "log",
      "stack_out": []
    },
    "286": {
      "retsub": true,
      "op": "retsub"
    },
    "287": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "290": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "293": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "295": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "296": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "297": {
      "op": "bz approval_program_bare_routing@16",
      "stack_out": []
    },
    "300": {
      "op": "b approval_program_abi_routing@2"
    },
    "303": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "306": {
      "op": "match",
      "stack_out": []
    },
    "308": {
      "op": "b approval_program_route_NoOp@3"
    },
    "311": {
      "block": "approval_program_route_NoOp@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "313": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "314": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "315": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "316": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "319": {
      "op": "match",
      "stack_out": []
    },
    "321": {
      "op": "b approval_program_switch_case_default@4"
    },
    "324": {
      "block": "approval_program_switch_case_default@4",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "326": {
      "op": "bz approval_program_create_NoOp@10",
      "stack_out": []
    },
    "329": {
      "op": "b approval_program_call_NoOp@5"
    },
    "332": {
      "block": "approval_program_call_NoOp@5",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "335": {
      "op": "pushbytes 0x786b6291 // method \"bootstrap()uint64\"",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(bootstrap()uint64)"
      ]
    },
    "341": {
      "op": "pushbytes 0x33fb5d48 // method \"log_greetings(string)void\"",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ]
    },
    "347": {
      "op": "uncover 2",
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%7#0"
      ]
    },
    "349": {
      "op": "match approval_program_bootstrap_route@6 approval_program_log_greetings_route@7",
      "stack_out": []
    },
    "355": {
      "op": "b approval_program_switch_case_default@8"
    },
    "358": {
      "block": "approval_program_switch_case_default@8",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@9"
    },
    "361": {
      "block": "approval_program_switch_case_next@9",
      "stack_in": [],
      "op": "b approval_program_after_if_else@13"
    },
    "364": {
      "block": "approval_program_after_if_else@13",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@14"
    },
    "367": {
      "block": "approval_program_switch_case_next@14",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@15"
    },
    "370": {
      "block": "approval_program_switch_case_next@15",
      "stack_in": [],
      "op": "b approval_program_after_if_else@22"
    },
    "373": {
      "block": "approval_program_after_if_else@22",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "374": {
      "block": "approval_program_log_greetings_route@7",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.c2c.Greeter.log_greetings[routing]",
      "op": "callsub log_greetings"
    },
    "377": {
      "op": "b approval_program_switch_case_next@9"
    },
    "380": {
      "block": "approval_program_bootstrap_route@6",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.c2c.Greeter.bootstrap[routing]",
      "op": "callsub bootstrap"
    },
    "383": {
      "op": "b approval_program_switch_case_next@9"
    },
    "386": {
      "block": "approval_program_create_NoOp@10",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "389": {
      "op": "match",
      "stack_out": []
    },
    "391": {
      "op": "b approval_program_switch_case_default@11"
    },
    "394": {
      "block": "approval_program_switch_case_default@11",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@12"
    },
    "397": {
      "block": "approval_program_switch_case_next@12",
      "stack_in": [],
      "op": "b approval_program_after_if_else@13"
    },
    "400": {
      "block": "approval_program_bare_routing@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "402": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "403": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%9#0"
      ]
    },
    "405": {
      "op": "match approval_program___algopy_default_create@17",
      "stack_out": []
    },
    "409": {
      "op": "b approval_program_switch_case_default@20"
    },
    "412": {
      "block": "approval_program_switch_case_default@20",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@21"
    },
    "415": {
      "block": "approval_program_switch_case_next@21",
      "stack_in": [],
      "op": "b approval_program_after_if_else@22"
    },
    "418": {
      "block": "approval_program___algopy_default_create@17",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "420": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "421": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "422": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "423": {
      "op": "b approval_program_block@18"
    },
    "426": {
      "block": "approval_program_block@18",
      "stack_in": [],
      "op": "b approval_program_after_inlined_test_cases.inner_transactions.c2c.Greeter.__algopy_default_create@19"
    },
    "429": {
      "block": "approval_program_after_inlined_test_cases.inner_transactions.c2c.Greeter.__algopy_default_create@19",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "430": {
      "op": "return",
      "stack_out": []
    }
  }
}