{
  "version": 3,
  "sources": [
    "../array_access.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;;;;;;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AACK;;;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEW;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AAC6B;AAGH;;;AAAa;;;AADH;;;AADH;;;AADJ;;;AAAA;;;;;;AAAA;;;;AAYlB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AAC2C;AAAxB;;AAA8B;AAA9B;AAAP;AAC+B;AAAxB;;AAA8B;AAA9B;AAAP;;;;;AAE+B;AAAxB;;AAA8B;;;AAA9B;AAAP;AAC+B;AAAxB;;AAA8B;;;AAA9B;AAAP;AAC+B;;AAAxB;;AAA8B;;;AAA9B;AAAP;;;;AAZiB;AAIR;;;;;;;;;;;;;;;;;;;;;;;AADK;;;;;AAAa;;;;;AAAa;;;;;AADhB;;;AADH;;;AADJ;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock 0x098101 0x00 0x31 0x32"
    },
    "18": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "20": {
      "op": "b main_block@0"
    },
    "23": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "26": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "28": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "29": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "30": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "b main_abi_routing@2"
    },
    "36": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "39": {
      "op": "pushbytes 0x89a8220a // method \"test_branching_array_call(bool)void\"",
      "defined_out": [
        "Method(test_branching_array_call(bool)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(test_branching_array_call(bool)void)"
      ]
    },
    "45": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "Method(test_branching_array_call(bool)void)",
        "tmp%2#0"
      ]
    },
    "47": {
      "op": "match main_test_branching_array_call_route@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "51": {
      "op": "b main_switch_case_default@4"
    },
    "54": {
      "block": "main_switch_case_default@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@5"
    },
    "57": {
      "block": "main_switch_case_next@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "60": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0"
      ]
    },
    "61": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "63": {
      "op": "b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11"
    },
    "66": {
      "block": "main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "67": {
      "block": "main_test_branching_array_call_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "69": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "70": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "71": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "72": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "74": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "75": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "76": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "77": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "80": {
      "callsub": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call",
      "op": "callsub test_branching_array_call",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "83": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0"
      ]
    },
    "84": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "86": {
      "op": "b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11"
    },
    "89": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "91": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "0"
      ]
    },
    "92": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%7#0"
      ]
    },
    "94": {
      "op": "match main___algopy_default_create@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "98": {
      "op": "b main_switch_case_default@8"
    },
    "101": {
      "block": "main_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@9"
    },
    "104": {
      "block": "main_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "107": {
      "block": "main___algopy_default_create@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "109": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0"
      ]
    },
    "110": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "111": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "112": {
      "op": "b main_block@12"
    },
    "115": {
      "block": "main_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__algopy_default_create@13"
    },
    "118": {
      "block": "main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__%0#0"
      ]
    },
    "119": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "121": {
      "op": "b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__puya_arc4_router__@11"
    },
    "124": {
      "subroutine": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call",
      "params": {
        "maybe#0": "bytes"
      },
      "block": "test_branching_array_call",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "127": {
      "op": "b test_branching_array_call_block@0"
    },
    "130": {
      "block": "test_branching_array_call_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "131": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "133": {
      "op": "setbit",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "134": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe#0 (copy)"
      ]
    },
    "136": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "137": {
      "op": "bz test_branching_array_call_else_body@3",
      "stack_out": []
    },
    "140": {
      "op": "b test_branching_array_call_if_body@1"
    },
    "143": {
      "block": "test_branching_array_call_if_body@1",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "144": {
      "op": "bytec_2 // 0x31",
      "defined_out": [
        "0x31"
      ],
      "stack_out": [
        "0x31"
      ]
    },
    "145": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "147": {
      "op": "bytec_3 // 0x32",
      "defined_out": [
        "0x32"
      ],
      "stack_out": [
        "0x32"
      ]
    },
    "148": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "150": {
      "op": "bytec_0 // 0x098101",
      "defined_out": [
        "0x098101"
      ],
      "stack_out": [
        "0x098101"
      ]
    },
    "151": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "153": {
      "op": "bytec_0 // 0x098101",
      "stack_out": [
        "0x098101"
      ]
    },
    "154": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "156": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "157": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "159": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "160": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "162": {
      "op": "b test_branching_array_call_next_txn@2"
    },
    "165": {
      "block": "test_branching_array_call_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "166": {
      "op": "b test_branching_array_call_after_if_else@5"
    },
    "169": {
      "block": "test_branching_array_call_after_if_else@5",
      "stack_in": [],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "170": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "171": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "172": {
      "op": "setbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "173": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe#0 (copy)"
      ]
    },
    "175": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "176": {
      "op": "bz test_branching_array_call_else_body@7",
      "stack_out": []
    },
    "179": {
      "op": "b test_branching_array_call_if_body@6"
    },
    "182": {
      "block": "test_branching_array_call_if_body@6",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "183": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "185": {
      "op": "bytec_2 // 0x31",
      "defined_out": [
        "0x31",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x31"
      ]
    },
    "186": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "187": {
      "error": "correct args used 1",
      "op": "assert // correct args used 1",
      "stack_out": []
    },
    "188": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "189": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "191": {
      "op": "bytec_3 // 0x32",
      "defined_out": [
        "0x32",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x32"
      ]
    },
    "192": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "193": {
      "error": "correct args used 2",
      "op": "assert // correct args used 2",
      "stack_out": []
    },
    "194": {
      "op": "b test_branching_array_call_after_if_else@8"
    },
    "197": {
      "block": "test_branching_array_call_after_if_else@8",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "198": {
      "block": "test_branching_array_call_else_body@7",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "199": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "201": {
      "op": "pushbytes 0x33",
      "defined_out": [
        "0x33",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x33"
      ]
    },
    "204": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "205": {
      "error": "correct args used 1",
      "op": "assert // correct args used 1",
      "stack_out": []
    },
    "206": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "207": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "209": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0x34"
      ]
    },
    "212": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "213": {
      "error": "correct args used 2",
      "op": "assert // correct args used 2",
      "stack_out": []
    },
    "214": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "216": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "218": {
      "op": "pushbytes 0x35",
      "defined_out": [
        "0x35",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0x35"
      ]
    },
    "221": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "222": {
      "error": "correct args used 3",
      "op": "assert // correct args used 3",
      "stack_out": []
    },
    "223": {
      "op": "b test_branching_array_call_after_if_else@8"
    },
    "226": {
      "block": "test_branching_array_call_else_body@3",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "227": {
      "op": "pushbytes 0x646966666572656e7420706172616d20736574",
      "defined_out": [
        "0x646966666572656e7420706172616d20736574"
      ],
      "stack_out": [
        "0x646966666572656e7420706172616d20736574"
      ]
    },
    "248": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "250": {
      "op": "pushbytes 0x33",
      "defined_out": [
        "0x33"
      ],
      "stack_out": [
        "0x33"
      ]
    },
    "253": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "255": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34"
      ],
      "stack_out": [
        "0x34"
      ]
    },
    "258": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "260": {
      "op": "pushbytes 0x35",
      "defined_out": [
        "0x35"
      ],
      "stack_out": [
        "0x35"
      ]
    },
    "263": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "265": {
      "op": "bytec_0 // 0x098101",
      "defined_out": [
        "0x098101"
      ],
      "stack_out": [
        "0x098101"
      ]
    },
    "266": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "268": {
      "op": "bytec_0 // 0x098101",
      "stack_out": [
        "0x098101"
      ]
    },
    "269": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "271": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "272": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "274": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "275": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "277": {
      "op": "b test_branching_array_call_next_txn@4"
    },
    "280": {
      "block": "test_branching_array_call_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "281": {
      "op": "b test_branching_array_call_after_if_else@5"
    }
  }
}