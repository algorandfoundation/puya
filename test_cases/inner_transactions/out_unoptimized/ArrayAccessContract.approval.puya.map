{
  "version": 3,
  "sources": [
    "../array_access.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AACK;;;AAAA;;;AAAA;AAAA;AAAL;;;;;;AAEW;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AAC6B;AAGH;;;AAAa;;;AADH;;;AADH;;;AADJ;;;AAAA;;;;;;AAAA;;;;AAYlB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAX;;;AAAA;;;AAC2C;AAAxB;;AAA8B;AAA9B;AAAP;AAC+B;AAAxB;;AAA8B;AAA9B;AAAP;;;;;AAE+B;AAAxB;;AAA8B;;;AAA9B;AAAP;AAC+B;AAAxB;;AAA8B;;;AAA9B;AAAP;AAC+B;;AAAxB;;AAA8B;;;AAA9B;AAAP;;;;AAZiB;AAIR;;;;;;;;;;;;;;;;;;;;;;;AADK;;;;;AAAa;;;;;AAAa;;;;;AADhB;;;AADH;;;AADJ;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock 0x098101 0x00 0x31 0x32"
    },
    "18": {
      "op": "b main_block@0"
    },
    "21": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "24": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "27": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "28": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "31": {
      "op": "b main_abi_routing@2"
    },
    "34": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "37": {
      "op": "pushbytes 0x89a8220a // method \"test_branching_array_call(bool)void\"",
      "defined_out": [
        "Method(test_branching_array_call(bool)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_branching_array_call(bool)void)"
      ]
    },
    "43": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test_branching_array_call(bool)void)",
        "tmp%2#0"
      ]
    },
    "45": {
      "op": "match main_test_branching_array_call_route@3",
      "stack_out": []
    },
    "49": {
      "op": "b main_switch_case_default@4"
    },
    "52": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "b main_switch_case_next@5"
    },
    "55": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "58": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "59": {
      "block": "main_test_branching_array_call_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "61": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "62": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "63": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "64": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "66": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "67": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "68": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "69": {
      "callsub": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call[routing]",
      "op": "callsub test_branching_array_call"
    },
    "72": {
      "op": "b main_switch_case_next@5"
    },
    "75": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "78": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%7#0"
      ]
    },
    "80": {
      "op": "match main___algopy_default_create@7",
      "stack_out": []
    },
    "84": {
      "op": "b main_switch_case_default@8"
    },
    "87": {
      "block": "main_switch_case_default@8",
      "stack_in": [],
      "op": "b main_switch_case_next@9"
    },
    "90": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "93": {
      "block": "main___algopy_default_create@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "95": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "96": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "97": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "98": {
      "op": "b main_block@12"
    },
    "101": {
      "block": "main_block@12",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__algopy_default_create@13"
    },
    "104": {
      "block": "main_after_inlined_test_cases.inner_transactions.array_access.ArrayAccessContract.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "105": {
      "op": "return",
      "stack_out": []
    },
    "106": {
      "subroutine": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call[routing]",
      "params": {},
      "block": "test_branching_array_call",
      "stack_in": [],
      "op": "b test_branching_array_call_block@0"
    },
    "109": {
      "block": "test_branching_array_call_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "112": {
      "callsub": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call",
      "op": "callsub test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call",
      "stack_out": []
    },
    "115": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "116": {
      "op": "return",
      "stack_out": []
    },
    "117": {
      "subroutine": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call",
      "params": {
        "maybe#0": "bytes"
      },
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "120": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_block@0"
    },
    "123": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "124": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "126": {
      "op": "setbit",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "127": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe#0 (copy)"
      ]
    },
    "129": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "130": {
      "op": "bz test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_else_body@3",
      "stack_out": []
    },
    "133": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_if_body@1"
    },
    "136": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_if_body@1",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "137": {
      "op": "bytec_2 // 0x31",
      "defined_out": [
        "0x31"
      ],
      "stack_out": [
        "0x31"
      ]
    },
    "138": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "140": {
      "op": "bytec_3 // 0x32",
      "defined_out": [
        "0x32"
      ],
      "stack_out": [
        "0x32"
      ]
    },
    "141": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "143": {
      "op": "bytec_0 // 0x098101",
      "defined_out": [
        "0x098101"
      ],
      "stack_out": [
        "0x098101"
      ]
    },
    "144": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "146": {
      "op": "bytec_0 // 0x098101",
      "stack_out": [
        "0x098101"
      ]
    },
    "147": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "149": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "150": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "153": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "155": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_next_txn@2"
    },
    "158": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "159": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_after_if_else@5"
    },
    "162": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_after_if_else@5",
      "stack_in": [],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "163": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "165": {
      "op": "setbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "166": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe#0 (copy)"
      ]
    },
    "168": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "169": {
      "op": "bz test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_else_body@7",
      "stack_out": []
    },
    "172": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_if_body@6"
    },
    "175": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_if_body@6",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "176": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "178": {
      "op": "bytec_2 // 0x31",
      "defined_out": [
        "0x31",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x31"
      ]
    },
    "179": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "180": {
      "error": "correct args used 1",
      "op": "assert // correct args used 1",
      "stack_out": []
    },
    "181": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "182": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "184": {
      "op": "bytec_3 // 0x32",
      "defined_out": [
        "0x32",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x32"
      ]
    },
    "185": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "186": {
      "error": "correct args used 2",
      "op": "assert // correct args used 2",
      "stack_out": []
    },
    "187": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_after_if_else@8"
    },
    "190": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_after_if_else@8",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "191": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_else_body@7",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "192": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "194": {
      "op": "pushbytes 0x33",
      "defined_out": [
        "0x33",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x33"
      ]
    },
    "197": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "198": {
      "error": "correct args used 1",
      "op": "assert // correct args used 1",
      "stack_out": []
    },
    "199": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "200": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "202": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0x34"
      ]
    },
    "205": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "206": {
      "error": "correct args used 2",
      "op": "assert // correct args used 2",
      "stack_out": []
    },
    "207": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "209": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "211": {
      "op": "pushbytes 0x35",
      "defined_out": [
        "0x35",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0x35"
      ]
    },
    "214": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "215": {
      "error": "correct args used 3",
      "op": "assert // correct args used 3",
      "stack_out": []
    },
    "216": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_after_if_else@8"
    },
    "219": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_else_body@3",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "220": {
      "op": "pushbytes 0x646966666572656e7420706172616d20736574",
      "defined_out": [
        "0x646966666572656e7420706172616d20736574"
      ],
      "stack_out": [
        "0x646966666572656e7420706172616d20736574"
      ]
    },
    "241": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "243": {
      "op": "pushbytes 0x33",
      "defined_out": [
        "0x33"
      ],
      "stack_out": [
        "0x33"
      ]
    },
    "246": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "248": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34"
      ],
      "stack_out": [
        "0x34"
      ]
    },
    "251": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "253": {
      "op": "pushbytes 0x35",
      "defined_out": [
        "0x35"
      ],
      "stack_out": [
        "0x35"
      ]
    },
    "256": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "258": {
      "op": "bytec_0 // 0x098101",
      "defined_out": [
        "0x098101"
      ],
      "stack_out": [
        "0x098101"
      ]
    },
    "259": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "261": {
      "op": "bytec_0 // 0x098101",
      "stack_out": [
        "0x098101"
      ]
    },
    "262": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "264": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "265": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "267": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "268": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "270": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_next_txn@4"
    },
    "273": {
      "block": "test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "274": {
      "op": "b test_cases.inner_transactions.array_access.ArrayAccessContract.test_branching_array_call_after_if_else@5"
    }
  }
}