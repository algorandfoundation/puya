{
  "version": 3,
  "sources": [
    "../itxn_tuple.py"
  ],
  "mappings": ";;;;;;;;;;;AAUA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAWK;;;;;;AALA;;;;;;AALA;;;;;;AADL;;;AAAA;;AAAA;;;;;;;;;AAAA;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AACK;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;AAAA;AAAA;AAVL;;;;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AACC;AAAlB;AAAP;;AAER;;;;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AACH;AAAd;AAAP;;AAER;;;;;;AAEiC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AAEJ;AAAd;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "11": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "14": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "bz main_bare_routing@17",
      "stack_out": []
    },
    "18": {
      "op": "b main_abi_routing@2"
    },
    "21": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "24": {
      "op": "match",
      "stack_out": []
    },
    "26": {
      "op": "b main_route_NoOp@3"
    },
    "29": {
      "block": "main_route_NoOp@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "31": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "32": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "33": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "34": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "37": {
      "op": "match",
      "stack_out": []
    },
    "39": {
      "op": "b main_switch_case_default@4"
    },
    "42": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "44": {
      "op": "bz main_create_NoOp@11",
      "stack_out": []
    },
    "47": {
      "op": "b main_call_NoOp@5"
    },
    "50": {
      "block": "main_call_NoOp@5",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "53": {
      "op": "pushbytes 0xdf478c6e // method \"named_tuple_itxn(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(named_tuple_itxn(uint64)void)"
      ]
    },
    "59": {
      "op": "pushbytes 0x20694f7b // method \"named_tuple_itxn2(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)"
      ]
    },
    "65": {
      "op": "pushbytes 0xd6ca0578 // method \"named_tuple_itxn3(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)"
      ]
    },
    "71": {
      "op": "uncover 3",
      "stack_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%7#0"
      ]
    },
    "73": {
      "op": "match main_named_tuple_itxn_route@6 main_named_tuple_itxn2_route@7 main_named_tuple_itxn3_route@8",
      "stack_out": []
    },
    "81": {
      "op": "b main_switch_case_default@9"
    },
    "84": {
      "block": "main_switch_case_default@9",
      "stack_in": [],
      "op": "b main_switch_case_next@10"
    },
    "87": {
      "block": "main_switch_case_next@10",
      "stack_in": [],
      "op": "b main_after_if_else@14"
    },
    "90": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "b main_switch_case_next@15"
    },
    "93": {
      "block": "main_switch_case_next@15",
      "stack_in": [],
      "op": "b main_switch_case_next@16"
    },
    "96": {
      "block": "main_switch_case_next@16",
      "stack_in": [],
      "op": "b main_after_if_else@21"
    },
    "99": {
      "block": "main_after_if_else@21",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "100": {
      "block": "main_named_tuple_itxn3_route@8",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3[routing]",
      "op": "callsub named_tuple_itxn3"
    },
    "103": {
      "op": "b main_switch_case_next@10"
    },
    "106": {
      "block": "main_named_tuple_itxn2_route@7",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2[routing]",
      "op": "callsub named_tuple_itxn2"
    },
    "109": {
      "op": "b main_switch_case_next@10"
    },
    "112": {
      "block": "main_named_tuple_itxn_route@6",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn[routing]",
      "op": "callsub named_tuple_itxn"
    },
    "115": {
      "op": "b main_switch_case_next@10"
    },
    "118": {
      "block": "main_create_NoOp@11",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "121": {
      "op": "match",
      "stack_out": []
    },
    "123": {
      "op": "b main_switch_case_default@12"
    },
    "126": {
      "block": "main_switch_case_default@12",
      "stack_in": [],
      "op": "b main_switch_case_next@13"
    },
    "129": {
      "block": "main_switch_case_next@13",
      "stack_in": [],
      "op": "b main_after_if_else@14"
    },
    "132": {
      "block": "main_bare_routing@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "134": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "135": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%9#0"
      ]
    },
    "137": {
      "op": "match main___algopy_default_create@18",
      "stack_out": []
    },
    "141": {
      "op": "b main_switch_case_default@19"
    },
    "144": {
      "block": "main_switch_case_default@19",
      "stack_in": [],
      "op": "b main_switch_case_next@20"
    },
    "147": {
      "block": "main_switch_case_next@20",
      "stack_in": [],
      "op": "b main_after_if_else@21"
    },
    "150": {
      "block": "main___algopy_default_create@18",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "153": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "154": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "155": {
      "op": "b main_block@23"
    },
    "158": {
      "block": "main_block@23",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@24"
    },
    "161": {
      "block": "main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@24",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "162": {
      "op": "return",
      "stack_out": []
    },
    "163": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn[routing]",
      "params": {},
      "block": "named_tuple_itxn",
      "stack_in": [],
      "op": "b named_tuple_itxn_block@0"
    },
    "166": {
      "block": "named_tuple_itxn_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "169": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "170": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "op": "callsub test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "stack_out": []
    },
    "173": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "174": {
      "op": "return",
      "stack_out": []
    },
    "175": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2[routing]",
      "params": {},
      "block": "named_tuple_itxn2",
      "stack_in": [],
      "op": "b named_tuple_itxn2_block@0"
    },
    "178": {
      "block": "named_tuple_itxn2_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "181": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "182": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "op": "callsub test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "stack_out": []
    },
    "185": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "186": {
      "op": "return",
      "stack_out": []
    },
    "187": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3[routing]",
      "params": {},
      "block": "named_tuple_itxn3",
      "stack_in": [],
      "op": "b named_tuple_itxn3_block@0"
    },
    "190": {
      "block": "named_tuple_itxn3_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "193": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "194": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "op": "callsub test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "stack_out": []
    },
    "197": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "198": {
      "op": "return",
      "stack_out": []
    },
    "199": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "params": {
        "amt#0": "uint64"
      },
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "202": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_block@0"
    },
    "205": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "206": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "208": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "210": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "212": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "214": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "215": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "217": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "218": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "220": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_next_txn@1"
    },
    "223": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "224": {
      "op": "itxn Amount",
      "defined_out": [
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0"
      ]
    },
    "226": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0",
        "0"
      ]
    },
    "227": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "228": {
      "op": "assert",
      "stack_out": []
    },
    "229": {
      "retsub": true,
      "op": "retsub"
    },
    "230": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "params": {
        "amt#0": "uint64"
      },
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "233": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_block@0"
    },
    "236": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "237": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "239": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "241": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "243": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "245": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "246": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "248": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "249": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "251": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_next_txn@1"
    },
    "254": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "255": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "257": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0",
        "0"
      ]
    },
    "258": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "259": {
      "op": "assert",
      "stack_out": []
    },
    "260": {
      "retsub": true,
      "op": "retsub"
    },
    "261": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "params": {
        "amt#0": "uint64"
      },
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "264": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_block@0"
    },
    "267": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "268": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "270": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "272": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "274": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "276": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "277": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "279": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "280": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "282": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_next_txn@1"
    },
    "285": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "286": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "288": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0",
        "0"
      ]
    },
    "289": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "290": {
      "op": "assert",
      "stack_out": []
    },
    "291": {
      "retsub": true,
      "op": "retsub"
    }
  }
}