{
  "version": 3,
  "sources": [
    "../itxn_tuple.py"
  ],
  "mappings": ";;;;;AAUA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;AAMK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AANL;;;AAAA;AAMK;;;AAAA;;;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;AACK;;;AAAA;;;;AADL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AACA;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;AAAA;;;AACC;AAAlB;AAAP;;AAER;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;AAAA;AAAlB;;;;AAAN;;AACc;AAAP;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "8": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "9": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "12": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "15": {
      "op": "pushbytes 0xdf478c6e // method \"named_tuple_itxn(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(named_tuple_itxn(uint64)void)"
      ]
    },
    "21": {
      "op": "pushbytes 0x20694f7b // method \"named_tuple_itxn2(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)"
      ]
    },
    "27": {
      "op": "uncover 2",
      "stack_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "tmp%2#0"
      ]
    },
    "29": {
      "op": "match main_named_tuple_itxn_route@3 main_named_tuple_itxn2_route@4",
      "stack_out": []
    },
    "35": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "36": {
      "block": "main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "37": {
      "block": "main_named_tuple_itxn2_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "39": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "40": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "41": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "42": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "44": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "45": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "46": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "47": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "50": {
      "op": "btoi",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "51": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "op": "callsub named_tuple_itxn2",
      "stack_out": []
    },
    "54": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "55": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@12"
    },
    "58": {
      "block": "main_named_tuple_itxn_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "60": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "61": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "62": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "63": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "65": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "66": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "67": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "68": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "71": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "72": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "op": "callsub named_tuple_itxn",
      "stack_out": []
    },
    "75": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "76": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@12"
    },
    "79": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "81": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "82": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%13#0"
      ]
    },
    "83": {
      "op": "match main___algopy_default_create@8",
      "stack_out": []
    },
    "87": {
      "block": "main_switch_case_next@10",
      "stack_in": [],
      "op": "b main_after_if_else@11"
    },
    "90": {
      "block": "main___algopy_default_create@8",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "92": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "93": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "94": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "95": {
      "block": "main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@14",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "96": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@12"
    },
    "99": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "params": {
        "amt#0": "uint64"
      },
      "block": "named_tuple_itxn",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "102": {
      "block": "named_tuple_itxn_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "103": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "105": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "107": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "109": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "111": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "112": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "114": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "115": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "117": {
      "block": "named_tuple_itxn_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "118": {
      "op": "itxn Amount",
      "defined_out": [
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0"
      ]
    },
    "120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0",
        "0"
      ]
    },
    "121": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "122": {
      "op": "assert",
      "stack_out": []
    },
    "123": {
      "retsub": true,
      "op": "retsub"
    },
    "124": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "params": {
        "amt#0": "uint64"
      },
      "block": "named_tuple_itxn2",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "127": {
      "block": "named_tuple_itxn2_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "128": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "130": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "132": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "134": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "136": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "137": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "140": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "142": {
      "block": "named_tuple_itxn2_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "143": {
      "op": "gitxn 0 Amount",
      "defined_out": [
        "amt#0"
      ],
      "stack_out": [
        "amt#0"
      ]
    },
    "146": {
      "op": "dup"
    },
    "147": {
      "op": "frame_bury -1",
      "defined_out": [
        "amt#0 (copy)"
      ],
      "stack_out": [
        "amt#0 (copy)"
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amt#0 (copy)"
      ],
      "stack_out": [
        "amt#0 (copy)",
        "0"
      ]
    },
    "150": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "151": {
      "op": "assert",
      "stack_out": []
    },
    "152": {
      "retsub": true,
      "op": "retsub"
    }
  }
}