{
  "version": 3,
  "sources": [
    "../itxn_tuple.py"
  ],
  "mappings": ";;;;;;;;;;;;;AAUA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;AAWK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAXL;;;AAAA;AAWK;;;AAAA;;;;;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AANL;;;AAAA;AAMK;;;AAAA;;;;;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;AACK;;;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AACC;AAAlB;AAAP;;AAER;;;;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AACH;AAAd;AAAP;;AAER;;;;;;AAEiC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AAEJ;AAAd;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "16": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "bz main_bare_routing@8",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "20": {
      "op": "b main_abi_routing@2"
    },
    "23": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "pushbytes 0xdf478c6e // method \"named_tuple_itxn(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(named_tuple_itxn(uint64)void)"
      ]
    },
    "32": {
      "op": "pushbytes 0x20694f7b // method \"named_tuple_itxn2(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)"
      ]
    },
    "38": {
      "op": "pushbytes 0xd6ca0578 // method \"named_tuple_itxn3(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)"
      ]
    },
    "44": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%2#0"
      ]
    },
    "46": {
      "op": "match main_named_tuple_itxn_route@3 main_named_tuple_itxn2_route@4 main_named_tuple_itxn3_route@5",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "b main_switch_case_default@6"
    },
    "57": {
      "block": "main_switch_case_default@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@7"
    },
    "60": {
      "block": "main_switch_case_next@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@12"
    },
    "63": {
      "block": "main_after_if_else@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ]
    },
    "64": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "66": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13"
    },
    "69": {
      "block": "main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "block": "main_named_tuple_itxn3_route@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "72": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0",
        "NoOp"
      ]
    },
    "73": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "74": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0",
        "0"
      ]
    },
    "78": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "79": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "83": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "84": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "op": "callsub named_tuple_itxn3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "87": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ]
    },
    "88": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13"
    },
    "93": {
      "block": "main_named_tuple_itxn2_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "95": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "NoOp"
      ]
    },
    "96": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "97": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "98": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "100": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0",
        "0"
      ]
    },
    "101": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "102": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "103": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "106": {
      "op": "btoi",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "107": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "op": "callsub named_tuple_itxn2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "110": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ]
    },
    "111": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13"
    },
    "116": {
      "block": "main_named_tuple_itxn_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "118": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "120": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "121": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "124": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "125": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "126": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "129": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "130": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "op": "callsub named_tuple_itxn",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "133": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ]
    },
    "134": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "136": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13"
    },
    "139": {
      "block": "main_bare_routing@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "141": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0",
        "0"
      ]
    },
    "142": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%18#0"
      ]
    },
    "144": {
      "op": "match main___algopy_default_create@9",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "148": {
      "op": "b main_switch_case_default@10"
    },
    "151": {
      "block": "main_switch_case_default@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@11"
    },
    "154": {
      "block": "main_switch_case_next@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@12"
    },
    "157": {
      "block": "main___algopy_default_create@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "159": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "0"
      ]
    },
    "160": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "161": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "162": {
      "op": "b main_block@14"
    },
    "165": {
      "block": "main_block@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@15"
    },
    "168": {
      "block": "main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@15",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__%0#0"
      ]
    },
    "169": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "171": {
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__puya_arc4_router__@13"
    },
    "174": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "params": {
        "amt#0": "uint64"
      },
      "block": "named_tuple_itxn",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "177": {
      "op": "b named_tuple_itxn_block@0"
    },
    "180": {
      "block": "named_tuple_itxn_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "181": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "183": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "185": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "187": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "189": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "190": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "192": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "193": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "195": {
      "op": "b named_tuple_itxn_next_txn@1"
    },
    "198": {
      "block": "named_tuple_itxn_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "199": {
      "op": "itxn Amount",
      "defined_out": [
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0"
      ]
    },
    "201": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0",
        "0"
      ]
    },
    "202": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "203": {
      "op": "assert",
      "stack_out": []
    },
    "204": {
      "retsub": true,
      "op": "retsub"
    },
    "205": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "params": {
        "amt#0": "uint64"
      },
      "block": "named_tuple_itxn2",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "208": {
      "op": "b named_tuple_itxn2_block@0"
    },
    "211": {
      "block": "named_tuple_itxn2_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "212": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "214": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "216": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "218": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "220": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "221": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "223": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "224": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "226": {
      "op": "b named_tuple_itxn2_next_txn@1"
    },
    "229": {
      "block": "named_tuple_itxn2_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "230": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "232": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0",
        "0"
      ]
    },
    "233": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "234": {
      "op": "assert",
      "stack_out": []
    },
    "235": {
      "retsub": true,
      "op": "retsub"
    },
    "236": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "params": {
        "amt#0": "uint64"
      },
      "block": "named_tuple_itxn3",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "239": {
      "op": "b named_tuple_itxn3_block@0"
    },
    "242": {
      "block": "named_tuple_itxn3_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "243": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "245": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "247": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "249": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "251": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "252": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "254": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "255": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "257": {
      "op": "b named_tuple_itxn3_next_txn@1"
    },
    "260": {
      "block": "named_tuple_itxn3_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "261": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "263": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0",
        "0"
      ]
    },
    "264": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "265": {
      "op": "assert",
      "stack_out": []
    },
    "266": {
      "retsub": true,
      "op": "retsub"
    }
  }
}