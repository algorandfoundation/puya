{
  "version": 3,
  "sources": [
    "../itxn_tuple.py"
  ],
  "mappings": ";;;;;;;;;;;AAUA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;;;;AAAA;AAWK;;;;;;AALA;;;;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;AAAA;AAAA;AAVL;;;;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AACC;AAAlB;AAAP;;AAER;;;;;;AAEgC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AACH;AAAd;AAAP;;AAER;;;;;;AAEiC;AAAsB;;AAAmB;;;;;;AAAzC;;;AAAA;;;;;;AAAA;;;AAEJ;AAAd;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "11": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "14": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "bz main___algopy_default_create@11",
      "stack_out": []
    },
    "18": {
      "op": "b main_abi_routing@2"
    },
    "21": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "23": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "24": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "25": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "29": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "30": {
      "op": "bz main_create_NoOp@9",
      "stack_out": []
    },
    "33": {
      "op": "b main_call_NoOp@3"
    },
    "36": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "39": {
      "op": "pushbytes 0xdf478c6e // method \"named_tuple_itxn(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(named_tuple_itxn(uint64)void)"
      ]
    },
    "45": {
      "op": "pushbytes 0x20694f7b // method \"named_tuple_itxn2(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)"
      ]
    },
    "51": {
      "op": "pushbytes 0xd6ca0578 // method \"named_tuple_itxn3(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)"
      ]
    },
    "57": {
      "op": "uncover 3",
      "stack_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%6#0"
      ]
    },
    "59": {
      "op": "match main_named_tuple_itxn_route@4 main_named_tuple_itxn2_route@5 main_named_tuple_itxn3_route@6",
      "stack_out": []
    },
    "67": {
      "op": "b main_switch_case_default@7"
    },
    "70": {
      "block": "main_switch_case_default@7",
      "stack_in": [],
      "op": "b main_switch_case_next@8"
    },
    "73": {
      "block": "main_switch_case_next@8",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "76": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "79": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "80": {
      "block": "main_named_tuple_itxn3_route@6",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3[routing]",
      "op": "callsub named_tuple_itxn3"
    },
    "83": {
      "op": "b main_switch_case_next@8"
    },
    "86": {
      "block": "main_named_tuple_itxn2_route@5",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2[routing]",
      "op": "callsub named_tuple_itxn2"
    },
    "89": {
      "op": "b main_switch_case_next@8"
    },
    "92": {
      "block": "main_named_tuple_itxn_route@4",
      "stack_in": [],
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn[routing]",
      "op": "callsub named_tuple_itxn"
    },
    "95": {
      "op": "b main_switch_case_next@8"
    },
    "98": {
      "block": "main_create_NoOp@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "101": {
      "block": "main___algopy_default_create@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "103": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "104": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "105": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "107": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "108": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "109": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "110": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "111": {
      "op": "b main_block@14"
    },
    "114": {
      "block": "main_block@14",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@15"
    },
    "117": {
      "block": "main_after_inlined_test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.__algopy_default_create@15",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "118": {
      "op": "return",
      "stack_out": []
    },
    "119": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn[routing]",
      "params": {},
      "block": "named_tuple_itxn",
      "stack_in": [],
      "op": "b named_tuple_itxn_block@0"
    },
    "122": {
      "block": "named_tuple_itxn_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "125": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "126": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "op": "callsub test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "stack_out": []
    },
    "129": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "130": {
      "op": "return",
      "stack_out": []
    },
    "131": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2[routing]",
      "params": {},
      "block": "named_tuple_itxn2",
      "stack_in": [],
      "op": "b named_tuple_itxn2_block@0"
    },
    "134": {
      "block": "named_tuple_itxn2_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "137": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "138": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "op": "callsub test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "stack_out": []
    },
    "141": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "142": {
      "op": "return",
      "stack_out": []
    },
    "143": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3[routing]",
      "params": {},
      "block": "named_tuple_itxn3",
      "stack_in": [],
      "op": "b named_tuple_itxn3_block@0"
    },
    "146": {
      "block": "named_tuple_itxn3_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "149": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "callsub": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "op": "callsub test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "stack_out": []
    },
    "153": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "154": {
      "op": "return",
      "stack_out": []
    },
    "155": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "params": {
        "amt#0": "uint64"
      },
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "158": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_block@0"
    },
    "161": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "162": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "164": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "166": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "168": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "170": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "171": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "173": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "174": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "176": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_next_txn@1"
    },
    "179": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "180": {
      "op": "itxn Amount",
      "defined_out": [
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0"
      ]
    },
    "182": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0",
        "0"
      ]
    },
    "183": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "184": {
      "op": "assert",
      "stack_out": []
    },
    "185": {
      "retsub": true,
      "op": "retsub"
    },
    "186": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "params": {
        "amt#0": "uint64"
      },
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "189": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_block@0"
    },
    "192": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "193": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "195": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "197": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "199": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "201": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "202": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "204": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "205": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "207": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_next_txn@1"
    },
    "210": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn2_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "211": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "213": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0",
        "0"
      ]
    },
    "214": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "215": {
      "op": "assert",
      "stack_out": []
    },
    "216": {
      "retsub": true,
      "op": "retsub"
    },
    "217": {
      "subroutine": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "params": {
        "amt#0": "uint64"
      },
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "220": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_block@0"
    },
    "223": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "224": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "226": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "228": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "230": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "232": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "233": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "235": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "236": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "238": {
      "op": "b test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_next_txn@1"
    },
    "241": {
      "block": "test_cases.inner_transactions.itxn_tuple.ItxnNamedTuple.named_tuple_itxn3_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "242": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "244": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0",
        "0"
      ]
    },
    "245": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "246": {
      "op": "assert",
      "stack_out": []
    },
    "247": {
      "retsub": true,
      "op": "retsub"
    }
  }
}