#pragma version 10

test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.approval_program:
    intcblock 0 5 6 1
    bytecblock 0x098101 0x3161 0x3261 0x646966666572656e7420706172616d20736574 0x68656c6c6f 0x776f726c64 0x3361 0x3461 0x3561 0x3362 0x3462 0x3562 0x3162 0x3262 0x3163 0x3263 0x3363 0x3463 0x3563
    callsub __puya_arc4_router__
    return


// test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@6
    pushbytess 0x1ca2c07e 0xec6cd0a8 // method "test_assign_tuple()void", method "test_assign_tuple_mixed()void"
    txna ApplicationArgs 0
    match __puya_arc4_router___test_assign_tuple_route@2 __puya_arc4_router___test_assign_tuple_mixed_route@3
    intc_0 // 0
    retsub

__puya_arc4_router___test_assign_tuple_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub test_assign_tuple
    intc_3 // 1
    retsub

__puya_arc4_router___test_assign_tuple_mixed_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub test_assign_tuple_mixed
    intc_3 // 1
    retsub

__puya_arc4_router___bare_routing@6:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@10
    txn ApplicationID
    !
    assert // is creating
    intc_3 // 1
    retsub

__puya_arc4_router___after_if_else@10:
    intc_0 // 0
    retsub


// test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple() -> void:
test_assign_tuple:
    proto 0 0
    pushint 42 // 42
    itob
    intc_3 // 1
    itob
    itxn_begin
    bytec_1 // 0x3161
    itxn_field ApplicationArgs
    bytec_2 // 0x3261
    itxn_field ApplicationArgs
    bytec 4 // 0x68656c6c6f
    itxn_field ApplicationArgs
    bytec 5 // "world"
    itxn_field ApplicationArgs
    pushbytes "!"
    itxn_field ApplicationArgs
    dig 1
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    bytec_3 // 0x646966666572656e7420706172616d20736574
    itxn_field Note
    bytec 6 // 0x3361
    itxn_field ApplicationArgs
    bytec 7 // 0x3461
    itxn_field ApplicationArgs
    bytec 8 // 0x3561
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxna 0 ApplicationArgs 0
    bytec_1 // 0x3161
    ==
    assert
    gitxna 0 ApplicationArgs 1
    bytec_2 // 0x3261
    ==
    assert
    gitxna 0 ApplicationArgs 2
    bytec 4 // 0x68656c6c6f
    ==
    assert
    gitxna 0 ApplicationArgs 3
    bytec 5 // 0x776f726c64
    ==
    assert
    gitxna 0 ApplicationArgs 4
    pushbytes 0x21
    ==
    assert
    gitxna 0 ApplicationArgs 5
    ==
    assert
    gitxna 0 ApplicationArgs 6
    intc_3 // 1
    itob
    ==
    assert
    itxna ApplicationArgs 0
    bytec 6 // 0x3361
    ==
    assert
    itxna ApplicationArgs 1
    bytec 7 // 0x3461
    ==
    assert
    itxna ApplicationArgs 2
    bytec 8 // 0x3561
    ==
    assert
    itxn_begin
    bytec_3 // 0x646966666572656e7420706172616d20736574
    itxn_field Note
    bytec 9 // 0x3362
    itxn_field ApplicationArgs
    bytec 10 // 0x3462
    itxn_field ApplicationArgs
    bytec 11 // 0x3562
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    bytec 12 // 0x3162
    itxn_field ApplicationArgs
    bytec 13 // 0x3262
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxna ApplicationArgs 0
    bytec 12 // 0x3162
    ==
    assert
    itxna ApplicationArgs 1
    bytec 13 // 0x3262
    ==
    assert
    gitxna 0 ApplicationArgs 0
    bytec 9 // 0x3362
    ==
    assert
    gitxna 0 ApplicationArgs 1
    bytec 10 // 0x3462
    ==
    assert
    gitxna 0 ApplicationArgs 2
    bytec 11 // 0x3562
    ==
    assert
    itxn_begin
    bytec 14 // 0x3163
    itxn_field ApplicationArgs
    bytec 15 // 0x3263
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    bytec_3 // 0x646966666572656e7420706172616d20736574
    itxn_field Note
    bytec 16 // 0x3363
    itxn_field ApplicationArgs
    bytec 17 // 0x3463
    itxn_field ApplicationArgs
    bytec 18 // 0x3563
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxna 0 ApplicationArgs 0
    bytec 14 // 0x3163
    ==
    assert
    gitxna 0 ApplicationArgs 1
    bytec 15 // 0x3263
    ==
    assert
    itxna ApplicationArgs 0
    bytec 16 // 0x3363
    ==
    assert
    itxna ApplicationArgs 1
    bytec 17 // 0x3463
    ==
    assert
    itxna ApplicationArgs 2
    bytec 18 // 0x3563
    ==
    assert
    retsub


// test_cases.inner_transactions.field_tuple_assignment.FieldTupleContract.test_assign_tuple_mixed() -> void:
test_assign_tuple_mixed:
    proto 0 0
    itxn_begin
    bytec_1 // 0x3161
    itxn_field ApplicationArgs
    bytec_2 // 0x3261
    itxn_field ApplicationArgs
    intc_1 // DeleteApplication
    itxn_field OnCompletion
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxna ApplicationArgs 0
    bytec_1 // 0x3161
    ==
    assert
    itxna ApplicationArgs 1
    bytec_2 // 0x3261
    ==
    assert
    retsub
