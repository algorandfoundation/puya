{
  "version": 3,
  "sources": [
    "../itxn_tuple.py"
  ],
  "mappings": ";;;;;AAUA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;;AAWK;;AAAA;AAAA;AAAA;;AAAA;AAXL;;;AAAA;AAaiC;AAAsB;;;;;;AAAtB;;;AAAA;;;AAAA;;;AAElB;AAAP;AAJH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AANL;;;AAAA;AAQgC;AAAsB;;;;;;AAAtB;;;AAAA;;;AAAA;;;AACjB;AAAP;AAHH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;AAGgC;AAAsB;;;;;;AAAtB;;;AAAA;;;AAAA;;;AACjB;AAAP;AAHH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@8",
      "stack_out": []
    },
    "10": {
      "op": "pushbytess 0xdf478c6e 0x20694f7b 0xd6ca0578 // method \"named_tuple_itxn(uint64)void\", method \"named_tuple_itxn2(uint64)void\", method \"named_tuple_itxn3(uint64)void\"",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)"
      ],
      "stack_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)"
      ]
    },
    "27": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(named_tuple_itxn(uint64)void)",
        "Method(named_tuple_itxn2(uint64)void)",
        "Method(named_tuple_itxn3(uint64)void)",
        "tmp%2#0"
      ]
    },
    "30": {
      "op": "match main_named_tuple_itxn_route@3 main_named_tuple_itxn2_route@4 main_named_tuple_itxn3_route@5",
      "stack_out": []
    },
    "38": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "39": {
      "op": "return",
      "stack_out": []
    },
    "40": {
      "block": "main_named_tuple_itxn3_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "42": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "43": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "44": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "46": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "47": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "50": {
      "op": "btoi",
      "defined_out": [
        "amt#0"
      ],
      "stack_out": [
        "amt#0"
      ]
    },
    "51": {
      "op": "itxn_begin"
    },
    "52": {
      "op": "txn Sender",
      "defined_out": [
        "amt#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "amt#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "54": {
      "op": "itxn_field Receiver"
    },
    "56": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "58": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "59": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "61": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "62": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "64": {
      "op": "itxn_submit"
    },
    "65": {
      "op": "itxn Amount",
      "defined_out": [
        "hmmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmmm.bar.Amount#0"
      ]
    },
    "67": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "68": {
      "op": "assert",
      "stack_out": []
    },
    "69": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "op": "return",
      "stack_out": []
    },
    "71": {
      "block": "main_named_tuple_itxn2_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "73": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "74": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "75": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "77": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "78": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "81": {
      "op": "btoi",
      "defined_out": [
        "amt#0"
      ],
      "stack_out": [
        "amt#0"
      ]
    },
    "82": {
      "op": "itxn_begin"
    },
    "83": {
      "op": "txn Sender",
      "defined_out": [
        "amt#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "amt#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "85": {
      "op": "itxn_field Receiver"
    },
    "87": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "89": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "90": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "92": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "93": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "95": {
      "op": "itxn_submit"
    },
    "96": {
      "op": "itxn Amount",
      "defined_out": [
        "txn.Amount#0"
      ],
      "stack_out": [
        "txn.Amount#0"
      ]
    },
    "98": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "99": {
      "op": "assert",
      "stack_out": []
    },
    "100": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "101": {
      "op": "return",
      "stack_out": []
    },
    "102": {
      "block": "main_named_tuple_itxn_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "104": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "105": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "106": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "108": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "109": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "112": {
      "op": "btoi",
      "defined_out": [
        "amt#0"
      ],
      "stack_out": [
        "amt#0"
      ]
    },
    "113": {
      "op": "itxn_begin"
    },
    "114": {
      "op": "txn Sender",
      "defined_out": [
        "amt#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "amt#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "116": {
      "op": "itxn_field Receiver"
    },
    "118": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "120": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "121": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "123": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "124": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "126": {
      "op": "itxn_submit"
    },
    "127": {
      "op": "itxn Amount",
      "defined_out": [
        "hmm.bar.Amount#0"
      ],
      "stack_out": [
        "hmm.bar.Amount#0"
      ]
    },
    "129": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "op": "assert",
      "stack_out": []
    },
    "131": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "132": {
      "op": "return",
      "stack_out": []
    },
    "133": {
      "block": "main_bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "135": {
      "op": "bnz main_after_if_else@12",
      "stack_out": []
    },
    "138": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "140": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "141": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "142": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "143": {
      "op": "return",
      "stack_out": []
    }
  }
}