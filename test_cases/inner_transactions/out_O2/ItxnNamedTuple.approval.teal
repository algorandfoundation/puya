#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0
    txn NumAppArgs
    bz main___algopy_default_create@10
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0xdf478c6e 0x20694f7b 0xd6ca0578 // method "named_tuple_itxn(uint64)void", method "named_tuple_itxn2(uint64)void", method "named_tuple_itxn3(uint64)void"
    txna ApplicationArgs 0
    match main_named_tuple_itxn_route@4 main_named_tuple_itxn2_route@5 main_named_tuple_itxn3_route@6
    err

main_named_tuple_itxn3_route@6:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    txn Sender
    itxn_field Receiver
    itxn_field Amount
    intc_0 // pay
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn Amount
    !
    return

main_named_tuple_itxn2_route@5:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    txn Sender
    itxn_field Receiver
    itxn_field Amount
    intc_0 // pay
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn Amount
    !
    return

main_named_tuple_itxn_route@4:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    txn Sender
    itxn_field Receiver
    itxn_field Amount
    intc_0 // pay
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn Amount
    !
    return

main___algopy_default_create@10:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating
