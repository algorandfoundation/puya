{
  "version": 3,
  "sources": [
    "../c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOQ;AAAiB;AAAjB;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;AAiBK;;AAAA;AAAA;AAAA;;AAAA;AAjBL;;;AAmBqB;AACF;AAAA;AAAA;AAAA;AACG;;;;;;;;;;;;AAFD;;;AAAA;;;AAAA;;;AAIF;AAAA;;;AAAA;AAAA;AAAA;AACkB;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAA7B;AAPH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAEc;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEI;AAEwB;;;;;;;AADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADrB;;;AAAA;;;AAAA;AAAA;;AADJ;AAAA;;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.inner_transactions.c2c.Greeter.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock \"hello_app\" 0x151f7c75"
    },
    "23": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "25": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "28": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\""
      ],
      "stack_out": [
        "\"hello_app\""
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "\"hello_app\"",
        "0"
      ]
    },
    "30": {
      "op": "app_global_put",
      "stack_out": []
    },
    "31": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "33": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "36": {
      "op": "pushbytess 0x786b6291 0x33fb5d48 // method \"bootstrap()uint64\", method \"log_greetings(string)void\"",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ],
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)"
      ]
    },
    "48": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(bootstrap()uint64)",
        "Method(log_greetings(string)void)",
        "tmp%2#0"
      ]
    },
    "51": {
      "op": "match main_bootstrap_route@5 main_log_greetings_route@6",
      "stack_out": []
    },
    "57": {
      "block": "main_after_if_else@9",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "58": {
      "block": "main_log_greetings_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "60": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "61": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "62": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "64": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "65": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "68": {
      "op": "itxn_begin"
    },
    "69": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0"
      ]
    },
    "70": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0",
        "\"hello_app\""
      ]
    },
    "71": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "72": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "73": {
      "op": "pushbytes 0x02bece11 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "Method(hello(string)string)"
      ]
    },
    "79": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "81": {
      "op": "itxn_field ApplicationID"
    },
    "83": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "85": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "86": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "88": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "89": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "91": {
      "op": "itxn_submit"
    },
    "92": {
      "op": "itxn LastLog",
      "defined_out": [
        "hello_call.LastLog#0"
      ],
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "94": {
      "op": "dup",
      "defined_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "hello_call.LastLog#0 (copy)"
      ]
    },
    "95": {
      "op": "extract 0 4",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%1#1"
      ]
    },
    "98": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "hello_call.LastLog#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "99": {
      "op": "==",
      "defined_out": [
        "hello_call.LastLog#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "hello_call.LastLog#0",
        "tmp%2#1"
      ]
    },
    "100": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "hello_call.LastLog#0"
      ]
    },
    "101": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "104": {
      "op": "pushbytes \"HelloWorld returned: \"",
      "defined_out": [
        "\"HelloWorld returned: \"",
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "\"HelloWorld returned: \""
      ]
    },
    "127": {
      "op": "swap",
      "stack_out": [
        "\"HelloWorld returned: \"",
        "tmp%4#1"
      ]
    },
    "128": {
      "op": "concat",
      "defined_out": [
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%5#1"
      ]
    },
    "129": {
      "op": "log",
      "stack_out": []
    },
    "130": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "131": {
      "op": "return",
      "stack_out": []
    },
    "132": {
      "block": "main_bootstrap_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "134": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "135": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "136": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "138": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "140": {
      "op": "bytec_0 // \"hello_app\"",
      "defined_out": [
        "\"hello_app\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"hello_app\""
      ]
    },
    "141": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "142": {
      "error": "check self.hello_app exists",
      "op": "assert // check self.hello_app exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "143": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "144": {
      "error": "already bootstrapped",
      "op": "assert // already bootstrapped",
      "stack_out": []
    },
    "145": {
      "op": "itxn_begin"
    },
    "146": {
      "op": "pushbytes 0x0a8101",
      "defined_out": [
        "0x0a8101"
      ],
      "stack_out": [
        "0x0a8101"
      ]
    },
    "151": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "153": {
      "op": "pushbytes 0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089",
      "defined_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ],
      "stack_out": [
        "0x0a200101311b410026800402bece11361a008e0100010031191444311844361a018800158004151f7c754c50b02243311914443118144422438a01018bff570200800748656c6c6f2c204c504915165706004c5089"
      ]
    },
    "240": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "242": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "243": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "245": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "246": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "248": {
      "op": "itxn_submit"
    },
    "249": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "tmp%1#2"
      ],
      "stack_out": [
        "tmp%1#2"
      ]
    },
    "251": {
      "op": "bytec_0 // \"hello_app\"",
      "stack_out": [
        "tmp%1#2",
        "\"hello_app\""
      ]
    },
    "252": {
      "op": "dig 1",
      "defined_out": [
        "\"hello_app\"",
        "tmp%1#2",
        "tmp%1#2 (copy)"
      ],
      "stack_out": [
        "tmp%1#2",
        "\"hello_app\"",
        "tmp%1#2 (copy)"
      ]
    },
    "254": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%1#2"
      ]
    },
    "255": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "256": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "257": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "258": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "259": {
      "op": "log",
      "stack_out": []
    },
    "260": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "261": {
      "op": "return",
      "stack_out": []
    },
    "262": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "264": {
      "op": "bnz main_after_if_else@9",
      "stack_out": []
    },
    "267": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "269": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "270": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "271": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "272": {
      "op": "return",
      "stack_out": []
    }
  }
}