{
  "version": 3,
  "sources": [
    "../array_access.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAmBA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;;AACK;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAGW;;;AAAA;AAAA;AAAA;;AAAX;;;AAC6B;AAGH;;;AAAa;;;AADH;;;AADH;;;AADJ;;;AAAA;;;AAAA;AAY7B;AAAA;;;AACmB;;;AAA8B;AAA9B;AAAP;AACO;;;AAA8B;AAA9B;AAAP;AAjBP;;AAmBc;;;AAA8B;AAA9B;AAAP;AACO;;;AAA8B;;;AAA9B;AAAP;AACO;;;AAA8B;;;AAA9B;AAAP;;;;AAZiB;AAIR;;;;;;;;;;;;;;;;;;;;;;;AADK;;;AAAa;;;;;AAAa;;;;;AADhB;;;AADH;;;AADJ;;;AAAA;;;AAAA;;;;AAV7B;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 6 0 1"
    },
    "6": {
      "op": "bytecblock 0x098101 0x31 0x32 0x33"
    },
    "18": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "20": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%0#1"
      ]
    },
    "22": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "25": {
      "op": "pushbytes 0x89a8220a // method \"test_branching_array_call(bool)void\"",
      "defined_out": [
        "Method(test_branching_array_call(bool)void)"
      ],
      "stack_out": [
        "tmp%1#1",
        "Method(test_branching_array_call(bool)void)"
      ]
    },
    "31": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_branching_array_call(bool)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "Method(test_branching_array_call(bool)void)",
        "tmp%2#0"
      ]
    },
    "34": {
      "op": "match main_test_branching_array_call_route@3",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "38": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "err",
      "defined_out": []
    },
    "39": {
      "block": "main_test_branching_array_call_route@3",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%3#0"
      ]
    },
    "41": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%4#0"
      ]
    },
    "42": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "43": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%5#0"
      ]
    },
    "45": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "46": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "maybe#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "maybe#0"
      ]
    },
    "49": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "maybe#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "maybe#0",
        "0x00"
      ]
    },
    "52": {
      "op": "!=",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%1#1"
      ]
    },
    "53": {
      "op": "dup",
      "stack_out": [
        "tmp%1#1",
        "tmp%1#1",
        "tmp%1#1"
      ]
    },
    "54": {
      "op": "bury 2",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%1#1"
      ]
    },
    "56": {
      "op": "bz main_else_body@16",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "59": {
      "op": "itxn_begin"
    },
    "60": {
      "op": "bytec_1 // 0x31",
      "defined_out": [
        "0x31",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x31"
      ]
    },
    "61": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "63": {
      "op": "bytec_2 // 0x32",
      "defined_out": [
        "0x32",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x32"
      ]
    },
    "64": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "66": {
      "op": "bytec_0 // 0x098101",
      "defined_out": [
        "0x098101",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x098101"
      ]
    },
    "67": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "69": {
      "op": "bytec_0 // 0x098101",
      "stack_out": [
        "tmp%1#1",
        "0x098101"
      ]
    },
    "70": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "72": {
      "op": "intc_0 // appl",
      "defined_out": [
        "appl",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "appl"
      ]
    },
    "73": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "75": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0"
      ]
    },
    "76": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "78": {
      "op": "itxn_submit"
    },
    "79": {
      "block": "main_after_if_else@17",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "dup",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%1#1"
      ]
    },
    "80": {
      "op": "bz main_else_body@19",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "83": {
      "op": "itxna ApplicationArgs 0",
      "defined_out": [
        "tmp%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%4#1"
      ]
    },
    "86": {
      "op": "bytec_1 // 0x31",
      "defined_out": [
        "0x31",
        "tmp%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%4#1",
        "0x31"
      ]
    },
    "87": {
      "op": "==",
      "defined_out": [
        "tmp%1#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%5#1"
      ]
    },
    "88": {
      "error": "correct args used 1",
      "op": "assert // correct args used 1",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "89": {
      "op": "itxna ApplicationArgs 1",
      "defined_out": [
        "tmp%1#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%6#1"
      ]
    },
    "92": {
      "op": "bytec_2 // 0x32",
      "defined_out": [
        "0x32",
        "tmp%1#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%6#1",
        "0x32"
      ]
    },
    "93": {
      "op": "==",
      "defined_out": [
        "tmp%1#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%7#1"
      ]
    },
    "94": {
      "error": "correct args used 2",
      "op": "assert // correct args used 2",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "95": {
      "block": "main_after_if_else@20",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%0#0"
      ]
    },
    "96": {
      "op": "return",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "97": {
      "block": "main_else_body@19",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "itxna ApplicationArgs 0",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%8#1"
      ]
    },
    "100": {
      "op": "bytec_3 // 0x33",
      "defined_out": [
        "0x33",
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%8#1",
        "0x33"
      ]
    },
    "101": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%9#0"
      ]
    },
    "102": {
      "error": "correct args used 1",
      "op": "assert // correct args used 1",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "103": {
      "op": "itxna ApplicationArgs 1",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%10#0"
      ]
    },
    "106": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%10#0",
        "0x34"
      ]
    },
    "109": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%11#0"
      ]
    },
    "110": {
      "error": "correct args used 2",
      "op": "assert // correct args used 2",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "111": {
      "op": "itxna ApplicationArgs 2",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%12#0"
      ]
    },
    "114": {
      "op": "pushbytes 0x35",
      "defined_out": [
        "0x35",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%12#0",
        "0x35"
      ]
    },
    "117": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%13#0"
      ]
    },
    "118": {
      "error": "correct args used 3",
      "op": "assert // correct args used 3",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "119": {
      "op": "b main_after_if_else@20"
    },
    "122": {
      "block": "main_else_body@16",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "itxn_begin"
    },
    "123": {
      "op": "pushbytes 0x646966666572656e7420706172616d20736574",
      "defined_out": [
        "0x646966666572656e7420706172616d20736574"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x646966666572656e7420706172616d20736574"
      ]
    },
    "144": {
      "op": "itxn_field Note",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "146": {
      "op": "bytec_3 // 0x33",
      "defined_out": [
        "0x33"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x33"
      ]
    },
    "147": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "149": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x34"
      ]
    },
    "152": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "154": {
      "op": "pushbytes 0x35",
      "defined_out": [
        "0x35"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x35"
      ]
    },
    "157": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "159": {
      "op": "bytec_0 // 0x098101",
      "defined_out": [
        "0x098101"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x098101"
      ]
    },
    "160": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "162": {
      "op": "bytec_0 // 0x098101",
      "stack_out": [
        "tmp%1#1",
        "0x098101"
      ]
    },
    "163": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "165": {
      "op": "intc_0 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "tmp%1#1",
        "appl"
      ]
    },
    "166": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "168": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%1#1",
        "0"
      ]
    },
    "169": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "171": {
      "op": "itxn_submit"
    },
    "172": {
      "op": "b main_after_if_else@17"
    },
    "175": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%1#1"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%7#0"
      ]
    },
    "177": {
      "op": "bnz main_after_if_else@10",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "180": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%8#0"
      ]
    },
    "182": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%9#0"
      ]
    },
    "183": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "184": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%0#0"
      ]
    },
    "185": {
      "op": "return",
      "stack_out": [
        "tmp%1#1"
      ]
    }
  }
}