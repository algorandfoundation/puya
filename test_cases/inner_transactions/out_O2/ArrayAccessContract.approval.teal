#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 6 0
    bytecblock 0x098101 0x31 0x32 0x33
    pushbytes ""
    pushint 1 // 1
    txn NumAppArgs
    bz main_bare_routing@6
    txna ApplicationArgs 0
    pushbytes 0x89a8220a // method "test_branching_array_call(bool)void"
    ==
    assert
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    pushbytes 0x00
    !=
    dup
    bury 3
    bz main_else_body@11
    itxn_begin
    bytec_1 // 0x31
    itxn_field ApplicationArgs
    bytec_2 // 0x32
    itxn_field ApplicationArgs
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit

main_after_if_else@12:
    dig 1
    bz main_else_body@14
    itxna ApplicationArgs 0
    bytec_1 // 0x31
    ==
    assert // correct args used 1
    itxna ApplicationArgs 1
    bytec_2 // 0x32
    ==
    return // on error: correct args used 2

main_else_body@14:
    itxna ApplicationArgs 0
    bytec_3 // 0x33
    ==
    assert // correct args used 1
    itxna ApplicationArgs 1
    pushbytes 0x34
    ==
    assert // correct args used 2
    itxna ApplicationArgs 2
    pushbytes 0x35
    ==
    assert // correct args used 3
    return

main_else_body@11:
    itxn_begin
    pushbytes 0x646966666572656e7420706172616d20736574
    itxn_field Note
    bytec_3 // 0x33
    itxn_field ApplicationArgs
    pushbytes 0x34
    itxn_field ApplicationArgs
    pushbytes 0x35
    itxn_field ApplicationArgs
    bytec_0 // 0x098101
    itxn_field ClearStateProgramPages
    bytec_0 // 0x098101
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    b main_after_if_else@12

main_bare_routing@6:
    txn OnCompletion
    !
    assert
    txn ApplicationID
    !
    return // on error: can only call when creating
