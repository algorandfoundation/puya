{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";AAQA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;;AACK;;AAAA;AAAA;AAAA;;AAAA;AAGkD;;;AAAT;AAAV;;AAAK;AAAtB;;AAAA;AAAJ;AAAP;AAHH;;;AADL;;AAAA;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "6": {
      "op": "pushbytes 0xc2b8dd8a // method \"test_new_ops()void\"",
      "defined_out": [
        "Method(test_new_ops()void)"
      ],
      "stack_out": [
        "Method(test_new_ops()void)"
      ]
    },
    "12": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_new_ops()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_new_ops()void)",
        "tmp%2#0"
      ]
    },
    "15": {
      "op": "match main_test_new_ops_route@3",
      "stack_out": []
    },
    "19": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "20": {
      "block": "main_test_new_ops_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "22": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "23": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "24": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "26": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "27": {
      "op": "pushint 1793 // 1793",
      "defined_out": [
        "1793"
      ],
      "stack_out": [
        "1793"
      ]
    },
    "30": {
      "op": "bzero",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "31": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "0x"
      ]
    },
    "33": {
      "op": "dup",
      "stack_out": [
        "tmp%0#2",
        "0x",
        "0x"
      ]
    },
    "34": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x",
        "tmp%0#2"
      ]
    },
    "36": {
      "op": "falcon_verify",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "37": {
      "op": "!",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "38": {
      "op": "assert",
      "stack_out": []
    },
    "39": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "41": {
      "op": "return",
      "stack_out": []
    },
    "42": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "44": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "47": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "49": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "50": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "51": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "53": {
      "op": "return",
      "stack_out": []
    }
  }
}