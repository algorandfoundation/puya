{
    "name": "Contract",
    "structs": {},
    "methods": [
        {
            "name": "test_falcon_verify",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_reject_version",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        21
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        54
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        133,
                        218
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        135
                    ],
                    "errorMessage": "should be version 0"
                },
                {
                    "pc": [
                        221
                    ],
                    "errorMessage": "should be version 1"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEyCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayA2IDAgMQogICAgYnl0ZWNibG9jayBiYXNlNjQoRElFQlF3PT0pCiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6NAogICAgLy8gY2xhc3MgQ29udHJhY3QoQVJDNENvbnRyYWN0LCBhdm1fdmVyc2lvbj0xMik6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9fX2FsZ29weV9kZWZhdWx0X2NyZWF0ZUA5CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydAogICAgcHVzaGJ5dGVzcyAweGJlNTY0OTljIDB4YWM4YWFiNDIgLy8gbWV0aG9kICJ0ZXN0X2ZhbGNvbl92ZXJpZnkoKXZvaWQiLCBtZXRob2QgInRlc3RfcmVqZWN0X3ZlcnNpb24oKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCB0ZXN0X2ZhbGNvbl92ZXJpZnkgdGVzdF9yZWplY3RfdmVyc2lvbgogICAgZXJyCgptYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgJiYKICAgIHJldHVybiAvLyBvbiBlcnJvcjogT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKCgovLyB0ZXN0X2Nhc2VzLmF2bV8xMi5jb250cmFjdC5Db250cmFjdC50ZXN0X2ZhbGNvbl92ZXJpZnlbcm91dGluZ10oKSAtPiB2b2lkOgp0ZXN0X2ZhbGNvbl92ZXJpZnk6CiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6NwogICAgLy8gYXNzZXJ0IG5vdCBvcC5mYWxjb25fdmVyaWZ5KGIiIiwgYiIiLCBvcC5iemVybygxNzkzKSkKICAgIHB1c2hpbnQgMTc5MyAvLyAxNzkzCiAgICBiemVybwogICAgcHVzaGJ5dGVzIDB4CiAgICBkdXAKICAgIHVuY292ZXIgMgogICAgZmFsY29uX3ZlcmlmeQogICAgIQogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5hdm1fMTIuY29udHJhY3QuQ29udHJhY3QudGVzdF9yZWplY3RfdmVyc2lvbltyb3V0aW5nXSgpIC0+IHZvaWQ6CnRlc3RfcmVqZWN0X3ZlcnNpb246CiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6MTEKICAgIC8vIGFwcF92MF90eG4gPSBhcmM0LmFyYzRfY3JlYXRlKENvbnRyYWN0VjApCiAgICBpdHhuX2JlZ2luCiAgICBieXRlY18wIC8vIGJhc2U2NChESUVCUXc9PSkKICAgIGl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW1QYWdlcwogICAgcHVzaGJ5dGVzIGJhc2U2NChEREViUVFBYWdBU2c2Qmh5TmhvQWpnRUFBUUF4R1lFRUVqRVlFRVJDQUFneEdSUXhHQlFRUXpGRWdRRVNRdz09KQogICAgaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW1QYWdlcwogICAgaW50Y18wIC8vIGFwcGwKICAgIGl0eG5fZmllbGQgVHlwZUVudW0KICAgIGludGNfMSAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgaXR4bl9zdWJtaXQKICAgIGl0eG4gQ3JlYXRlZEFwcGxpY2F0aW9uSUQKICAgIC8vIGF2bV8xMi9jb250cmFjdC5weToxMwogICAgLy8gYXNzZXJ0IGFwcC52ZXJzaW9uID09IDAsICJzaG91bGQgYmUgdmVyc2lvbiAwIgogICAgZHVwCiAgICBhcHBfcGFyYW1zX2dldCBBcHBWZXJzaW9uCiAgICBhc3NlcnQgLy8gYXBwbGljYXRpb24gZXhpc3RzCiAgICAhCiAgICBhc3NlcnQgLy8gc2hvdWxkIGJlIHZlcnNpb24gMAogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjE1LTE3CiAgICAvLyBhcmM0LmFyYzRfdXBkYXRlKAogICAgLy8gICAgIENvbnRyYWN0VjAudXBkYXRlLCBhcHBfaWQ9YXBwLCByZWplY3RfdmVyc2lvbj0xLCBjb21waWxlZD1jb21waWxlX2NvbnRyYWN0KENvbnRyYWN0VjEpCiAgICAvLyApCiAgICBpdHhuX2JlZ2luCiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6MTYKICAgIC8vIENvbnRyYWN0VjAudXBkYXRlLCBhcHBfaWQ9YXBwLCByZWplY3RfdmVyc2lvbj0xLCBjb21waWxlZD1jb21waWxlX2NvbnRyYWN0KENvbnRyYWN0VjEpCiAgICBieXRlY18wIC8vIGJhc2U2NChESUVCUXc9PSkKICAgIGl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW1QYWdlcwogICAgcHVzaGJ5dGVzIGJhc2U2NChEREViUVFBYWdBUWtONDA4TmhvQWpnRUFBUUF4R1lFRkVqRVlFRVJDQUFneEdSUXhHQlFRUXpGRWdRSVNRdz09KQogICAgaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW1QYWdlcwogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjE1LTE3CiAgICAvLyBhcmM0LmFyYzRfdXBkYXRlKAogICAgLy8gICAgIENvbnRyYWN0VjAudXBkYXRlLCBhcHBfaWQ9YXBwLCByZWplY3RfdmVyc2lvbj0xLCBjb21waWxlZD1jb21waWxlX2NvbnRyYWN0KENvbnRyYWN0VjEpCiAgICAvLyApCiAgICBwdXNoaW50IDQgLy8gVXBkYXRlQXBwbGljYXRpb24KICAgIGl0eG5fZmllbGQgT25Db21wbGV0aW9uCiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6MTYKICAgIC8vIENvbnRyYWN0VjAudXBkYXRlLCBhcHBfaWQ9YXBwLCByZWplY3RfdmVyc2lvbj0xLCBjb21waWxlZD1jb21waWxlX2NvbnRyYWN0KENvbnRyYWN0VjEpCiAgICBpbnRjXzIgLy8gMQogICAgaXR4bl9maWVsZCBSZWplY3RWZXJzaW9uCiAgICBkdXAKICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25JRAogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjE1LTE3CiAgICAvLyBhcmM0LmFyYzRfdXBkYXRlKAogICAgLy8gICAgIENvbnRyYWN0VjAudXBkYXRlLCBhcHBfaWQ9YXBwLCByZWplY3RfdmVyc2lvbj0xLCBjb21waWxlZD1jb21waWxlX2NvbnRyYWN0KENvbnRyYWN0VjEpCiAgICAvLyApCiAgICBwdXNoYnl0ZXMgMHhhMGU4MTg3MiAvLyBtZXRob2QgInVwZGF0ZSgpdm9pZCIKICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCiAgICBpbnRjXzAgLy8gYXBwbAogICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgaW50Y18xIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICBpdHhuX3N1Ym1pdAogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjE4CiAgICAvLyBhc3NlcnQgYXBwLnZlcnNpb24gPT0gMSwgInNob3VsZCBiZSB2ZXJzaW9uIDEiCiAgICBkdXAKICAgIGFwcF9wYXJhbXNfZ2V0IEFwcFZlcnNpb24KICAgIGFzc2VydCAvLyBhcHBsaWNhdGlvbiBleGlzdHMKICAgIGludGNfMiAvLyAxCiAgICA9PQogICAgYXNzZXJ0IC8vIHNob3VsZCBiZSB2ZXJzaW9uIDEKICAgIC8vIGF2bV8xMi9jb250cmFjdC5weToyMC0yOQogICAgLy8gaXR4bi5BcHBsaWNhdGlvbkNhbGwoCiAgICAvLyAgICAgYXBwX2FyZ3M9KAogICAgLy8gICAgICAgICBhcmM0LmFyYzRfc2lnbmF0dXJlKAogICAgLy8gICAgICAgICAgICAgQ29udHJhY3RWMS5kZWxldGUsCiAgICAvLyAgICAgICAgICksCiAgICAvLyAgICAgKSwKICAgIC8vICAgICBvbl9jb21wbGV0aW9uPU9uQ29tcGxldGVBY3Rpb24uRGVsZXRlQXBwbGljYXRpb24sCiAgICAvLyAgICAgYXBwX2lkPWFwcCwKICAgIC8vICAgICByZWplY3RfdmVyc2lvbj0yLAogICAgLy8gKS5zdWJtaXQoKQogICAgaXR4bl9iZWdpbgogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjI4CiAgICAvLyByZWplY3RfdmVyc2lvbj0yLAogICAgcHVzaGludCAyIC8vIDIKICAgIGl0eG5fZmllbGQgUmVqZWN0VmVyc2lvbgogICAgaXR4bl9maWVsZCBBcHBsaWNhdGlvbklECiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6MjYKICAgIC8vIG9uX2NvbXBsZXRpb249T25Db21wbGV0ZUFjdGlvbi5EZWxldGVBcHBsaWNhdGlvbiwKICAgIHB1c2hpbnQgNSAvLyBEZWxldGVBcHBsaWNhdGlvbgogICAgaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KICAgIC8vIGF2bV8xMi9jb250cmFjdC5weToyMi0yNAogICAgLy8gYXJjNC5hcmM0X3NpZ25hdHVyZSgKICAgIC8vICAgICBDb250cmFjdFYxLmRlbGV0ZSwKICAgIC8vICksCiAgICBwdXNoYnl0ZXMgMHgyNDM3OGQzYyAvLyBtZXRob2QgImRlbGV0ZSgpdm9pZCIKICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCiAgICAvLyBhdm1fMTIvY29udHJhY3QucHk6MjAKICAgIC8vIGl0eG4uQXBwbGljYXRpb25DYWxsKAogICAgaW50Y18wIC8vIGFwcGwKICAgIGl0eG5fZmllbGQgVHlwZUVudW0KICAgIGludGNfMSAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjIwLTI5CiAgICAvLyBpdHhuLkFwcGxpY2F0aW9uQ2FsbCgKICAgIC8vICAgICBhcHBfYXJncz0oCiAgICAvLyAgICAgICAgIGFyYzQuYXJjNF9zaWduYXR1cmUoCiAgICAvLyAgICAgICAgICAgICBDb250cmFjdFYxLmRlbGV0ZSwKICAgIC8vICAgICAgICAgKSwKICAgIC8vICAgICApLAogICAgLy8gICAgIG9uX2NvbXBsZXRpb249T25Db21wbGV0ZUFjdGlvbi5EZWxldGVBcHBsaWNhdGlvbiwKICAgIC8vICAgICBhcHBfaWQ9YXBwLAogICAgLy8gICAgIHJlamVjdF92ZXJzaW9uPTIsCiAgICAvLyApLnN1Ym1pdCgpCiAgICBpdHhuX3N1Ym1pdAogICAgLy8gYXZtXzEyL2NvbnRyYWN0LnB5OjkKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgaW50Y18yIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEyCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "DCADBgABJgEEDIEBQzEbQQAdMRkURDEYRIICBL5WSZwErIqrQjYaAI4CAAkAFQAxGRQxGBQQQ4GBDq+AAElPAoUUQ7EoskKALgwxG0EAGoAEoOgYcjYaAI4BAAEAMRmBBBIxGBBEQgAIMRkUMRgUEEMxRIEBEkOyQCKyECOyAbO0PUlyCUQURLEoskKALgwxG0EAGoAEJDeNPDYaAI4BAAEAMRmBBRIxGBBEQgAIMRkUMRgUEEMxRIECEkOyQIEEshkkskRJshiABKDoGHKyGiKyECOyAbNJcglEJBJEsYECskSyGIEFshmABCQ3jTyyGiKyECOyAbMkQw==",
        "clear": "DIEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}