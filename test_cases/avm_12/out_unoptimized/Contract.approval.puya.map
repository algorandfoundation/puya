{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAAA;AAKK;;;;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AAFkD;;;AAAT;AAAV;AAAK;AAAtB;;AAAA;AAAJ;AAAP;;AAER;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AACO;AAAA;;AAAA;AAAe;AAAf;AAAP;AAEA;AAC8D;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAD9D;;;;AACkD;;;;;AADlD;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAGO;;AAAA;AAAA;;AAAA;AAAe;AAAf;AAAP;AAEA;AAQmB;;;;;;AAFD;;;;AAJV;;;;;;;;AAFR;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock 0x base64(DEIAAIEBQw==)"
    },
    "17": {
      "op": "b main_block@0"
    },
    "20": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "23": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "25": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "26": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "27": {
      "op": "bz main___algopy_default_create@9",
      "stack_out": []
    },
    "30": {
      "op": "b main_abi_routing@2"
    },
    "33": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "36": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "37": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "38": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "40": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "41": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "42": {
      "op": "bz main_create_NoOp@7",
      "stack_out": []
    },
    "45": {
      "op": "b main_call_NoOp@3"
    },
    "48": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "51": {
      "op": "pushbytes 0xbe56499c // method \"test_falcon_verify()void\"",
      "defined_out": [
        "Method(test_falcon_verify()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_falcon_verify()void)"
      ]
    },
    "57": {
      "op": "pushbytes 0xac8aab42 // method \"test_reject_version()void\"",
      "defined_out": [
        "Method(test_falcon_verify()void)",
        "Method(test_reject_version()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_falcon_verify()void)",
        "Method(test_reject_version()void)"
      ]
    },
    "63": {
      "op": "uncover 2",
      "stack_out": [
        "Method(test_falcon_verify()void)",
        "Method(test_reject_version()void)",
        "tmp%6#0"
      ]
    },
    "65": {
      "op": "match main_test_falcon_verify_route@4 main_test_reject_version_route@5",
      "stack_out": []
    },
    "71": {
      "op": "b main_switch_case_next@6"
    },
    "74": {
      "block": "main_switch_case_next@6",
      "stack_in": [],
      "op": "b main_after_if_else@8"
    },
    "77": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "80": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "81": {
      "block": "main_test_reject_version_route@5",
      "stack_in": [],
      "callsub": "test_cases.avm_12.contract.Contract.test_reject_version[routing]",
      "op": "callsub test_reject_version"
    },
    "84": {
      "op": "b main_switch_case_next@6"
    },
    "87": {
      "block": "main_test_falcon_verify_route@4",
      "stack_in": [],
      "callsub": "test_cases.avm_12.contract.Contract.test_falcon_verify[routing]",
      "op": "callsub test_falcon_verify"
    },
    "90": {
      "op": "b main_switch_case_next@6"
    },
    "93": {
      "block": "main_create_NoOp@7",
      "stack_in": [],
      "op": "b main_after_if_else@8"
    },
    "96": {
      "block": "main___algopy_default_create@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "98": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "99": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "102": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "103": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "104": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "105": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "106": {
      "op": "b main_block@12"
    },
    "109": {
      "block": "main_block@12",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.avm_12.contract.Contract.__algopy_default_create@13"
    },
    "112": {
      "block": "main_after_inlined_test_cases.avm_12.contract.Contract.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "113": {
      "op": "return",
      "stack_out": []
    },
    "114": {
      "subroutine": "test_cases.avm_12.contract.Contract.test_falcon_verify[routing]",
      "params": {},
      "block": "test_falcon_verify",
      "stack_in": [],
      "op": "b test_falcon_verify_block@0"
    },
    "117": {
      "block": "test_falcon_verify_block@0",
      "stack_in": [],
      "callsub": "test_cases.avm_12.contract.Contract.test_falcon_verify",
      "op": "callsub test_cases.avm_12.contract.Contract.test_falcon_verify"
    },
    "120": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "121": {
      "op": "return",
      "stack_out": []
    },
    "122": {
      "subroutine": "test_cases.avm_12.contract.Contract.test_reject_version[routing]",
      "params": {},
      "block": "test_reject_version",
      "stack_in": [],
      "op": "b test_reject_version_block@0"
    },
    "125": {
      "block": "test_reject_version_block@0",
      "stack_in": [],
      "callsub": "test_cases.avm_12.contract.Contract.test_reject_version",
      "op": "callsub test_cases.avm_12.contract.Contract.test_reject_version"
    },
    "128": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "129": {
      "op": "return",
      "stack_out": []
    },
    "130": {
      "subroutine": "test_cases.avm_12.contract.Contract.test_falcon_verify",
      "params": {},
      "block": "test_cases.avm_12.contract.Contract.test_falcon_verify",
      "stack_in": [],
      "op": "b test_cases.avm_12.contract.Contract.test_falcon_verify_block@0"
    },
    "133": {
      "block": "test_cases.avm_12.contract.Contract.test_falcon_verify_block@0",
      "stack_in": [],
      "op": "pushint 1793 // 1793",
      "defined_out": [
        "1793"
      ],
      "stack_out": [
        "1793"
      ]
    },
    "136": {
      "op": "bzero",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "137": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "138": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%0#0",
        "0x",
        "0x"
      ]
    },
    "139": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x",
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "falcon_verify",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "142": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "143": {
      "op": "assert",
      "stack_out": []
    },
    "144": {
      "retsub": true,
      "op": "retsub"
    },
    "145": {
      "subroutine": "test_cases.avm_12.contract.Contract.test_reject_version",
      "params": {},
      "block": "test_cases.avm_12.contract.Contract.test_reject_version",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "148": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "app#0"
      ]
    },
    "149": {
      "op": "b test_cases.avm_12.contract.Contract.test_reject_version_block@0"
    },
    "152": {
      "block": "test_cases.avm_12.contract.Contract.test_reject_version_block@0",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "154": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "app#0"
      ]
    },
    "156": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "157": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "app#0"
      ]
    },
    "159": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "160": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "app#0"
      ]
    },
    "162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "163": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "app#0"
      ]
    },
    "165": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "166": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "168": {
      "op": "bytec_1 // base64(DEIAAIEBQw==)",
      "defined_out": [
        "DEIAAIEBQw=="
      ],
      "stack_out": [
        "app#0",
        "DEIAAIEBQw=="
      ]
    },
    "169": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "171": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "app#0",
        ""
      ]
    },
    "172": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "174": {
      "op": "pushbytes base64(DCACAAFCAABCAAAxGyITQQAqQgAANhoAgASg6BhyTwGOAQAHQgAAQgAAADEZgQQSMRgiExBEiAAVQv/rMRkiEjEYIhIQREIAAEIAACNDQgAAiAACI0NCAAAxRCMSRIk=)",
      "defined_out": [
        "DCACAAFCAABCAAAxGyITQQAqQgAANhoAgASg6BhyTwGOAQAHQgAAQgAAADEZgQQSMRgiExBEiAAVQv/rMRkiEjEYIhIQREIAAEIAACNDQgAAiAACI0NCAAAxRCMSRIk="
      ],
      "stack_out": [
        "app#0",
        "DCACAAFCAABCAAAxGyITQQAqQgAANhoAgASg6BhyTwGOAQAHQgAAQgAAADEZgQQSMRgiExBEiAAVQv/rMRkiEjEYIhIQREIAAEIAACNDQgAAiAACI0NCAAAxRCMSRIk="
      ]
    },
    "271": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "273": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "app#0",
        ""
      ]
    },
    "274": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "276": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "277": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "279": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "280": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "282": {
      "op": "b test_cases.avm_12.contract.Contract.test_reject_version_next_txn@1"
    },
    "285": {
      "block": "test_cases.avm_12.contract.Contract.test_reject_version_next_txn@1",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "286": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "app_v0_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "app#0",
        "app_v0_txn.CreatedApplicationID#0"
      ]
    },
    "288": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "289": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "app#0"
      ]
    },
    "291": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "292": {
      "op": "app_params_get AppVersion",
      "defined_out": [
        "app#0",
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "294": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app#0",
        "app#0",
        "value%0#0"
      ]
    },
    "295": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "app#0",
        "value%0#0",
        "0"
      ]
    },
    "296": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "tmp%0#0"
      ]
    },
    "297": {
      "error": "should be version 0",
      "op": "assert // should be version 0",
      "stack_out": [
        "app#0",
        "app#0"
      ]
    },
    "298": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "299": {
      "op": "bytec_1 // base64(DEIAAIEBQw==)",
      "defined_out": [
        "DEIAAIEBQw==",
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "DEIAAIEBQw=="
      ]
    },
    "300": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "302": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "",
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        ""
      ]
    },
    "303": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "305": {
      "op": "pushbytes base64(DCACAAFCAABCAAAxGyITQQAqQgAANhoAgAQkN408TwGOAQAHQgAAQgAAADEZgQUSMRgiExBEiAAVQv/rMRkiEjEYIhIQREIAAEIAACNDQgAAiAACI0NCAAAxRIECEkSJ)",
      "defined_out": [
        "DCACAAFCAABCAAAxGyITQQAqQgAANhoAgAQkN408TwGOAQAHQgAAQgAAADEZgQUSMRgiExBEiAAVQv/rMRkiEjEYIhIQREIAAEIAACNDQgAAiAACI0NCAAAxRIECEkSJ",
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "DCACAAFCAABCAAAxGyITQQAqQgAANhoAgAQkN408TwGOAQAHQgAAQgAAADEZgQUSMRgiExBEiAAVQv/rMRkiEjEYIhIQREIAAEIAACNDQgAAiAACI0NCAAAxRIECEkSJ"
      ]
    },
    "403": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "405": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        ""
      ]
    },
    "406": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "408": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "UpdateApplication"
      ]
    },
    "410": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "412": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "1"
      ]
    },
    "413": {
      "op": "itxn_field RejectVersion",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "415": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "417": {
      "op": "pushbytes 0xa0e81872 // method \"update()void\"",
      "defined_out": [
        "Method(update()void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(update()void)"
      ]
    },
    "423": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "425": {
      "op": "intc_2 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "426": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "428": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "429": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "431": {
      "op": "b test_cases.avm_12.contract.Contract.test_reject_version_next_txn@2"
    },
    "434": {
      "block": "test_cases.avm_12.contract.Contract.test_reject_version_next_txn@2",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "435": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "app#0"
      ]
    },
    "437": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "438": {
      "op": "app_params_get AppVersion",
      "defined_out": [
        "app#0",
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "440": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "app#0",
        "app#0",
        "value%1#0"
      ]
    },
    "441": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "app#0",
        "value%1#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "value%1#0",
        "1"
      ]
    },
    "442": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "443": {
      "error": "should be version 1",
      "op": "assert // should be version 1",
      "stack_out": [
        "app#0",
        "app#0"
      ]
    },
    "444": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "445": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "2"
      ]
    },
    "447": {
      "op": "itxn_field RejectVersion",
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "449": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "451": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "DeleteApplication"
      ]
    },
    "453": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "app#0"
      ]
    },
    "455": {
      "op": "pushbytes 0x24378d3c // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(delete()void)"
      ]
    },
    "461": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "463": {
      "op": "intc_2 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "464": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "466": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "467": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "469": {
      "op": "b test_cases.avm_12.contract.Contract.test_reject_version_next_txn@3"
    },
    "472": {
      "block": "test_cases.avm_12.contract.Contract.test_reject_version_next_txn@3",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "473": {
      "retsub": true,
      "op": "retsub"
    }
  }
}