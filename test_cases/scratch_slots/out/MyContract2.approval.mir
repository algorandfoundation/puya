// Op                                             // Op Description                                            Stack (out)                                   Source code                                                      Source line

#pragma version 10

// test_cases.scratch_slots.contract2.MyContract2.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                             //                                                           {txn}                                         Txn.application_id                                               scratch_slots/contract.py:9
                                                  // virtual: store tmp%0#0 to l-stack (no copy)               tmp%0#0                                       Txn.application_id                                               scratch_slots/contract.py:9
                                                  // virtual: load tmp%0#0 from l-stack (no copy)              tmp%0#0                                       Txn.application_id == 0 else 0)                                  scratch_slots/contract.py:9
    !                                             //                                                           {!}                                           Txn.application_id == 0 else 0)                                  scratch_slots/contract.py:9
                                                  // virtual: store tmp%1#0 to l-stack (no copy)               tmp%1#0                                       Txn.application_id == 0 else 0)                                  scratch_slots/contract.py:9
                                                  // virtual: load tmp%1#0 from l-stack (no copy)              tmp%1#0                                       5 if Txn.application_id == 0 else 0                              scratch_slots/contract.py:9
    int 5                                         //                                                           tmp%1#0,5                                     5 if Txn.application_id == 0 else 0                              scratch_slots/contract.py:9
    *                                             //                                                           {*}                                           5 if Txn.application_id == 0 else 0                              scratch_slots/contract.py:9
                                                  // virtual: store tmp%2#0 to l-stack (no copy)               tmp%2#0                                       5 if Txn.application_id == 0 else 0                              scratch_slots/contract.py:9
                                                  // virtual: load tmp%2#0 from l-stack (no copy)              tmp%2#0                                       op.Scratch.store(UInt64(1), 5 if Txn.application_id == 0 else 0) scratch_slots/contract.py:9
    store 1                                       //                                                                                                         op.Scratch.store(UInt64(1), 5 if Txn.application_id == 0 else 0) scratch_slots/contract.py:9
    byte 0x48656c6c6f20576f726c64                 //                                                           0x48656c6c6f20576f726c64                      Bytes(b"Hello World")                                            scratch_slots/contract.py:11
    store 2                                       //                                                                                                         op.Scratch.store(TWO, hello_world)                               scratch_slots/contract.py:12
    int 3                                         //                                                           3                                             3                                                                scratch_slots/contract.py:14
                                                  // virtual: store i#0 to f-stack                             (ùïó) i#0 |                                     i                                                                scratch_slots/contract.py:14
    // Implicit fall through to main_for_header@1 //                                                           (ùïó) i#0 |

main_for_header@1:
    dup                                           // load i#0 from f-stack                                     (ùïó) i#0 | i#0                                 urange(3, 20)                                                    scratch_slots/contract.py:14
    int 20                                        //                                                           (ùïó) i#0 | i#0,20                              20                                                               scratch_slots/contract.py:14
    <                                             //                                                           (ùïó) i#0 | {<}                                 urange(3, 20)                                                    scratch_slots/contract.py:14
                                                  // virtual: store continue_looping%0#0 to l-stack (no copy)  (ùïó) i#0 | continue_looping%0#0                urange(3, 20)                                                    scratch_slots/contract.py:14
                                                  // virtual: load continue_looping%0#0 from l-stack (no copy) (ùïó) i#0 | continue_looping%0#0                for i in urange(3, 20):                                          scratch_slots/contract.py:14
    bz main_after_for@4                           //                                                           (ùïó) i#0 |                                     for i in urange(3, 20):                                          scratch_slots/contract.py:14
    // Implicit fall through to main_for_body@2   //                                                           (ùïó) i#0 |                                     for i in urange(3, 20):                                          scratch_slots/contract.py:14

main_for_body@2:
    dup                                           // load i#0 from f-stack                                     (ùïó) i#0 | i#0                                 op.Scratch.store(i, i)                                           scratch_slots/contract.py:15
    dup                                           // store i#0 to l-stack (copy)                               (ùïó) i#0 | i#0,i#0                             op.Scratch.store(i, i)                                           scratch_slots/contract.py:15
    dig 1                                         // load i#0 from l-stack (copy)                              (ùïó) i#0 | i#0,i#0,i#0                         op.Scratch.store(i, i)                                           scratch_slots/contract.py:15
    stores                                        //                                                           (ùïó) i#0 | i#0                                 op.Scratch.store(i, i)                                           scratch_slots/contract.py:15
                                                  // virtual: load i#0 from l-stack (no copy)                  (ùïó) i#0 | i#0                                 urange(3, 20)                                                    scratch_slots/contract.py:14
    int 1                                         //                                                           (ùïó) i#0 | i#0,1                               urange(3, 20)                                                    scratch_slots/contract.py:14
    +                                             //                                                           (ùïó) i#0 | {+}                                 urange(3, 20)                                                    scratch_slots/contract.py:14
    bury 1                                        // store i#0 to f-stack                                      (ùïó) i#0 |                                     urange(3, 20)                                                    scratch_slots/contract.py:14
    b main_for_header@1                           //                                                           (ùïó) i#0 |

main_after_for@4:
    load 1                                        //                                                           (ùïó) i#0 | {load}                              op.Scratch.load_uint64(1)                                        scratch_slots/contract.py:17
                                                  // virtual: store tmp%3#0 to l-stack (no copy)               (ùïó) i#0 | tmp%3#0                             op.Scratch.load_uint64(1)                                        scratch_slots/contract.py:17
                                                  // virtual: load tmp%3#0 from l-stack (no copy)              (ùïó) i#0 | tmp%3#0                             op.Scratch.load_uint64(1) == UInt64(5)                           scratch_slots/contract.py:17
    int 5                                         //                                                           (ùïó) i#0 | tmp%3#0,5                           UInt64(5)                                                        scratch_slots/contract.py:17
    ==                                            //                                                           (ùïó) i#0 | {==}                                op.Scratch.load_uint64(1) == UInt64(5)                           scratch_slots/contract.py:17
                                                  // virtual: store tmp%4#0 to l-stack (no copy)               (ùïó) i#0 | tmp%4#0                             op.Scratch.load_uint64(1) == UInt64(5)                           scratch_slots/contract.py:17
                                                  // virtual: load tmp%4#0 from l-stack (no copy)              (ùïó) i#0 | tmp%4#0                             assert op.Scratch.load_uint64(1) == UInt64(5)                    scratch_slots/contract.py:17
    assert                                        //                                                           (ùïó) i#0 |                                     assert op.Scratch.load_uint64(1) == UInt64(5)                    scratch_slots/contract.py:17
    load 2                                        //                                                           (ùïó) i#0 | {load}                              op.Scratch.load_bytes(2)                                         scratch_slots/contract.py:19
                                                  // virtual: store tmp%5#0 to l-stack (no copy)               (ùïó) i#0 | tmp%5#0                             op.Scratch.load_bytes(2)                                         scratch_slots/contract.py:19
                                                  // virtual: load tmp%5#0 from l-stack (no copy)              (ùïó) i#0 | tmp%5#0                             op.Scratch.load_bytes(2) == b"Hello World"                       scratch_slots/contract.py:19
    byte 0x48656c6c6f20576f726c64                 //                                                           (ùïó) i#0 | tmp%5#0,0x48656c6c6f20576f726c64    b"Hello World"                                                   scratch_slots/contract.py:19
    ==                                            //                                                           (ùïó) i#0 | {==}                                op.Scratch.load_bytes(2) == b"Hello World"                       scratch_slots/contract.py:19
                                                  // virtual: store tmp%6#0 to l-stack (no copy)               (ùïó) i#0 | tmp%6#0                             op.Scratch.load_bytes(2) == b"Hello World"                       scratch_slots/contract.py:19
                                                  // virtual: load tmp%6#0 from l-stack (no copy)              (ùïó) i#0 | tmp%6#0                             assert op.Scratch.load_bytes(2) == b"Hello World"                scratch_slots/contract.py:19
    assert                                        //                                                           (ùïó) i#0 |                                     assert op.Scratch.load_bytes(2) == b"Hello World"                scratch_slots/contract.py:19
    load 5                                        //                                                           (ùïó) i#0 | {load}                              op.Scratch.load_uint64(5)                                        scratch_slots/contract.py:21
                                                  // virtual: store tmp%7#0 to l-stack (no copy)               (ùïó) i#0 | tmp%7#0                             op.Scratch.load_uint64(5)                                        scratch_slots/contract.py:21
                                                  // virtual: load tmp%7#0 from l-stack (no copy)              (ùïó) i#0 | tmp%7#0                             op.Scratch.load_uint64(5) == UInt64(5)                           scratch_slots/contract.py:21
    int 5                                         //                                                           (ùïó) i#0 | tmp%7#0,5                           UInt64(5)                                                        scratch_slots/contract.py:21
    ==                                            //                                                           (ùïó) i#0 | {==}                                op.Scratch.load_uint64(5) == UInt64(5)                           scratch_slots/contract.py:21
                                                  // virtual: store tmp%8#0 to l-stack (no copy)               (ùïó) i#0 | tmp%8#0                             op.Scratch.load_uint64(5) == UInt64(5)                           scratch_slots/contract.py:21
                                                  // virtual: load tmp%8#0 from l-stack (no copy)              (ùïó) i#0 | tmp%8#0                             assert op.Scratch.load_uint64(5) == UInt64(5)                    scratch_slots/contract.py:21
    assert                                        //                                                           (ùïó) i#0 |                                     assert op.Scratch.load_uint64(5) == UInt64(5)                    scratch_slots/contract.py:21
    byte 0x6c617374                               //                                                           (ùïó) i#0 | 0x6c617374                          b"last"                                                          scratch_slots/contract.py:23
    store 19                                      //                                                           (ùïó) i#0 |                                     op.Scratch.store(TWENTY - 1, b"last")                            scratch_slots/contract.py:23
    load 19                                       //                                                           (ùïó) i#0 | {load}                              op.Scratch.load_bytes(TWENTY - 1)                                scratch_slots/contract.py:24
                                                  // virtual: store tmp%9#0 to l-stack (no copy)               (ùïó) i#0 | tmp%9#0                             op.Scratch.load_bytes(TWENTY - 1)                                scratch_slots/contract.py:24
                                                  // virtual: load tmp%9#0 from l-stack (no copy)              (ùïó) i#0 | tmp%9#0                             op.Scratch.load_bytes(TWENTY - 1) == b"last"                     scratch_slots/contract.py:24
    byte 0x6c617374                               //                                                           (ùïó) i#0 | tmp%9#0,0x6c617374                  b"last"                                                          scratch_slots/contract.py:24
    ==                                            //                                                           (ùïó) i#0 | {==}                                op.Scratch.load_bytes(TWENTY - 1) == b"last"                     scratch_slots/contract.py:24
                                                  // virtual: store tmp%10#0 to l-stack (no copy)              (ùïó) i#0 | tmp%10#0                            op.Scratch.load_bytes(TWENTY - 1) == b"last"                     scratch_slots/contract.py:24
                                                  // virtual: load tmp%10#0 from l-stack (no copy)             (ùïó) i#0 | tmp%10#0                            assert op.Scratch.load_bytes(TWENTY - 1) == b"last"              scratch_slots/contract.py:24
    assert                                        //                                                           (ùïó) i#0 |                                     assert op.Scratch.load_bytes(TWENTY - 1) == b"last"              scratch_slots/contract.py:24
    int 1                                         //                                                           (ùïó) i#0 | 1                                   True                                                             scratch_slots/contract.py:25
    return                                        //                                                           (ùïó) i#0 |                                     return True                                                      scratch_slots/contract.py:25

