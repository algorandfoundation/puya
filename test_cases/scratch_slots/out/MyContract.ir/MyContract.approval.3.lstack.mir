// Op                                                                   Stack (out)
// test_cases.scratch_slots.contract.MyContract.approval_program() -> uint64:
main:
    // scratch_slots/contract.py:9
    // op.Scratch.store(UInt64(1), 5 if Txn.application_id == 0 else 0)
    txn ApplicationID                                                   tmp%0#0
    l-load tmp%0#0 0                                                    tmp%0#0
    !                                                                   tmp%1#0
    l-load tmp%1#0 0                                                    tmp%1#0
    int 5                                                               tmp%1#0,5
    *                                                                   tmp%2#0
    l-load tmp%2#0 0                                                    tmp%2#0
    store 1
    // scratch_slots/contract.py:11
    // hello_world = Bytes(b"Hello World")
    byte 0x48656c6c6f20576f726c64                                       0x48656c6c6f20576f726c64
    // scratch_slots/contract.py:12
    // op.Scratch.store(TWO, hello_world)
    store 2
    // scratch_slots/contract.py:14
    // for i in urange(3, 20):
    int 3                                                               3
    v-store i#0
    b main_for_header@1

main_for_header@1:
    // scratch_slots/contract.py:14
    // for i in urange(3, 20):
    v-load i#0                                                          i#0
    int 20                                                              i#0,20
    <                                                                   continue_looping%0#0
    l-load continue_looping%0#0 0                                       continue_looping%0#0
    bz main_after_for@4 ; b main_for_body@2

main_for_body@2:
    // scratch_slots/contract.py:15
    // op.Scratch.store(i, i)
    v-load i#0                                                          i#0
    l-store-copy i#0 0                                                  i#0,i#0 (copy)
    l-load-copy i#0 1                                                   i#0,i#0 (copy),i#0 (copy)
    stores                                                              i#0
    // scratch_slots/contract.py:14
    // for i in urange(3, 20):
    l-load i#0 0                                                        i#0
    int 1                                                               i#0,1
    +                                                                   i#0
    v-store i#0
    b main_for_header@1

main_after_for@4:
    // scratch_slots/contract.py:17
    // assert op.Scratch.load_uint64(1) == UInt64(5)
    load 1                                                              tmp%3#0
    l-load tmp%3#0 0                                                    tmp%3#0
    int 5                                                               tmp%3#0,5
    ==                                                                  tmp%4#0
    l-load tmp%4#0 0                                                    tmp%4#0
    assert
    // scratch_slots/contract.py:19
    // assert op.Scratch.load_bytes(2) == b"Hello World"
    load 2                                                              tmp%5#0
    l-load tmp%5#0 0                                                    tmp%5#0
    byte 0x48656c6c6f20576f726c64                                       tmp%5#0,0x48656c6c6f20576f726c64
    ==                                                                  tmp%6#0
    l-load tmp%6#0 0                                                    tmp%6#0
    assert
    // scratch_slots/contract.py:21
    // assert op.Scratch.load_uint64(5) == UInt64(5)
    load 5                                                              tmp%7#0
    l-load tmp%7#0 0                                                    tmp%7#0
    int 5                                                               tmp%7#0,5
    ==                                                                  tmp%8#0
    l-load tmp%8#0 0                                                    tmp%8#0
    assert
    // scratch_slots/contract.py:23
    // op.Scratch.store(TWENTY - 1, b"last")
    byte 0x6c617374                                                     0x6c617374
    store 19
    // scratch_slots/contract.py:24
    // assert op.Scratch.load_bytes(TWENTY - 1) == b"last"
    load 19                                                             tmp%9#0
    l-load tmp%9#0 0                                                    tmp%9#0
    byte 0x6c617374                                                     tmp%9#0,0x6c617374
    ==                                                                  tmp%10#0
    l-load tmp%10#0 0                                                   tmp%10#0
    assert
    // scratch_slots/contract.py:25
    // return True
    int 1                                                               1
    return


