#pragma version 10

test_cases.scratch_slots.contract2.MyContract2.approval_program:
    // scratch_slots/contract.py:9
    // op.Scratch.store(UInt64(1), 5 if Txn.application_id == 0 else 0)
    txn ApplicationID
    pushint 0 // 0
    ==
    pushint 0 // 0
    pushint 5 // 5
    uncover 2
    select
    pushint 1 // 1
    uncover 1
    stores
    // scratch_slots/contract.py:12
    // op.Scratch.store(TWO, hello_world)
    pushint 2 // 2
    // scratch_slots/contract.py:11
    // hello_world = Bytes(b"Hello World")
    pushbytes 0x48656c6c6f20576f726c64
    // scratch_slots/contract.py:12
    // op.Scratch.store(TWO, hello_world)
    stores
    // scratch_slots/contract.py:14
    // for i in urange(3, 20):
    pushint 1 // 1
    assert // Step cannot be zero
    pushint 3 // 3

main_for_header@1:
    // scratch_slots/contract.py:14
    // for i in urange(3, 20):
    dig 0
    pushint 20 // 20
    <
    bz main_after_for@4
    // scratch_slots/contract.py:15
    // op.Scratch.store(i, i)
    dig 0
    dup
    cover 1
    uncover 1
    stores
    // scratch_slots/contract.py:14
    // for i in urange(3, 20):
    dig 0
    pushint 1 // 1
    +
    bury 1
    b main_for_header@1

main_after_for@4:
    // scratch_slots/contract.py:17
    // assert op.Scratch.load_uint64(1) == UInt64(5)
    pushint 1 // 1
    loads
    pushint 5 // 5
    ==
    assert
    // scratch_slots/contract.py:19
    // assert op.Scratch.load_bytes(2) == b"Hello World"
    pushint 2 // 2
    loads
    pushbytes 0x48656c6c6f20576f726c64
    ==
    assert
    // scratch_slots/contract.py:21
    // assert op.Scratch.load_uint64(5) == UInt64(5)
    pushint 5 // 5
    loads
    pushint 5 // 5
    ==
    assert
    // scratch_slots/contract.py:23
    // op.Scratch.store(TWENTY - 1, b"last")
    pushint 19 // 19
    pushbytes 0x6c617374
    stores
    // scratch_slots/contract.py:24
    // assert op.Scratch.load_bytes(TWENTY - 1) == b"last"
    pushint 19 // 19
    loads
    pushbytes 0x6c617374
    ==
    assert
    // scratch_slots/contract.py:25
    // return True
    pushint 1 // 1
    return
