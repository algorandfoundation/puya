{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "pay(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "key(keyreg)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_config(acfg)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_transfer(axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_freeze(afrz)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "application_call(appl)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLnRyYW5zYWN0aW9uLmNvbnRyYWN0LlRyYW5zYWN0aW9uQ29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHRyYW5zYWN0aW9uL2NvbnRyYWN0LnB5OjE2CiAgICAvLyBjbGFzcyBUcmFuc2FjdGlvbkNvbnRyYWN0KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "TransactionContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "pay",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "key",
                "args": [
                    {
                        "type": "keyreg",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "asset_config",
                "args": [
                    {
                        "type": "acfg",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "asset_transfer",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "asset_freeze",
                "args": [
                    {
                        "type": "afrz",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "application_call",
                "args": [
                    {
                        "type": "appl",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}