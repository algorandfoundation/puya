{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "pay(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "key(keyreg)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_config(acfg)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_transfer(axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "asset_freeze(afrz)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "application_call(appl)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "multiple_txns(appl,appl,appl)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "any_txn(txn,txn,txn)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "group_init(txn,txn,txn)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "TransactionContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "pay",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "key",
                "args": [
                    {
                        "type": "keyreg",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "asset_config",
                "args": [
                    {
                        "type": "acfg",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "asset_transfer",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "asset_freeze",
                "args": [
                    {
                        "type": "afrz",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "application_call",
                "args": [
                    {
                        "type": "appl",
                        "name": "txn"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "multiple_txns",
                "args": [
                    {
                        "type": "appl",
                        "name": "txn1"
                    },
                    {
                        "type": "appl",
                        "name": "txn2"
                    },
                    {
                        "type": "appl",
                        "name": "txn3"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "any_txn",
                "args": [
                    {
                        "type": "txn",
                        "name": "txn1"
                    },
                    {
                        "type": "txn",
                        "name": "txn2"
                    },
                    {
                        "type": "txn",
                        "name": "txn3"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "group_init",
                "args": [
                    {
                        "type": "txn",
                        "name": "txn1"
                    },
                    {
                        "type": "txn",
                        "name": "txn2"
                    },
                    {
                        "type": "txn",
                        "name": "txn3"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}