{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;AAUA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAAA;AAwHK;;;;;;AAVA;;;;;;AAVA;;;;;;AA1BA;;;;;;AARA;;;;;;AATA;;;;;;AAjBA;;;;;;AAXA;;;;;;AATA;;;;;;AApBL;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AACK;;;;;;;;;AAAA;;;AAAA;AAAA;;;;AAmBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AASA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAWA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAiBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AASA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAQA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AA0BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;AAUA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;AAUA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;;AAnHL;;;;;;AAEe;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAc;;AAAd;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAY;;AAAZ;AAAP;AACO;;AAAA;;AAAmB;AAAnB;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AAEO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAgB;;AAAhB;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;AAEI;;AAAA;;AAAgB;;AAAhB;AADJ;AAGO;;AAAA;;AAAa;;;AAAb;AAAP;AACO;;AAAA;;AAA0B;;AAA1B;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;AAEO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;AAEO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAP;;AAER;;;;;;AAEQ;;AAAA;;;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAa;AAAb;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAa;AAAb;;AAAA;;AAAA;AAAP;AACO;;AAAW;AAAX;;AAAA;AAAA;AAAP;AACO;;AAAS;AAAT;;AAAA;AAAA;AAAP;AACO;;AAA2B;AAA3B;;AAAA;AAAA;AAAA;AAAP;AACO;;AAA8B;AAA9B;;AAAA;AAAA;AAAA;AAAP;;AAER;;;;;;AAOY;;;;;;AACO;;AAAA;;AAAA;;AAAA;AAAP;;;;AADZ;;AAAA;;;;;;AAAA;;;;AAAY;;AAAA;;;AAAA;;;;;AAAA;;AAAA;;;AAAA;;;;;AAGZ;;;;;;AAOY;;;;;;AACO;;AAAA;;AAAA;;AAAA;AAAP;;;;AADZ;;AAAA;;;;;;AAAA;;;;AAAY;;AAAA;;;AAAA;;;;;AAAA;;AAAA;;;AAAA;;;;;AAGZ;;;;;;;AAOY;;;;;AACkC;;AAAA;AAAA;;AAC3B;;AAAA;;AAAA;;AAAc;;AAAd;AAAP;;;;AAFZ;;AAAA;;;;;;AAAA;;;AAGe;;AAAA;;AAAe;AAAA;;AAAf;AAAP;;;;;AAHI;;AAAA;;;;;;;;AAAA;;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 3"
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "NoOp"
      ]
    },
    "16": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "17": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "18": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "20": {
      "op": "bz main_create_NoOp@14",
      "stack_out": []
    },
    "23": {
      "op": "b main_call_NoOp@2"
    },
    "26": {
      "block": "main_call_NoOp@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "29": {
      "op": "pushbytes 0x6b680318 // method \"pay(pay)void\"",
      "defined_out": [
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)"
      ]
    },
    "35": {
      "op": "pushbytes 0x16c4a32d // method \"key(keyreg)void\"",
      "defined_out": [
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)"
      ]
    },
    "41": {
      "op": "pushbytes 0x639872d6 // method \"asset_config(acfg)void\"",
      "defined_out": [
        "Method(asset_config(acfg)void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)"
      ]
    },
    "47": {
      "op": "pushbytes 0x50f8f1c3 // method \"asset_transfer(axfer)void\"",
      "defined_out": [
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)"
      ]
    },
    "53": {
      "op": "pushbytes 0x5b3a00cf // method \"asset_freeze(afrz)void\"",
      "defined_out": [
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)"
      ]
    },
    "59": {
      "op": "pushbytes 0xcd62293d // method \"application_call(appl)void\"",
      "defined_out": [
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)"
      ]
    },
    "65": {
      "op": "pushbytes 0x02ea72e5 // method \"multiple_txns(appl,appl,appl)void\"",
      "defined_out": [
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(key(keyreg)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)"
      ]
    },
    "71": {
      "op": "pushbytes 0x3056840b // method \"any_txn(txn,txn,txn)void\"",
      "defined_out": [
        "Method(any_txn(txn,txn,txn)void)",
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(key(keyreg)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(any_txn(txn,txn,txn)void)"
      ]
    },
    "77": {
      "op": "pushbytes 0x96ef9a95 // method \"group_init(txn,txn,txn)void\"",
      "defined_out": [
        "Method(any_txn(txn,txn,txn)void)",
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(group_init(txn,txn,txn)void)",
        "Method(key(keyreg)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(pay(pay)void)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(any_txn(txn,txn,txn)void)",
        "Method(group_init(txn,txn,txn)void)"
      ]
    },
    "83": {
      "op": "uncover 9",
      "stack_out": [
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(any_txn(txn,txn,txn)void)",
        "Method(group_init(txn,txn,txn)void)",
        "tmp%3#0"
      ]
    },
    "85": {
      "op": "match main_pay_route@3 main_key_route@4 main_asset_config_route@5 main_asset_transfer_route@6 main_asset_freeze_route@7 main_application_call_route@8 main_multiple_txns_route@9 main_any_txn_route@10 main_group_init_route@11",
      "stack_out": []
    },
    "105": {
      "op": "b main_switch_case_default@12"
    },
    "108": {
      "block": "main_switch_case_default@12",
      "stack_in": [],
      "op": "b main_switch_case_next@13"
    },
    "111": {
      "block": "main_switch_case_next@13",
      "stack_in": [],
      "op": "b main_after_if_else@18"
    },
    "114": {
      "block": "main_after_if_else@18",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "115": {
      "block": "main_group_init_route@11",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.group_init[routing]",
      "op": "callsub group_init"
    },
    "118": {
      "op": "b main_switch_case_next@13"
    },
    "121": {
      "block": "main_any_txn_route@10",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.any_txn[routing]",
      "op": "callsub any_txn"
    },
    "124": {
      "op": "b main_switch_case_next@13"
    },
    "127": {
      "block": "main_multiple_txns_route@9",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.multiple_txns[routing]",
      "op": "callsub multiple_txns"
    },
    "130": {
      "op": "b main_switch_case_next@13"
    },
    "133": {
      "block": "main_application_call_route@8",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.application_call[routing]",
      "op": "callsub application_call"
    },
    "136": {
      "op": "b main_switch_case_next@13"
    },
    "139": {
      "block": "main_asset_freeze_route@7",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_freeze[routing]",
      "op": "callsub asset_freeze"
    },
    "142": {
      "op": "b main_switch_case_next@13"
    },
    "145": {
      "block": "main_asset_transfer_route@6",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_transfer[routing]",
      "op": "callsub asset_transfer"
    },
    "148": {
      "op": "b main_switch_case_next@13"
    },
    "151": {
      "block": "main_asset_config_route@5",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_config[routing]",
      "op": "callsub asset_config"
    },
    "154": {
      "op": "b main_switch_case_next@13"
    },
    "157": {
      "block": "main_key_route@4",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.key[routing]",
      "op": "callsub key"
    },
    "160": {
      "op": "b main_switch_case_next@13"
    },
    "163": {
      "block": "main_pay_route@3",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.pay[routing]",
      "op": "callsub pay"
    },
    "166": {
      "op": "b main_switch_case_next@13"
    },
    "169": {
      "block": "main_create_NoOp@14",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "172": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "Method(create()void)"
      ]
    },
    "178": {
      "op": "uncover 1",
      "stack_out": [
        "Method(create()void)",
        "tmp%4#0"
      ]
    },
    "180": {
      "op": "match main_create_route@15",
      "stack_out": []
    },
    "184": {
      "op": "b main_switch_case_default@16"
    },
    "187": {
      "block": "main_switch_case_default@16",
      "stack_in": [],
      "op": "b main_switch_case_next@17"
    },
    "190": {
      "block": "main_switch_case_next@17",
      "stack_in": [],
      "op": "b main_after_if_else@18"
    },
    "193": {
      "block": "main_create_route@15",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.create[routing]",
      "op": "callsub create"
    },
    "196": {
      "op": "b main_switch_case_next@17"
    },
    "199": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "202": {
      "block": "create_block@0",
      "stack_in": [],
      "callsub": "test_cases.transaction.contract.TransactionContract.create",
      "op": "callsub test_cases.transaction.contract.TransactionContract.create"
    },
    "205": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "206": {
      "op": "return",
      "stack_out": []
    },
    "207": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.pay[routing]",
      "params": {},
      "block": "pay",
      "stack_in": [],
      "op": "b pay_block@0"
    },
    "210": {
      "block": "pay_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "212": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "213": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "214": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "215": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "217": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "218": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "219": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "220": {
      "callsub": "test_cases.transaction.contract.TransactionContract.pay",
      "op": "callsub test_cases.transaction.contract.TransactionContract.pay",
      "stack_out": []
    },
    "223": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "224": {
      "op": "return",
      "stack_out": []
    },
    "225": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.key[routing]",
      "params": {},
      "block": "key",
      "stack_in": [],
      "op": "b key_block@0"
    },
    "228": {
      "block": "key_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "230": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "231": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "232": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "233": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "235": {
      "op": "intc_2 // keyreg",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "keyreg"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "keyreg"
      ]
    },
    "236": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "237": {
      "error": "transaction type is keyreg",
      "op": "assert // transaction type is keyreg",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "238": {
      "callsub": "test_cases.transaction.contract.TransactionContract.key",
      "op": "callsub test_cases.transaction.contract.TransactionContract.key",
      "stack_out": []
    },
    "241": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "242": {
      "op": "return",
      "stack_out": []
    },
    "243": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_config[routing]",
      "params": {},
      "block": "asset_config",
      "stack_in": [],
      "op": "b asset_config_block@0"
    },
    "246": {
      "block": "asset_config_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "248": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "249": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "250": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "251": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "253": {
      "op": "intc_3 // acfg",
      "defined_out": [
        "acfg",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "acfg"
      ]
    },
    "254": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "255": {
      "error": "transaction type is acfg",
      "op": "assert // transaction type is acfg",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "256": {
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_config",
      "op": "callsub test_cases.transaction.contract.TransactionContract.asset_config",
      "stack_out": []
    },
    "259": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "260": {
      "op": "return",
      "stack_out": []
    },
    "261": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_transfer[routing]",
      "params": {},
      "block": "asset_transfer",
      "stack_in": [],
      "op": "b asset_transfer_block@0"
    },
    "264": {
      "block": "asset_transfer_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "266": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "267": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "268": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "269": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "271": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "axfer"
      ]
    },
    "273": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "274": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "275": {
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_transfer",
      "op": "callsub test_cases.transaction.contract.TransactionContract.asset_transfer",
      "stack_out": []
    },
    "278": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "279": {
      "op": "return",
      "stack_out": []
    },
    "280": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_freeze[routing]",
      "params": {},
      "block": "asset_freeze",
      "stack_in": [],
      "op": "b asset_freeze_block@0"
    },
    "283": {
      "block": "asset_freeze_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "285": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "286": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "287": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "288": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "290": {
      "op": "pushint 5 // afrz",
      "defined_out": [
        "afrz",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "afrz"
      ]
    },
    "292": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "293": {
      "error": "transaction type is afrz",
      "op": "assert // transaction type is afrz",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "294": {
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_freeze",
      "op": "callsub test_cases.transaction.contract.TransactionContract.asset_freeze",
      "stack_out": []
    },
    "297": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "298": {
      "op": "return",
      "stack_out": []
    },
    "299": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.application_call[routing]",
      "params": {},
      "block": "application_call",
      "stack_in": [],
      "op": "b application_call_block@0"
    },
    "302": {
      "block": "application_call_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "304": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "305": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "307": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "309": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "311": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "312": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "313": {
      "callsub": "test_cases.transaction.contract.TransactionContract.application_call",
      "op": "callsub test_cases.transaction.contract.TransactionContract.application_call",
      "stack_out": []
    },
    "316": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "317": {
      "op": "return",
      "stack_out": []
    },
    "318": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.multiple_txns[routing]",
      "params": {},
      "block": "multiple_txns",
      "stack_in": [],
      "op": "b multiple_txns_block@0"
    },
    "321": {
      "block": "multiple_txns_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "323": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "3"
      ]
    },
    "324": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "325": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "326": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "328": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "330": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "331": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "332": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%1#0"
      ]
    },
    "334": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%1#0",
        "2"
      ]
    },
    "335": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "336": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "337": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "339": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "appl"
      ]
    },
    "341": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "342": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "343": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ]
    },
    "345": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "346": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "347": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "348": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "350": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "appl"
      ]
    },
    "352": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "353": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "354": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%0#0"
      ]
    },
    "356": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "358": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "360": {
      "callsub": "test_cases.transaction.contract.TransactionContract.multiple_txns",
      "op": "callsub test_cases.transaction.contract.TransactionContract.multiple_txns",
      "stack_out": []
    },
    "363": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "364": {
      "op": "return",
      "stack_out": []
    },
    "365": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.any_txn[routing]",
      "params": {},
      "block": "any_txn",
      "stack_in": [],
      "op": "b any_txn_block@0"
    },
    "368": {
      "block": "any_txn_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "370": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "3"
      ]
    },
    "371": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "372": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%1#0"
      ]
    },
    "374": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%1#0",
        "2"
      ]
    },
    "375": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "376": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ]
    },
    "378": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "379": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "380": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%0#0"
      ]
    },
    "382": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "384": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "386": {
      "callsub": "test_cases.transaction.contract.TransactionContract.any_txn",
      "op": "callsub test_cases.transaction.contract.TransactionContract.any_txn",
      "stack_out": []
    },
    "389": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "390": {
      "op": "return",
      "stack_out": []
    },
    "391": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.group_init[routing]",
      "params": {},
      "block": "group_init",
      "stack_in": [],
      "op": "b group_init_block@0"
    },
    "394": {
      "block": "group_init_block@0",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "396": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "3"
      ]
    },
    "397": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "398": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%1#0"
      ]
    },
    "400": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%1#0",
        "2"
      ]
    },
    "401": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "402": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ]
    },
    "404": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "405": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "406": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%0#0"
      ]
    },
    "408": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%0#0",
        "gtxn_idx%1#0"
      ]
    },
    "410": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "412": {
      "callsub": "test_cases.transaction.contract.TransactionContract.group_init",
      "op": "callsub test_cases.transaction.contract.TransactionContract.group_init",
      "stack_out": []
    },
    "415": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "416": {
      "op": "return",
      "stack_out": []
    },
    "417": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.create",
      "params": {},
      "block": "test_cases.transaction.contract.TransactionContract.create",
      "stack_in": [],
      "op": "b test_cases.transaction.contract.TransactionContract.create_block@0"
    },
    "420": {
      "block": "test_cases.transaction.contract.TransactionContract.create_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "421": {
      "subroutine": "test_cases.transaction.contract.TransactionContract._common_checks",
      "params": {
        "txn#0": "uint64"
      },
      "block": "_common_checks",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "424": {
      "op": "b _common_checks_block@0"
    },
    "427": {
      "block": "_common_checks_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "429": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "431": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "432": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "433": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "434": {
      "error": "txn_id",
      "op": "assert // txn_id",
      "stack_out": []
    },
    "435": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "437": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "439": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "441": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "442": {
      "error": "sender",
      "op": "assert // sender",
      "stack_out": []
    },
    "443": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "445": {
      "op": "gtxns Fee",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "447": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "448": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "449": {
      "error": "fee",
      "op": "assert // fee",
      "stack_out": []
    },
    "450": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "452": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "454": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "455": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "456": {
      "error": "type",
      "op": "assert // type",
      "stack_out": []
    },
    "457": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "459": {
      "op": "gtxns Type",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "461": {
      "op": "len",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "463": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "464": {
      "error": "type_bytes",
      "op": "assert // type_bytes",
      "stack_out": []
    },
    "465": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "467": {
      "op": "gtxns Note",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "469": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0x"
      ]
    },
    "471": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "472": {
      "error": "note",
      "op": "assert // note",
      "stack_out": []
    },
    "473": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "475": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "478": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "479": {
      "error": "group_index",
      "op": "assert // group_index",
      "stack_out": []
    },
    "480": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "482": {
      "op": "gtxns FirstValid",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "484": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "485": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "486": {
      "error": "first_valid",
      "op": "assert // first_valid",
      "stack_out": []
    },
    "487": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "489": {
      "op": "gtxns LastValid",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "491": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "492": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "493": {
      "error": "last_valid",
      "op": "assert // last_valid",
      "stack_out": []
    },
    "494": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "496": {
      "op": "gtxns Lease",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "498": {
      "op": "len",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "499": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "500": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "501": {
      "error": "lease",
      "op": "assert // lease",
      "stack_out": []
    },
    "502": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "504": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "506": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "508": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "509": {
      "error": "rekey_to",
      "op": "assert // rekey_to",
      "stack_out": []
    },
    "510": {
      "retsub": true,
      "op": "retsub"
    },
    "511": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.pay",
      "params": {
        "txn#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.pay",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "514": {
      "op": "b test_cases.transaction.contract.TransactionContract.pay_block@0"
    },
    "517": {
      "block": "test_cases.transaction.contract.TransactionContract.pay_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "519": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "522": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "524": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "526": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "528": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "529": {
      "error": "Payment should be for this app",
      "op": "assert // Payment should be for this app",
      "stack_out": []
    },
    "530": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "532": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "534": {
      "op": "pushint 1000 // 1000",
      "defined_out": [
        "1000",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "1000"
      ]
    },
    "537": {
      "op": ">",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "538": {
      "error": "Payment should be for >1000 micro algos",
      "op": "assert // Payment should be for >1000 micro algos",
      "stack_out": []
    },
    "539": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "541": {
      "op": "gtxns CloseRemainderTo",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "543": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "545": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "546": {
      "error": "close_remainder_to",
      "op": "assert // close_remainder_to",
      "stack_out": []
    },
    "547": {
      "retsub": true,
      "op": "retsub"
    },
    "548": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.key",
      "params": {
        "txn#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.key",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "551": {
      "op": "b test_cases.transaction.contract.TransactionContract.key_block@0"
    },
    "554": {
      "block": "test_cases.transaction.contract.TransactionContract.key_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "556": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "559": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "561": {
      "op": "gtxns VotePK",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "563": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "564": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "565": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "566": {
      "error": "vote_key",
      "op": "assert // vote_key",
      "stack_out": []
    },
    "567": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "569": {
      "op": "gtxns SelectionPK",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "571": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "572": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "573": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "574": {
      "error": "selection_key",
      "op": "assert // selection_key",
      "stack_out": []
    },
    "575": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "577": {
      "op": "gtxns VoteKeyDilution",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "579": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "580": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "581": {
      "error": "vote_key_dilution",
      "op": "assert // vote_key_dilution",
      "stack_out": []
    },
    "582": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "584": {
      "op": "gtxns VoteFirst",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "586": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "587": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "588": {
      "error": "vote_first",
      "op": "assert // vote_first",
      "stack_out": []
    },
    "589": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "591": {
      "op": "gtxns VoteLast",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "593": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "594": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "595": {
      "error": "vote_last",
      "op": "assert // vote_last",
      "stack_out": []
    },
    "596": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "598": {
      "op": "gtxns Nonparticipation",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "600": {
      "error": "non_participation",
      "op": "assert // non_participation",
      "stack_out": []
    },
    "601": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "603": {
      "op": "gtxns StateProofPK",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "605": {
      "op": "len",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "606": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "607": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "608": {
      "error": "state_proof_key",
      "op": "assert // state_proof_key",
      "stack_out": []
    },
    "609": {
      "retsub": true,
      "op": "retsub"
    },
    "610": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_config",
      "params": {
        "txn#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.asset_config",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "613": {
      "op": "b test_cases.transaction.contract.TransactionContract.asset_config_block@0"
    },
    "616": {
      "block": "test_cases.transaction.contract.TransactionContract.asset_config_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "618": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "621": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "623": {
      "op": "gtxns ConfigAsset",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "625": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "626": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "627": {
      "error": "config_asset",
      "op": "assert // config_asset",
      "stack_out": []
    },
    "628": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "630": {
      "op": "gtxns ConfigAssetTotal",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "632": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "633": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "634": {
      "error": "total",
      "op": "assert // total",
      "stack_out": []
    },
    "635": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "637": {
      "op": "gtxns ConfigAssetDecimals",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "639": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "640": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "641": {
      "error": "decimals",
      "op": "assert // decimals",
      "stack_out": []
    },
    "642": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "644": {
      "op": "gtxns ConfigAssetDefaultFrozen",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "646": {
      "error": "default_frozen",
      "op": "assert // default_frozen",
      "stack_out": []
    },
    "647": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "649": {
      "op": "gtxns ConfigAssetUnitName",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "651": {
      "op": "len",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "652": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "653": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "654": {
      "error": "unit_name",
      "op": "assert // unit_name",
      "stack_out": []
    },
    "655": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "657": {
      "op": "gtxns ConfigAssetName",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "659": {
      "op": "len",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "660": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "661": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "662": {
      "error": "asset_name",
      "op": "assert // asset_name",
      "stack_out": []
    },
    "663": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "665": {
      "op": "gtxns ConfigAssetURL",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "667": {
      "op": "len",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "668": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "669": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "670": {
      "error": "url",
      "op": "assert // url",
      "stack_out": []
    },
    "671": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "673": {
      "op": "gtxns ConfigAssetMetadataHash",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "675": {
      "op": "len",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "676": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "677": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "678": {
      "error": "metadata_hash",
      "op": "assert // metadata_hash",
      "stack_out": []
    },
    "679": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "681": {
      "op": "gtxns ConfigAssetManager",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "683": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "685": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "686": {
      "error": "manager",
      "op": "assert // manager",
      "stack_out": []
    },
    "687": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "689": {
      "op": "gtxns ConfigAssetReserve",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "691": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "693": {
      "op": "!=",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "694": {
      "error": "reserve",
      "op": "assert // reserve",
      "stack_out": []
    },
    "695": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "697": {
      "op": "gtxns ConfigAssetFreeze",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "699": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "701": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "702": {
      "error": "freeze",
      "op": "assert // freeze",
      "stack_out": []
    },
    "703": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "705": {
      "op": "gtxns ConfigAssetClawback",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "707": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "709": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "710": {
      "error": "clawback",
      "op": "assert // clawback",
      "stack_out": []
    },
    "711": {
      "retsub": true,
      "op": "retsub"
    },
    "712": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_transfer",
      "params": {
        "txn#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.asset_transfer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "715": {
      "op": "b test_cases.transaction.contract.TransactionContract.asset_transfer_block@0"
    },
    "718": {
      "block": "test_cases.transaction.contract.TransactionContract.asset_transfer_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "720": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "723": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "725": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "727": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "728": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "729": {
      "error": "xfer_asset",
      "op": "assert // xfer_asset",
      "stack_out": []
    },
    "730": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "732": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "734": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "735": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "736": {
      "error": "asset_amount",
      "op": "assert // asset_amount",
      "stack_out": []
    },
    "737": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "739": {
      "op": "gtxns AssetSender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "741": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "743": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "744": {
      "error": "asset_sender",
      "op": "assert // asset_sender",
      "stack_out": []
    },
    "745": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "747": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "749": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "751": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "752": {
      "error": "asset_receiver",
      "op": "assert // asset_receiver",
      "stack_out": []
    },
    "753": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "755": {
      "op": "gtxns AssetCloseTo",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "757": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "759": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "760": {
      "error": "asset_close_to",
      "op": "assert // asset_close_to",
      "stack_out": []
    },
    "761": {
      "retsub": true,
      "op": "retsub"
    },
    "762": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_freeze",
      "params": {
        "txn#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.asset_freeze",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "765": {
      "op": "b test_cases.transaction.contract.TransactionContract.asset_freeze_block@0"
    },
    "768": {
      "block": "test_cases.transaction.contract.TransactionContract.asset_freeze_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "770": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "773": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "775": {
      "op": "gtxns FreezeAsset",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "777": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "778": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "779": {
      "error": "freeze_asset",
      "op": "assert // freeze_asset",
      "stack_out": []
    },
    "780": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "782": {
      "op": "gtxns FreezeAssetAccount",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "784": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "786": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "787": {
      "error": "freeze_account",
      "op": "assert // freeze_account",
      "stack_out": []
    },
    "788": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "790": {
      "op": "gtxns FreezeAssetFrozen",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "792": {
      "error": "frozen",
      "op": "assert // frozen",
      "stack_out": []
    },
    "793": {
      "retsub": true,
      "op": "retsub"
    },
    "794": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.application_call",
      "params": {
        "txn#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.application_call",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "797": {
      "op": "b test_cases.transaction.contract.TransactionContract.application_call_block@0"
    },
    "800": {
      "block": "test_cases.transaction.contract.TransactionContract.application_call_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "802": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "805": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "807": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "809": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "810": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "811": {
      "error": "app_id",
      "op": "assert // app_id",
      "stack_out": []
    },
    "812": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "814": {
      "op": "gtxns OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "817": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "818": {
      "error": "on_completion",
      "op": "assert // on_completion",
      "stack_out": []
    },
    "819": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "821": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "823": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "824": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "825": {
      "error": "num_app_args",
      "op": "assert // num_app_args",
      "stack_out": []
    },
    "826": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "828": {
      "op": "gtxns NumAccounts",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "830": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "831": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "832": {
      "error": "num_accounts",
      "op": "assert // num_accounts",
      "stack_out": []
    },
    "833": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "835": {
      "op": "gtxns ApprovalProgram",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "837": {
      "op": "len",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "838": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "839": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "840": {
      "error": "approval_program",
      "op": "assert // approval_program",
      "stack_out": []
    },
    "841": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "843": {
      "op": "gtxns ClearStateProgram",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "845": {
      "op": "len",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "846": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "847": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "848": {
      "error": "clear_state_program",
      "op": "assert // clear_state_program",
      "stack_out": []
    },
    "849": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "851": {
      "op": "gtxns NumAssets",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "853": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "854": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "855": {
      "error": "num_assets",
      "op": "assert // num_assets",
      "stack_out": []
    },
    "856": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "858": {
      "op": "gtxns NumApplications",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "860": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "861": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "862": {
      "error": "num_apps",
      "op": "assert // num_apps",
      "stack_out": []
    },
    "863": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "865": {
      "op": "gtxns GlobalNumUint",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "867": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "868": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "869": {
      "error": "global_num_uint",
      "op": "assert // global_num_uint",
      "stack_out": []
    },
    "870": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "872": {
      "op": "gtxns GlobalNumByteSlice",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "874": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%20#0",
        "0"
      ]
    },
    "875": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "876": {
      "error": "global_num_bytes",
      "op": "assert // global_num_bytes",
      "stack_out": []
    },
    "877": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "879": {
      "op": "gtxns LocalNumUint",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "881": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "882": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "883": {
      "error": "local_num_uint",
      "op": "assert // local_num_uint",
      "stack_out": []
    },
    "884": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "886": {
      "op": "gtxns LocalNumByteSlice",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "888": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%24#0",
        "0"
      ]
    },
    "889": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "890": {
      "error": "local_num_bytes",
      "op": "assert // local_num_bytes",
      "stack_out": []
    },
    "891": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "893": {
      "op": "gtxns ExtraProgramPages",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "895": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "896": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "897": {
      "error": "extra_program_pages",
      "op": "assert // extra_program_pages",
      "stack_out": []
    },
    "898": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "900": {
      "op": "gtxns LastLog",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "902": {
      "op": "len",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "903": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%29#0",
        "0"
      ]
    },
    "904": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "905": {
      "error": "last_log",
      "op": "assert // last_log",
      "stack_out": []
    },
    "906": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "908": {
      "op": "gtxns NumApprovalProgramPages",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "910": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%31#0",
        "0"
      ]
    },
    "911": {
      "op": "!=",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "912": {
      "error": "num_approval_program_pages",
      "op": "assert // num_approval_program_pages",
      "stack_out": []
    },
    "913": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "915": {
      "op": "gtxns NumClearStateProgramPages",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "917": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%33#0",
        "0"
      ]
    },
    "918": {
      "op": "!=",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "919": {
      "error": "num_clear_state_program_pages",
      "op": "assert // num_clear_state_program_pages",
      "stack_out": []
    },
    "920": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "922": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "923": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "925": {
      "op": "len",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "926": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%36#0",
        "0"
      ]
    },
    "927": {
      "op": "!=",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "928": {
      "error": "app_args(0)",
      "op": "assert // app_args(0)",
      "stack_out": []
    },
    "929": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "931": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "932": {
      "op": "gtxnsas Accounts",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "934": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "936": {
      "op": "!=",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "937": {
      "error": "accounts(0)",
      "op": "assert // accounts(0)",
      "stack_out": []
    },
    "938": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "940": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "941": {
      "op": "gtxnsas Assets",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "943": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%41#0",
        "0"
      ]
    },
    "944": {
      "op": "!=",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "945": {
      "error": "assets(0)",
      "op": "assert // assets(0)",
      "stack_out": []
    },
    "946": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "948": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "949": {
      "op": "gtxnsas Applications",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "951": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%43#0",
        "0"
      ]
    },
    "952": {
      "op": "!=",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "953": {
      "error": "apps(0)",
      "op": "assert // apps(0)",
      "stack_out": []
    },
    "954": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "956": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "957": {
      "op": "gtxnsas ApprovalProgramPages",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "959": {
      "op": "len",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "960": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%46#0",
        "0"
      ]
    },
    "961": {
      "op": "!=",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "962": {
      "error": "approval_program_pages(0)",
      "op": "assert // approval_program_pages(0)",
      "stack_out": []
    },
    "963": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "965": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "966": {
      "op": "gtxnsas ClearStateProgramPages",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "968": {
      "op": "len",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "969": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%49#0",
        "0"
      ]
    },
    "970": {
      "op": "!=",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "971": {
      "error": "clear_state_program_pages(0)",
      "op": "assert // clear_state_program_pages(0)",
      "stack_out": []
    },
    "972": {
      "retsub": true,
      "op": "retsub"
    },
    "973": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.multiple_txns",
      "params": {
        "txn1#0": "uint64",
        "txn2#0": "uint64",
        "txn3#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "976": {
      "op": "b test_cases.transaction.contract.TransactionContract.multiple_txns_block@0"
    },
    "979": {
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [],
      "stack_out": [
        "app#0"
      ]
    },
    "981": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "982": {
      "op": "b test_cases.transaction.contract.TransactionContract.multiple_txns_for_body@1"
    },
    "985": {
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns_for_body@1",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "app#0"
      ]
    },
    "987": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "tmp%0#0"
      ]
    },
    "989": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "tmp%0#0",
        "index#0"
      ]
    },
    "991": {
      "op": "==",
      "defined_out": [
        "app#0",
        "index#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "tmp%1#0"
      ]
    },
    "992": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "993": {
      "op": "b test_cases.transaction.contract.TransactionContract.multiple_txns_for_footer@2"
    },
    "996": {
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns_for_footer@2",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "index#0"
      ]
    },
    "998": {
      "op": "switch test_cases.transaction.contract.TransactionContract.multiple_txns_for_header_1@3 test_cases.transaction.contract.TransactionContract.multiple_txns_for_header_2@4",
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "1004": {
      "op": "b test_cases.transaction.contract.TransactionContract.multiple_txns_after_for@5"
    },
    "1007": {
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns_after_for@5",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1008": {
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns_for_header_2@4",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "txn3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "txn3#0 (copy)"
      ]
    },
    "1010": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "1012": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "2"
      ]
    },
    "1013": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "1015": {
      "op": "b test_cases.transaction.contract.TransactionContract.multiple_txns_for_body@1"
    },
    "1018": {
      "block": "test_cases.transaction.contract.TransactionContract.multiple_txns_for_header_1@3",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "txn2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "txn2#0 (copy)"
      ]
    },
    "1020": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "1022": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "1"
      ]
    },
    "1023": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "1025": {
      "op": "b test_cases.transaction.contract.TransactionContract.multiple_txns_for_body@1"
    },
    "1028": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.any_txn",
      "params": {
        "txn1#0": "uint64",
        "txn2#0": "uint64",
        "txn3#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.any_txn",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1031": {
      "op": "b test_cases.transaction.contract.TransactionContract.any_txn_block@0"
    },
    "1034": {
      "block": "test_cases.transaction.contract.TransactionContract.any_txn_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [],
      "stack_out": [
        "txn#0"
      ]
    },
    "1036": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1037": {
      "op": "b test_cases.transaction.contract.TransactionContract.any_txn_for_body@1"
    },
    "1040": {
      "block": "test_cases.transaction.contract.TransactionContract.any_txn_for_body@1",
      "stack_in": [
        "txn#0",
        "index#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "txn#0"
      ]
    },
    "1042": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "tmp%0#0",
        "txn#0"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "tmp%0#0"
      ]
    },
    "1044": {
      "op": "frame_dig 1",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "txn#0"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "tmp%0#0",
        "index#0"
      ]
    },
    "1046": {
      "op": "==",
      "defined_out": [
        "index#0",
        "tmp%1#0",
        "txn#0"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "tmp%1#0"
      ]
    },
    "1047": {
      "op": "assert",
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1048": {
      "op": "b test_cases.transaction.contract.TransactionContract.any_txn_for_footer@2"
    },
    "1051": {
      "block": "test_cases.transaction.contract.TransactionContract.any_txn_for_footer@2",
      "stack_in": [
        "txn#0",
        "index#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "index#0"
      ]
    },
    "1053": {
      "op": "switch test_cases.transaction.contract.TransactionContract.any_txn_for_header_1@3 test_cases.transaction.contract.TransactionContract.any_txn_for_header_2@4",
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1059": {
      "op": "b test_cases.transaction.contract.TransactionContract.any_txn_after_for@5"
    },
    "1062": {
      "block": "test_cases.transaction.contract.TransactionContract.any_txn_after_for@5",
      "stack_in": [
        "txn#0",
        "index#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1063": {
      "block": "test_cases.transaction.contract.TransactionContract.any_txn_for_header_2@4",
      "stack_in": [
        "txn#0",
        "index#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "txn3#0 (copy)"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "txn3#0 (copy)"
      ]
    },
    "1065": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1067": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "2"
      ]
    },
    "1068": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1070": {
      "op": "b test_cases.transaction.contract.TransactionContract.any_txn_for_body@1"
    },
    "1073": {
      "block": "test_cases.transaction.contract.TransactionContract.any_txn_for_header_1@3",
      "stack_in": [
        "txn#0",
        "index#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "txn2#0 (copy)"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "txn2#0 (copy)"
      ]
    },
    "1075": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1077": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "txn#0",
        "index#0",
        "1"
      ]
    },
    "1078": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "1080": {
      "op": "b test_cases.transaction.contract.TransactionContract.any_txn_for_body@1"
    },
    "1083": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.group_init",
      "params": {
        "txn1#0": "uint64",
        "txn2#0": "uint64",
        "txn3#0": "uint64"
      },
      "block": "test_cases.transaction.contract.TransactionContract.group_init",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1086": {
      "op": "b test_cases.transaction.contract.TransactionContract.group_init_block@0"
    },
    "1089": {
      "block": "test_cases.transaction.contract.TransactionContract.group_init_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1090": {
      "op": "frame_dig -3",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1092": {
      "op": "b test_cases.transaction.contract.TransactionContract.group_init_for_body@1"
    },
    "1095": {
      "block": "test_cases.transaction.contract.TransactionContract.group_init_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn#0"
      ]
    },
    "1097": {
      "op": "dup",
      "defined_out": [
        "txn#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1098": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "txn#0",
        "txn_from_index#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn#0",
        "txn_from_index#0"
      ]
    },
    "1100": {
      "op": "uncover 1",
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn_from_index#0",
        "txn#0"
      ]
    },
    "1102": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%0#0",
        "txn#0",
        "txn_from_index#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn_from_index#0",
        "tmp%0#0"
      ]
    },
    "1104": {
      "op": "cover 1",
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%0#0",
        "txn_from_index#0"
      ]
    },
    "1106": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "txn#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1108": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "txn#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%2#0"
      ]
    },
    "1109": {
      "op": "assert",
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1110": {
      "op": "b test_cases.transaction.contract.TransactionContract.group_init_for_footer@2"
    },
    "1113": {
      "block": "test_cases.transaction.contract.TransactionContract.group_init_for_footer@2",
      "stack_in": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "loop_counter%0#0"
      ]
    },
    "1115": {
      "op": "switch test_cases.transaction.contract.TransactionContract.group_init_for_header_1@3 test_cases.transaction.contract.TransactionContract.group_init_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1121": {
      "op": "b test_cases.transaction.contract.TransactionContract.group_init_after_for@5"
    },
    "1124": {
      "block": "test_cases.transaction.contract.TransactionContract.group_init_after_for@5",
      "stack_in": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "txn1#0 (copy)"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn1#0 (copy)"
      ]
    },
    "1126": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%3#0"
      ]
    },
    "1128": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1129": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1131": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "tmp%5#0"
      ]
    },
    "1132": {
      "op": "assert",
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1133": {
      "retsub": true,
      "op": "retsub"
    },
    "1134": {
      "block": "test_cases.transaction.contract.TransactionContract.group_init_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "2"
      ]
    },
    "1135": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1137": {
      "op": "frame_dig -1",
      "defined_out": [
        "txn3#0 (copy)"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn3#0 (copy)"
      ]
    },
    "1139": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1141": {
      "op": "b test_cases.transaction.contract.TransactionContract.group_init_for_body@1"
    },
    "1144": {
      "block": "test_cases.transaction.contract.TransactionContract.group_init_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "1"
      ]
    },
    "1145": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1147": {
      "op": "frame_dig -2",
      "defined_out": [
        "txn2#0 (copy)"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn2#0 (copy)"
      ]
    },
    "1149": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1151": {
      "op": "b test_cases.transaction.contract.TransactionContract.group_init_for_body@1"
    }
  }
}