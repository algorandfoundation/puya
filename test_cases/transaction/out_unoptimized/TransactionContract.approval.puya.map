{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;AAUA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAwHK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxHL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwHK;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAVA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA9GL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8GK;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAVA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApGL;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAoGK;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AA1BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1EL;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AA0EK;;;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlEL;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAkEK;;;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzDL;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAyDK;;;AAAA;;;;AAjBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxCL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwCK;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7BL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA6BK;;;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBK;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;;;AAIL;;;AAEe;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAc;;AAAd;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAY;;AAAZ;AAAP;AACO;;AAAA;;AAAmB;AAAnB;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AAEO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAgB;;AAAhB;AAAP;;AAER;;;AAEQ;;AAAA;;;AAEI;;AAAA;;AAAgB;;AAAhB;AADJ;AAGO;;AAAA;;AAAa;;;AAAb;AAAP;AACO;;AAAA;;AAA0B;;AAA1B;AAAP;;AAER;;;AAEQ;;AAAA;;;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAER;;;AAEQ;;AAAA;;;AAEO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;;AAER;;;AAEQ;;AAAA;;;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;;AAER;;;AAEQ;;AAAA;;;AAEO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAP;;AAER;;;AAEQ;;AAAA;;;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;AACO;;AAAa;AAAb;;AAAA;AAAA;AAAA;AAAP;AACO;;AAAa;AAAb;;AAAA;;AAAA;AAAP;AACO;;AAAW;AAAX;;AAAA;AAAA;AAAP;AACO;;AAAS;AAAT;;AAAA;AAAA;AAAP;AACO;;AAA2B;AAA3B;;AAAA;AAAA;AAAA;AAAP;AACO;;AAA8B;AAA9B;;AAAA;AAAA;AAAA;AAAP;;AAER;;;AAOY;;;AACO;;AAAA;;AAAA;;AAAA;AAAP;AADZ;;AAAA;;;;;;;AAAY;;AAAA;;;AAAA;;;;;AAAA;;AAAA;;;AAAA;;;;;AAGZ;;;AAOY;;;AAAA;AACO;;AAAA;;AAAA;AAAP;AADZ;;AAAA;;;;;;;AAAY;;;AAAA;;;;;AAAA;;;AAAA;;;;;AAGZ;;;;AAOY;;AACkC;AAAA;;AAC3B;AAAA;;AAAA;AAAc;;AAAd;AAAP;AAFZ;;AAAA;;;;;;AAGe;;AAAA;;AAAe;AAAA;;AAAf;AAAP;;;;;AAHI;;;;;;;;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 3"
    },
    "7": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "9": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "10": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "11": {
      "op": "bz main_bare_routing@15",
      "stack_out": []
    },
    "14": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "17": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)"
      ]
    },
    "23": {
      "op": "pushbytes 0x6b680318 // method \"pay(pay)void\"",
      "defined_out": [
        "Method(create()void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)"
      ]
    },
    "29": {
      "op": "pushbytes 0x16c4a32d // method \"key(keyreg)void\"",
      "defined_out": [
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)"
      ]
    },
    "35": {
      "op": "pushbytes 0x639872d6 // method \"asset_config(acfg)void\"",
      "defined_out": [
        "Method(asset_config(acfg)void)",
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)"
      ]
    },
    "41": {
      "op": "pushbytes 0x50f8f1c3 // method \"asset_transfer(axfer)void\"",
      "defined_out": [
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)"
      ]
    },
    "47": {
      "op": "pushbytes 0x5b3a00cf // method \"asset_freeze(afrz)void\"",
      "defined_out": [
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)"
      ]
    },
    "53": {
      "op": "pushbytes 0xcd62293d // method \"application_call(appl)void\"",
      "defined_out": [
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)"
      ]
    },
    "59": {
      "op": "pushbytes 0x02ea72e5 // method \"multiple_txns(appl,appl,appl)void\"",
      "defined_out": [
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)"
      ]
    },
    "65": {
      "op": "pushbytes 0x3056840b // method \"any_txn(txn,txn,txn)void\"",
      "defined_out": [
        "Method(any_txn(txn,txn,txn)void)",
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(create()void)",
        "Method(key(keyreg)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(any_txn(txn,txn,txn)void)"
      ]
    },
    "71": {
      "op": "pushbytes 0x96ef9a95 // method \"group_init(txn,txn,txn)void\"",
      "defined_out": [
        "Method(any_txn(txn,txn,txn)void)",
        "Method(application_call(appl)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(create()void)",
        "Method(group_init(txn,txn,txn)void)",
        "Method(key(keyreg)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(pay(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(any_txn(txn,txn,txn)void)",
        "Method(group_init(txn,txn,txn)void)"
      ]
    },
    "77": {
      "op": "uncover 10",
      "stack_out": [
        "Method(create()void)",
        "Method(pay(pay)void)",
        "Method(key(keyreg)void)",
        "Method(asset_config(acfg)void)",
        "Method(asset_transfer(axfer)void)",
        "Method(asset_freeze(afrz)void)",
        "Method(application_call(appl)void)",
        "Method(multiple_txns(appl,appl,appl)void)",
        "Method(any_txn(txn,txn,txn)void)",
        "Method(group_init(txn,txn,txn)void)",
        "tmp%2#0"
      ]
    },
    "79": {
      "op": "match main_create_route@3 main_pay_route@4 main_key_route@5 main_asset_config_route@6 main_asset_transfer_route@7 main_asset_freeze_route@8 main_application_call_route@9 main_multiple_txns_route@10 main_any_txn_route@11 main_group_init_route@12",
      "stack_out": []
    },
    "101": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "block": "main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "103": {
      "block": "main_group_init_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "105": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "NoOp"
      ]
    },
    "106": {
      "op": "==",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "107": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "108": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "110": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "0"
      ]
    },
    "111": {
      "op": "!=",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "112": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "113": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "115": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "3"
      ]
    },
    "116": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%12#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0"
      ]
    },
    "117": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%12#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "tmp%56#0"
      ]
    },
    "119": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%12#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "tmp%56#0",
        "2"
      ]
    },
    "120": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0"
      ]
    },
    "121": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "tmp%57#0"
      ]
    },
    "123": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "tmp%57#0",
        "1"
      ]
    },
    "124": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "gtxn_idx%14#0"
      ],
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "gtxn_idx%14#0"
      ]
    },
    "125": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%13#0",
        "gtxn_idx%14#0",
        "gtxn_idx%12#0"
      ]
    },
    "127": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%14#0",
        "gtxn_idx%12#0",
        "gtxn_idx%13#0"
      ]
    },
    "129": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%12#0",
        "gtxn_idx%13#0",
        "gtxn_idx%14#0"
      ]
    },
    "131": {
      "callsub": "test_cases.transaction.contract.TransactionContract.group_init",
      "op": "callsub group_init",
      "stack_out": []
    },
    "134": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "135": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "138": {
      "block": "main_any_txn_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "140": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "NoOp"
      ]
    },
    "141": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "142": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "143": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "0"
      ]
    },
    "146": {
      "op": "!=",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "147": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "148": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "150": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "3"
      ]
    },
    "151": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0"
      ]
    },
    "152": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%9#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%49#0"
      ]
    },
    "154": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%9#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "tmp%49#0",
        "2"
      ]
    },
    "155": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%10#0"
      ]
    },
    "156": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%9#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%10#0",
        "tmp%50#0"
      ]
    },
    "158": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%10#0",
        "gtxn_idx%9#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%10#0",
        "tmp%50#0",
        "1"
      ]
    },
    "159": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%11#0",
        "gtxn_idx%9#0"
      ],
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%10#0",
        "gtxn_idx%11#0"
      ]
    },
    "160": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%10#0",
        "gtxn_idx%11#0",
        "gtxn_idx%9#0"
      ]
    },
    "162": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%11#0",
        "gtxn_idx%9#0",
        "gtxn_idx%10#0"
      ]
    },
    "164": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%9#0",
        "gtxn_idx%10#0",
        "gtxn_idx%11#0"
      ]
    },
    "166": {
      "callsub": "test_cases.transaction.contract.TransactionContract.any_txn",
      "op": "callsub any_txn",
      "stack_out": []
    },
    "169": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "170": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "173": {
      "block": "main_multiple_txns_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "175": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "NoOp"
      ]
    },
    "176": {
      "op": "==",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "177": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "178": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "180": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "0"
      ]
    },
    "181": {
      "op": "!=",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "182": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "183": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "185": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "3"
      ]
    },
    "186": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "187": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "188": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "190": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "appl"
      ]
    },
    "192": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "193": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%6#0"
      ]
    },
    "194": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%42#0"
      ]
    },
    "196": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%6#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "tmp%42#0",
        "2"
      ]
    },
    "197": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0"
      ]
    },
    "198": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "199": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "201": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "appl"
      ]
    },
    "203": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "204": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0"
      ]
    },
    "205": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "tmp%43#0"
      ]
    },
    "207": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "tmp%43#0",
        "1"
      ]
    },
    "208": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0"
      ]
    },
    "209": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_idx%8#0 (copy)"
      ]
    },
    "210": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0"
      ]
    },
    "212": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type%8#0",
        "appl"
      ]
    },
    "214": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0"
      ],
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_type_matches%8#0"
      ]
    },
    "215": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0"
      ]
    },
    "216": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "gtxn_idx%6#0"
      ]
    },
    "218": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%8#0",
        "gtxn_idx%6#0",
        "gtxn_idx%7#0"
      ]
    },
    "220": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0"
      ]
    },
    "222": {
      "callsub": "test_cases.transaction.contract.TransactionContract.multiple_txns",
      "op": "callsub multiple_txns",
      "stack_out": []
    },
    "225": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "226": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "229": {
      "block": "main_application_call_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "231": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "NoOp"
      ]
    },
    "232": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "233": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "234": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "236": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "0"
      ]
    },
    "237": {
      "op": "!=",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "238": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "239": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "241": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "1"
      ]
    },
    "242": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "243": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "244": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "246": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "appl"
      ]
    },
    "248": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ],
      "stack_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "249": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%5#0"
      ]
    },
    "250": {
      "callsub": "test_cases.transaction.contract.TransactionContract.application_call",
      "op": "callsub application_call",
      "stack_out": []
    },
    "253": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "254": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "257": {
      "block": "main_asset_freeze_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "259": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "NoOp"
      ]
    },
    "260": {
      "op": "==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "261": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "262": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "264": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0"
      ]
    },
    "265": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "266": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "267": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "269": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "1"
      ]
    },
    "270": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "271": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "272": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "274": {
      "op": "pushint 5 // afrz",
      "defined_out": [
        "afrz",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "afrz"
      ]
    },
    "276": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "277": {
      "error": "transaction type is afrz",
      "op": "assert // transaction type is afrz",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "278": {
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_freeze",
      "op": "callsub asset_freeze",
      "stack_out": []
    },
    "281": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "282": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "285": {
      "block": "main_asset_transfer_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "287": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "NoOp"
      ]
    },
    "288": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "289": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "290": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "292": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "0"
      ]
    },
    "293": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "294": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "295": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "297": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "1"
      ]
    },
    "298": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "299": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "300": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "302": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "304": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "305": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "306": {
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_transfer",
      "op": "callsub asset_transfer",
      "stack_out": []
    },
    "309": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "310": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "313": {
      "block": "main_asset_config_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "315": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "NoOp"
      ]
    },
    "316": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "317": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "318": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "320": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "321": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "322": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "323": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "325": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "1"
      ]
    },
    "326": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "327": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "328": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "330": {
      "op": "intc_3 // acfg",
      "defined_out": [
        "acfg",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "acfg"
      ]
    },
    "331": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "332": {
      "error": "transaction type is acfg",
      "op": "assert // transaction type is acfg",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "333": {
      "callsub": "test_cases.transaction.contract.TransactionContract.asset_config",
      "op": "callsub asset_config",
      "stack_out": []
    },
    "336": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "337": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "340": {
      "block": "main_key_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "342": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "NoOp"
      ]
    },
    "343": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "344": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "345": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "348": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "349": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "350": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "352": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "1"
      ]
    },
    "353": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "354": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "355": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "357": {
      "op": "intc_2 // keyreg",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "keyreg"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "keyreg"
      ]
    },
    "358": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "359": {
      "error": "transaction type is keyreg",
      "op": "assert // transaction type is keyreg",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "360": {
      "callsub": "test_cases.transaction.contract.TransactionContract.key",
      "op": "callsub key",
      "stack_out": []
    },
    "363": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "364": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "367": {
      "block": "main_pay_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "369": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "370": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "371": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "372": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "374": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "375": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "376": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "377": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "379": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "1"
      ]
    },
    "380": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "381": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "382": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "384": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "385": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "386": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "387": {
      "callsub": "test_cases.transaction.contract.TransactionContract.pay",
      "op": "callsub pay",
      "stack_out": []
    },
    "390": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "391": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "394": {
      "block": "main_create_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "396": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "397": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "398": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "399": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "401": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "402": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "403": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "404": {
      "callsub": "test_cases.transaction.contract.TransactionContract.create",
      "op": "callsub create"
    },
    "407": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "408": {
      "op": "b main_after_inlined_test_cases.transaction.contract.TransactionContract.__puya_arc4_router__@17"
    },
    "411": {
      "block": "main_bare_routing@15",
      "stack_in": [],
      "op": "b main_after_if_else@16"
    },
    "414": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.create",
      "params": {},
      "block": "create_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "415": {
      "subroutine": "test_cases.transaction.contract.TransactionContract._common_checks",
      "params": {
        "txn#0": "uint64"
      },
      "block": "_common_checks",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "418": {
      "block": "_common_checks_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "420": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "422": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "423": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "424": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "425": {
      "error": "txn_id",
      "op": "assert // txn_id",
      "stack_out": []
    },
    "426": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "428": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "430": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "432": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "433": {
      "error": "sender",
      "op": "assert // sender",
      "stack_out": []
    },
    "434": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "436": {
      "op": "gtxns Fee",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "439": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "440": {
      "error": "fee",
      "op": "assert // fee",
      "stack_out": []
    },
    "441": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "443": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "445": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "446": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "447": {
      "error": "type",
      "op": "assert // type",
      "stack_out": []
    },
    "448": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "450": {
      "op": "gtxns Type",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "452": {
      "op": "len",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "454": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "455": {
      "error": "type_bytes",
      "op": "assert // type_bytes",
      "stack_out": []
    },
    "456": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "458": {
      "op": "gtxns Note",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "460": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0x"
      ]
    },
    "462": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "463": {
      "error": "note",
      "op": "assert // note",
      "stack_out": []
    },
    "464": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "466": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "468": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "469": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "470": {
      "error": "group_index",
      "op": "assert // group_index",
      "stack_out": []
    },
    "471": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "473": {
      "op": "gtxns FirstValid",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "475": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "476": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "477": {
      "error": "first_valid",
      "op": "assert // first_valid",
      "stack_out": []
    },
    "478": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "480": {
      "op": "gtxns LastValid",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "482": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "483": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "484": {
      "error": "last_valid",
      "op": "assert // last_valid",
      "stack_out": []
    },
    "485": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "487": {
      "op": "gtxns Lease",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "489": {
      "op": "len",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "490": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "491": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "492": {
      "error": "lease",
      "op": "assert // lease",
      "stack_out": []
    },
    "493": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "495": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "497": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "499": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "500": {
      "error": "rekey_to",
      "op": "assert // rekey_to",
      "stack_out": []
    },
    "501": {
      "retsub": true,
      "op": "retsub"
    },
    "502": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.pay",
      "params": {
        "txn#0": "uint64"
      },
      "block": "pay",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "505": {
      "block": "pay_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "507": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "510": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "512": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "514": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "516": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "517": {
      "error": "Payment should be for this app",
      "op": "assert // Payment should be for this app",
      "stack_out": []
    },
    "518": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "520": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "522": {
      "op": "pushint 1000 // 1000",
      "defined_out": [
        "1000",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "1000"
      ]
    },
    "525": {
      "op": ">",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "526": {
      "error": "Payment should be for >1000 micro algos",
      "op": "assert // Payment should be for >1000 micro algos",
      "stack_out": []
    },
    "527": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "529": {
      "op": "gtxns CloseRemainderTo",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "531": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "533": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "534": {
      "error": "close_remainder_to",
      "op": "assert // close_remainder_to",
      "stack_out": []
    },
    "535": {
      "retsub": true,
      "op": "retsub"
    },
    "536": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.key",
      "params": {
        "txn#0": "uint64"
      },
      "block": "key",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "539": {
      "block": "key_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "541": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "544": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "546": {
      "op": "gtxns VotePK",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "548": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "549": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "550": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "551": {
      "error": "vote_key",
      "op": "assert // vote_key",
      "stack_out": []
    },
    "552": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "554": {
      "op": "gtxns SelectionPK",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "556": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "557": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "558": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "559": {
      "error": "selection_key",
      "op": "assert // selection_key",
      "stack_out": []
    },
    "560": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "562": {
      "op": "gtxns VoteKeyDilution",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "564": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "565": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "566": {
      "error": "vote_key_dilution",
      "op": "assert // vote_key_dilution",
      "stack_out": []
    },
    "567": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "569": {
      "op": "gtxns VoteFirst",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "571": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "572": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "573": {
      "error": "vote_first",
      "op": "assert // vote_first",
      "stack_out": []
    },
    "574": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "576": {
      "op": "gtxns VoteLast",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "579": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "580": {
      "error": "vote_last",
      "op": "assert // vote_last",
      "stack_out": []
    },
    "581": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "583": {
      "op": "gtxns Nonparticipation",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "585": {
      "error": "non_participation",
      "op": "assert // non_participation",
      "stack_out": []
    },
    "586": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "588": {
      "op": "gtxns StateProofPK",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "590": {
      "op": "len",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "591": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "592": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "593": {
      "error": "state_proof_key",
      "op": "assert // state_proof_key",
      "stack_out": []
    },
    "594": {
      "retsub": true,
      "op": "retsub"
    },
    "595": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_config",
      "params": {
        "txn#0": "uint64"
      },
      "block": "asset_config",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "598": {
      "block": "asset_config_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "600": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "603": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "605": {
      "op": "gtxns ConfigAsset",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "607": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "608": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "609": {
      "error": "config_asset",
      "op": "assert // config_asset",
      "stack_out": []
    },
    "610": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "612": {
      "op": "gtxns ConfigAssetTotal",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "614": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "615": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "616": {
      "error": "total",
      "op": "assert // total",
      "stack_out": []
    },
    "617": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "619": {
      "op": "gtxns ConfigAssetDecimals",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "621": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "622": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "623": {
      "error": "decimals",
      "op": "assert // decimals",
      "stack_out": []
    },
    "624": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "626": {
      "op": "gtxns ConfigAssetDefaultFrozen",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "628": {
      "error": "default_frozen",
      "op": "assert // default_frozen",
      "stack_out": []
    },
    "629": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "631": {
      "op": "gtxns ConfigAssetUnitName",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "633": {
      "op": "len",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "634": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "635": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "636": {
      "error": "unit_name",
      "op": "assert // unit_name",
      "stack_out": []
    },
    "637": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "639": {
      "op": "gtxns ConfigAssetName",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "641": {
      "op": "len",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "642": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "643": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "644": {
      "error": "asset_name",
      "op": "assert // asset_name",
      "stack_out": []
    },
    "645": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "647": {
      "op": "gtxns ConfigAssetURL",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "649": {
      "op": "len",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "650": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "651": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "652": {
      "error": "url",
      "op": "assert // url",
      "stack_out": []
    },
    "653": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "655": {
      "op": "gtxns ConfigAssetMetadataHash",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "657": {
      "op": "len",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "658": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "659": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "660": {
      "error": "metadata_hash",
      "op": "assert // metadata_hash",
      "stack_out": []
    },
    "661": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "663": {
      "op": "gtxns ConfigAssetManager",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "665": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "667": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "668": {
      "error": "manager",
      "op": "assert // manager",
      "stack_out": []
    },
    "669": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "671": {
      "op": "gtxns ConfigAssetReserve",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "673": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "675": {
      "op": "!=",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "676": {
      "error": "reserve",
      "op": "assert // reserve",
      "stack_out": []
    },
    "677": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "679": {
      "op": "gtxns ConfigAssetFreeze",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "681": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "683": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "684": {
      "error": "freeze",
      "op": "assert // freeze",
      "stack_out": []
    },
    "685": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "687": {
      "op": "gtxns ConfigAssetClawback",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "689": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "691": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "692": {
      "error": "clawback",
      "op": "assert // clawback",
      "stack_out": []
    },
    "693": {
      "retsub": true,
      "op": "retsub"
    },
    "694": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_transfer",
      "params": {
        "txn#0": "uint64"
      },
      "block": "asset_transfer",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "697": {
      "block": "asset_transfer_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "699": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "702": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "704": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "706": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "707": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "708": {
      "error": "xfer_asset",
      "op": "assert // xfer_asset",
      "stack_out": []
    },
    "709": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "711": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "713": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "714": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "715": {
      "error": "asset_amount",
      "op": "assert // asset_amount",
      "stack_out": []
    },
    "716": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "718": {
      "op": "gtxns AssetSender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "720": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "722": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "723": {
      "error": "asset_sender",
      "op": "assert // asset_sender",
      "stack_out": []
    },
    "724": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "726": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "728": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "730": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "731": {
      "error": "asset_receiver",
      "op": "assert // asset_receiver",
      "stack_out": []
    },
    "732": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "734": {
      "op": "gtxns AssetCloseTo",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "736": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "738": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "739": {
      "error": "asset_close_to",
      "op": "assert // asset_close_to",
      "stack_out": []
    },
    "740": {
      "retsub": true,
      "op": "retsub"
    },
    "741": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.asset_freeze",
      "params": {
        "txn#0": "uint64"
      },
      "block": "asset_freeze",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "744": {
      "block": "asset_freeze_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "746": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "749": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "751": {
      "op": "gtxns FreezeAsset",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "753": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "754": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "755": {
      "error": "freeze_asset",
      "op": "assert // freeze_asset",
      "stack_out": []
    },
    "756": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "758": {
      "op": "gtxns FreezeAssetAccount",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "760": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "762": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "763": {
      "error": "freeze_account",
      "op": "assert // freeze_account",
      "stack_out": []
    },
    "764": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "766": {
      "op": "gtxns FreezeAssetFrozen",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "768": {
      "error": "frozen",
      "op": "assert // frozen",
      "stack_out": []
    },
    "769": {
      "retsub": true,
      "op": "retsub"
    },
    "770": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.application_call",
      "params": {
        "txn#0": "uint64"
      },
      "block": "application_call",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "773": {
      "block": "application_call_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "775": {
      "callsub": "test_cases.transaction.contract.TransactionContract._common_checks",
      "op": "callsub _common_checks",
      "stack_out": []
    },
    "778": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "780": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "782": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "783": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "784": {
      "error": "app_id",
      "op": "assert // app_id",
      "stack_out": []
    },
    "785": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "787": {
      "op": "gtxns OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "789": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "790": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "791": {
      "error": "on_completion",
      "op": "assert // on_completion",
      "stack_out": []
    },
    "792": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "794": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "796": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "797": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "798": {
      "error": "num_app_args",
      "op": "assert // num_app_args",
      "stack_out": []
    },
    "799": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "801": {
      "op": "gtxns NumAccounts",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "803": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "804": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "805": {
      "error": "num_accounts",
      "op": "assert // num_accounts",
      "stack_out": []
    },
    "806": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "808": {
      "op": "gtxns ApprovalProgram",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "810": {
      "op": "len",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "811": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "812": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "813": {
      "error": "approval_program",
      "op": "assert // approval_program",
      "stack_out": []
    },
    "814": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "816": {
      "op": "gtxns ClearStateProgram",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "818": {
      "op": "len",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "819": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "820": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "821": {
      "error": "clear_state_program",
      "op": "assert // clear_state_program",
      "stack_out": []
    },
    "822": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "824": {
      "op": "gtxns NumAssets",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "826": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "827": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "828": {
      "error": "num_assets",
      "op": "assert // num_assets",
      "stack_out": []
    },
    "829": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "831": {
      "op": "gtxns NumApplications",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "833": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "834": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "835": {
      "error": "num_apps",
      "op": "assert // num_apps",
      "stack_out": []
    },
    "836": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "838": {
      "op": "gtxns GlobalNumUint",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "840": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "841": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "842": {
      "error": "global_num_uint",
      "op": "assert // global_num_uint",
      "stack_out": []
    },
    "843": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "845": {
      "op": "gtxns GlobalNumByteSlice",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "847": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%20#0",
        "0"
      ]
    },
    "848": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "849": {
      "error": "global_num_bytes",
      "op": "assert // global_num_bytes",
      "stack_out": []
    },
    "850": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "852": {
      "op": "gtxns LocalNumUint",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "854": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "855": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "856": {
      "error": "local_num_uint",
      "op": "assert // local_num_uint",
      "stack_out": []
    },
    "857": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "859": {
      "op": "gtxns LocalNumByteSlice",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "861": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%24#0",
        "0"
      ]
    },
    "862": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "863": {
      "error": "local_num_bytes",
      "op": "assert // local_num_bytes",
      "stack_out": []
    },
    "864": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "866": {
      "op": "gtxns ExtraProgramPages",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "869": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "870": {
      "error": "extra_program_pages",
      "op": "assert // extra_program_pages",
      "stack_out": []
    },
    "871": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "873": {
      "op": "gtxns LastLog",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "875": {
      "op": "len",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "876": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%29#0",
        "0"
      ]
    },
    "877": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "878": {
      "error": "last_log",
      "op": "assert // last_log",
      "stack_out": []
    },
    "879": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "881": {
      "op": "gtxns NumApprovalProgramPages",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "883": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%31#0",
        "0"
      ]
    },
    "884": {
      "op": "!=",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "885": {
      "error": "num_approval_program_pages",
      "op": "assert // num_approval_program_pages",
      "stack_out": []
    },
    "886": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "888": {
      "op": "gtxns NumClearStateProgramPages",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "890": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%33#0",
        "0"
      ]
    },
    "891": {
      "op": "!=",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "892": {
      "error": "num_clear_state_program_pages",
      "op": "assert // num_clear_state_program_pages",
      "stack_out": []
    },
    "893": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "895": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "896": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "898": {
      "op": "len",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "899": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%36#0",
        "0"
      ]
    },
    "900": {
      "op": "!=",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "901": {
      "error": "app_args(0)",
      "op": "assert // app_args(0)",
      "stack_out": []
    },
    "902": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "904": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "905": {
      "op": "gtxnsas Accounts",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "907": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "909": {
      "op": "!=",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "910": {
      "error": "accounts(0)",
      "op": "assert // accounts(0)",
      "stack_out": []
    },
    "911": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "913": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "914": {
      "op": "gtxnsas Assets",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "916": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%41#0",
        "0"
      ]
    },
    "917": {
      "op": "!=",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "918": {
      "error": "assets(0)",
      "op": "assert // assets(0)",
      "stack_out": []
    },
    "919": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "921": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "922": {
      "op": "gtxnsas Applications",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "924": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%43#0",
        "0"
      ]
    },
    "925": {
      "op": "!=",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "926": {
      "error": "apps(0)",
      "op": "assert // apps(0)",
      "stack_out": []
    },
    "927": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "929": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "930": {
      "op": "gtxnsas ApprovalProgramPages",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "932": {
      "op": "len",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "933": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%46#0",
        "0"
      ]
    },
    "934": {
      "op": "!=",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "935": {
      "error": "approval_program_pages(0)",
      "op": "assert // approval_program_pages(0)",
      "stack_out": []
    },
    "936": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "938": {
      "op": "intc_0 // 0",
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "939": {
      "op": "gtxnsas ClearStateProgramPages",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "941": {
      "op": "len",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "942": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%49#0",
        "0"
      ]
    },
    "943": {
      "op": "!=",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "944": {
      "error": "clear_state_program_pages(0)",
      "op": "assert // clear_state_program_pages(0)",
      "stack_out": []
    },
    "945": {
      "retsub": true,
      "op": "retsub"
    },
    "946": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.multiple_txns",
      "params": {
        "txn1#0": "uint64",
        "txn2#0": "uint64",
        "txn3#0": "uint64"
      },
      "block": "multiple_txns",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "949": {
      "block": "multiple_txns_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "951": {
      "op": "intc_0 // 0",
      "defined_out": [
        "app#0",
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "952": {
      "block": "multiple_txns_for_body@1",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "app#0"
      ]
    },
    "954": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "tmp%0#0"
      ]
    },
    "956": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "tmp%0#0",
        "index#0"
      ]
    },
    "958": {
      "op": "==",
      "defined_out": [
        "app#0",
        "index#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "tmp%1#0"
      ]
    },
    "959": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "960": {
      "block": "multiple_txns_for_footer@2",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "index#0"
      ]
    },
    "962": {
      "op": "switch multiple_txns_for_header_1@3 multiple_txns_for_header_2@4",
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "968": {
      "block": "multiple_txns_after_for@5",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "969": {
      "block": "multiple_txns_for_header_2@4",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "app#0"
      ]
    },
    "971": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "973": {
      "op": "intc_2 // 2",
      "defined_out": [
        "app#0",
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "index#0"
      ]
    },
    "974": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0",
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "976": {
      "op": "b multiple_txns_for_body@1"
    },
    "979": {
      "block": "multiple_txns_for_header_1@3",
      "stack_in": [
        "app#0",
        "index#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "app#0"
      ]
    },
    "981": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "983": {
      "op": "intc_1 // 1",
      "defined_out": [
        "app#0",
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0",
        "index#0"
      ]
    },
    "984": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0",
        "index#0"
      ],
      "stack_out": [
        "app#0",
        "index#0"
      ]
    },
    "986": {
      "op": "b multiple_txns_for_body@1"
    },
    "989": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.any_txn",
      "params": {
        "txn1#0": "uint64",
        "txn2#0": "uint64",
        "txn3#0": "uint64"
      },
      "block": "any_txn",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "992": {
      "block": "any_txn_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "txn#0"
      ]
    },
    "994": {
      "op": "intc_0 // 0",
      "defined_out": [
        "index#0",
        "txn#0"
      ],
      "stack_out": [
        "txn#0",
        "index#0"
      ]
    },
    "995": {
      "op": "swap",
      "defined_out": [
        "index#0",
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0"
      ]
    },
    "996": {
      "block": "any_txn_for_body@1",
      "stack_in": [
        "index#0",
        "txn#0"
      ],
      "op": "gtxns GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "index#0",
        "tmp%0#0"
      ]
    },
    "998": {
      "op": "frame_dig 0",
      "defined_out": [
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "index#0",
        "tmp%0#0",
        "index#0"
      ]
    },
    "1000": {
      "op": "==",
      "defined_out": [
        "index#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "index#0",
        "tmp%1#0"
      ]
    },
    "1001": {
      "op": "assert",
      "stack_out": [
        "index#0"
      ]
    },
    "1002": {
      "block": "any_txn_for_footer@2",
      "stack_in": [
        "index#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "index#0",
        "index#0"
      ]
    },
    "1004": {
      "op": "switch any_txn_for_header_1@3 any_txn_for_header_2@4",
      "stack_out": [
        "index#0"
      ]
    },
    "1010": {
      "block": "any_txn_after_for@5",
      "stack_in": [
        "index#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1011": {
      "block": "any_txn_for_header_2@4",
      "stack_in": [
        "index#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0"
      ]
    },
    "1013": {
      "op": "intc_2 // 2",
      "defined_out": [
        "index#0",
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0",
        "index#0"
      ]
    },
    "1014": {
      "op": "frame_bury 0",
      "defined_out": [
        "index#0",
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0"
      ]
    },
    "1016": {
      "op": "b any_txn_for_body@1"
    },
    "1019": {
      "block": "any_txn_for_header_1@3",
      "stack_in": [
        "index#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0"
      ]
    },
    "1021": {
      "op": "intc_1 // 1",
      "defined_out": [
        "index#0",
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0",
        "index#0"
      ]
    },
    "1022": {
      "op": "frame_bury 0",
      "defined_out": [
        "index#0",
        "txn#0"
      ],
      "stack_out": [
        "index#0",
        "txn#0"
      ]
    },
    "1024": {
      "op": "b any_txn_for_body@1"
    },
    "1027": {
      "subroutine": "test_cases.transaction.contract.TransactionContract.group_init",
      "params": {
        "txn1#0": "uint64",
        "txn2#0": "uint64",
        "txn3#0": "uint64"
      },
      "block": "group_init",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1030": {
      "block": "group_init_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1031": {
      "op": "frame_dig -3",
      "defined_out": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1033": {
      "block": "group_init_for_body@1",
      "stack_in": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "op": "dup",
      "defined_out": [
        "txn#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1034": {
      "op": "gtxns GroupIndex",
      "defined_out": [
        "txn#0",
        "txn_from_index#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0",
        "txn_from_index#0"
      ]
    },
    "1036": {
      "op": "swap",
      "stack_out": [
        "loop_counter%0#0",
        "txn_from_index#0",
        "txn#0"
      ]
    },
    "1037": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%0#0",
        "txn_from_index#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn_from_index#0",
        "tmp%0#0"
      ]
    },
    "1039": {
      "op": "swap",
      "stack_out": [
        "loop_counter%0#0",
        "tmp%0#0",
        "txn_from_index#0"
      ]
    },
    "1040": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1042": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "tmp%2#0"
      ]
    },
    "1043": {
      "op": "assert",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1044": {
      "block": "group_init_for_footer@2",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "1046": {
      "op": "switch group_init_for_header_1@3 group_init_for_header_2@4",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1052": {
      "block": "group_init_after_for@5",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "txn1#0 (copy)"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn1#0 (copy)"
      ]
    },
    "1054": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "tmp%3#0"
      ]
    },
    "1056": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1057": {
      "op": "gtxns TxID",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1059": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "tmp%5#0"
      ]
    },
    "1060": {
      "op": "assert",
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1061": {
      "retsub": true,
      "op": "retsub"
    },
    "1062": {
      "block": "group_init_for_header_2@4",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "1063": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1065": {
      "op": "frame_dig -1",
      "defined_out": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1067": {
      "op": "b group_init_for_body@1"
    },
    "1070": {
      "block": "group_init_for_header_1@3",
      "stack_in": [
        "loop_counter%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "1071": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "loop_counter%0#0"
      ]
    },
    "1073": {
      "op": "frame_dig -2",
      "defined_out": [
        "loop_counter%0#0",
        "txn#0"
      ],
      "stack_out": [
        "loop_counter%0#0",
        "txn#0"
      ]
    },
    "1075": {
      "op": "b group_init_for_body@1"
    }
  }
}