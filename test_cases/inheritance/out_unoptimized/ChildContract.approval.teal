#pragma version 10

test_cases.inheritance.child.ChildContract.approval_program:
    // inheritance/grandparent.py:6
    // return self.method()
    callsub method
    return


// test_cases.inheritance.child.ChildContract.method() -> uint64:
method:
    // inheritance/child.py:8-9
    // @algopy.subroutine
    // def method(self) -> bool:
    proto 0 1
    // inheritance/child.py:10
    // algopy.log("ChildContract.method called")
    pushbytes "ChildContract.method called"
    log
    // inheritance/child.py:11
    // return GrandParentContract.method(self)
    callsub test_cases.inheritance.grandparent.GreatGrandParentContract.method
    retsub


// test_cases.inheritance.grandparent.GreatGrandParentContract.method() -> uint64:
test_cases.inheritance.grandparent.GreatGrandParentContract.method:
    // inheritance/grandparent.py:11-12
    // @algopy.subroutine
    // def method(self) -> bool:
    proto 0 1
    // inheritance/grandparent.py:13
    // algopy.log("GrandParentContract.method called")
    pushbytes "GrandParentContract.method called"
    log
    // inheritance/grandparent.py:14
    // return True
    pushint 1 // 1
    retsub
