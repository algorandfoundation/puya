// Op                                                                          Stack (out)
// test_cases.inheritance.child.ChildContract.approval_program() -> uint64:
main_block@0:
    // inheritance/grandparent.py:6
    // return self.method()
    callsub method                                                             tmp%0#0
    return


// test_cases.inheritance.child.ChildContract.method() -> uint64:
method:
    // inheritance/child.py:8-9
    // @algopy.subroutine
    // def method(self) -> bool:
    proto 0 1

method_block@0:
    // inheritance/child.py:10
    // algopy.log("ChildContract.method called")
    byte "ChildContract.method called"                                         "ChildContract.method called"
    log
    // inheritance/child.py:11
    // return GrandParentContract.method(self)
    callsub test_cases.inheritance.grandparent.GreatGrandParentContract.method tmp%0#0
    retsub                                                                     tmp%0#0


// test_cases.inheritance.grandparent.GreatGrandParentContract.method() -> uint64:
test_cases.inheritance.grandparent.GreatGrandParentContract.method:
    // inheritance/grandparent.py:11-12
    // @algopy.subroutine
    // def method(self) -> bool:
    proto 0 1

test_cases.inheritance.grandparent.GreatGrandParentContract.method_block@0:
    // inheritance/grandparent.py:13
    // algopy.log("GrandParentContract.method called")
    byte "GrandParentContract.method called"                                   "GrandParentContract.method called"
    log
    // inheritance/grandparent.py:14
    // return True
    int 1                                                                      1
    retsub                                                                     1


