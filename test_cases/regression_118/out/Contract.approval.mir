// Op                                              //                                                            Op Description                                   Stack (out)                                         Live (out)    X stack                                 Source code                                                                         Source line

#pragma version 10

// test_cases.regression_118.contract.Contract.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                 //                                                                                                             {txn}                                                                                                     class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store tmp%0#0 to l-stack (no copy)                   tmp%0#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    //                                             virtual: load tmp%0#0 from l-stack (no copy)                  tmp%0#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    bz main_bare_routing@5                         //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    // Implicit fall through to main_abi_routing@1 //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5

main_abi_routing@1:
    txna ApplicationArgs 0                         //                                                                                                             {txna}                                                                                                    class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store tmp%1#0 to l-stack (no copy)                   tmp%1#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    method "verify(uint256[])(bool,string)"        //                                                                                                             tmp%1#0,method<"verify(uint256[])(bool,string)">                                                          class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    swap                                           //                                                            load tmp%1#0 from l-stack (no copy)              method<"verify(uint256[])(bool,string)">,tmp%1#0                                                          class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    match main_verify_route@2                      //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    err // reject transaction                      //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5

main_verify_route@2:
    txn OnCompletion                               //                                                                                                             {txn}                                                                                                     abimethod                                                                           regression_118/contract.py:6
    //                                             virtual: store tmp%2#0 to l-stack (no copy)                   tmp%2#0                                                                                                            abimethod                               regression_118/contract.py:6
    //                                             virtual: load tmp%2#0 from l-stack (no copy)                  tmp%2#0                                                                                                            abimethod                               regression_118/contract.py:6
    !                                              //                                                                                                             {!}                                                                                                       abimethod                                                                           regression_118/contract.py:6
    //                                             virtual: store tmp%3#0 to l-stack (no copy)                   tmp%3#0                                                                                                            abimethod                               regression_118/contract.py:6
    //                                             virtual: load tmp%3#0 from l-stack (no copy)                  tmp%3#0                                                                                                            abimethod                               regression_118/contract.py:6
    assert // OnCompletion is NoOp                 //                                                                                                                                                                                                                       abimethod                                                                           regression_118/contract.py:6
    txn ApplicationID                              //                                                                                                             {txn}                                                                                                     abimethod                                                                           regression_118/contract.py:6
    //                                             virtual: store tmp%4#0 to l-stack (no copy)                   tmp%4#0                                                                                                            abimethod                               regression_118/contract.py:6
    //                                             virtual: load tmp%4#0 from l-stack (no copy)                  tmp%4#0                                                                                                            abimethod                               regression_118/contract.py:6
    assert // is not creating                      //                                                                                                                                                                                                                       abimethod                                                                           regression_118/contract.py:6
    txna ApplicationArgs 1                         //                                                                                                             {txna}                                                                                                    class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store tmp%5#0 to l-stack (no copy)                   tmp%5#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    //                                             virtual: load tmp%5#0 from l-stack (no copy)                  tmp%5#0                                                                                                            abimethod                               regression_118/contract.py:6
    callsub verify                                 //                                                                                                             {verify}                                                                                                  abimethod                                                                           regression_118/contract.py:6
    //                                             virtual: store tmp%6#0 to l-stack (no copy)                   tmp%6#0                                                                                                            abimethod                               regression_118/contract.py:6
    byte 0x151f7c75                                //                                                                                                             tmp%6#0,0x151f7c75                                                                                        abimethod                                                                           regression_118/contract.py:6
    swap                                           //                                                            load tmp%6#0 from l-stack (no copy)              0x151f7c75,tmp%6#0                                                                                        abimethod                                                                           regression_118/contract.py:6
    concat                                         //                                                                                                             {concat}                                                                                                  abimethod                                                                           regression_118/contract.py:6
    //                                             virtual: store tmp%7#0 to l-stack (no copy)                   tmp%7#0                                                                                                            abimethod                               regression_118/contract.py:6
    //                                             virtual: load tmp%7#0 from l-stack (no copy)                  tmp%7#0                                                                                                            abimethod                               regression_118/contract.py:6
    log                                            //                                                                                                                                                                                                                       abimethod                                                                           regression_118/contract.py:6
    int 1                                          //                                                                                                             1                                                                                                         abimethod                                                                           regression_118/contract.py:6
    return                                         //                                                                                                                                                                                                                       abimethod                                                                           regression_118/contract.py:6

main_bare_routing@5:
    txn OnCompletion                               //                                                                                                             {txn}                                                                                                     class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store tmp%8#0 to l-stack (no copy)                   tmp%8#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    //                                             virtual: load tmp%8#0 from l-stack (no copy)                  tmp%8#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    !                                              //                                                                                                             {!}                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store not%tmp%8#0 to l-stack (no copy)               not%tmp%8#0                                                                                                        class Contract(ARC4Contract):           regression_118/contract.py:5
    //                                             virtual: load not%tmp%8#0 from l-stack (no copy)              not%tmp%8#0                                                                                                        class Contract(ARC4Contract):           regression_118/contract.py:5
    assert // reject transaction                   //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    txn ApplicationID                              //                                                                                                             {txn}                                                                                                     class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store tmp%9#0 to l-stack (no copy)                   tmp%9#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    //                                             virtual: load tmp%9#0 from l-stack (no copy)                  tmp%9#0                                                                                                            class Contract(ARC4Contract):           regression_118/contract.py:5
    !                                              //                                                                                                             {!}                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    //                                             virtual: store tmp%10#0 to l-stack (no copy)                  tmp%10#0                                                                                                           class Contract(ARC4Contract):           regression_118/contract.py:5
    //                                             virtual: load tmp%10#0 from l-stack (no copy)                 tmp%10#0                                                                                                           class Contract(ARC4Contract):           regression_118/contract.py:5
    assert // is creating                          //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    int 1                                          //                                                                                                             1                                                                                                         class Contract(ARC4Contract):                                                       regression_118/contract.py:5
    return                                         //                                                                                                                                                                                                                       class Contract(ARC4Contract):                                                       regression_118/contract.py:5


// test_cases.regression_118.contract.Contract.verify(values: bytes) -> bytes:
verify:
    proto 1 1                                      //                                                                                                             (𝕡) values#0 |                                                                                            @abimethod\ndef verify(self, values: DynamicArray[UInt256]) -> Tuple[Bool, String]: regression_118/contract.py:6-7

verify_block@0:
    txn NumAppArgs                                 //                                                                                                             (𝕡) values#0 | {txn}                                                                                      Txn.num_app_args                                                                    regression_118/contract.py:9
    //                                             virtual: store reinterpret_bool%0#0 to l-stack (no copy)      (𝕡) values#0 | reinterpret_bool%0#0                                                                                Txn.num_app_args                        regression_118/contract.py:9
    byte 0x00                                      //                                                                                                             (𝕡) values#0 | reinterpret_bool%0#0,0x00                                                                  Bool(\nbool(Txn.num_app_args)\n)                                                    regression_118/contract.py:8-10
    int 0                                          //                                                                                                             (𝕡) values#0 | reinterpret_bool%0#0,0x00,0                                                                Bool(\nbool(Txn.num_app_args)\n)                                                    regression_118/contract.py:8-10
    uncover 2                                      //                                                            load reinterpret_bool%0#0 from l-stack (no copy) (𝕡) values#0 | 0x00,0,reinterpret_bool%0#0                                                                val1 = Bool(\nbool(Txn.num_app_args)\n)                                             regression_118/contract.py:8-10
    setbit                                         //                                                                                                             (𝕡) values#0 | {setbit}                                                                                   Bool(\nbool(Txn.num_app_args)\n)                                                    regression_118/contract.py:8-10
    //                                             virtual: store val1#0 to x-stack (no copy)                    (𝕡) values#0 | (𝕏) val1#0 |                                                                                        val1 = Bool(\nbool(Txn.num_app_args)\n) regression_118/contract.py:8-10
    frame_dig -1                                   //                                                            load values#0 from parameters                    (𝕡) values#0 | (𝕏) val1#0 | values#0                                                                      values.length                                                                       regression_118/contract.py:11
    int 0                                          //                                                                                                             (𝕡) values#0 | (𝕏) val1#0 | values#0,0                                                                    values.length                                                                       regression_118/contract.py:11
    extract_uint16                                 //                                                                                                             (𝕡) values#0 | (𝕏) val1#0 | {extract_uint16}                                                              values.length                                                                       regression_118/contract.py:11
    //                                             virtual: store tmp%0#0 to l-stack (no copy)                   (𝕡) values#0 | (𝕏) val1#0 | tmp%0#0                                                                                values.length                           regression_118/contract.py:11
    //                                             virtual: load tmp%0#0 from l-stack (no copy)                  (𝕡) values#0 | (𝕏) val1#0 | tmp%0#0                                                                                values.length != 2:                     regression_118/contract.py:11
    int 2                                          //                                                                                                             (𝕡) values#0 | (𝕏) val1#0 | tmp%0#0,2                                                                     2                                                                                   regression_118/contract.py:11
    !=                                             //                                                                                                             (𝕡) values#0 | (𝕏) val1#0 | {!=}                                                                          values.length != 2:                                                                 regression_118/contract.py:11
    //                                             virtual: store tmp%1#0 to l-stack (no copy)                   (𝕡) values#0 | (𝕏) val1#0 | tmp%1#0                                                                                values.length != 2:                     regression_118/contract.py:11
    //                                             virtual: load tmp%1#0 from l-stack (no copy)                  (𝕡) values#0 | (𝕏) val1#0 | tmp%1#0                                                                                if values.length != 2:                  regression_118/contract.py:11
    bz verify_after_if_else@2                      //                                                                                                             (𝕡) values#0 | (𝕏) val1#0 |                                                                               if values.length != 2:                                                              regression_118/contract.py:11
    // Implicit fall through to verify_if_body@1   //                                                                                                             (𝕡) values#0 | (𝕏) val1#0 |                                       val1#0                                  if values.length != 2:                                                              regression_118/contract.py:11

verify_if_body@1:
    //                                             virtual: load val1#0 from x-stack                             (𝕡) values#0 | val1#0                                                                                val1#0        Tuple((val1, String("")))               regression_118/contract.py:12
    byte 0x0003                                    //                                                                                                             (𝕡) values#0 | val1#0,0x0003                                                                              Tuple((val1, String("")))                                                           regression_118/contract.py:12
    concat                                         //                                                                                                             (𝕡) values#0 | {concat}                                                                                   Tuple((val1, String("")))                                                           regression_118/contract.py:12
    //                                             virtual: store encoded_tuple_buffer%0#2 to l-stack (no copy)  (𝕡) values#0 | encoded_tuple_buffer%0#2                                                                            Tuple((val1, String("")))               regression_118/contract.py:12
    //                                             virtual: load encoded_tuple_buffer%0#2 from l-stack (no copy) (𝕡) values#0 | encoded_tuple_buffer%0#2                                                                            Tuple((val1, String("")))               regression_118/contract.py:12
    byte 0x0000                                    //                                                                                                             (𝕡) values#0 | encoded_tuple_buffer%0#2,0x0000                                                            String("")                                                                          regression_118/contract.py:12
    concat                                         //                                                                                                             (𝕡) values#0 | {concat}                                                                                   Tuple((val1, String("")))                                                           regression_118/contract.py:12
    //                                             virtual: store encoded_tuple_buffer%0#2 to l-stack (no copy)  (𝕡) values#0 | encoded_tuple_buffer%0#2                                                                            Tuple((val1, String("")))               regression_118/contract.py:12
    //                                             virtual: load encoded_tuple_buffer%0#2 from l-stack (no copy) (𝕡) values#0 | encoded_tuple_buffer%0#2                                                                            return Tuple((val1, String("")))        regression_118/contract.py:12
    retsub                                         //                                                                                                             encoded_tuple_buffer%0#2                                                                                  return Tuple((val1, String("")))                                                    regression_118/contract.py:12

verify_after_if_else@2:
    //                                             virtual: load val1#0 from x-stack                             (𝕡) values#0 | val1#0                                                                                val1#0        Tuple((val1, String("")))               regression_118/contract.py:13
    byte 0x0003                                    //                                                                                                             (𝕡) values#0 | val1#0,0x0003                                                                              Tuple((val1, String("")))                                                           regression_118/contract.py:13
    concat                                         //                                                                                                             (𝕡) values#0 | {concat}                                                                                   Tuple((val1, String("")))                                                           regression_118/contract.py:13
    //                                             virtual: store encoded_tuple_buffer%1#2 to l-stack (no copy)  (𝕡) values#0 | encoded_tuple_buffer%1#2                                                                            Tuple((val1, String("")))               regression_118/contract.py:13
    //                                             virtual: load encoded_tuple_buffer%1#2 from l-stack (no copy) (𝕡) values#0 | encoded_tuple_buffer%1#2                                                                            Tuple((val1, String("")))               regression_118/contract.py:13
    byte 0x0000                                    //                                                                                                             (𝕡) values#0 | encoded_tuple_buffer%1#2,0x0000                                                            String("")                                                                          regression_118/contract.py:13
    concat                                         //                                                                                                             (𝕡) values#0 | {concat}                                                                                   Tuple((val1, String("")))                                                           regression_118/contract.py:13
    //                                             virtual: store encoded_tuple_buffer%1#2 to l-stack (no copy)  (𝕡) values#0 | encoded_tuple_buffer%1#2                                                                            Tuple((val1, String("")))               regression_118/contract.py:13
    //                                             virtual: load encoded_tuple_buffer%1#2 from l-stack (no copy) (𝕡) values#0 | encoded_tuple_buffer%1#2                                                                            return Tuple((val1, String("")))        regression_118/contract.py:13
    retsub                                         //                                                                                                             encoded_tuple_buffer%1#2                                                                                  return Tuple((val1, String("")))                                                    regression_118/contract.py:13

