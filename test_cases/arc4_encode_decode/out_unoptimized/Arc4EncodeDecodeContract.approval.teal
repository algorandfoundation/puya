#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1 6 8
    bytecblock 0x 0x00 0xf9d0fe74 base64(CoEBQw==) base64(CiACAAEmAQEAMRsiE0EAPzYaAIAE+dD+dIAEJDeNPE8CjgIAFAACIkMxGYEFEkQxGCITRIgAZCNC/+0xGSISRDEYIhNENhoBiAAYI0L/2TEZIkyOAQADQv/NMRgiEkQjQv/FigEAi/8iWYECEkSL/1cCAIv/IlkiDUQiUygiTwJUKBNEi/9XAgCL/yJZIw1EI1MoIk8CVCgTRImJ) 0x0000 0x24378d3c

main_block@0:

main_block@1:
    // arc4_encode_decode/contract.py:7
    // class Arc4EncodeDecodeContract(ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@7

main_abi_routing@2:
    // arc4_encode_decode/contract.py:7
    // class Arc4EncodeDecodeContract(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x7f067754 // method "test_arc4_bool_array()void"
    pushbytes 0xfbc75e8c // method "test_arc4_bool_array_not_working()void"
    uncover 2
    match main_test_arc4_bool_array_route@3 main_test_arc4_bool_array_not_working_route@4

main_switch_case_default@5:

main_switch_case_next@6:

main_after_if_else@11:
    // arc4_encode_decode/contract.py:7
    // class Arc4EncodeDecodeContract(ARC4Contract):
    intc_0 // 0

main_after_inlined_test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.__puya_arc4_router__@12:
    return

main_test_arc4_bool_array_not_working_route@4:
    // arc4_encode_decode/contract.py:24
    // @abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_arc4_bool_array_not_working
    intc_1 // 1
    b main_after_inlined_test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.__puya_arc4_router__@12

main_test_arc4_bool_array_route@3:
    // arc4_encode_decode/contract.py:8
    // @abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_arc4_bool_array
    intc_1 // 1
    b main_after_inlined_test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.__puya_arc4_router__@12

main_bare_routing@7:
    // arc4_encode_decode/contract.py:7
    // class Arc4EncodeDecodeContract(ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algopy_default_create@8

main_switch_case_default@9:

main_switch_case_next@10:
    b main_after_if_else@11

main___algopy_default_create@8:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating

main_block@13:

main_after_inlined_test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.__algopy_default_create@14:
    intc_1 // 1
    b main_after_inlined_test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.__puya_arc4_router__@12


// _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
dynamic_array_concat_bits:
    proto 4 1
    bytec_0 // ""
    dupn 2

dynamic_array_concat_bits_block@0:
    frame_dig -4
    intc_0 // 0
    extract_uint16
    dupn 2
    frame_dig -2
    +
    dup
    itob
    extract 6 0
    frame_dig -4
    swap
    replace2 0
    dup
    cover 3
    cover 3
    swap
    pushint 7 // 7
    +
    intc_3 // 8
    /
    dup
    cover 3
    swap
    pushint 7 // 7
    +
    intc_3 // 8
    /
    dup
    cover 3
    <
    bz dynamic_array_concat_bits_after_if_else@2

dynamic_array_concat_bits_if_body@1:
    frame_dig 6
    frame_dig 5
    -
    bzero
    frame_dig 4
    swap
    concat
    frame_bury 7

dynamic_array_concat_bits_after_if_else@2:
    frame_dig 7
    frame_bury 4
    intc_0 // 0
    frame_bury 0
    frame_dig 3
    pushint 16 // 16
    +
    dup
    frame_bury 2
    frame_dig -2
    +
    frame_bury 1

dynamic_array_concat_bits_while_top@3:
    frame_dig 2
    frame_dig 1
    <
    bz dynamic_array_concat_bits_after_while@5

dynamic_array_concat_bits_while_body@4:
    frame_dig -3
    frame_dig 0
    dup
    cover 2
    getbit
    frame_dig 4
    frame_dig 2
    dup
    cover 3
    uncover 2
    setbit
    frame_bury 4
    intc_1 // 1
    +
    frame_bury 2
    frame_dig -1
    +
    frame_bury 0
    b dynamic_array_concat_bits_while_top@3

dynamic_array_concat_bits_after_while@5:
    frame_dig 4
    frame_bury 0
    retsub


// test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.test_arc4_bool_array() -> void:
test_arc4_bool_array:
    // arc4_encode_decode/contract.py:8-9
    // @abimethod
    // def test_arc4_bool_array(self) -> None:
    proto 0 0
    bytec_0 // ""

test_arc4_bool_array_block@0:
    // arc4_encode_decode/contract.py:10
    // app_id = arc4_create(Receiver).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_3 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec 4 // base64(CiACAAEmAQEAMRsiE0EAPzYaAIAE+dD+dIAEJDeNPE8CjgIAFAACIkMxGYEFEkQxGCITRIgAZCNC/+0xGSISRDEYIhNENhoBiAAYI0L/2TEZIkyOAQADQv/NMRgiEkQjQv/FigEAi/8iWYECEkSL/1cCAIv/IlkiDUQiUygiTwJUKBNEi/9XAgCL/yJZIw1EI1MoIk8CVCgTRImJ)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_next_txn@1:
    // arc4_encode_decode/contract.py:10
    // app_id = arc4_create(Receiver).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // arc4_encode_decode/contract.py:12
    // imm_arc4 = ImmutableArray(Bool(True), Bool(True))
    bytec 5 // 0x0000
    bytec_0 // 0x
    concat
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_0 // 0x
    uncover 2
    concat
    swap
    concat
    pushint 2 // 2
    intc_3 // 8
    callsub dynamic_array_concat_bits
    // arc4_encode_decode/contract.py:13
    // abi_call(Receiver.receive_bools, imm_arc4, app_id=app_id)
    itxn_begin
    swap
    itxn_field ApplicationID
    bytec_2 // method "receive_bools(bool[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_next_txn@2:
    // arc4_encode_decode/contract.py:13
    // abi_call(Receiver.receive_bools, imm_arc4, app_id=app_id)
    itxn_submit
    // arc4_encode_decode/contract.py:15
    // imm_nat = ImmutableArray(True, True)
    bytec 5 // 0x0000
    bytec_0 // 0x
    concat
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_0 // 0x
    uncover 2
    concat
    swap
    concat
    pushint 2 // 2
    intc_3 // 8
    callsub dynamic_array_concat_bits
    // arc4_encode_decode/contract.py:16
    // abi_call(Receiver.receive_bools, imm_nat, app_id=app_id)
    itxn_begin
    frame_dig 0
    itxn_field ApplicationID
    bytec_2 // method "receive_bools(bool[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_next_txn@3:
    // arc4_encode_decode/contract.py:16
    // abi_call(Receiver.receive_bools, imm_nat, app_id=app_id)
    itxn_submit
    // arc4_encode_decode/contract.py:18
    // arc4_arc4 = DynamicArray(Bool(True), Bool(True))
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_0 // 0x
    uncover 2
    concat
    swap
    intc_0 // 0
    getbit
    swap
    intc_1 // 1
    uncover 2
    setbit
    pushbytes 0x0002
    swap
    concat
    // arc4_encode_decode/contract.py:19
    // abi_call(Receiver.receive_bools, arc4_arc4, app_id=app_id)
    itxn_begin
    frame_dig 0
    itxn_field ApplicationID
    bytec_2 // method "receive_bools(bool[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_next_txn@4:
    // arc4_encode_decode/contract.py:19
    // abi_call(Receiver.receive_bools, arc4_arc4, app_id=app_id)
    itxn_submit
    // arc4_encode_decode/contract.py:21-22
    // # delete app so we don't need to worry about MBR in test suite
    // abi_call(Receiver.delete, app_id=app_id)
    itxn_begin
    frame_dig 0
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 6 // method "delete()void"
    itxn_field ApplicationArgs
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_next_txn@5:
    // arc4_encode_decode/contract.py:21-22
    // # delete app so we don't need to worry about MBR in test suite
    // abi_call(Receiver.delete, app_id=app_id)
    itxn_submit
    retsub


// test_cases.arc4_encode_decode.contract.Arc4EncodeDecodeContract.test_arc4_bool_array_not_working() -> void:
test_arc4_bool_array_not_working:

test_arc4_bool_array_not_working_block@0:
    // arc4_encode_decode/contract.py:26
    // app_id = arc4_create(Receiver).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_3 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec 4 // base64(CiACAAEmAQEAMRsiE0EAPzYaAIAE+dD+dIAEJDeNPE8CjgIAFAACIkMxGYEFEkQxGCITRIgAZCNC/+0xGSISRDEYIhNENhoBiAAYI0L/2TEZIkyOAQADQv/NMRgiEkQjQv/FigEAi/8iWYECEkSL/1cCAIv/IlkiDUQiUygiTwJUKBNEi/9XAgCL/yJZIw1EI1MoIk8CVCgTRImJ)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_not_working_next_txn@1:
    // arc4_encode_decode/contract.py:26
    // app_id = arc4_create(Receiver).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    // arc4_encode_decode/contract.py:38-39
    // # this fails on execution
    // tup_arc4 = Bool(True), Bool(True)
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    bytec_1 // 0x00
    intc_0 // 0
    intc_1 // 1
    setbit
    swap
    // arc4_encode_decode/contract.py:40
    // abi_call(Receiver.receive_bools, tup_arc4, app_id=app_id)
    itxn_begin
    bytec_0 // 0x
    swap
    concat
    swap
    intc_0 // 0
    getbit
    swap
    intc_1 // 1
    uncover 2
    setbit
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    itxn_field ApplicationID
    bytec_2 // method "receive_bools(bool[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_not_working_next_txn@2:
    // arc4_encode_decode/contract.py:40
    // abi_call(Receiver.receive_bools, tup_arc4, app_id=app_id)
    itxn_submit
    // arc4_encode_decode/contract.py:42-43
    // # delete app so we don't need to worry about MBR in test suite
    // abi_call(Receiver.delete, app_id=app_id)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 6 // method "delete()void"
    itxn_field ApplicationArgs
    intc_2 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_bool_array_not_working_next_txn@3:
    // arc4_encode_decode/contract.py:42-43
    // # delete app so we don't need to worry about MBR in test suite
    // abi_call(Receiver.delete, app_id=app_id)
    itxn_submit
    retsub
