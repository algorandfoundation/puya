{
  "version": 3,
  "sources": [
    "../abi_call.py"
  ],
  "mappingsqGA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;;;;;;;;;AAAA;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;;;;AACK;;;AAAA;AAAA;;;;AAmBA;;;AAAA;AAAA;;;;AA2BA;;;AAAA;AAAA;;;;AAuCA;;;AAAA;AAAA;;;;AA0BA;;;AAAA;AAAA;;;;AA4BA;;;AAAA;AAAA;AA3IL;;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AAG6B;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAf;AAAA;;AACA;AAA4D;;;;AAA5D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAA8C;;;;AAA9C;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAG6B;;AAAmB;AAAnB;AAAwB;;AAAmB;;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAf;AAAA;;AACA;AAA4E;;;;AAA5E;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAAuE;;;;AAAvE;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAEA;AAAoC;;AAApC;;;;;;AAAA;;;;AAAA;;;AAAA;;;;;;AAAA;;AAER;;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AAIwB;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACJ;;AAAmB;;AAAnB;AAFU;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAIA;AAA8D;;;;AAA9D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAA+C;;;;AAA/C;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAIwB;;AAAmB;AAAnB;AAAwB;;AAAmB;;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACJ;;AAAmB;;AAAnB;AAFU;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAhB;AAAA;;AAIA;AAAuF;;;;AAAvF;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAC8C;;;;AAD9C;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAGL;;AAAA;AAAP;AAEA;AAAoC;;AAApC;;;;;;AAAA;;;;AAAA;;;AAAA;;;;;;AAAA;;AAER;;;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AAE6B;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAf;AAAA;;AAIM;;AAAmB;AAAnB;AAAA;;AACA;;AAAmB;AAAnB;AAAA;;AACQ;;AAAmB;;AAAnB;AAAR;AAAA;;AAEA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AALW;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAIX;;AAJW;AAAA;AAAA;;;AAIX;;AAJW;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAjB;AAAA;;AAOA;AAAgE;;;;AAAhE;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAAgD;;;;AAAhD;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAIM;;AAAmB;AAAnB;AACA;;AAAmB;;AAAnB;AAAA;;AACQ;;AAAmB;;AAAnB;AAAR;AAAA;;AAEA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AALW;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAIX;;AAJW;AAAA;AAAA;;;AAIX;;AAJW;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAjB;AAAA;;AAOA;AAGW;;;;AAHX;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAKY;AACsE;;;;AADtE;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAGL;;AAAA;AAAP;AAEA;AAAoC;;AAApC;;;;;;AAAA;;;;AAAA;;;AAAA;;;;;;AAAA;;AAER;;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AAE6B;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACH;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAZ;AAAA;;AAGA;AAAsD;;;;AAAtD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAA2C;;;;AAA3C;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAG6B;;AAAmB;AAAnB;AAAwB;;AAAmB;;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACH;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAZ;AAAA;;AACA;AAGW;;;;AAHX;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAKY;AAAwE;;;;AAAxE;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAEA;AAAoC;;AAApC;;;;;;AAAA;;;;AAAA;;;AAAA;;;;;;AAAA;;AAER;;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AAE6B;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACF;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAb;AAAA;;AAGA;AAAwD;;;;AAAxD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AACY;AAA4C;;;;AAA5C;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACL;;AAAA;AAAP;AAG6B;;AAAmB;AAAnB;AAAwB;;AAAmB;;AAAnB;AAAA;;AAAtC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACF;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAb;AAAA;;AACA;AAGW;;;;AAHX;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAKY;AACoC;;;;AADpC;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAGL;;AAAA;AAAP;AAEA;AAAoC;;AAApC;;;;;;AAAA;;;;AAAA;;;AAAA;;;;;;AAAA;;AAER;;;;;;;AAEqB;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;AACb;AAAA;;AAGe;;AAAA;AACf;AAA4D;;;;AAA5D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAGgB;;AAAA;AAChB;AAA8D;;;;AAA9D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAIqD;AAAA;AAAA;;;AAA/C;AADW;AAAA;AAAA;;AAAA;AACC;AADD;AAAA;AACa;AADb;AAAA;AAAA;;;AACa;AADb;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACwB;AADxB;AAAA;AAAA;;;AACwB;AADxB;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAGjB;AAAgE;;;;AAAhE;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAGY;;AAAA;AACZ;AAAsD;;;;AAAtD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAGa;AAAA;AAAA;;;AACb;AAAwD;;;;AAAxD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAEM;AAAoC;;;;AAApC;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;AACgB;AAAT;;AAAwB;;AAAT;AAAf;AAAP;AACgB;AAAT;;AAAwB;;AAAT;AAAf;AAAP;AACqB;;AAAkB;AAAlB;AACC;AAAtB;AACsB;AAAtB;AACgB;AAAT;;AAAA;AAAA;AAAP;AACgB;;AAAT;;AAAwB;;AAAT;AAAf;AAAP;AACgB;;AAAT;;AAAwB;AAAT;AAAf;AAAP;AAEA;AAAoC;;AAApC;;;;;;AAAA;;;;AAAA;;;AAAA;;;;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 2"
    },
    "7": {
      "op": "bytecblock 0x 0x151f7c75 base64(CkIAAIEBQw==) base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=) 0x24378d3c \"Hello\" 0x11b19b95 0xea18655f 0x46ec14a0 0x4f0deb50 0x125d1376 0xd28b964a 0xbb3bfdb7 0x9b4d0926 0x59664ab6 0x818e4a62"
    },
    "766": {
      "op": "b block@0"
    },
    "769": {
      "block": "block@0",
      "stack_in": [],
      "op": "b block@1"
    },
    "772": {
      "block": "block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "774": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "775": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "777": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "778": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "779": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "780": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "781": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "782": {
      "op": "intc_3 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "783": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "785": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "787": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "789": {
      "op": "intc_1 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "790": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "792": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "794": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "796": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "798": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "800": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "802": {
      "op": "match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication",
      "stack_out": []
    },
    "828": {
      "op": "b *NOT_IMPLEMENTED"
    },
    "831": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "832": {
      "block": "create_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "835": {
      "block": "call_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "838": {
      "block": "create_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "841": {
      "block": "call_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "844": {
      "block": "create_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "847": {
      "block": "call_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "850": {
      "block": "create_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "853": {
      "block": "call_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "856": {
      "block": "create_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "859": {
      "block": "call_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "862": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "864": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "865": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "866": {
      "op": "bz else_body@13",
      "stack_out": []
    },
    "869": {
      "op": "b __algopy_default_create@12"
    },
    "872": {
      "block": "__algopy_default_create@12",
      "stack_in": [],
      "op": "b block@26"
    },
    "875": {
      "block": "block@26",
      "stack_in": [],
      "op": "b after_inlined_test_cases.mutable_native_types.abi_call.TestAbiCall.__algopy_default_create@27"
    },
    "878": {
      "block": "after_inlined_test_cases.mutable_native_types.abi_call.TestAbiCall.__algopy_default_create@27",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "879": {
      "op": "return",
      "stack_out": []
    },
    "880": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "block": "else_body@13",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create NoOp"
    },
    "881": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "884": {
      "op": "pushbytes 0x5df19773 // method \"test_fixed_struct()void\"",
      "defined_out": [
        "Method(test_fixed_struct()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_fixed_struct()void)"
      ]
    },
    "890": {
      "op": "pushbytes 0xba041cd5 // method \"test_nested_struct()void\"",
      "defined_out": [
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)"
      ]
    },
    "896": {
      "op": "pushbytes 0x8441664a // method \"test_dynamic_struct()void\"",
      "defined_out": [
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "Method(test_dynamic_struct()void)"
      ]
    },
    "902": {
      "op": "pushbytes 0xcaa62e2c // method \"test_fixed_array()void\"",
      "defined_out": [
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)"
      ]
    },
    "908": {
      "op": "pushbytes 0x38357d5e // method \"test_native_array()void\"",
      "defined_out": [
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)",
        "Method(test_fixed_struct()void)",
        "Method(test_native_array()void)",
        "Method(test_nested_struct()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)",
        "Method(test_native_array()void)"
      ]
    },
    "914": {
      "op": "pushbytes 0xe473c70a // method \"test_log()void\"",
      "defined_out": [
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)",
        "Method(test_fixed_struct()void)",
        "Method(test_log()void)",
        "Method(test_native_array()void)",
        "Method(test_nested_struct()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)",
        "Method(test_native_array()void)",
        "Method(test_log()void)"
      ]
    },
    "920": {
      "op": "uncover 6",
      "stack_out": [
        "Method(test_fixed_struct()void)",
        "Method(test_nested_struct()void)",
        "Method(test_dynamic_struct()void)",
        "Method(test_fixed_array()void)",
        "Method(test_native_array()void)",
        "Method(test_log()void)",
        "tmp%5#0"
      ]
    },
    "922": {
      "op": "match test_fixed_struct_route@3 test_nested_struct_route@4 test_dynamic_struct_route@5 test_fixed_array_route@6 test_native_array_route@7 test_log_route@8",
      "stack_out": []
    },
    "936": {
      "op": "b switch_case_default@9"
    },
    "939": {
      "block": "switch_case_default@9",
      "stack_in": [],
      "op": "b switch_case_next@10"
    },
    "942": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "switch_case_next@10",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "943": {
      "block": "test_log_route@8",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log[routing]",
      "op": "callsub test_log"
    },
    "946": {
      "op": "b switch_case_next@10"
    },
    "949": {
      "block": "test_native_array_route@7",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array[routing]",
      "op": "callsub test_native_array"
    },
    "952": {
      "op": "b switch_case_next@10"
    },
    "955": {
      "block": "test_fixed_array_route@6",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array[routing]",
      "op": "callsub test_fixed_array"
    },
    "958": {
      "op": "b switch_case_next@10"
    },
    "961": {
      "block": "test_dynamic_struct_route@5",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct[routing]",
      "op": "callsub test_dynamic_struct"
    },
    "964": {
      "op": "b switch_case_next@10"
    },
    "967": {
      "block": "test_nested_struct_route@4",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct[routing]",
      "op": "callsub test_nested_struct"
    },
    "970": {
      "op": "b switch_case_next@10"
    },
    "973": {
      "block": "test_fixed_struct_route@3",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct[routing]",
      "op": "callsub test_fixed_struct"
    },
    "976": {
      "op": "b switch_case_next@10"
    },
    "979": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct[routing]",
      "params": {},
      "block": "test_fixed_struct",
      "stack_in": [],
      "op": "b test_fixed_struct_block@0"
    },
    "982": {
      "block": "test_fixed_struct_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct",
      "op": "callsub test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct"
    },
    "985": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "986": {
      "op": "return",
      "stack_out": []
    },
    "987": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct[routing]",
      "params": {},
      "block": "test_nested_struct",
      "stack_in": [],
      "op": "b test_nested_struct_block@0"
    },
    "990": {
      "block": "test_nested_struct_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct",
      "op": "callsub test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct"
    },
    "993": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "994": {
      "op": "return",
      "stack_out": []
    },
    "995": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct[routing]",
      "params": {},
      "block": "test_dynamic_struct",
      "stack_in": [],
      "op": "b test_dynamic_struct_block@0"
    },
    "998": {
      "block": "test_dynamic_struct_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct",
      "op": "callsub test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct"
    },
    "1001": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1002": {
      "op": "return",
      "stack_out": []
    },
    "1003": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array[routing]",
      "params": {},
      "block": "test_fixed_array",
      "stack_in": [],
      "op": "b test_fixed_array_block@0"
    },
    "1006": {
      "block": "test_fixed_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array",
      "op": "callsub test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array"
    },
    "1009": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1010": {
      "op": "return",
      "stack_out": []
    },
    "1011": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array[routing]",
      "params": {},
      "block": "test_native_array",
      "stack_in": [],
      "op": "b test_native_array_block@0"
    },
    "1014": {
      "block": "test_native_array_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array",
      "op": "callsub test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array"
    },
    "1017": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1018": {
      "op": "return",
      "stack_out": []
    },
    "1019": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log[routing]",
      "params": {},
      "block": "test_log",
      "stack_in": [],
      "op": "b test_log_block@0"
    },
    "1022": {
      "block": "test_log_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log",
      "op": "callsub test_cases.mutable_native_types.abi_call.TestAbiCall.test_log"
    },
    "1025": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1026": {
      "op": "return",
      "stack_out": []
    },
    "1027": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct",
      "params": {},
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1030": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0"
      ]
    },
    "1031": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1032": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_block@0"
    },
    "1035": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_block@0",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "1036": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1037": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1039": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1040": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1042": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1043": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1045": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "5"
      ]
    },
    "1047": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1049": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1050": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1052": {
      "op": "bytec_2 // base64(CkIAAIEBQw==)",
      "defined_out": [
        "CkIAAIEBQw=="
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "CkIAAIEBQw=="
      ]
    },
    "1053": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1055": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        ""
      ]
    },
    "1056": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1058": {
      "op": "bytec_3 // base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=)",
      "defined_out": [
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ]
    },
    "1059": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1061": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        ""
      ]
    },
    "1062": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1064": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1065": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1068": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1070": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@1"
    },
    "1073": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@1",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1074": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "create_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "create_txn.CreatedApplicationID#0"
      ]
    },
    "1076": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1077": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0"
      ]
    },
    "1079": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%0#0"
      ]
    },
    "1081": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1082": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "1083": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1085": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "1086": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1087": {
      "op": "cover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "1089": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1090": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1091": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1093": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1094": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1096": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "app#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1097": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0"
      ]
    },
    "1098": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "1099": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "1101": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1102": {
      "op": "uncover 1",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1104": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1106": {
      "op": "bytec 6 // method \"fixed_struct_arg((uint64,uint64))void\"",
      "defined_out": [
        "Method(fixed_struct_arg((uint64,uint64))void)",
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(fixed_struct_arg((uint64,uint64))void)"
      ]
    },
    "1108": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1110": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1112": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1113": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1116": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1118": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@2"
    },
    "1121": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@2",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1122": {
      "op": "itxn_begin"
    },
    "1123": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1125": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1127": {
      "op": "bytec 11 // method \"fixed_struct_ret()(uint64,uint64)\"",
      "defined_out": [
        "Method(fixed_struct_ret()(uint64,uint64))",
        "app#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "Method(fixed_struct_ret()(uint64,uint64))"
      ]
    },
    "1129": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1131": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1132": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1134": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1135": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1137": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@3"
    },
    "1140": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@3",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1141": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1143": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1144": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%5#0"
      ]
    },
    "1147": {
      "op": "cover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%5#0",
        "awst_tmp%0#0"
      ]
    },
    "1149": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1152": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "1153": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "1154": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "res#0"
      ]
    },
    "1155": {
      "op": "frame_dig 0",
      "defined_out": [
        "fixed_struct#0",
        "res#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "res#0",
        "fixed_struct#0"
      ]
    },
    "1157": {
      "op": "==",
      "defined_out": [
        "fixed_struct#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%8#0"
      ]
    },
    "1158": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1159": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "fixed_struct#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%9#0"
      ]
    },
    "1161": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "fixed_struct#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%9#0",
        "2"
      ]
    },
    "1162": {
      "op": "+",
      "defined_out": [
        "fixed_struct#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%10#0"
      ]
    },
    "1163": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "fixed_struct#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1165": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "fixed_struct#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0",
        "3"
      ]
    },
    "1167": {
      "op": "+",
      "defined_out": [
        "fixed_struct#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1168": {
      "op": "cover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%12#0",
        "tmp%10#0"
      ]
    },
    "1170": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "fixed_struct#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%12#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1171": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0",
        "fixed_struct#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%12#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "1172": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%12#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1174": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "fixed_struct#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%12#0",
        "aggregate%head%2#0"
      ]
    },
    "1175": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "aggregate%head%2#0",
        "tmp%12#0"
      ]
    },
    "1177": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%2#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1178": {
      "op": "concat",
      "defined_out": [
        "fixed_struct#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%13#0"
      ]
    },
    "1179": {
      "op": "dup",
      "defined_out": [
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "1180": {
      "op": "frame_bury 0",
      "defined_out": [
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "1182": {
      "op": "itxn_begin",
      "defined_out": [
        "fixed_struct#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1183": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1185": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1187": {
      "op": "bytec 6 // method \"fixed_struct_arg((uint64,uint64))void\"",
      "defined_out": [
        "Method(fixed_struct_arg((uint64,uint64))void)",
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(fixed_struct_arg((uint64,uint64))void)"
      ]
    },
    "1189": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1191": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1193": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1194": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1197": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1199": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@4"
    },
    "1202": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@4",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1203": {
      "op": "itxn_begin"
    },
    "1204": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "1206": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1208": {
      "op": "bytec 11 // method \"fixed_struct_ret()(uint64,uint64)\"",
      "defined_out": [
        "Method(fixed_struct_ret()(uint64,uint64))",
        "app#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "Method(fixed_struct_ret()(uint64,uint64))"
      ]
    },
    "1210": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1212": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1213": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1215": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1216": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1218": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@5"
    },
    "1221": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@5",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1222": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1224": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1225": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "1228": {
      "op": "cover 1",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%14#0",
        "awst_tmp%1#0"
      ]
    },
    "1230": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1233": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%14#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "1234": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "1235": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "res#0"
      ]
    },
    "1236": {
      "op": "frame_dig 0",
      "defined_out": [
        "fixed_struct#0",
        "res#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "res#0",
        "fixed_struct#0"
      ]
    },
    "1238": {
      "op": "==",
      "defined_out": [
        "fixed_struct#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "tmp%17#0"
      ]
    },
    "1239": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1240": {
      "op": "itxn_begin"
    },
    "1241": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "1243": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0",
        "fixed_struct#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "DeleteApplication"
      ]
    },
    "1245": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "1247": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1249": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "Method(delete()void)"
      ]
    },
    "1251": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1253": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1254": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1256": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1257": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1259": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@6"
    },
    "1262": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct_next_txn@6",
      "stack_in": [
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1263": {
      "retsub": true,
      "op": "retsub"
    },
    "1264": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct",
      "params": {},
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0"
      ]
    },
    "1268": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1269": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_block@0"
    },
    "1272": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_block@0",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "1273": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1274": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1277": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1279": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1280": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1282": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "5"
      ]
    },
    "1284": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1286": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1287": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1289": {
      "op": "bytec_2 // base64(CkIAAIEBQw==)",
      "defined_out": [
        "CkIAAIEBQw=="
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "CkIAAIEBQw=="
      ]
    },
    "1290": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1292": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        ""
      ]
    },
    "1293": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1295": {
      "op": "bytec_3 // base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=)",
      "defined_out": [
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ]
    },
    "1296": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1298": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        ""
      ]
    },
    "1299": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1301": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1302": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1304": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1305": {
      "op": "itxn_field Fee",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1307": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@1"
    },
    "1310": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@1",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1311": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "create_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "create_txn.CreatedApplicationID#0"
      ]
    },
    "1313": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1314": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0"
      ]
    },
    "1316": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%0#0"
      ]
    },
    "1318": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1319": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "1320": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1322": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "1323": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1324": {
      "op": "cover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "1326": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1327": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1328": {
      "op": "uncover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1330": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1331": {
      "op": "uncover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1333": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1334": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0"
      ]
    },
    "1335": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1337": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "app#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0",
        "tmp%5#0",
        "3"
      ]
    },
    "1339": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "1340": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0",
        "tmp%6#0",
        "0x"
      ]
    },
    "1341": {
      "op": "uncover 2",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%6#0",
        "0x",
        "tmp%4#0"
      ]
    },
    "1343": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "app#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%6#0",
        "aggregate%head%2#0"
      ]
    },
    "1344": {
      "op": "cover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%2#0",
        "tmp%6#0"
      ]
    },
    "1346": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%2#0",
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1347": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "tmp%7#0"
      ]
    },
    "1348": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "nested_struct#0",
        "nested_struct#0 (copy)"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "nested_struct#0",
        "nested_struct#0 (copy)"
      ]
    },
    "1349": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "nested_struct#0"
      ]
    },
    "1351": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1352": {
      "op": "uncover 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1354": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1356": {
      "op": "bytec 7 // method \"nested_struct_arg(((uint64,uint64),uint64))void\"",
      "defined_out": [
        "Method(nested_struct_arg(((uint64,uint64),uint64))void)",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(nested_struct_arg(((uint64,uint64),uint64))void)"
      ]
    },
    "1358": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1360": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1362": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1363": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1366": {
      "op": "itxn_field Fee",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1368": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@2"
    },
    "1371": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@2",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1372": {
      "op": "itxn_begin"
    },
    "1373": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1375": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1377": {
      "op": "bytec 12 // method \"nested_struct_ret()((uint64,uint64),uint64)\"",
      "defined_out": [
        "Method(nested_struct_ret()((uint64,uint64),uint64))",
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "Method(nested_struct_ret()((uint64,uint64),uint64))"
      ]
    },
    "1379": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1381": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1382": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1384": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1385": {
      "op": "itxn_field Fee",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1387": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@3"
    },
    "1390": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@3",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1391": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1393": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1394": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "1397": {
      "op": "cover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%8#0",
        "awst_tmp%0#0"
      ]
    },
    "1399": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1402": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%8#0",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "1403": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "1404": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "res#0"
      ]
    },
    "1405": {
      "op": "frame_dig 0",
      "defined_out": [
        "nested_struct#0",
        "res#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "res#0",
        "nested_struct#0"
      ]
    },
    "1407": {
      "op": "==",
      "defined_out": [
        "nested_struct#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%11#0"
      ]
    },
    "1408": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1409": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "nested_struct#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%12#0"
      ]
    },
    "1411": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "nested_struct#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%12#0",
        "2"
      ]
    },
    "1412": {
      "op": "+",
      "defined_out": [
        "nested_struct#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%13#0"
      ]
    },
    "1413": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "nested_struct#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1415": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "nested_struct#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%13#0",
        "tmp%14#0",
        "3"
      ]
    },
    "1417": {
      "op": "+",
      "defined_out": [
        "nested_struct#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "1418": {
      "op": "cover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%15#0",
        "tmp%13#0"
      ]
    },
    "1420": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "nested_struct#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%15#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1421": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%3#0",
        "nested_struct#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%15#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "1422": {
      "op": "uncover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%15#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1424": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "nested_struct#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%15#0",
        "aggregate%head%4#0"
      ]
    },
    "1425": {
      "op": "uncover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "aggregate%head%4#0",
        "tmp%15#0"
      ]
    },
    "1427": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#0",
        "aggregate%head%4#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "1428": {
      "op": "concat",
      "defined_out": [
        "nested_struct#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%16#0"
      ]
    },
    "1429": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "nested_struct#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1431": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "nested_struct#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%16#0",
        "tmp%17#0",
        "4"
      ]
    },
    "1433": {
      "op": "+",
      "defined_out": [
        "nested_struct#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "1434": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%16#0",
        "tmp%18#0",
        "0x"
      ]
    },
    "1435": {
      "op": "uncover 2",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%18#0",
        "0x",
        "tmp%16#0"
      ]
    },
    "1437": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "nested_struct#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%18#0",
        "aggregate%head%6#0"
      ]
    },
    "1438": {
      "op": "cover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "aggregate%head%6#0",
        "tmp%18#0"
      ]
    },
    "1440": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%6#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "1441": {
      "op": "concat",
      "defined_out": [
        "nested_struct#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%19#0"
      ]
    },
    "1442": {
      "op": "dup",
      "defined_out": [
        "nested_struct#0",
        "nested_struct#0 (copy)"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "nested_struct#0",
        "nested_struct#0 (copy)"
      ]
    },
    "1443": {
      "op": "frame_bury 0",
      "defined_out": [
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "nested_struct#0"
      ]
    },
    "1445": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1446": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1448": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1450": {
      "op": "bytec 7 // method \"nested_struct_arg(((uint64,uint64),uint64))void\"",
      "defined_out": [
        "Method(nested_struct_arg(((uint64,uint64),uint64))void)",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(nested_struct_arg(((uint64,uint64),uint64))void)"
      ]
    },
    "1452": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1454": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1456": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1457": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1459": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1460": {
      "op": "itxn_field Fee",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1462": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@4"
    },
    "1465": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@4",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1466": {
      "op": "itxn_begin"
    },
    "1467": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "1469": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1471": {
      "op": "bytec 12 // method \"nested_struct_ret()((uint64,uint64),uint64)\"",
      "defined_out": [
        "Method(nested_struct_ret()((uint64,uint64),uint64))",
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "Method(nested_struct_ret()((uint64,uint64),uint64))"
      ]
    },
    "1473": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1475": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1476": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1478": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1479": {
      "op": "itxn_field Fee",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1481": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@5"
    },
    "1484": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@5",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1485": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1487": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1488": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "awst_tmp%1#0",
        "tmp%20#0"
      ]
    },
    "1491": {
      "op": "cover 1",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%20#0",
        "awst_tmp%1#0"
      ]
    },
    "1493": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "1496": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%21#0",
        "0x151f7c75"
      ]
    },
    "1497": {
      "op": "==",
      "defined_out": [
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "1498": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "res#0"
      ]
    },
    "1499": {
      "op": "frame_dig 0",
      "defined_out": [
        "nested_struct#0",
        "res#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "res#0",
        "nested_struct#0"
      ]
    },
    "1501": {
      "op": "==",
      "defined_out": [
        "nested_struct#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "tmp%23#0"
      ]
    },
    "1502": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1503": {
      "op": "itxn_begin"
    },
    "1504": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "1506": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "DeleteApplication"
      ]
    },
    "1508": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "1510": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1512": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "Method(delete()void)"
      ]
    },
    "1514": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1516": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1517": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1519": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "nested_struct#0"
      ],
      "stack_out": [
        "nested_struct#0",
        "app#0",
        "0"
      ]
    },
    "1520": {
      "op": "itxn_field Fee",
      "stack_out": [
        "nested_struct#0",
        "app#0"
      ]
    },
    "1522": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@6"
    },
    "1525": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct_next_txn@6",
      "stack_in": [
        "nested_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1526": {
      "retsub": true,
      "op": "retsub"
    },
    "1527": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct",
      "params": {},
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0"
      ]
    },
    "1531": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0"
      ]
    },
    "1532": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1533": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_block@0"
    },
    "1536": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_block@0",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "1537": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1538": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1540": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1541": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1544": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1546": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "5"
      ]
    },
    "1548": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1550": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1551": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1553": {
      "op": "bytec_2 // base64(CkIAAIEBQw==)",
      "defined_out": [
        "CkIAAIEBQw=="
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "CkIAAIEBQw=="
      ]
    },
    "1554": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1556": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        ""
      ]
    },
    "1557": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1559": {
      "op": "bytec_3 // base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=)",
      "defined_out": [
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ]
    },
    "1560": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1562": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        ""
      ]
    },
    "1563": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1565": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1566": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1568": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1569": {
      "op": "itxn_field Fee",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1571": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@1"
    },
    "1574": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@1",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1575": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "create_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "create_txn.CreatedApplicationID#0"
      ]
    },
    "1577": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1578": {
      "op": "frame_bury 2",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0"
      ]
    },
    "1580": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%0#0"
      ]
    },
    "1582": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1583": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "1584": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1586": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "1587": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1588": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "1590": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1591": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1592": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1594": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1595": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1597": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "app#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1598": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%4#0"
      ]
    },
    "1599": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "1600": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "1602": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "tmp%5#0"
      ]
    },
    "1604": {
      "op": "intc_2 // 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "tmp%5#0",
        "1"
      ]
    },
    "1605": {
      "op": "+",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "tmp%6#0"
      ]
    },
    "1606": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%6#0",
        "fixed_struct#0"
      ]
    },
    "1608": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%7#0"
      ]
    },
    "1610": {
      "op": "intc_3 // 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%7#0",
        "2"
      ]
    },
    "1611": {
      "op": "+",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%8#0"
      ]
    },
    "1612": {
      "op": "cover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0"
      ]
    },
    "1614": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%9#0"
      ]
    },
    "1616": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "app#0",
        "fixed_struct#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%9#0",
        "3"
      ]
    },
    "1618": {
      "op": "+",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%10#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%10#0"
      ]
    },
    "1619": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "tmp%11#0"
      ]
    },
    "1620": {
      "op": "cover 3",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0"
      ]
    },
    "1622": {
      "op": "intc_2 // 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "1"
      ]
    },
    "1623": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "app#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1624": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "app#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0",
        "fixed_struct#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "1627": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0",
        "aggregate%len_u16%0#0",
        "fixed_struct#0"
      ]
    },
    "1629": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+(uint64,uint64)[])%0#0",
        "app#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0",
        "aggregate%as_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "1630": {
      "op": "cover 3",
      "defined_out": [
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%6#0"
      ]
    },
    "1632": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "tmp%8#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1633": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "tmp%8#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "1634": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "tmp%8#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "1636": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "tmp%8#0",
        "aggregate%head%3#0"
      ]
    },
    "1637": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%3#0",
        "tmp%8#0"
      ]
    },
    "1639": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%3#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "1640": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%4#0"
      ]
    },
    "1641": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%4#0",
        "tmp%11#0 (copy)"
      ]
    },
    "1643": {
      "op": "len",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length%0#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%4#0",
        "aggregate%length%0#0"
      ]
    },
    "1644": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%4#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1645": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%0#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "tmp%11#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1648": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%0#0",
        "tmp%11#0"
      ]
    },
    "1650": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%4#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1651": {
      "op": "pushint 22 // 22",
      "defined_out": [
        "22",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%4#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "22"
      ]
    },
    "1653": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%4#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1654": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%0#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1657": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%4#0"
      ]
    },
    "1659": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1661": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%5#0"
      ]
    },
    "1662": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1664": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1665": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1666": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "22"
      ]
    },
    "1668": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1669": {
      "op": "bytec 5 // \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "\"Hello\""
      ]
    },
    "1671": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "aggregate%length%1#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "1672": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1673": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "aggregate%length_uint16%1#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1676": {
      "op": "bytec 5 // \"Hello\"",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "\"Hello\""
      ]
    },
    "1678": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1679": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%0#0 (copy)",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0 (copy)"
      ]
    },
    "1681": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1682": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%5#0",
        "aggregate%offset_as_uint16%1#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1685": {
      "op": "uncover 4",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%5#0"
      ]
    },
    "1687": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%5#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1689": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%6#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%6#0"
      ]
    },
    "1690": {
      "op": "cover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1692": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0 (copy)",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%6#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0 (copy)"
      ]
    },
    "1693": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%head%6#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%data_length%1#0"
      ]
    },
    "1694": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%data_length%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1696": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%6#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "1697": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%6#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "1698": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%2#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1701": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%6#0"
      ]
    },
    "1703": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1705": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%7#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%7#0"
      ]
    },
    "1706": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1708": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1709": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1711": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "app#0",
        "encoded_array%0#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "encoded_array%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "1712": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "aggregate%concat%1#0",
        "encoded_array%0#0"
      ]
    },
    "1714": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "fixed_struct#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "tmp%12#0"
      ]
    },
    "1715": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "dynamic_struct#0",
        "dynamic_struct#0 (copy)",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "dynamic_struct#0",
        "dynamic_struct#0 (copy)"
      ]
    },
    "1716": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0",
        "dynamic_struct#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "dynamic_struct#0"
      ]
    },
    "1718": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1719": {
      "op": "uncover 1",
      "defined_out": [
        "app#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1721": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1723": {
      "op": "bytec 8 // method \"dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void\"",
      "defined_out": [
        "Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)",
        "app#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)"
      ]
    },
    "1725": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1727": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1729": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "dynamic_struct#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1730": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1732": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1733": {
      "op": "itxn_field Fee",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1735": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@2"
    },
    "1738": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@2",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1739": {
      "op": "itxn_begin"
    },
    "1740": {
      "op": "frame_dig 2",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1742": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1744": {
      "op": "bytec 13 // method \"dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[])\"",
      "defined_out": [
        "Method(dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[]))",
        "app#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "Method(dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[]))"
      ]
    },
    "1746": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1748": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1749": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1751": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1752": {
      "op": "itxn_field Fee",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1754": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@3"
    },
    "1757": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@3",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1758": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1760": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1761": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%13#0"
      ]
    },
    "1764": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%13#0",
        "awst_tmp%0#0"
      ]
    },
    "1766": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1769": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "1770": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "1771": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "res#0"
      ]
    },
    "1772": {
      "op": "frame_dig 0",
      "defined_out": [
        "dynamic_struct#0",
        "res#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "res#0",
        "dynamic_struct#0"
      ]
    },
    "1774": {
      "op": "==",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%16#0"
      ]
    },
    "1775": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1776": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%17#0"
      ]
    },
    "1778": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "dynamic_struct#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%17#0",
        "2"
      ]
    },
    "1779": {
      "op": "+",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%18#0"
      ]
    },
    "1780": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1782": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%18#0",
        "tmp%19#0",
        "3"
      ]
    },
    "1784": {
      "op": "+",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%18#0",
        "tmp%20#0"
      ]
    },
    "1785": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%18#0"
      ]
    },
    "1787": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%18#0",
        "tmp%21#0"
      ]
    },
    "1789": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%18#0",
        "tmp%21#0",
        "4"
      ]
    },
    "1791": {
      "op": "+",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%18#0",
        "tmp%22#0"
      ]
    },
    "1792": {
      "op": "itob",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%20#0",
        "tmp%18#0",
        "tmp%23#0"
      ]
    },
    "1793": {
      "op": "cover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0"
      ]
    },
    "1795": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0",
        "1"
      ]
    },
    "1796": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "1797": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%1#0",
        "dynamic_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0",
        "aggregate%len_u16%1#0"
      ]
    },
    "1800": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%len_u16%1#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0",
        "aggregate%len_u16%1#0",
        "fixed_struct#0"
      ]
    },
    "1802": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+(uint64,uint64)[])%1#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0",
        "aggregate%as_Encoded(len+(uint64,uint64)[])%1#0"
      ]
    },
    "1803": {
      "op": "cover 3",
      "defined_out": [
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "tmp%20#0",
        "tmp%18#0"
      ]
    },
    "1805": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "tmp%20#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "1806": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%4#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "tmp%20#0",
        "aggregate%as_Encoded(uint64)%4#0",
        "0x"
      ]
    },
    "1807": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "tmp%20#0",
        "0x",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "1809": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%9#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "tmp%20#0",
        "aggregate%head%9#0"
      ]
    },
    "1810": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%9#0",
        "tmp%20#0"
      ]
    },
    "1812": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#0",
        "aggregate%head%9#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%9#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "1813": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%10#0"
      ]
    },
    "1814": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%10#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%10#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1816": {
      "op": "len",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%length%2#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%10#0",
        "aggregate%length%2#0"
      ]
    },
    "1817": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "aggregate%head%10#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%10#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "1818": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%10#0",
        "aggregate%length_uint16%2#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "tmp%23#0",
        "aggregate%head%10#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "1821": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%10#0",
        "aggregate%length_uint16%2#0",
        "tmp%23#0"
      ]
    },
    "1823": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%10#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "1824": {
      "op": "pushint 22 // 22",
      "defined_out": [
        "22",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%10#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "22"
      ]
    },
    "1826": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%8#0",
        "aggregate%head%10#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%8#0"
      ]
    },
    "1827": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%3#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%10#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1830": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%10#0"
      ]
    },
    "1832": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%10#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1834": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%11#0"
      ]
    },
    "1835": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "1837": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0 (copy)",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0 (copy)"
      ]
    },
    "1838": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%data_length%3#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%data_length%3#0"
      ]
    },
    "1839": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%data_length%3#0",
        "22"
      ]
    },
    "1841": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0"
      ]
    },
    "1842": {
      "op": "bytec 5 // \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "\"Hello\""
      ]
    },
    "1844": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "aggregate%length%3#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%length%3#0"
      ]
    },
    "1845": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%9#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_bytes%9#0"
      ]
    },
    "1846": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "aggregate%length_uint16%3#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "1849": {
      "op": "bytec 5 // \"Hello\"",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%length_uint16%3#0",
        "\"Hello\""
      ]
    },
    "1851": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "1852": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%current_tail_offset%3#0 (copy)",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%3#0 (copy)"
      ]
    },
    "1854": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%10#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%10#0"
      ]
    },
    "1855": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%11#0",
        "aggregate%offset_as_uint16%4#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "1858": {
      "op": "uncover 4",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%4#0",
        "aggregate%head%11#0"
      ]
    },
    "1860": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%11#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "1862": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%12#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%12#0"
      ]
    },
    "1863": {
      "op": "cover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "1865": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0 (copy)",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%12#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0 (copy)"
      ]
    },
    "1866": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%data_length%4#0",
        "aggregate%head%12#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%data_length%4#0"
      ]
    },
    "1867": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%data_length%4#0",
        "aggregate%current_tail_offset%3#0"
      ]
    },
    "1869": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%4#0",
        "aggregate%head%12#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%current_tail_offset%4#0"
      ]
    },
    "1870": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%11#0",
        "aggregate%head%12#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%11#0"
      ]
    },
    "1871": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%offset_as_uint16%5#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "1874": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%5#0",
        "aggregate%head%12#0"
      ]
    },
    "1876": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%12#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "1878": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%13#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%13#0"
      ]
    },
    "1879": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%13#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "1881": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%concat%3#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%concat%3#0"
      ]
    },
    "1882": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%concat%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "1884": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%4#0",
        "dynamic_struct#0",
        "encoded_array%1#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "encoded_array%1#0",
        "aggregate%concat%4#0"
      ]
    },
    "1885": {
      "op": "uncover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "aggregate%concat%4#0",
        "encoded_array%1#0"
      ]
    },
    "1887": {
      "op": "concat",
      "defined_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%24#0"
      ]
    },
    "1888": {
      "op": "dup",
      "defined_out": [
        "dynamic_struct#0",
        "dynamic_struct#0 (copy)",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "dynamic_struct#0",
        "dynamic_struct#0 (copy)"
      ]
    },
    "1889": {
      "op": "frame_bury 0",
      "defined_out": [
        "dynamic_struct#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "dynamic_struct#0"
      ]
    },
    "1891": {
      "op": "itxn_begin",
      "defined_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1892": {
      "op": "frame_dig 2",
      "defined_out": [
        "app#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1894": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1896": {
      "op": "bytec 8 // method \"dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void\"",
      "defined_out": [
        "Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)",
        "app#0",
        "dynamic_struct#0",
        "fixed_struct#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)"
      ]
    },
    "1898": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1900": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1902": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "dynamic_struct#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1903": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1905": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1906": {
      "op": "itxn_field Fee",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1908": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@4"
    },
    "1911": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@4",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1912": {
      "op": "itxn_begin"
    },
    "1913": {
      "op": "frame_dig 2",
      "defined_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "1915": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1917": {
      "op": "bytec 13 // method \"dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[])\"",
      "defined_out": [
        "Method(dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[]))",
        "app#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "Method(dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[]))"
      ]
    },
    "1919": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1921": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1922": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1924": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1925": {
      "op": "itxn_field Fee",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1927": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@5"
    },
    "1930": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@5",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1931": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1933": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1934": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "awst_tmp%1#0",
        "tmp%25#0"
      ]
    },
    "1937": {
      "op": "cover 1",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%25#0",
        "awst_tmp%1#0"
      ]
    },
    "1939": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "1942": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%25#0",
        "tmp%26#0",
        "0x151f7c75"
      ]
    },
    "1943": {
      "op": "==",
      "defined_out": [
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%25#0",
        "tmp%27#0"
      ]
    },
    "1944": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "res#0"
      ]
    },
    "1945": {
      "op": "frame_dig 0",
      "defined_out": [
        "dynamic_struct#0",
        "res#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "res#0",
        "dynamic_struct#0"
      ]
    },
    "1947": {
      "op": "==",
      "defined_out": [
        "dynamic_struct#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "tmp%28#0"
      ]
    },
    "1948": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1949": {
      "op": "itxn_begin"
    },
    "1950": {
      "op": "frame_dig 2",
      "defined_out": [
        "app#0",
        "dynamic_struct#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "1952": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0",
        "dynamic_struct#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "DeleteApplication"
      ]
    },
    "1954": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "1956": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1958": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0",
        "dynamic_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "Method(delete()void)"
      ]
    },
    "1960": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1962": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "dynamic_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "appl"
      ]
    },
    "1963": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1965": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "dynamic_struct#0"
      ],
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0",
        "0"
      ]
    },
    "1966": {
      "op": "itxn_field Fee",
      "stack_out": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ]
    },
    "1968": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@6"
    },
    "1971": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct_next_txn@6",
      "stack_in": [
        "dynamic_struct#0",
        "fixed_struct#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "1972": {
      "retsub": true,
      "op": "retsub"
    },
    "1973": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array",
      "params": {},
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1976": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0"
      ]
    },
    "1977": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "1978": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_block@0"
    },
    "1981": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_block@0",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "1982": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "1983": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "1985": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "1986": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "1988": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "1989": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "1991": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "5"
      ]
    },
    "1993": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "1995": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "1996": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "1998": {
      "op": "bytec_2 // base64(CkIAAIEBQw==)",
      "defined_out": [
        "CkIAAIEBQw=="
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "CkIAAIEBQw=="
      ]
    },
    "1999": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2001": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        ""
      ]
    },
    "2002": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2004": {
      "op": "bytec_3 // base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=)",
      "defined_out": [
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ]
    },
    "2005": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2007": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        ""
      ]
    },
    "2008": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2010": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2011": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "2014": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2016": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@1"
    },
    "2019": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@1",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2020": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "create_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "create_txn.CreatedApplicationID#0"
      ]
    },
    "2022": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2023": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0"
      ]
    },
    "2025": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%0#0"
      ]
    },
    "2027": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%0#0",
        "1"
      ]
    },
    "2028": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "2029": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2031": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "2032": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "2033": {
      "op": "cover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "2035": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2036": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2037": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2039": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "2040": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "2042": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "app#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2043": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "2044": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "0x"
      ]
    },
    "2045": {
      "op": "dig 1",
      "defined_out": [
        "0x",
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "0x",
        "fixed_struct#0 (copy)"
      ]
    },
    "2047": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%2#0"
      ]
    },
    "2048": {
      "op": "dig 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%2#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "2050": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%3#0"
      ]
    },
    "2051": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "aggregate%head%3#0",
        "fixed_struct#0"
      ]
    },
    "2053": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "encoded_array%0#0"
      ]
    },
    "2054": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "fixed_arr#0",
        "fixed_arr#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_arr#0",
        "fixed_arr#0 (copy)"
      ]
    },
    "2055": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "fixed_arr#0"
      ]
    },
    "2057": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2058": {
      "op": "uncover 1",
      "defined_out": [
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2060": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2062": {
      "op": "bytec 9 // method \"fixed_arr_arg((uint64,uint64)[3])void\"",
      "defined_out": [
        "Method(fixed_arr_arg((uint64,uint64)[3])void)",
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(fixed_arr_arg((uint64,uint64)[3])void)"
      ]
    },
    "2064": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2066": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2068": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2069": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2071": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "2072": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2074": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@2"
    },
    "2077": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@2",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2078": {
      "op": "itxn_begin"
    },
    "2079": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2081": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2083": {
      "op": "bytec 14 // method \"fixed_arr_ret()(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(fixed_arr_ret()(uint64,uint64)[3])",
        "app#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "Method(fixed_arr_ret()(uint64,uint64)[3])"
      ]
    },
    "2085": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2087": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2088": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2090": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "2091": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2093": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@3"
    },
    "2096": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@3",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2097": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2099": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2100": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%5#0"
      ]
    },
    "2103": {
      "op": "cover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%5#0",
        "awst_tmp%0#0"
      ]
    },
    "2105": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2108": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "2109": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "2110": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "res#0"
      ]
    },
    "2111": {
      "op": "frame_dig 0",
      "defined_out": [
        "fixed_arr#0",
        "res#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "res#0",
        "fixed_arr#0"
      ]
    },
    "2113": {
      "op": "==",
      "defined_out": [
        "fixed_arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%8#0"
      ]
    },
    "2114": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2115": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "fixed_arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%9#0"
      ]
    },
    "2117": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "fixed_arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%9#0",
        "2"
      ]
    },
    "2118": {
      "op": "+",
      "defined_out": [
        "fixed_arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%10#0"
      ]
    },
    "2119": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "fixed_arr#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2121": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "fixed_arr#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0",
        "3"
      ]
    },
    "2123": {
      "op": "+",
      "defined_out": [
        "fixed_arr#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2124": {
      "op": "cover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%12#0",
        "tmp%10#0"
      ]
    },
    "2126": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "fixed_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%12#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2127": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0",
        "fixed_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%12#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "2128": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%12#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2130": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "fixed_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%12#0",
        "aggregate%head%5#0"
      ]
    },
    "2131": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "aggregate%head%5#0",
        "tmp%12#0"
      ]
    },
    "2133": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%5#0",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "2134": {
      "op": "concat",
      "defined_out": [
        "fixed_arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "2135": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_struct#0",
        "0x"
      ]
    },
    "2136": {
      "op": "dig 1",
      "defined_out": [
        "0x",
        "fixed_arr#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_struct#0",
        "0x",
        "fixed_struct#0 (copy)"
      ]
    },
    "2138": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "fixed_arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%7#0"
      ]
    },
    "2139": {
      "op": "dig 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%7#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "2141": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "fixed_arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%8#0"
      ]
    },
    "2142": {
      "op": "uncover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "aggregate%head%8#0",
        "fixed_struct#0"
      ]
    },
    "2144": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "encoded_array%1#0"
      ]
    },
    "2145": {
      "op": "dup",
      "defined_out": [
        "fixed_arr#0",
        "fixed_arr#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_arr#0",
        "fixed_arr#0 (copy)"
      ]
    },
    "2146": {
      "op": "frame_bury 0",
      "defined_out": [
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "fixed_arr#0"
      ]
    },
    "2148": {
      "op": "itxn_begin",
      "defined_out": [
        "fixed_arr#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2149": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "2151": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2153": {
      "op": "bytec 9 // method \"fixed_arr_arg((uint64,uint64)[3])void\"",
      "defined_out": [
        "Method(fixed_arr_arg((uint64,uint64)[3])void)",
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(fixed_arr_arg((uint64,uint64)[3])void)"
      ]
    },
    "2155": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2157": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2159": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2160": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "2163": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2165": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@4"
    },
    "2168": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@4",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2169": {
      "op": "itxn_begin"
    },
    "2170": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "2172": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2174": {
      "op": "bytec 14 // method \"fixed_arr_ret()(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(fixed_arr_ret()(uint64,uint64)[3])",
        "app#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "Method(fixed_arr_ret()(uint64,uint64)[3])"
      ]
    },
    "2176": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2178": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2179": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "2182": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2184": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@5"
    },
    "2187": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@5",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2188": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "2190": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2191": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2194": {
      "op": "cover 1",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%14#0",
        "awst_tmp%1#0"
      ]
    },
    "2196": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2199": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%14#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "2200": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "2201": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "res#0"
      ]
    },
    "2202": {
      "op": "frame_dig 0",
      "defined_out": [
        "fixed_arr#0",
        "res#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "res#0",
        "fixed_arr#0"
      ]
    },
    "2204": {
      "op": "==",
      "defined_out": [
        "fixed_arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "tmp%17#0"
      ]
    },
    "2205": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2206": {
      "op": "itxn_begin"
    },
    "2207": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "2209": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0",
        "fixed_arr#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "DeleteApplication"
      ]
    },
    "2211": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "2213": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2215": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "Method(delete()void)"
      ]
    },
    "2217": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2219": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2220": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2222": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "fixed_arr#0"
      ],
      "stack_out": [
        "fixed_arr#0",
        "app#0",
        "0"
      ]
    },
    "2223": {
      "op": "itxn_field Fee",
      "stack_out": [
        "fixed_arr#0",
        "app#0"
      ]
    },
    "2225": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@6"
    },
    "2228": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array_next_txn@6",
      "stack_in": [
        "fixed_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2229": {
      "retsub": true,
      "op": "retsub"
    },
    "2230": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array",
      "params": {},
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2233": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0"
      ]
    },
    "2234": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2235": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_block@0"
    },
    "2238": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_block@0",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "2239": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2240": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2242": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2243": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2245": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2246": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2248": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "5"
      ]
    },
    "2250": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2252": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2253": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2255": {
      "op": "bytec_2 // base64(CkIAAIEBQw==)",
      "defined_out": [
        "CkIAAIEBQw=="
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "CkIAAIEBQw=="
      ]
    },
    "2256": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2258": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        ""
      ]
    },
    "2259": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2261": {
      "op": "bytec_3 // base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=)",
      "defined_out": [
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ]
    },
    "2262": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2264": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "native_arr#0",
        "app#0",
        ""
      ]
    },
    "2265": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2267": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2268": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2270": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2271": {
      "op": "itxn_field Fee",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2273": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@1"
    },
    "2276": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@1",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2277": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "create_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "create_txn.CreatedApplicationID#0"
      ]
    },
    "2279": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2280": {
      "op": "frame_bury 1",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0"
      ]
    },
    "2282": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%0#0"
      ]
    },
    "2284": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%0#0",
        "1"
      ]
    },
    "2285": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "2286": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2288": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%2#0",
        "2"
      ]
    },
    "2289": {
      "op": "+",
      "defined_out": [
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "2290": {
      "op": "cover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "tmp%1#0"
      ]
    },
    "2292": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2293": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2294": {
      "op": "uncover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2296": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "app#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "2297": {
      "op": "uncover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "2299": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "app#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2300": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "2301": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "3"
      ]
    },
    "2303": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2304": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "2307": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%len_u16%0#0",
        "app#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%len_u16%0#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "2309": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%2#0"
      ]
    },
    "2310": {
      "op": "dig 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%2#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "2312": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%3#0"
      ]
    },
    "2313": {
      "op": "uncover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "aggregate%head%3#0",
        "fixed_struct#0"
      ]
    },
    "2315": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "encoded_array%0#0"
      ]
    },
    "2316": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "native_arr#0",
        "native_arr#0 (copy)"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "native_arr#0",
        "native_arr#0 (copy)"
      ]
    },
    "2317": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "native_arr#0"
      ]
    },
    "2319": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2320": {
      "op": "uncover 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2322": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2324": {
      "op": "bytec 10 // method \"native_arr_arg((uint64,uint64)[])void\"",
      "defined_out": [
        "Method(native_arr_arg((uint64,uint64)[])void)",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(native_arr_arg((uint64,uint64)[])void)"
      ]
    },
    "2326": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2328": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2330": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2331": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2333": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2334": {
      "op": "itxn_field Fee",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2336": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@2"
    },
    "2339": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@2",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2340": {
      "op": "itxn_begin"
    },
    "2341": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2343": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2345": {
      "op": "bytec 15 // method \"native_arr_ret()(uint64,uint64)[]\"",
      "defined_out": [
        "Method(native_arr_ret()(uint64,uint64)[])",
        "app#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "Method(native_arr_ret()(uint64,uint64)[])"
      ]
    },
    "2347": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2349": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2350": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2352": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2353": {
      "op": "itxn_field Fee",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2355": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@3"
    },
    "2358": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@3",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2359": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2361": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2362": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%5#0"
      ]
    },
    "2365": {
      "op": "cover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%5#0",
        "awst_tmp%0#0"
      ]
    },
    "2367": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2370": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "2371": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "2372": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "res#0"
      ]
    },
    "2373": {
      "op": "frame_dig 0",
      "defined_out": [
        "native_arr#0",
        "res#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "res#0",
        "native_arr#0"
      ]
    },
    "2375": {
      "op": "==",
      "defined_out": [
        "native_arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%8#0"
      ]
    },
    "2376": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2377": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "native_arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%9#0"
      ]
    },
    "2379": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "native_arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%9#0",
        "2"
      ]
    },
    "2380": {
      "op": "+",
      "defined_out": [
        "native_arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%10#0"
      ]
    },
    "2381": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "native_arr#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2383": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "native_arr#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0",
        "3"
      ]
    },
    "2385": {
      "op": "+",
      "defined_out": [
        "native_arr#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2386": {
      "op": "cover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%12#0",
        "tmp%10#0"
      ]
    },
    "2388": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "native_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%12#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2389": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0",
        "native_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%12#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "2390": {
      "op": "uncover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%12#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2392": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "native_arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%12#0",
        "aggregate%head%5#0"
      ]
    },
    "2393": {
      "op": "uncover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "aggregate%head%5#0",
        "tmp%12#0"
      ]
    },
    "2395": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%5#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "2396": {
      "op": "concat",
      "defined_out": [
        "fixed_struct#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "2397": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "3"
      ]
    },
    "2399": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "fixed_struct#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2400": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%1#0",
        "fixed_struct#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%len_u16%1#0"
      ]
    },
    "2403": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%len_u16%1#0",
        "fixed_struct#0",
        "fixed_struct#0 (copy)",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%len_u16%1#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "2405": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "fixed_struct#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%7#0"
      ]
    },
    "2406": {
      "op": "dig 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%7#0",
        "fixed_struct#0 (copy)"
      ]
    },
    "2408": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "fixed_struct#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "fixed_struct#0",
        "aggregate%head%8#0"
      ]
    },
    "2409": {
      "op": "uncover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "aggregate%head%8#0",
        "fixed_struct#0"
      ]
    },
    "2411": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "encoded_array%1#0"
      ]
    },
    "2412": {
      "op": "dup",
      "defined_out": [
        "native_arr#0",
        "native_arr#0 (copy)"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "native_arr#0",
        "native_arr#0 (copy)"
      ]
    },
    "2413": {
      "op": "frame_bury 0",
      "defined_out": [
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "native_arr#0"
      ]
    },
    "2415": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2416": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "2418": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2420": {
      "op": "bytec 10 // method \"native_arr_arg((uint64,uint64)[])void\"",
      "defined_out": [
        "Method(native_arr_arg((uint64,uint64)[])void)",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(native_arr_arg((uint64,uint64)[])void)"
      ]
    },
    "2422": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2424": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2426": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2427": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2429": {
      "op": "intc_0 // 0",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2430": {
      "op": "itxn_field Fee",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2432": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@4"
    },
    "2435": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@4",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2436": {
      "op": "itxn_begin"
    },
    "2437": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "2439": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2441": {
      "op": "bytec 15 // method \"native_arr_ret()(uint64,uint64)[]\"",
      "defined_out": [
        "Method(native_arr_ret()(uint64,uint64)[])",
        "app#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "Method(native_arr_ret()(uint64,uint64)[])"
      ]
    },
    "2443": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2445": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2446": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2448": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2449": {
      "op": "itxn_field Fee",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2451": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@5"
    },
    "2454": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@5",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2455": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "2457": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2458": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "awst_tmp%1#0",
        "tmp%14#0"
      ]
    },
    "2461": {
      "op": "cover 1",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%14#0",
        "awst_tmp%1#0"
      ]
    },
    "2463": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2466": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%14#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "2467": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "2468": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "res#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "res#0"
      ]
    },
    "2469": {
      "op": "frame_dig 0",
      "defined_out": [
        "native_arr#0",
        "res#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "res#0",
        "native_arr#0"
      ]
    },
    "2471": {
      "op": "==",
      "defined_out": [
        "native_arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "tmp%17#0"
      ]
    },
    "2472": {
      "error": "should be the same",
      "op": "assert // should be the same",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2473": {
      "op": "itxn_begin"
    },
    "2474": {
      "op": "frame_dig 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "2476": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0",
        "DeleteApplication"
      ]
    },
    "2478": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "native_arr#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "2480": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2482": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "Method(delete()void)"
      ]
    },
    "2484": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2486": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "appl"
      ]
    },
    "2487": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2489": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "native_arr#0"
      ],
      "stack_out": [
        "native_arr#0",
        "app#0",
        "0"
      ]
    },
    "2490": {
      "op": "itxn_field Fee",
      "stack_out": [
        "native_arr#0",
        "app#0"
      ]
    },
    "2492": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@6"
    },
    "2495": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array_next_txn@6",
      "stack_in": [
        "native_arr#0",
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2496": {
      "retsub": true,
      "op": "retsub"
    },
    "2497": {
      "subroutine": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log",
      "params": {},
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2500": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "app#0"
      ]
    },
    "2501": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_block@0"
    },
    "2504": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_block@0",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_begin"
    },
    "2505": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2506": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "app#0"
      ]
    },
    "2508": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2509": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "app#0"
      ]
    },
    "2511": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2512": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "app#0"
      ]
    },
    "2514": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "app#0",
        "5"
      ]
    },
    "2516": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "app#0"
      ]
    },
    "2518": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2519": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "2521": {
      "op": "bytec_2 // base64(CkIAAIEBQw==)",
      "defined_out": [
        "CkIAAIEBQw=="
      ],
      "stack_out": [
        "app#0",
        "CkIAAIEBQw=="
      ]
    },
    "2522": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "2524": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "app#0",
        ""
      ]
    },
    "2525": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "2527": {
      "op": "bytec_3 // base64(CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70=)",
      "defined_out": [
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ],
      "stack_out": [
        "app#0",
        "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyQgAAMRhAAAlCAACIAI9CAACIARNDQgAAiACGIkNCAAA2GgGIAH8iQ0IAAIgAgihPAVCwIkNCAAA2GgGIAHoiQ0IAAIgAfShPAVCwIkNCAAA2GgGIAHUiQ0IAAIgAeChPAVCwIkNCAAA2GgGIAHAiQ0IAAIgAdChPAVCwIkNCAAA2GgGIAG0iQ0IAAIgAcShPAVCwIkNCAACIAG0iQ0IAAIlCAACJigEAQgAAKYv/Z4lCAAAjKWVEiYoBAEIAACqL/2eJQgAAIyplRImKAQBCAAAri/9niUIAACMrZUSJigEAQgAAJwSL/2eJQgAAIycEZUSJigEAQgAAJwWL/2eJQgAAIycFZUSJQgAAIyllRLAjKmVEsCMrZUSwIycEZUSwIycFZUSwiUIAAEIAADEYFDEZIpAIIyKBAoEDgQSBBYEGgQeBCIEJgQqBC08MjgwATgA7ADgANQAyAC8ALAApACYAIwAHAARCAAAAQv/8NhoAgAQkN408TwGOAQAHQgAAQgAAAIj+jkL/+UL/3UL/2kL/10L/1EL/0UL/zkL/y0L/yDEbIxJBAAtCAABCAABCAAAiQwA2GgCABBGxm5WABNKLlkqABOoYZV+ABLs7/beABEbsFKCABJtNCSaABE8N61CABFlmSraABBJdE3aABIGOSmKABJu+EDJPC44LAEMAPQA3ADEAKwAlAB8AGQATAA0AB0IAAEIAAACI/ndC//mI/mRC//OI/lNC/+2I/kBC/+eI/i9C/+GI/hxC/9uI/gtC/9WI/fhC/8+I/edC/8mI/dRC/8OI/cNC/70="
      ]
    },
    "2528": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "2530": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "app#0",
        ""
      ]
    },
    "2531": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "app#0"
      ]
    },
    "2533": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2534": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2536": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2537": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2539": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@1"
    },
    "2542": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@1",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2543": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "create_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "app#0",
        "create_txn.CreatedApplicationID#0"
      ]
    },
    "2545": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2546": {
      "op": "frame_bury 0",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "app#0"
      ]
    },
    "2548": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "16"
      ]
    },
    "2550": {
      "op": "bzero",
      "defined_out": [
        "app#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "fixed_struct#0"
      ]
    },
    "2551": {
      "op": "itxn_begin",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2552": {
      "op": "uncover 1",
      "defined_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2554": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2556": {
      "op": "bytec 6 // method \"fixed_struct_arg((uint64,uint64))void\"",
      "defined_out": [
        "Method(fixed_struct_arg((uint64,uint64))void)",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(fixed_struct_arg((uint64,uint64))void)"
      ]
    },
    "2558": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2560": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2562": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2563": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2565": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2566": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2568": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@2"
    },
    "2571": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@2",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2572": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24"
      ],
      "stack_out": [
        "app#0",
        "24"
      ]
    },
    "2574": {
      "op": "bzero",
      "defined_out": [
        "nested_struct#0"
      ],
      "stack_out": [
        "app#0",
        "nested_struct#0"
      ]
    },
    "2575": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2576": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2578": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2580": {
      "op": "bytec 7 // method \"nested_struct_arg(((uint64,uint64),uint64))void\"",
      "defined_out": [
        "Method(nested_struct_arg(((uint64,uint64),uint64))void)",
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(nested_struct_arg(((uint64,uint64),uint64))void)"
      ]
    },
    "2582": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2584": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2586": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2587": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2589": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2590": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2592": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@3"
    },
    "2595": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@3",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2596": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2597": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "app#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2598": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0"
      ]
    },
    "2601": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "0"
      ]
    },
    "2602": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2603": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2604": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2606": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%0#0"
      ]
    },
    "2607": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%0#0",
        "0"
      ]
    },
    "2608": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2609": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0"
      ]
    },
    "2610": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "0x"
      ]
    },
    "2611": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "2612": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2613": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2616": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "0x"
      ]
    },
    "2617": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "2618": {
      "op": "pushint 22 // 22",
      "defined_out": [
        "22",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "22"
      ]
    },
    "2620": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2621": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2624": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%1#0"
      ]
    },
    "2626": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2628": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "2629": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "2631": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "2632": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "2633": {
      "op": "pushint 22 // 22",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "22"
      ]
    },
    "2635": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2636": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "\"\""
      ]
    },
    "2637": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%length%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "2638": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "2639": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "2642": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "\"\""
      ]
    },
    "2643": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "2644": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%0#0 (copy)",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0 (copy)"
      ]
    },
    "2646": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "2647": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2650": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%2#0"
      ]
    },
    "2652": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2654": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "2655": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "2657": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0 (copy)",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0 (copy)"
      ]
    },
    "2658": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%data_length%1#0"
      ]
    },
    "2659": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%data_length%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2661": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "2662": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "2663": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2666": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%3#0"
      ]
    },
    "2668": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2670": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0"
      ]
    },
    "2671": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "2673": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "2674": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "2676": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "app#0",
        "encoded_array%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "2677": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "aggregate%concat%1#0",
        "encoded_array%0#0"
      ]
    },
    "2679": {
      "op": "concat",
      "defined_out": [
        "dynamic_struct#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct#0"
      ]
    },
    "2680": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2681": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "2683": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2685": {
      "op": "bytec 8 // method \"dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void\"",
      "defined_out": [
        "Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)"
      ]
    },
    "2687": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2689": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2691": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2692": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2694": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2695": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2697": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@4"
    },
    "2700": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@4",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2701": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48"
      ],
      "stack_out": [
        "app#0",
        "48"
      ]
    },
    "2703": {
      "op": "bzero",
      "defined_out": [
        "fixed_arr#0"
      ],
      "stack_out": [
        "app#0",
        "fixed_arr#0"
      ]
    },
    "2704": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2705": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "2707": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2709": {
      "op": "bytec 9 // method \"fixed_arr_arg((uint64,uint64)[3])void\"",
      "defined_out": [
        "Method(fixed_arr_arg((uint64,uint64)[3])void)",
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "Method(fixed_arr_arg((uint64,uint64)[3])void)"
      ]
    },
    "2711": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2713": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2715": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2716": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2718": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2719": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2721": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@5"
    },
    "2724": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@5",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2725": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2726": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0"
      ],
      "stack_out": [
        "app#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "2727": {
      "op": "extract 6 2",
      "defined_out": [
        "native_arr#0"
      ],
      "stack_out": [
        "app#0",
        "native_arr#0"
      ]
    },
    "2730": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2731": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "2733": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2735": {
      "op": "bytec 10 // method \"native_arr_arg((uint64,uint64)[])void\"",
      "defined_out": [
        "Method(native_arr_arg((uint64,uint64)[])void)",
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "Method(native_arr_arg((uint64,uint64)[])void)"
      ]
    },
    "2737": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2739": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2741": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2742": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2744": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2745": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2747": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@6"
    },
    "2750": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@6",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2751": {
      "op": "itxn_begin"
    },
    "2752": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "inner_txn_params%6%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%6%%param_ApplicationID_idx_0#0"
      ]
    },
    "2754": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2756": {
      "op": "pushbytes 0x9bbe1032 // method \"log_it()void\"",
      "defined_out": [
        "Method(log_it()void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log_it()void)"
      ]
    },
    "2762": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2764": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2765": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2767": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2768": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2770": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@7"
    },
    "2773": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@7",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2774": {
      "op": "itxn NumLogs",
      "defined_out": [
        "txn.NumLogs#0"
      ],
      "stack_out": [
        "app#0",
        "txn.NumLogs#0"
      ]
    },
    "2776": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "txn.NumLogs#0"
      ],
      "stack_out": [
        "app#0",
        "txn.NumLogs#0",
        "5"
      ]
    },
    "2778": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "2779": {
      "error": "expected 5 logs",
      "op": "assert // expected 5 logs",
      "stack_out": [
        "app#0"
      ]
    },
    "2780": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2781": {
      "op": "itxnas Logs",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%5#0"
      ]
    },
    "2783": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "tmp%5#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%5#0",
        "16"
      ]
    },
    "2785": {
      "op": "bzero",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2786": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0"
      ]
    },
    "2787": {
      "error": "expected fixed struct",
      "op": "assert // expected fixed struct",
      "stack_out": [
        "app#0"
      ]
    },
    "2788": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "app#0",
        "1"
      ]
    },
    "2789": {
      "op": "itxnas Logs",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#0"
      ]
    },
    "2791": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "tmp%8#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#0",
        "24"
      ]
    },
    "2793": {
      "op": "bzero",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2794": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#0"
      ]
    },
    "2795": {
      "error": "expected nested struct",
      "op": "assert // expected nested struct",
      "stack_out": [
        "app#0"
      ]
    },
    "2796": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "app#0",
        "8"
      ]
    },
    "2798": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "app#0",
        "8",
        "2"
      ]
    },
    "2799": {
      "op": "*",
      "defined_out": [
        "dynamic_struct_len#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0"
      ]
    },
    "2800": {
      "op": "intc_1 // 6",
      "defined_out": [
        "6",
        "dynamic_struct_len#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0",
        "6"
      ]
    },
    "2801": {
      "op": "+",
      "defined_out": [
        "dynamic_struct_len#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0"
      ]
    },
    "2802": {
      "op": "intc_1 // 6",
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0",
        "6"
      ]
    },
    "2803": {
      "op": "+",
      "defined_out": [
        "dynamic_struct_len#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0"
      ]
    },
    "2804": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0",
        "2"
      ]
    },
    "2805": {
      "op": "itxnas Logs",
      "defined_out": [
        "dynamic_struct_len#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0",
        "tmp%14#0"
      ]
    },
    "2807": {
      "op": "len",
      "defined_out": [
        "dynamic_struct_len#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "app#0",
        "dynamic_struct_len#0",
        "tmp%15#0"
      ]
    },
    "2808": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%16#0"
      ]
    },
    "2809": {
      "error": "expected dynamic struct",
      "op": "assert // expected dynamic struct",
      "stack_out": [
        "app#0"
      ]
    },
    "2810": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "app#0",
        "3"
      ]
    },
    "2812": {
      "op": "itxnas Logs",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%17#0"
      ]
    },
    "2814": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "tmp%17#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%17#0",
        "48"
      ]
    },
    "2816": {
      "op": "bzero",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2817": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%19#0"
      ]
    },
    "2818": {
      "error": "expected fixed array",
      "op": "assert // expected fixed array",
      "stack_out": [
        "app#0"
      ]
    },
    "2819": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "app#0",
        "4"
      ]
    },
    "2821": {
      "op": "itxnas Logs",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#0"
      ]
    },
    "2823": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%20#0",
        "2"
      ]
    },
    "2824": {
      "op": "bzero",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "2825": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%22#0"
      ]
    },
    "2826": {
      "error": "expected fixed array",
      "op": "assert // expected fixed array",
      "stack_out": [
        "app#0"
      ]
    },
    "2827": {
      "op": "itxn_begin"
    },
    "2828": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "inner_txn_params%7%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%7%%param_ApplicationID_idx_0#0"
      ]
    },
    "2830": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "app#0",
        "inner_txn_params%7%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "inner_txn_params%7%%param_ApplicationID_idx_0#0",
        "DeleteApplication"
      ]
    },
    "2832": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "app#0",
        "inner_txn_params%7%%param_ApplicationID_idx_0#0"
      ]
    },
    "2834": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2836": {
      "op": "bytec 4 // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(delete()void)"
      ]
    },
    "2838": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2840": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2841": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2843": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2844": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2846": {
      "op": "b test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@8"
    },
    "2849": {
      "block": "test_cases.mutable_native_types.abi_call.TestAbiCall.test_log_next_txn@8",
      "stack_in": [
        "app#0"
      ],
      "op": "itxn_submit"
    },
    "2850": {
      "retsub": true,
      "op": "retsub"
    }
  }
}