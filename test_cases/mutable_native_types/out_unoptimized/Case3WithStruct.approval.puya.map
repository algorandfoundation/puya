{
  "version": 3,
  "sources": [
    "../case3_with_mutable_struct.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCK;;;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;;;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AASA;;;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAMA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAMA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAaA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAjEU;AAAA;;;AAAA;AAAP;AAC2B;;AAA3B;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACyB;;AAAzB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;;AAAkC;AAAlC;AAAA;AAAA;;AAAA;;;;;AAIO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;;;;;;AAEQ;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAA3B;AAAP;AACA;AAAA;AAAA;AAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AAA5B;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAER;;;;;;AAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;;;;AAEgB;AACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACG;AAAA;AAAA;AAAA;AAAA;AAAT;;AAAA;AACS;;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;;;;;AAHK;;AAAA;AAAA;AAAA;;;;;AAIT;AAER;;;;;;;AAEwB;;AAAA;AAAA;AAAP;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACQ;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAb;;;AAAA;;;;;AADK;;AAAA;AAAA;AAAA;;;;;;AAGjB;;;;;;;AAEiB;AAAjB;AAAiB;;;;AAAjB;;AAAwB;;AAAxB;AAAA;;;AAAA;;;AAAiB;;AACQ;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAb;;;AAAA;;;;;AADK;;AAAA;AAAA;AAAA;;;;;;AAGjB;;;;;;AAEQ;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACL;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;AADK;;AAAA;AAAA;AAAA;;;;;;AAGjB;;;;;;AAEQ;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACL;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;AADK;;AAAA;AAAA;AAAA;;;;;;AAGjB;;;;;;AAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;;AAAQ;;AAAR;AAA5B;AAAP;AACQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AACM;;AAAQ;AAAR;AAAN;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AACM;;AAAQ;;AAAR;AAAN;AAAA;AAAA;AAAA;AAJD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAQR;;;;;;AAEiB;AAAA;AAAA;;;AACD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAjB;AAAiB;;;;AAAjB;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAiB;;AACS;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAd;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAET;;;;AAIO;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA4B;;AAA5B;AAAP;AAEI;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA0B;;AAA1B;AADJ;;;;;;;;AApFR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAAA;AAuEK;;;;;;AAbA;;;;;;AANA;;;;;;AANA;;;;;;AALA;;;;;;AALA;;;;;;AATA;;;;;;AALA;;;;;;AAPA;;;;;;AAJA;;;;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 16 128 34176"
    },
    "12": {
      "op": "bytecblock \"tup_bag\" 0x151f7c75 0x"
    },
    "28": {
      "op": "b main_block@0"
    },
    "31": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "36": {
      "op": "b main_call___init__@1"
    },
    "39": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__init__",
      "op": "callsub __init__"
    },
    "42": {
      "op": "b main_after_if_else@2"
    },
    "45": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "48": {
      "op": "return",
      "stack_out": []
    },
    "49": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box[routing]",
      "params": {},
      "block": "create_box",
      "stack_in": [],
      "op": "b create_box_block@0"
    },
    "52": {
      "block": "create_box_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box"
    },
    "55": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "56": {
      "op": "return",
      "stack_out": []
    },
    "57": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups[routing]",
      "params": {},
      "block": "num_tups",
      "stack_in": [],
      "op": "b num_tups_block@0"
    },
    "60": {
      "block": "num_tups_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "63": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "64": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "65": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "67": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "68": {
      "op": "log",
      "stack_out": []
    },
    "69": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "70": {
      "op": "return",
      "stack_out": []
    },
    "71": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup[routing]",
      "params": {},
      "block": "add_tup",
      "stack_in": [],
      "op": "b add_tup_block@0"
    },
    "74": {
      "block": "add_tup_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "77": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "defined_out": [
        "add_tup%0#0"
      ],
      "stack_out": [
        "add_tup%0#0"
      ]
    },
    "80": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "add_tup%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "1"
      ]
    },
    "81": {
      "op": "return",
      "stack_out": [
        "add_tup%0#0"
      ]
    },
    "82": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup[routing]",
      "params": {},
      "block": "get_tup",
      "stack_in": [],
      "op": "b get_tup_block@0"
    },
    "85": {
      "block": "get_tup_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "88": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "89": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "92": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "93": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "95": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "96": {
      "op": "log",
      "stack_out": []
    },
    "97": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "98": {
      "op": "return",
      "stack_out": []
    },
    "99": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum[routing]",
      "params": {},
      "block": "sum",
      "stack_in": [],
      "op": "b sum_block@0"
    },
    "102": {
      "block": "sum_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "105": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "106": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "107": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "109": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "110": {
      "op": "log",
      "stack_out": []
    },
    "111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "112": {
      "op": "return",
      "stack_out": []
    },
    "113": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups[routing]",
      "params": {},
      "block": "add_many_tups",
      "stack_in": [],
      "op": "b add_many_tups_block@0"
    },
    "116": {
      "block": "add_many_tups_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "119": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups",
      "stack_out": []
    },
    "122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "123": {
      "op": "return",
      "stack_out": []
    },
    "124": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups[routing]",
      "params": {},
      "block": "add_fixed_tups",
      "stack_in": [],
      "op": "b add_fixed_tups_block@0"
    },
    "127": {
      "block": "add_fixed_tups_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64)[3])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64)[3])%0#0"
      ]
    },
    "130": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups",
      "stack_out": []
    },
    "133": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "134": {
      "op": "return",
      "stack_out": []
    },
    "135": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a[routing]",
      "params": {},
      "block": "set_a",
      "stack_in": [],
      "op": "b set_a_block@0"
    },
    "138": {
      "block": "set_a_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "141": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "142": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a",
      "stack_out": []
    },
    "145": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "146": {
      "op": "return",
      "stack_out": []
    },
    "147": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b[routing]",
      "params": {},
      "block": "set_b",
      "stack_in": [],
      "op": "b set_b_block@0"
    },
    "150": {
      "block": "set_b_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "153": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "154": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b",
      "stack_out": []
    },
    "157": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "158": {
      "op": "return",
      "stack_out": []
    },
    "159": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups[routing]",
      "params": {},
      "block": "get_3_tups",
      "stack_in": [],
      "op": "b get_3_tups_block@0"
    },
    "162": {
      "block": "get_3_tups_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "165": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "166": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "169": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "170": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "172": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "173": {
      "op": "log",
      "stack_out": []
    },
    "174": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "175": {
      "op": "return",
      "stack_out": []
    },
    "176": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups[routing]",
      "params": {},
      "block": "get_all_tups",
      "stack_in": [],
      "op": "b get_all_tups_block@0"
    },
    "179": {
      "block": "get_all_tups_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "182": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "183": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "185": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "186": {
      "op": "log",
      "stack_out": []
    },
    "187": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "188": {
      "op": "return",
      "stack_out": []
    },
    "189": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "192": {
      "block": "__init___block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "193": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box",
      "params": {},
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box",
      "stack_in": [],
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box_block@0"
    },
    "196": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "197": {
      "op": "pushint 4273 // 4273",
      "defined_out": [
        "\"tup_bag\"",
        "4273"
      ],
      "stack_out": [
        "\"tup_bag\"",
        "4273"
      ]
    },
    "200": {
      "op": "box_create",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "201": {
      "error": "box already exists",
      "op": "assert // box already exists",
      "stack_out": []
    },
    "202": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "204": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tmp%1#0",
        "\"tup_bag\""
      ]
    },
    "205": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "206": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ]
    },
    "207": {
      "op": "pushint 136 // 136",
      "defined_out": [
        "136",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "136"
      ]
    },
    "210": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "136",
        "encoded_value%0#0"
      ]
    },
    "212": {
      "op": "replace3",
      "defined_out": [
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "updated_tuple%0#0"
      ]
    },
    "213": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "updated_tuple%0#0",
        "\"tup_bag\""
      ]
    },
    "214": {
      "op": "uncover 1",
      "stack_out": [
        "\"tup_bag\"",
        "updated_tuple%0#0"
      ]
    },
    "216": {
      "op": "box_put",
      "stack_out": []
    },
    "217": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "219": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tmp%2#0",
        "\"tup_bag\""
      ]
    },
    "220": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "221": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "storage_value%1#0"
      ]
    },
    "222": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%1#0",
        "tmp%2#0"
      ]
    },
    "224": {
      "op": "itob",
      "defined_out": [
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "encoded_value%1#0"
      ]
    },
    "225": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0"
      ]
    },
    "227": {
      "op": "pushint 168 // 168",
      "defined_out": [
        "168",
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "168"
      ]
    },
    "230": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%1#0",
        "168",
        "encoded_value%1#0"
      ]
    },
    "232": {
      "op": "replace3",
      "defined_out": [
        "updated_tuple%1#0"
      ],
      "stack_out": [
        "updated_tuple%1#0"
      ]
    },
    "233": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "updated_tuple%1#0",
        "\"tup_bag\""
      ]
    },
    "234": {
      "op": "uncover 1",
      "stack_out": [
        "\"tup_bag\"",
        "updated_tuple%1#0"
      ]
    },
    "236": {
      "op": "box_put",
      "stack_out": []
    },
    "237": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "238": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ],
      "stack_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "239": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0"
      ]
    },
    "240": {
      "op": "intc 5 // 34176",
      "defined_out": [
        "34176",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "34176"
      ]
    },
    "242": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "34176",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "34176",
        "1"
      ]
    },
    "243": {
      "op": "setbit",
      "defined_out": [
        "updated_tuple%2#0"
      ],
      "stack_out": [
        "updated_tuple%2#0"
      ]
    },
    "244": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "updated_tuple%2#0",
        "\"tup_bag\""
      ]
    },
    "245": {
      "op": "uncover 1",
      "stack_out": [
        "\"tup_bag\"",
        "updated_tuple%2#0"
      ]
    },
    "247": {
      "op": "box_put",
      "stack_out": []
    },
    "248": {
      "retsub": true,
      "op": "retsub"
    },
    "249": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups",
      "params": {},
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups",
      "stack_in": [],
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups_block@0"
    },
    "252": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "253": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "254": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "255": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "256": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "257": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "258": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "259": {
      "retsub": true,
      "op": "retsub"
    },
    "260": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "params": {
        "tup#0": "bytes"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "263": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup_block@0"
    },
    "266": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0"
      ]
    },
    "268": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "op": "callsub _check_owner"
    },
    "271": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "\"tup_bag\""
      ]
    },
    "272": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "273": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%0#0"
      ]
    },
    "274": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "275": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "276": {
      "op": "extract3",
      "defined_out": [
        "tup%out#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup%out#0",
        "tuple_item%0#0"
      ]
    },
    "277": {
      "op": "btoi",
      "defined_out": [
        "tup%out#0",
        "values%0#0"
      ],
      "stack_out": [
        "tup%out#0",
        "values%0#0"
      ]
    },
    "278": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tup%out#0",
        "values%0#0",
        "8"
      ]
    },
    "279": {
      "op": "<",
      "defined_out": [
        "tmp%0#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "tmp%0#0"
      ]
    },
    "280": {
      "error": "too many tups",
      "op": "assert // too many tups",
      "stack_out": [
        "tup%out#0"
      ]
    },
    "281": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tup%out#0",
        "\"tup_bag\""
      ]
    },
    "282": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "283": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0"
      ]
    },
    "284": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "\"tup_bag\""
      ]
    },
    "285": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "storage_value%1#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "286": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0",
        "storage_value%2#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "storage_value%2#0"
      ]
    },
    "287": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "storage_value%2#0",
        "0"
      ]
    },
    "288": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "storage_value%2#0",
        "0",
        "8"
      ]
    },
    "289": {
      "op": "extract3",
      "defined_out": [
        "storage_value%1#0",
        "tup%out#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "tuple_item%1#0"
      ]
    },
    "290": {
      "op": "btoi",
      "defined_out": [
        "storage_value%1#0",
        "tup%out#0",
        "values%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "values%1#0"
      ]
    },
    "291": {
      "op": "dig 1",
      "defined_out": [
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "tup%out#0",
        "values%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "values%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "293": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "values%1#0",
        "storage_value%1#0 (copy)",
        "8"
      ]
    },
    "294": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "tup%out#0",
        "values%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "values%1#0",
        "storage_value%1#0 (copy)",
        "8",
        "128"
      ]
    },
    "296": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "storage_value%1#0",
        "tup%out#0",
        "values%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "values%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "297": {
      "op": "uncover 1",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "aggregate%extract%2#0",
        "values%1#0"
      ]
    },
    "299": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%2#0",
        "storage_value%1#0",
        "tup%out#0",
        "values%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "aggregate%extract%2#0",
        "values%1#0",
        "16"
      ]
    },
    "300": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%write_offset%0#0",
        "storage_value%1#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "aggregate%extract%2#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "301": {
      "op": "frame_dig -1",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "aggregate%extract%2#0",
        "aggregate%write_offset%0#0",
        "tup#0 (copy)"
      ]
    },
    "303": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "304": {
      "op": "uncover 1",
      "stack_out": [
        "tup%out#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0"
      ]
    },
    "306": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tup%out#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "8"
      ]
    },
    "307": {
      "op": "uncover 2",
      "stack_out": [
        "tup%out#0",
        "storage_value%1#0",
        "8",
        "aggregate%updated_array%0#0"
      ]
    },
    "309": {
      "op": "replace3",
      "defined_out": [
        "tup%out#0",
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "tup%out#0",
        "updated_tuple%0#0"
      ]
    },
    "310": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tup%out#0",
        "updated_tuple%0#0",
        "\"tup_bag\""
      ]
    },
    "311": {
      "op": "uncover 1",
      "stack_out": [
        "tup%out#0",
        "\"tup_bag\"",
        "updated_tuple%0#0"
      ]
    },
    "313": {
      "op": "box_put",
      "stack_out": [
        "tup%out#0"
      ]
    },
    "314": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tup%out#0",
        "\"tup_bag\""
      ]
    },
    "315": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "316": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%3#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0"
      ]
    },
    "317": {
      "op": "dup",
      "defined_out": [
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "318": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "0"
      ]
    },
    "319": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "320": {
      "op": "extract3",
      "defined_out": [
        "storage_value%3#0",
        "tup%out#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "tuple_item%2#0"
      ]
    },
    "321": {
      "op": "btoi",
      "defined_out": [
        "storage_value%3#0",
        "tup%out#0",
        "values%2#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "values%2#0"
      ]
    },
    "322": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "storage_value%3#0",
        "tup%out#0",
        "values%2#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "values%2#0",
        "1"
      ]
    },
    "323": {
      "op": "+",
      "defined_out": [
        "storage_value%3#0",
        "tmp%1#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "tmp%1#0"
      ]
    },
    "324": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%3#0",
        "tup%out#0"
      ],
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "encoded_value%0#0"
      ]
    },
    "325": {
      "op": "uncover 1",
      "stack_out": [
        "tup%out#0",
        "encoded_value%0#0",
        "storage_value%3#0"
      ]
    },
    "327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup%out#0",
        "encoded_value%0#0",
        "storage_value%3#0",
        "0"
      ]
    },
    "328": {
      "op": "uncover 2",
      "stack_out": [
        "tup%out#0",
        "storage_value%3#0",
        "0",
        "encoded_value%0#0"
      ]
    },
    "330": {
      "op": "replace3",
      "defined_out": [
        "tup%out#0",
        "updated_tuple%1#0"
      ],
      "stack_out": [
        "tup%out#0",
        "updated_tuple%1#0"
      ]
    },
    "331": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "tup%out#0",
        "updated_tuple%1#0",
        "\"tup_bag\""
      ]
    },
    "332": {
      "op": "uncover 1",
      "stack_out": [
        "tup%out#0",
        "\"tup_bag\"",
        "updated_tuple%1#0"
      ]
    },
    "334": {
      "op": "box_put",
      "stack_out": [
        "tup%out#0"
      ]
    },
    "335": {
      "retsub": true,
      "op": "retsub"
    },
    "336": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup",
      "params": {
        "index#0": "uint64"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "339": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup_block@0"
    },
    "342": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "343": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "344": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "345": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "346": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "347": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "348": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "349": {
      "op": "frame_dig -1",
      "defined_out": [
        "index#0 (copy)",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "index#0 (copy)"
      ]
    },
    "351": {
      "op": ">",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "352": {
      "error": "index out of bounds",
      "op": "assert // index out of bounds",
      "stack_out": []
    },
    "353": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "354": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "355": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0"
      ]
    },
    "356": {
      "op": "intc_2 // 8",
      "stack_out": [
        "storage_value%1#0",
        "8"
      ]
    },
    "357": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "8",
        "128"
      ]
    },
    "359": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tuple_item%1#0"
      ]
    },
    "360": {
      "op": "frame_dig -1",
      "stack_out": [
        "tuple_item%1#0",
        "index#0 (copy)"
      ]
    },
    "362": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "index#0 (copy)",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tuple_item%1#0",
        "index#0 (copy)",
        "16"
      ]
    },
    "363": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tuple_item%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "364": {
      "op": "intc_3 // 16",
      "stack_out": [
        "tuple_item%1#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "365": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0"
      ],
      "stack_out": [
        "array_item%0#0"
      ]
    },
    "366": {
      "retsub": true,
      "op": "retsub"
    },
    "367": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum",
      "params": {},
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "370": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_block@0"
    },
    "373": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "374": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "total#0",
        "\"tup_bag\""
      ]
    },
    "375": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "376": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0"
      ]
    },
    "377": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "378": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "379": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "total#0",
        "tuple_item%0#0"
      ]
    },
    "380": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0"
      ]
    },
    "381": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "1"
      ]
    },
    "382": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "total#0",
        "values%0#0"
      ]
    },
    "383": {
      "op": "intc_0 // 0",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "384": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_header@1"
    },
    "387": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_header@1",
      "stack_in": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "389": {
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "values%0#0"
      ]
    },
    "391": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "392": {
      "op": "bz test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_after_for@4",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "395": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_body@2"
    },
    "398": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_body@2",
      "stack_in": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "400": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "\"tup_bag\""
      ]
    },
    "401": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "402": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0"
      ]
    },
    "403": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "8"
      ]
    },
    "404": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "8",
        "128"
      ]
    },
    "406": {
      "op": "extract3",
      "defined_out": [
        "i#1",
        "tuple_item%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "tuple_item%1#0"
      ]
    },
    "407": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tuple_item%1#0",
        "i#1"
      ]
    },
    "409": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "i#1",
        "tuple_item%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tuple_item%1#0",
        "i#1",
        "16"
      ]
    },
    "410": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "tuple_item%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tuple_item%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "411": {
      "op": "intc_3 // 16",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tuple_item%1#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "412": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "tup#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0"
      ]
    },
    "413": {
      "op": "dup",
      "defined_out": [
        "tup#0",
        "tup#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "414": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tup#0",
        "tup#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "tup#0 (copy)",
        "0"
      ]
    },
    "415": {
      "op": "intc_2 // 8",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "tup#0 (copy)",
        "0",
        "8"
      ]
    },
    "416": {
      "op": "extract3",
      "defined_out": [
        "tup#0",
        "tuple_item%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "tuple_item%2#0"
      ]
    },
    "417": {
      "op": "btoi",
      "defined_out": [
        "tup#0",
        "value_internal%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "values%1#0"
      ]
    },
    "418": {
      "op": "frame_dig 0",
      "defined_out": [
        "total#0",
        "tup#0",
        "value_internal%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "values%1#0",
        "total#0"
      ]
    },
    "420": {
      "op": "+",
      "defined_out": [
        "total#0",
        "tup#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tup#0",
        "total#0"
      ]
    },
    "421": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "total#0",
        "tup#0"
      ]
    },
    "423": {
      "op": "intc_2 // 8",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "total#0",
        "tup#0",
        "8"
      ]
    },
    "424": {
      "op": "intc_2 // 8",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "total#0",
        "tup#0",
        "8",
        "8"
      ]
    },
    "425": {
      "op": "extract3",
      "defined_out": [
        "total#0",
        "tuple_item%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "total#0",
        "tuple_item%3#0"
      ]
    },
    "426": {
      "op": "btoi",
      "defined_out": [
        "total#0",
        "value_internal%0#0",
        "values%2#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "total#0",
        "values%2#0"
      ]
    },
    "427": {
      "op": "+",
      "defined_out": [
        "tmp%1#0",
        "total#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "tmp%1#0"
      ]
    },
    "428": {
      "op": "frame_bury 0",
      "defined_out": [
        "total#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "430": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_footer@3"
    },
    "433": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_footer@3",
      "stack_in": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "435": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "436": {
      "op": "+",
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "437": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "439": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_for_header@1"
    },
    "442": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum_after_for@4",
      "stack_in": [
        "total#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "values%0#0",
        "value_internal%0#0",
        "total#0"
      ]
    },
    "443": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups",
      "params": {
        "tups#0": "bytes"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "446": {
      "op": "intc_0 // 0",
      "stack_out": [
        "add_tup%0#0"
      ]
    },
    "447": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_block@0"
    },
    "450": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_block@0",
      "stack_in": [
        "add_tup%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "tups#0 (copy)"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tups#0 (copy)"
      ]
    },
    "452": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tups#0 (copy)"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tups#0 (copy)",
        "0"
      ]
    },
    "453": {
      "op": "extract_uint16",
      "defined_out": [],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0"
      ]
    },
    "454": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "455": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0"
      ]
    },
    "456": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "457": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_header@1"
    },
    "460": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_header@1",
      "stack_in": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "462": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "464": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "465": {
      "op": "bz test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_after_for@4",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "468": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_body@2"
    },
    "471": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_body@2",
      "stack_in": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "473": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#1",
        "tups#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1",
        "tups#0 (copy)"
      ]
    },
    "475": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%total_length%0#0"
      ]
    },
    "476": {
      "op": "frame_dig -1",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%total_length%0#0",
        "tups#0 (copy)"
      ]
    },
    "478": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "i#1",
        "tups#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%total_length%0#0",
        "tups#0 (copy)",
        "2"
      ]
    },
    "480": {
      "op": "uncover 2",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1",
        "tups#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "482": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "483": {
      "op": "uncover 1",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "i#1"
      ]
    },
    "485": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%array_trimmed%0#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "i#1",
        "16"
      ]
    },
    "486": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "487": {
      "op": "intc_3 // 16",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "488": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "array_item%0#0"
      ]
    },
    "489": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "defined_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "add_tup%0#0"
      ]
    },
    "492": {
      "op": "frame_bury 0",
      "defined_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "494": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_footer@3"
    },
    "497": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_footer@3",
      "stack_in": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "499": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "500": {
      "op": "+",
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "501": {
      "op": "frame_bury 2",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ]
    },
    "503": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_for_header@1"
    },
    "506": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups_after_for@4",
      "stack_in": [
        "add_tup%0#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "507": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups",
      "params": {
        "tups#0": "bytes"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "510": {
      "op": "intc_0 // 0",
      "stack_out": [
        "add_tup%0#0"
      ]
    },
    "511": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_block@0"
    },
    "514": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_block@0",
      "stack_in": [
        "add_tup%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "add_tup%0#0",
        "1"
      ]
    },
    "515": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "add_tup%0#0"
      ]
    },
    "516": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ]
    },
    "517": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_header@1"
    },
    "520": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_header@1",
      "stack_in": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "522": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "3"
      ]
    },
    "524": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "525": {
      "op": "bz test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_after_for@4",
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ]
    },
    "528": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_body@2"
    },
    "531": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_body@2",
      "stack_in": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "533": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "i#1",
        "16"
      ]
    },
    "534": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "535": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "tups#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "tups#0 (copy)"
      ]
    },
    "537": {
      "op": "uncover 1",
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "tups#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "539": {
      "op": "intc_3 // 16",
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "tups#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "540": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "array_item%0#0"
      ]
    },
    "541": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "op": "callsub test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "defined_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "add_tup%0#0"
      ]
    },
    "544": {
      "op": "frame_bury 0",
      "defined_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ]
    },
    "546": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_footer@3"
    },
    "549": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_footer@3",
      "stack_in": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "551": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "552": {
      "op": "+",
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "553": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "add_tup%0#0",
        "value_internal%0#0"
      ]
    },
    "555": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_for_header@1"
    },
    "558": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups_after_for@4",
      "stack_in": [
        "add_tup%0#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "559": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a",
      "params": {
        "a#0": "uint64"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "562": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_block@0"
    },
    "565": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "op": "callsub _check_owner"
    },
    "568": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "569": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "570": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "571": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "572": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "573": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "574": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "575": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "1"
      ]
    },
    "576": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "values%0#0"
      ]
    },
    "577": {
      "op": "intc_0 // 0",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "578": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_header@1"
    },
    "581": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_header@1",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "583": {
      "op": "frame_dig 0",
      "defined_out": [
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "values%0#0"
      ]
    },
    "585": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "586": {
      "op": "bz test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_after_for@4",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "589": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_body@2"
    },
    "592": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_body@2",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "594": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "\"tup_bag\""
      ]
    },
    "595": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "596": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0"
      ]
    },
    "597": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "a#0 (copy)"
      ]
    },
    "599": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "600": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0"
      ]
    },
    "602": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "603": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "8"
      ]
    },
    "604": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "8",
        "128"
      ]
    },
    "606": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "607": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "i#1 (copy)",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "i#1 (copy)"
      ]
    },
    "609": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "i#1 (copy)",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "i#1 (copy)",
        "16"
      ]
    },
    "610": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "611": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%extract%1#0 (copy)"
      ]
    },
    "613": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "615": {
      "op": "intc_3 // 16",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "616": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "617": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%encoded_element%0#0",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%encoded_element%0#0",
        "0"
      ]
    },
    "618": {
      "op": "uncover 4",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%encoded_element%0#0",
        "0",
        "encoded_value%0#0"
      ]
    },
    "620": {
      "op": "replace3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "621": {
      "op": "uncover 3",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "i#1"
      ]
    },
    "623": {
      "op": "intc_3 // 16",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "i#1",
        "16"
      ]
    },
    "624": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%write_offset%0#0",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "625": {
      "op": "uncover 2",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%write_offset%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "627": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "629": {
      "op": "uncover 2",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "631": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "632": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0"
      ]
    },
    "634": {
      "op": "intc_2 // 8",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "8"
      ]
    },
    "635": {
      "op": "uncover 2",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "8",
        "aggregate%updated_array%0#0"
      ]
    },
    "637": {
      "op": "replace3",
      "defined_out": [
        "updated_tuple%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "updated_tuple%0#0"
      ]
    },
    "638": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "updated_tuple%0#0",
        "\"tup_bag\""
      ]
    },
    "639": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "\"tup_bag\"",
        "updated_tuple%0#0"
      ]
    },
    "641": {
      "op": "box_put",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "642": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_footer@3"
    },
    "645": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_footer@3",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "647": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "648": {
      "op": "+",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "649": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "651": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_for_header@1"
    },
    "654": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a_after_for@4",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "655": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b",
      "params": {
        "b#0": "uint64"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "658": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_block@0"
    },
    "661": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_block@0",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "op": "callsub _check_owner"
    },
    "664": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "665": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "666": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "667": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "668": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "669": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "670": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "671": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "1"
      ]
    },
    "672": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "values%0#0"
      ]
    },
    "673": {
      "op": "intc_0 // 0",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "674": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_header@1"
    },
    "677": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_header@1",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "679": {
      "op": "frame_dig 0",
      "defined_out": [
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "values%0#0"
      ]
    },
    "681": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "682": {
      "op": "bz test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_after_for@4",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "685": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_body@2"
    },
    "688": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_body@2",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "690": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "\"tup_bag\""
      ]
    },
    "691": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "692": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0"
      ]
    },
    "693": {
      "op": "frame_dig -1",
      "defined_out": [
        "b#0 (copy)",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "b#0 (copy)"
      ]
    },
    "695": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "696": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0"
      ]
    },
    "698": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "699": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "8"
      ]
    },
    "700": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "8",
        "128"
      ]
    },
    "702": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "703": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "i#1 (copy)",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "i#1 (copy)"
      ]
    },
    "705": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "i#1 (copy)",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "i#1 (copy)",
        "16"
      ]
    },
    "706": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "707": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%extract%1#0 (copy)"
      ]
    },
    "709": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "711": {
      "op": "intc_3 // 16",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "712": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "713": {
      "op": "intc_2 // 8",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%encoded_element%0#0",
        "8"
      ]
    },
    "714": {
      "op": "uncover 4",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%encoded_element%0#0",
        "8",
        "encoded_value%0#0"
      ]
    },
    "716": {
      "op": "replace3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "i#1",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "717": {
      "op": "uncover 3",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "i#1"
      ]
    },
    "719": {
      "op": "intc_3 // 16",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "i#1",
        "16"
      ]
    },
    "720": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%write_offset%0#0",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "721": {
      "op": "uncover 2",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%write_offset%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "723": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%0#0",
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "725": {
      "op": "uncover 2",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "727": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "728": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0"
      ]
    },
    "730": {
      "op": "intc_2 // 8",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "8"
      ]
    },
    "731": {
      "op": "uncover 2",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "storage_value%1#0",
        "8",
        "aggregate%updated_array%0#0"
      ]
    },
    "733": {
      "op": "replace3",
      "defined_out": [
        "updated_tuple%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "updated_tuple%0#0"
      ]
    },
    "734": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "updated_tuple%0#0",
        "\"tup_bag\""
      ]
    },
    "735": {
      "op": "uncover 1",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "\"tup_bag\"",
        "updated_tuple%0#0"
      ]
    },
    "737": {
      "op": "box_put",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "738": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_footer@3"
    },
    "741": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_footer@3",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "743": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "744": {
      "op": "+",
      "stack_out": [
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "745": {
      "op": "frame_bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "747": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_for_header@1"
    },
    "750": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b_after_for@4",
      "stack_in": [
        "values%0#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "751": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups",
      "params": {
        "start#0": "uint64"
      },
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "754": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups_block@0"
    },
    "757": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "758": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "759": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "760": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "761": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "762": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "763": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "764": {
      "op": "frame_dig -1",
      "defined_out": [
        "start#0 (copy)",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "start#0 (copy)"
      ]
    },
    "766": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "start#0 (copy)",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "start#0 (copy)",
        "3"
      ]
    },
    "768": {
      "op": "+",
      "defined_out": [
        "tmp%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0",
        "tmp%0#0"
      ]
    },
    "769": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "770": {
      "error": "not enough items",
      "op": "assert // not enough items",
      "stack_out": []
    },
    "771": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "772": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "773": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0"
      ]
    },
    "774": {
      "op": "intc_2 // 8",
      "stack_out": [
        "storage_value%1#0",
        "8"
      ]
    },
    "775": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "8",
        "128"
      ]
    },
    "777": {
      "op": "extract3",
      "defined_out": [
        "items#0"
      ],
      "stack_out": [
        "items#0"
      ]
    },
    "778": {
      "op": "frame_dig -1",
      "stack_out": [
        "items#0",
        "start#0 (copy)"
      ]
    },
    "780": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "items#0",
        "start#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "start#0 (copy)",
        "16"
      ]
    },
    "781": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "items#0"
      ],
      "stack_out": [
        "items#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "782": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "items#0",
        "items#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "aggregate%bytes_offset%0#0",
        "items#0 (copy)"
      ]
    },
    "784": {
      "op": "uncover 1",
      "stack_out": [
        "items#0",
        "items#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "786": {
      "op": "intc_3 // 16",
      "stack_out": [
        "items#0",
        "items#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "787": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "items#0"
      ],
      "stack_out": [
        "items#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "788": {
      "op": "cover 1",
      "defined_out": [
        "array_item%0#0",
        "items#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "items#0"
      ]
    },
    "790": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "start#0 (copy)"
      ]
    },
    "792": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_item%0#0",
        "items#0",
        "start#0 (copy)"
      ],
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "start#0 (copy)",
        "1"
      ]
    },
    "793": {
      "op": "+",
      "defined_out": [
        "array_item%0#0",
        "items#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "tmp%2#0"
      ]
    },
    "794": {
      "op": "intc_3 // 16",
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "tmp%2#0",
        "16"
      ]
    },
    "795": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "array_item%0#0",
        "items#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "796": {
      "op": "dig 1",
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "aggregate%bytes_offset%1#0",
        "items#0 (copy)"
      ]
    },
    "798": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "items#0 (copy)",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "800": {
      "op": "intc_3 // 16",
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "items#0 (copy)",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "801": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "array_item%0#0",
        "items#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "items#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "802": {
      "op": "cover 1",
      "defined_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0"
      ]
    },
    "804": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "start#0 (copy)"
      ]
    },
    "806": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "start#0 (copy)"
      ],
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "start#0 (copy)",
        "2"
      ]
    },
    "808": {
      "op": "+",
      "defined_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "tmp%3#0"
      ]
    },
    "809": {
      "op": "intc_3 // 16",
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "tmp%3#0",
        "16"
      ]
    },
    "810": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "array_item%0#0",
        "array_item%1#0",
        "items#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "811": {
      "op": "intc_3 // 16",
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "items#0",
        "aggregate%bytes_offset%2#0",
        "16"
      ]
    },
    "812": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "array_item%1#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "array_item%2#0"
      ]
    },
    "813": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "array_item%0#0",
        "array_item%1#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "array_item%0#0",
        "array_item%1#0",
        "array_item%2#0",
        "0x"
      ]
    },
    "814": {
      "op": "uncover 3",
      "stack_out": [
        "array_item%1#0",
        "array_item%2#0",
        "0x",
        "array_item%0#0"
      ]
    },
    "816": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "array_item%1#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "array_item%1#0",
        "array_item%2#0",
        "aggregate%head%0#0"
      ]
    },
    "817": {
      "op": "uncover 2",
      "stack_out": [
        "array_item%2#0",
        "aggregate%head%0#0",
        "array_item%1#0"
      ]
    },
    "819": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "array_item%2#0"
      ],
      "stack_out": [
        "array_item%2#0",
        "aggregate%head%1#0"
      ]
    },
    "820": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "array_item%2#0"
      ]
    },
    "822": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "823": {
      "retsub": true,
      "op": "retsub"
    },
    "824": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups",
      "params": {},
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "827": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_block@0"
    },
    "830": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "831": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "832": {
      "op": "extract 6 2",
      "defined_out": [],
      "stack_out": [
        "result#0"
      ]
    },
    "835": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "result#0",
        "\"tup_bag\""
      ]
    },
    "836": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "837": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "result#0",
        "storage_value%0#0"
      ]
    },
    "838": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "result#0",
        "storage_value%0#0",
        "8"
      ]
    },
    "839": {
      "op": "intc 4 // 128",
      "defined_out": [
        "128",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "result#0",
        "storage_value%0#0",
        "8",
        "128"
      ]
    },
    "841": {
      "op": "extract3",
      "defined_out": [],
      "stack_out": [
        "result#0",
        "items#0"
      ]
    },
    "842": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "result#0",
        "items#0",
        "\"tup_bag\""
      ]
    },
    "843": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "844": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "storage_value%1#0"
      ]
    },
    "845": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result#0",
        "items#0",
        "storage_value%1#0",
        "0"
      ]
    },
    "846": {
      "op": "intc_2 // 8",
      "stack_out": [
        "result#0",
        "items#0",
        "storage_value%1#0",
        "0",
        "8"
      ]
    },
    "847": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%1#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "tuple_item%1#0"
      ]
    },
    "848": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0"
      ]
    },
    "849": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "values%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "1"
      ]
    },
    "850": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0"
      ]
    },
    "851": {
      "op": "intc_0 // 0",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "852": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_header@1"
    },
    "855": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_header@1",
      "stack_in": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "857": {
      "op": "frame_dig 2",
      "defined_out": [
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "values%0#0"
      ]
    },
    "859": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "860": {
      "op": "bz test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_after_for@4",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "863": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_body@2"
    },
    "866": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_body@2",
      "stack_in": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "868": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "i#1",
        "16"
      ]
    },
    "869": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "870": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "items#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "items#0"
      ]
    },
    "872": {
      "op": "uncover 1",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "items#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "874": {
      "op": "intc_3 // 16",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "items#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "875": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "items#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "array_item%0#0"
      ]
    },
    "876": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "array_item%0#0",
        "items#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "array_item%0#0",
        "0x"
      ]
    },
    "877": {
      "op": "uncover 1",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "0x",
        "array_item%0#0"
      ]
    },
    "879": {
      "op": "concat",
      "defined_out": [
        "items#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "tmp%0#0"
      ]
    },
    "880": {
      "op": "frame_dig 0",
      "defined_out": [
        "items#0",
        "result#0",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "tmp%0#0",
        "result#0"
      ]
    },
    "882": {
      "op": "dup",
      "defined_out": [
        "items#0",
        "result#0",
        "result#0 (copy)",
        "tmp%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "tmp%0#0",
        "result#0 (copy)",
        "result#0 (copy)"
      ]
    },
    "883": {
      "op": "cover 2",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "result#0",
        "tmp%0#0",
        "result#0 (copy)"
      ]
    },
    "885": {
      "op": "uncover 1",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "result#0",
        "result#0 (copy)",
        "tmp%0#0"
      ]
    },
    "887": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "result#0",
        "concat%0#0"
      ]
    },
    "888": {
      "op": "cover 1",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "result#0"
      ]
    },
    "890": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "result#0",
        "0"
      ]
    },
    "891": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "892": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "893": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "894": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "895": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "898": {
      "op": "uncover 1",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "901": {
      "op": "uncover 2",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "903": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+(uint64,uint64)[])%0#0",
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "as_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "904": {
      "op": "frame_bury 0",
      "defined_out": [
        "items#0",
        "result#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "906": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_footer@3"
    },
    "909": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_footer@3",
      "stack_in": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "911": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "912": {
      "op": "+",
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "913": {
      "op": "frame_bury 3",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ]
    },
    "915": {
      "op": "b test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_for_header@1"
    },
    "918": {
      "block": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups_after_for@4",
      "stack_in": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "items#0",
        "values%0#0",
        "value_internal%0#0",
        "result#0"
      ]
    },
    "919": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "params": {},
      "block": "_check_owner",
      "stack_in": [],
      "op": "b _check_owner_block@0"
    },
    "922": {
      "block": "_check_owner_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "923": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "924": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "925": {
      "op": "intc 5 // 34176",
      "defined_out": [
        "34176",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "34176"
      ]
    },
    "927": {
      "op": "getbit",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "928": {
      "error": "app not bootstrapped",
      "op": "assert // app not bootstrapped",
      "stack_out": []
    },
    "929": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "930": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "931": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0"
      ]
    },
    "932": {
      "op": "pushint 136 // 136",
      "defined_out": [
        "136",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "136"
      ]
    },
    "935": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "136",
        "32",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "136",
        "32"
      ]
    },
    "937": {
      "op": "extract3",
      "defined_out": [
        "values%1#0"
      ],
      "stack_out": [
        "values%1#0"
      ]
    },
    "938": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "values%1#0",
        "tmp%0#0"
      ]
    },
    "940": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "941": {
      "error": "sender not authorized",
      "op": "assert // sender not authorized",
      "stack_out": []
    },
    "942": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "943": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ],
      "stack_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "944": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "defined_out": [
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0"
      ]
    },
    "945": {
      "op": "pushint 168 // 168",
      "defined_out": [
        "168",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "168"
      ]
    },
    "948": {
      "op": "intc_2 // 8",
      "defined_out": [
        "168",
        "8",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "168",
        "8"
      ]
    },
    "949": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tuple_item%2#0"
      ]
    },
    "950": {
      "op": "btoi",
      "defined_out": [
        "values%2#0"
      ],
      "stack_out": [
        "values%2#0"
      ]
    },
    "951": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%2#0",
        "values%2#0"
      ],
      "stack_out": [
        "values%2#0",
        "tmp%2#0"
      ]
    },
    "953": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "954": {
      "error": "this error should be impossible",
      "op": "assert // this error should be impossible",
      "stack_out": []
    },
    "955": {
      "retsub": true,
      "op": "retsub"
    },
    "956": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "959": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "962": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "964": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "965": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "966": {
      "op": "bz approval_program___algopy_default_create@18",
      "stack_out": []
    },
    "969": {
      "op": "b approval_program_abi_routing@2"
    },
    "972": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "974": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "975": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "976": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "977": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "979": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "980": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "981": {
      "op": "bz approval_program_create_NoOp@16",
      "stack_out": []
    },
    "984": {
      "op": "b approval_program_call_NoOp@3"
    },
    "987": {
      "block": "approval_program_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "990": {
      "op": "pushbytes 0xa67ea2ab // method \"create_box()void\"",
      "defined_out": [
        "Method(create_box()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)"
      ]
    },
    "996": {
      "op": "pushbytes 0x028840ea // method \"num_tups()uint64\"",
      "defined_out": [
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)"
      ]
    },
    "1002": {
      "op": "pushbytes 0xf75cee9d // method \"add_tup((uint64,uint64))void\"",
      "defined_out": [
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)"
      ]
    },
    "1008": {
      "op": "pushbytes 0x880b5534 // method \"get_tup(uint64)(uint64,uint64)\"",
      "defined_out": [
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))"
      ]
    },
    "1014": {
      "op": "pushbytes 0x53030b41 // method \"sum()uint64\"",
      "defined_out": [
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)"
      ]
    },
    "1020": {
      "op": "pushbytes 0x7d39df51 // method \"add_many_tups((uint64,uint64)[])void\"",
      "defined_out": [
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)"
      ]
    },
    "1026": {
      "op": "pushbytes 0x7a1e7b43 // method \"add_fixed_tups((uint64,uint64)[3])void\"",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)"
      ]
    },
    "1032": {
      "op": "pushbytes 0x3447847f // method \"set_a(uint64)void\"",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(set_a(uint64)void)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)"
      ]
    },
    "1038": {
      "op": "pushbytes 0x2ba64852 // method \"set_b(uint64)void\"",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)"
      ]
    },
    "1044": {
      "op": "pushbytes 0xabc9be78 // method \"get_3_tups(uint64)(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])"
      ]
    },
    "1050": {
      "op": "pushbytes 0x73457a19 // method \"get_all_tups()(uint64,uint64)[]\"",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(sum()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])"
      ]
    },
    "1056": {
      "op": "uncover 11",
      "stack_out": [
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])",
        "tmp%6#0"
      ]
    },
    "1058": {
      "op": "match approval_program_create_box_route@4 approval_program_num_tups_route@5 approval_program_add_tup_route@6 approval_program_get_tup_route@7 approval_program_sum_route@8 approval_program_add_many_tups_route@9 approval_program_add_fixed_tups_route@10 approval_program_set_a_route@11 approval_program_set_b_route@12 approval_program_get_3_tups_route@13 approval_program_get_all_tups_route@14",
      "stack_out": []
    },
    "1082": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1085": {
      "block": "approval_program_switch_case_next@15",
      "stack_in": [],
      "op": "b approval_program_after_if_else@17"
    },
    "1088": {
      "block": "approval_program_after_if_else@17",
      "stack_in": [],
      "op": "b approval_program_after_if_else@21"
    },
    "1091": {
      "block": "approval_program_after_if_else@21",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "1092": {
      "block": "approval_program_get_all_tups_route@14",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups[routing]",
      "op": "callsub get_all_tups"
    },
    "1095": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1098": {
      "block": "approval_program_get_3_tups_route@13",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups[routing]",
      "op": "callsub get_3_tups"
    },
    "1101": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1104": {
      "block": "approval_program_set_b_route@12",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b[routing]",
      "op": "callsub set_b"
    },
    "1107": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1110": {
      "block": "approval_program_set_a_route@11",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a[routing]",
      "op": "callsub set_a"
    },
    "1113": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1116": {
      "block": "approval_program_add_fixed_tups_route@10",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups[routing]",
      "op": "callsub add_fixed_tups"
    },
    "1119": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1122": {
      "block": "approval_program_add_many_tups_route@9",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups[routing]",
      "op": "callsub add_many_tups"
    },
    "1125": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1128": {
      "block": "approval_program_sum_route@8",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum[routing]",
      "op": "callsub sum"
    },
    "1131": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1134": {
      "block": "approval_program_get_tup_route@7",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup[routing]",
      "op": "callsub get_tup"
    },
    "1137": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1140": {
      "block": "approval_program_add_tup_route@6",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup[routing]",
      "op": "callsub add_tup"
    },
    "1143": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1146": {
      "block": "approval_program_num_tups_route@5",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups[routing]",
      "op": "callsub num_tups"
    },
    "1149": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1152": {
      "block": "approval_program_create_box_route@4",
      "stack_in": [],
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box[routing]",
      "op": "callsub create_box"
    },
    "1155": {
      "op": "b approval_program_switch_case_next@15"
    },
    "1158": {
      "block": "approval_program_create_NoOp@16",
      "stack_in": [],
      "op": "b approval_program_after_if_else@17"
    },
    "1161": {
      "block": "approval_program___algopy_default_create@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1163": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "1164": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1165": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1167": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "1168": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "1169": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1170": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "1171": {
      "op": "b approval_program_block@19"
    },
    "1174": {
      "block": "approval_program_block@19",
      "stack_in": [],
      "op": "b approval_program_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__algopy_default_create@20"
    },
    "1177": {
      "block": "approval_program_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__algopy_default_create@20",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1178": {
      "op": "return",
      "stack_out": []
    }
  }
}