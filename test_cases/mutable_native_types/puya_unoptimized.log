debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), paths=['mutable_native_types'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.mutable_native_types.contract.add
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Sealing block@0
mutable_native_types/contract.py:101:47 debug: encountered already materialized expression (1u), reusing result: 1u
mutable_native_types/contract.py:101:47 debug: encountered already materialized expression (1u), reusing result: 1u
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.add_payment
debug: Sealing block@0
mutable_native_types/contract.py:112:9 debug: encountered already materialized expression ('payments'), reusing result: "payments"
mutable_native_types/contract.py:113:9 debug: encountered already materialized expression ('num_payments'), reusing result: "num_payments"
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Sealing block@0
mutable_native_types/contract.py:118:9 debug: encountered already materialized expression (GlobalState['payments'][index]), reusing result: tmp%1#0
mutable_native_types/contract.py:118:9 debug: encountered already materialized expression (GlobalState['payments']), reusing result: maybe_value%1#0
mutable_native_types/contract.py:118:23 debug: encountered already materialized expression (index), reusing result: index#0
mutable_native_types/contract.py:118:9 debug: encountered already materialized expression ('payments'), reusing result: "payments"
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.create_storage
debug: Sealing block@0
mutable_native_types/contract.py:125:9 debug: encountered already materialized expression (BoxMapKey(prefix='box_map', key=box_key)), reusing result: box_prefixed_key%0#0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Sealing block@0
mutable_native_types/contract.py:138:9 debug: encountered already materialized expression ('nested'), reusing result: "nested"
mutable_native_types/contract.py:139:9 debug: encountered already materialized expression (hex<"70">), reusing result: 0x70
mutable_native_types/contract.py:140:9 debug: encountered already materialized expression (hex<"6C">), reusing result: 0x6c
mutable_native_types/contract.py:140:27 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%0#0
mutable_native_types/contract.py:141:9 debug: encountered already materialized expression ('box'), reusing result: "box"
mutable_native_types/contract.py:142:9 debug: encountered already materialized expression (BoxMapKey(prefix='box_map', key=box_key)), reusing result: box_prefixed_key%0#0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.struct_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.tup_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let result#3: uint64 = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#3: uint64 = φ(result#0 <- block@0) in block@0
debug: Added result#2 to Phi node: let result#3: uint64 = φ(result#0 <- block@0, result#2 <- block@1) in block@1
debug: Terminated block@2
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.mutable_native_types.contract.add
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: optimizing approval program of test_cases.mutable_native_types.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.mutable_native_types.contract.Contract.__algopy_default_create in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable encoded_tuple_buffer%3#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%6#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable encoded_tuple_buffer%9#0
debug: Removing unused variable current_tail_offset%4#0
debug: Removing unused variable encoded_tuple_buffer%13#0
debug: Removing unused variable current_tail_offset%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable assigned_value%0#0
debug: Removing unused variable assigned_value%1#0
debug: Removing unused variable assigned_value%2#0
debug: Removing unused variable copy%0#0
debug: Removing unused variable copy%1#0
debug: Removing unused variable copy%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable data_length%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.mutable_native_types.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.mutable_native_types.contract.Contract
debug: lowering array IR nodes in clear program of test_cases.mutable_native_types.contract.Contract
debug: optimizing approval program of test_cases.mutable_native_types.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.mutable_native_types.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.mutable_native_types.contract.Contract
debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init, []
mutable_native_types/contract.py:166 debug: auto reserving slots in test_cases.mutable_native_types.contract.add, []
mutable_native_types/contract.py:66 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.__init__, []
mutable_native_types/contract.py:89 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.fixed_initialize, []
mutable_native_types/contract.py:109 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.add_payment, []
mutable_native_types/contract.py:115 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.increment_payment, []
mutable_native_types/contract.py:120 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.create_storage, []
mutable_native_types/contract.py:127 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.delete_storage, []
mutable_native_types/contract.py:136 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.struct_arg, []
mutable_native_types/contract.py:146 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.struct_return, []
mutable_native_types/contract.py:150 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.tup_return, []
mutable_native_types/contract.py:154 debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.calculate_sum, []
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.mutable_native_types.contract.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.add
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.add using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.add
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.fixed_initialize using strategy RootOperandGrouping
debug: Coalescing arr_3#0 with [arr_3#1, arr_3#2, arr_3#3]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.add_payment
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.add_payment using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.add_payment
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.increment_payment using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.create_storage
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.create_storage using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.create_storage
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.delete_storage using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.struct_arg using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.struct_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.struct_return using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.struct_return
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.tup_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.tup_return using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.tup_return
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.calculate_sum using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1, result#2, result#3]
debug: Coalescing resulted in 6 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 with [test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#1, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#2, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#3, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#4, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#5, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#6, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#7, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#8, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#9, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#10]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 32 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to mutable_native_types/out_unoptimized/Contract.ir/Contract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to mutable_native_types/out_unoptimized/Contract.ir/Contract.clear.0.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted add_block@0.ops[4]: 'l-store-copy encoded%0#0 0'
debug: Replaced add_block@0.ops[6]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted add_block@0.ops[13]: 'l-store-copy encoded%1#0 0'
debug: Replaced add_block@0.ops[15]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted add_block@0.ops[21]: 'l-store-copy tmp%2#0 0'
debug: Replaced add_block@0.ops[23]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted add_block@0.ops[17]: 'l-store-copy tmp%1#0 0'
debug: Replaced add_block@0.ops[20]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted add_block@0.ops[8]: 'l-store-copy tmp%0#0 0'
debug: Replaced add_block@0.ops[20]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted __init___block@0.ops[13]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced __init___block@0.ops[15]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted __init___block@0.ops[20]: 'l-store-copy tmp%2#0 0'
debug: Replaced __init___block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted __init___block@0.ops[27]: 'l-store-copy tmp%4#0 0'
debug: Replaced __init___block@0.ops[29]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted __init___block@0.ops[42]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced __init___block@0.ops[44]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted __init___block@0.ops[49]: 'l-store-copy tmp%6#0 0'
debug: Replaced __init___block@0.ops[51]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted __init___block@0.ops[56]: 'l-store-copy tmp%8#0 0'
debug: Replaced __init___block@0.ops[58]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted __init___block@0.ops[71]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced __init___block@0.ops[73]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted __init___block@0.ops[80]: 'l-store-copy encoded_tuple_buffer%10#0 0'
debug: Replaced __init___block@0.ops[82]: 'v-load encoded_tuple_buffer%10#0' with 'l-load encoded_tuple_buffer%10#0'
debug: Inserted __init___block@0.ops[85]: 'l-store-copy encoded_tuple_buffer%11#0 0'
debug: Replaced __init___block@0.ops[87]: 'v-load encoded_tuple_buffer%11#0' with 'l-load encoded_tuple_buffer%11#0'
debug: Inserted __init___block@0.ops[110]: 'l-store-copy length%0#0 0'
debug: Replaced __init___block@0.ops[112]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted __init___block@0.ops[114]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced __init___block@0.ops[116]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted __init___block@0.ops[118]: 'l-store-copy length_uint16%0#0 0'
debug: Replaced __init___block@0.ops[120]: 'v-load length_uint16%0#0' with 'l-load length_uint16%0#0'
debug: Inserted __init___block@0.ops[126]: 'l-store-copy length%1#0 0'
debug: Replaced __init___block@0.ops[128]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted __init___block@0.ops[130]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced __init___block@0.ops[132]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted __init___block@0.ops[134]: 'l-store-copy length_uint16%1#0 0'
debug: Replaced __init___block@0.ops[136]: 'v-load length_uint16%1#0' with 'l-load length_uint16%1#0'
debug: Inserted __init___block@0.ops[143]: 'l-store-copy encoded_tuple_buffer%14#0 0'
debug: Replaced __init___block@0.ops[145]: 'v-load encoded_tuple_buffer%14#0' with 'l-load encoded_tuple_buffer%14#0'
debug: Inserted __init___block@0.ops[151]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced __init___block@0.ops[153]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted __init___block@0.ops[166]: 'l-store-copy current_tail_offset%5#0 0'
debug: Replaced __init___block@0.ops[168]: 'v-load current_tail_offset%5#0' with 'l-load current_tail_offset%5#0'
debug: Inserted __init___block@0.ops[170]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced __init___block@0.ops[172]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted __init___block@0.ops[185]: 'l-store-copy current_tail_offset%6#0 0'
debug: Replaced __init___block@0.ops[187]: 'v-load current_tail_offset%6#0' with 'l-load current_tail_offset%6#0'
debug: Inserted __init___block@0.ops[189]: 'l-store-copy as_bytes%4#0 0'
debug: Replaced __init___block@0.ops[191]: 'v-load as_bytes%4#0' with 'l-load as_bytes%4#0'
debug: Inserted __init___block@0.ops[197]: 'l-store-copy encoded_tuple_buffer%18#0 0'
debug: Replaced __init___block@0.ops[199]: 'v-load encoded_tuple_buffer%18#0' with 'l-load encoded_tuple_buffer%18#0'
debug: Inserted __init___block@0.ops[202]: 'l-store-copy encoded_tuple_buffer%19#0 0'
debug: Replaced __init___block@0.ops[204]: 'v-load encoded_tuple_buffer%19#0' with 'l-load encoded_tuple_buffer%19#0'
debug: Inserted __init___block@0.ops[207]: 'l-store-copy encoded_tuple_buffer%20#0 0'
debug: Replaced __init___block@0.ops[209]: 'v-load encoded_tuple_buffer%20#0' with 'l-load encoded_tuple_buffer%20#0'
debug: Inserted __init___block@0.ops[90]: 'l-store-copy encoded_tuple_buffer%12#0 0'
debug: Replaced __init___block@0.ops[93]: 'v-load encoded_tuple_buffer%12#0' with 'l-load encoded_tuple_buffer%12#0'
debug: Inserted __init___block@0.ops[156]: 'l-store-copy offset_as_uint16%0#0 0'
debug: Replaced __init___block@0.ops[159]: 'v-load offset_as_uint16%0#0' with 'l-load offset_as_uint16%0#0'
debug: Inserted __init___block@0.ops[164]: 'l-store-copy data_length%0#0 0'
debug: Replaced __init___block@0.ops[167]: 'v-load data_length%0#0' with 'l-load data_length%0#0'
debug: Inserted __init___block@0.ops[177]: 'l-store-copy offset_as_uint16%1#0 0'
debug: Replaced __init___block@0.ops[180]: 'v-load offset_as_uint16%1#0' with 'l-load offset_as_uint16%1#0'
debug: Inserted __init___block@0.ops[185]: 'l-store-copy data_length%1#0 0'
debug: Replaced __init___block@0.ops[188]: 'v-load data_length%1#0' with 'l-load data_length%1#0'
debug: Inserted __init___block@0.ops[198]: 'l-store-copy offset_as_uint16%2#0 0'
debug: Replaced __init___block@0.ops[201]: 'v-load offset_as_uint16%2#0' with 'l-load offset_as_uint16%2#0'
debug: Inserted __init___block@0.ops[218]: 'l-store-copy encoded_tuple_buffer%21#0 0'
debug: Replaced __init___block@0.ops[221]: 'v-load encoded_tuple_buffer%21#0' with 'l-load encoded_tuple_buffer%21#0'
debug: Inserted __init___block@0.ops[228]: 'l-store-copy materialized_values%0#0 0'
debug: Replaced __init___block@0.ops[231]: 'v-load materialized_values%0#0' with 'l-load materialized_values%0#0'
debug: Inserted __init___block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced __init___block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted __init___block@0.ops[4]: 'l-store-copy tmp%1#0 1'
debug: Replaced __init___block@0.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted __init___block@0.ops[34]: 'l-store-copy tmp%5#0 0'
debug: Replaced __init___block@0.ops[39]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted __init___block@0.ops[64]: 'l-store-copy tmp%9#0 0'
debug: Replaced __init___block@0.ops[69]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted __init___block@0.ops[8]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced __init___block@0.ops[14]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted __init___block@0.ops[39]: 'l-store-copy val_as_bytes%2#0 1'
debug: Replaced __init___block@0.ops[45]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted __init___block@0.ops[70]: 'l-store-copy val_as_bytes%4#0 1'
debug: Replaced __init___block@0.ops[76]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted __init___block@0.ops[12]: 'l-store-copy val_as_bytes%1#0 1'
debug: Replaced __init___block@0.ops[20]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted __init___block@0.ops[44]: 'l-store-copy val_as_bytes%3#0 1'
debug: Replaced __init___block@0.ops[52]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted __init___block@0.ops[76]: 'l-store-copy val_as_bytes%5#0 1'
debug: Replaced __init___block@0.ops[84]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted __init___block@0.ops[29]: 'l-store-copy tmp%3#0 0'
debug: Replaced __init___block@0.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted __init___block@0.ops[62]: 'l-store-copy tmp%7#0 0'
debug: Replaced __init___block@0.ops[72]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted __init___block@0.ops[108]: 'l-store-copy tmp%10#0 0'
debug: Replaced __init___block@0.ops[116]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted __init___block@0.ops[162]: 'l-store-copy encoded_tuple_buffer%15#0 0'
debug: Replaced __init___block@0.ops[172]: 'v-load encoded_tuple_buffer%15#0' with 'l-load encoded_tuple_buffer%15#0'
debug: Inserted __init___block@0.ops[111]: 'l-store-copy tmp%11#0 1'
debug: Replaced __init___block@0.ops[120]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted __init___block@0.ops[88]: 'l-store-copy encoded_tuple_buffer%8#0 0'
debug: Replaced __init___block@0.ops[101]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
debug: Inserted __init___block@0.ops[188]: 'l-store-copy current_tail_offset%5#0 0'
debug: Replaced __init___block@0.ops[204]: 'v-load current_tail_offset%5#0' with 'l-load current_tail_offset%5#0'
debug: Inserted __init___block@0.ops[177]: 'l-store-copy encoded_tuple_buffer%16#0 0'
debug: Replaced __init___block@0.ops[197]: 'v-load encoded_tuple_buffer%16#0' with 'l-load encoded_tuple_buffer%16#0'
debug: Inserted __init___block@0.ops[200]: 'l-store-copy encoded_tuple_buffer%17#0 1'
debug: Replaced __init___block@0.ops[219]: 'v-load encoded_tuple_buffer%17#0' with 'l-load encoded_tuple_buffer%17#0'
debug: Inserted __init___block@0.ops[203]: 'l-store-copy encoded_value%1#0 2'
debug: Replaced __init___block@0.ops[231]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted __init___block@0.ops[120]: 'l-store-copy val_as_bytes%6#0 1'
debug: Replaced __init___block@0.ops[158]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
debug: Inserted __init___block@0.ops[55]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced __init___block@0.ops[97]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted __init___block@0.ops[125]: 'l-store-copy val_as_bytes%7#0 1'
debug: Replaced __init___block@0.ops[165]: 'v-load val_as_bytes%7#0' with 'l-load val_as_bytes%7#0'
debug: Inserted __init___block@0.ops[142]: 'l-store-copy encoded_value%0#0 2'
debug: Replaced __init___block@0.ops[183]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted __init___block@0.ops[184]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced __init___block@0.ops[231]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted __init___block@0.ops[159]: 'l-store-copy encoded_value%1#0 3'
debug: Replaced __init___block@0.ops[208]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted __init___block@0.ops[22]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced __init___block@0.ops[93]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted __init___block@0.ops[119]: 'l-store-copy array_data%0#0 2'
debug: Replaced __init___block@0.ops[244]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted fixed_initialize_block@0.ops[5]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[7]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted fixed_initialize_block@0.ops[13]: 'l-store-copy updated_target%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[15]: 'v-load updated_target%0#0' with 'l-load updated_target%0#0'
debug: Inserted fixed_initialize_block@0.ops[19]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[21]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted fixed_initialize_block@0.ops[27]: 'l-store-copy updated_target%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[29]: 'v-load updated_target%1#0' with 'l-load updated_target%1#0'
debug: Inserted fixed_initialize_block@0.ops[33]: 'l-store-copy val_as_bytes%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[35]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted fixed_initialize_block@0.ops[41]: 'l-store-copy updated_target%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[43]: 'v-load updated_target%2#0' with 'l-load updated_target%2#0'
debug: Inserted fixed_initialize_block@0.ops[57]: 'l-store-copy result%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[59]: 'v-load result%0#0' with 'l-load result%0#0'
debug: Inserted fixed_initialize_block@0.ops[62]: 'l-store-copy result%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[64]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted fixed_initialize_block@0.ops[71]: 'l-store-copy array_data%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[73]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted fixed_initialize_block@0.ops[78]: 'l-store-copy tmp%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[80]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted fixed_initialize_block@0.ops[94]: 'l-store-copy result%3#0 0'
debug: Replaced fixed_initialize_block@0.ops[96]: 'v-load result%3#0' with 'l-load result%3#0'
debug: Inserted fixed_initialize_block@0.ops[99]: 'l-store-copy result%4#0 0'
debug: Replaced fixed_initialize_block@0.ops[101]: 'v-load result%4#0' with 'l-load result%4#0'
debug: Inserted fixed_initialize_block@0.ops[108]: 'l-store-copy array_data%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[110]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted fixed_initialize_block@0.ops[111]: 'l-store-copy arr_3_from_full#0 0'
debug: Replaced fixed_initialize_block@0.ops[113]: 'v-load arr_3_from_full#0' with 'l-load arr_3_from_full#0'
debug: Inserted fixed_initialize_block@0.ops[123]: 'l-store-copy encoded%3#0 0'
debug: Replaced fixed_initialize_block@0.ops[125]: 'v-load encoded%3#0' with 'l-load encoded%3#0'
debug: Inserted fixed_initialize_block@0.ops[127]: 'l-store-copy tmp%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[129]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted fixed_initialize_block@0.ops[132]: 'l-store-copy tmp%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[134]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted fixed_initialize_block@0.ops[146]: 'l-store-copy encoded%4#0 0'
debug: Replaced fixed_initialize_block@0.ops[148]: 'v-load encoded%4#0' with 'l-load encoded%4#0'
debug: Inserted fixed_initialize_block@0.ops[150]: 'l-store-copy tmp%3#0 0'
debug: Replaced fixed_initialize_block@0.ops[152]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted fixed_initialize_block@0.ops[155]: 'l-store-copy tmp%4#0 0'
debug: Replaced fixed_initialize_block@0.ops[157]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted fixed_initialize_block@0.ops[169]: 'l-store-copy encoded%5#0 0'
debug: Replaced fixed_initialize_block@0.ops[171]: 'v-load encoded%5#0' with 'l-load encoded%5#0'
debug: Inserted fixed_initialize_block@0.ops[173]: 'l-store-copy tmp%5#0 0'
debug: Replaced fixed_initialize_block@0.ops[175]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted fixed_initialize_block@0.ops[178]: 'l-store-copy tmp%6#0 0'
debug: Replaced fixed_initialize_block@0.ops[180]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted fixed_initialize_block@0.ops[183]: 'l-store-copy copy%3#0 0'
debug: Replaced fixed_initialize_block@0.ops[185]: 'v-load copy%3#0' with 'l-load copy%3#0'
debug: Inserted fixed_initialize_block@0.ops[186]: 'l-store-copy copy%4#0 0'
debug: Replaced fixed_initialize_block@0.ops[188]: 'v-load copy%4#0' with 'l-load copy%4#0'
debug: Inserted fixed_initialize_block@0.ops[193]: 'l-store-copy tmp%7#0 0'
debug: Replaced fixed_initialize_block@0.ops[195]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted fixed_initialize_block@0.ops[67]: 'l-store-copy result%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[70]: 'v-load result%2#0' with 'l-load result%2#0'
debug: Inserted fixed_initialize_block@0.ops[75]: 'l-store-copy arr_3_from_tuple#0 0'
debug: Replaced fixed_initialize_block@0.ops[78]: 'v-load arr_3_from_tuple#0' with 'l-load arr_3_from_tuple#0'
debug: Inserted fixed_initialize_block@0.ops[106]: 'l-store-copy result%5#0 0'
debug: Replaced fixed_initialize_block@0.ops[109]: 'v-load result%5#0' with 'l-load result%5#0'
debug: Inserted fixed_initialize_block@0.ops[121]: 'l-store-copy item_offset%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[124]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted fixed_initialize_block@0.ops[145]: 'l-store-copy item_offset%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[148]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted fixed_initialize_block@0.ops[169]: 'l-store-copy item_offset%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[172]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted fixed_initialize_block@0.ops[195]: 'l-store-copy arr_3_from_fixed#0 0'
debug: Replaced fixed_initialize_block@0.ops[198]: 'v-load arr_3_from_fixed#0' with 'l-load arr_3_from_fixed#0'
debug: Inserted fixed_initialize_block@0.ops[8]: 'l-store-copy encoded%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[12]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted fixed_initialize_block@0.ops[23]: 'l-store-copy encoded%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[27]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted fixed_initialize_block@0.ops[38]: 'l-store-copy encoded%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[42]: 'v-load encoded%2#0' with 'l-load encoded%2#0'
debug: Inserted fixed_initialize_block@0.ops[120]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced fixed_initialize_block@0.ops[127]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted fixed_initialize_block@0.ops[145]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced fixed_initialize_block@0.ops[152]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted fixed_initialize_block@0.ops[170]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced fixed_initialize_block@0.ops[177]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted fixed_initialize_block@0.ops[2]: 'l-store-copy arr_3#0 0'
debug: Replaced fixed_initialize_block@0.ops[11]: 'v-load arr_3#0' with 'l-load arr_3#0'
debug: Inserted fixed_initialize_block@0.ops[18]: 'l-store-copy arr_3#0 0'
debug: Replaced fixed_initialize_block@0.ops[27]: 'v-load arr_3#0' with 'l-load arr_3#0'
debug: Inserted fixed_initialize_block@0.ops[34]: 'l-store-copy arr_3#0 0'
debug: Replaced fixed_initialize_block@0.ops[43]: 'v-load arr_3#0' with 'l-load arr_3#0'
debug: Inserted fixed_initialize_block@0.ops[198]: 'l-store-copy arr_3#0 0'
debug: Replaced fixed_initialize_block@0.ops[207]: 'v-load arr_3#0' with 'l-load arr_3#0'
debug: Inserted fixed_initialize_block@0.ops[53]: 'l-store-copy val_as_bytes%3#0 0'
debug: Replaced fixed_initialize_block@0.ops[62]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted fixed_initialize_block@0.ops[93]: 'l-store-copy val_as_bytes%6#0 0'
debug: Replaced fixed_initialize_block@0.ops[102]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
debug: Inserted fixed_initialize_block@0.ops[57]: 'l-store-copy val_as_bytes%4#0 1'
debug: Replaced fixed_initialize_block@0.ops[68]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted fixed_initialize_block@0.ops[98]: 'l-store-copy val_as_bytes%7#0 1'
debug: Replaced fixed_initialize_block@0.ops[109]: 'v-load val_as_bytes%7#0' with 'l-load val_as_bytes%7#0'
debug: Inserted fixed_initialize_block@0.ops[61]: 'l-store-copy val_as_bytes%5#0 2'
debug: Replaced fixed_initialize_block@0.ops[74]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted fixed_initialize_block@0.ops[103]: 'l-store-copy val_as_bytes%8#0 2'
debug: Replaced fixed_initialize_block@0.ops[116]: 'v-load val_as_bytes%8#0' with 'l-load val_as_bytes%8#0'
debug: Inserted fixed_initialize_block@0.ops[129]: 'l-store-copy arr_3_from_full#0 0'
debug: Replaced fixed_initialize_block@0.ops[154]: 'v-load arr_3_from_full#0' with 'l-load arr_3_from_full#0'
debug: Inserted fixed_initialize_block@0.ops[155]: 'l-store-copy arr_3_from_full#0 0'
debug: Replaced fixed_initialize_block@0.ops[180]: 'v-load arr_3_from_full#0' with 'l-load arr_3_from_full#0'
debug: Inserted fixed_initialize_block@0.ops[50]: 'l-store-copy arr_3#0 0'
debug: Replaced fixed_initialize_block@0.ops[87]: 'v-load arr_3#0' with 'l-load arr_3#0'
debug: Inserted fixed_initialize_block@0.ops[88]: 'l-store-copy arr_3#0 1'
debug: Replaced fixed_initialize_block@0.ops[207]: 'v-load arr_3#0' with 'l-load arr_3#0'
debug: Inserted add_payment_block@0.ops[10]: 'l-store-copy tmp%0#0 0'
debug: Replaced add_payment_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted add_payment_block@0.ops[35]: 'l-store-copy index_is_in_bounds%0#0 0'
debug: Replaced add_payment_block@0.ops[37]: 'v-load index_is_in_bounds%0#0' with 'l-load index_is_in_bounds%0#0'
debug: Inserted add_payment_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced add_payment_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted add_payment_block@0.ops[20]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced add_payment_block@0.ops[23]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted add_payment_block@0.ops[30]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced add_payment_block@0.ops[33]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted add_payment_block@0.ops[45]: 'l-store-copy write_offset%0#0 0'
debug: Replaced add_payment_block@0.ops[48]: 'v-load write_offset%0#0' with 'l-load write_offset%0#0'
debug: Inserted add_payment_block@0.ops[51]: 'l-store-copy updated_target%0#0 0'
debug: Replaced add_payment_block@0.ops[54]: 'v-load updated_target%0#0' with 'l-load updated_target%0#0'
debug: Inserted add_payment_block@0.ops[59]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced add_payment_block@0.ops[62]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted add_payment_block@0.ops[67]: 'l-store-copy materialized_values%0#0 0'
debug: Replaced add_payment_block@0.ops[70]: 'v-load materialized_values%0#0' with 'l-load materialized_values%0#0'
debug: Inserted add_payment_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced add_payment_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted add_payment_block@0.ops[33]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced add_payment_block@0.ops[37]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted add_payment_block@0.ops[63]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced add_payment_block@0.ops[67]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted add_payment_block@0.ops[38]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced add_payment_block@0.ops[45]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted add_payment_block@0.ops[17]: 'l-store-copy copy%0#0 0'
debug: Replaced add_payment_block@0.ops[27]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted add_payment_block@0.ops[28]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced add_payment_block@0.ops[54]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted add_payment_block@0.ops[24]: 'l-store-copy maybe_value%1#0 2'
debug: Replaced add_payment_block@0.ops[53]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted increment_payment_block@0.ops[10]: 'l-store-copy tmp%0#0 0'
debug: Replaced increment_payment_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted increment_payment_block@0.ops[31]: 'l-store-copy tmp%1#0 0'
debug: Replaced increment_payment_block@0.ops[33]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted increment_payment_block@0.ops[37]: 'l-store-copy encoded%0#0 0'
debug: Replaced increment_payment_block@0.ops[39]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted increment_payment_block@0.ops[41]: 'l-store-copy tmp%2#0 0'
debug: Replaced increment_payment_block@0.ops[43]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted increment_payment_block@0.ops[46]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced increment_payment_block@0.ops[48]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted increment_payment_block@0.ops[50]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced increment_payment_block@0.ops[52]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted increment_payment_block@0.ops[58]: 'l-store-copy updated_data%0#0 0'
debug: Replaced increment_payment_block@0.ops[60]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted increment_payment_block@0.ops[65]: 'l-store-copy index_is_in_bounds%0#0 0'
debug: Replaced increment_payment_block@0.ops[67]: 'v-load index_is_in_bounds%0#0' with 'l-load index_is_in_bounds%0#0'
debug: Inserted increment_payment_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced increment_payment_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted increment_payment_block@0.ops[18]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced increment_payment_block@0.ops[21]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted increment_payment_block@0.ops[28]: 'l-store-copy item_offset%0#0 0'
debug: Replaced increment_payment_block@0.ops[31]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted increment_payment_block@0.ops[75]: 'l-store-copy write_offset%0#0 0'
debug: Replaced increment_payment_block@0.ops[78]: 'v-load write_offset%0#0' with 'l-load write_offset%0#0'
debug: Inserted increment_payment_block@0.ops[81]: 'l-store-copy updated_target%0#0 0'
debug: Replaced increment_payment_block@0.ops[84]: 'v-load updated_target%0#0' with 'l-load updated_target%0#0'
debug: Inserted increment_payment_block@0.ops[20]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced increment_payment_block@0.ops[24]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted increment_payment_block@0.ops[57]: 'l-store-copy encoded%1#0 0'
debug: Replaced increment_payment_block@0.ops[61]: 'v-load encoded%1#0' with 'l-load encoded%1#0'
debug: Inserted increment_payment_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced increment_payment_block@0.ops[10]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted increment_payment_block@0.ops[26]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced increment_payment_block@0.ops[33]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted increment_payment_block@0.ops[68]: 'l-store-copy assigned_value%1#0 0'
debug: Replaced increment_payment_block@0.ops[84]: 'v-load assigned_value%1#0' with 'l-load assigned_value%1#0'
debug: Inserted increment_payment_block@0.ops[40]: 'l-store-copy tmp%1#0 0'
debug: Replaced increment_payment_block@0.ops[62]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted increment_payment_block@0.ops[26]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced increment_payment_block@0.ops[84]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted create_storage_block@0.ops[22]: 'l-store-copy tmp%0#0 0'
debug: Replaced create_storage_block@0.ops[24]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted create_storage_block@0.ops[31]: 'l-store-copy tmp%1#0 0'
debug: Replaced create_storage_block@0.ops[33]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted create_storage_block@0.ops[46]: 'l-store-copy tmp%2#0 0'
debug: Replaced create_storage_block@0.ops[48]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted create_storage_block@0.ops[56]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced create_storage_block@0.ops[58]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted create_storage_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced create_storage_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted create_storage_block@0.ops[9]: 'l-store-copy copy%0#0 0'
debug: Replaced create_storage_block@0.ops[12]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted create_storage_block@0.ops[17]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced create_storage_block@0.ops[20]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted create_storage_block@0.ops[41]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced create_storage_block@0.ops[44]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted create_storage_block@0.ops[56]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced create_storage_block@0.ops[59]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted create_storage_block@0.ops[65]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced create_storage_block@0.ops[68]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted create_storage_block@0.ops[76]: 'l-store-copy updated_data%0#0 0'
debug: Replaced create_storage_block@0.ops[79]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted create_storage_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced create_storage_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted create_storage_block@0.ops[20]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced create_storage_block@0.ops[24]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted create_storage_block@0.ops[45]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced create_storage_block@0.ops[49]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted create_storage_block@0.ops[74]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced create_storage_block@0.ops[78]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted create_storage_block@0.ops[25]: 'l-store-copy copy%1#0 0'
debug: Replaced create_storage_block@0.ops[32]: 'v-load copy%1#0' with 'l-load copy%1#0'
debug: Inserted create_storage_block@0.ops[71]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced create_storage_block@0.ops[78]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted create_storage_block@0.ops[68]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced create_storage_block@0.ops[85]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted create_storage_block@0.ops[57]: 'l-store-copy copy%2#0 0'
debug: Replaced create_storage_block@0.ops[77]: 'v-load copy%2#0' with 'l-load copy%2#0'
debug: Inserted delete_storage_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced delete_storage_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted delete_storage_block@0.ops[17]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced delete_storage_block@0.ops[19]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted delete_storage_block@0.ops[13]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced delete_storage_block@0.ops[16]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted struct_arg_block@0.ops[35]: 'l-store-copy tmp%0#0 0'
debug: Replaced struct_arg_block@0.ops[37]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted struct_arg_block@0.ops[78]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced struct_arg_block@0.ops[80]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted struct_arg_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced struct_arg_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted struct_arg_block@0.ops[14]: 'l-store-copy updated_data%0#0 0'
debug: Replaced struct_arg_block@0.ops[17]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted struct_arg_block@0.ops[22]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced struct_arg_block@0.ops[25]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted struct_arg_block@0.ops[33]: 'l-store-copy updated_data%1#0 0'
debug: Replaced struct_arg_block@0.ops[36]: 'v-load updated_data%1#0' with 'l-load updated_data%1#0'
debug: Inserted struct_arg_block@0.ops[45]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced struct_arg_block@0.ops[48]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted struct_arg_block@0.ops[63]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced struct_arg_block@0.ops[66]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted struct_arg_block@0.ops[74]: 'l-store-copy updated_data%3#0 0'
debug: Replaced struct_arg_block@0.ops[77]: 'v-load updated_data%3#0' with 'l-load updated_data%3#0'
debug: Inserted struct_arg_block@0.ops[81]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced struct_arg_block@0.ops[84]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted struct_arg_block@0.ops[90]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced struct_arg_block@0.ops[93]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted struct_arg_block@0.ops[101]: 'l-store-copy updated_data%4#0 0'
debug: Replaced struct_arg_block@0.ops[104]: 'v-load updated_data%4#0' with 'l-load updated_data%4#0'
debug: Inserted struct_arg_block@0.ops[9]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced struct_arg_block@0.ops[13]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted struct_arg_block@0.ops[29]: 'l-store-copy assigned_value%1#0 0'
debug: Replaced struct_arg_block@0.ops[33]: 'v-load assigned_value%1#0' with 'l-load assigned_value%1#0'
debug: Inserted struct_arg_block@0.ops[53]: 'l-store-copy assigned_value%2#0 0'
debug: Replaced struct_arg_block@0.ops[57]: 'v-load assigned_value%2#0' with 'l-load assigned_value%2#0'
debug: Inserted struct_arg_block@0.ops[59]: 'l-store-copy updated_data%2#0 0'
debug: Replaced struct_arg_block@0.ops[63]: 'v-load updated_data%2#0' with 'l-load updated_data%2#0'
debug: Inserted struct_arg_block@0.ops[73]: 'l-store-copy assigned_value%3#0 0'
debug: Replaced struct_arg_block@0.ops[77]: 'v-load assigned_value%3#0' with 'l-load assigned_value%3#0'
debug: Inserted struct_arg_block@0.ops[101]: 'l-store-copy assigned_value%4#0 0'
debug: Replaced struct_arg_block@0.ops[105]: 'v-load assigned_value%4#0' with 'l-load assigned_value%4#0'
debug: Inserted struct_arg_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced struct_arg_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted struct_arg_block@0.ops[26]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced struct_arg_block@0.ops[33]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted struct_arg_block@0.ops[51]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced struct_arg_block@0.ops[58]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted struct_arg_block@0.ops[72]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced struct_arg_block@0.ops[79]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted struct_arg_block@0.ops[101]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced struct_arg_block@0.ops[108]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted struct_arg_block@0.ops[98]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced struct_arg_block@0.ops[115]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted struct_arg_block@0.ops[46]: 'l-store-copy tmp%0#0 0'
debug: Replaced struct_arg_block@0.ops[65]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted struct_return_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced struct_return_block@0.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted struct_return_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced struct_return_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted struct_return_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced struct_return_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted tup_return_block@0.ops[11]: 'l-store-copy encoded%0#0 0'
debug: Replaced tup_return_block@0.ops[13]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted tup_return_block@0.ops[17]: 'l-store-copy item0%0#0 0'
debug: Replaced tup_return_block@0.ops[19]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted tup_return_block@0.ops[26]: 'l-store-copy item1%0#0 0'
debug: Replaced tup_return_block@0.ops[28]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted tup_return_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced tup_return_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted tup_return_block@0.ops[31]: 'l-store-copy item1%1#0 0'
debug: Replaced tup_return_block@0.ops[34]: 'v-load item1%1#0' with 'l-load item1%1#0'
debug: Inserted tup_return_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced tup_return_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted tup_return_block@0.ops[16]: 'l-store-copy encoded%0#0 0'
debug: Replaced tup_return_block@0.ops[25]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted tup_return_block@0.ops[24]: 'l-store-copy item0%1#0 1'
debug: Replaced tup_return_block@0.ops[36]: 'v-load item0%1#0' with 'l-load item0%1#0'
debug: Inserted calculate_sum_block@0.ops[33]: 'l-store-copy result#0 0'
debug: Replaced calculate_sum_block@0.ops[35]: 'v-load result#0' with 'l-load result#0'
debug: Inserted calculate_sum_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced calculate_sum_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted calculate_sum_block@0.ops[16]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced calculate_sum_block@0.ops[19]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted calculate_sum_block@0.ops[31]: 'l-store-copy tmp%1#0 0'
debug: Replaced calculate_sum_block@0.ops[34]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted calculate_sum_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced calculate_sum_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted calculate_sum_block@0.ops[19]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced calculate_sum_block@0.ops[23]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted calculate_sum_block@0.ops[43]: 'l-store-copy tmp%2#0 0'
debug: Replaced calculate_sum_block@0.ops[47]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted calculate_sum_block@0.ops[27]: 'l-store-copy fixed_b#0 0'
debug: Replaced calculate_sum_block@0.ops[32]: 'v-load fixed_b#0' with 'l-load fixed_b#0'
debug: Inserted calculate_sum_block@0.ops[31]: 'l-store-copy tmp%0#0 1'
debug: Replaced calculate_sum_block@0.ops[37]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted calculate_sum_block@0.ops[43]: 'l-store-copy result#0 0'
debug: Replaced calculate_sum_block@0.ops[48]: 'v-load result#0' with 'l-load result#0'
debug: Inserted calculate_sum_block@0.ops[13]: 'l-store-copy fixed_a#0 0'
debug: Replaced calculate_sum_block@0.ops[30]: 'v-load fixed_a#0' with 'l-load fixed_a#0'
debug: Inserted calculate_sum_if_body@1.ops[11]: 'l-store-copy encoded%0#0 0'
debug: Replaced calculate_sum_if_body@1.ops[13]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted calculate_sum_if_body@1.ops[17]: 'l-store-copy item0%0#0 0'
debug: Replaced calculate_sum_if_body@1.ops[19]: 'v-load item0%0#0' with 'l-load item0%0#0'
debug: Inserted calculate_sum_if_body@1.ops[26]: 'l-store-copy item1%0#0 0'
debug: Replaced calculate_sum_if_body@1.ops[28]: 'v-load item1%0#0' with 'l-load item1%0#0'
debug: Inserted calculate_sum_if_body@1.ops[38]: 'l-store-copy result#0 0'
debug: Replaced calculate_sum_if_body@1.ops[40]: 'v-load result#0' with 'l-load result#0'
debug: Inserted calculate_sum_if_body@1.ops[43]: 'l-store-copy result#0 0'
debug: Replaced calculate_sum_if_body@1.ops[45]: 'v-load result#0' with 'l-load result#0'
debug: Inserted calculate_sum_if_body@1.ops[3]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced calculate_sum_if_body@1.ops[6]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted calculate_sum_if_body@1.ops[5]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced calculate_sum_if_body@1.ops[9]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted calculate_sum_if_body@1.ops[32]: 'l-store-copy item1%1#0 0'
debug: Replaced calculate_sum_if_body@1.ops[36]: 'v-load item1%1#0' with 'l-load item1%1#0'
debug: Inserted calculate_sum_if_body@1.ops[35]: 'l-store-copy c#0 1'
debug: Replaced calculate_sum_if_body@1.ops[40]: 'v-load c#0' with 'l-load c#0'
debug: Inserted calculate_sum_if_body@1.ops[38]: 'l-store-copy d#0 1'
debug: Replaced calculate_sum_if_body@1.ops[46]: 'v-load d#0' with 'l-load d#0'
debug: Inserted calculate_sum_if_body@1.ops[16]: 'l-store-copy encoded%0#0 0'
debug: Replaced calculate_sum_if_body@1.ops[25]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted calculate_sum_if_body@1.ops[24]: 'l-store-copy item0%1#0 1'
debug: Replaced calculate_sum_if_body@1.ops[36]: 'v-load item0%1#0' with 'l-load item0%1#0'
debug: Inserted calculate_sum_after_if_else@2.ops[1]: 'l-store-copy result#0 0'
debug: Replaced calculate_sum_after_if_else@2.ops[3]: 'v-load result#0' with 'l-load result#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[12]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_fixed_initialize_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_fixed_initialize_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_fixed_initialize_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_fixed_initialize_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_fixed_initialize_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced approval_program_fixed_initialize_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_fixed_initialize_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_fixed_initialize_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program_fixed_initialize_route@3.ops[22]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_fixed_initialize_route@3.ops[24]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_add_payment_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program_add_payment_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program_add_payment_route@4.ops[6]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program_add_payment_route@4.ops[8]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_add_payment_route@4.ops[11]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program_add_payment_route@4.ops[13]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program_add_payment_route@4.ops[16]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program_add_payment_route@4.ops[18]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program_add_payment_route@4.ops[21]: 'l-store-copy reinterpret_bytes[48]%0#0 0'
debug: Replaced approval_program_add_payment_route@4.ops[23]: 'v-load reinterpret_bytes[48]%0#0' with 'l-load reinterpret_bytes[48]%0#0'
debug: Inserted approval_program_add_payment_route@4.ops[26]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_add_payment_route@4.ops[28]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_increment_payment_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program_increment_payment_route@5.ops[6]: 'l-store-copy tmp%12#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[8]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted approval_program_increment_payment_route@5.ops[11]: 'l-store-copy tmp%13#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[13]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted approval_program_increment_payment_route@5.ops[16]: 'l-store-copy tmp%14#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[18]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted approval_program_increment_payment_route@5.ops[21]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[23]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted approval_program_increment_payment_route@5.ops[27]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[29]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted approval_program_increment_payment_route@5.ops[36]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[38]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_increment_payment_route@5.ops[31]: 'l-store-copy tmp%16#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[34]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted approval_program_increment_payment_route@5.ops[25]: 'l-store-copy tmp%15#0 0'
debug: Replaced approval_program_increment_payment_route@5.ops[34]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted approval_program_create_storage_route@6.ops[1]: 'l-store-copy tmp%17#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[3]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted approval_program_create_storage_route@6.ops[6]: 'l-store-copy tmp%18#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[8]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted approval_program_create_storage_route@6.ops[11]: 'l-store-copy tmp%19#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[13]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted approval_program_create_storage_route@6.ops[16]: 'l-store-copy tmp%20#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[18]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted approval_program_create_storage_route@6.ops[21]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[23]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted approval_program_create_storage_route@6.ops[25]: 'l-store-copy tmp%21#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[27]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted approval_program_create_storage_route@6.ops[30]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_create_storage_route@6.ops[32]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_delete_storage_route@7.ops[1]: 'l-store-copy tmp%22#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[3]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted approval_program_delete_storage_route@7.ops[6]: 'l-store-copy tmp%23#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[8]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted approval_program_delete_storage_route@7.ops[11]: 'l-store-copy tmp%24#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[13]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted approval_program_delete_storage_route@7.ops[16]: 'l-store-copy tmp%25#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[18]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted approval_program_delete_storage_route@7.ops[21]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[23]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted approval_program_delete_storage_route@7.ops[25]: 'l-store-copy tmp%26#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[27]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted approval_program_delete_storage_route@7.ops[30]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_delete_storage_route@7.ops[32]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_struct_arg_route@8.ops[1]: 'l-store-copy tmp%27#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[3]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted approval_program_struct_arg_route@8.ops[6]: 'l-store-copy tmp%28#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[8]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted approval_program_struct_arg_route@8.ops[11]: 'l-store-copy tmp%29#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[13]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted approval_program_struct_arg_route@8.ops[16]: 'l-store-copy tmp%30#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[18]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted approval_program_struct_arg_route@8.ops[21]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[23]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted approval_program_struct_arg_route@8.ops[32]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[34]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_struct_arg_route@8.ops[27]: 'l-store-copy reinterpret_bytes[16]%0#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[30]: 'v-load reinterpret_bytes[16]%0#0' with 'l-load reinterpret_bytes[16]%0#0'
debug: Inserted approval_program_struct_arg_route@8.ops[25]: 'l-store-copy tmp%31#0 0'
debug: Replaced approval_program_struct_arg_route@8.ops[30]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted approval_program_struct_return_route@9.ops[1]: 'l-store-copy tmp%32#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[3]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted approval_program_struct_return_route@9.ops[6]: 'l-store-copy tmp%33#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[8]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted approval_program_struct_return_route@9.ops[11]: 'l-store-copy tmp%34#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[13]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted approval_program_struct_return_route@9.ops[16]: 'l-store-copy tmp%35#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[18]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted approval_program_struct_return_route@9.ops[25]: 'l-store-copy tmp%37#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[27]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted approval_program_struct_return_route@9.ops[30]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[32]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_struct_return_route@9.ops[21]: 'l-store-copy tmp%36#0 0'
debug: Replaced approval_program_struct_return_route@9.ops[24]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted approval_program_tup_return_route@10.ops[1]: 'l-store-copy tmp%38#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[3]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted approval_program_tup_return_route@10.ops[6]: 'l-store-copy tmp%39#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[8]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted approval_program_tup_return_route@10.ops[11]: 'l-store-copy tmp%40#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[13]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted approval_program_tup_return_route@10.ops[16]: 'l-store-copy tmp%41#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[18]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted approval_program_tup_return_route@10.ops[22]: 'l-store-copy elements_to_encode%0#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[24]: 'v-load elements_to_encode%0#0' with 'l-load elements_to_encode%0#0'
debug: Inserted approval_program_tup_return_route@10.ops[33]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[35]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted approval_program_tup_return_route@10.ops[42]: 'l-store-copy tmp%42#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[44]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted approval_program_tup_return_route@10.ops[47]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[49]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_tup_return_route@10.ops[38]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced approval_program_tup_return_route@10.ops[41]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted approval_program_tup_return_route@10.ops[21]: 'l-store-copy elements_to_encode%1#0 1'
debug: Replaced approval_program_tup_return_route@10.ops[28]: 'v-load elements_to_encode%1#0' with 'l-load elements_to_encode%1#0'
debug: Inserted approval_program_tup_return_route@10.ops[27]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced approval_program_tup_return_route@10.ops[33]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted approval_program_tup_return_route@10.ops[31]: 'l-store-copy val_as_bytes%1#0 1'
debug: Replaced approval_program_tup_return_route@10.ops[39]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[1]: 'l-store-copy tmp%43#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[3]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[6]: 'l-store-copy tmp%44#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[8]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[11]: 'l-store-copy tmp%45#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[13]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[16]: 'l-store-copy tmp%46#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[18]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[21]: 'l-store-copy to_encode%0#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[23]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[29]: 'l-store-copy tmp%47#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[31]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[34]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[36]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_calculate_sum_route@11.ops[25]: 'l-store-copy val_as_bytes%2#0 0'
debug: Replaced approval_program_calculate_sum_route@11.ops[28]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted approval_program_bare_routing@14.ops[1]: 'l-store-copy tmp%48#0 0'
debug: Replaced approval_program_bare_routing@14.ops[4]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted approval_program___algopy_default_create@15.ops[1]: 'l-store-copy tmp%49#0 0'
debug: Replaced approval_program___algopy_default_create@15.ops[3]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted approval_program___algopy_default_create@15.ops[6]: 'l-store-copy tmp%50#0 0'
debug: Replaced approval_program___algopy_default_create@15.ops[8]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__algopy_default_create@17.ops[1]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__algopy_default_create@17.ops[3]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_after_if_else@20.ops[1]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_if_else@20.ops[3]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Found 1 edge set/s for test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Found 1 edge set/s for test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for approval_program_fixed_initialize_route@3 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_add_payment_route@4 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_increment_payment_route@5 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_create_storage_route@6 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_delete_storage_route@7 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_struct_arg_route@8 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_struct_return_route@9 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_tup_return_route@10 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_calculate_sum_route@11 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__algopy_default_create@17 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: shared x-stack for approval_program_after_if_else@20 -> approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21: tmp%0#0
debug: test_cases.mutable_native_types.contract.Contract.calculate_sum f-stack entry: []
debug: test_cases.mutable_native_types.contract.Contract.calculate_sum f-stack on first store: ['result#0', 'result#6']
debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
mutable_native_types/contract.py:166 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.add(val: bytes) -> uint64:
mutable_native_types/contract.py:66 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.__init__() -> void:
mutable_native_types/contract.py:89 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.fixed_initialize() -> void:
mutable_native_types/contract.py:109 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.add_payment(pay: bytes) -> void:
mutable_native_types/contract.py:115 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.increment_payment(index: uint64, amt: uint64) -> void:
mutable_native_types/contract.py:120 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.create_storage(box_key: uint64) -> void:
mutable_native_types/contract.py:127 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.delete_storage(box_key: uint64) -> void:
mutable_native_types/contract.py:136 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.struct_arg(box_key: uint64, a: bytes) -> void:
mutable_native_types/contract.py:146 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.struct_return() -> bytes:
mutable_native_types/contract.py:150 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.tup_return() -> uint64, uint64:
mutable_native_types/contract.py:154 debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.calculate_sum() -> uint64:
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
debug: removing explicit jump to fall-through block main_call___init__@1
debug: removing explicit jump to fall-through block main_after_if_else@2
mutable_native_types/contract.py:166 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.add(val: bytes) -> uint64:
debug: removing explicit jump to fall-through block add_block@0
mutable_native_types/contract.py:66 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.__init__() -> void:
debug: removing explicit jump to fall-through block __init___block@0
mutable_native_types/contract.py:89 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.fixed_initialize() -> void:
debug: removing explicit jump to fall-through block fixed_initialize_block@0
mutable_native_types/contract.py:109 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.add_payment(pay: bytes) -> void:
debug: removing explicit jump to fall-through block add_payment_block@0
mutable_native_types/contract.py:115 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.increment_payment(index: uint64, amt: uint64) -> void:
debug: removing explicit jump to fall-through block increment_payment_block@0
mutable_native_types/contract.py:120 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.create_storage(box_key: uint64) -> void:
debug: removing explicit jump to fall-through block create_storage_block@0
mutable_native_types/contract.py:127 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.delete_storage(box_key: uint64) -> void:
debug: removing explicit jump to fall-through block delete_storage_block@0
mutable_native_types/contract.py:136 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.struct_arg(box_key: uint64, a: bytes) -> void:
debug: removing explicit jump to fall-through block struct_arg_block@0
mutable_native_types/contract.py:146 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.struct_return() -> bytes:
debug: removing explicit jump to fall-through block struct_return_block@0
mutable_native_types/contract.py:150 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.tup_return() -> uint64, uint64:
debug: removing explicit jump to fall-through block tup_return_block@0
mutable_native_types/contract.py:154 debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.calculate_sum() -> uint64:
debug: removing explicit jump to fall-through block calculate_sum_block@0
debug: removing explicit jump to fall-through block calculate_sum_if_body@1
debug: removing explicit jump to fall-through block calculate_sum_after_if_else@2
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block approval_program_block@0
debug: removing explicit jump to fall-through block approval_program_block@1
debug: removing explicit jump to fall-through block approval_program_abi_routing@2
debug: removing explicit jump to fall-through block approval_program_switch_case_default@12
debug: removing explicit jump to fall-through block approval_program_switch_case_next@13
debug: removing explicit jump to fall-through block approval_program_after_if_else@20
debug: removing explicit jump to fall-through block approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@21
debug: removing explicit jump to fall-through block approval_program_switch_case_default@18
debug: removing explicit jump to fall-through block approval_program_switch_case_next@19
debug: removing explicit jump to fall-through block approval_program_block@16
debug: removing explicit jump to fall-through block approval_program_after_inlined_test_cases.mutable_native_types.contract.Contract.__algopy_default_create@17
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
info: Writing mutable_native_types/out_unoptimized/Contract.approval.teal
info: Writing mutable_native_types/out_unoptimized/Contract.clear.teal
info: Writing mutable_native_types/out_unoptimized/Contract.approval.bin
info: Writing mutable_native_types/out_unoptimized/Contract.clear.bin
info: Writing mutable_native_types/out_unoptimized/Contract.approval.puya.map
info: Writing mutable_native_types/out_unoptimized/Contract.clear.puya.map