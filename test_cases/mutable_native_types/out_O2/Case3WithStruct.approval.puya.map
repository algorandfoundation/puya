{
  "version": 3,
  "sources": [
    "../case3_with_mutable_struct.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAsEK;;AAAA;AAAA;AAAA;;AAAA;AAEY;;;;AAAA;;AACD;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAEQ;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AAC0B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAd;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADK;AAAA;AAAA;;;;;AALZ;AAAA;;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAzDL;;;AAAA;AA2De;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;;AAAQ;AAAR;AAA5B;AAAP;AACQ;;;AAIA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACM;;AAAQ;AAAR;AAAN;AAAA;AAAA;;AAAA;AAAA;AAAA;AACM;;AAAQ;;AAAR;AAAN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAJD;;AAAA;AAAA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAnDL;;;AAAA;AAAA;;AAqDQ;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AACY;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;;;;;AAnBZ;;AAUA;;AAAA;AAAA;AAAA;;AAAA;AA7CL;;;AAAA;AAAA;;AA+CQ;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AACY;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;;;;;AARZ;;AAAA;AAAA;AAAA;;AAAA;AAxCL;;;AAAA;;AA0CiB;AAAL;;AAAK;;AAAO;AAAP;AAAjB;;;AACyB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAb;;;AAAA;AADK;AAAA;AAAA;;;;;AAPZ;;AAAA;AAAA;AAAA;;AAAA;AAnCL;;;AAAA;AAAA;;AAqCwB;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AACyB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAb;;;AAAA;AADK;AAAA;AAAA;;;;;AAXZ;;AAAA;AAAA;AAAA;;AAAA;AAEW;AAAR;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAjB;;;AACkB;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACG;AAAA;AAAA;AAAT;;AAAA;AACS;AAAA;;AAAA;AAAT;AAAA;;AAHK;AAAA;AAAA;;;;;AAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;AAuBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;;AAAA;AAAP;AACO;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAdL;;;AAcK;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;;;AAAA;AAAP;AAC2B;;AAA3B;AAAA;AAAA;AAAA;AAAA;;AACyB;;AAAzB;AAAA;;AAAA;AAAA;AAAA;AAJH;;AAJL;;AAAA;;;;;;;;;AAcA;;;AAEQ;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAA3B;AAAP;AACA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;AAAA;AAA4B;AAA5B;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;AA8DO;AAAA;AAAA;AAAA;AAAA;;;AAA4B;;AAA5B;AAAP;AAEI;;;AAAA;AAA0B;;AAA1B;AADJ;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 16 0 1 3"
    },
    "7": {
      "op": "bytecblock \"tup_bag\" 0x151f7c75"
    },
    "22": {
      "op": "intc_1 // 0",
      "stack_out": [
        "items#0"
      ]
    },
    "23": {
      "op": "dupn 2",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0"
      ]
    },
    "25": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0"
      ]
    },
    "27": {
      "op": "dupn 6",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "29": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#2"
      ]
    },
    "31": {
      "op": "bz main_bare_routing@34",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "34": {
      "op": "pushbytess 0xa67ea2ab 0x028840ea 0xf75cee9d 0x880b5534 0x53030b41 0x7d39df51 0x7a1e7b43 0x3447847f 0x2ba64852 0xabc9be78 0x73457a19 // method \"create_box()void\", method \"num_tups()uint64\", method \"add_tup((uint64,uint64))void\", method \"get_tup(uint64)(uint64,uint64)\", method \"sum()uint64\", method \"add_many_tups((uint64,uint64)[])void\", method \"add_fixed_tups((uint64,uint64)[3])void\", method \"set_a(uint64)void\", method \"set_b(uint64)void\", method \"get_3_tups(uint64)(uint64,uint64)[3]\", method \"get_all_tups()(uint64,uint64)[]\"",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(sum()uint64)",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])"
      ]
    },
    "91": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(create_box()void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(num_tups()uint64)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(sum()uint64)",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "Method(create_box()void)",
        "Method(num_tups()uint64)",
        "Method(add_tup((uint64,uint64))void)",
        "Method(get_tup(uint64)(uint64,uint64))",
        "Method(sum()uint64)",
        "Method(add_many_tups((uint64,uint64)[])void)",
        "Method(add_fixed_tups((uint64,uint64)[3])void)",
        "Method(set_a(uint64)void)",
        "Method(set_b(uint64)void)",
        "Method(get_3_tups(uint64)(uint64,uint64)[3])",
        "Method(get_all_tups()(uint64,uint64)[])",
        "tmp%2#0"
      ]
    },
    "94": {
      "op": "match main_create_box_route@5 main_num_tups_route@6 main_add_tup_route@7 main_get_tup_route@8 main_sum_route@9 main_add_many_tups_route@13 main_add_fixed_tups_route@17 main_set_a_route@21 main_set_b_route@25 main_get_3_tups_route@29 main_get_all_tups_route@30",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "118": {
      "block": "main_after_if_else@36",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "119": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "120": {
      "block": "main_get_all_tups_route@30",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%53#0"
      ]
    },
    "122": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%54#0"
      ]
    },
    "123": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "124": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%55#0"
      ]
    },
    "126": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "127": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "result#0"
      ]
    },
    "131": {
      "op": "bury 9",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "133": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "134": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "135": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "136": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "137": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "items#0",
        "maybe_value%0#0",
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "items#0"
      ]
    },
    "140": {
      "op": "bury 11",
      "defined_out": [
        "items#0",
        "maybe_value%0#0",
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "142": {
      "op": "intc_1 // 0",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "143": {
      "op": "extract_uint64",
      "defined_out": [
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%1#1"
      ]
    },
    "144": {
      "op": "bury 2",
      "defined_out": [
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "146": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "147": {
      "op": "bury 4",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "149": {
      "block": "main_for_header@31",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "151": {
      "op": "dig 2",
      "defined_out": [
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%1#1"
      ]
    },
    "153": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "154": {
      "op": "bz main_after_for@33",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "157": {
      "op": "dig 3",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "159": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "160": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "i#0 (copy)",
        "16"
      ]
    },
    "161": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "bytes_offset%0#0"
      ]
    },
    "162": {
      "op": "dig 11",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0",
        "items#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "bytes_offset%0#0",
        "items#0"
      ]
    },
    "164": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "items#0",
        "bytes_offset%0#0"
      ]
    },
    "165": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "items#0",
        "bytes_offset%0#0",
        "16"
      ]
    },
    "166": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "i#0",
        "items#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "encoded_element%0#0"
      ]
    },
    "167": {
      "op": "dig 10",
      "defined_out": [
        "encoded_element%0#0",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "encoded_element%0#0",
        "result#0"
      ]
    },
    "169": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "result#0",
        "encoded_element%0#0"
      ]
    },
    "170": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0"
      ]
    },
    "171": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "172": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%0#0",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "extract_to_end%0#0"
      ]
    },
    "175": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "i#0",
        "items#0",
        "len%0#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "len%0#0"
      ]
    },
    "176": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "len%0#0",
        "16"
      ]
    },
    "177": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "178": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%0#0",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "as_bytes%1#0"
      ]
    },
    "179": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "182": {
      "op": "replace2 0",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "result#0"
      ]
    },
    "184": {
      "op": "bury 10",
      "defined_out": [
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "186": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "187": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "188": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "items#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "190": {
      "op": "b main_for_header@31"
    },
    "193": {
      "block": "main_after_for@33",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "0x151f7c75"
      ]
    },
    "194": {
      "op": "dig 9",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "0x151f7c75",
        "result#0"
      ]
    },
    "196": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%58#0"
      ]
    },
    "197": {
      "op": "log",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "198": {
      "op": "intc_2 // 1",
      "defined_out": [
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "199": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "200": {
      "block": "main_get_3_tups_route@29",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%46#0"
      ]
    },
    "202": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%47#0"
      ]
    },
    "203": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "204": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%48#0"
      ]
    },
    "206": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "207": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "210": {
      "op": "btoi",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0"
      ]
    },
    "211": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "start#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "\"tup_bag\""
      ]
    },
    "212": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "start#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "213": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0"
      ]
    },
    "214": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "start#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "215": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "start#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "216": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "start#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "tmp%0#2"
      ]
    },
    "217": {
      "op": "dig 2",
      "defined_out": [
        "maybe_value%0#0",
        "start#0",
        "start#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "start#0 (copy)"
      ]
    },
    "219": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "maybe_value%0#0",
        "start#0",
        "start#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "start#0 (copy)",
        "3"
      ]
    },
    "220": {
      "op": "+",
      "defined_out": [
        "maybe_value%0#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "221": {
      "op": ">=",
      "defined_out": [
        "maybe_value%0#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0",
        "tmp%2#1"
      ]
    },
    "222": {
      "error": "not enough items",
      "op": "assert // not enough items",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "maybe_value%0#0"
      ]
    },
    "223": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0"
      ]
    },
    "226": {
      "op": "dig 1",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "start#0 (copy)"
      ]
    },
    "228": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "items#0",
        "start#0",
        "start#0 (copy)",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "start#0 (copy)",
        "16"
      ]
    },
    "229": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "bytes_offset%0#0"
      ]
    },
    "230": {
      "op": "dig 1",
      "defined_out": [
        "bytes_offset%0#0",
        "items#0",
        "items#0 (copy)",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "bytes_offset%0#0",
        "items#0 (copy)"
      ]
    },
    "232": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "items#0 (copy)",
        "bytes_offset%0#0"
      ]
    },
    "233": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "items#0 (copy)",
        "bytes_offset%0#0",
        "16"
      ]
    },
    "234": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0"
      ]
    },
    "235": {
      "op": "dig 2",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "start#0 (copy)"
      ]
    },
    "237": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "encoded_element%0#0",
        "items#0",
        "start#0",
        "start#0 (copy)",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "start#0 (copy)",
        "1"
      ]
    },
    "238": {
      "op": "+",
      "defined_out": [
        "encoded_element%0#0",
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1",
        "tmp%4#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "tmp%4#1"
      ]
    },
    "239": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "tmp%4#1",
        "16"
      ]
    },
    "240": {
      "op": "*",
      "defined_out": [
        "bytes_offset%1#0",
        "encoded_element%0#0",
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "bytes_offset%1#0"
      ]
    },
    "241": {
      "op": "dig 2",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "bytes_offset%1#0",
        "items#0 (copy)"
      ]
    },
    "243": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "items#0 (copy)",
        "bytes_offset%1#0"
      ]
    },
    "244": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "items#0 (copy)",
        "bytes_offset%1#0",
        "16"
      ]
    },
    "245": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "encoded_element%1#0",
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "start#0",
        "items#0",
        "encoded_element%0#0",
        "encoded_element%1#0"
      ]
    },
    "246": {
      "op": "uncover 3",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "items#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "start#0"
      ]
    },
    "248": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "items#0",
        "start#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "items#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "start#0",
        "2"
      ]
    },
    "250": {
      "op": "+",
      "defined_out": [
        "encoded_element%0#0",
        "encoded_element%1#0",
        "items#0",
        "tmp%0#2",
        "tmp%1#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "items#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "tmp%5#0"
      ]
    },
    "251": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "items#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "tmp%5#0",
        "16"
      ]
    },
    "252": {
      "op": "*",
      "defined_out": [
        "bytes_offset%2#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "items#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "items#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "bytes_offset%2#0"
      ]
    },
    "253": {
      "op": "uncover 3",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "bytes_offset%2#0",
        "items#0"
      ]
    },
    "255": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "items#0",
        "bytes_offset%2#0"
      ]
    },
    "256": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "items#0",
        "bytes_offset%2#0",
        "16"
      ]
    },
    "257": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "encoded_element%1#0",
        "encoded_element%2#0",
        "items#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%0#0",
        "encoded_element%1#0",
        "encoded_element%2#0"
      ]
    },
    "258": {
      "op": "cover 2",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%2#0",
        "encoded_element%0#0",
        "encoded_element%1#0"
      ]
    },
    "260": {
      "op": "concat",
      "defined_out": [
        "encoded%2#1",
        "encoded_element%2#0",
        "items#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%2#0",
        "encoded%2#1"
      ]
    },
    "261": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded%2#1",
        "encoded_element%2#0"
      ]
    },
    "262": {
      "op": "concat",
      "defined_out": [
        "encoded%3#1",
        "items#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded%3#1"
      ]
    },
    "263": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded%3#1",
        "items#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded%3#1",
        "0x151f7c75"
      ]
    },
    "264": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "0x151f7c75",
        "encoded%3#1"
      ]
    },
    "265": {
      "op": "concat",
      "defined_out": [
        "items#0",
        "tmp%0#2",
        "tmp%1#1",
        "tmp%52#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%52#0"
      ]
    },
    "266": {
      "op": "log",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "267": {
      "op": "intc_2 // 1",
      "defined_out": [
        "items#0",
        "tmp%0#1",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "268": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "269": {
      "block": "main_set_b_route@25",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%41#0"
      ]
    },
    "271": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%42#0"
      ]
    },
    "272": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "273": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%43#0"
      ]
    },
    "275": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "276": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "279": {
      "op": "btoi",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "b#0"
      ]
    },
    "280": {
      "op": "bury 5",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "282": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "op": "callsub _check_owner"
    },
    "285": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "b#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "286": {
      "op": "box_get",
      "defined_out": [
        "b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "287": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "288": {
      "op": "intc_1 // 0",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "289": {
      "op": "extract_uint64",
      "defined_out": [
        "b#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#2"
      ]
    },
    "290": {
      "op": "bury 3",
      "defined_out": [
        "b#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "292": {
      "op": "intc_1 // 0",
      "defined_out": [
        "b#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "293": {
      "op": "bury 4",
      "defined_out": [
        "b#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "295": {
      "block": "main_for_header@26",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "297": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%0#2"
      ]
    },
    "299": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "300": {
      "op": "bz main_after_for@16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "303": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "304": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%1#2",
        "maybe_value%1#2",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "maybe_exists%1#2"
      ]
    },
    "305": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#2",
        "maybe_value%1#2 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "maybe_value%1#2 (copy)"
      ]
    },
    "307": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "tmp%1#3"
      ]
    },
    "310": {
      "op": "dig 5",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0"
      ]
    },
    "312": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "313": {
      "op": "cover 3",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0 (copy)"
      ]
    },
    "315": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0 (copy)",
        "16"
      ]
    },
    "316": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0"
      ]
    },
    "317": {
      "op": "dup2",
      "defined_out": [
        "bytes_offset%0#0",
        "bytes_offset%0#0 (copy)",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3",
        "tmp%1#3 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "tmp%1#3 (copy)",
        "bytes_offset%0#0 (copy)"
      ]
    },
    "318": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "tmp%1#3 (copy)",
        "bytes_offset%0#0 (copy)",
        "16"
      ]
    },
    "319": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "encoded_element%0#0"
      ]
    },
    "320": {
      "op": "dig 9",
      "defined_out": [
        "b#0",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "b#0"
      ]
    },
    "322": {
      "op": "itob",
      "defined_out": [
        "b#0",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "323": {
      "op": "replace2 8",
      "defined_out": [
        "b#0",
        "bytes_offset%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3",
        "updated_data%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "updated_data%0#0"
      ]
    },
    "325": {
      "op": "replace3",
      "defined_out": [
        "b#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "updated_array%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "updated_array%0#0"
      ]
    },
    "326": {
      "op": "replace2 8",
      "defined_out": [
        "b#0",
        "i#0",
        "tmp%0#2",
        "updated_data%1#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "updated_data%1#0"
      ]
    },
    "328": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "updated_data%1#0",
        "\"tup_bag\""
      ]
    },
    "329": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "\"tup_bag\"",
        "updated_data%1#0"
      ]
    },
    "330": {
      "op": "box_put",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "331": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "b#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "332": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "333": {
      "op": "bury 4",
      "defined_out": [
        "b#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "335": {
      "op": "b main_for_header@26"
    },
    "338": {
      "block": "main_after_for@16",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "339": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "340": {
      "block": "main_set_a_route@21",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%36#0"
      ]
    },
    "342": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%37#0"
      ]
    },
    "343": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "344": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%38#0"
      ]
    },
    "346": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "347": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "350": {
      "op": "btoi",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "a#0"
      ]
    },
    "351": {
      "op": "bury 7",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "353": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "op": "callsub _check_owner"
    },
    "356": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "a#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "357": {
      "op": "box_get",
      "defined_out": [
        "a#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "358": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "359": {
      "op": "intc_1 // 0",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "360": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#2"
      ]
    },
    "361": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "363": {
      "op": "intc_1 // 0",
      "defined_out": [
        "a#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "364": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "366": {
      "block": "main_for_header@22",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "368": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%0#2"
      ]
    },
    "370": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "371": {
      "op": "bz main_after_for@16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "374": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "375": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%1#2",
        "maybe_value%1#2",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "maybe_exists%1#2"
      ]
    },
    "376": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2"
      ]
    },
    "377": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#2",
        "maybe_value%1#2 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "maybe_value%1#2 (copy)"
      ]
    },
    "378": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "tmp%1#3"
      ]
    },
    "381": {
      "op": "dig 5",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0"
      ]
    },
    "383": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "384": {
      "op": "cover 3",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0 (copy)"
      ]
    },
    "386": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "i#0 (copy)",
        "16"
      ]
    },
    "387": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0"
      ]
    },
    "388": {
      "op": "dup2",
      "defined_out": [
        "bytes_offset%0#0",
        "bytes_offset%0#0 (copy)",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3",
        "tmp%1#3 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "tmp%1#3 (copy)",
        "bytes_offset%0#0 (copy)"
      ]
    },
    "389": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "tmp%1#3 (copy)",
        "bytes_offset%0#0 (copy)",
        "16"
      ]
    },
    "390": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "encoded_element%0#0"
      ]
    },
    "391": {
      "op": "dig 11",
      "defined_out": [
        "a#0",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "a#0"
      ]
    },
    "393": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "encoded_element%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "394": {
      "op": "replace2 0",
      "defined_out": [
        "a#0",
        "bytes_offset%0#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "tmp%1#3",
        "updated_data%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%1#3",
        "bytes_offset%0#0",
        "updated_data%0#0"
      ]
    },
    "396": {
      "op": "replace3",
      "defined_out": [
        "a#0",
        "i#0",
        "maybe_value%1#2",
        "tmp%0#2",
        "updated_array%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "maybe_value%1#2",
        "updated_array%0#0"
      ]
    },
    "397": {
      "op": "replace2 8",
      "defined_out": [
        "a#0",
        "i#0",
        "tmp%0#2",
        "updated_data%1#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "updated_data%1#0"
      ]
    },
    "399": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "updated_data%1#0",
        "\"tup_bag\""
      ]
    },
    "400": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "\"tup_bag\"",
        "updated_data%1#0"
      ]
    },
    "401": {
      "op": "box_put",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "402": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "a#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "403": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "404": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "406": {
      "op": "b main_for_header@22"
    },
    "409": {
      "block": "main_add_fixed_tups_route@17",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%32#0"
      ]
    },
    "411": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%33#0"
      ]
    },
    "412": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "413": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%34#0"
      ]
    },
    "415": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "416": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tups#0"
      ]
    },
    "419": {
      "op": "bury 8",
      "defined_out": [
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "421": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "422": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "424": {
      "block": "main_for_header@18",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "426": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "3"
      ]
    },
    "427": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "428": {
      "op": "bz main_after_for@16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "431": {
      "op": "dig 3",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "433": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "434": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "i#0 (copy)",
        "16"
      ]
    },
    "435": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "bytes_offset%0#0"
      ]
    },
    "436": {
      "op": "dig 9",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "bytes_offset%0#0",
        "tups#0"
      ]
    },
    "438": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tups#0",
        "bytes_offset%0#0"
      ]
    },
    "439": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tups#0",
        "bytes_offset%0#0",
        "16"
      ]
    },
    "440": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "encoded_element%0#0"
      ]
    },
    "441": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "op": "callsub add_tup",
      "defined_out": [
        "add_tup%0#0",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "add_tup%0#0"
      ]
    },
    "444": {
      "op": "pop",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "445": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "446": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "447": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "449": {
      "op": "b main_for_header@18"
    },
    "452": {
      "block": "main_add_many_tups_route@13",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%28#0"
      ]
    },
    "454": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%29#0"
      ]
    },
    "455": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "456": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%30#0"
      ]
    },
    "458": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "459": {
      "op": "txna ApplicationArgs 1"
    },
    "462": {
      "op": "dup",
      "defined_out": [
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tups#0",
        "tups#0"
      ]
    },
    "463": {
      "op": "bury 9",
      "defined_out": [
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tups#0"
      ]
    },
    "465": {
      "op": "intc_1 // 0",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tups#0",
        "0"
      ]
    },
    "466": {
      "op": "extract_uint16",
      "defined_out": [
        "array%array_length%0#1",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "array%array_length%0#1"
      ]
    },
    "467": {
      "op": "bury 6",
      "defined_out": [
        "array%array_length%0#1",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "469": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_length%0#1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "470": {
      "op": "bury 4",
      "defined_out": [
        "array%array_length%0#1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "472": {
      "block": "main_for_header@14",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "474": {
      "op": "dig 6",
      "defined_out": [
        "array%array_length%0#1",
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "array%array_length%0#1"
      ]
    },
    "476": {
      "op": "<",
      "defined_out": [
        "array%array_length%0#1",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "477": {
      "op": "bz main_after_for@16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "480": {
      "op": "dig 7",
      "defined_out": [
        "array%array_length%0#1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tups#0"
      ]
    },
    "482": {
      "op": "extract 2 0",
      "defined_out": [
        "array%array_length%0#1",
        "array_trimmed%0#0",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "array_trimmed%0#0"
      ]
    },
    "485": {
      "op": "dig 4",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "array_trimmed%0#0",
        "i#0"
      ]
    },
    "487": {
      "op": "dup",
      "defined_out": [
        "array%array_length%0#1",
        "array_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "array_trimmed%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "488": {
      "op": "cover 2",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "array_trimmed%0#0",
        "i#0 (copy)"
      ]
    },
    "490": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "array%array_length%0#1",
        "array_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "array_trimmed%0#0",
        "i#0 (copy)",
        "16"
      ]
    },
    "491": {
      "op": "*",
      "defined_out": [
        "array%array_length%0#1",
        "array_trimmed%0#0",
        "bytes_offset%0#0",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "array_trimmed%0#0",
        "bytes_offset%0#0"
      ]
    },
    "492": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "array_trimmed%0#0",
        "bytes_offset%0#0",
        "16"
      ]
    },
    "493": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array%array_length%0#1",
        "encoded_element%0#0",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "encoded_element%0#0"
      ]
    },
    "494": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "op": "callsub add_tup",
      "defined_out": [
        "add_tup%0#0",
        "array%array_length%0#1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "add_tup%0#0"
      ]
    },
    "497": {
      "op": "pop",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "498": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array%array_length%0#1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "499": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "500": {
      "op": "bury 4",
      "defined_out": [
        "array%array_length%0#1",
        "i#0",
        "tups#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "502": {
      "op": "b main_for_header@14"
    },
    "505": {
      "block": "main_sum_route@9",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%23#0"
      ]
    },
    "507": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%24#0"
      ]
    },
    "508": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "509": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%25#0"
      ]
    },
    "511": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "512": {
      "op": "intc_1 // 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "total#0"
      ]
    },
    "513": {
      "op": "bury 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "515": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "516": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "517": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "518": {
      "op": "intc_1 // 0",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "519": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#2"
      ]
    },
    "520": {
      "op": "bury 3",
      "defined_out": [
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "522": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "523": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "525": {
      "block": "main_for_header@10",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "527": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%0#2"
      ]
    },
    "529": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "continue_looping%0#0"
      ]
    },
    "530": {
      "op": "bz main_after_for@12",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "533": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "i#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "534": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%1#2",
        "maybe_value%1#2",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2",
        "maybe_exists%1#2"
      ]
    },
    "535": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%1#2"
      ]
    },
    "536": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%1#3"
      ]
    },
    "539": {
      "op": "dig 4",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%1#3",
        "i#0"
      ]
    },
    "541": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%1#3",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "542": {
      "op": "cover 2",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%1#3",
        "i#0 (copy)"
      ]
    },
    "544": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%1#3",
        "i#0 (copy)",
        "16"
      ]
    },
    "545": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#3"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%1#3",
        "bytes_offset%0#0"
      ]
    },
    "546": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tmp%1#3",
        "bytes_offset%0#0",
        "16"
      ]
    },
    "547": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "tup#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tup#0"
      ]
    },
    "548": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "tup#0",
        "tup#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "549": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#2",
        "tup#0",
        "tup#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tup#0",
        "tup#0 (copy)",
        "0"
      ]
    },
    "550": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "tmp%2#2",
        "tup#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tup#0",
        "tmp%2#2"
      ]
    },
    "551": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "tmp%2#2",
        "total#0",
        "tup#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tup#0",
        "tmp%2#2",
        "total#0"
      ]
    },
    "553": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "tup#0",
        "total#0"
      ]
    },
    "554": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "total#0",
        "tup#0"
      ]
    },
    "555": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "i#0",
        "tmp%0#2",
        "total#0",
        "tup#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "total#0",
        "tup#0",
        "8"
      ]
    },
    "557": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "tmp%3#0",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "total#0",
        "tmp%3#0"
      ]
    },
    "558": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "total#0"
      ]
    },
    "559": {
      "op": "bury 2",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "561": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "i#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0",
        "1"
      ]
    },
    "562": {
      "op": "+",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "i#0"
      ]
    },
    "563": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "tmp%0#2",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "565": {
      "op": "b main_for_header@10"
    },
    "568": {
      "block": "main_after_for@12",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "dup",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "total#0"
      ]
    },
    "569": {
      "op": "itob",
      "defined_out": [
        "total#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "val_as_bytes%1#0"
      ]
    },
    "570": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "total#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "571": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "572": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%27#0"
      ]
    },
    "573": {
      "op": "log",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "574": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1",
        "total#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "575": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "576": {
      "block": "main_get_tup_route@8",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%16#0"
      ]
    },
    "578": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%17#0"
      ]
    },
    "579": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "580": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%18#0"
      ]
    },
    "582": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "583": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "586": {
      "op": "btoi",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0"
      ]
    },
    "587": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\"",
        "index#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "\"tup_bag\""
      ]
    },
    "588": {
      "op": "box_get",
      "defined_out": [
        "index#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "589": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0"
      ]
    },
    "590": {
      "op": "dup",
      "defined_out": [
        "index#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "591": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "index#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "592": {
      "op": "extract_uint64",
      "defined_out": [
        "index#0",
        "maybe_value%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0",
        "tmp%0#2"
      ]
    },
    "593": {
      "op": "dig 2",
      "defined_out": [
        "index#0",
        "index#0 (copy)",
        "maybe_value%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "index#0 (copy)"
      ]
    },
    "595": {
      "op": ">",
      "defined_out": [
        "index#0",
        "maybe_value%0#0",
        "tmp%0#2",
        "tmp%1#6"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0",
        "tmp%1#6"
      ]
    },
    "596": {
      "error": "index out of bounds",
      "op": "assert // index out of bounds",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "maybe_value%0#0"
      ]
    },
    "597": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "index#0",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "index#0",
        "tmp%2#0"
      ]
    },
    "600": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%2#0",
        "index#0"
      ]
    },
    "601": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "index#0",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%2#0",
        "index#0",
        "16"
      ]
    },
    "602": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "tmp%0#2",
        "tmp%2#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%2#0",
        "bytes_offset%0#0"
      ]
    },
    "603": {
      "op": "intc_0 // 16",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%2#0",
        "bytes_offset%0#0",
        "16"
      ]
    },
    "604": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "encoded_element%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%0#0"
      ]
    },
    "605": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_element%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "encoded_element%0#0",
        "0x151f7c75"
      ]
    },
    "606": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "0x151f7c75",
        "encoded_element%0#0"
      ]
    },
    "607": {
      "op": "concat",
      "defined_out": [
        "tmp%0#2",
        "tmp%22#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%22#0"
      ]
    },
    "608": {
      "op": "log",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "609": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "610": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "611": {
      "block": "main_add_tup_route@7",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%12#0"
      ]
    },
    "613": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%13#0"
      ]
    },
    "614": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "615": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%14#0"
      ]
    },
    "617": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "618": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "reinterpret_Encoded((uint64,uint64))%0#0"
      ]
    },
    "621": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "op": "callsub add_tup",
      "defined_out": [
        "add_tup%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "add_tup%0#0"
      ]
    },
    "624": {
      "op": "pop",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "625": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "626": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "627": {
      "block": "main_num_tups_route@6",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%7#0"
      ]
    },
    "629": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%8#0"
      ]
    },
    "630": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "631": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%9#0"
      ]
    },
    "633": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "634": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "635": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "636": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0"
      ]
    },
    "637": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "638": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#2"
      ]
    },
    "639": {
      "op": "itob",
      "defined_out": [
        "tmp%0#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "val_as_bytes%0#0"
      ]
    },
    "640": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#2",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "641": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "642": {
      "op": "concat",
      "defined_out": [
        "tmp%0#2",
        "tmp%11#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%11#0"
      ]
    },
    "643": {
      "op": "log",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "644": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "645": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "646": {
      "block": "main_create_box_route@5",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%3#0"
      ]
    },
    "648": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%4#0"
      ]
    },
    "649": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "650": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%5#0"
      ]
    },
    "652": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "653": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\""
      ]
    },
    "654": {
      "op": "pushint 176 // 176",
      "defined_out": [
        "\"tup_bag\"",
        "176"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\"",
        "176"
      ]
    },
    "657": {
      "op": "box_create",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "658": {
      "error": "box already exists",
      "op": "assert // box already exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "659": {
      "op": "txn Sender",
      "defined_out": [
        "materialized_values%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "materialized_values%0#1"
      ]
    },
    "661": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "materialized_values%0#1",
        "\"tup_bag\""
      ]
    },
    "662": {
      "op": "box_get",
      "defined_out": [
        "materialized_values%0#1",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "materialized_values%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "663": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "materialized_values%0#1",
        "maybe_value%0#0"
      ]
    },
    "664": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "maybe_value%0#0",
        "materialized_values%0#1"
      ]
    },
    "665": {
      "op": "replace2 136",
      "defined_out": [
        "updated_data%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "updated_data%0#0"
      ]
    },
    "667": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "materialized_values%1#1",
        "updated_data%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "updated_data%0#0",
        "materialized_values%1#1"
      ]
    },
    "669": {
      "op": "itob",
      "defined_out": [
        "updated_data%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "updated_data%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "670": {
      "op": "replace2 168",
      "defined_out": [
        "updated_data%1#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "updated_data%1#0"
      ]
    },
    "672": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "updated_data%1#0",
        "\"tup_bag\""
      ]
    },
    "673": {
      "op": "swap",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "\"tup_bag\"",
        "updated_data%1#0"
      ]
    },
    "674": {
      "op": "box_put",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "675": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "676": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "677": {
      "block": "main_bare_routing@34",
      "stack_in": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%59#0"
      ]
    },
    "679": {
      "op": "bnz main_after_if_else@36",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "682": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%60#0"
      ]
    },
    "684": {
      "op": "!",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%61#0"
      ]
    },
    "685": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "686": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0",
        "tmp%0#1"
      ]
    },
    "687": {
      "op": "return",
      "stack_out": [
        "items#0",
        "result#0",
        "tups#0",
        "a#0",
        "array%array_length%0#1",
        "b#0",
        "i#0",
        "tmp%0#2",
        "tmp%1#1",
        "total#0"
      ]
    },
    "688": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup",
      "params": {
        "tup#0": "bytes"
      },
      "block": "add_tup",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "691": {
      "callsub": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "op": "callsub _check_owner"
    },
    "694": {
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "695": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "696": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "697": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "698": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "699": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "700": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "701": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "8"
      ]
    },
    "703": {
      "op": "<",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "704": {
      "error": "too many tups",
      "op": "assert // too many tups",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "705": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "707": {
      "error": "Index access is out of bounds",
      "op": "extract 8 128 // on error: Index access is out of bounds",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "710": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "711": {
      "op": "intc_0 // 16",
      "defined_out": [
        "16",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "16"
      ]
    },
    "712": {
      "op": "*",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "write_offset%0#0"
      ]
    },
    "713": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tup#0 (copy)",
        "write_offset%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "write_offset%0#0",
        "tup#0 (copy)"
      ]
    },
    "715": {
      "op": "replace3",
      "defined_out": [
        "maybe_value%0#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "updated_array%0#0"
      ]
    },
    "716": {
      "op": "replace2 8",
      "defined_out": [
        "updated_data%0#0"
      ],
      "stack_out": [
        "updated_data%0#0"
      ]
    },
    "718": {
      "op": "dup",
      "defined_out": [
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ],
      "stack_out": [
        "updated_data%0#0",
        "updated_data%0#0 (copy)"
      ]
    },
    "719": {
      "op": "intc_1 // 0",
      "stack_out": [
        "updated_data%0#0",
        "updated_data%0#0 (copy)",
        "0"
      ]
    },
    "720": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "updated_data%0#0",
        "tmp%4#0"
      ]
    },
    "721": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "updated_data%0#0",
        "tmp%4#0",
        "1"
      ]
    },
    "722": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "updated_data%0#0",
        "materialized_values%0#0"
      ]
    },
    "723": {
      "op": "itob",
      "defined_out": [
        "updated_data%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "updated_data%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "724": {
      "op": "replace2 0",
      "defined_out": [
        "updated_data%1#0"
      ],
      "stack_out": [
        "updated_data%1#0"
      ]
    },
    "726": {
      "op": "bytec_0 // \"tup_bag\"",
      "stack_out": [
        "updated_data%1#0",
        "\"tup_bag\""
      ]
    },
    "727": {
      "op": "swap",
      "stack_out": [
        "\"tup_bag\"",
        "updated_data%1#0"
      ]
    },
    "728": {
      "op": "box_put",
      "stack_out": []
    },
    "729": {
      "op": "frame_dig -1",
      "stack_out": [
        "tup#0 (copy)"
      ]
    },
    "731": {
      "retsub": true,
      "op": "retsub"
    },
    "732": {
      "subroutine": "test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner",
      "params": {},
      "block": "_check_owner",
      "stack_in": [],
      "op": "bytec_0 // \"tup_bag\"",
      "defined_out": [
        "\"tup_bag\""
      ],
      "stack_out": [
        "\"tup_bag\""
      ]
    },
    "733": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "734": {
      "error": "check self.tup_bag exists",
      "op": "assert // check self.tup_bag exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "735": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "736": {
      "error": "Index access is out of bounds",
      "op": "extract 136 32 // on error: Index access is out of bounds",
      "defined_out": [
        "encoded%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded%0#0"
      ]
    },
    "739": {
      "op": "txn Sender",
      "defined_out": [
        "encoded%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "encoded%0#0",
        "tmp%0#0"
      ]
    },
    "741": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "742": {
      "error": "sender not authorized",
      "op": "assert // sender not authorized",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "743": {
      "op": "pushint 168 // 168",
      "defined_out": [
        "168",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "168"
      ]
    },
    "746": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "747": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "749": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "750": {
      "error": "this error should be impossible",
      "op": "assert // this error should be impossible",
      "stack_out": []
    },
    "751": {
      "retsub": true,
      "op": "retsub"
    }
  }
}