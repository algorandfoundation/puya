{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0E8C;;AAApB;AAAd;AAAA;AAAA;AAAA;AACc;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAAtC;AAAA;AAAA;AAAA;AAAA;AACW;;AAAmB;AAAnB;AAAwB;;AAAmB;AAAnB;AAHzB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAYM;;AADA;AADK;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAX;;;;;AAAA;AAAA;AAQA;AAAoB;AAApB;AACgB;;AAAA;AAAhB;AAAA;AAAA;AAtBR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA8LK;;AAAA;AAAA;AAAA;;AAAA;AAEY;AAAA;;AAAA;AAAA;AACD;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AACD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAR;AAAP;AAPH;;AAhEA;;AAAA;AAAA;AAAA;;AAAA;AA9HL;;;AAgIe;AAAA;AAAA;AAAA;AAAA;AAAP;AASA;;AAAA;;;AACqB;AAAA;AAAA;AAAA;AAAd;;AAAA;;AAAA;AAAP;AAEO;AAAA;;;AAAA;AAAA;AACA;;AAAA;AAAP;AAM6B;;AAAmB;AAAnB;AAAwB;;AAAmB;;AAAnB;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACO;AAAA;AAAA;AAAA;AAAe;AAAf;AAAP;AACO;;AAAA;;;AAAiC;;AAAjC;AAAP;AACO;;AAAA;;AAAA;AAAP;AAE2B;;AAAA;;;AAAA;;AAAA;;;AAApB;;;;AAAA;AAAA;AACA;;AAAA;AAAP;AAEO;;AAAA;;AAAA;;AACP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AACO;;AAAA;AAAP;AAOU;AAAN;;;;AAAM;;AAAO;;AAAP;AAAlB;;;AACY;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADM;;AAAA;AAAA;AAAA;;;;;AAGH;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AAGO;AAAA;;;AAA2B;;AAA3B;AAAP;;;AAEA;;;;;;;;;;;;;;;;;;;AAEO;AAAA;;;AAA2B;;AAA3B;AAAP;AACO;AAAA;;;AAA2B;;AAA3B;AAAP;AACA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AACO;;;AAA2B;;AAA3B;AAAP;AAEA;;AAAA;;AAAA;AAKA;;AACO;AAAA;AAAA;AAAP;AA5DH;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAEa;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACA;AAAA;;;AA6FP;;AAAA;AAAA;AAAQ;;AAAA;AAAA;AAAR;AAAA;;AAAA;AAAA;AAAQ;;AAAA;AAAA;AAAR;AA5FM;AAAA;AAAA;;AACN;AAAS;;AAAT;;;;AAAX;;;AACmB;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACP;;AAAA;;AAAA;AACA;;;;AARP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;AAAA;AAAA;AAAA;;;AAFV;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAEU;AAAA;AAAA;AAAA;AAAA;;;AAFV;AAAA;AAAA;AAAA;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAjGL;;;AAAA;AAAA;;;AAmGQ;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACkB;;AAAlB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAA;;AAAA;AACa;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AANH;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AA1FL;;;AAAA;AA4FY;;AAAJ;AACsB;;AAAlB;;AAAJ;AACI;;AAAJ;;AACiB;AAAb;;AAAA;AAAA;AAAJ;;AALH;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AAEe;;AAAY;;;AAApB;AAAA;AAAiC;;;AAAjC;AAAA;AAGe;AAAA;;;AAAY;;AAAA;;AAAA;AAAS;;AAAA;;AAAA;AACjC;;AAAA;;AAAA;AAAP;AACA;AAAA;AACA;AACA;;;AATH;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAvEL;;;AAAA;AAyEkC;AAAA;AAAA;AAAA;AAA1B;;AAAA;AAAA;AACgC;AAAA;AAAA;AAAA;AAAd;;AAAlB;;AAAA;;AAAA;AACO;;AAAA;;;AAAA;AAAP;AACgC;;;AAAnB;AAAA;AAAb;;AAAA;AAAA;AAAA;AAAA;;AAAA;AALH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAlEL;;;AAAA;AAAA;;;AAAA;AAoEuB;AAAA;AAAA;AAAA;AAAR;;AAAA;AAAP;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAHH;;AANA;;AAAA;AAAA;AAAA;;AAAA;AA5DL;;;AA8De;AAAA;AAAA;AAAA;AAAA;AAAoB;;AAApB;AAAP;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;AAAA;AAJH;;AA9BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAxBL;;AAAA;;;;;;;;;AAwMA;;;AAEY;AACZ;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACiB;AADjB;AACiB;AAAT;;AAAA;AACS;AAAA;AAAA;AAAT;AAAA;;;;;;;;;AACJ;AAQJ;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 16 8"
    },
    "7": {
      "op": "bytecblock \"nested\" \"num_payments\" \"payments\" 0x151f7c75 0x70 0x6c \"box\" \"box_map\" \"arr\" 0x0000"
    },
    "66": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1"
      ]
    },
    "67": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0"
      ]
    },
    "68": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0"
      ]
    },
    "70": {
      "op": "dupn 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "72": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "74": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "77": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%1#1"
      ]
    },
    "79": {
      "op": "dup",
      "defined_out": [
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%1#1",
        "tmp%0#2"
      ]
    },
    "80": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%1#1",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "81": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%val_as_bytes%0#0",
        "tmp%1#1"
      ]
    },
    "82": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "83": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0"
      ]
    },
    "84": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%3#0"
      ]
    },
    "86": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%head%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%3#0",
        "1"
      ]
    },
    "87": {
      "op": "+",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%4#0"
      ]
    },
    "88": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "90": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%5#0",
        "1"
      ]
    },
    "91": {
      "op": "+",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "92": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%6#0",
        "tmp%4#0"
      ]
    },
    "93": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "94": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%6#0"
      ]
    },
    "95": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "96": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ]
    },
    "97": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%8#0"
      ]
    },
    "99": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%8#0",
        "1"
      ]
    },
    "100": {
      "op": "+",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ]
    },
    "101": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "103": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0",
        "tmp%10#0",
        "1"
      ]
    },
    "104": {
      "op": "+",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "105": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%3#0",
        "tmp%9#0",
        "tmp%11#0",
        "aggregate%head%1#0"
      ]
    },
    "107": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%9#0",
        "tmp%11#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ]
    },
    "109": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%9#0",
        "tmp%11#0",
        "aggregate%head%5#0"
      ]
    },
    "110": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%11#0",
        "aggregate%head%5#0",
        "tmp%9#0"
      ]
    },
    "112": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%11#0",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "113": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "tmp%11#0"
      ]
    },
    "115": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%5#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "116": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%5#0",
        "aggregate%head%7#0"
      ]
    },
    "117": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%8#0"
      ]
    },
    "118": {
      "op": "bytec_0 // \"nested\"",
      "defined_out": [
        "\"nested\"",
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%8#0",
        "\"nested\""
      ]
    },
    "119": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"nested\"",
        "aggregate%head%8#0"
      ]
    },
    "120": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "121": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%14#0"
      ]
    },
    "123": {
      "op": "dup",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%14#0",
        "tmp%13#0"
      ]
    },
    "124": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%6#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%14#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "125": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%val_as_bytes%6#0",
        "tmp%14#0"
      ]
    },
    "126": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%val_as_bytes%6#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "127": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%10#0"
      ]
    },
    "128": {
      "op": "pushbytes 0x00160018001a000000000000",
      "defined_out": [
        "0x00160018001a000000000000",
        "aggregate%head%10#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%10#0",
        "0x00160018001a000000000000"
      ]
    },
    "142": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%2#0"
      ]
    },
    "143": {
      "op": "pushbytes \"dyn\"",
      "defined_out": [
        "\"dyn\"",
        "aggregate%concat%2#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%2#0",
        "\"dyn\""
      ]
    },
    "148": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"dyn\"",
        "aggregate%concat%2#0"
      ]
    },
    "149": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "150": {
      "op": "bytec_1 // \"num_payments\"",
      "defined_out": [
        "\"num_payments\""
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"num_payments\""
      ]
    },
    "151": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"num_payments\"",
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"num_payments\"",
        "0"
      ]
    },
    "152": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "153": {
      "op": "pushint 96 // 96",
      "defined_out": [
        "96"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "96"
      ]
    },
    "155": {
      "op": "bzero",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%16#0"
      ]
    },
    "156": {
      "op": "bytec_2 // \"payments\"",
      "defined_out": [
        "\"payments\"",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%16#0",
        "\"payments\""
      ]
    },
    "157": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"payments\"",
        "tmp%16#0"
      ]
    },
    "158": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "159": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#2"
      ]
    },
    "161": {
      "op": "bz main_bare_routing@25",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "164": {
      "op": "pushbytess 0x67a5a02d 0xd1276f81 0x0d2ab4c0 0xe8b5d56c 0x875901e5 0x4abb70f1 0xaf05f48f 0xe8d71c8c 0x01aaa39c 0x8313dee7 0x2ca849c1 0x3d8e707d 0x0649402d // method \"test_imm_fixed_array()void\", method \"fixed_initialize()void\", method \"add_payment((address,uint64,uint64))void\", method \"increment_payment(uint64,uint64)void\", method \"create_storage(uint64)void\", method \"local_struct()(address,uint64,uint64)\", method \"delete_storage(uint64)void\", method \"struct_arg(uint64,(uint64,uint64))void\", method \"struct_return()(uint64,uint64)\", method \"tup_return()(uint64,uint64)\", method \"calculate_sum()uint64\", method \"test_arr((uint64,uint64)[])(uint64,uint64)[]\", method \"test_arr2()void\"",
      "defined_out": [
        "Method(add_payment((address,uint64,uint64))void)",
        "Method(calculate_sum()uint64)",
        "Method(create_storage(uint64)void)",
        "Method(delete_storage(uint64)void)",
        "Method(fixed_initialize()void)",
        "Method(increment_payment(uint64,uint64)void)",
        "Method(local_struct()(address,uint64,uint64))",
        "Method(struct_arg(uint64,(uint64,uint64))void)",
        "Method(struct_return()(uint64,uint64))",
        "Method(test_arr((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_arr2()void)",
        "Method(test_imm_fixed_array()void)",
        "Method(tup_return()(uint64,uint64))"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "Method(test_imm_fixed_array()void)",
        "Method(fixed_initialize()void)",
        "Method(add_payment((address,uint64,uint64))void)",
        "Method(increment_payment(uint64,uint64)void)",
        "Method(create_storage(uint64)void)",
        "Method(local_struct()(address,uint64,uint64))",
        "Method(delete_storage(uint64)void)",
        "Method(struct_arg(uint64,(uint64,uint64))void)",
        "Method(struct_return()(uint64,uint64))",
        "Method(tup_return()(uint64,uint64))",
        "Method(calculate_sum()uint64)",
        "Method(test_arr((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_arr2()void)"
      ]
    },
    "231": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(add_payment((address,uint64,uint64))void)",
        "Method(calculate_sum()uint64)",
        "Method(create_storage(uint64)void)",
        "Method(delete_storage(uint64)void)",
        "Method(fixed_initialize()void)",
        "Method(increment_payment(uint64,uint64)void)",
        "Method(local_struct()(address,uint64,uint64))",
        "Method(struct_arg(uint64,(uint64,uint64))void)",
        "Method(struct_return()(uint64,uint64))",
        "Method(test_arr((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_arr2()void)",
        "Method(test_imm_fixed_array()void)",
        "Method(tup_return()(uint64,uint64))",
        "tmp%2#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "Method(test_imm_fixed_array()void)",
        "Method(fixed_initialize()void)",
        "Method(add_payment((address,uint64,uint64))void)",
        "Method(increment_payment(uint64,uint64)void)",
        "Method(create_storage(uint64)void)",
        "Method(local_struct()(address,uint64,uint64))",
        "Method(delete_storage(uint64)void)",
        "Method(struct_arg(uint64,(uint64,uint64))void)",
        "Method(struct_return()(uint64,uint64))",
        "Method(tup_return()(uint64,uint64))",
        "Method(calculate_sum()uint64)",
        "Method(test_arr((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_arr2()void)",
        "tmp%2#1"
      ]
    },
    "234": {
      "op": "match main_test_imm_fixed_array_route@5 main_fixed_initialize_route@6 main_add_payment_route@7 main_increment_payment_route@8 main_create_storage_route@9 main_local_struct_route@10 main_delete_storage_route@11 main_struct_arg_route@12 main_struct_return_route@13 main_tup_return_route@14 main_calculate_sum_route@15 main_test_arr_route@18 main_test_arr2_route@24",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "262": {
      "block": "main_after_if_else@27",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "263": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "264": {
      "block": "main_test_arr2_route@24",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%69#0"
      ]
    },
    "266": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%70#0"
      ]
    },
    "267": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "268": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%71#0"
      ]
    },
    "270": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "271": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0"
      ]
    },
    "272": {
      "op": "bytec 8 // \"arr\"",
      "defined_out": [
        "\"arr\"",
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0",
        "\"arr\""
      ]
    },
    "274": {
      "op": "app_global_get_ex",
      "defined_out": [
        "copied#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "maybe_exists%0#0"
      ]
    },
    "275": {
      "error": "check self.arr exists",
      "op": "assert // check self.arr exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0"
      ]
    },
    "276": {
      "op": "dup",
      "defined_out": [
        "copied#0",
        "copied#0 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "copied#0 (copy)"
      ]
    },
    "277": {
      "op": "substring 0 2",
      "defined_out": [
        "aggregate%substring3%0#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%substring3%0#0"
      ]
    },
    "280": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%substring3%0#0",
        "copied#0 (copy)"
      ]
    },
    "282": {
      "op": "extract 18 0",
      "defined_out": [
        "aggregate%extract_to_end%0#0",
        "aggregate%substring3%0#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_to_end%0#0"
      ]
    },
    "285": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%9#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0"
      ]
    },
    "286": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "copied#0 (copy)"
      ]
    },
    "288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "copied#0 (copy)",
        "0"
      ]
    },
    "289": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%concat%9#0",
        "aggregate%extract_uint16%4#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "290": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%9#0",
        "aggregate%extract_uint16%4#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "aggregate%extract_uint16%4#0",
        "1"
      ]
    },
    "291": {
      "op": "-",
      "defined_out": [
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "aggregate%sub%0#0"
      ]
    },
    "292": {
      "op": "dup",
      "defined_out": [
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "aggregate%sub%0#0 (copy)",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "aggregate%sub%0#0 (copy)"
      ]
    },
    "293": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%13#0",
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "aggregate%as_bytes%13#0"
      ]
    },
    "294": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_u16_bytes%4#0",
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%concat%9#0",
        "aggregate%sub%0#0",
        "aggregate%as_u16_bytes%4#0"
      ]
    },
    "297": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "aggregate%as_u16_bytes%4#0",
        "aggregate%concat%9#0"
      ]
    },
    "299": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "aggregate%concat%9#0",
        "aggregate%as_u16_bytes%4#0"
      ]
    },
    "300": {
      "op": "replace2 0",
      "defined_out": [
        "aggregate%sub%0#0",
        "copied#0",
        "copied#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1"
      ]
    },
    "302": {
      "op": "dup",
      "defined_out": [
        "aggregate%sub%0#0",
        "copied#0",
        "copied#1",
        "copied#1 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "copied#1 (copy)"
      ]
    },
    "303": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "copied#1 (copy)",
        "0"
      ]
    },
    "304": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%8#0",
        "aggregate%sub%0#0",
        "copied#0",
        "copied#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "aggregate%array_length%8#0"
      ]
    },
    "305": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%8#0",
        "aggregate%array_length%8#0 (copy)",
        "aggregate%sub%0#0",
        "copied#0",
        "copied#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "aggregate%array_length%8#0",
        "aggregate%array_length%8#0 (copy)"
      ]
    },
    "306": {
      "op": "dig 3",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "aggregate%array_length%8#0",
        "aggregate%array_length%8#0 (copy)",
        "aggregate%sub%0#0 (copy)"
      ]
    },
    "308": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%8#0",
        "aggregate%sub%0#0",
        "copied#0",
        "copied#1",
        "tmp%6#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "aggregate%array_length%8#0",
        "tmp%6#2"
      ]
    },
    "309": {
      "op": "assert",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "aggregate%array_length%8#0"
      ]
    },
    "310": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "aggregate%array_length%8#0",
        "1"
      ]
    },
    "311": {
      "op": "-",
      "defined_out": [
        "aggregate%sub%0#0",
        "copied#0",
        "copied#1",
        "sub%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "copied#1",
        "sub%0#0"
      ]
    },
    "312": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "sub%0#0",
        "copied#1"
      ]
    },
    "313": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%sub%0#0",
        "copied#0",
        "sub%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "sub%0#0",
        "aggregate%array_trimmed%3#0"
      ]
    },
    "316": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "aggregate%array_trimmed%3#0",
        "sub%0#0"
      ]
    },
    "317": {
      "op": "intc_2 // 16",
      "defined_out": [
        "16",
        "aggregate%array_trimmed%3#0",
        "aggregate%sub%0#0",
        "copied#0",
        "sub%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "aggregate%array_trimmed%3#0",
        "sub%0#0",
        "16"
      ]
    },
    "318": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%12#0",
        "aggregate%sub%0#0",
        "copied#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "319": {
      "op": "intc_2 // 16",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "aggregate%array_trimmed%3#0",
        "aggregate%bytes_offset%12#0",
        "16"
      ]
    },
    "320": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%sub%0#0",
        "copied#0",
        "last#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "copied#0",
        "aggregate%sub%0#0",
        "last#0"
      ]
    },
    "321": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%sub%0#0",
        "last#0",
        "copied#0"
      ]
    },
    "323": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%sub%0#0",
        "last#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%sub%0#0",
        "last#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "326": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "last#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%sub%0#0"
      ]
    },
    "328": {
      "op": "intc_2 // 16",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "last#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%sub%0#0",
        "16"
      ]
    },
    "329": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%13#0",
        "last#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "last#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%13#0"
      ]
    },
    "330": {
      "op": "intc_2 // 16",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "last#0",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%13#0",
        "16"
      ]
    },
    "331": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%13#0",
        "last#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "last#0",
        "aggregate%encoded_element%13#0"
      ]
    },
    "332": {
      "op": "==",
      "defined_out": [
        "tmp%13#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%13#2"
      ]
    },
    "333": {
      "error": "expected elements to match",
      "op": "assert // expected elements to match",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "334": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "335": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "336": {
      "block": "main_test_arr_route@18",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%63#0"
      ]
    },
    "338": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%64#0"
      ]
    },
    "339": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "340": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%65#0"
      ]
    },
    "342": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "343": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0"
      ]
    },
    "346": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "348": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "349": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)"
      ]
    },
    "350": {
      "op": "!",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "tmp%1#4"
      ]
    },
    "351": {
      "error": "expected empty array",
      "op": "assert // expected empty array",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "352": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "arr#0 (copy)"
      ]
    },
    "354": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "extract_to_end%0#0"
      ]
    },
    "357": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "extract_to_end%0#0",
        "extract_to_end%0#0 (copy)"
      ]
    },
    "358": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%bytes_len%0#0",
        "arr#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "extract_to_end%0#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "359": {
      "op": "intc_2 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%1#0",
        "aggregate%bytes_len%0#0",
        "arr#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "extract_to_end%0#0",
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "360": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%array_length%1#0",
        "arr#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%array_length%1#0",
        "extract_to_end%0#0",
        "aggregate%array_len%0#0"
      ]
    },
    "361": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "extract_to_end%0#0",
        "aggregate%array_len%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "363": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "aggregate%array_length%1#0",
        "arr#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "extract_to_end%0#0",
        "aggregate%array_len%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_len%0#0 (copy)"
      ]
    },
    "365": {
      "op": "==",
      "defined_out": [
        "aggregate%array_len%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "extract_to_end%0#0",
        "aggregate%array_len%0#0",
        "tmp%8#1"
      ]
    },
    "366": {
      "error": "expected arrays to be the same length",
      "op": "assert // expected arrays to be the same length",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "extract_to_end%0#0",
        "aggregate%array_len%0#0"
      ]
    },
    "367": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "extract_to_end%0#0",
        "as_bytes%0#0"
      ]
    },
    "368": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "extract_to_end%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "371": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "as_u16_bytes%0#0",
        "extract_to_end%0#0"
      ]
    },
    "372": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "arr5#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr5#0"
      ]
    },
    "373": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr5#0",
        "arr#0 (copy)"
      ]
    },
    "375": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%10#3"
      ]
    },
    "376": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0"
      ]
    },
    "377": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "379": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%14#0",
        "1"
      ]
    },
    "380": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%15#1"
      ]
    },
    "381": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr#0",
        "tmp%15#1",
        "tmp%16#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%15#1",
        "tmp%16#2"
      ]
    },
    "383": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "tmp%15#1",
        "tmp%16#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%15#1",
        "tmp%16#2",
        "2"
      ]
    },
    "385": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "tmp%15#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%15#1",
        "tmp%17#0"
      ]
    },
    "386": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%17#0",
        "tmp%15#1"
      ]
    },
    "387": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%30#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "tmp%17#0",
        "aggregate%val_as_bytes%30#0"
      ]
    },
    "388": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%val_as_bytes%30#0",
        "tmp%17#0"
      ]
    },
    "389": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%30#0",
        "aggregate%val_as_bytes%31#0",
        "arr#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%val_as_bytes%30#0",
        "aggregate%val_as_bytes%31#0"
      ]
    },
    "390": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "fixed_struct#0"
      ]
    },
    "391": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "fixed_struct#0",
        "fixed_struct#0"
      ]
    },
    "392": {
      "op": "bury 6",
      "defined_out": [
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "fixed_struct#0"
      ]
    },
    "394": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "fixed_struct#0",
        "arr#0 (copy)"
      ]
    },
    "396": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr#0 (copy)",
        "fixed_struct#0"
      ]
    },
    "397": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%concat%4#0",
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0"
      ]
    },
    "398": {
      "op": "dup",
      "defined_out": [
        "aggregate%concat%4#0",
        "aggregate%concat%4#0 (copy)",
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%concat%4#0 (copy)"
      ]
    },
    "399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%concat%4#0 (copy)",
        "0"
      ]
    },
    "400": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%concat%4#0",
        "aggregate%extract_uint16%0#0",
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "401": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%extract_uint16%0#0",
        "1"
      ]
    },
    "402": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "aggregate%concat%4#0",
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%add%0#0"
      ]
    },
    "403": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "aggregate%concat%4#0",
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "404": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_u16_bytes%0#0",
        "aggregate%concat%4#0",
        "arr#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "aggregate%concat%4#0",
        "aggregate%as_u16_bytes%0#0"
      ]
    },
    "407": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1"
      ]
    },
    "409": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr2#1",
        "arr2#1 (copy)",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "arr2#1 (copy)"
      ]
    },
    "410": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "arr2#1 (copy)",
        "0"
      ]
    },
    "411": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0"
      ]
    },
    "412": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_length%4#0 (copy)",
        "arr#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_length%4#0 (copy)"
      ]
    },
    "413": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_length%4#0 (copy)",
        "1"
      ]
    },
    "414": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr#0",
        "arr2#1",
        "fixed_struct#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "tmp%22#0"
      ]
    },
    "415": {
      "error": "expected array to have 1 item",
      "op": "assert // expected array to have 1 item",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0"
      ]
    },
    "416": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "arr2#1 (copy)"
      ]
    },
    "418": {
      "callsub": "test_cases.mutable_native_types.contract.sum_frozen_arr",
      "op": "callsub sum_frozen_arr",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr#0",
        "arr2#1",
        "fixed_struct#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "tmp%24#1"
      ]
    },
    "421": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%array_length%4#0",
        "arr#0",
        "arr2#1",
        "fixed_struct#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "tmp%24#1",
        "7"
      ]
    },
    "423": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr#0",
        "arr2#1",
        "fixed_struct#0",
        "tmp%25#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0",
        "tmp%25#1"
      ]
    },
    "424": {
      "error": "expected sum to be 7",
      "op": "assert // expected sum to be 7",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr#0",
        "arr2#1",
        "aggregate%array_length%4#0"
      ]
    },
    "425": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "arr#0"
      ]
    },
    "427": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "arr#0",
        "arr2#1 (copy)"
      ]
    },
    "429": {
      "op": "!=",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr2#1",
        "fixed_struct#0",
        "tmp%26#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "tmp%26#1"
      ]
    },
    "430": {
      "error": "expected arrays to be different",
      "op": "assert // expected arrays to be different",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0"
      ]
    },
    "431": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "arr2#1 (copy)"
      ]
    },
    "433": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "436": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr2#1 (copy)"
      ]
    },
    "438": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%9#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%9#0"
      ]
    },
    "441": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%9#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%9#0",
        "0x0001"
      ]
    },
    "445": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "0x0001",
        "aggregate%encoded_element%9#0"
      ]
    },
    "446": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr2#1",
        "arr7#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr7#0"
      ]
    },
    "447": {
      "op": "dig 3",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr7#0",
        "arr2#1 (copy)"
      ]
    },
    "449": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr2#1",
        "fixed_struct#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "tmp%27#0"
      ]
    },
    "450": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "451": {
      "op": "bytec 9 // 0x0000",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr8#0"
      ]
    },
    "453": {
      "op": "cover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "455": {
      "op": "bytec 9 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "aggregate%array_trimmed%0#0",
        "0x0000"
      ]
    },
    "457": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "0x0000",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "458": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0"
      ]
    },
    "459": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0",
        "aggregate%concat%5#0 (copy)",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0",
        "aggregate%concat%5#0 (copy)"
      ]
    },
    "460": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0",
        "aggregate%concat%5#0 (copy)",
        "0"
      ]
    },
    "461": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0",
        "aggregate%extract_uint16%1#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%array_length%4#0",
        "aggregate%concat%5#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "462": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%concat%5#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%array_length%4#0"
      ]
    },
    "464": {
      "op": "+",
      "defined_out": [
        "aggregate%add%1#0",
        "aggregate%concat%5#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%concat%5#0",
        "aggregate%add%1#0"
      ]
    },
    "465": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%10#0",
        "aggregate%concat%5#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%concat%5#0",
        "aggregate%as_bytes%10#0"
      ]
    },
    "466": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_u16_bytes%1#0",
        "aggregate%concat%5#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "aggregate%concat%5#0",
        "aggregate%as_u16_bytes%1#0"
      ]
    },
    "469": {
      "op": "replace2 0",
      "defined_out": [
        "arr2#1",
        "arr8#0",
        "arr8#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr8#0",
        "arr8#1"
      ]
    },
    "471": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr8#0",
        "arr8#1",
        "arr2#1"
      ]
    },
    "473": {
      "op": "==",
      "defined_out": [
        "arr2#1",
        "arr8#0",
        "fixed_struct#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr8#0",
        "tmp%30#1"
      ]
    },
    "474": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr8#0"
      ]
    },
    "475": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "arr2#1",
        "arr8#0",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr8#0",
        "_i#0"
      ]
    },
    "476": {
      "op": "bury 4",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1"
      ]
    },
    "478": {
      "op": "bury 5",
      "defined_out": [
        "_i#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "480": {
      "block": "main_for_header@21",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "dig 2",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "_i#0"
      ]
    },
    "482": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "_i#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "_i#0",
        "3"
      ]
    },
    "484": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "continue_looping%0#0"
      ]
    },
    "485": {
      "op": "bz main_after_for@23",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "488": {
      "op": "dig 4",
      "defined_out": [
        "_i#0",
        "arr2#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1"
      ]
    },
    "490": {
      "op": "dig 4",
      "defined_out": [
        "_i#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "fixed_struct#0"
      ]
    },
    "492": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "_i#0",
        "aggregate%concat%6#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0"
      ]
    },
    "493": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "aggregate%concat%6#0",
        "aggregate%concat%6#0 (copy)",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%concat%6#0 (copy)"
      ]
    },
    "494": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "_i#0",
        "aggregate%concat%6#0",
        "aggregate%concat%6#0 (copy)",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%concat%6#0 (copy)",
        "0"
      ]
    },
    "495": {
      "op": "extract_uint16",
      "defined_out": [
        "_i#0",
        "aggregate%concat%6#0",
        "aggregate%extract_uint16%2#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "496": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "aggregate%concat%6#0",
        "aggregate%extract_uint16%2#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%extract_uint16%2#0",
        "1"
      ]
    },
    "497": {
      "op": "+",
      "defined_out": [
        "_i#0",
        "aggregate%add%2#0",
        "aggregate%concat%6#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%add%2#0"
      ]
    },
    "498": {
      "op": "itob",
      "defined_out": [
        "_i#0",
        "aggregate%as_bytes%11#0",
        "aggregate%concat%6#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%as_bytes%11#0"
      ]
    },
    "499": {
      "op": "extract 6 2",
      "defined_out": [
        "_i#0",
        "aggregate%as_u16_bytes%2#0",
        "aggregate%concat%6#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%concat%6#0",
        "aggregate%as_u16_bytes%2#0"
      ]
    },
    "502": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1"
      ]
    },
    "504": {
      "op": "bury 5",
      "defined_out": [
        "_i#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "506": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "_i#0"
      ]
    },
    "508": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "_i#0",
        "1"
      ]
    },
    "509": {
      "op": "+",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "_i#0"
      ]
    },
    "510": {
      "op": "bury 3",
      "defined_out": [
        "_i#0",
        "arr2#1",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "512": {
      "op": "b main_for_header@21"
    },
    "515": {
      "block": "main_after_for@23",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "dig 4",
      "defined_out": [
        "arr2#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1"
      ]
    },
    "517": {
      "op": "dup",
      "defined_out": [
        "arr2#1",
        "arr2#1 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr2#1 (copy)"
      ]
    },
    "518": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#1",
        "arr2#1 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr2#1 (copy)",
        "0"
      ]
    },
    "519": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr2#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%6#0"
      ]
    },
    "520": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%array_length%6#0",
        "arr2#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "aggregate%array_length%6#0",
        "3"
      ]
    },
    "522": {
      "op": "==",
      "defined_out": [
        "arr2#1",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%38#0"
      ]
    },
    "523": {
      "error": "expected 3 elements",
      "op": "assert // expected 3 elements",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1"
      ]
    },
    "524": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr2#1 (copy)"
      ]
    },
    "525": {
      "callsub": "test_cases.mutable_native_types.contract.sum_frozen_arr",
      "op": "callsub sum_frozen_arr",
      "defined_out": [
        "arr2#1",
        "tmp%40#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%40#1"
      ]
    },
    "528": {
      "op": "pushint 21 // 21",
      "defined_out": [
        "21",
        "arr2#1",
        "tmp%40#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%40#1",
        "21"
      ]
    },
    "530": {
      "op": "==",
      "defined_out": [
        "arr2#1",
        "tmp%41#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%41#1"
      ]
    },
    "531": {
      "error": "expected sum to be 21",
      "op": "assert // expected sum to be 21",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1"
      ]
    },
    "532": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr2#1 (copy)"
      ]
    },
    "533": {
      "op": "len",
      "defined_out": [
        "arr2#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%0#2"
      ]
    },
    "534": {
      "op": "intc_2 // 16",
      "defined_out": [
        "16",
        "arr2#1",
        "tmp%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%0#2",
        "16"
      ]
    },
    "535": {
      "op": "-",
      "defined_out": [
        "arr2#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%1#1"
      ]
    },
    "536": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%1#1",
        "arr2#1 (copy)"
      ]
    },
    "538": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "tmp%1#1",
        "arr2#1 (copy)",
        "0"
      ]
    },
    "539": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr2#1 (copy)",
        "0",
        "tmp%1#1"
      ]
    },
    "541": {
      "op": "substring3",
      "defined_out": [
        "arr2#1",
        "result#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4"
      ]
    },
    "542": {
      "op": "dup",
      "defined_out": [
        "arr2#1",
        "result#4",
        "result#4 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "result#4 (copy)"
      ]
    },
    "543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "result#4 (copy)",
        "0"
      ]
    },
    "544": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#1",
        "array_length#0",
        "result#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "array_length#0"
      ]
    },
    "545": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#1",
        "array_length#0",
        "result#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "array_length#0",
        "1"
      ]
    },
    "546": {
      "op": "-",
      "defined_out": [
        "arr2#1",
        "length_minus_1#0",
        "result#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "length_minus_1#0"
      ]
    },
    "547": {
      "op": "itob",
      "defined_out": [
        "arr2#1",
        "result#4",
        "tmp%3#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "tmp%3#7"
      ]
    },
    "548": {
      "op": "extract 6 0",
      "defined_out": [
        "arr2#1",
        "result#4",
        "tmp%4#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "result#4",
        "tmp%4#7"
      ]
    },
    "551": {
      "op": "replace2 0",
      "defined_out": [
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#1",
        "arr2#6"
      ]
    },
    "553": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "arr2#1"
      ]
    },
    "554": {
      "callsub": "test_cases.mutable_native_types.contract.sum_frozen_arr",
      "op": "callsub sum_frozen_arr",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "tmp%46#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%46#1"
      ]
    },
    "557": {
      "op": "pushint 21 // 21",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%46#1",
        "21"
      ]
    },
    "559": {
      "op": "==",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "tmp%47#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%47#1"
      ]
    },
    "560": {
      "error": "expected sum to be 21",
      "op": "assert // expected sum to be 21",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6"
      ]
    },
    "561": {
      "op": "dup",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "arr2#6 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "arr2#6 (copy)"
      ]
    },
    "562": {
      "callsub": "test_cases.mutable_native_types.contract.sum_frozen_arr",
      "op": "callsub sum_frozen_arr",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%48#0"
      ]
    },
    "565": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr2#1",
        "arr2#6",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%48#0",
        "14"
      ]
    },
    "567": {
      "op": "==",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "tmp%49#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%49#0"
      ]
    },
    "568": {
      "error": "expected sum to be 14",
      "op": "assert // expected sum to be 14",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6"
      ]
    },
    "569": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "arr2#6 (copy)"
      ]
    },
    "570": {
      "op": "extract 2 0",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "extract_to_end%2#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "extract_to_end%2#0"
      ]
    },
    "573": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "extract_to_end%2#0",
        "arr2#6 (copy)"
      ]
    },
    "575": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "extract_to_end%2#0",
        "arr2#6 (copy)",
        "0"
      ]
    },
    "576": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr2#1",
        "arr2#6",
        "extract_to_end%2#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "extract_to_end%2#0",
        "aggregate%array_length%7#0"
      ]
    },
    "577": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "extract_to_end%2#0",
        "aggregate%array_length%7#0",
        "arr2#6 (copy)"
      ]
    },
    "579": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%array_length%7#0",
        "arr2#6 (copy)",
        "extract_to_end%2#0"
      ]
    },
    "581": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0"
      ]
    },
    "582": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0",
        "aggregate%concat%7#0 (copy)",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0",
        "aggregate%concat%7#0 (copy)"
      ]
    },
    "583": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0",
        "aggregate%concat%7#0 (copy)",
        "0"
      ]
    },
    "584": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0",
        "aggregate%extract_uint16%3#0",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%array_length%7#0",
        "aggregate%concat%7#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "585": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%concat%7#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%array_length%7#0"
      ]
    },
    "587": {
      "op": "+",
      "defined_out": [
        "aggregate%add%3#0",
        "aggregate%concat%7#0",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%concat%7#0",
        "aggregate%add%3#0"
      ]
    },
    "588": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%12#0",
        "aggregate%concat%7#0",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%concat%7#0",
        "aggregate%as_bytes%12#0"
      ]
    },
    "589": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_u16_bytes%3#0",
        "aggregate%concat%7#0",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%concat%7#0",
        "aggregate%as_u16_bytes%3#0"
      ]
    },
    "592": {
      "op": "replace2 0",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "frozen2#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "frozen2#1"
      ]
    },
    "594": {
      "callsub": "test_cases.mutable_native_types.contract.sum_frozen_arr",
      "op": "callsub sum_frozen_arr",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "tmp%52#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%52#1"
      ]
    },
    "597": {
      "op": "pushint 28 // 28",
      "defined_out": [
        "28",
        "arr2#1",
        "arr2#6",
        "tmp%52#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%52#1",
        "28"
      ]
    },
    "599": {
      "op": "==",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "tmp%53#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "tmp%53#1"
      ]
    },
    "600": {
      "error": "and the sum shall be 41",
      "op": "assert // and the sum shall be 41",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6"
      ]
    },
    "601": {
      "op": "bytec 8 // \"arr\"",
      "defined_out": [
        "\"arr\"",
        "arr2#1",
        "arr2#6"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "\"arr\""
      ]
    },
    "603": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "\"arr\"",
        "arr2#6 (copy)"
      ]
    },
    "605": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6"
      ]
    },
    "606": {
      "op": "dig 4",
      "defined_out": [
        "arr2#1",
        "arr2#6",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "fixed_struct#0"
      ]
    },
    "608": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "arr2#1",
        "arr2#6",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%bytes_len%3#0"
      ]
    },
    "609": {
      "op": "intc_2 // 16",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%bytes_len%3#0",
        "16"
      ]
    },
    "610": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%3#0",
        "arr2#1",
        "arr2#6",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "aggregate%array_len%3#0"
      ]
    },
    "611": {
      "op": "assert",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6"
      ]
    },
    "612": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "arr2#1",
        "arr2#6",
        "fixed_struct#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "arr2#6",
        "0x151f7c75"
      ]
    },
    "613": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0x151f7c75",
        "arr2#6"
      ]
    },
    "614": {
      "op": "concat",
      "defined_out": [
        "arr2#1",
        "fixed_struct#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%68#0"
      ]
    },
    "615": {
      "op": "log",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "616": {
      "op": "intc_1 // 1",
      "defined_out": [
        "arr2#1",
        "fixed_struct#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "617": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "618": {
      "block": "main_calculate_sum_route@15",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%56#0"
      ]
    },
    "620": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%57#0"
      ]
    },
    "621": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "622": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%58#0"
      ]
    },
    "624": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "625": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0"
      ]
    },
    "626": {
      "op": "bytec_0 // \"nested\"",
      "defined_out": [
        "\"nested\"",
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0",
        "\"nested\""
      ]
    },
    "627": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2",
        "maybe_exists%0#0"
      ]
    },
    "628": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2"
      ]
    },
    "629": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#2",
        "maybe_value%0#2 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2",
        "maybe_value%0#2 (copy)"
      ]
    },
    "630": {
      "op": "extract 0 16",
      "defined_out": [
        "fixed_a#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2",
        "fixed_a#0"
      ]
    },
    "633": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_a#0",
        "maybe_value%0#2"
      ]
    },
    "634": {
      "op": "extract 16 16",
      "defined_out": [
        "fixed_a#0",
        "fixed_b#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_a#0",
        "fixed_b#0"
      ]
    },
    "637": {
      "op": "dig 1",
      "defined_out": [
        "fixed_a#0",
        "fixed_a#0 (copy)",
        "fixed_b#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_a#0",
        "fixed_b#0",
        "fixed_a#0 (copy)"
      ]
    },
    "639": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_a#0",
        "fixed_b#0",
        "fixed_a#0 (copy)",
        "0"
      ]
    },
    "640": {
      "op": "extract_uint64",
      "defined_out": [
        "fixed_a#0",
        "fixed_b#0",
        "values%0#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_a#0",
        "fixed_b#0",
        "values%0#3"
      ]
    },
    "641": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "values%0#3",
        "fixed_a#0"
      ]
    },
    "643": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "fixed_a#0",
        "fixed_b#0",
        "values%0#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "values%0#3",
        "fixed_a#0",
        "8"
      ]
    },
    "644": {
      "op": "extract_uint64",
      "defined_out": [
        "fixed_b#0",
        "values%0#3",
        "values%1#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "values%0#3",
        "values%1#0"
      ]
    },
    "645": {
      "op": "+",
      "defined_out": [
        "fixed_b#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "tmp%0#2"
      ]
    },
    "646": {
      "op": "dig 1",
      "defined_out": [
        "fixed_b#0",
        "fixed_b#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "tmp%0#2",
        "fixed_b#0 (copy)"
      ]
    },
    "648": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "tmp%0#2",
        "fixed_b#0 (copy)",
        "0"
      ]
    },
    "649": {
      "op": "extract_uint64",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "fixed_b#0",
        "tmp%0#2",
        "values%0#3"
      ]
    },
    "650": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#2",
        "values%0#3",
        "fixed_b#0"
      ]
    },
    "652": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#2",
        "values%0#3",
        "fixed_b#0",
        "8"
      ]
    },
    "653": {
      "op": "extract_uint64",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#2",
        "values%0#3",
        "values%1#0"
      ]
    },
    "654": {
      "op": "+",
      "defined_out": [
        "tmp%0#16",
        "tmp%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#2",
        "tmp%0#16"
      ]
    },
    "655": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0"
      ]
    },
    "656": {
      "op": "dup",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0",
        "result#0"
      ]
    },
    "657": {
      "op": "bury 3",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0"
      ]
    },
    "659": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "660": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0",
        "result#0 (copy)",
        "100"
      ]
    },
    "662": {
      "op": "<",
      "defined_out": [
        "result#0",
        "tmp%3#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0",
        "tmp%3#4"
      ]
    },
    "663": {
      "op": "swap",
      "defined_out": [
        "result#0",
        "result#7",
        "tmp%3#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%3#4",
        "result#7"
      ]
    },
    "664": {
      "op": "bury 2",
      "defined_out": [
        "result#0",
        "result#7",
        "tmp%3#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%3#4"
      ]
    },
    "666": {
      "op": "bz main_after_if_else@17",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "669": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0"
      ]
    },
    "670": {
      "op": "bytec_0 // \"nested\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0",
        "\"nested\""
      ]
    },
    "671": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#1",
        "maybe_value%2#1",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%2#1",
        "maybe_exists%2#1"
      ]
    },
    "672": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%2#1"
      ]
    },
    "673": {
      "op": "extract 32 16",
      "defined_out": [
        "aggregate%extract%16#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%16#0"
      ]
    },
    "676": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%16#0",
        "aggregate%extract%16#0 (copy)",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%16#0",
        "aggregate%extract%16#0 (copy)"
      ]
    },
    "677": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%16#0",
        "aggregate%extract%16#0 (copy)",
        "0"
      ]
    },
    "678": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%16#0",
        "c#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%16#0",
        "c#0"
      ]
    },
    "679": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "c#0",
        "aggregate%extract%16#0"
      ]
    },
    "680": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "c#0",
        "aggregate%extract%16#0",
        "8"
      ]
    },
    "681": {
      "op": "extract_uint64",
      "defined_out": [
        "c#0",
        "d#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "c#0",
        "d#0"
      ]
    },
    "682": {
      "op": "dig 3",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "c#0",
        "d#0",
        "result#0"
      ]
    },
    "684": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "d#0",
        "result#0",
        "c#0"
      ]
    },
    "686": {
      "op": "+",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "d#0",
        "result#0"
      ]
    },
    "687": {
      "op": "+",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#7"
      ]
    },
    "688": {
      "op": "bury 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "690": {
      "block": "main_after_if_else@17",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "dup",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "result#0"
      ]
    },
    "691": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%29#0",
        "result#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%val_as_bytes%29#0"
      ]
    },
    "692": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%29#0",
        "result#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%val_as_bytes%29#0",
        "0x151f7c75"
      ]
    },
    "693": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0x151f7c75",
        "aggregate%val_as_bytes%29#0"
      ]
    },
    "694": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%62#0"
      ]
    },
    "695": {
      "op": "log",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "696": {
      "op": "intc_1 // 1",
      "defined_out": [
        "result#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "697": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "698": {
      "block": "main_tup_return_route@14",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%48#0"
      ]
    },
    "700": {
      "op": "!",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%49#0"
      ]
    },
    "701": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "702": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%50#0"
      ]
    },
    "704": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "705": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0"
      ]
    },
    "706": {
      "op": "bytec_0 // \"nested\"",
      "defined_out": [
        "\"nested\"",
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0",
        "\"nested\""
      ]
    },
    "707": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2",
        "maybe_exists%0#0"
      ]
    },
    "708": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2"
      ]
    },
    "709": {
      "op": "extract 32 16",
      "defined_out": [
        "aggregate%extract%13#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%13#0"
      ]
    },
    "712": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%extract%13#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%13#0",
        "0x151f7c75"
      ]
    },
    "713": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0x151f7c75",
        "aggregate%extract%13#0"
      ]
    },
    "714": {
      "op": "concat",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%55#0"
      ]
    },
    "715": {
      "op": "log",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "716": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "717": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "718": {
      "block": "main_struct_return_route@13",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%42#0"
      ]
    },
    "720": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%43#0"
      ]
    },
    "721": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "722": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%44#0"
      ]
    },
    "724": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "725": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0"
      ]
    },
    "726": {
      "op": "bytec_0 // \"nested\"",
      "defined_out": [
        "\"nested\"",
        "0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0",
        "\"nested\""
      ]
    },
    "727": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2",
        "maybe_exists%0#0"
      ]
    },
    "728": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%0#2"
      ]
    },
    "729": {
      "op": "extract 0 16",
      "defined_out": [
        "aggregate%extract%12#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%12#0"
      ]
    },
    "732": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%extract%12#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%12#0",
        "0x151f7c75"
      ]
    },
    "733": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0x151f7c75",
        "aggregate%extract%12#0"
      ]
    },
    "734": {
      "op": "concat",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%47#0"
      ]
    },
    "735": {
      "op": "log",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "736": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "737": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "738": {
      "block": "main_struct_arg_route@12",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%37#0"
      ]
    },
    "740": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%38#0"
      ]
    },
    "741": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "742": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%39#0"
      ]
    },
    "744": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "745": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "748": {
      "op": "btoi",
      "defined_out": [
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "749": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0"
      ]
    },
    "752": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "0"
      ]
    },
    "753": {
      "op": "bytec_0 // \"nested\"",
      "defined_out": [
        "\"nested\"",
        "0",
        "a#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "0",
        "\"nested\""
      ]
    },
    "754": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "box_key#0",
        "maybe_exists%0#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "maybe_value%0#2",
        "maybe_exists%0#0"
      ]
    },
    "755": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "maybe_value%0#2"
      ]
    },
    "756": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "box_key#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "maybe_value%0#2",
        "a#0 (copy)"
      ]
    },
    "758": {
      "op": "replace2 0",
      "defined_out": [
        "a#0",
        "aggregate%updated_data%1#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "760": {
      "op": "bytec_0 // \"nested\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "aggregate%updated_data%1#0",
        "\"nested\""
      ]
    },
    "761": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "\"nested\"",
        "aggregate%updated_data%1#0"
      ]
    },
    "762": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0"
      ]
    },
    "763": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "0"
      ]
    },
    "764": {
      "op": "bytec 4 // 0x70",
      "defined_out": [
        "0",
        "0x70",
        "a#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "0",
        "0x70"
      ]
    },
    "766": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a#0",
        "box_key#0",
        "maybe_exists%1#3",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "maybe_value%1#3",
        "maybe_exists%1#3"
      ]
    },
    "767": {
      "error": "check self.nested_proxy exists",
      "op": "assert // check self.nested_proxy exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "maybe_value%1#3"
      ]
    },
    "768": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "maybe_value%1#3",
        "a#0 (copy)"
      ]
    },
    "770": {
      "op": "replace2 0",
      "defined_out": [
        "a#0",
        "aggregate%updated_data%2#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "772": {
      "op": "bytec 4 // 0x70",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "aggregate%updated_data%2#0",
        "0x70"
      ]
    },
    "774": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "0x70",
        "aggregate%updated_data%2#0"
      ]
    },
    "775": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0"
      ]
    },
    "776": {
      "op": "txn Sender",
      "defined_out": [
        "a#0",
        "box_key#0",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7"
      ]
    },
    "778": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "box_key#0",
        "tmp%0#7",
        "tmp%0#7 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "tmp%0#7 (copy)"
      ]
    },
    "779": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "tmp%0#7 (copy)",
        "0"
      ]
    },
    "780": {
      "op": "bytec 5 // 0x6c",
      "defined_out": [
        "0",
        "0x6c",
        "a#0",
        "box_key#0",
        "tmp%0#7",
        "tmp%0#7 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "tmp%0#7 (copy)",
        "0",
        "0x6c"
      ]
    },
    "782": {
      "op": "app_local_get_ex",
      "defined_out": [
        "a#0",
        "box_key#0",
        "maybe_exists%2#1",
        "maybe_value%2#1",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "maybe_value%2#1",
        "maybe_exists%2#1"
      ]
    },
    "783": {
      "error": "check self.nested_local exists for account",
      "op": "assert // check self.nested_local exists for account",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "maybe_value%2#1"
      ]
    },
    "784": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "maybe_value%2#1",
        "a#0 (copy)"
      ]
    },
    "786": {
      "op": "replace2 0",
      "defined_out": [
        "a#0",
        "aggregate%updated_data%3#0",
        "box_key#0",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "aggregate%updated_data%3#0"
      ]
    },
    "788": {
      "op": "bytec 5 // 0x6c"
    },
    "790": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "tmp%0#7",
        "0x6c",
        "aggregate%updated_data%3#0"
      ]
    },
    "791": {
      "op": "app_local_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0"
      ]
    },
    "792": {
      "op": "bytec 6 // \"box\"",
      "defined_out": [
        "\"box\"",
        "a#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "\"box\""
      ]
    },
    "794": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "\"box\"",
        "0"
      ]
    },
    "795": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0",
        "\"box\"",
        "0",
        "a#0 (copy)"
      ]
    },
    "797": {
      "op": "box_replace",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "a#0"
      ]
    },
    "798": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "box_key#0"
      ]
    },
    "799": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "encoded_value%0#0"
      ]
    },
    "800": {
      "op": "bytec 7 // \"box_map\"",
      "defined_out": [
        "\"box_map\"",
        "a#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "encoded_value%0#0",
        "\"box_map\""
      ]
    },
    "802": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "\"box_map\"",
        "encoded_value%0#0"
      ]
    },
    "803": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "box_prefixed_key%0#0"
      ]
    },
    "804": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "805": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_prefixed_key%0#0",
        "0",
        "a#0"
      ]
    },
    "807": {
      "op": "box_replace",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "808": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "809": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "810": {
      "block": "main_delete_storage_route@11",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%32#0"
      ]
    },
    "812": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%33#0"
      ]
    },
    "813": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "814": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%34#0"
      ]
    },
    "816": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "817": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "820": {
      "op": "btoi",
      "defined_out": [
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "821": {
      "op": "bytec 4 // 0x70",
      "defined_out": [
        "0x70",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "0x70"
      ]
    },
    "823": {
      "op": "app_global_del",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "824": {
      "op": "txn Sender",
      "defined_out": [
        "box_key#0",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "tmp%0#7"
      ]
    },
    "826": {
      "op": "bytec 5 // 0x6c",
      "defined_out": [
        "0x6c",
        "box_key#0",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "tmp%0#7",
        "0x6c"
      ]
    },
    "828": {
      "op": "app_local_del",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "829": {
      "op": "bytec 6 // \"box\"",
      "defined_out": [
        "\"box\"",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "\"box\""
      ]
    },
    "831": {
      "op": "box_del",
      "defined_out": [
        "box_key#0",
        "{box_del}"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "{box_del}"
      ]
    },
    "832": {
      "op": "pop",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "833": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "encoded_value%0#0"
      ]
    },
    "834": {
      "op": "bytec 7 // \"box_map\"",
      "defined_out": [
        "\"box_map\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "encoded_value%0#0",
        "\"box_map\""
      ]
    },
    "836": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"box_map\"",
        "encoded_value%0#0"
      ]
    },
    "837": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_prefixed_key%0#0"
      ]
    },
    "838": {
      "op": "box_del",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "{box_del}"
      ]
    },
    "839": {
      "op": "pop",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "840": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "841": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "842": {
      "block": "main_local_struct_route@10",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%26#0"
      ]
    },
    "844": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%27#0"
      ]
    },
    "845": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "846": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%28#0"
      ]
    },
    "848": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "849": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#7"
      ]
    },
    "851": {
      "op": "pushint 1234 // 1234",
      "defined_out": [
        "1234",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#7",
        "1234"
      ]
    },
    "854": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%27#0",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#7",
        "aggregate%val_as_bytes%27#0"
      ]
    },
    "855": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%33#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%33#0"
      ]
    },
    "856": {
      "op": "pushint 567 // 567",
      "defined_out": [
        "567",
        "aggregate%head%33#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%33#0",
        "567"
      ]
    },
    "859": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%33#0",
        "aggregate%val_as_bytes%28#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%head%33#0",
        "aggregate%val_as_bytes%28#0"
      ]
    },
    "860": {
      "op": "concat",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0"
      ]
    },
    "861": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "862": {
      "op": "extract 0 32",
      "defined_out": [
        "a#0",
        "foo#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0"
      ]
    },
    "865": {
      "op": "dig 1",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "a#0 (copy)"
      ]
    },
    "867": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "a#0",
        "a#0 (copy)",
        "foo#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "a#0 (copy)",
        "32"
      ]
    },
    "869": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "bar#0",
        "foo#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "bar#0"
      ]
    },
    "870": {
      "op": "dig 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "bar#0",
        "a#0 (copy)"
      ]
    },
    "872": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "a#0",
        "a#0 (copy)",
        "bar#0",
        "foo#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "bar#0",
        "a#0 (copy)",
        "40"
      ]
    },
    "874": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "bar#0",
        "baz#0"
      ]
    },
    "875": {
      "op": "global ZeroAddress",
      "defined_out": [
        "a#0",
        "bar#0",
        "baz#0",
        "foo#0",
        "tmp%2#5"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "foo#0",
        "bar#0",
        "baz#0",
        "tmp%2#5"
      ]
    },
    "877": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "bar#0",
        "baz#0",
        "tmp%2#5",
        "foo#0"
      ]
    },
    "879": {
      "op": "!=",
      "defined_out": [
        "a#0",
        "bar#0",
        "baz#0",
        "tmp%3#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "bar#0",
        "baz#0",
        "tmp%3#4"
      ]
    },
    "880": {
      "error": "use foo",
      "op": "assert // use foo",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "bar#0",
        "baz#0"
      ]
    },
    "881": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "baz#0",
        "bar#0"
      ]
    },
    "882": {
      "error": "use bar",
      "op": "assert // use bar",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "baz#0"
      ]
    },
    "883": {
      "error": "use baz",
      "op": "assert // use baz",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0"
      ]
    },
    "884": {
      "callsub": "test_cases.mutable_native_types.contract.do_something",
      "op": "callsub do_something"
    },
    "887": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "a#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "a#0",
        "0x151f7c75"
      ]
    },
    "888": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0x151f7c75",
        "a#0"
      ]
    },
    "889": {
      "op": "concat",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%31#0"
      ]
    },
    "890": {
      "op": "log",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "891": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "892": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "893": {
      "block": "main_create_storage_route@9",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%21#0"
      ]
    },
    "895": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%22#0"
      ]
    },
    "896": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "897": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%23#0"
      ]
    },
    "899": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "900": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "903": {
      "op": "btoi",
      "defined_out": [
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "904": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "0"
      ]
    },
    "905": {
      "op": "bytec_0 // \"nested\"",
      "defined_out": [
        "\"nested\"",
        "0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "0",
        "\"nested\""
      ]
    },
    "906": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_key#0",
        "maybe_exists%0#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%0#2",
        "maybe_exists%0#0"
      ]
    },
    "907": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%0#2"
      ]
    },
    "908": {
      "op": "bytec 4 // 0x70",
      "defined_out": [
        "0x70",
        "box_key#0",
        "maybe_value%0#2"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%0#2",
        "0x70"
      ]
    },
    "910": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "0x70",
        "maybe_value%0#2"
      ]
    },
    "911": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0"
      ]
    },
    "912": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "0"
      ]
    },
    "913": {
      "op": "bytec_0 // \"nested\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "0",
        "\"nested\""
      ]
    },
    "914": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_key#0",
        "maybe_exists%1#3",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "maybe_exists%1#3"
      ]
    },
    "915": {
      "error": "check self.nested exists",
      "op": "assert // check self.nested exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3"
      ]
    },
    "916": {
      "op": "txn Sender",
      "defined_out": [
        "box_key#0",
        "maybe_value%1#3",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "tmp%0#7"
      ]
    },
    "918": {
      "op": "bytec 5 // 0x6c",
      "defined_out": [
        "0x6c",
        "box_key#0",
        "maybe_value%1#3",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "tmp%0#7",
        "0x6c"
      ]
    },
    "920": {
      "op": "dig 2",
      "defined_out": [
        "0x6c",
        "box_key#0",
        "maybe_value%1#3",
        "maybe_value%1#3 (copy)",
        "tmp%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "tmp%0#7",
        "0x6c",
        "maybe_value%1#3 (copy)"
      ]
    },
    "922": {
      "op": "app_local_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3"
      ]
    },
    "923": {
      "op": "bytec 6 // \"box\"",
      "defined_out": [
        "\"box\"",
        "box_key#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "\"box\""
      ]
    },
    "925": {
      "op": "pushint 2064 // 2064",
      "defined_out": [
        "\"box\"",
        "2064",
        "box_key#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "\"box\"",
        "2064"
      ]
    },
    "928": {
      "op": "box_create",
      "defined_out": [
        "box_key#0",
        "maybe_value%1#3",
        "tmp%1#4"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3",
        "tmp%1#4"
      ]
    },
    "929": {
      "error": "expected box to not exist",
      "op": "assert // expected box to not exist",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "maybe_value%1#3"
      ]
    },
    "930": {
      "op": "extract 0 16",
      "defined_out": [
        "aggregate%extract%5#0",
        "box_key#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_key#0",
        "aggregate%extract%5#0"
      ]
    },
    "933": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%5#0",
        "box_key#0"
      ]
    },
    "934": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%5#0",
        "encoded_value%0#0"
      ]
    },
    "935": {
      "op": "bytec 7 // \"box_map\"",
      "defined_out": [
        "\"box_map\"",
        "aggregate%extract%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%5#0",
        "encoded_value%0#0",
        "\"box_map\""
      ]
    },
    "937": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%5#0",
        "\"box_map\"",
        "encoded_value%0#0"
      ]
    },
    "938": {
      "op": "concat",
      "defined_out": [
        "aggregate%extract%5#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%5#0",
        "box_prefixed_key%0#0"
      ]
    },
    "939": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%extract%5#0",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "940": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "box_prefixed_key%0#0",
        "0",
        "aggregate%extract%5#0"
      ]
    },
    "942": {
      "op": "box_replace",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "943": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "944": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "945": {
      "block": "main_increment_payment_route@8",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%15#1"
      ]
    },
    "947": {
      "op": "!",
      "defined_out": [
        "tmp%16#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%16#1"
      ]
    },
    "948": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "949": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%17#0"
      ]
    },
    "951": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "952": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "955": {
      "op": "btoi",
      "defined_out": [
        "index#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0"
      ]
    },
    "956": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "index#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "959": {
      "op": "btoi",
      "defined_out": [
        "amt#0",
        "index#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0"
      ]
    },
    "960": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amt#0",
        "index#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "0"
      ]
    },
    "961": {
      "op": "bytec_1 // \"num_payments\"",
      "defined_out": [
        "\"num_payments\"",
        "0",
        "amt#0",
        "index#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "0",
        "\"num_payments\""
      ]
    },
    "962": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amt#0",
        "index#0",
        "maybe_exists%0#0",
        "maybe_value%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "maybe_value%0#7",
        "maybe_exists%0#0"
      ]
    },
    "963": {
      "error": "check self.num_payments exists",
      "op": "assert // check self.num_payments exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "maybe_value%0#7"
      ]
    },
    "964": {
      "op": "dig 2",
      "defined_out": [
        "amt#0",
        "index#0",
        "index#0 (copy)",
        "maybe_value%0#7"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "maybe_value%0#7",
        "index#0 (copy)"
      ]
    },
    "966": {
      "op": ">",
      "defined_out": [
        "amt#0",
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "tmp%0#0"
      ]
    },
    "967": {
      "error": "invalid payment index",
      "op": "assert // invalid payment index",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0"
      ]
    },
    "968": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "0"
      ]
    },
    "969": {
      "op": "bytec_2 // \"payments\"",
      "defined_out": [
        "\"payments\"",
        "0",
        "amt#0",
        "index#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "0",
        "\"payments\""
      ]
    },
    "970": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amt#0",
        "index#0",
        "maybe_exists%1#3",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "maybe_value%1#3",
        "maybe_exists%1#3"
      ]
    },
    "971": {
      "error": "check self.payments exists",
      "op": "assert // check self.payments exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "index#0",
        "amt#0",
        "maybe_value%1#3"
      ]
    },
    "972": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "index#0"
      ]
    },
    "974": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "amt#0",
        "index#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "index#0",
        "48"
      ]
    },
    "976": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "amt#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0"
      ]
    },
    "977": {
      "op": "dup2",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%bytes_offset%7#0 (copy)",
        "amt#0",
        "maybe_value%1#3",
        "maybe_value%1#3 (copy)"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "maybe_value%1#3 (copy)",
        "aggregate%bytes_offset%7#0 (copy)"
      ]
    },
    "978": {
      "op": "pushint 48 // 48",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "maybe_value%1#3 (copy)",
        "aggregate%bytes_offset%7#0 (copy)",
        "48"
      ]
    },
    "980": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "amt#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0"
      ]
    },
    "981": {
      "op": "dup",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "aggregate%encoded_element%7#0 (copy)",
        "amt#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "aggregate%encoded_element%7#0 (copy)"
      ]
    },
    "982": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "aggregate%encoded_element%7#0 (copy)",
        "amt#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "aggregate%encoded_element%7#0 (copy)",
        "40"
      ]
    },
    "984": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "amt#0",
        "maybe_value%1#3",
        "values%0#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "amt#0",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "values%0#3"
      ]
    },
    "985": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "values%0#3",
        "amt#0"
      ]
    },
    "987": {
      "op": "+",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "maybe_value%1#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "tmp%1#1"
      ]
    },
    "988": {
      "op": "itob",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "aggregate%val_as_bytes%26#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%encoded_element%7#0",
        "aggregate%val_as_bytes%26#0"
      ]
    },
    "989": {
      "op": "replace2 40",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "aggregate%updated_data%0#0",
        "maybe_value%1#3"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%1#3",
        "aggregate%bytes_offset%7#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "991": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_array%4#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%updated_array%4#0"
      ]
    },
    "992": {
      "op": "bytec_2 // \"payments\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%updated_array%4#0",
        "\"payments\""
      ]
    },
    "993": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"payments\"",
        "aggregate%updated_array%4#0"
      ]
    },
    "994": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "995": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "996": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "997": {
      "block": "main_add_payment_route@7",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%11#0"
      ]
    },
    "999": {
      "op": "!",
      "defined_out": [
        "tmp%12#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%12#1"
      ]
    },
    "1000": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1001": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%13#0"
      ]
    },
    "1003": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1004": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0"
      ]
    },
    "1007": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "0"
      ]
    },
    "1008": {
      "op": "bytec_1 // \"num_payments\"",
      "defined_out": [
        "\"num_payments\"",
        "0",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "0",
        "\"num_payments\""
      ]
    },
    "1009": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#7",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "maybe_exists%0#0"
      ]
    },
    "1010": {
      "error": "check self.num_payments exists",
      "op": "assert // check self.num_payments exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7"
      ]
    },
    "1011": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#7",
        "maybe_value%0#7 (copy)",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "maybe_value%0#7 (copy)"
      ]
    },
    "1012": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "maybe_value%0#7",
        "maybe_value%0#7 (copy)",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "maybe_value%0#7 (copy)",
        "2"
      ]
    },
    "1014": {
      "op": "<",
      "defined_out": [
        "maybe_value%0#7",
        "pay#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "tmp%0#0"
      ]
    },
    "1015": {
      "error": "too many payments",
      "op": "assert // too many payments",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7"
      ]
    },
    "1016": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "0"
      ]
    },
    "1017": {
      "op": "bytec_2 // \"payments\"",
      "defined_out": [
        "\"payments\"",
        "0",
        "maybe_value%0#7",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "0",
        "\"payments\""
      ]
    },
    "1018": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#3",
        "maybe_value%0#7",
        "maybe_value%1#3",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "maybe_value%1#3",
        "maybe_exists%1#3"
      ]
    },
    "1019": {
      "error": "check self.payments exists",
      "op": "assert // check self.payments exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%0#7",
        "maybe_value%1#3"
      ]
    },
    "1020": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%1#3",
        "maybe_value%0#7"
      ]
    },
    "1021": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "maybe_value%0#7",
        "maybe_value%1#3",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%1#3",
        "maybe_value%0#7",
        "48"
      ]
    },
    "1023": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%3#0",
        "maybe_value%1#3",
        "pay#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "pay#0",
        "maybe_value%1#3",
        "aggregate%write_offset%3#0"
      ]
    },
    "1024": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%1#3",
        "aggregate%write_offset%3#0",
        "pay#0"
      ]
    },
    "1026": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_array%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%updated_array%3#0"
      ]
    },
    "1027": {
      "op": "bytec_2 // \"payments\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "aggregate%updated_array%3#0",
        "\"payments\""
      ]
    },
    "1028": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"payments\"",
        "aggregate%updated_array%3#0"
      ]
    },
    "1029": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1030": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0"
      ]
    },
    "1031": {
      "op": "bytec_1 // \"num_payments\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "0",
        "\"num_payments\""
      ]
    },
    "1032": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#1",
        "maybe_value%3#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%3#1",
        "maybe_exists%3#1"
      ]
    },
    "1033": {
      "error": "check self.num_payments exists",
      "op": "assert // check self.num_payments exists",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%3#1"
      ]
    },
    "1034": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "maybe_value%3#1",
        "1"
      ]
    },
    "1035": {
      "op": "+",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%1#1"
      ]
    },
    "1036": {
      "op": "bytec_1 // \"num_payments\"",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%1#1",
        "\"num_payments\""
      ]
    },
    "1037": {
      "op": "swap",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "\"num_payments\"",
        "tmp%1#1"
      ]
    },
    "1038": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1039": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "1040": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1041": {
      "block": "main_fixed_initialize_route@6",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%7#1"
      ]
    },
    "1043": {
      "op": "!",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%8#1"
      ]
    },
    "1044": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1045": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%9#0"
      ]
    },
    "1047": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1048": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "1049": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1050": {
      "block": "main_test_imm_fixed_array_route@5",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%3#0"
      ]
    },
    "1052": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%4#1"
      ]
    },
    "1053": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1054": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%5#0"
      ]
    },
    "1056": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1057": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "1058": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1059": {
      "block": "main_bare_routing@25",
      "stack_in": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%73#0"
      ]
    },
    "1061": {
      "op": "bnz main_after_if_else@27",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1064": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%74#0"
      ]
    },
    "1066": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%75#0"
      ]
    },
    "1067": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1068": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7",
        "tmp%0#0"
      ]
    },
    "1069": {
      "op": "return",
      "stack_out": [
        "arr2#1",
        "fixed_struct#0",
        "_i#0",
        "result#0",
        "result#7"
      ]
    },
    "1070": {
      "subroutine": "test_cases.mutable_native_types.contract.sum_frozen_arr",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_frozen_arr",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1073": {
      "op": "intc_0 // 0"
    },
    "1074": {
      "op": "frame_dig -1"
    },
    "1076": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1077": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1078": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1079": {
      "block": "sum_frozen_arr_for_header@1",
      "stack_in": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1081": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1083": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1084": {
      "op": "bz sum_frozen_arr_after_for@4",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1087": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)"
      ]
    },
    "1089": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1092": {
      "op": "frame_dig 2",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1094": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1095": {
      "op": "cover 2",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1097": {
      "op": "intc_2 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "1098": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1099": {
      "op": "intc_2 // 16",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "1100": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1101": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "1102": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "0"
      ]
    },
    "1103": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "values%0#0"
      ]
    },
    "1104": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "total#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "values%0#0",
        "total#0"
      ]
    },
    "1106": {
      "op": "+",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "total#0"
      ]
    },
    "1107": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1108": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "aggregate%encoded_element%0#0",
        "8"
      ]
    },
    "1109": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ]
    },
    "1110": {
      "op": "+",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1111": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1114": {
      "op": "+",
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1115": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1117": {
      "op": "b sum_frozen_arr_for_header@1"
    },
    "1120": {
      "block": "sum_frozen_arr_after_for@4",
      "stack_in": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1121": {
      "subroutine": "test_cases.mutable_native_types.contract.do_something",
      "params": {
        "pay#0": "bytes"
      },
      "block": "do_something",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1124": {
      "op": "frame_dig -1",
      "defined_out": [
        "pay#0 (copy)"
      ],
      "stack_out": [
        "pay#0 (copy)"
      ]
    },
    "1126": {
      "retsub": true,
      "op": "retsub"
    }
  }
}