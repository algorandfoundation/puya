{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": "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",
  "op_pc_offset": 0,
  "pc_events": {
    "161": {
      "error": "OnCompletion must be NoOp"
    },
    "271": {
      "error": "invalid number of bytes for (uint64,uint64)"
    },
    "329": {
      "error": "invalid number of bytes for (len+(uint64,uint64)[])"
    },
    "332": {
      "error": "expected empty array"
    },
    "347": {
      "error": "expected arrays to be the same length"
    },
    "357": {
      "error": "expected arrays to be the same"
    },
    "378": {
      "error": "max array length exceeded"
    },
    "393": {
      "error": "expected array to have 1 item"
    },
    "401": {
      "error": "expected sum to be 7"
    },
    "406": {
      "error": "expected arrays to be different"
    },
    "425": {
      "error": "expected arrays to be the same"
    },
    "433": {
      "error": "max array length exceeded"
    },
    "448": {
      "error": "expected arrays to be the same"
    },
    "467": {
      "error": "max array length exceeded"
    },
    "498": {
      "error": "expected 3 elements"
    },
    "507": {
      "error": "expected sum to be 21"
    },
    "533": {
      "error": "expected sum to be 21"
    },
    "541": {
      "error": "expected sum to be 14"
    },
    "549": {
      "error": "max array length exceeded"
    },
    "569": {
      "error": "and the sum shall be 41"
    },
    "593": {
      "error": "check self.nested exists"
    },
    "631": {
      "error": "check self.nested exists"
    },
    "655": {
      "error": "check self.nested exists"
    },
    "668": {
      "error": "check self.nested exists"
    },
    "685": {
      "error": "invalid number of bytes for uint64"
    },
    "694": {
      "error": "invalid number of bytes for (uint64,uint64)"
    },
    "698": {
      "error": "check self.nested exists"
    },
    "710": {
      "error": "check self.nested_proxy exists"
    },
    "726": {
      "error": "check self.nested_local exists for account"
    },
    "760": {
      "error": "invalid number of bytes for uint64"
    },
    "814": {
      "error": "use foo"
    },
    "816": {
      "error": "use bar"
    },
    "817": {
      "error": "use baz"
    },
    "834": {
      "error": "invalid number of bytes for uint64"
    },
    "839": {
      "error": "check self.nested exists"
    },
    "847": {
      "error": "check self.nested exists"
    },
    "861": {
      "error": "expected box to not exist"
    },
    "884": {
      "error": "invalid number of bytes for uint64"
    },
    "893": {
      "error": "invalid number of bytes for uint64"
    },
    "898": {
      "error": "check self.num_payments exists"
    },
    "902": {
      "error": "invalid payment index"
    },
    "906": {
      "error": "check self.payments exists"
    },
    "915": {
      "error": "index access is out of bounds"
    },
    "926": {
      "error": "index access is out of bounds"
    },
    "940": {
      "error": "invalid number of bytes for (uint8[32],uint64,uint64)"
    },
    "944": {
      "error": "check self.num_payments exists"
    },
    "949": {
      "error": "too many payments"
    },
    "953": {
      "error": "check self.payments exists"
    },
    "960": {
      "error": "index access is out of bounds"
    },
    "967": {
      "error": "check self.num_payments exists"
    },
    "984": {
      "error": "OnCompletion must be NoOp && can only call when creating"
    },
    "1015": {
      "error": "index access is out of bounds"
    }
  }
}