#pragma version 10
#pragma typetrack false

// test_cases.mutable_native_types.fixed_with_tups.FixedWithTups.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 8 16
    bytecblock "tup_bag" 0x151f7c75
    txn NumAppArgs
    bz main_bare_routing@9
    pushbytess 0xa67ea2ab 0x028840ea 0xf75cee9d 0x880b5534 // method "create_box()void", method "num_tups()uint64", method "add_tup((uint64,uint64))void", method "get_tup(uint64)(uint64,uint64)"
    txna ApplicationArgs 0
    match main_create_box_route@5 main_num_tups_route@6 main_add_tup_route@7 main_get_tup_route@8

main_after_if_else@11:
    intc_0 // 0
    return

main_get_tup_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    btoi
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    intc_0 // 0
    extract_uint64
    dig 1
    >
    assert // index out of bounds
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    extract 8 128 // on error: Index access is out of bounds
    swap
    intc_3 // 16
    *
    intc_3 // 16
    extract3 // on error: Index access is out of bounds
    dup
    intc_0 // 0
    extract_uint64
    swap
    intc_2 // 8
    extract_uint64
    swap
    itob
    swap
    itob
    concat
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

main_add_tup_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint64
    swap
    intc_2 // 8
    extract_uint64
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    intc_0 // 0
    extract_uint64
    intc_2 // 8
    <
    assert // too many tups
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    dup
    extract 8 128 // on error: Index access is out of bounds
    uncover 3
    itob
    uncover 3
    itob
    concat
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    intc_0 // 0
    extract_uint64
    dup
    intc_2 // 8
    <
    assert // Index access is out of bounds
    intc_3 // 16
    *
    swap
    replace3
    replace2 8
    bytec_0 // "tup_bag"
    swap
    box_put
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    dup
    intc_0 // 0
    extract_uint64
    intc_1 // 1
    +
    itob
    replace2 0
    bytec_0 // "tup_bag"
    swap
    box_put
    intc_1 // 1
    return

main_num_tups_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_0 // "tup_bag"
    box_get
    assert // check self.tup_bag exists
    intc_0 // 0
    extract_uint64
    itob
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

main_create_box_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_0 // "tup_bag"
    pushint 136 // 136
    box_create
    pop
    intc_1 // 1
    return

main_bare_routing@9:
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    intc_1 // 1
    return
