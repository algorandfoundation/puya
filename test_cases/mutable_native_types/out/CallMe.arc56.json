{
    "name": "CallMe",
    "structs": {
        "DynamicStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            },
            {
                "name": "c",
                "type": "byte[]"
            },
            {
                "name": "d",
                "type": "string"
            },
            {
                "name": "e",
                "type": "(uint64,uint64)[]"
            }
        ],
        "FixedStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            }
        ],
        "NestedStruct": [
            {
                "name": "fixed",
                "type": "FixedStruct"
            },
            {
                "name": "c",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "delete",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_struct_arg",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "FixedStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_struct_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "FixedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_struct_arg",
            "args": [
                {
                    "type": "((uint64,uint64),uint64)",
                    "struct": "NestedStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_struct_ret",
            "args": [],
            "returns": {
                "type": "((uint64,uint64),uint64)",
                "struct": "NestedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "dynamic_struct_arg",
            "args": [
                {
                    "type": "(uint64,uint64,byte[],string,(uint64,uint64)[])",
                    "struct": "DynamicStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "dynamic_struct_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,byte[],string,(uint64,uint64)[])",
                "struct": "DynamicStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_arr_arg",
            "args": [
                {
                    "type": "(uint64,uint64)[3]",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_arr_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)[3]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "native_arr_arg",
            "args": [
                {
                    "type": "(uint64,uint64)[]",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "native_arr_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log_it",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 5
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "fixed_struct": {
                    "keyType": "AVMString",
                    "valueType": "FixedStruct",
                    "key": "Zml4ZWRfc3RydWN0"
                },
                "nested_struct": {
                    "keyType": "AVMString",
                    "valueType": "NestedStruct",
                    "key": "bmVzdGVkX3N0cnVjdA=="
                },
                "dynamic_struct": {
                    "keyType": "AVMString",
                    "valueType": "DynamicStruct",
                    "key": "ZHluYW1pY19zdHJ1Y3Q="
                },
                "fixed_arr": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,uint64)[3]",
                    "key": "Zml4ZWRfYXJy"
                },
                "native_arr": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,uint64)[]",
                    "key": "bmF0aXZlX2Fycg=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        195
                    ],
                    "errorMessage": "OnCompletion must be DeleteApplication && can only call when not creating"
                },
                {
                    "pc": [
                        98
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        205
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        337,
                        415
                    ],
                    "errorMessage": "check self.dynamic_struct exists"
                },
                {
                    "pc": [
                        363,
                        421
                    ],
                    "errorMessage": "check self.fixed_arr exists"
                },
                {
                    "pc": [
                        224,
                        405
                    ],
                    "errorMessage": "check self.fixed_struct exists"
                },
                {
                    "pc": [
                        395,
                        427
                    ],
                    "errorMessage": "check self.native_arr exists"
                },
                {
                    "pc": [
                        248,
                        410
                    ],
                    "errorMessage": "check self.nested_struct exists"
                },
                {
                    "pc": [
                        279,
                        299,
                        319,
                        375
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        384
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<test_cases.mutable_native_types.abi_call.FixedStruct>"
                },
                {
                    "pc": [
                        352
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<test_cases.mutable_native_types.abi_call.FixedStruct, 3>"
                },
                {
                    "pc": [
                        328
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.mutable_native_types.abi_call.DynamicStruct"
                },
                {
                    "pc": [
                        215
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.mutable_native_types.abi_call.FixedStruct"
                },
                {
                    "pc": [
                        239
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.mutable_native_types.abi_call.NestedStruct"
                },
                {
                    "pc": [
                        265
                    ],
                    "errorMessage": "invalid tail pointer at index 2 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[]))"
                },
                {
                    "pc": [
                        285
                    ],
                    "errorMessage": "invalid tail pointer at index 3 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[]))"
                },
                {
                    "pc": [
                        307
                    ],
                    "errorMessage": "invalid tail pointer at index 4 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[]))"
                },
                {
                    "pc": [
                        260
                    ],
                    "errorMessage": "invalid tuple encoding"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}