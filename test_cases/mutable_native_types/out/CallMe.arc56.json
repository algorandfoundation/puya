{
    "name": "CallMe",
    "structs": {
        "DynamicStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            },
            {
                "name": "c",
                "type": "byte[]"
            },
            {
                "name": "d",
                "type": "string"
            },
            {
                "name": "e",
                "type": "(uint64,uint64)[]"
            }
        ],
        "FixedStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            }
        ],
        "NestedStruct": [
            {
                "name": "fixed",
                "type": "FixedStruct"
            },
            {
                "name": "c",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "delete",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_struct_arg",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "FixedStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_struct_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "FixedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_struct_arg",
            "args": [
                {
                    "type": "((uint64,uint64),uint64)",
                    "struct": "NestedStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_struct_ret",
            "args": [],
            "returns": {
                "type": "((uint64,uint64),uint64)",
                "struct": "NestedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "dynamic_struct_arg",
            "args": [
                {
                    "type": "(uint64,uint64,byte[],string,(uint64,uint64)[])",
                    "struct": "DynamicStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "dynamic_struct_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,byte[],string,(uint64,uint64)[])",
                "struct": "DynamicStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_arr_arg",
            "args": [
                {
                    "type": "(uint64,uint64)[3]",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_arr_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)[3]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "native_arr_arg",
            "args": [
                {
                    "type": "(uint64,uint64)[]",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "native_arr_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log_it",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 5
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "fixed_struct": {
                    "keyType": "AVMString",
                    "valueType": "FixedStruct",
                    "key": "Zml4ZWRfc3RydWN0"
                },
                "nested_struct": {
                    "keyType": "AVMString",
                    "valueType": "NestedStruct",
                    "key": "bmVzdGVkX3N0cnVjdA=="
                },
                "dynamic_struct": {
                    "keyType": "AVMString",
                    "valueType": "DynamicStruct",
                    "key": "ZHluYW1pY19zdHJ1Y3Q="
                },
                "fixed_arr": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,uint64)[3]",
                    "key": "Zml4ZWRfYXJy"
                },
                "native_arr": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,uint64)[]",
                    "key": "bmF0aXZlX2Fycg=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        194
                    ],
                    "errorMessage": "OnCompletion must be DeleteApplication && can only call when not creating"
                },
                {
                    "pc": [
                        97
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        202
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        260,
                        339
                    ],
                    "errorMessage": "check self.dynamic_struct exists"
                },
                {
                    "pc": [
                        286,
                        345
                    ],
                    "errorMessage": "check self.fixed_arr exists"
                },
                {
                    "pc": [
                        219,
                        329
                    ],
                    "errorMessage": "check self.fixed_struct exists"
                },
                {
                    "pc": [
                        319,
                        351
                    ],
                    "errorMessage": "check self.native_arr exists"
                },
                {
                    "pc": [
                        243,
                        334
                    ],
                    "errorMessage": "check self.nested_struct exists"
                },
                {
                    "pc": [
                        234
                    ],
                    "errorMessage": "invalid number of bytes for ((uint64,uint64),uint64)"
                },
                {
                    "pc": [
                        308
                    ],
                    "errorMessage": "invalid number of bytes for (len+(uint64,uint64)[])"
                },
                {
                    "pc": [
                        210
                    ],
                    "errorMessage": "invalid number of bytes for (uint64,uint64)"
                },
                {
                    "pc": [
                        275
                    ],
                    "errorMessage": "invalid number of bytes for (uint64,uint64)[3]"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyADAQAQJgYEFR98dQxmaXhlZF9zdHJ1Y3QNbmVzdGVkX3N0cnVjdA5keW5hbWljX3N0cnVjdAlmaXhlZF9hcnIKbmF0aXZlX2FycjEbQQBygAQkN408NhoAjgEAXDEZFEQxGESCCwQRsZuVBNKLlkoE6hhlXwS7O/23BEbsFKAEm00JJgRPDetQBFlmSrYEEl0TdgSBjkpiBJu+EDI2GgCOCwASAB8AKQA3AEEASABSAGEAbACCAI0AMRmBBRIxGBBDMRkUMRgUEEM2GgFJFSQSRClMZyJDIyllRChMULAiQzYaAUkVgRgSRCpMZyJDIyplRChMULAiQys2GgFnIkMjK2VEKExQsCJDNhoBSRWBMBJEJwRMZyJDIycEZUQoTFCwIkM2GgFJI1kkC4ECCEsBFRJEJwVMZyJDIycFZUQoTFCwIkMjKWVEsCMqZUSwIytlRLAjJwRlRLAjJwVlRLAiQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}