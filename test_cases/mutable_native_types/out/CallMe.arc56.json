{
    "name": "CallMe",
    "structs": {
        "DynamicStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            },
            {
                "name": "c",
                "type": "byte[]"
            },
            {
                "name": "d",
                "type": "string"
            },
            {
                "name": "e",
                "type": "(uint64,uint64)[]"
            }
        ],
        "FixedStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint64"
            }
        ],
        "NestedStruct": [
            {
                "name": "fixed",
                "type": "FixedStruct"
            },
            {
                "name": "c",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "delete",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_struct_arg",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "struct": "FixedStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_struct_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)",
                "struct": "FixedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_struct_arg",
            "args": [
                {
                    "type": "((uint64,uint64),uint64)",
                    "struct": "NestedStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_struct_ret",
            "args": [],
            "returns": {
                "type": "((uint64,uint64),uint64)",
                "struct": "NestedStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "dynamic_struct_arg",
            "args": [
                {
                    "type": "(uint64,uint64,byte[],string,(uint64,uint64)[])",
                    "struct": "DynamicStruct",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "dynamic_struct_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,byte[],string,(uint64,uint64)[])",
                "struct": "DynamicStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_arr_arg",
            "args": [
                {
                    "type": "(uint64,uint64)[3]",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fixed_arr_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)[3]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "native_arr_arg",
            "args": [
                {
                    "type": "(uint64,uint64)[]",
                    "name": "arg"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "native_arr_ret",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log_it",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 5
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "fixed_struct": {
                    "keyType": "AVMString",
                    "valueType": "FixedStruct",
                    "key": "Zml4ZWRfc3RydWN0"
                },
                "nested_struct": {
                    "keyType": "AVMString",
                    "valueType": "NestedStruct",
                    "key": "bmVzdGVkX3N0cnVjdA=="
                },
                "dynamic_struct": {
                    "keyType": "AVMString",
                    "valueType": "DynamicStruct",
                    "key": "ZHluYW1pY19zdHJ1Y3Q="
                },
                "fixed_arr": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,uint64)[3]",
                    "key": "Zml4ZWRfYXJy"
                },
                "native_arr": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,uint64)[]",
                    "key": "bmF0aXZlX2Fycg=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        345
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        176,
                        188,
                        204,
                        219,
                        235,
                        250,
                        266,
                        281,
                        297,
                        312,
                        328
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        359
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        179,
                        191,
                        207,
                        222,
                        238,
                        253,
                        269,
                        284,
                        300,
                        315,
                        331,
                        348
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        399,
                        444
                    ],
                    "errorMessage": "check self.dynamic_struct exists"
                },
                {
                    "pc": [
                        414,
                        450
                    ],
                    "errorMessage": "check self.fixed_arr exists"
                },
                {
                    "pc": [
                        373,
                        434
                    ],
                    "errorMessage": "check self.fixed_struct exists"
                },
                {
                    "pc": [
                        429,
                        456
                    ],
                    "errorMessage": "check self.native_arr exists"
                },
                {
                    "pc": [
                        386,
                        439
                    ],
                    "errorMessage": "check self.nested_struct exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmBgQVH3x1DGZpeGVkX3N0cnVjdA1uZXN0ZWRfc3RydWN0DmR5bmFtaWNfc3RydWN0CWZpeGVkX2FycgpuYXRpdmVfYXJyMRtBAQ+CDAQkN408BBGxm5UE0ouWSgTqGGVfBLs7/bcERuwUoASbTQkmBE8N61AEWWZKtgQSXRN2BIGOSmIEm74QMjYaAI4MAKkAmgCKAHsAawBcAEwAPQAtAB4ADgACI0MxGRREMRhEiAD4IkMxGRREMRhEiADmKExQsCJDMRkURDEYRDYaAYgAyiJDMRkURDEYRIgAuChMULAiQzEZFEQxGEQ2GgGIAJwiQzEZFEQxGESIAIsoTFCwIkMxGRREMRhENhoBiABwIkMxGRREMRhEiABfKExQsCJDMRkURDEYRDYaAYgARCJDMRkURDEYRIgAMyhMULAiQzEZFEQxGEQ2GgGIABgiQzEZgQUSRDEYRCJDMRlA/0cxGBREIkOKAQApi/9niSMpZUSJigEAKov/Z4kjKmVEiYoBACuL/2eJIytlRImKAQAnBIv/Z4kjJwRlRImKAQAnBYv/Z4kjJwVlRIkjKWVEsCMqZUSwIytlRLAjJwRlRLAjJwVlRLCJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}