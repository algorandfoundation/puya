// Op                                                                                                                     Stack (out)
// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txn NumAppArgs                                                                                                    tmp%0#2
        v-store tmp%0#2
        v-load tmp%0#2                                                                                                    tmp%0#2
        bz main_bare_routing@16 ; b main_abi_routing@4

    main_abi_routing@4:
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                            tmp%2#0
        v-store tmp%2#0
        method create_box()void                                                                                           Method(create_box()void)
        method num_tups()uint64                                                                                           Method(create_box()void),Method(num_tups()uint64)
        method add_tup((uint64,uint64))void                                                                               Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void)
        method get_tup(uint64)(uint64,uint64)                                                                             Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64))
        method sum()uint64                                                                                                Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64)
        method add_many_tups((uint64,uint64)[])void                                                                       Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void)
        method add_fixed_tups((uint64,uint64)[3])void                                                                     Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void)
        method set_a(uint64)void                                                                                          Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void)
        method set_b(uint64)void                                                                                          Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void)
        method get_3_tups(uint64)(uint64,uint64)[3]                                                                       Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void),Method(get_3_tups(uint64)(uint64,uint64)[3])
        method get_all_tups()(uint64,uint64)[]                                                                            Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void),Method(get_3_tups(uint64)(uint64,uint64)[3]),Method(get_all_tups()(uint64,uint64)[])
        v-load tmp%2#0                                                                                                    Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void),Method(get_3_tups(uint64)(uint64,uint64)[3]),Method(get_all_tups()(uint64,uint64)[]),tmp%2#0
        match main_create_box_route@5 main_num_tups_route@6 main_add_tup_route@7 main_get_tup_route@8 main_sum_route@9 main_add_many_tups_route@10 main_add_fixed_tups_route@11 main_set_a_route@12 main_set_b_route@13 main_get_3_tups_route@14 main_get_all_tups_route@15 ; b main_after_if_else@18 

    main_create_box_route@5:
        // mutable_native_types/case3_with_mutable_struct.py:38
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                                    tmp%3#0
        !                                                                                                                 tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                                    tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                                    tmp%5#0
        assert // can only call when not creating
        callsub create_box
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_num_tups_route@6:
        // mutable_native_types/case3_with_mutable_struct.py:45
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                                    tmp%7#0
        !                                                                                                                 tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                                    tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                                    tmp%9#0
        assert // can only call when not creating
        callsub num_tups                                                                                                  tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                                   tmp%11#0
        itob                                                                                                              aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                                   0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                                                 0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                                            tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                                                   tmp%13#0
        log
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_add_tup_route@7:
        // mutable_native_types/case3_with_mutable_struct.py:49
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                                                   tmp%14#0
        !                                                                                                                 tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                                   tmp%15#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                                   tmp%16#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded(uint64,uint64)%0#0
        v-store reinterpret_Encoded(uint64,uint64)%0#0
        // mutable_native_types/case3_with_mutable_struct.py:49
        // @arc4.abimethod()
        v-load reinterpret_Encoded(uint64,uint64)%0#0                                                                     reinterpret_Encoded(uint64,uint64)%0#0
        callsub add_tup                                                                                                   add_tup%0#0
        v-store add_tup%0#0
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_get_tup_route@8:
        // mutable_native_types/case3_with_mutable_struct.py:56
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                                                   tmp%18#0
        !                                                                                                                 tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                                                   tmp%19#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                                                                   tmp%20#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                                            reinterpret_Encoded(uint64)%0#0
        btoi                                                                                                              tmp%22#0
        v-store tmp%22#0
        // mutable_native_types/case3_with_mutable_struct.py:56
        // @arc4.abimethod()
        v-load tmp%22#0                                                                                                   tmp%22#0
        callsub get_tup                                                                                                   tmp%23#0
        v-store tmp%23#0
        byte 0x151f7c75                                                                                                   0x151f7c75
        v-load tmp%23#0                                                                                                   0x151f7c75,tmp%23#0
        concat                                                                                                            tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                                                                   tmp%24#0
        log
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_sum_route@9:
        // mutable_native_types/case3_with_mutable_struct.py:61
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%25#0
        v-store tmp%25#0
        v-load tmp%25#0                                                                                                   tmp%25#0
        !                                                                                                                 tmp%26#0
        v-store tmp%26#0
        v-load tmp%26#0                                                                                                   tmp%26#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%27#0
        v-store tmp%27#0
        v-load tmp%27#0                                                                                                   tmp%27#0
        assert // can only call when not creating
        callsub sum                                                                                                       tmp%29#0
        v-store tmp%29#0
        v-load tmp%29#0                                                                                                   tmp%29#0
        itob                                                                                                              aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        byte 0x151f7c75                                                                                                   0x151f7c75
        v-load aggregate%val_as_bytes%1#0                                                                                 0x151f7c75,aggregate%val_as_bytes%1#0
        concat                                                                                                            tmp%31#0
        v-store tmp%31#0
        v-load tmp%31#0                                                                                                   tmp%31#0
        log
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_add_many_tups_route@10:
        // mutable_native_types/case3_with_mutable_struct.py:70
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%32#0
        v-store tmp%32#0
        v-load tmp%32#0                                                                                                   tmp%32#0
        !                                                                                                                 tmp%33#0
        v-store tmp%33#0
        v-load tmp%33#0                                                                                                   tmp%33#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%34#0
        v-store tmp%34#0
        v-load tmp%34#0                                                                                                   tmp%34#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded(len+(uint64,uint64)[])%0#0
        v-store reinterpret_Encoded(len+(uint64,uint64)[])%0#0
        // mutable_native_types/case3_with_mutable_struct.py:70
        // @arc4.abimethod()
        v-load reinterpret_Encoded(len+(uint64,uint64)[])%0#0                                                             reinterpret_Encoded(len+(uint64,uint64)[])%0#0
        callsub add_many_tups
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_add_fixed_tups_route@11:
        // mutable_native_types/case3_with_mutable_struct.py:75
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%36#0
        v-store tmp%36#0
        v-load tmp%36#0                                                                                                   tmp%36#0
        !                                                                                                                 tmp%37#0
        v-store tmp%37#0
        v-load tmp%37#0                                                                                                   tmp%37#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%38#0
        v-store tmp%38#0
        v-load tmp%38#0                                                                                                   tmp%38#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded((uint64,uint64)[3])%0#0
        v-store reinterpret_Encoded((uint64,uint64)[3])%0#0
        // mutable_native_types/case3_with_mutable_struct.py:75
        // @arc4.abimethod()
        v-load reinterpret_Encoded((uint64,uint64)[3])%0#0                                                                reinterpret_Encoded((uint64,uint64)[3])%0#0
        callsub add_fixed_tups
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_set_a_route@12:
        // mutable_native_types/case3_with_mutable_struct.py:80
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%40#0
        v-store tmp%40#0
        v-load tmp%40#0                                                                                                   tmp%40#0
        !                                                                                                                 tmp%41#0
        v-store tmp%41#0
        v-load tmp%41#0                                                                                                   tmp%41#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%42#0
        v-store tmp%42#0
        v-load tmp%42#0                                                                                                   tmp%42#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                                            reinterpret_Encoded(uint64)%1#0
        btoi                                                                                                              tmp%44#0
        v-store tmp%44#0
        // mutable_native_types/case3_with_mutable_struct.py:80
        // @arc4.abimethod()
        v-load tmp%44#0                                                                                                   tmp%44#0
        callsub set_a
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_set_b_route@13:
        // mutable_native_types/case3_with_mutable_struct.py:86
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%45#0
        v-store tmp%45#0
        v-load tmp%45#0                                                                                                   tmp%45#0
        !                                                                                                                 tmp%46#0
        v-store tmp%46#0
        v-load tmp%46#0                                                                                                   tmp%46#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%47#0
        v-store tmp%47#0
        v-load tmp%47#0                                                                                                   tmp%47#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded(uint64)%2#0
        v-store reinterpret_Encoded(uint64)%2#0
        v-load reinterpret_Encoded(uint64)%2#0                                                                            reinterpret_Encoded(uint64)%2#0
        btoi                                                                                                              tmp%49#0
        v-store tmp%49#0
        // mutable_native_types/case3_with_mutable_struct.py:86
        // @arc4.abimethod()
        v-load tmp%49#0                                                                                                   tmp%49#0
        callsub set_b
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_get_3_tups_route@14:
        // mutable_native_types/case3_with_mutable_struct.py:92
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%50#0
        v-store tmp%50#0
        v-load tmp%50#0                                                                                                   tmp%50#0
        !                                                                                                                 tmp%51#0
        v-store tmp%51#0
        v-load tmp%51#0                                                                                                   tmp%51#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%52#0
        v-store tmp%52#0
        v-load tmp%52#0                                                                                                   tmp%52#0
        assert // can only call when not creating
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                            reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        v-load reinterpret_Encoded(uint64)%3#0                                                                            reinterpret_Encoded(uint64)%3#0
        btoi                                                                                                              tmp%54#0
        v-store tmp%54#0
        // mutable_native_types/case3_with_mutable_struct.py:92
        // @arc4.abimethod()
        v-load tmp%54#0                                                                                                   tmp%54#0
        callsub get_3_tups                                                                                                tmp%55#0
        v-store tmp%55#0
        byte 0x151f7c75                                                                                                   0x151f7c75
        v-load tmp%55#0                                                                                                   0x151f7c75,tmp%55#0
        concat                                                                                                            tmp%56#0
        v-store tmp%56#0
        v-load tmp%56#0                                                                                                   tmp%56#0
        log
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_get_all_tups_route@15:
        // mutable_native_types/case3_with_mutable_struct.py:105
        // @arc4.abimethod()
        txn OnCompletion                                                                                                  tmp%57#0
        v-store tmp%57#0
        v-load tmp%57#0                                                                                                   tmp%57#0
        !                                                                                                                 tmp%58#0
        v-store tmp%58#0
        v-load tmp%58#0                                                                                                   tmp%58#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                 tmp%59#0
        v-store tmp%59#0
        v-load tmp%59#0                                                                                                   tmp%59#0
        assert // can only call when not creating
        callsub get_all_tups                                                                                              tmp%61#0
        v-store tmp%61#0
        byte 0x151f7c75                                                                                                   0x151f7c75
        v-load tmp%61#0                                                                                                   0x151f7c75,tmp%61#0
        concat                                                                                                            tmp%62#0
        v-store tmp%62#0
        v-load tmp%62#0                                                                                                   tmp%62#0
        log
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_bare_routing@16:
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        txn OnCompletion                                                                                                  tmp%63#0
        v-store tmp%63#0
        v-load tmp%63#0                                                                                                   tmp%63#0
        bz main___algopy_default_create@17 ; b main_after_if_else@18

    main___algopy_default_create@17:
        txn ApplicationID                                                                                                 tmp%64#0
        v-store tmp%64#0
        v-load tmp%64#0                                                                                                   tmp%64#0
        !                                                                                                                 tmp%65#0
        v-store tmp%65#0
        v-load tmp%65#0                                                                                                   tmp%65#0
        assert // can only call when creating
        int 1                                                                                                             1
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_after_if_else@18:
        // mutable_native_types/case3_with_mutable_struct.py:34
        // class Case3WithStruct(arc4.ARC4Contract):
        int 0                                                                                                             0
        v-store test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 
        v-load test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0 test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19 

    main_after_inlined_test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.__puya_arc4_router__@19:
        v-load tmp%0#1                                                                                                    tmp%0#1
        return


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.create_box() -> void:
subroutine create_box:
    create_box_block@0:
        // mutable_native_types/case3_with_mutable_struct.py:40
        // assert self.tup_bag.create(), "box already exists"
        byte "tup_bag"                                                                                                    "tup_bag"
        int 4273                                                                                                          "tup_bag",4273
        box_create                                                                                                        tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                                    tmp%0#0
        assert // box already exists
        // mutable_native_types/case3_with_mutable_struct.py:41
        // self.tup_bag.value.owner = Txn.sender
        txn Sender                                                                                                        tmp%1#0
        v-store tmp%1#0
        byte "tup_bag"                                                                                                    "tup_bag"
        int 136                                                                                                           "tup_bag",136
        v-load tmp%1#0                                                                                                    "tup_bag",136,tmp%1#0
        box_replace
        // mutable_native_types/case3_with_mutable_struct.py:42
        // self.tup_bag.value.app = Global.current_application_id
        global CurrentApplicationID                                                                                       tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                                    tmp%2#0
        itob                                                                                                              aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte "tup_bag"                                                                                                    "tup_bag"
        int 168                                                                                                           "tup_bag",168
        v-load aggregate%val_as_bytes%0#0                                                                                 "tup_bag",168,aggregate%val_as_bytes%0#0
        box_replace
        // mutable_native_types/case3_with_mutable_struct.py:43
        // self.tup_bag.value.bootstrapped = True
        byte "tup_bag"                                                                                                    "tup_bag"
        int 4272                                                                                                          "tup_bag",4272
        int 1                                                                                                             "tup_bag",4272,1
        box_extract                                                                                                       box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                                        box%box_extract%0#0
        int 0                                                                                                             box%box_extract%0#0,0
        int 1                                                                                                             box%box_extract%0#0,0,1
        setbit                                                                                                            aggregate%updated_target%0#0
        v-store aggregate%updated_target%0#0
        byte "tup_bag"                                                                                                    "tup_bag"
        int 4272                                                                                                          "tup_bag",4272
        v-load aggregate%updated_target%0#0                                                                               "tup_bag",4272,aggregate%updated_target%0#0
        box_replace
        retsub


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.num_tups() -> uint64:
subroutine num_tups:
    num_tups_block@0:
        // mutable_native_types/case3_with_mutable_struct.py:47
        // return self.tup_bag.value.count
        byte "tup_bag"                                                                                                    "tup_bag"
        int 0                                                                                                             "tup_bag",0
        int 8                                                                                                             "tup_bag",0,8
        box_extract                                                                                                       box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                                        box%box_extract%0#0
        btoi                                                                                                              values%0#0
        v-store values%0#0
        v-load values%0#0                                                                                                 values%0#0
        retsub                                                                                                            values%0#0


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_tup(tup: bytes) -> bytes:
subroutine add_tup:
    add_tup_block@0:                                                                                                      (𝕡) tup#0 |
        // mutable_native_types/case3_with_mutable_struct.py:51
        // self._check_owner()
        callsub _check_owner                                                                                              (𝕡) tup#0 |
        // mutable_native_types/case3_with_mutable_struct.py:52
        // assert self.tup_bag.value.count < self.tup_bag.value.items.length, "too many tups"
        byte "tup_bag"                                                                                                    (𝕡) tup#0 | "tup_bag"
        int 0                                                                                                             (𝕡) tup#0 | "tup_bag",0
        int 8                                                                                                             (𝕡) tup#0 | "tup_bag",0,8
        box_extract                                                                                                       (𝕡) tup#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                                       (𝕡) tup#0 |
        v-load box%box_extract%0#0                                                                                        (𝕡) tup#0 | box%box_extract%0#0
        btoi                                                                                                              (𝕡) tup#0 | values%0#0
        v-store values%0#0                                                                                                (𝕡) tup#0 |
        v-load values%0#0                                                                                                 (𝕡) tup#0 | values%0#0
        int 8                                                                                                             (𝕡) tup#0 | values%0#0,8
        <                                                                                                                 (𝕡) tup#0 | tmp%0#0
        v-store tmp%0#0                                                                                                   (𝕡) tup#0 |
        v-load tmp%0#0                                                                                                    (𝕡) tup#0 | tmp%0#0
        assert // too many tups                                                                                           (𝕡) tup#0 |
        // mutable_native_types/case3_with_mutable_struct.py:53
        // self.tup_bag.value.items[self.tup_bag.value.count] = tup.copy()
        v-load values%0#0                                                                                                 (𝕡) tup#0 | values%0#0
        int 16                                                                                                            (𝕡) tup#0 | values%0#0,16
        *                                                                                                                 (𝕡) tup#0 | box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0                                                                                (𝕡) tup#0 |
        int 8                                                                                                             (𝕡) tup#0 | 8
        v-load box%index_bytes_offset%0#0                                                                                 (𝕡) tup#0 | 8,box%index_bytes_offset%0#0
        +                                                                                                                 (𝕡) tup#0 | box%offset%3#0
        v-store box%offset%3#0                                                                                            (𝕡) tup#0 |
        byte "tup_bag"                                                                                                    (𝕡) tup#0 | "tup_bag"
        v-load box%offset%3#0                                                                                             (𝕡) tup#0 | "tup_bag",box%offset%3#0
        p-load tup#0                                                                                                      (𝕡) tup#0 | "tup_bag",box%offset%3#0,tup#0 (copy)
        box_replace                                                                                                       (𝕡) tup#0 |
        // mutable_native_types/case3_with_mutable_struct.py:54
        // self.tup_bag.value.count += 1
        byte "tup_bag"                                                                                                    (𝕡) tup#0 | "tup_bag"
        int 0                                                                                                             (𝕡) tup#0 | "tup_bag",0
        int 8                                                                                                             (𝕡) tup#0 | "tup_bag",0,8
        box_extract                                                                                                       (𝕡) tup#0 | box%box_extract%2#0
        v-store box%box_extract%2#0                                                                                       (𝕡) tup#0 |
        v-load box%box_extract%2#0                                                                                        (𝕡) tup#0 | box%box_extract%2#0
        btoi                                                                                                              (𝕡) tup#0 | values%2#0
        v-store values%2#0                                                                                                (𝕡) tup#0 |
        v-load values%2#0                                                                                                 (𝕡) tup#0 | values%2#0
        int 1                                                                                                             (𝕡) tup#0 | values%2#0,1
        +                                                                                                                 (𝕡) tup#0 | tmp%1#0
        v-store tmp%1#0                                                                                                   (𝕡) tup#0 |
        v-load tmp%1#0                                                                                                    (𝕡) tup#0 | tmp%1#0
        itob                                                                                                              (𝕡) tup#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                                                (𝕡) tup#0 |
        byte "tup_bag"                                                                                                    (𝕡) tup#0 | "tup_bag"
        int 0                                                                                                             (𝕡) tup#0 | "tup_bag",0
        v-load aggregate%val_as_bytes%0#0                                                                                 (𝕡) tup#0 | "tup_bag",0,aggregate%val_as_bytes%0#0
        box_replace                                                                                                       (𝕡) tup#0 |
        p-load tup#0                                                                                                      (𝕡) tup#0 | tup#0 (copy)
        retsub                                                                                                            tup#0 (copy)


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_tup(index: uint64) -> bytes:
subroutine get_tup:
    get_tup_block@0:                                                                                                      (𝕡) index#0 |
        // mutable_native_types/case3_with_mutable_struct.py:58
        // assert index < self.tup_bag.value.count, "index out of bounds"
        byte "tup_bag"                                                                                                    (𝕡) index#0 | "tup_bag"
        int 0                                                                                                             (𝕡) index#0 | "tup_bag",0
        int 8                                                                                                             (𝕡) index#0 | "tup_bag",0,8
        box_extract                                                                                                       (𝕡) index#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                                       (𝕡) index#0 |
        v-load box%box_extract%0#0                                                                                        (𝕡) index#0 | box%box_extract%0#0
        btoi                                                                                                              (𝕡) index#0 | values%0#0
        v-store values%0#0                                                                                                (𝕡) index#0 |
        p-load index#0                                                                                                    (𝕡) index#0 | index#0 (copy)
        v-load values%0#0                                                                                                 (𝕡) index#0 | index#0 (copy),values%0#0
        <                                                                                                                 (𝕡) index#0 | tmp%0#0
        v-store tmp%0#0                                                                                                   (𝕡) index#0 |
        v-load tmp%0#0                                                                                                    (𝕡) index#0 | tmp%0#0
        assert // index out of bounds                                                                                     (𝕡) index#0 |
        // mutable_native_types/case3_with_mutable_struct.py:59
        // return self.tup_bag.value.items[index]
        byte "tup_bag"                                                                                                    (𝕡) index#0 | "tup_bag"
        int 8                                                                                                             (𝕡) index#0 | "tup_bag",8
        int 128                                                                                                           (𝕡) index#0 | "tup_bag",8,128
        box_extract                                                                                                       (𝕡) index#0 | box%box_extract%2#0
        v-store box%box_extract%2#0                                                                                       (𝕡) index#0 |
        p-load index#0                                                                                                    (𝕡) index#0 | index#0 (copy)
        int 16                                                                                                            (𝕡) index#0 | index#0 (copy),16
        *                                                                                                                 (𝕡) index#0 | aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0                                                                                (𝕡) index#0 |
        v-load box%box_extract%2#0                                                                                        (𝕡) index#0 | box%box_extract%2#0
        v-load aggregate%bytes_offset%0#0                                                                                 (𝕡) index#0 | box%box_extract%2#0,aggregate%bytes_offset%0#0
        int 16                                                                                                            (𝕡) index#0 | box%box_extract%2#0,aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                                               (𝕡) index#0 | aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0                                                                             (𝕡) index#0 |
        v-load aggregate%encoded_element%0#0                                                                              (𝕡) index#0 | aggregate%encoded_element%0#0
        retsub                                                                                                            aggregate%encoded_element%0#0


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.sum() -> uint64:
subroutine sum:
    sum_block@0:
        // mutable_native_types/case3_with_mutable_struct.py:63
        // total = UInt64()
        int 0                                                                                                             0
        v-store total#0
        // mutable_native_types/case3_with_mutable_struct.py:64
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                                    "tup_bag"
        int 0                                                                                                             "tup_bag",0
        int 8                                                                                                             "tup_bag",0,8
        box_extract                                                                                                       box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                                        box%box_extract%0#0
        btoi                                                                                                              values%0#0
        v-store values%0#0
        int 0                                                                                                             0
        v-store i#0
        b sum_for_header@1

    sum_for_header@1:
        // mutable_native_types/case3_with_mutable_struct.py:64
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        i#0
        v-load values%0#0                                                                                                 i#0,values%0#0
        <                                                                                                                 continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                                       continue_looping%0#0
        bz sum_after_for@4 ; b sum_for_body@2

    sum_for_body@2:
        // mutable_native_types/case3_with_mutable_struct.py:65
        // tup = self.tup_bag.value.items[i].copy()
        byte "tup_bag"                                                                                                    "tup_bag"
        // mutable_native_types/case3_with_mutable_struct.py:65-66
        // tup = self.tup_bag.value.items[i].copy()
        // total += tup.a
        int 8                                                                                                             "tup_bag",8
        int 128                                                                                                           "tup_bag",8,128
        box_extract                                                                                                       box%box_extract%3#0
        v-store box%box_extract%3#0
        v-load i#0                                                                                                        i#0
        int 16                                                                                                            i#0,16
        *                                                                                                                 aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load box%box_extract%3#0                                                                                        box%box_extract%3#0
        v-load aggregate%bytes_offset%0#0                                                                                 box%box_extract%3#0,aggregate%bytes_offset%0#0
        int 16                                                                                                            box%box_extract%3#0,aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                                               aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0
        // mutable_native_types/case3_with_mutable_struct.py:66
        // total += tup.a
        v-load aggregate%encoded_element%0#0                                                                              aggregate%encoded_element%0#0
        // mutable_native_types/case3_with_mutable_struct.py:65-66
        // tup = self.tup_bag.value.items[i].copy()
        // total += tup.a
        int 0                                                                                                             aggregate%encoded_element%0#0,0
        // mutable_native_types/case3_with_mutable_struct.py:66
        // total += tup.a
        extract_uint64                                                                                                    values%1#0
        v-store values%1#0
        v-load total#0                                                                                                    total#0
        v-load values%1#0                                                                                                 total#0,values%1#0
        +                                                                                                                 total#0
        v-store total#0
        // mutable_native_types/case3_with_mutable_struct.py:67
        // total += tup.b
        v-load aggregate%encoded_element%0#0                                                                              aggregate%encoded_element%0#0
        // mutable_native_types/case3_with_mutable_struct.py:65
        // tup = self.tup_bag.value.items[i].copy()
        int 8                                                                                                             aggregate%encoded_element%0#0,8
        // mutable_native_types/case3_with_mutable_struct.py:67
        // total += tup.b
        extract_uint64                                                                                                    values%2#0
        v-store values%2#0
        v-load total#0                                                                                                    total#0
        v-load values%2#0                                                                                                 total#0,values%2#0
        +                                                                                                                 total#0
        v-store total#0
        // mutable_native_types/case3_with_mutable_struct.py:64
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        i#0
        int 1                                                                                                             i#0,1
        +                                                                                                                 i#0
        v-store i#0
        b sum_for_header@1

    sum_after_for@4:
        // mutable_native_types/case3_with_mutable_struct.py:68
        // return total
        v-load total#0                                                                                                    total#0
        retsub                                                                                                            total#0


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_many_tups(tups: bytes) -> void:
subroutine add_many_tups:
    add_many_tups_block@0:                                                                                                (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:72
        // for i in urange(tups.length):
        p-load tups#0                                                                                                     (𝕡) tups#0 | tups#0 (copy)
        int 0                                                                                                             (𝕡) tups#0 | tups#0 (copy),0
        extract_uint16                                                                                                    (𝕡) tups#0 | aggregate%array_length%0#0
        v-store aggregate%array_length%0#0                                                                                (𝕡) tups#0 |
        int 0                                                                                                             (𝕡) tups#0 | 0
        v-store i#0                                                                                                       (𝕡) tups#0 |
        b add_many_tups_for_header@1                                                                                      (𝕡) tups#0 |

    add_many_tups_for_header@1:                                                                                           (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:72
        // for i in urange(tups.length):
        v-load i#0                                                                                                        (𝕡) tups#0 | i#0
        v-load aggregate%array_length%0#0                                                                                 (𝕡) tups#0 | i#0,aggregate%array_length%0#0
        <                                                                                                                 (𝕡) tups#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                                                      (𝕡) tups#0 |
        v-load continue_looping%0#0                                                                                       (𝕡) tups#0 | continue_looping%0#0
        bz add_many_tups_after_for@4 ; b add_many_tups_for_body@2                                                         (𝕡) tups#0 |

    add_many_tups_for_body@2:                                                                                             (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:73
        // self.add_tup(tups[i].copy())
        p-load tups#0                                                                                                     (𝕡) tups#0 | tups#0 (copy)
        extract 2 0                                                                                                       (𝕡) tups#0 | aggregate%array_trimmed%0#0
        v-store aggregate%array_trimmed%0#0                                                                               (𝕡) tups#0 |
        v-load i#0                                                                                                        (𝕡) tups#0 | i#0
        int 16                                                                                                            (𝕡) tups#0 | i#0,16
        *                                                                                                                 (𝕡) tups#0 | aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0                                                                                (𝕡) tups#0 |
        v-load aggregate%array_trimmed%0#0                                                                                (𝕡) tups#0 | aggregate%array_trimmed%0#0
        v-load aggregate%bytes_offset%0#0                                                                                 (𝕡) tups#0 | aggregate%array_trimmed%0#0,aggregate%bytes_offset%0#0
        int 16                                                                                                            (𝕡) tups#0 | aggregate%array_trimmed%0#0,aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                                               (𝕡) tups#0 | aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0                                                                             (𝕡) tups#0 |
        v-load aggregate%encoded_element%0#0                                                                              (𝕡) tups#0 | aggregate%encoded_element%0#0
        callsub add_tup                                                                                                   (𝕡) tups#0 | add_tup%0#0
        v-store add_tup%0#0                                                                                               (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:72
        // for i in urange(tups.length):
        v-load i#0                                                                                                        (𝕡) tups#0 | i#0
        int 1                                                                                                             (𝕡) tups#0 | i#0,1
        +                                                                                                                 (𝕡) tups#0 | i#0
        v-store i#0                                                                                                       (𝕡) tups#0 |
        b add_many_tups_for_header@1                                                                                      (𝕡) tups#0 |

    add_many_tups_after_for@4:                                                                                            (𝕡) tups#0 |
        retsub


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.add_fixed_tups(tups: bytes) -> void:
subroutine add_fixed_tups:
    add_fixed_tups_block@0:                                                                                               (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:77
        // for i in urange(tups.length):
        int 0                                                                                                             (𝕡) tups#0 | 0
        v-store i#0                                                                                                       (𝕡) tups#0 |
        b add_fixed_tups_for_header@1                                                                                     (𝕡) tups#0 |

    add_fixed_tups_for_header@1:                                                                                          (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:77
        // for i in urange(tups.length):
        v-load i#0                                                                                                        (𝕡) tups#0 | i#0
        int 3                                                                                                             (𝕡) tups#0 | i#0,3
        <                                                                                                                 (𝕡) tups#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                                                      (𝕡) tups#0 |
        v-load continue_looping%0#0                                                                                       (𝕡) tups#0 | continue_looping%0#0
        bz add_fixed_tups_after_for@4 ; b add_fixed_tups_for_body@2                                                       (𝕡) tups#0 |

    add_fixed_tups_for_body@2:                                                                                            (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:78
        // self.add_tup(tups[i].copy())
        v-load i#0                                                                                                        (𝕡) tups#0 | i#0
        int 16                                                                                                            (𝕡) tups#0 | i#0,16
        *                                                                                                                 (𝕡) tups#0 | aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0                                                                                (𝕡) tups#0 |
        p-load tups#0                                                                                                     (𝕡) tups#0 | tups#0 (copy)
        v-load aggregate%bytes_offset%0#0                                                                                 (𝕡) tups#0 | tups#0 (copy),aggregate%bytes_offset%0#0
        int 16                                                                                                            (𝕡) tups#0 | tups#0 (copy),aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                                               (𝕡) tups#0 | aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0                                                                             (𝕡) tups#0 |
        v-load aggregate%encoded_element%0#0                                                                              (𝕡) tups#0 | aggregate%encoded_element%0#0
        callsub add_tup                                                                                                   (𝕡) tups#0 | add_tup%0#0
        v-store add_tup%0#0                                                                                               (𝕡) tups#0 |
        // mutable_native_types/case3_with_mutable_struct.py:77
        // for i in urange(tups.length):
        v-load i#0                                                                                                        (𝕡) tups#0 | i#0
        int 1                                                                                                             (𝕡) tups#0 | i#0,1
        +                                                                                                                 (𝕡) tups#0 | i#0
        v-store i#0                                                                                                       (𝕡) tups#0 |
        b add_fixed_tups_for_header@1                                                                                     (𝕡) tups#0 |

    add_fixed_tups_after_for@4:                                                                                           (𝕡) tups#0 |
        retsub


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_a(a: uint64) -> void:
subroutine set_a:
    set_a_block@0:                                                                                                        (𝕡) a#0 |
        // mutable_native_types/case3_with_mutable_struct.py:82
        // self._check_owner()
        callsub _check_owner                                                                                              (𝕡) a#0 |
        // mutable_native_types/case3_with_mutable_struct.py:83
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                                    (𝕡) a#0 | "tup_bag"
        int 0                                                                                                             (𝕡) a#0 | "tup_bag",0
        int 8                                                                                                             (𝕡) a#0 | "tup_bag",0,8
        box_extract                                                                                                       (𝕡) a#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                                       (𝕡) a#0 |
        v-load box%box_extract%0#0                                                                                        (𝕡) a#0 | box%box_extract%0#0
        btoi                                                                                                              (𝕡) a#0 | values%0#0
        v-store values%0#0                                                                                                (𝕡) a#0 |
        int 0                                                                                                             (𝕡) a#0 | 0
        v-store i#0                                                                                                       (𝕡) a#0 |
        b set_a_for_header@1                                                                                              (𝕡) a#0 |

    set_a_for_header@1:                                                                                                   (𝕡) a#0 |
        // mutable_native_types/case3_with_mutable_struct.py:83
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        (𝕡) a#0 | i#0
        v-load values%0#0                                                                                                 (𝕡) a#0 | i#0,values%0#0
        <                                                                                                                 (𝕡) a#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                                                      (𝕡) a#0 |
        v-load continue_looping%0#0                                                                                       (𝕡) a#0 | continue_looping%0#0
        bz set_a_after_for@4 ; b set_a_for_body@2                                                                         (𝕡) a#0 |

    set_a_for_body@2:                                                                                                     (𝕡) a#0 |
        // mutable_native_types/case3_with_mutable_struct.py:84
        // self.tup_bag.value.items[i].a = a
        p-load a#0                                                                                                        (𝕡) a#0 | a#0 (copy)
        itob                                                                                                              (𝕡) a#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                                                (𝕡) a#0 |
        v-load i#0                                                                                                        (𝕡) a#0 | i#0
        int 8                                                                                                             (𝕡) a#0 | i#0,8
        <                                                                                                                 (𝕡) a#0 | box%index_ok%0#0
        v-store box%index_ok%0#0                                                                                          (𝕡) a#0 |
        v-load box%index_ok%0#0                                                                                           (𝕡) a#0 | box%index_ok%0#0
        assert // index out of bounds                                                                                     (𝕡) a#0 |
        v-load i#0                                                                                                        (𝕡) a#0 | i#0
        int 16                                                                                                            (𝕡) a#0 | i#0,16
        *                                                                                                                 (𝕡) a#0 | box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0                                                                                (𝕡) a#0 |
        int 8                                                                                                             (𝕡) a#0 | 8
        v-load box%index_bytes_offset%0#0                                                                                 (𝕡) a#0 | 8,box%index_bytes_offset%0#0
        +                                                                                                                 (𝕡) a#0 | box%offset%2#0
        v-store box%offset%2#0                                                                                            (𝕡) a#0 |
        byte "tup_bag"                                                                                                    (𝕡) a#0 | "tup_bag"
        v-load box%offset%2#0                                                                                             (𝕡) a#0 | "tup_bag",box%offset%2#0
        v-load aggregate%val_as_bytes%0#0                                                                                 (𝕡) a#0 | "tup_bag",box%offset%2#0,aggregate%val_as_bytes%0#0
        box_replace                                                                                                       (𝕡) a#0 |
        // mutable_native_types/case3_with_mutable_struct.py:83
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        (𝕡) a#0 | i#0
        int 1                                                                                                             (𝕡) a#0 | i#0,1
        +                                                                                                                 (𝕡) a#0 | i#0
        v-store i#0                                                                                                       (𝕡) a#0 |
        b set_a_for_header@1                                                                                              (𝕡) a#0 |

    set_a_after_for@4:                                                                                                    (𝕡) a#0 |
        retsub


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.set_b(b: uint64) -> void:
subroutine set_b:
    set_b_block@0:                                                                                                        (𝕡) b#0 |
        // mutable_native_types/case3_with_mutable_struct.py:88
        // self._check_owner()
        callsub _check_owner                                                                                              (𝕡) b#0 |
        // mutable_native_types/case3_with_mutable_struct.py:89
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                                    (𝕡) b#0 | "tup_bag"
        int 0                                                                                                             (𝕡) b#0 | "tup_bag",0
        int 8                                                                                                             (𝕡) b#0 | "tup_bag",0,8
        box_extract                                                                                                       (𝕡) b#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                                       (𝕡) b#0 |
        v-load box%box_extract%0#0                                                                                        (𝕡) b#0 | box%box_extract%0#0
        btoi                                                                                                              (𝕡) b#0 | values%0#0
        v-store values%0#0                                                                                                (𝕡) b#0 |
        int 0                                                                                                             (𝕡) b#0 | 0
        v-store i#0                                                                                                       (𝕡) b#0 |
        b set_b_for_header@1                                                                                              (𝕡) b#0 |

    set_b_for_header@1:                                                                                                   (𝕡) b#0 |
        // mutable_native_types/case3_with_mutable_struct.py:89
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        (𝕡) b#0 | i#0
        v-load values%0#0                                                                                                 (𝕡) b#0 | i#0,values%0#0
        <                                                                                                                 (𝕡) b#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                                                      (𝕡) b#0 |
        v-load continue_looping%0#0                                                                                       (𝕡) b#0 | continue_looping%0#0
        bz set_b_after_for@4 ; b set_b_for_body@2                                                                         (𝕡) b#0 |

    set_b_for_body@2:                                                                                                     (𝕡) b#0 |
        // mutable_native_types/case3_with_mutable_struct.py:90
        // self.tup_bag.value.items[i].b = b
        p-load b#0                                                                                                        (𝕡) b#0 | b#0 (copy)
        itob                                                                                                              (𝕡) b#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                                                (𝕡) b#0 |
        v-load i#0                                                                                                        (𝕡) b#0 | i#0
        int 8                                                                                                             (𝕡) b#0 | i#0,8
        <                                                                                                                 (𝕡) b#0 | box%index_ok%0#0
        v-store box%index_ok%0#0                                                                                          (𝕡) b#0 |
        v-load box%index_ok%0#0                                                                                           (𝕡) b#0 | box%index_ok%0#0
        assert // index out of bounds                                                                                     (𝕡) b#0 |
        v-load i#0                                                                                                        (𝕡) b#0 | i#0
        int 16                                                                                                            (𝕡) b#0 | i#0,16
        *                                                                                                                 (𝕡) b#0 | box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0                                                                                (𝕡) b#0 |
        v-load box%index_bytes_offset%0#0                                                                                 (𝕡) b#0 | box%index_bytes_offset%0#0
        int 16                                                                                                            (𝕡) b#0 | box%index_bytes_offset%0#0,16
        +                                                                                                                 (𝕡) b#0 | box%offset%3#0
        v-store box%offset%3#0                                                                                            (𝕡) b#0 |
        byte "tup_bag"                                                                                                    (𝕡) b#0 | "tup_bag"
        v-load box%offset%3#0                                                                                             (𝕡) b#0 | "tup_bag",box%offset%3#0
        v-load aggregate%val_as_bytes%0#0                                                                                 (𝕡) b#0 | "tup_bag",box%offset%3#0,aggregate%val_as_bytes%0#0
        box_replace                                                                                                       (𝕡) b#0 |
        // mutable_native_types/case3_with_mutable_struct.py:89
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        (𝕡) b#0 | i#0
        int 1                                                                                                             (𝕡) b#0 | i#0,1
        +                                                                                                                 (𝕡) b#0 | i#0
        v-store i#0                                                                                                       (𝕡) b#0 |
        b set_b_for_header@1                                                                                              (𝕡) b#0 |

    set_b_after_for@4:                                                                                                    (𝕡) b#0 |
        retsub


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_3_tups(start: uint64) -> bytes:
subroutine get_3_tups:
    get_3_tups_block@0:                                                                                                   (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:94
        // assert self.tup_bag.value.count >= start + 3, "not enough items"
        byte "tup_bag"                                                                                                    (𝕡) start#0 | "tup_bag"
        int 0                                                                                                             (𝕡) start#0 | "tup_bag",0
        int 8                                                                                                             (𝕡) start#0 | "tup_bag",0,8
        box_extract                                                                                                       (𝕡) start#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                                       (𝕡) start#0 |
        v-load box%box_extract%0#0                                                                                        (𝕡) start#0 | box%box_extract%0#0
        btoi                                                                                                              (𝕡) start#0 | values%0#0
        v-store values%0#0                                                                                                (𝕡) start#0 |
        p-load start#0                                                                                                    (𝕡) start#0 | start#0 (copy)
        int 3                                                                                                             (𝕡) start#0 | start#0 (copy),3
        +                                                                                                                 (𝕡) start#0 | tmp%0#0
        v-store tmp%0#0                                                                                                   (𝕡) start#0 |
        v-load values%0#0                                                                                                 (𝕡) start#0 | values%0#0
        v-load tmp%0#0                                                                                                    (𝕡) start#0 | values%0#0,tmp%0#0
        >=                                                                                                                (𝕡) start#0 | tmp%1#0
        v-store tmp%1#0                                                                                                   (𝕡) start#0 |
        v-load tmp%1#0                                                                                                    (𝕡) start#0 | tmp%1#0
        assert // not enough items                                                                                        (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:95
        // items = self.tup_bag.value.items.copy()
        byte "tup_bag"                                                                                                    (𝕡) start#0 | "tup_bag"
        int 8                                                                                                             (𝕡) start#0 | "tup_bag",8
        int 128                                                                                                           (𝕡) start#0 | "tup_bag",8,128
        box_extract                                                                                                       (𝕡) start#0 | box%box_extract%2#0
        v-store box%box_extract%2#0                                                                                       (𝕡) start#0 |
        p-load start#0                                                                                                    (𝕡) start#0 | start#0 (copy)
        int 16                                                                                                            (𝕡) start#0 | start#0 (copy),16
        *                                                                                                                 (𝕡) start#0 | aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0                                                                                (𝕡) start#0 |
        v-load box%box_extract%2#0                                                                                        (𝕡) start#0 | box%box_extract%2#0
        v-load aggregate%bytes_offset%0#0                                                                                 (𝕡) start#0 | box%box_extract%2#0,aggregate%bytes_offset%0#0
        int 16                                                                                                            (𝕡) start#0 | box%box_extract%2#0,aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                                               (𝕡) start#0 | aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0                                                                             (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:100
        // items[start + 1].copy(),
        p-load start#0                                                                                                    (𝕡) start#0 | start#0 (copy)
        int 1                                                                                                             (𝕡) start#0 | start#0 (copy),1
        +                                                                                                                 (𝕡) start#0 | tmp%2#0
        v-store tmp%2#0                                                                                                   (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:95
        // items = self.tup_bag.value.items.copy()
        v-load tmp%2#0                                                                                                    (𝕡) start#0 | tmp%2#0
        int 16                                                                                                            (𝕡) start#0 | tmp%2#0,16
        *                                                                                                                 (𝕡) start#0 | aggregate%bytes_offset%1#0
        v-store aggregate%bytes_offset%1#0                                                                                (𝕡) start#0 |
        v-load box%box_extract%2#0                                                                                        (𝕡) start#0 | box%box_extract%2#0
        v-load aggregate%bytes_offset%1#0                                                                                 (𝕡) start#0 | box%box_extract%2#0,aggregate%bytes_offset%1#0
        int 16                                                                                                            (𝕡) start#0 | box%box_extract%2#0,aggregate%bytes_offset%1#0,16
        extract3 // on error: index access is out of bounds                                                               (𝕡) start#0 | aggregate%encoded_element%1#0
        v-store aggregate%encoded_element%1#0                                                                             (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:101
        // items[start + 2].copy(),
        p-load start#0                                                                                                    (𝕡) start#0 | start#0 (copy)
        int 2                                                                                                             (𝕡) start#0 | start#0 (copy),2
        +                                                                                                                 (𝕡) start#0 | tmp%3#0
        v-store tmp%3#0                                                                                                   (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:95
        // items = self.tup_bag.value.items.copy()
        v-load tmp%3#0                                                                                                    (𝕡) start#0 | tmp%3#0
        int 16                                                                                                            (𝕡) start#0 | tmp%3#0,16
        *                                                                                                                 (𝕡) start#0 | aggregate%bytes_offset%2#0
        v-store aggregate%bytes_offset%2#0                                                                                (𝕡) start#0 |
        v-load box%box_extract%2#0                                                                                        (𝕡) start#0 | box%box_extract%2#0
        v-load aggregate%bytes_offset%2#0                                                                                 (𝕡) start#0 | box%box_extract%2#0,aggregate%bytes_offset%2#0
        int 16                                                                                                            (𝕡) start#0 | box%box_extract%2#0,aggregate%bytes_offset%2#0,16
        extract3 // on error: index access is out of bounds                                                               (𝕡) start#0 | aggregate%encoded_element%2#0
        v-store aggregate%encoded_element%2#0                                                                             (𝕡) start#0 |
        // mutable_native_types/case3_with_mutable_struct.py:97-103
        // return FixedArray[NamedTup, typing.Literal[3]](
        //     (
        //         items[start].copy(),
        //         items[start + 1].copy(),
        //         items[start + 2].copy(),
        //     )
        // )
        v-load aggregate%encoded_element%0#0                                                                              (𝕡) start#0 | aggregate%encoded_element%0#0
        v-load aggregate%encoded_element%1#0                                                                              (𝕡) start#0 | aggregate%encoded_element%0#0,aggregate%encoded_element%1#0
        concat                                                                                                            (𝕡) start#0 | aggregate%head%1#0
        v-store aggregate%head%1#0                                                                                        (𝕡) start#0 |
        v-load aggregate%head%1#0                                                                                         (𝕡) start#0 | aggregate%head%1#0
        v-load aggregate%encoded_element%2#0                                                                              (𝕡) start#0 | aggregate%head%1#0,aggregate%encoded_element%2#0
        concat                                                                                                            (𝕡) start#0 | aggregate%head%2#0
        v-store aggregate%head%2#0                                                                                        (𝕡) start#0 |
        v-load aggregate%head%2#0                                                                                         (𝕡) start#0 | aggregate%head%2#0
        retsub                                                                                                            aggregate%head%2#0


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct.get_all_tups() -> bytes:
subroutine get_all_tups:
    get_all_tups_block@0:
        // mutable_native_types/case3_with_mutable_struct.py:107
        // result = NativeArray[NamedTup]()
        byte 0x0000                                                                                                       0x0000
        v-store result#0
        // mutable_native_types/case3_with_mutable_struct.py:110
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                                    "tup_bag"
        int 0                                                                                                             "tup_bag",0
        int 8                                                                                                             "tup_bag",0,8
        box_extract                                                                                                       box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                                        box%box_extract%1#0
        btoi                                                                                                              values%0#0
        v-store values%0#0
        int 0                                                                                                             0
        v-store i#0
        b get_all_tups_for_header@1

    get_all_tups_for_header@1:
        // mutable_native_types/case3_with_mutable_struct.py:110
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        i#0
        v-load values%0#0                                                                                                 i#0,values%0#0
        <                                                                                                                 continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                                       continue_looping%0#0
        bz get_all_tups_after_for@4 ; b get_all_tups_for_body@2

    get_all_tups_for_body@2:
        // mutable_native_types/case3_with_mutable_struct.py:108
        // items = self.tup_bag.value.items.copy()
        byte "tup_bag"                                                                                                    "tup_bag"
        int 8                                                                                                             "tup_bag",8
        int 128                                                                                                           "tup_bag",8,128
        box_extract                                                                                                       box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load i#0                                                                                                        i#0
        int 16                                                                                                            i#0,16
        *                                                                                                                 aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load box%box_extract%2#0                                                                                        box%box_extract%2#0
        v-load aggregate%bytes_offset%0#0                                                                                 box%box_extract%2#0,aggregate%bytes_offset%0#0
        int 16                                                                                                            box%box_extract%2#0,aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                                               aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0
        // mutable_native_types/case3_with_mutable_struct.py:111
        // result.append(items[i].copy())
        v-load result#0                                                                                                   result#0
        v-load aggregate%encoded_element%0#0                                                                              result#0,aggregate%encoded_element%0#0
        concat // on error: max array length exceeded                                                                     concat%0#0
        v-store concat%0#0
        v-load result#0                                                                                                   result#0
        int 0                                                                                                             result#0,0
        extract_uint16                                                                                                    extract_uint16%0#0
        v-store extract_uint16%0#0
        v-load extract_uint16%0#0                                                                                         extract_uint16%0#0
        int 1                                                                                                             extract_uint16%0#0,1
        +                                                                                                                 add%0#0
        v-store add%0#0
        v-load add%0#0                                                                                                    add%0#0
        itob                                                                                                              as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                                                               as_bytes%0#0
        extract 6 2                                                                                                       as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load concat%0#0                                                                                                 concat%0#0
        v-load as_u16_bytes%0#0                                                                                           concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                                        result#0
        v-store result#0
        // mutable_native_types/case3_with_mutable_struct.py:110
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                                        i#0
        int 1                                                                                                             i#0,1
        +                                                                                                                 i#0
        v-store i#0
        b get_all_tups_for_header@1

    get_all_tups_after_for@4:
        // mutable_native_types/case3_with_mutable_struct.py:112
        // return result
        v-load result#0                                                                                                   result#0
        retsub                                                                                                            result#0


// test_cases.mutable_native_types.case3_with_mutable_struct.Case3WithStruct._check_owner() -> void:
subroutine _check_owner:
    _check_owner_block@0:
        // mutable_native_types/case3_with_mutable_struct.py:116
        // assert self.tup_bag.value.bootstrapped, "app not bootstrapped"
        byte "tup_bag"                                                                                                    "tup_bag"
        int 4272                                                                                                          "tup_bag",4272
        int 1                                                                                                             "tup_bag",4272,1
        box_extract                                                                                                       box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                                        box%box_extract%0#0
        int 0                                                                                                             box%box_extract%0#0,0
        getbit                                                                                                            aggregate%get_bit%0#0
        v-store aggregate%get_bit%0#0
        v-load aggregate%get_bit%0#0                                                                                      aggregate%get_bit%0#0
        assert // app not bootstrapped
        // mutable_native_types/case3_with_mutable_struct.py:117
        // assert self.tup_bag.value.owner == Txn.sender, "sender not authorized"
        byte "tup_bag"                                                                                                    "tup_bag"
        int 136                                                                                                           "tup_bag",136
        int 32                                                                                                            "tup_bag",136,32
        box_extract                                                                                                       box%box_extract%1#0
        v-store box%box_extract%1#0
        txn Sender                                                                                                        tmp%0#0
        v-store tmp%0#0
        v-load box%box_extract%1#0                                                                                        box%box_extract%1#0
        v-load tmp%0#0                                                                                                    box%box_extract%1#0,tmp%0#0
        ==                                                                                                                tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                                    tmp%1#0
        assert // sender not authorized
        // mutable_native_types/case3_with_mutable_struct.py:119
        // self.tup_bag.value.app == Global.current_application_id
        byte "tup_bag"                                                                                                    "tup_bag"
        int 168                                                                                                           "tup_bag",168
        int 8                                                                                                             "tup_bag",168,8
        box_extract                                                                                                       box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load box%box_extract%2#0                                                                                        box%box_extract%2#0
        btoi                                                                                                              values%2#0
        v-store values%2#0
        global CurrentApplicationID                                                                                       tmp%2#0
        v-store tmp%2#0
        v-load values%2#0                                                                                                 values%2#0
        v-load tmp%2#0                                                                                                    values%2#0,tmp%2#0
        ==                                                                                                                tmp%3#0
        v-store tmp%3#0
        // mutable_native_types/case3_with_mutable_struct.py:118-120
        // assert (
        //     self.tup_bag.value.app == Global.current_application_id
        // ), "this error should be impossible"
        v-load tmp%3#0                                                                                                    tmp%3#0
        assert // this error should be impossible
        retsub


