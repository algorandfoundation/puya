// Op                                                                                                         Stack (out)
// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txn NumAppArgs                                                                                        tmp%0#2
        bz main_bare_routing@16 ; b main_abi_routing@4

    main_abi_routing@4:
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                tmp%2#0
        method create_box()void                                                                               tmp%2#0,Method(create_box()void)
        method num_tups()uint64                                                                               tmp%2#0,Method(create_box()void),Method(num_tups()uint64)
        method add_tup((uint64,uint64))void                                                                   tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void)
        method get_tup(uint64)(uint64,uint64)                                                                 tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64))
        method sum()uint64                                                                                    tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64)
        method add_many_tups((uint64,uint64)[])void                                                           tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void)
        method add_fixed_tups((uint64,uint64)[3])void                                                         tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void)
        method set_a(uint64)void                                                                              tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void)
        method set_b(uint64)void                                                                              tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void)
        method get_3_tups(uint64)(uint64,uint64)[3]                                                           tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void),Method(get_3_tups(uint64)(uint64,uint64)[3])
        method get_all_tups()(uint64,uint64)[]                                                                tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void),Method(get_3_tups(uint64)(uint64,uint64)[3]),Method(get_all_tups()(uint64,uint64)[])
        l-load tmp%2#0 11                                                                                     Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),Method(sum()uint64),Method(add_many_tups((uint64,uint64)[])void),Method(add_fixed_tups((uint64,uint64)[3])void),Method(set_a(uint64)void),Method(set_b(uint64)void),Method(get_3_tups(uint64)(uint64,uint64)[3]),Method(get_all_tups()(uint64,uint64)[]),tmp%2#0
        match main_create_box_route@5 main_num_tups_route@6 main_add_tup_route@7 main_get_tup_route@8 main_sum_route@9 main_add_many_tups_route@10 main_add_fixed_tups_route@11 main_set_a_route@12 main_set_b_route@13 main_get_3_tups_route@14 main_get_all_tups_route@15 ; b main_after_if_else@18 

    main_create_box_route@5:
        // mutable_native_types/case1_with_tups.py:45
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%3#0
        !                                                                                                     tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%5#0
        assert // can only call when not creating
        callsub create_box
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_num_tups_route@6:
        // mutable_native_types/case1_with_tups.py:52
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%7#0
        !                                                                                                     tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%9#0
        assert // can only call when not creating
        callsub num_tups                                                                                      tmp%11#0
        itob                                                                                                  aggregate%val_as_bytes%0#1
        byte 0x151f7c75                                                                                       aggregate%val_as_bytes%0#1,0x151f7c75
        l-load aggregate%val_as_bytes%0#1 1                                                                   0x151f7c75,aggregate%val_as_bytes%0#1
        concat                                                                                                tmp%13#0
        log
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_add_tup_route@7:
        // mutable_native_types/case1_with_tups.py:56
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%14#0
        !                                                                                                     tmp%15#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%16#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded(uint64,uint64)%0#0
        l-load-copy reinterpret_Encoded(uint64,uint64)%0#0 0                                                  reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy)
        int 0                                                                                                 reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy),0
        extract_uint64                                                                                        reinterpret_Encoded(uint64,uint64)%0#0,aggregate%item0%0#1
        l-load reinterpret_Encoded(uint64,uint64)%0#0 1                                                       aggregate%item0%0#1,reinterpret_Encoded(uint64,uint64)%0#0
        int 8                                                                                                 aggregate%item0%0#1,reinterpret_Encoded(uint64,uint64)%0#0,8
        extract_uint64                                                                                        aggregate%item0%0#1,aggregate%item1%0#1
        // mutable_native_types/case1_with_tups.py:56
        // @arc4.abimethod()
        l-load aggregate%item0%0#1 1                                                                          aggregate%item1%0#1,aggregate%item0%0#1
        l-load aggregate%item1%0#1 1                                                                          aggregate%item0%0#1,aggregate%item1%0#1
        callsub add_tup
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_get_tup_route@8:
        // mutable_native_types/case1_with_tups.py:63
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%20#0
        !                                                                                                     tmp%21#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%22#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded(uint64)%0#0
        btoi                                                                                                  tmp%24#0
        // mutable_native_types/case1_with_tups.py:63
        // @arc4.abimethod()
        callsub get_tup                                                                                       tmp%25#0,tmp%26#0
        l-load tmp%25#0 1                                                                                     tmp%26#0,tmp%25#0
        itob                                                                                                  tmp%26#0,aggregate%val_as_bytes%1#1
        l-load tmp%26#0 1                                                                                     aggregate%val_as_bytes%1#1,tmp%26#0
        itob                                                                                                  aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%2#1
        l-load aggregate%val_as_bytes%1#1 1                                                                   aggregate%val_as_bytes%2#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%2#1 1                                                                   aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%2#1
        concat                                                                                                aggregate%encoded%1#1
        byte 0x151f7c75                                                                                       aggregate%encoded%1#1,0x151f7c75
        l-load aggregate%encoded%1#1 1                                                                        0x151f7c75,aggregate%encoded%1#1
        concat                                                                                                tmp%28#0
        log
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_sum_route@9:
        // mutable_native_types/case1_with_tups.py:68
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%29#0
        !                                                                                                     tmp%30#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%31#0
        assert // can only call when not creating
        callsub sum                                                                                           tmp%33#0
        itob                                                                                                  aggregate%val_as_bytes%3#1
        byte 0x151f7c75                                                                                       aggregate%val_as_bytes%3#1,0x151f7c75
        l-load aggregate%val_as_bytes%3#1 1                                                                   0x151f7c75,aggregate%val_as_bytes%3#1
        concat                                                                                                tmp%35#0
        log
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_add_many_tups_route@10:
        // mutable_native_types/case1_with_tups.py:77
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%36#0
        !                                                                                                     tmp%37#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%38#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded(len+(uint64,uint64)[])%0#0
        // mutable_native_types/case1_with_tups.py:77
        // @arc4.abimethod()
        callsub add_many_tups
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_add_fixed_tups_route@11:
        // mutable_native_types/case1_with_tups.py:82
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%40#0
        !                                                                                                     tmp%41#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%42#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded((uint64,uint64)[3])%0#0
        // mutable_native_types/case1_with_tups.py:82
        // @arc4.abimethod()
        callsub add_fixed_tups
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_set_a_route@12:
        // mutable_native_types/case1_with_tups.py:87
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%44#0
        !                                                                                                     tmp%45#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%46#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded(uint64)%1#0
        btoi                                                                                                  tmp%48#0
        // mutable_native_types/case1_with_tups.py:87
        // @arc4.abimethod()
        callsub set_a
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_set_b_route@13:
        // mutable_native_types/case1_with_tups.py:94
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%49#0
        !                                                                                                     tmp%50#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%51#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded(uint64)%2#0
        btoi                                                                                                  tmp%53#0
        // mutable_native_types/case1_with_tups.py:94
        // @arc4.abimethod()
        callsub set_b
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_get_3_tups_route@14:
        // mutable_native_types/case1_with_tups.py:101
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%54#0
        !                                                                                                     tmp%55#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%56#0
        assert // can only call when not creating
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                reinterpret_Encoded(uint64)%3#0
        btoi                                                                                                  tmp%58#0
        // mutable_native_types/case1_with_tups.py:101
        // @arc4.abimethod()
        callsub get_3_tups                                                                                    tmp%59#0
        byte 0x151f7c75                                                                                       tmp%59#0,0x151f7c75
        l-load tmp%59#0 1                                                                                     0x151f7c75,tmp%59#0
        concat                                                                                                tmp%60#0
        log
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_get_all_tups_route@15:
        // mutable_native_types/case1_with_tups.py:114
        // @arc4.abimethod()
        txn OnCompletion                                                                                      tmp%61#0
        !                                                                                                     tmp%62#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                     tmp%63#0
        assert // can only call when not creating
        callsub get_all_tups                                                                                  tmp%65#0
        byte 0x151f7c75                                                                                       tmp%65#0,0x151f7c75
        l-load tmp%65#0 1                                                                                     0x151f7c75,tmp%65#0
        concat                                                                                                tmp%66#0
        log
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_bare_routing@16:
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        txn OnCompletion                                                                                      tmp%67#0
        bz main___algopy_default_create@17 ; b main_after_if_else@18

    main___algopy_default_create@17:
        txn ApplicationID                                                                                     tmp%68#0
        !                                                                                                     tmp%69#0
        assert // can only call when creating
        int 1                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_after_if_else@18:
        // mutable_native_types/case1_with_tups.py:41
        // class Case1WithTups(arc4.ARC4Contract):
        int 0                                                                                                 tmp%0#1
        x-store tmp%0#1                                                                                       (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19 (ùïè) tmp%0#1 | 

    main_after_inlined_test_cases.mutable_native_types.case1_with_tups.Case1WithTups.__puya_arc4_router__@19: (ùïè) tmp%0#1 |
        x-load tmp%0#1                                                                                        tmp%0#1
        return


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.create_box() -> void:
subroutine create_box:
    create_box_block@0:
        // mutable_native_types/case1_with_tups.py:47
        // assert self.tup_bag.create(), "box already exists"
        byte "tup_bag"                                                                                        "tup_bag"
        int 4273                                                                                              "tup_bag",4273
        box_create                                                                                            tmp%0#0
        assert // box already exists
        // mutable_native_types/case1_with_tups.py:48
        // self.tup_bag.value.owner = Txn.sender
        txn Sender                                                                                            tmp%1#0
        byte "tup_bag"                                                                                        tmp%1#0,"tup_bag"
        int 136                                                                                               tmp%1#0,"tup_bag",136
        l-load tmp%1#0 2                                                                                      "tup_bag",136,tmp%1#0
        box_replace
        // mutable_native_types/case1_with_tups.py:49
        // self.tup_bag.value.app = Global.current_application_id
        global CurrentApplicationID                                                                           tmp%2#0
        itob                                                                                                  aggregate%val_as_bytes%0#1
        byte "tup_bag"                                                                                        aggregate%val_as_bytes%0#1,"tup_bag"
        int 168                                                                                               aggregate%val_as_bytes%0#1,"tup_bag",168
        l-load aggregate%val_as_bytes%0#1 2                                                                   "tup_bag",168,aggregate%val_as_bytes%0#1
        box_replace
        // mutable_native_types/case1_with_tups.py:50
        // self.tup_bag.value.bootstrapped = True
        byte "tup_bag"                                                                                        "tup_bag"
        int 4272                                                                                              "tup_bag",4272
        int 1                                                                                                 "tup_bag",4272,1
        box_extract                                                                                           box%box_extract%0#1
        int 0                                                                                                 box%box_extract%0#1,0
        int 1                                                                                                 box%box_extract%0#1,0,1
        setbit                                                                                                aggregate%updated_target%0#1
        byte "tup_bag"                                                                                        aggregate%updated_target%0#1,"tup_bag"
        int 4272                                                                                              aggregate%updated_target%0#1,"tup_bag",4272
        l-load aggregate%updated_target%0#1 2                                                                 "tup_bag",4272,aggregate%updated_target%0#1
        box_replace
        retsub


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.num_tups() -> uint64:
subroutine num_tups:
    num_tups_block@0:
        // mutable_native_types/case1_with_tups.py:54
        // return self.tup_bag.value.count
        byte "tup_bag"                                                                                        "tup_bag"
        int 0                                                                                                 "tup_bag",0
        int 8                                                                                                 "tup_bag",0,8
        box_extract                                                                                           box%box_extract%0#1
        btoi                                                                                                  values%0#0
        retsub                                                                                                values%0#0


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.add_tup(tup.a: uint64, tup.b: uint64) -> void:
subroutine add_tup:
    add_tup_block@0:                                                                                          (ùï°) tup.a#0,tup.b#0 |
        // mutable_native_types/case1_with_tups.py:58
        // self._check_owner()
        callsub _check_owner                                                                                  (ùï°) tup.a#0,tup.b#0 |
        // mutable_native_types/case1_with_tups.py:59
        // assert self.tup_bag.value.count < self.tup_bag.value.items.length, "too many tups"
        byte "tup_bag"                                                                                        (ùï°) tup.a#0,tup.b#0 | "tup_bag"
        int 0                                                                                                 (ùï°) tup.a#0,tup.b#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) tup.a#0,tup.b#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) tup.a#0,tup.b#0 | box%box_extract%0#1
        btoi                                                                                                  (ùï°) tup.a#0,tup.b#0 | values%0#0
        int 8                                                                                                 (ùï°) tup.a#0,tup.b#0 | values%0#0,8
        <                                                                                                     (ùï°) tup.a#0,tup.b#0 | tmp%0#0
        assert // too many tups                                                                               (ùï°) tup.a#0,tup.b#0 |
        // mutable_native_types/case1_with_tups.py:60
        // self.tup_bag.value.items[self.tup_bag.value.count] = tup
        byte "tup_bag"                                                                                        (ùï°) tup.a#0,tup.b#0 | "tup_bag"
        int 0                                                                                                 (ùï°) tup.a#0,tup.b#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) tup.a#0,tup.b#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) tup.a#0,tup.b#0 | box%box_extract%1#1
        btoi                                                                                                  (ùï°) tup.a#0,tup.b#0 | values%1#0
        p-load tup.a#0                                                                                        (ùï°) tup.a#0,tup.b#0 | values%1#0,tup.a#0 (copy)
        itob                                                                                                  (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%val_as_bytes%0#1
        p-load tup.b#0                                                                                        (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%val_as_bytes%0#1,tup.b#0 (copy)
        itob                                                                                                  (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%0#1 1                                                                   (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%0#1
        l-load aggregate%val_as_bytes%1#1 1                                                                   (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        concat                                                                                                (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%encoded%1#1
        l-load-copy values%1#0 1                                                                              (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%encoded%1#1,values%1#0 (copy)
        int 8                                                                                                 (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%encoded%1#1,values%1#0 (copy),8
        <                                                                                                     (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%encoded%1#1,box%index_ok%0#1
        assert // index out of bounds                                                                         (ùï°) tup.a#0,tup.b#0 | values%1#0,aggregate%encoded%1#1
        l-load values%1#0 1                                                                                   (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,values%1#0
        int 16                                                                                                (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,values%1#0,16
        *                                                                                                     (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,box%element_offset%0#1
        int 8                                                                                                 (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,box%element_offset%0#1,8
        l-load box%element_offset%0#1 1                                                                       (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,8,box%element_offset%0#1
        +                                                                                                     (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,box%offset%3#1
        byte "tup_bag"                                                                                        (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,box%offset%3#1,"tup_bag"
        l-load box%offset%3#1 1                                                                               (ùï°) tup.a#0,tup.b#0 | aggregate%encoded%1#1,"tup_bag",box%offset%3#1
        l-load aggregate%encoded%1#1 2                                                                        (ùï°) tup.a#0,tup.b#0 | "tup_bag",box%offset%3#1,aggregate%encoded%1#1
        box_replace                                                                                           (ùï°) tup.a#0,tup.b#0 |
        // mutable_native_types/case1_with_tups.py:61
        // self.tup_bag.value.count += 1
        byte "tup_bag"                                                                                        (ùï°) tup.a#0,tup.b#0 | "tup_bag"
        int 0                                                                                                 (ùï°) tup.a#0,tup.b#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) tup.a#0,tup.b#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) tup.a#0,tup.b#0 | box%box_extract%2#1
        btoi                                                                                                  (ùï°) tup.a#0,tup.b#0 | values%2#0
        int 1                                                                                                 (ùï°) tup.a#0,tup.b#0 | values%2#0,1
        +                                                                                                     (ùï°) tup.a#0,tup.b#0 | tmp%1#0
        itob                                                                                                  (ùï°) tup.a#0,tup.b#0 | aggregate%val_as_bytes%2#1
        byte "tup_bag"                                                                                        (ùï°) tup.a#0,tup.b#0 | aggregate%val_as_bytes%2#1,"tup_bag"
        int 0                                                                                                 (ùï°) tup.a#0,tup.b#0 | aggregate%val_as_bytes%2#1,"tup_bag",0
        l-load aggregate%val_as_bytes%2#1 2                                                                   (ùï°) tup.a#0,tup.b#0 | "tup_bag",0,aggregate%val_as_bytes%2#1
        box_replace                                                                                           (ùï°) tup.a#0,tup.b#0 |
        retsub


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.get_tup(index: uint64) -> uint64, uint64:
subroutine get_tup:
    get_tup_block@0:                                                                                          (ùï°) index#0 |
        // mutable_native_types/case1_with_tups.py:65
        // assert index < self.tup_bag.value.count, "index out of bounds"
        byte "tup_bag"                                                                                        (ùï°) index#0 | "tup_bag"
        int 0                                                                                                 (ùï°) index#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) index#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) index#0 | box%box_extract%0#1
        btoi                                                                                                  (ùï°) index#0 | values%0#0
        p-load index#0                                                                                        (ùï°) index#0 | values%0#0,index#0 (copy)
        l-load values%0#0 1                                                                                   (ùï°) index#0 | index#0 (copy),values%0#0
        <                                                                                                     (ùï°) index#0 | tmp%0#0
        assert // index out of bounds                                                                         (ùï°) index#0 |
        // mutable_native_types/case1_with_tups.py:66
        // return self.tup_bag.value.items[index]
        byte "tup_bag"                                                                                        (ùï°) index#0 | "tup_bag"
        int 8                                                                                                 (ùï°) index#0 | "tup_bag",8
        int 128                                                                                               (ùï°) index#0 | "tup_bag",8,128
        box_extract                                                                                           (ùï°) index#0 | box%box_extract%2#1
        p-load index#0                                                                                        (ùï°) index#0 | box%box_extract%2#1,index#0 (copy)
        int 16                                                                                                (ùï°) index#0 | box%box_extract%2#1,index#0 (copy),16
        *                                                                                                     (ùï°) index#0 | box%box_extract%2#1,aggregate%bytes_offset%0#1
        l-load box%box_extract%2#1 1                                                                          (ùï°) index#0 | aggregate%bytes_offset%0#1,box%box_extract%2#1
        l-load aggregate%bytes_offset%0#1 1                                                                   (ùï°) index#0 | box%box_extract%2#1,aggregate%bytes_offset%0#1
        int 16                                                                                                (ùï°) index#0 | box%box_extract%2#1,aggregate%bytes_offset%0#1,16
        extract3 // on error: index access is out of bounds                                                   (ùï°) index#0 | aggregate%encoded_element%0#1
        l-load-copy aggregate%encoded_element%0#1 0                                                           (ùï°) index#0 | aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy)
        int 0                                                                                                 (ùï°) index#0 | aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy),0
        extract_uint64                                                                                        (ùï°) index#0 | aggregate%encoded_element%0#1,aggregate%item0%0#1
        l-load aggregate%encoded_element%0#1 1                                                                (ùï°) index#0 | aggregate%item0%0#1,aggregate%encoded_element%0#1
        int 8                                                                                                 (ùï°) index#0 | aggregate%item0%0#1,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        (ùï°) index#0 | aggregate%item0%0#1,aggregate%item1%0#1
        l-load aggregate%item0%0#1 1                                                                          (ùï°) index#0 | aggregate%item1%0#1,aggregate%item0%0#1
        l-load aggregate%item1%0#1 1                                                                          (ùï°) index#0 | aggregate%item0%0#1,aggregate%item1%0#1
        retsub                                                                                                aggregate%item0%0#1,aggregate%item1%0#1


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.sum() -> uint64:
subroutine sum:
    sum_block@0:
        // mutable_native_types/case1_with_tups.py:70
        // total = UInt64()
        int 0                                                                                                 0
        v-store total#0
        // mutable_native_types/case1_with_tups.py:71
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                        "tup_bag"
        int 0                                                                                                 "tup_bag",0
        int 8                                                                                                 "tup_bag",0,8
        box_extract                                                                                           box%box_extract%0#1
        btoi                                                                                                  values%0#0
        v-store values%0#0
        int 0                                                                                                 0
        v-store i#0
        b sum_for_header@1

    sum_for_header@1:
        // mutable_native_types/case1_with_tups.py:71
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                            i#0
        v-load values%0#0                                                                                     i#0,values%0#0
        <                                                                                                     continue_looping%0#0
        bz sum_after_for@4 ; b sum_for_body@2

    sum_for_body@2:
        // mutable_native_types/case1_with_tups.py:72
        // tup = self.tup_bag.value.items[i]
        byte "tup_bag"                                                                                        "tup_bag"
        int 8                                                                                                 "tup_bag",8
        int 128                                                                                               "tup_bag",8,128
        box_extract                                                                                           box%box_extract%2#1
        v-load i#0                                                                                            box%box_extract%2#1,i#0
        l-store-copy i#0 1                                                                                    i#0,box%box_extract%2#1,i#0 (copy)
        int 16                                                                                                i#0,box%box_extract%2#1,i#0 (copy),16
        *                                                                                                     i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1
        l-load box%box_extract%2#1 1                                                                          i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1
        l-load aggregate%bytes_offset%0#1 1                                                                   i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1
        int 16                                                                                                i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1,16
        extract3 // on error: index access is out of bounds                                                   i#0,aggregate%encoded_element%0#1
        l-load-copy aggregate%encoded_element%0#1 0                                                           i#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy)
        int 0                                                                                                 i#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy),0
        extract_uint64                                                                                        i#0,aggregate%encoded_element%0#1,tup.a#0
        l-load aggregate%encoded_element%0#1 1                                                                i#0,tup.a#0,aggregate%encoded_element%0#1
        int 8                                                                                                 i#0,tup.a#0,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        i#0,tup.a#0,tup.b#0
        // mutable_native_types/case1_with_tups.py:73
        // total += tup.a
        v-load total#0                                                                                        i#0,tup.a#0,tup.b#0,total#0
        l-load tup.a#0 2                                                                                      i#0,tup.b#0,total#0,tup.a#0
        +                                                                                                     i#0,tup.b#0,total#0
        // mutable_native_types/case1_with_tups.py:74
        // total += tup.b
        l-load tup.b#0 1                                                                                      i#0,total#0,tup.b#0
        +                                                                                                     i#0,total#0
        v-store total#0                                                                                       i#0
        // mutable_native_types/case1_with_tups.py:71
        // for i in urange(self.tup_bag.value.count):
        l-load i#0 0                                                                                          i#0
        int 1                                                                                                 i#0,1
        +                                                                                                     i#0
        v-store i#0
        b sum_for_header@1

    sum_after_for@4:
        // mutable_native_types/case1_with_tups.py:75
        // return total
        v-load total#0                                                                                        total#0
        retsub                                                                                                total#0


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.add_many_tups(tups: bytes) -> void:
subroutine add_many_tups:
    add_many_tups_block@0:                                                                                    (ùï°) tups#0 |
        // mutable_native_types/case1_with_tups.py:79
        // for tup in tups:
        p-load tups#0                                                                                         (ùï°) tups#0 | tups#0 (copy)
        int 0                                                                                                 (ùï°) tups#0 | tups#0 (copy),0
        extract_uint16                                                                                        (ùï°) tups#0 | array_length%0#0
        v-store array_length%0#0                                                                              (ùï°) tups#0 |
        int 0                                                                                                 (ùï°) tups#0 | 0
        v-store item_index_internal%0#0                                                                       (ùï°) tups#0 |
        b add_many_tups_for_header@1                                                                          (ùï°) tups#0 |

    add_many_tups_for_header@1:                                                                               (ùï°) tups#0 |
        // mutable_native_types/case1_with_tups.py:79
        // for tup in tups:
        v-load item_index_internal%0#0                                                                        (ùï°) tups#0 | item_index_internal%0#0
        v-load array_length%0#0                                                                               (ùï°) tups#0 | item_index_internal%0#0,array_length%0#0
        <                                                                                                     (ùï°) tups#0 | continue_looping%0#0
        bz add_many_tups_after_for@4 ; b add_many_tups_for_body@2                                             (ùï°) tups#0 |

    add_many_tups_for_body@2:                                                                                 (ùï°) tups#0 |
        // mutable_native_types/case1_with_tups.py:79
        // for tup in tups:
        p-load tups#0                                                                                         (ùï°) tups#0 | tups#0 (copy)
        extract 2 0                                                                                           (ùï°) tups#0 | aggregate%array_trimmed%0#1
        v-load item_index_internal%0#0                                                                        (ùï°) tups#0 | aggregate%array_trimmed%0#1,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                                                (ùï°) tups#0 | item_index_internal%0#0,aggregate%array_trimmed%0#1,item_index_internal%0#0 (copy)
        int 16                                                                                                (ùï°) tups#0 | item_index_internal%0#0,aggregate%array_trimmed%0#1,item_index_internal%0#0 (copy),16
        *                                                                                                     (ùï°) tups#0 | item_index_internal%0#0,aggregate%array_trimmed%0#1,aggregate%bytes_offset%0#1
        l-load aggregate%array_trimmed%0#1 1                                                                  (ùï°) tups#0 | item_index_internal%0#0,aggregate%bytes_offset%0#1,aggregate%array_trimmed%0#1
        l-load aggregate%bytes_offset%0#1 1                                                                   (ùï°) tups#0 | item_index_internal%0#0,aggregate%array_trimmed%0#1,aggregate%bytes_offset%0#1
        int 16                                                                                                (ùï°) tups#0 | item_index_internal%0#0,aggregate%array_trimmed%0#1,aggregate%bytes_offset%0#1,16
        extract3 // on error: index access is out of bounds                                                   (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1
        l-load-copy aggregate%encoded_element%0#1 0                                                           (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy)
        int 0                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy),0
        extract_uint64                                                                                        (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1,tup.a#0
        l-load aggregate%encoded_element%0#1 1                                                                (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,aggregate%encoded_element%0#1
        int 8                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,tup.b#0
        // mutable_native_types/case1_with_tups.py:80
        // self.add_tup(tup)
        l-load tup.a#0 1                                                                                      (ùï°) tups#0 | item_index_internal%0#0,tup.b#0,tup.a#0
        l-load tup.b#0 1                                                                                      (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,tup.b#0
        callsub add_tup                                                                                       (ùï°) tups#0 | item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                                      (ùï°) tups#0 | item_index_internal%0#0
        int 1                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,1
        +                                                                                                     (ùï°) tups#0 | item_index_internal%0#0
        v-store item_index_internal%0#0                                                                       (ùï°) tups#0 |
        b add_many_tups_for_header@1                                                                          (ùï°) tups#0 |

    add_many_tups_after_for@4:                                                                                (ùï°) tups#0 |
        retsub


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.add_fixed_tups(tups: bytes) -> void:
subroutine add_fixed_tups:
    add_fixed_tups_block@0:                                                                                   (ùï°) tups#0 |
        int 0                                                                                                 (ùï°) tups#0 | 0
        v-store item_index_internal%0#0                                                                       (ùï°) tups#0 |
        b add_fixed_tups_for_header@1                                                                         (ùï°) tups#0 |

    add_fixed_tups_for_header@1:                                                                              (ùï°) tups#0 |
        // mutable_native_types/case1_with_tups.py:84
        // for tup in tups:
        v-load item_index_internal%0#0                                                                        (ùï°) tups#0 | item_index_internal%0#0
        int 3                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,3
        <                                                                                                     (ùï°) tups#0 | continue_looping%0#0
        bz add_fixed_tups_after_for@4 ; b add_fixed_tups_for_body@2                                           (ùï°) tups#0 |

    add_fixed_tups_for_body@2:                                                                                (ùï°) tups#0 |
        // mutable_native_types/case1_with_tups.py:84
        // for tup in tups:
        v-load item_index_internal%0#0                                                                        (ùï°) tups#0 | item_index_internal%0#0
        l-store-copy item_index_internal%0#0 0                                                                (ùï°) tups#0 | item_index_internal%0#0,item_index_internal%0#0 (copy)
        int 16                                                                                                (ùï°) tups#0 | item_index_internal%0#0,item_index_internal%0#0 (copy),16
        *                                                                                                     (ùï°) tups#0 | item_index_internal%0#0,aggregate%bytes_offset%0#1
        p-load tups#0                                                                                         (ùï°) tups#0 | item_index_internal%0#0,aggregate%bytes_offset%0#1,tups#0 (copy)
        l-load aggregate%bytes_offset%0#1 1                                                                   (ùï°) tups#0 | item_index_internal%0#0,tups#0 (copy),aggregate%bytes_offset%0#1
        int 16                                                                                                (ùï°) tups#0 | item_index_internal%0#0,tups#0 (copy),aggregate%bytes_offset%0#1,16
        extract3 // on error: index access is out of bounds                                                   (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1
        l-load-copy aggregate%encoded_element%0#1 0                                                           (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy)
        int 0                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy),0
        extract_uint64                                                                                        (ùï°) tups#0 | item_index_internal%0#0,aggregate%encoded_element%0#1,tup.a#0
        l-load aggregate%encoded_element%0#1 1                                                                (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,aggregate%encoded_element%0#1
        int 8                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,tup.b#0
        // mutable_native_types/case1_with_tups.py:85
        // self.add_tup(tup)
        l-load tup.a#0 1                                                                                      (ùï°) tups#0 | item_index_internal%0#0,tup.b#0,tup.a#0
        l-load tup.b#0 1                                                                                      (ùï°) tups#0 | item_index_internal%0#0,tup.a#0,tup.b#0
        callsub add_tup                                                                                       (ùï°) tups#0 | item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                                      (ùï°) tups#0 | item_index_internal%0#0
        int 1                                                                                                 (ùï°) tups#0 | item_index_internal%0#0,1
        +                                                                                                     (ùï°) tups#0 | item_index_internal%0#0
        v-store item_index_internal%0#0                                                                       (ùï°) tups#0 |
        b add_fixed_tups_for_header@1                                                                         (ùï°) tups#0 |

    add_fixed_tups_after_for@4:                                                                               (ùï°) tups#0 |
        retsub


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.set_a(a: uint64) -> void:
subroutine set_a:
    set_a_block@0:                                                                                            (ùï°) a#0 |
        // mutable_native_types/case1_with_tups.py:89
        // self._check_owner()
        callsub _check_owner                                                                                  (ùï°) a#0 |
        // mutable_native_types/case1_with_tups.py:90
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                        (ùï°) a#0 | "tup_bag"
        int 0                                                                                                 (ùï°) a#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) a#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) a#0 | box%box_extract%0#1
        btoi                                                                                                  (ùï°) a#0 | values%0#0
        v-store values%0#0                                                                                    (ùï°) a#0 |
        int 0                                                                                                 (ùï°) a#0 | 0
        v-store i#0                                                                                           (ùï°) a#0 |
        b set_a_for_header@1                                                                                  (ùï°) a#0 |

    set_a_for_header@1:                                                                                       (ùï°) a#0 |
        // mutable_native_types/case1_with_tups.py:90
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                            (ùï°) a#0 | i#0
        v-load values%0#0                                                                                     (ùï°) a#0 | i#0,values%0#0
        <                                                                                                     (ùï°) a#0 | continue_looping%0#0
        bz set_a_after_for@4 ; b set_a_for_body@2                                                             (ùï°) a#0 |

    set_a_for_body@2:                                                                                         (ùï°) a#0 |
        // mutable_native_types/case1_with_tups.py:91
        // tup = self.tup_bag.value.items[i]
        byte "tup_bag"                                                                                        (ùï°) a#0 | "tup_bag"
        int 8                                                                                                 (ùï°) a#0 | "tup_bag",8
        int 128                                                                                               (ùï°) a#0 | "tup_bag",8,128
        box_extract                                                                                           (ùï°) a#0 | box%box_extract%2#1
        v-load i#0                                                                                            (ùï°) a#0 | box%box_extract%2#1,i#0
        l-store-copy i#0 1                                                                                    (ùï°) a#0 | i#0,box%box_extract%2#1,i#0 (copy)
        int 16                                                                                                (ùï°) a#0 | i#0,box%box_extract%2#1,i#0 (copy),16
        *                                                                                                     (ùï°) a#0 | i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1
        l-load box%box_extract%2#1 1                                                                          (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1
        l-load-copy aggregate%bytes_offset%0#1 1                                                              (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1,aggregate%bytes_offset%0#1 (copy)
        int 16                                                                                                (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1,aggregate%bytes_offset%0#1 (copy),16
        extract3 // on error: index access is out of bounds                                                   (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded_element%0#1
        int 8                                                                                                 (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,tup.b#0
        // mutable_native_types/case1_with_tups.py:92
        // self.tup_bag.value.items[i] = tup._replace(a=a)
        p-load a#0                                                                                            (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,tup.b#0,a#0 (copy)
        itob                                                                                                  (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,tup.b#0,aggregate%val_as_bytes%0#1
        l-load tup.b#0 1                                                                                      (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1,tup.b#0
        itob                                                                                                  (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%0#1 1                                                                   (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%0#1
        l-load aggregate%val_as_bytes%1#1 1                                                                   (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        concat                                                                                                (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1
        l-load-copy i#0 2                                                                                     (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,i#0 (copy)
        int 8                                                                                                 (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,i#0 (copy),8
        <                                                                                                     (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,box%index_ok%0#1
        assert // index out of bounds                                                                         (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1
        int 8                                                                                                 (ùï°) a#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,8
        l-load aggregate%bytes_offset%0#1 2                                                                   (ùï°) a#0 | i#0,aggregate%encoded%1#1,8,aggregate%bytes_offset%0#1
        +                                                                                                     (ùï°) a#0 | i#0,aggregate%encoded%1#1,box%offset%4#1
        byte "tup_bag"                                                                                        (ùï°) a#0 | i#0,aggregate%encoded%1#1,box%offset%4#1,"tup_bag"
        l-load box%offset%4#1 1                                                                               (ùï°) a#0 | i#0,aggregate%encoded%1#1,"tup_bag",box%offset%4#1
        l-load aggregate%encoded%1#1 2                                                                        (ùï°) a#0 | i#0,"tup_bag",box%offset%4#1,aggregate%encoded%1#1
        box_replace                                                                                           (ùï°) a#0 | i#0
        // mutable_native_types/case1_with_tups.py:90
        // for i in urange(self.tup_bag.value.count):
        l-load i#0 0                                                                                          (ùï°) a#0 | i#0
        int 1                                                                                                 (ùï°) a#0 | i#0,1
        +                                                                                                     (ùï°) a#0 | i#0
        v-store i#0                                                                                           (ùï°) a#0 |
        b set_a_for_header@1                                                                                  (ùï°) a#0 |

    set_a_after_for@4:                                                                                        (ùï°) a#0 |
        retsub


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.set_b(b: uint64) -> void:
subroutine set_b:
    set_b_block@0:                                                                                            (ùï°) b#0 |
        // mutable_native_types/case1_with_tups.py:96
        // self._check_owner()
        callsub _check_owner                                                                                  (ùï°) b#0 |
        // mutable_native_types/case1_with_tups.py:97
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                        (ùï°) b#0 | "tup_bag"
        int 0                                                                                                 (ùï°) b#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) b#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) b#0 | box%box_extract%0#1
        btoi                                                                                                  (ùï°) b#0 | values%0#0
        v-store values%0#0                                                                                    (ùï°) b#0 |
        int 0                                                                                                 (ùï°) b#0 | 0
        v-store i#0                                                                                           (ùï°) b#0 |
        b set_b_for_header@1                                                                                  (ùï°) b#0 |

    set_b_for_header@1:                                                                                       (ùï°) b#0 |
        // mutable_native_types/case1_with_tups.py:97
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                            (ùï°) b#0 | i#0
        v-load values%0#0                                                                                     (ùï°) b#0 | i#0,values%0#0
        <                                                                                                     (ùï°) b#0 | continue_looping%0#0
        bz set_b_after_for@4 ; b set_b_for_body@2                                                             (ùï°) b#0 |

    set_b_for_body@2:                                                                                         (ùï°) b#0 |
        // mutable_native_types/case1_with_tups.py:98
        // tup = self.tup_bag.value.items[i]
        byte "tup_bag"                                                                                        (ùï°) b#0 | "tup_bag"
        int 8                                                                                                 (ùï°) b#0 | "tup_bag",8
        int 128                                                                                               (ùï°) b#0 | "tup_bag",8,128
        box_extract                                                                                           (ùï°) b#0 | box%box_extract%2#1
        v-load i#0                                                                                            (ùï°) b#0 | box%box_extract%2#1,i#0
        l-store-copy i#0 1                                                                                    (ùï°) b#0 | i#0,box%box_extract%2#1,i#0 (copy)
        int 16                                                                                                (ùï°) b#0 | i#0,box%box_extract%2#1,i#0 (copy),16
        *                                                                                                     (ùï°) b#0 | i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1
        l-load box%box_extract%2#1 1                                                                          (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1
        l-load-copy aggregate%bytes_offset%0#1 1                                                              (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1,aggregate%bytes_offset%0#1 (copy)
        int 16                                                                                                (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1,aggregate%bytes_offset%0#1 (copy),16
        extract3 // on error: index access is out of bounds                                                   (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded_element%0#1
        int 0                                                                                                 (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded_element%0#1,0
        extract_uint64                                                                                        (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,tup.a#0
        // mutable_native_types/case1_with_tups.py:99
        // self.tup_bag.value.items[i] = tup._replace(b=b)
        itob                                                                                                  (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1
        p-load b#0                                                                                            (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1,b#0 (copy)
        itob                                                                                                  (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%0#1 1                                                                   (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%0#1
        l-load aggregate%val_as_bytes%1#1 1                                                                   (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        concat                                                                                                (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1
        l-load-copy i#0 2                                                                                     (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,i#0 (copy)
        int 8                                                                                                 (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,i#0 (copy),8
        <                                                                                                     (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,box%index_ok%0#1
        assert // index out of bounds                                                                         (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1
        int 8                                                                                                 (ùï°) b#0 | i#0,aggregate%bytes_offset%0#1,aggregate%encoded%1#1,8
        l-load aggregate%bytes_offset%0#1 2                                                                   (ùï°) b#0 | i#0,aggregate%encoded%1#1,8,aggregate%bytes_offset%0#1
        +                                                                                                     (ùï°) b#0 | i#0,aggregate%encoded%1#1,box%offset%4#1
        byte "tup_bag"                                                                                        (ùï°) b#0 | i#0,aggregate%encoded%1#1,box%offset%4#1,"tup_bag"
        l-load box%offset%4#1 1                                                                               (ùï°) b#0 | i#0,aggregate%encoded%1#1,"tup_bag",box%offset%4#1
        l-load aggregate%encoded%1#1 2                                                                        (ùï°) b#0 | i#0,"tup_bag",box%offset%4#1,aggregate%encoded%1#1
        box_replace                                                                                           (ùï°) b#0 | i#0
        // mutable_native_types/case1_with_tups.py:97
        // for i in urange(self.tup_bag.value.count):
        l-load i#0 0                                                                                          (ùï°) b#0 | i#0
        int 1                                                                                                 (ùï°) b#0 | i#0,1
        +                                                                                                     (ùï°) b#0 | i#0
        v-store i#0                                                                                           (ùï°) b#0 |
        b set_b_for_header@1                                                                                  (ùï°) b#0 |

    set_b_after_for@4:                                                                                        (ùï°) b#0 |
        retsub


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.get_3_tups(start: uint64) -> bytes:
subroutine get_3_tups:
    get_3_tups_block@0:                                                                                       (ùï°) start#0 |
        // mutable_native_types/case1_with_tups.py:103
        // assert self.tup_bag.value.count >= start + 3, "not enough items"
        byte "tup_bag"                                                                                        (ùï°) start#0 | "tup_bag"
        int 0                                                                                                 (ùï°) start#0 | "tup_bag",0
        int 8                                                                                                 (ùï°) start#0 | "tup_bag",0,8
        box_extract                                                                                           (ùï°) start#0 | box%box_extract%0#1
        btoi                                                                                                  (ùï°) start#0 | values%0#0
        p-load start#0                                                                                        (ùï°) start#0 | values%0#0,start#0 (copy)
        int 3                                                                                                 (ùï°) start#0 | values%0#0,start#0 (copy),3
        +                                                                                                     (ùï°) start#0 | values%0#0,tmp%0#0
        l-load values%0#0 1                                                                                   (ùï°) start#0 | tmp%0#0,values%0#0
        l-load tmp%0#0 1                                                                                      (ùï°) start#0 | values%0#0,tmp%0#0
        >=                                                                                                    (ùï°) start#0 | tmp%1#0
        assert // not enough items                                                                            (ùï°) start#0 |
        // mutable_native_types/case1_with_tups.py:104
        // items = self.tup_bag.value.items.copy()
        byte "tup_bag"                                                                                        (ùï°) start#0 | "tup_bag"
        int 8                                                                                                 (ùï°) start#0 | "tup_bag",8
        int 128                                                                                               (ùï°) start#0 | "tup_bag",8,128
        box_extract                                                                                           (ùï°) start#0 | box%box_extract%2#1
        p-load start#0                                                                                        (ùï°) start#0 | box%box_extract%2#1,start#0 (copy)
        int 16                                                                                                (ùï°) start#0 | box%box_extract%2#1,start#0 (copy),16
        *                                                                                                     (ùï°) start#0 | box%box_extract%2#1,aggregate%bytes_offset%0#1
        l-load box%box_extract%2#1 1                                                                          (ùï°) start#0 | aggregate%bytes_offset%0#1,box%box_extract%2#1
        l-load aggregate%bytes_offset%0#1 1                                                                   (ùï°) start#0 | box%box_extract%2#1,aggregate%bytes_offset%0#1
        int 16                                                                                                (ùï°) start#0 | box%box_extract%2#1,aggregate%bytes_offset%0#1,16
        extract3 // on error: index access is out of bounds                                                   (ùï°) start#0 | aggregate%encoded_element%0#1
        // mutable_native_types/case1_with_tups.py:108
        // items[start],
        l-load-copy aggregate%encoded_element%0#1 0                                                           (ùï°) start#0 | aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy)
        int 0                                                                                                 (ùï°) start#0 | aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy),0
        extract_uint64                                                                                        (ùï°) start#0 | aggregate%encoded_element%0#1,aggregate%item0%0#1
        l-load aggregate%encoded_element%0#1 1                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%encoded_element%0#1
        int 8                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1
        // mutable_native_types/case1_with_tups.py:109
        // items[start + 1],
        p-load start#0                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,start#0 (copy)
        int 1                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,start#0 (copy),1
        +                                                                                                     (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,tmp%2#0
        // mutable_native_types/case1_with_tups.py:104
        // items = self.tup_bag.value.items.copy()
        byte "tup_bag"                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,tmp%2#0,"tup_bag"
        int 8                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,tmp%2#0,"tup_bag",8
        int 128                                                                                               (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,tmp%2#0,"tup_bag",8,128
        box_extract                                                                                           (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,tmp%2#0,box%box_extract%3#1
        l-load tmp%2#0 1                                                                                      (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,box%box_extract%3#1,tmp%2#0
        int 16                                                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,box%box_extract%3#1,tmp%2#0,16
        *                                                                                                     (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,box%box_extract%3#1,aggregate%bytes_offset%1#1
        l-load box%box_extract%3#1 1                                                                          (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%bytes_offset%1#1,box%box_extract%3#1
        l-load aggregate%bytes_offset%1#1 1                                                                   (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,box%box_extract%3#1,aggregate%bytes_offset%1#1
        int 16                                                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,box%box_extract%3#1,aggregate%bytes_offset%1#1,16
        extract3 // on error: index access is out of bounds                                                   (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%encoded_element%1#1
        // mutable_native_types/case1_with_tups.py:109
        // items[start + 1],
        l-load-copy aggregate%encoded_element%1#1 0                                                           (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%encoded_element%1#1,aggregate%encoded_element%1#1 (copy)
        int 0                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%encoded_element%1#1,aggregate%encoded_element%1#1 (copy),0
        extract_uint64                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%encoded_element%1#1,aggregate%item0%1#1
        l-load aggregate%encoded_element%1#1 1                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%encoded_element%1#1
        int 8                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%encoded_element%1#1,8
        extract_uint64                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1
        // mutable_native_types/case1_with_tups.py:110
        // items[start + 2],
        p-load start#0                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,start#0 (copy)
        int 2                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,start#0 (copy),2
        +                                                                                                     (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,tmp%3#0
        // mutable_native_types/case1_with_tups.py:104
        // items = self.tup_bag.value.items.copy()
        byte "tup_bag"                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,tmp%3#0,"tup_bag"
        int 8                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,tmp%3#0,"tup_bag",8
        int 128                                                                                               (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,tmp%3#0,"tup_bag",8,128
        box_extract                                                                                           (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,tmp%3#0,box%box_extract%4#1
        l-load tmp%3#0 1                                                                                      (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,box%box_extract%4#1,tmp%3#0
        int 16                                                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,box%box_extract%4#1,tmp%3#0,16
        *                                                                                                     (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,box%box_extract%4#1,aggregate%bytes_offset%2#1
        l-load box%box_extract%4#1 1                                                                          (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%bytes_offset%2#1,box%box_extract%4#1
        l-load aggregate%bytes_offset%2#1 1                                                                   (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,box%box_extract%4#1,aggregate%bytes_offset%2#1
        int 16                                                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,box%box_extract%4#1,aggregate%bytes_offset%2#1,16
        extract3 // on error: index access is out of bounds                                                   (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%encoded_element%2#1
        // mutable_native_types/case1_with_tups.py:110
        // items[start + 2],
        l-load-copy aggregate%encoded_element%2#1 0                                                           (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%encoded_element%2#1,aggregate%encoded_element%2#1 (copy)
        int 0                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%encoded_element%2#1,aggregate%encoded_element%2#1 (copy),0
        extract_uint64                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%encoded_element%2#1,aggregate%item0%2#1
        l-load aggregate%encoded_element%2#1 1                                                                (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%encoded_element%2#1
        int 8                                                                                                 (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%encoded_element%2#1,8
        extract_uint64                                                                                        (ùï°) start#0 | aggregate%item0%0#1,aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1
        // mutable_native_types/case1_with_tups.py:106-112
        // return FixedArray[NamedTup, typing.Literal[3]](
        //     (
        //         items[start],
        //         items[start + 1],
        //         items[start + 2],
        //     )
        // )
        l-load aggregate%item0%0#1 5                                                                          (ùï°) start#0 | aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%item0%0#1
        itob                                                                                                  (ùï°) start#0 | aggregate%item1%0#1,aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%val_as_bytes%0#1
        l-load aggregate%item1%0#1 5                                                                          (ùï°) start#0 | aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%val_as_bytes%0#1,aggregate%item1%0#1
        itob                                                                                                  (ùï°) start#0 | aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%0#1 1                                                                   (ùï°) start#0 | aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%0#1
        l-load aggregate%val_as_bytes%1#1 1                                                                   (ùï°) start#0 | aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        concat                                                                                                (ùï°) start#0 | aggregate%item0%1#1,aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1
        l-load aggregate%item0%1#1 4                                                                          (ùï°) start#0 | aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%item0%1#1
        itob                                                                                                  (ùï°) start#0 | aggregate%item1%1#1,aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%val_as_bytes%2#1
        l-load aggregate%item1%1#1 4                                                                          (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%val_as_bytes%2#1,aggregate%item1%1#1
        itob                                                                                                  (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%val_as_bytes%2#1,aggregate%val_as_bytes%3#1
        l-load aggregate%val_as_bytes%2#1 1                                                                   (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%val_as_bytes%3#1,aggregate%val_as_bytes%2#1
        l-load aggregate%val_as_bytes%3#1 1                                                                   (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%val_as_bytes%2#1,aggregate%val_as_bytes%3#1
        concat                                                                                                (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%encoded%5#1
        l-load aggregate%encoded%1#1 1                                                                        (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%5#1,aggregate%encoded%1#1
        l-load aggregate%encoded%5#1 1                                                                        (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%1#1,aggregate%encoded%5#1
        concat                                                                                                (ùï°) start#0 | aggregate%item0%2#1,aggregate%item1%2#1,aggregate%encoded%7#1
        l-load aggregate%item0%2#1 2                                                                          (ùï°) start#0 | aggregate%item1%2#1,aggregate%encoded%7#1,aggregate%item0%2#1
        itob                                                                                                  (ùï°) start#0 | aggregate%item1%2#1,aggregate%encoded%7#1,aggregate%val_as_bytes%4#1
        l-load aggregate%item1%2#1 2                                                                          (ùï°) start#0 | aggregate%encoded%7#1,aggregate%val_as_bytes%4#1,aggregate%item1%2#1
        itob                                                                                                  (ùï°) start#0 | aggregate%encoded%7#1,aggregate%val_as_bytes%4#1,aggregate%val_as_bytes%5#1
        l-load aggregate%val_as_bytes%4#1 1                                                                   (ùï°) start#0 | aggregate%encoded%7#1,aggregate%val_as_bytes%5#1,aggregate%val_as_bytes%4#1
        l-load aggregate%val_as_bytes%5#1 1                                                                   (ùï°) start#0 | aggregate%encoded%7#1,aggregate%val_as_bytes%4#1,aggregate%val_as_bytes%5#1
        concat                                                                                                (ùï°) start#0 | aggregate%encoded%7#1,aggregate%encoded%9#1
        l-load aggregate%encoded%7#1 1                                                                        (ùï°) start#0 | aggregate%encoded%9#1,aggregate%encoded%7#1
        l-load aggregate%encoded%9#1 1                                                                        (ùï°) start#0 | aggregate%encoded%7#1,aggregate%encoded%9#1
        concat                                                                                                (ùï°) start#0 | aggregate%encoded%11#1
        retsub                                                                                                aggregate%encoded%11#1


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups.get_all_tups() -> bytes:
subroutine get_all_tups:
    get_all_tups_block@0:
        // mutable_native_types/case1_with_tups.py:116
        // result = NativeArray[NamedTup]()
        byte 0x0000                                                                                           0x0000
        v-store result#0
        // mutable_native_types/case1_with_tups.py:119
        // for i in urange(self.tup_bag.value.count):
        byte "tup_bag"                                                                                        "tup_bag"
        int 0                                                                                                 "tup_bag",0
        int 8                                                                                                 "tup_bag",0,8
        box_extract                                                                                           box%box_extract%1#1
        btoi                                                                                                  values%0#0
        v-store values%0#0
        int 0                                                                                                 0
        v-store i#0
        b get_all_tups_for_header@1

    get_all_tups_for_header@1:
        // mutable_native_types/case1_with_tups.py:119
        // for i in urange(self.tup_bag.value.count):
        v-load i#0                                                                                            i#0
        v-load values%0#0                                                                                     i#0,values%0#0
        <                                                                                                     continue_looping%0#0
        bz get_all_tups_after_for@4 ; b get_all_tups_for_body@2

    get_all_tups_for_body@2:
        // mutable_native_types/case1_with_tups.py:117
        // items = self.tup_bag.value.items.copy()
        byte "tup_bag"                                                                                        "tup_bag"
        int 8                                                                                                 "tup_bag",8
        int 128                                                                                               "tup_bag",8,128
        box_extract                                                                                           box%box_extract%2#1
        v-load i#0                                                                                            box%box_extract%2#1,i#0
        l-store-copy i#0 1                                                                                    i#0,box%box_extract%2#1,i#0 (copy)
        int 16                                                                                                i#0,box%box_extract%2#1,i#0 (copy),16
        *                                                                                                     i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1
        l-load box%box_extract%2#1 1                                                                          i#0,aggregate%bytes_offset%0#1,box%box_extract%2#1
        l-load aggregate%bytes_offset%0#1 1                                                                   i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1
        int 16                                                                                                i#0,box%box_extract%2#1,aggregate%bytes_offset%0#1,16
        extract3 // on error: index access is out of bounds                                                   i#0,aggregate%encoded_element%0#1
        // mutable_native_types/case1_with_tups.py:120
        // result.append(items[i])
        l-load-copy aggregate%encoded_element%0#1 0                                                           i#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy)
        int 0                                                                                                 i#0,aggregate%encoded_element%0#1,aggregate%encoded_element%0#1 (copy),0
        extract_uint64                                                                                        i#0,aggregate%encoded_element%0#1,aggregate%item0%0#1
        l-load aggregate%encoded_element%0#1 1                                                                i#0,aggregate%item0%0#1,aggregate%encoded_element%0#1
        int 8                                                                                                 i#0,aggregate%item0%0#1,aggregate%encoded_element%0#1,8
        extract_uint64                                                                                        i#0,aggregate%item0%0#1,aggregate%item1%0#1
        l-load aggregate%item0%0#1 1                                                                          i#0,aggregate%item1%0#1,aggregate%item0%0#1
        itob                                                                                                  i#0,aggregate%item1%0#1,aggregate%val_as_bytes%0#1
        l-load aggregate%item1%0#1 1                                                                          i#0,aggregate%val_as_bytes%0#1,aggregate%item1%0#1
        itob                                                                                                  i#0,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        l-load aggregate%val_as_bytes%0#1 1                                                                   i#0,aggregate%val_as_bytes%1#1,aggregate%val_as_bytes%0#1
        l-load aggregate%val_as_bytes%1#1 1                                                                   i#0,aggregate%val_as_bytes%0#1,aggregate%val_as_bytes%1#1
        concat                                                                                                i#0,aggregate%encoded%2#1
        v-load result#0                                                                                       i#0,aggregate%encoded%2#1,result#0
        l-store-copy result#0 1                                                                               i#0,result#0,aggregate%encoded%2#1,result#0 (copy)
        l-load aggregate%encoded%2#1 1                                                                        i#0,result#0,result#0 (copy),aggregate%encoded%2#1
        concat // on error: max array length exceeded                                                         i#0,result#0,concat%0#0
        l-load result#0 1                                                                                     i#0,concat%0#0,result#0
        int 0                                                                                                 i#0,concat%0#0,result#0,0
        extract_uint16                                                                                        i#0,concat%0#0,extract_uint16%0#0
        int 1                                                                                                 i#0,concat%0#0,extract_uint16%0#0,1
        +                                                                                                     i#0,concat%0#0,add%0#0
        itob                                                                                                  i#0,concat%0#0,as_bytes%0#0
        extract 6 2                                                                                           i#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                                   i#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                             i#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                            i#0,result#0
        v-store result#0                                                                                      i#0
        // mutable_native_types/case1_with_tups.py:119
        // for i in urange(self.tup_bag.value.count):
        l-load i#0 0                                                                                          i#0
        int 1                                                                                                 i#0,1
        +                                                                                                     i#0
        v-store i#0
        b get_all_tups_for_header@1

    get_all_tups_after_for@4:
        // mutable_native_types/case1_with_tups.py:121
        // return result
        v-load result#0                                                                                       result#0
        retsub                                                                                                result#0


// test_cases.mutable_native_types.case1_with_tups.Case1WithTups._check_owner() -> void:
subroutine _check_owner:
    _check_owner_block@0:
        // mutable_native_types/case1_with_tups.py:125
        // assert self.tup_bag.value.bootstrapped, "app not bootstrapped"
        byte "tup_bag"                                                                                        "tup_bag"
        int 4272                                                                                              "tup_bag",4272
        int 1                                                                                                 "tup_bag",4272,1
        box_extract                                                                                           box%box_extract%0#1
        int 0                                                                                                 box%box_extract%0#1,0
        getbit                                                                                                aggregate%get_bit%0#1
        assert // app not bootstrapped
        // mutable_native_types/case1_with_tups.py:126
        // assert self.tup_bag.value.owner == Txn.sender, "sender not authorized"
        byte "tup_bag"                                                                                        "tup_bag"
        int 136                                                                                               "tup_bag",136
        int 32                                                                                                "tup_bag",136,32
        box_extract                                                                                           box%box_extract%1#1
        txn Sender                                                                                            box%box_extract%1#1,tmp%0#0
        l-load box%box_extract%1#1 1                                                                          tmp%0#0,box%box_extract%1#1
        l-load tmp%0#0 1                                                                                      box%box_extract%1#1,tmp%0#0
        ==                                                                                                    tmp%1#0
        assert // sender not authorized
        // mutable_native_types/case1_with_tups.py:128
        // self.tup_bag.value.app == Global.current_application_id
        byte "tup_bag"                                                                                        "tup_bag"
        int 168                                                                                               "tup_bag",168
        int 8                                                                                                 "tup_bag",168,8
        box_extract                                                                                           box%box_extract%2#1
        btoi                                                                                                  values%1#0
        global CurrentApplicationID                                                                           values%1#0,tmp%2#0
        l-load values%1#0 1                                                                                   tmp%2#0,values%1#0
        l-load tmp%2#0 1                                                                                      values%1#0,tmp%2#0
        ==                                                                                                    tmp%3#0
        // mutable_native_types/case1_with_tups.py:127-129
        // assert (
        //     self.tup_bag.value.app == Global.current_application_id
        // ), "this error should be impossible"
        assert // this error should be impossible
        retsub


