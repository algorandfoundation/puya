// Op                                                                                                                          Stack (out)
// test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // mutable_native_types/fixed_with_immutable_struct.py:22
        // class FixedWithImmStruct(arc4.ARC4Contract):
        txn NumAppArgs                                                                                                         tmp%0#2
        bz main_bare_routing@9 ; b main_abi_routing@4

    main_abi_routing@4:
        // mutable_native_types/fixed_with_immutable_struct.py:22
        // class FixedWithImmStruct(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                                 tmp%2#0
        method create_box()void                                                                                                tmp%2#0,Method(create_box()void)
        method num_tups()uint64                                                                                                tmp%2#0,Method(create_box()void),Method(num_tups()uint64)
        method add_tup((uint64,uint64))void                                                                                    tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void)
        method get_tup(uint64)(uint64,uint64)                                                                                  tmp%2#0,Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64))
        l-load tmp%2#0 4                                                                                                       Method(create_box()void),Method(num_tups()uint64),Method(add_tup((uint64,uint64))void),Method(get_tup(uint64)(uint64,uint64)),tmp%2#0
        match main_create_box_route@5 main_num_tups_route@6 main_add_tup_route@7 main_get_tup_route@8 ; b main_after_if_else@11 

    main_create_box_route@5:
        // mutable_native_types/fixed_with_immutable_struct.py:26
        // @arc4.abimethod()
        txn OnCompletion                                                                                                       tmp%3#0
        !                                                                                                                      tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                      tmp%5#0
        assert // can only call when not creating
        callsub create_box
        int 1                                                                                                                  tmp%0#1
        x-store tmp%0#1                                                                                                        (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12 (ùïè) tmp%0#1 | 

    main_num_tups_route@6:
        // mutable_native_types/fixed_with_immutable_struct.py:30
        // @arc4.abimethod()
        txn OnCompletion                                                                                                       tmp%7#0
        !                                                                                                                      tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                      tmp%9#0
        assert // can only call when not creating
        callsub num_tups                                                                                                       to_encode%0#0
        itob                                                                                                                   val_as_bytes%0#0
        byte 0x151f7c75                                                                                                        val_as_bytes%0#0,0x151f7c75
        l-load val_as_bytes%0#0 1                                                                                              0x151f7c75,val_as_bytes%0#0
        concat                                                                                                                 tmp%11#0
        log
        int 1                                                                                                                  tmp%0#1
        x-store tmp%0#1                                                                                                        (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12 (ùïè) tmp%0#1 | 

    main_add_tup_route@7:
        // mutable_native_types/fixed_with_immutable_struct.py:34
        // @arc4.abimethod()
        txn OnCompletion                                                                                                       tmp%12#0
        !                                                                                                                      tmp%13#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                      tmp%14#0
        assert // can only call when not creating
        // mutable_native_types/fixed_with_immutable_struct.py:22
        // class FixedWithImmStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                                 reinterpret_bytes[16]%0#0
        // mutable_native_types/fixed_with_immutable_struct.py:34
        // @arc4.abimethod()
        callsub add_tup
        int 1                                                                                                                  tmp%0#1
        x-store tmp%0#1                                                                                                        (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12 (ùïè) tmp%0#1 | 

    main_get_tup_route@8:
        // mutable_native_types/fixed_with_immutable_struct.py:40
        // @arc4.abimethod()
        txn OnCompletion                                                                                                       tmp%16#0
        !                                                                                                                      tmp%17#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                      tmp%18#0
        assert // can only call when not creating
        // mutable_native_types/fixed_with_immutable_struct.py:22
        // class FixedWithImmStruct(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                                 reinterpret_bytes[8]%0#0
        btoi                                                                                                                   tmp%20#0
        // mutable_native_types/fixed_with_immutable_struct.py:40
        // @arc4.abimethod()
        callsub get_tup                                                                                                        tmp%21#0
        byte 0x151f7c75                                                                                                        tmp%21#0,0x151f7c75
        l-load tmp%21#0 1                                                                                                      0x151f7c75,tmp%21#0
        concat                                                                                                                 tmp%22#0
        log
        int 1                                                                                                                  tmp%0#1
        x-store tmp%0#1                                                                                                        (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12 (ùïè) tmp%0#1 | 

    main_bare_routing@9:
        // mutable_native_types/fixed_with_immutable_struct.py:22
        // class FixedWithImmStruct(arc4.ARC4Contract):
        txn OnCompletion                                                                                                       tmp%23#0
        bz main___algopy_default_create@10 ; b main_after_if_else@11

    main___algopy_default_create@10:
        txn ApplicationID                                                                                                      tmp%24#0
        !                                                                                                                      tmp%25#0
        assert // can only call when creating
        int 1                                                                                                                  tmp%0#1
        x-store tmp%0#1                                                                                                        (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12 (ùïè) tmp%0#1 | 

    main_after_if_else@11:
        // mutable_native_types/fixed_with_immutable_struct.py:22
        // class FixedWithImmStruct(arc4.ARC4Contract):
        int 0                                                                                                                  tmp%0#1
        x-store tmp%0#1                                                                                                        (ùïè) tmp%0#1 |
        b main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12 (ùïè) tmp%0#1 | 

    main_after_inlined_test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.__puya_arc4_router__@12: (ùïè) tmp%0#1 |
        x-load tmp%0#1                                                                                                         tmp%0#1
        return


// test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.create_box() -> void:
subroutine create_box:
    create_box_block@0:
        // mutable_native_types/fixed_with_immutable_struct.py:28
        // self.tup_bag.create()
        byte "tup_bag"                                                                                                         "tup_bag"
        int 136                                                                                                                "tup_bag",136
        box_create                                                                                                             {box_create}
        pop 1
        retsub


// test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.num_tups() -> uint64:
subroutine num_tups:
    num_tups_block@0:
        // mutable_native_types/fixed_with_immutable_struct.py:32
        // return self.tup_bag.value.count
        byte "tup_bag"                                                                                                         "tup_bag"
        box_get                                                                                                                maybe_value%0#0,maybe_exists%0#0
        assert // check self.tup_bag exists                                                                                    maybe_value%0#0
        l-load maybe_value%0#0 0                                                                                               maybe_value%0#0
        int 0                                                                                                                  maybe_value%0#0,0
        extract_uint64                                                                                                         tmp%0#0
        retsub                                                                                                                 tmp%0#0


// test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.add_tup(tup: bytes) -> void:
subroutine add_tup:
    add_tup_block@0:                                                                                                           (ùï°) tup#0 |
        // mutable_native_types/fixed_with_immutable_struct.py:36
        // assert self.tup_bag.value.count < self.tup_bag.value.items.length, "too many tups"
        byte "tup_bag"                                                                                                         (ùï°) tup#0 | "tup_bag"
        box_get                                                                                                                (ùï°) tup#0 | maybe_value%0#0,maybe_exists%0#0
        assert // check self.tup_bag exists                                                                                    (ùï°) tup#0 | maybe_value%0#0
        l-load maybe_value%0#0 0                                                                                               (ùï°) tup#0 | maybe_value%0#0
        int 0                                                                                                                  (ùï°) tup#0 | maybe_value%0#0,0
        extract_uint64                                                                                                         (ùï°) tup#0 | tmp%0#0
        int 8                                                                                                                  (ùï°) tup#0 | tmp%0#0,8
        <                                                                                                                      (ùï°) tup#0 | tmp%1#0
        assert // too many tups                                                                                                (ùï°) tup#0 |
        // mutable_native_types/fixed_with_immutable_struct.py:37
        // self.tup_bag.value.items[self.tup_bag.value.count] = tup
        byte "tup_bag"                                                                                                         (ùï°) tup#0 | "tup_bag"
        box_get                                                                                                                (ùï°) tup#0 | maybe_value%1#0,maybe_exists%1#0
        assert // check self.tup_bag exists                                                                                    (ùï°) tup#0 | maybe_value%1#0
        l-load-copy maybe_value%1#0 0                                                                                          (ùï°) tup#0 | maybe_value%1#0,maybe_value%1#0 (copy)
        extract 8 128 // on error: Index access is out of bounds                                                               (ùï°) tup#0 | maybe_value%1#0,tmp%2#0
        byte "tup_bag"                                                                                                         (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,"tup_bag"
        box_get                                                                                                                (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,maybe_value%2#0,maybe_exists%2#0
        assert // check self.tup_bag exists                                                                                    (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,maybe_value%2#0
        l-load maybe_value%2#0 0                                                                                               (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,maybe_value%2#0
        int 0                                                                                                                  (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,maybe_value%2#0,0
        extract_uint64                                                                                                         (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0
        l-load-copy tmp%3#0 0                                                                                                  (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0,tmp%3#0 (copy)
        int 8                                                                                                                  (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0,tmp%3#0 (copy),8
        <                                                                                                                      (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0,index_is_in_bounds%0#0
        assert // Index access is out of bounds                                                                                (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0
        l-load tmp%3#0 0                                                                                                       (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0
        int 16                                                                                                                 (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,tmp%3#0,16
        *                                                                                                                      (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,write_offset%0#0
        l-load tmp%2#0 1                                                                                                       (ùï°) tup#0 | maybe_value%1#0,write_offset%0#0,tmp%2#0
        l-load write_offset%0#0 1                                                                                              (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,write_offset%0#0
        p-load tup#0                                                                                                           (ùï°) tup#0 | maybe_value%1#0,tmp%2#0,write_offset%0#0,tup#0 (copy)
        replace3                                                                                                               (ùï°) tup#0 | maybe_value%1#0,updated_target%0#0
        l-load maybe_value%1#0 1                                                                                               (ùï°) tup#0 | updated_target%0#0,maybe_value%1#0
        l-load updated_target%0#0 1                                                                                            (ùï°) tup#0 | maybe_value%1#0,updated_target%0#0
        replace2 8                                                                                                             (ùï°) tup#0 | updated_data%0#0
        byte "tup_bag"                                                                                                         (ùï°) tup#0 | updated_data%0#0,"tup_bag"
        l-load updated_data%0#0 1                                                                                              (ùï°) tup#0 | "tup_bag",updated_data%0#0
        box_put                                                                                                                (ùï°) tup#0 |
        // mutable_native_types/fixed_with_immutable_struct.py:38
        // self.tup_bag.value.count += 1
        byte "tup_bag"                                                                                                         (ùï°) tup#0 | "tup_bag"
        box_get                                                                                                                (ùï°) tup#0 | maybe_value%3#0,maybe_exists%3#0
        assert // check self.tup_bag exists                                                                                    (ùï°) tup#0 | maybe_value%3#0
        l-load-copy maybe_value%3#0 0                                                                                          (ùï°) tup#0 | maybe_value%3#0,maybe_value%3#0 (copy)
        int 0                                                                                                                  (ùï°) tup#0 | maybe_value%3#0,maybe_value%3#0 (copy),0
        extract_uint64                                                                                                         (ùï°) tup#0 | maybe_value%3#0,tmp%4#0
        int 1                                                                                                                  (ùï°) tup#0 | maybe_value%3#0,tmp%4#0,1
        +                                                                                                                      (ùï°) tup#0 | maybe_value%3#0,assigned_value%1#0
        itob                                                                                                                   (ùï°) tup#0 | maybe_value%3#0,val_as_bytes%0#0
        l-load maybe_value%3#0 1                                                                                               (ùï°) tup#0 | val_as_bytes%0#0,maybe_value%3#0
        l-load val_as_bytes%0#0 1                                                                                              (ùï°) tup#0 | maybe_value%3#0,val_as_bytes%0#0
        replace2 0                                                                                                             (ùï°) tup#0 | updated_data%1#0
        byte "tup_bag"                                                                                                         (ùï°) tup#0 | updated_data%1#0,"tup_bag"
        l-load updated_data%1#0 1                                                                                              (ùï°) tup#0 | "tup_bag",updated_data%1#0
        box_put                                                                                                                (ùï°) tup#0 |
        retsub


// test_cases.mutable_native_types.fixed_with_immutable_struct.FixedWithImmStruct.get_tup(index: uint64) -> bytes:
subroutine get_tup:
    get_tup_block@0:                                                                                                           (ùï°) index#0 |
        // mutable_native_types/fixed_with_immutable_struct.py:42
        // assert index < self.tup_bag.value.count, "index out of bounds"
        byte "tup_bag"                                                                                                         (ùï°) index#0 | "tup_bag"
        box_get                                                                                                                (ùï°) index#0 | maybe_value%0#0,maybe_exists%0#0
        assert // check self.tup_bag exists                                                                                    (ùï°) index#0 | maybe_value%0#0
        l-load maybe_value%0#0 0                                                                                               (ùï°) index#0 | maybe_value%0#0
        int 0                                                                                                                  (ùï°) index#0 | maybe_value%0#0,0
        extract_uint64                                                                                                         (ùï°) index#0 | tmp%0#0
        p-load index#0                                                                                                         (ùï°) index#0 | tmp%0#0,index#0 (copy)
        l-load tmp%0#0 1                                                                                                       (ùï°) index#0 | index#0 (copy),tmp%0#0
        <                                                                                                                      (ùï°) index#0 | tmp%1#0
        assert // index out of bounds                                                                                          (ùï°) index#0 |
        // mutable_native_types/fixed_with_immutable_struct.py:43
        // return self.tup_bag.value.items[index]
        byte "tup_bag"                                                                                                         (ùï°) index#0 | "tup_bag"
        box_get                                                                                                                (ùï°) index#0 | maybe_value%1#0,maybe_exists%1#0
        assert // check self.tup_bag exists                                                                                    (ùï°) index#0 | maybe_value%1#0
        l-load maybe_value%1#0 0                                                                                               (ùï°) index#0 | maybe_value%1#0
        extract 8 128 // on error: Index access is out of bounds                                                               (ùï°) index#0 | tmp%2#0
        p-load index#0                                                                                                         (ùï°) index#0 | tmp%2#0,index#0 (copy)
        int 16                                                                                                                 (ùï°) index#0 | tmp%2#0,index#0 (copy),16
        *                                                                                                                      (ùï°) index#0 | tmp%2#0,item_offset%0#0
        l-load tmp%2#0 1                                                                                                       (ùï°) index#0 | item_offset%0#0,tmp%2#0
        l-load item_offset%0#0 1                                                                                               (ùï°) index#0 | tmp%2#0,item_offset%0#0
        int 16                                                                                                                 (ùï°) index#0 | tmp%2#0,item_offset%0#0,16
        extract3 // on error: Index access is out of bounds                                                                    (ùï°) index#0 | tmp%3#0
        retsub                                                                                                                 tmp%3#0


