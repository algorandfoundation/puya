// Op                                                                                                  Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // mutable_native_types/abi_call.py:102
        // class TestAbiCall(arc4.ARC4Contract):
        txn NumAppArgs                                                                                 tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                                 tmp%0#1
        bz main___algopy_default_create@13 ; b main_abi_routing@2

    main_abi_routing@2:
        // mutable_native_types/abi_call.py:102
        // class TestAbiCall(arc4.ARC4Contract):
        txn OnCompletion                                                                               tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        !                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert
        txna ApplicationArgs 0                                                                         tmp%6#0
        v-store tmp%6#0
        method test_fixed_struct()void                                                                 Method(test_fixed_struct()void)
        method test_nested_struct()void                                                                Method(test_fixed_struct()void),Method(test_nested_struct()void)
        method test_dynamic_struct()void                                                               Method(test_fixed_struct()void),Method(test_nested_struct()void),Method(test_dynamic_struct()void)
        method test_fixed_array()void                                                                  Method(test_fixed_struct()void),Method(test_nested_struct()void),Method(test_dynamic_struct()void),Method(test_fixed_array()void)
        method test_native_array()void                                                                 Method(test_fixed_struct()void),Method(test_nested_struct()void),Method(test_dynamic_struct()void),Method(test_fixed_array()void),Method(test_native_array()void)
        method test_log()void                                                                          Method(test_fixed_struct()void),Method(test_nested_struct()void),Method(test_dynamic_struct()void),Method(test_fixed_array()void),Method(test_native_array()void),Method(test_log()void)
        v-load tmp%6#0                                                                                 Method(test_fixed_struct()void),Method(test_nested_struct()void),Method(test_dynamic_struct()void),Method(test_fixed_array()void),Method(test_native_array()void),Method(test_log()void),tmp%6#0
        match main_test_fixed_struct_route@4 main_test_nested_struct_route@5 main_test_dynamic_struct_route@6 main_test_fixed_array_route@7 main_test_native_array_route@8 main_test_log_route@9 ; b main_after_if_else@12 

    main_test_fixed_struct_route@4:
        // mutable_native_types/abi_call.py:103
        // @arc4.abimethod()
        callsub test_fixed_struct
        b main_after_if_else@12

    main_test_nested_struct_route@5:
        // mutable_native_types/abi_call.py:122
        // @arc4.abimethod()
        callsub test_nested_struct
        b main_after_if_else@12

    main_test_dynamic_struct_route@6:
        // mutable_native_types/abi_call.py:149
        // @arc4.abimethod()
        callsub test_dynamic_struct
        b main_after_if_else@12

    main_test_fixed_array_route@7:
        // mutable_native_types/abi_call.py:188
        // @arc4.abimethod()
        callsub test_fixed_array
        b main_after_if_else@12

    main_test_native_array_route@8:
        // mutable_native_types/abi_call.py:214
        // @arc4.abimethod()
        callsub test_native_array
        b main_after_if_else@12

    main_test_log_route@9:
        // mutable_native_types/abi_call.py:242
        // @arc4.abimethod()
        callsub test_log
        b main_after_if_else@12

    main_after_if_else@12:
        // mutable_native_types/abi_call.py:102
        // class TestAbiCall(arc4.ARC4Contract):
        err

    main___algopy_default_create@13:
        txn OnCompletion                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        !                                                                                              tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                                              tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        !                                                                                              tmp%10#0
        v-store tmp%10#0
        v-load tmp%8#0                                                                                 tmp%8#0
        v-load tmp%10#0                                                                                tmp%8#0,tmp%10#0
        &&                                                                                             tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                                          1
        return


// test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_struct[routing]() -> void:
subroutine test_fixed_struct:
    test_fixed_struct_block@0:
        // mutable_native_types/abi_call.py:105
        // create_txn = arc4.arc4_create(CallMe)
        itxn_begin
        int 5                                                                                          5
        itxn_field GlobalNumByteSlice
        byte C4EBQw==                                                                                  C4EBQw==
        itxn_field ClearStateProgramPages
        byte CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M= CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=
        itxn_field ApprovalProgramPages
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn CreatedApplicationID                                                                      create_txn.CreatedApplicationID#0
        v-store create_txn.CreatedApplicationID#0
        // mutable_native_types/abi_call.py:109
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 1, b=Txn.num_app_args + 2)
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 1                                                                                          tmp%0#0,1
        +                                                                                              tmp%1#0
        v-store tmp%1#0
        txn NumAppArgs                                                                                 tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        int 2                                                                                          tmp%2#0,2
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                                 tmp%1#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%3#0                                                                                 tmp%3#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:110
        // arc4.abi_call(CallMe.fixed_struct_arg, fixed_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_struct_arg((uint64,uint64))void                                                   Method(fixed_struct_arg((uint64,uint64))void)
        itxn_field ApplicationArgs
        v-load fixed_struct#0                                                                          fixed_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:111
        // res, _txn = arc4.abi_call(CallMe.fixed_struct_ret, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_struct_ret()(uint64,uint64)                                                       Method(fixed_struct_ret()(uint64,uint64))
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%0#0
        v-store awst_tmp%0#0
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%0#0
        v-store len%0#0
        v-load len%0#0                                                                                 len%0#0
        int 16                                                                                         len%0#0,16
        ==                                                                                             eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                                  eq%0#0
        assert // invalid number of bytes for test_cases.mutable_native_types.abi_call.FixedStruct 
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 0 4                                                                                    tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        byte 0x151f7c75                                                                                tmp%6#0,0x151f7c75
        ==                                                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:112
        // assert res == fixed_struct, "should be the same"
        v-load res#0                                                                                   res#0
        v-load fixed_struct#0                                                                          res#0,fixed_struct#0
        ==                                                                                             tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert // should be the same
        // mutable_native_types/abi_call.py:115
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 2, b=Txn.num_app_args + 3)
        txn NumAppArgs                                                                                 tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        int 2                                                                                          tmp%9#0,2
        +                                                                                              tmp%10#0
        v-store tmp%10#0
        txn NumAppArgs                                                                                 tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                tmp%11#0
        int 3                                                                                          tmp%11#0,3
        +                                                                                              tmp%12#0
        v-store tmp%12#0
        v-load tmp%10#0                                                                                tmp%10#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load tmp%12#0                                                                                tmp%12#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%val_as_bytes%2#0
        v-load aggregate%val_as_bytes%3#0                                                              aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:116
        // arc4.abi_call("fixed_struct_arg((uint64,uint64))void", fixed_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_struct_arg((uint64,uint64))void                                                   Method(fixed_struct_arg((uint64,uint64))void)
        itxn_field ApplicationArgs
        v-load fixed_struct#0                                                                          fixed_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:117
        // res, _txn = arc4.abi_call[FixedStruct]("fixed_struct_ret()(uint64,uint64)", app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_struct_ret()(uint64,uint64)                                                       Method(fixed_struct_ret()(uint64,uint64))
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%1#0
        v-store awst_tmp%1#0
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%1#0
        v-store len%1#0
        v-load len%1#0                                                                                 len%1#0
        int 16                                                                                         len%1#0,16
        ==                                                                                             eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                                                  eq%1#0
        assert // invalid number of bytes for test_cases.mutable_native_types.abi_call.FixedStruct 
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 0 4                                                                                    tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        byte 0x151f7c75                                                                                tmp%15#0,0x151f7c75
        ==                                                                                             tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:118
        // assert res == fixed_struct, "should be the same"
        v-load res#0                                                                                   res#0
        v-load fixed_struct#0                                                                          res#0,fixed_struct#0
        ==                                                                                             tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        assert // should be the same
        // mutable_native_types/abi_call.py:120
        // arc4.abi_call(CallMe.delete, app_id=app)
        itxn_begin
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method delete()void                                                                            Method(delete()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:103
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// test_cases.mutable_native_types.abi_call.TestAbiCall.test_nested_struct[routing]() -> void:
subroutine test_nested_struct:
    test_nested_struct_block@0:
        // mutable_native_types/abi_call.py:124
        // create_txn = arc4.arc4_create(CallMe)
        itxn_begin
        int 5                                                                                          5
        itxn_field GlobalNumByteSlice
        byte C4EBQw==                                                                                  C4EBQw==
        itxn_field ClearStateProgramPages
        byte CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M= CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=
        itxn_field ApprovalProgramPages
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn CreatedApplicationID                                                                      create_txn.CreatedApplicationID#0
        v-store create_txn.CreatedApplicationID#0
        // mutable_native_types/abi_call.py:129
        // fixed=FixedStruct(a=Txn.num_app_args + 1, b=Txn.num_app_args + 2),
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 1                                                                                          tmp%0#0,1
        +                                                                                              tmp%1#0
        v-store tmp%1#0
        txn NumAppArgs                                                                                 tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        int 2                                                                                          tmp%2#0,2
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                                 tmp%1#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%3#0                                                                                 tmp%3#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                         aggregate%head%1#0
        v-store aggregate%head%1#0
        // mutable_native_types/abi_call.py:130
        // c=Txn.num_app_args + 3,
        txn NumAppArgs                                                                                 tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        int 3                                                                                          tmp%5#0,3
        +                                                                                              tmp%6#0
        v-store tmp%6#0
        // mutable_native_types/abi_call.py:128-131
        // nested_struct = NestedStruct(
        //     fixed=FixedStruct(a=Txn.num_app_args + 1, b=Txn.num_app_args + 2),
        //     c=Txn.num_app_args + 3,
        // )
        v-load tmp%6#0                                                                                 tmp%6#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load aggregate%head%1#0                                                                      aggregate%head%1#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%head%1#0,aggregate%val_as_bytes%2#0
        concat                                                                                         nested_struct#0
        v-store nested_struct#0
        // mutable_native_types/abi_call.py:132
        // arc4.abi_call(CallMe.nested_struct_arg, nested_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method nested_struct_arg(((uint64,uint64),uint64))void                                         Method(nested_struct_arg(((uint64,uint64),uint64))void)
        itxn_field ApplicationArgs
        v-load nested_struct#0                                                                         nested_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:133
        // res, _txn = arc4.abi_call(CallMe.nested_struct_ret, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method nested_struct_ret()((uint64,uint64),uint64)                                             Method(nested_struct_ret()((uint64,uint64),uint64))
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%0#0
        v-store awst_tmp%0#0
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%0#0
        v-store len%0#0
        v-load len%0#0                                                                                 len%0#0
        int 24                                                                                         len%0#0,24
        ==                                                                                             eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                                  eq%0#0
        assert // invalid number of bytes for test_cases.mutable_native_types.abi_call.NestedStruct 
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 0 4                                                                                    tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        byte 0x151f7c75                                                                                tmp%9#0,0x151f7c75
        ==                                                                                             tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:134
        // assert res == nested_struct, "should be the same"
        v-load res#0                                                                                   res#0
        v-load nested_struct#0                                                                         res#0,nested_struct#0
        ==                                                                                             tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                tmp%11#0
        assert // should be the same
        // mutable_native_types/abi_call.py:138
        // fixed=FixedStruct(a=Txn.num_app_args + 2, b=Txn.num_app_args + 3),
        txn NumAppArgs                                                                                 tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                                tmp%12#0
        int 2                                                                                          tmp%12#0,2
        +                                                                                              tmp%13#0
        v-store tmp%13#0
        txn NumAppArgs                                                                                 tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                                tmp%14#0
        int 3                                                                                          tmp%14#0,3
        +                                                                                              tmp%15#0
        v-store tmp%15#0
        v-load tmp%13#0                                                                                tmp%13#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load tmp%15#0                                                                                tmp%15#0
        itob                                                                                           aggregate%val_as_bytes%4#0
        v-store aggregate%val_as_bytes%4#0
        v-load aggregate%val_as_bytes%3#0                                                              aggregate%val_as_bytes%3#0
        v-load aggregate%val_as_bytes%4#0                                                              aggregate%val_as_bytes%3#0,aggregate%val_as_bytes%4#0
        concat                                                                                         aggregate%head%5#0
        v-store aggregate%head%5#0
        // mutable_native_types/abi_call.py:139
        // c=Txn.num_app_args + 4,
        txn NumAppArgs                                                                                 tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        int 4                                                                                          tmp%17#0,4
        +                                                                                              tmp%18#0
        v-store tmp%18#0
        // mutable_native_types/abi_call.py:137-140
        // nested_struct = NestedStruct(
        //     fixed=FixedStruct(a=Txn.num_app_args + 2, b=Txn.num_app_args + 3),
        //     c=Txn.num_app_args + 4,
        // )
        v-load tmp%18#0                                                                                tmp%18#0
        itob                                                                                           aggregate%val_as_bytes%5#0
        v-store aggregate%val_as_bytes%5#0
        v-load aggregate%head%5#0                                                                      aggregate%head%5#0
        v-load aggregate%val_as_bytes%5#0                                                              aggregate%head%5#0,aggregate%val_as_bytes%5#0
        concat                                                                                         nested_struct#0
        v-store nested_struct#0
        // mutable_native_types/abi_call.py:141
        // arc4.abi_call("nested_struct_arg(((uint64,uint64),uint64))void", nested_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method nested_struct_arg(((uint64,uint64),uint64))void                                         Method(nested_struct_arg(((uint64,uint64),uint64))void)
        itxn_field ApplicationArgs
        v-load nested_struct#0                                                                         nested_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:142-144
        // res, _txn = arc4.abi_call[NestedStruct](
        //     "nested_struct_ret()((uint64,uint64),uint64)", app_id=app
        // )
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method nested_struct_ret()((uint64,uint64),uint64)                                             Method(nested_struct_ret()((uint64,uint64),uint64))
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%1#0
        v-store awst_tmp%1#0
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%1#0
        v-store len%1#0
        v-load len%1#0                                                                                 len%1#0
        int 24                                                                                         len%1#0,24
        ==                                                                                             eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                                                  eq%1#0
        assert // invalid number of bytes for test_cases.mutable_native_types.abi_call.NestedStruct 
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 0 4                                                                                    tmp%21#0
        v-store tmp%21#0
        v-load tmp%21#0                                                                                tmp%21#0
        byte 0x151f7c75                                                                                tmp%21#0,0x151f7c75
        ==                                                                                             tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                                                tmp%22#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:145
        // assert res == nested_struct, "should be the same"
        v-load res#0                                                                                   res#0
        v-load nested_struct#0                                                                         res#0,nested_struct#0
        ==                                                                                             tmp%23#0
        v-store tmp%23#0
        v-load tmp%23#0                                                                                tmp%23#0
        assert // should be the same
        // mutable_native_types/abi_call.py:147
        // arc4.abi_call(CallMe.delete, app_id=app)
        itxn_begin
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method delete()void                                                                            Method(delete()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:122
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// test_cases.mutable_native_types.abi_call.TestAbiCall.test_dynamic_struct[routing]() -> void:
subroutine test_dynamic_struct:
    test_dynamic_struct_block@0:
        // mutable_native_types/abi_call.py:151
        // create_txn = arc4.arc4_create(CallMe)
        itxn_begin
        int 5                                                                                          5
        itxn_field GlobalNumByteSlice
        byte C4EBQw==                                                                                  C4EBQw==
        itxn_field ClearStateProgramPages
        byte CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M= CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=
        itxn_field ApprovalProgramPages
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn CreatedApplicationID                                                                      create_txn.CreatedApplicationID#0
        v-store create_txn.CreatedApplicationID#0
        // mutable_native_types/abi_call.py:154
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 1, b=Txn.num_app_args + 2)
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 1                                                                                          tmp%0#0,1
        +                                                                                              tmp%1#0
        v-store tmp%1#0
        txn NumAppArgs                                                                                 tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        int 2                                                                                          tmp%2#0,2
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                                 tmp%1#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%3#0                                                                                 tmp%3#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:158
        // a=Txn.num_app_args + 1,
        txn NumAppArgs                                                                                 tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        int 1                                                                                          tmp%5#0,1
        +                                                                                              tmp%6#0
        v-store tmp%6#0
        // mutable_native_types/abi_call.py:159
        // b=Txn.num_app_args + 2,
        txn NumAppArgs                                                                                 tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        int 2                                                                                          tmp%7#0,2
        +                                                                                              tmp%8#0
        v-store tmp%8#0
        // mutable_native_types/abi_call.py:160
        // c=op.itob(Txn.num_app_args + 3),
        txn NumAppArgs                                                                                 tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        int 3                                                                                          tmp%9#0,3
        +                                                                                              tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        itob                                                                                           tmp%11#0
        v-store tmp%11#0
        // mutable_native_types/abi_call.py:162
        // e=NativeArray((fixed_struct,)),
        byte 0x0001                                                                                    0x0001
        v-load fixed_struct#0                                                                          0x0001,fixed_struct#0
        concat                                                                                         aggregate%head%2#0
        v-store aggregate%head%2#0
        // mutable_native_types/abi_call.py:157-163
        // dynamic_struct = DynamicStruct(
        //     a=Txn.num_app_args + 1,
        //     b=Txn.num_app_args + 2,
        //     c=op.itob(Txn.num_app_args + 3),
        //     d=String("Hello"),
        //     e=NativeArray((fixed_struct,)),
        // )
        v-load tmp%6#0                                                                                 tmp%6#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load tmp%8#0                                                                                 tmp%8#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%val_as_bytes%2#0
        v-load aggregate%val_as_bytes%3#0                                                              aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0
        concat                                                                                         aggregate%head%4#0
        v-store aggregate%head%4#0
        byte 0x0008                                                                                    0x0008
        v-load tmp%11#0                                                                                0x0008,tmp%11#0
        concat                                                                                         aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        v-load aggregate%head%4#0                                                                      aggregate%head%4#0
        byte 0x0016                                                                                    aggregate%head%4#0,0x0016
        concat                                                                                         aggregate%head%5#0
        v-store aggregate%head%5#0
        v-load aggregate%encoded_value%0#0                                                             aggregate%encoded_value%0#0
        len                                                                                            aggregate%data_length%0#0
        v-store aggregate%data_length%0#0
        int 22                                                                                         22
        v-load aggregate%data_length%0#0                                                               22,aggregate%data_length%0#0
        +                                                                                              aggregate%current_tail_offset%0#0
        v-store aggregate%current_tail_offset%0#0
        v-load aggregate%current_tail_offset%0#0                                                       aggregate%current_tail_offset%0#0
        itob                                                                                           aggregate%as_bytes%4#0
        v-store aggregate%as_bytes%4#0
        v-load aggregate%as_bytes%4#0                                                                  aggregate%as_bytes%4#0
        extract 6 2                                                                                    aggregate%offset_as_uint16%1#0
        v-store aggregate%offset_as_uint16%1#0
        v-load aggregate%head%5#0                                                                      aggregate%head%5#0
        v-load aggregate%offset_as_uint16%1#0                                                          aggregate%head%5#0,aggregate%offset_as_uint16%1#0
        concat                                                                                         aggregate%head%6#0
        v-store aggregate%head%6#0
        v-load aggregate%current_tail_offset%0#0                                                       aggregate%current_tail_offset%0#0
        int 7                                                                                          aggregate%current_tail_offset%0#0,7
        +                                                                                              aggregate%current_tail_offset%1#0
        v-store aggregate%current_tail_offset%1#0
        v-load aggregate%current_tail_offset%1#0                                                       aggregate%current_tail_offset%1#0
        itob                                                                                           aggregate%as_bytes%5#0
        v-store aggregate%as_bytes%5#0
        v-load aggregate%as_bytes%5#0                                                                  aggregate%as_bytes%5#0
        extract 6 2                                                                                    aggregate%offset_as_uint16%2#0
        v-store aggregate%offset_as_uint16%2#0
        v-load aggregate%head%6#0                                                                      aggregate%head%6#0
        v-load aggregate%offset_as_uint16%2#0                                                          aggregate%head%6#0,aggregate%offset_as_uint16%2#0
        concat                                                                                         aggregate%head%7#0
        v-store aggregate%head%7#0
        v-load aggregate%head%7#0                                                                      aggregate%head%7#0
        v-load aggregate%encoded_value%0#0                                                             aggregate%head%7#0,aggregate%encoded_value%0#0
        concat                                                                                         aggregate%concat%0#0
        v-store aggregate%concat%0#0
        v-load aggregate%concat%0#0                                                                    aggregate%concat%0#0
        byte 0x000548656c6c6f                                                                          aggregate%concat%0#0,0x000548656c6c6f
        concat                                                                                         aggregate%concat%1#0
        v-store aggregate%concat%1#0
        v-load aggregate%concat%1#0                                                                    aggregate%concat%1#0
        v-load aggregate%head%2#0                                                                      aggregate%concat%1#0,aggregate%head%2#0
        concat                                                                                         dynamic_struct#0
        v-store dynamic_struct#0
        // mutable_native_types/abi_call.py:164
        // arc4.abi_call(CallMe.dynamic_struct_arg, dynamic_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void                 Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)
        itxn_field ApplicationArgs
        v-load dynamic_struct#0                                                                        dynamic_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:165
        // res, _txn = arc4.abi_call(CallMe.dynamic_struct_ret, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[])                     Method(dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[]))
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%0#0
        v-store awst_tmp%0#0
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        int 16                                                                                         res#0,16
        extract_uint16 // on error: invalid tuple encoding                                             extract_uint16%0#0
        v-store extract_uint16%0#0
        v-load extract_uint16%0#0                                                                      extract_uint16%0#0
        int 22                                                                                         extract_uint16%0#0,22
        ==                                                                                             eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                                  eq%0#0
        assert // invalid tail pointer at index 2 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[])) 
        v-load res#0                                                                                   res#0
        int 18                                                                                         res#0,18
        extract_uint16                                                                                 aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0
        v-load res#0                                                                                   res#0
        v-load extract_uint16%0#0                                                                      res#0,extract_uint16%0#0
        v-load aggregate%extract_uint16%1#0                                                            res#0,extract_uint16%0#0,aggregate%extract_uint16%1#0
        substring3                                                                                     aggregate%substring3%0#0
        v-store aggregate%substring3%0#0
        v-load aggregate%substring3%0#0                                                                aggregate%substring3%0#0
        int 0                                                                                          aggregate%substring3%0#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                                              aggregate%array_length%0#0
        int 24                                                                                         aggregate%array_length%0#0,24
        +                                                                                              add%1#0
        v-store add%1#0
        v-load aggregate%extract_uint16%1#0                                                            aggregate%extract_uint16%1#0
        v-load add%1#0                                                                                 aggregate%extract_uint16%1#0,add%1#0
        ==                                                                                             eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                                                  eq%1#0
        assert // invalid tail pointer at index 3 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[])) 
        v-load res#0                                                                                   res#0
        int 20                                                                                         res#0,20
        extract_uint16                                                                                 aggregate%extract_uint16%3#0
        v-store aggregate%extract_uint16%3#0
        v-load res#0                                                                                   res#0
        v-load aggregate%extract_uint16%1#0                                                            res#0,aggregate%extract_uint16%1#0
        v-load aggregate%extract_uint16%3#0                                                            res#0,aggregate%extract_uint16%1#0,aggregate%extract_uint16%3#0
        substring3                                                                                     aggregate%substring3%1#0
        v-store aggregate%substring3%1#0
        v-load aggregate%substring3%1#0                                                                aggregate%substring3%1#0
        int 0                                                                                          aggregate%substring3%1#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%1#0
        v-store aggregate%array_length%1#0
        v-load aggregate%array_length%1#0                                                              aggregate%array_length%1#0
        int 2                                                                                          aggregate%array_length%1#0,2
        +                                                                                              add%2#0
        v-store add%2#0
        v-load add%1#0                                                                                 add%1#0
        v-load add%2#0                                                                                 add%1#0,add%2#0
        +                                                                                              add%3#0
        v-store add%3#0
        v-load aggregate%extract_uint16%3#0                                                            aggregate%extract_uint16%3#0
        v-load add%3#0                                                                                 aggregate%extract_uint16%3#0,add%3#0
        ==                                                                                             eq%2#0
        v-store eq%2#0
        v-load eq%2#0                                                                                  eq%2#0
        assert // invalid tail pointer at index 4 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[])) 
        v-load res#0                                                                                   res#0
        len                                                                                            aggregate%len%0#0
        v-store aggregate%len%0#0
        v-load res#0                                                                                   res#0
        v-load aggregate%extract_uint16%3#0                                                            res#0,aggregate%extract_uint16%3#0
        v-load aggregate%len%0#0                                                                       res#0,aggregate%extract_uint16%3#0,aggregate%len%0#0
        substring3                                                                                     aggregate%substring3%2#0
        v-store aggregate%substring3%2#0
        v-load aggregate%substring3%2#0                                                                aggregate%substring3%2#0
        int 0                                                                                          aggregate%substring3%2#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%2#0
        v-store aggregate%array_length%2#0
        v-load aggregate%array_length%2#0                                                              aggregate%array_length%2#0
        int 16                                                                                         aggregate%array_length%2#0,16
        *                                                                                              mul%2#0
        v-store mul%2#0
        v-load mul%2#0                                                                                 mul%2#0
        int 2                                                                                          mul%2#0,2
        +                                                                                              add%4#0
        v-store add%4#0
        v-load add%3#0                                                                                 add%3#0
        v-load add%4#0                                                                                 add%3#0,add%4#0
        +                                                                                              add%5#0
        v-store add%5#0
        v-load aggregate%len%0#0                                                                       aggregate%len%0#0
        v-load add%5#0                                                                                 aggregate%len%0#0,add%5#0
        ==                                                                                             eq%3#0
        v-store eq%3#0
        v-load eq%3#0                                                                                  eq%3#0
        assert // invalid number of bytes for test_cases.mutable_native_types.abi_call.DynamicStruct 
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 0 4                                                                                    tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        byte 0x151f7c75                                                                                tmp%17#0,0x151f7c75
        ==                                                                                             tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                                tmp%18#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:166
        // assert res == dynamic_struct, "should be the same"
        v-load res#0                                                                                   res#0
        v-load dynamic_struct#0                                                                        res#0,dynamic_struct#0
        ==                                                                                             tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                                tmp%19#0
        assert // should be the same
        // mutable_native_types/abi_call.py:170
        // a=Txn.num_app_args + 2,
        txn NumAppArgs                                                                                 tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                                                tmp%20#0
        int 2                                                                                          tmp%20#0,2
        +                                                                                              tmp%21#0
        v-store tmp%21#0
        // mutable_native_types/abi_call.py:171
        // b=Txn.num_app_args + 3,
        txn NumAppArgs                                                                                 tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                                                tmp%22#0
        int 3                                                                                          tmp%22#0,3
        +                                                                                              tmp%23#0
        v-store tmp%23#0
        // mutable_native_types/abi_call.py:172
        // c=op.itob(Txn.num_app_args + 4),
        txn NumAppArgs                                                                                 tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                                                tmp%24#0
        int 4                                                                                          tmp%24#0,4
        +                                                                                              tmp%25#0
        v-store tmp%25#0
        v-load tmp%25#0                                                                                tmp%25#0
        itob                                                                                           tmp%26#0
        v-store tmp%26#0
        // mutable_native_types/abi_call.py:169-175
        // dynamic_struct = DynamicStruct(
        //     a=Txn.num_app_args + 2,
        //     b=Txn.num_app_args + 3,
        //     c=op.itob(Txn.num_app_args + 4),
        //     d=String("Hello"),
        //     e=NativeArray((fixed_struct,)),
        // )
        v-load tmp%21#0                                                                                tmp%21#0
        itob                                                                                           aggregate%val_as_bytes%4#0
        v-store aggregate%val_as_bytes%4#0
        v-load tmp%23#0                                                                                tmp%23#0
        itob                                                                                           aggregate%val_as_bytes%5#0
        v-store aggregate%val_as_bytes%5#0
        v-load aggregate%val_as_bytes%4#0                                                              aggregate%val_as_bytes%4#0
        v-load aggregate%val_as_bytes%5#0                                                              aggregate%val_as_bytes%4#0,aggregate%val_as_bytes%5#0
        concat                                                                                         aggregate%head%9#0
        v-store aggregate%head%9#0
        byte 0x0008                                                                                    0x0008
        v-load tmp%26#0                                                                                0x0008,tmp%26#0
        concat                                                                                         aggregate%encoded_value%2#0
        v-store aggregate%encoded_value%2#0
        v-load aggregate%head%9#0                                                                      aggregate%head%9#0
        byte 0x0016                                                                                    aggregate%head%9#0,0x0016
        concat                                                                                         aggregate%head%10#0
        v-store aggregate%head%10#0
        v-load aggregate%encoded_value%2#0                                                             aggregate%encoded_value%2#0
        len                                                                                            aggregate%data_length%3#0
        v-store aggregate%data_length%3#0
        int 22                                                                                         22
        v-load aggregate%data_length%3#0                                                               22,aggregate%data_length%3#0
        +                                                                                              aggregate%current_tail_offset%3#0
        v-store aggregate%current_tail_offset%3#0
        v-load aggregate%current_tail_offset%3#0                                                       aggregate%current_tail_offset%3#0
        itob                                                                                           aggregate%as_bytes%9#0
        v-store aggregate%as_bytes%9#0
        v-load aggregate%as_bytes%9#0                                                                  aggregate%as_bytes%9#0
        extract 6 2                                                                                    aggregate%offset_as_uint16%4#0
        v-store aggregate%offset_as_uint16%4#0
        v-load aggregate%head%10#0                                                                     aggregate%head%10#0
        v-load aggregate%offset_as_uint16%4#0                                                          aggregate%head%10#0,aggregate%offset_as_uint16%4#0
        concat                                                                                         aggregate%head%11#0
        v-store aggregate%head%11#0
        v-load aggregate%current_tail_offset%3#0                                                       aggregate%current_tail_offset%3#0
        int 7                                                                                          aggregate%current_tail_offset%3#0,7
        +                                                                                              aggregate%current_tail_offset%4#0
        v-store aggregate%current_tail_offset%4#0
        v-load aggregate%current_tail_offset%4#0                                                       aggregate%current_tail_offset%4#0
        itob                                                                                           aggregate%as_bytes%10#0
        v-store aggregate%as_bytes%10#0
        v-load aggregate%as_bytes%10#0                                                                 aggregate%as_bytes%10#0
        extract 6 2                                                                                    aggregate%offset_as_uint16%5#0
        v-store aggregate%offset_as_uint16%5#0
        v-load aggregate%head%11#0                                                                     aggregate%head%11#0
        v-load aggregate%offset_as_uint16%5#0                                                          aggregate%head%11#0,aggregate%offset_as_uint16%5#0
        concat                                                                                         aggregate%head%12#0
        v-store aggregate%head%12#0
        v-load aggregate%head%12#0                                                                     aggregate%head%12#0
        v-load aggregate%encoded_value%2#0                                                             aggregate%head%12#0,aggregate%encoded_value%2#0
        concat                                                                                         aggregate%concat%3#0
        v-store aggregate%concat%3#0
        v-load aggregate%concat%3#0                                                                    aggregate%concat%3#0
        byte 0x000548656c6c6f                                                                          aggregate%concat%3#0,0x000548656c6c6f
        concat                                                                                         aggregate%concat%4#0
        v-store aggregate%concat%4#0
        v-load aggregate%concat%4#0                                                                    aggregate%concat%4#0
        v-load aggregate%head%2#0                                                                      aggregate%concat%4#0,aggregate%head%2#0
        concat                                                                                         dynamic_struct#0
        v-store dynamic_struct#0
        // mutable_native_types/abi_call.py:176-180
        // arc4.abi_call(
        //     "dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void",
        //     dynamic_struct,
        //     app_id=app,
        // )
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void                 Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)
        itxn_field ApplicationArgs
        v-load dynamic_struct#0                                                                        dynamic_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:181-183
        // res, _txn = arc4.abi_call[DynamicStruct](
        //     "dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[])", app_id=app
        // )
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[])                     Method(dynamic_struct_ret()(uint64,uint64,byte[],string,(uint64,uint64)[]))
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%1#0
        v-store awst_tmp%1#0
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        int 16                                                                                         res#0,16
        extract_uint16 // on error: invalid tuple encoding                                             extract_uint16%3#0
        v-store extract_uint16%3#0
        v-load extract_uint16%3#0                                                                      extract_uint16%3#0
        int 22                                                                                         extract_uint16%3#0,22
        ==                                                                                             eq%4#0
        v-store eq%4#0
        v-load eq%4#0                                                                                  eq%4#0
        assert // invalid tail pointer at index 2 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[])) 
        v-load res#0                                                                                   res#0
        int 18                                                                                         res#0,18
        extract_uint16                                                                                 aggregate%extract_uint16%6#0
        v-store aggregate%extract_uint16%6#0
        v-load res#0                                                                                   res#0
        v-load extract_uint16%3#0                                                                      res#0,extract_uint16%3#0
        v-load aggregate%extract_uint16%6#0                                                            res#0,extract_uint16%3#0,aggregate%extract_uint16%6#0
        substring3                                                                                     aggregate%substring3%3#0
        v-store aggregate%substring3%3#0
        v-load aggregate%substring3%3#0                                                                aggregate%substring3%3#0
        int 0                                                                                          aggregate%substring3%3#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%3#0
        v-store aggregate%array_length%3#0
        v-load aggregate%array_length%3#0                                                              aggregate%array_length%3#0
        int 24                                                                                         aggregate%array_length%3#0,24
        +                                                                                              add%7#0
        v-store add%7#0
        v-load aggregate%extract_uint16%6#0                                                            aggregate%extract_uint16%6#0
        v-load add%7#0                                                                                 aggregate%extract_uint16%6#0,add%7#0
        ==                                                                                             eq%5#0
        v-store eq%5#0
        v-load eq%5#0                                                                                  eq%5#0
        assert // invalid tail pointer at index 3 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[])) 
        v-load res#0                                                                                   res#0
        int 20                                                                                         res#0,20
        extract_uint16                                                                                 aggregate%extract_uint16%8#0
        v-store aggregate%extract_uint16%8#0
        v-load res#0                                                                                   res#0
        v-load aggregate%extract_uint16%6#0                                                            res#0,aggregate%extract_uint16%6#0
        v-load aggregate%extract_uint16%8#0                                                            res#0,aggregate%extract_uint16%6#0,aggregate%extract_uint16%8#0
        substring3                                                                                     aggregate%substring3%4#0
        v-store aggregate%substring3%4#0
        v-load aggregate%substring3%4#0                                                                aggregate%substring3%4#0
        int 0                                                                                          aggregate%substring3%4#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%4#0
        v-store aggregate%array_length%4#0
        v-load aggregate%array_length%4#0                                                              aggregate%array_length%4#0
        int 2                                                                                          aggregate%array_length%4#0,2
        +                                                                                              add%8#0
        v-store add%8#0
        v-load add%7#0                                                                                 add%7#0
        v-load add%8#0                                                                                 add%7#0,add%8#0
        +                                                                                              add%9#0
        v-store add%9#0
        v-load aggregate%extract_uint16%8#0                                                            aggregate%extract_uint16%8#0
        v-load add%9#0                                                                                 aggregate%extract_uint16%8#0,add%9#0
        ==                                                                                             eq%6#0
        v-store eq%6#0
        v-load eq%6#0                                                                                  eq%6#0
        assert // invalid tail pointer at index 4 of (uint64,uint64,(len+uint8[]),(len+utf8[]),(len+(uint64,uint64)[])) 
        v-load res#0                                                                                   res#0
        len                                                                                            aggregate%len%1#0
        v-store aggregate%len%1#0
        v-load res#0                                                                                   res#0
        v-load aggregate%extract_uint16%8#0                                                            res#0,aggregate%extract_uint16%8#0
        v-load aggregate%len%1#0                                                                       res#0,aggregate%extract_uint16%8#0,aggregate%len%1#0
        substring3                                                                                     aggregate%substring3%5#0
        v-store aggregate%substring3%5#0
        v-load aggregate%substring3%5#0                                                                aggregate%substring3%5#0
        int 0                                                                                          aggregate%substring3%5#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%5#0
        v-store aggregate%array_length%5#0
        v-load aggregate%array_length%5#0                                                              aggregate%array_length%5#0
        int 16                                                                                         aggregate%array_length%5#0,16
        *                                                                                              mul%5#0
        v-store mul%5#0
        v-load mul%5#0                                                                                 mul%5#0
        int 2                                                                                          mul%5#0,2
        +                                                                                              add%10#0
        v-store add%10#0
        v-load add%9#0                                                                                 add%9#0
        v-load add%10#0                                                                                add%9#0,add%10#0
        +                                                                                              add%11#0
        v-store add%11#0
        v-load aggregate%len%1#0                                                                       aggregate%len%1#0
        v-load add%11#0                                                                                aggregate%len%1#0,add%11#0
        ==                                                                                             eq%7#0
        v-store eq%7#0
        v-load eq%7#0                                                                                  eq%7#0
        assert // invalid number of bytes for test_cases.mutable_native_types.abi_call.DynamicStruct 
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 0 4                                                                                    tmp%32#0
        v-store tmp%32#0
        v-load tmp%32#0                                                                                tmp%32#0
        byte 0x151f7c75                                                                                tmp%32#0,0x151f7c75
        ==                                                                                             tmp%33#0
        v-store tmp%33#0
        v-load tmp%33#0                                                                                tmp%33#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:184
        // assert res == dynamic_struct, "should be the same"
        v-load res#0                                                                                   res#0
        v-load dynamic_struct#0                                                                        res#0,dynamic_struct#0
        ==                                                                                             tmp%34#0
        v-store tmp%34#0
        v-load tmp%34#0                                                                                tmp%34#0
        assert // should be the same
        // mutable_native_types/abi_call.py:186
        // arc4.abi_call(CallMe.delete, app_id=app)
        itxn_begin
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method delete()void                                                                            Method(delete()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:149
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// test_cases.mutable_native_types.abi_call.TestAbiCall.test_fixed_array[routing]() -> void:
subroutine test_fixed_array:
    test_fixed_array_block@0:
        // mutable_native_types/abi_call.py:190
        // create_txn = arc4.arc4_create(CallMe)
        itxn_begin
        int 5                                                                                          5
        itxn_field GlobalNumByteSlice
        byte C4EBQw==                                                                                  C4EBQw==
        itxn_field ClearStateProgramPages
        byte CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M= CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=
        itxn_field ApprovalProgramPages
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn CreatedApplicationID                                                                      create_txn.CreatedApplicationID#0
        v-store create_txn.CreatedApplicationID#0
        // mutable_native_types/abi_call.py:193
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 1, b=Txn.num_app_args + 2)
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 1                                                                                          tmp%0#0,1
        +                                                                                              tmp%1#0
        v-store tmp%1#0
        txn NumAppArgs                                                                                 tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        int 2                                                                                          tmp%2#0,2
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                                 tmp%1#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%3#0                                                                                 tmp%3#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:194
        // fixed_arr = FixedStruct3((fixed_struct, fixed_struct, fixed_struct))
        v-load fixed_struct#0                                                                          fixed_struct#0
        v-load fixed_struct#0                                                                          fixed_struct#0,fixed_struct#0
        concat                                                                                         aggregate%head%3#0
        v-store aggregate%head%3#0
        v-load aggregate%head%3#0                                                                      aggregate%head%3#0
        v-load fixed_struct#0                                                                          aggregate%head%3#0,fixed_struct#0
        concat                                                                                         fixed_arr#0
        v-store fixed_arr#0
        // mutable_native_types/abi_call.py:197
        // arc4.abi_call(CallMe.fixed_arr_arg, fixed_arr, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_arr_arg((uint64,uint64)[3])void                                                   Method(fixed_arr_arg((uint64,uint64)[3])void)
        itxn_field ApplicationArgs
        v-load fixed_arr#0                                                                             fixed_arr#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:198
        // res, _txn = arc4.abi_call(CallMe.fixed_arr_ret, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_arr_ret()(uint64,uint64)[3]                                                       Method(fixed_arr_ret()(uint64,uint64)[3])
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%0#0
        v-store awst_tmp%0#0
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%0#0
        v-store len%0#0
        v-load len%0#0                                                                                 len%0#0
        int 48                                                                                         len%0#0,48
        ==                                                                                             eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                                  eq%0#0
        assert // invalid number of bytes for arc4.static_array<test_cases.mutable_native_types.abi_call.FixedStruct, 3> 
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 0 4                                                                                    tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        byte 0x151f7c75                                                                                tmp%6#0,0x151f7c75
        ==                                                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:199
        // assert res == fixed_arr, "should be the same"
        v-load res#0                                                                                   res#0
        v-load fixed_arr#0                                                                             res#0,fixed_arr#0
        ==                                                                                             tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert // should be the same
        // mutable_native_types/abi_call.py:202
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 2, b=Txn.num_app_args + 3)
        txn NumAppArgs                                                                                 tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        int 2                                                                                          tmp%9#0,2
        +                                                                                              tmp%10#0
        v-store tmp%10#0
        txn NumAppArgs                                                                                 tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                tmp%11#0
        int 3                                                                                          tmp%11#0,3
        +                                                                                              tmp%12#0
        v-store tmp%12#0
        v-load tmp%10#0                                                                                tmp%10#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load tmp%12#0                                                                                tmp%12#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%val_as_bytes%2#0
        v-load aggregate%val_as_bytes%3#0                                                              aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:203
        // fixed_arr = FixedStruct3((fixed_struct, fixed_struct, fixed_struct))
        v-load fixed_struct#0                                                                          fixed_struct#0
        v-load fixed_struct#0                                                                          fixed_struct#0,fixed_struct#0
        concat                                                                                         aggregate%head%8#0
        v-store aggregate%head%8#0
        v-load aggregate%head%8#0                                                                      aggregate%head%8#0
        v-load fixed_struct#0                                                                          aggregate%head%8#0,fixed_struct#0
        concat                                                                                         fixed_arr#0
        v-store fixed_arr#0
        // mutable_native_types/abi_call.py:204-208
        // arc4.abi_call(
        //     "fixed_arr_arg((uint64,uint64)[3])void",
        //     fixed_arr,
        //     app_id=app,
        // )
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_arr_arg((uint64,uint64)[3])void                                                   Method(fixed_arr_arg((uint64,uint64)[3])void)
        itxn_field ApplicationArgs
        v-load fixed_arr#0                                                                             fixed_arr#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:209
        // res, _txn = arc4.abi_call[FixedStruct3]("fixed_arr_ret()(uint64,uint64)[3]", app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_arr_ret()(uint64,uint64)[3]                                                       Method(fixed_arr_ret()(uint64,uint64)[3])
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%1#0
        v-store awst_tmp%1#0
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%1#0
        v-store len%1#0
        v-load len%1#0                                                                                 len%1#0
        int 48                                                                                         len%1#0,48
        ==                                                                                             eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                                                  eq%1#0
        assert // invalid number of bytes for arc4.static_array<test_cases.mutable_native_types.abi_call.FixedStruct, 3> 
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 0 4                                                                                    tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        byte 0x151f7c75                                                                                tmp%15#0,0x151f7c75
        ==                                                                                             tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:210
        // assert res == fixed_arr, "should be the same"
        v-load res#0                                                                                   res#0
        v-load fixed_arr#0                                                                             res#0,fixed_arr#0
        ==                                                                                             tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        assert // should be the same
        // mutable_native_types/abi_call.py:212
        // arc4.abi_call(CallMe.delete, app_id=app)
        itxn_begin
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method delete()void                                                                            Method(delete()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:188
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// test_cases.mutable_native_types.abi_call.TestAbiCall.test_native_array[routing]() -> void:
subroutine test_native_array:
    test_native_array_block@0:
        // mutable_native_types/abi_call.py:216
        // create_txn = arc4.arc4_create(CallMe)
        itxn_begin
        int 5                                                                                          5
        itxn_field GlobalNumByteSlice
        byte C4EBQw==                                                                                  C4EBQw==
        itxn_field ClearStateProgramPages
        byte CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M= CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=
        itxn_field ApprovalProgramPages
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn CreatedApplicationID                                                                      create_txn.CreatedApplicationID#0
        v-store create_txn.CreatedApplicationID#0
        // mutable_native_types/abi_call.py:219
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 1, b=Txn.num_app_args + 2)
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 1                                                                                          tmp%0#0,1
        +                                                                                              tmp%1#0
        v-store tmp%1#0
        txn NumAppArgs                                                                                 tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        int 2                                                                                          tmp%2#0,2
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                                 tmp%1#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%3#0                                                                                 tmp%3#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:220
        // native_arr = NativeArray((fixed_struct, fixed_struct, fixed_struct))
        byte 0x0003                                                                                    0x0003
        v-load fixed_struct#0                                                                          0x0003,fixed_struct#0
        concat                                                                                         aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load aggregate%head%2#0                                                                      aggregate%head%2#0
        v-load fixed_struct#0                                                                          aggregate%head%2#0,fixed_struct#0
        concat                                                                                         aggregate%head%3#0
        v-store aggregate%head%3#0
        v-load aggregate%head%3#0                                                                      aggregate%head%3#0
        v-load fixed_struct#0                                                                          aggregate%head%3#0,fixed_struct#0
        concat                                                                                         native_arr#0
        v-store native_arr#0
        // mutable_native_types/abi_call.py:223
        // arc4.abi_call(CallMe.native_arr_arg, native_arr, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method native_arr_arg((uint64,uint64)[])void                                                   Method(native_arr_arg((uint64,uint64)[])void)
        itxn_field ApplicationArgs
        v-load native_arr#0                                                                            native_arr#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:224
        // res, _txn = arc4.abi_call(CallMe.native_arr_ret, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method native_arr_ret()(uint64,uint64)[]                                                       Method(native_arr_ret()(uint64,uint64)[])
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%0#0
        v-store awst_tmp%0#0
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        int 0                                                                                          res#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                                              aggregate%array_length%0#0
        int 16                                                                                         aggregate%array_length%0#0,16
        *                                                                                              mul%0#0
        v-store mul%0#0
        v-load mul%0#0                                                                                 mul%0#0
        int 2                                                                                          mul%0#0,2
        +                                                                                              add%0#0
        v-store add%0#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%0#0
        v-store len%0#0
        v-load len%0#0                                                                                 len%0#0
        v-load add%0#0                                                                                 len%0#0,add%0#0
        ==                                                                                             eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                                  eq%0#0
        assert // invalid number of bytes for arc4.dynamic_array<test_cases.mutable_native_types.abi_call.FixedStruct> 
        v-load awst_tmp%0#0                                                                            awst_tmp%0#0
        extract 0 4                                                                                    tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        byte 0x151f7c75                                                                                tmp%6#0,0x151f7c75
        ==                                                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:225
        // assert res == native_arr, "should be the same"
        v-load res#0                                                                                   res#0
        v-load native_arr#0                                                                            res#0,native_arr#0
        ==                                                                                             tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert // should be the same
        // mutable_native_types/abi_call.py:228
        // fixed_struct = FixedStruct(a=Txn.num_app_args + 2, b=Txn.num_app_args + 3)
        txn NumAppArgs                                                                                 tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        int 2                                                                                          tmp%9#0,2
        +                                                                                              tmp%10#0
        v-store tmp%10#0
        txn NumAppArgs                                                                                 tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                tmp%11#0
        int 3                                                                                          tmp%11#0,3
        +                                                                                              tmp%12#0
        v-store tmp%12#0
        v-load tmp%10#0                                                                                tmp%10#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load tmp%12#0                                                                                tmp%12#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%val_as_bytes%2#0
        v-load aggregate%val_as_bytes%3#0                                                              aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0
        concat                                                                                         fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:229
        // native_arr = NativeArray((fixed_struct, fixed_struct, fixed_struct))
        byte 0x0003                                                                                    0x0003
        v-load fixed_struct#0                                                                          0x0003,fixed_struct#0
        concat                                                                                         aggregate%head%7#0
        v-store aggregate%head%7#0
        v-load aggregate%head%7#0                                                                      aggregate%head%7#0
        v-load fixed_struct#0                                                                          aggregate%head%7#0,fixed_struct#0
        concat                                                                                         aggregate%head%8#0
        v-store aggregate%head%8#0
        v-load aggregate%head%8#0                                                                      aggregate%head%8#0
        v-load fixed_struct#0                                                                          aggregate%head%8#0,fixed_struct#0
        concat                                                                                         native_arr#0
        v-store native_arr#0
        // mutable_native_types/abi_call.py:230-234
        // arc4.abi_call(
        //     "native_arr_arg((uint64,uint64)[])void",
        //     native_arr,
        //     app_id=app,
        // )
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method native_arr_arg((uint64,uint64)[])void                                                   Method(native_arr_arg((uint64,uint64)[])void)
        itxn_field ApplicationArgs
        v-load native_arr#0                                                                            native_arr#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:235-237
        // res, _txn = arc4.abi_call[NativeArray[FixedStruct]](
        //     "native_arr_ret()(uint64,uint64)[]", app_id=app
        // )
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method native_arr_ret()(uint64,uint64)[]                                                       Method(native_arr_ret()(uint64,uint64)[])
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn LastLog                                                                                   awst_tmp%1#0
        v-store awst_tmp%1#0
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 4 0                                                                                    res#0
        v-store res#0
        v-load res#0                                                                                   res#0
        int 0                                                                                          res#0,0
        extract_uint16 // on error: invalid array length header                                        aggregate%array_length%1#0
        v-store aggregate%array_length%1#0
        v-load aggregate%array_length%1#0                                                              aggregate%array_length%1#0
        int 16                                                                                         aggregate%array_length%1#0,16
        *                                                                                              mul%1#0
        v-store mul%1#0
        v-load mul%1#0                                                                                 mul%1#0
        int 2                                                                                          mul%1#0,2
        +                                                                                              add%1#0
        v-store add%1#0
        v-load res#0                                                                                   res#0
        len                                                                                            len%1#0
        v-store len%1#0
        v-load len%1#0                                                                                 len%1#0
        v-load add%1#0                                                                                 len%1#0,add%1#0
        ==                                                                                             eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                                                  eq%1#0
        assert // invalid number of bytes for arc4.dynamic_array<test_cases.mutable_native_types.abi_call.FixedStruct> 
        v-load awst_tmp%1#0                                                                            awst_tmp%1#0
        extract 0 4                                                                                    tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        byte 0x151f7c75                                                                                tmp%15#0,0x151f7c75
        ==                                                                                             tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert // application log value is not the result of an ABI return
        // mutable_native_types/abi_call.py:238
        // assert res == native_arr, "should be the same"
        v-load res#0                                                                                   res#0
        v-load native_arr#0                                                                            res#0,native_arr#0
        ==                                                                                             tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        assert // should be the same
        // mutable_native_types/abi_call.py:240
        // arc4.abi_call(CallMe.delete, app_id=app)
        itxn_begin
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method delete()void                                                                            Method(delete()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:214
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// test_cases.mutable_native_types.abi_call.TestAbiCall.test_log[routing]() -> void:
subroutine test_log:
    test_log_block@0:
        // mutable_native_types/abi_call.py:244
        // create_txn = arc4.arc4_create(CallMe)
        itxn_begin
        int 5                                                                                          5
        itxn_field GlobalNumByteSlice
        byte C4EBQw==                                                                                  C4EBQw==
        itxn_field ClearStateProgramPages
        byte CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M= CyAEAAEQAiYGBBUffHUMZml4ZWRfc3RydWN0DW5lc3RlZF9zdHJ1Y3QOZHluYW1pY19zdHJ1Y3QJZml4ZWRfYXJyCm5hdGl2ZV9hcnIxG0EAdIAEJDeNPDYaAI4BAFwxGRREMRhEggsEEbGblQTSi5ZKBOoYZV8Euzv9twRG7BSgBJtNCSYETw3rUARZZkq2BBJdE3YEgY5KYgSbvhAyNhoAjgsAFgAjAC0AOwBFAJQAngCtALgAzQDYADEZgQUSMRgQRCNDMRkUMRgUEEQjQzYaAUkVJBJEKUxnI0MiKWVEKExQsCNDNhoBSRWBGBJEKkxnI0MiKmVEKExQsCNDNhoBSSRZSYEWEkRLAYESWUsCTwJLAlIiWYEYCEoSREsCgRRZSwNPA0sCUiJZJQhPAghKEkRLAhVLA08DSwJSIlkkCyUITwIIEkQrTGcjQyIrZUQoTFCwI0M2GgFJFYEwEkQnBExnI0MiJwRlRChMULAjQzYaAUkiWSQLJQhLARUSRCcFTGcjQyInBWVEKExQsCNDIillRLAiKmVEsCIrZUSwIicEZUSwIicFZUSwI0M=
        itxn_field ApprovalProgramPages
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn CreatedApplicationID                                                                      create_txn.CreatedApplicationID#0
        v-store create_txn.CreatedApplicationID#0
        // mutable_native_types/abi_call.py:248
        // fixed_struct = zero_bytes(FixedStruct)
        int 16                                                                                         16
        bzero                                                                                          fixed_struct#0
        v-store fixed_struct#0
        // mutable_native_types/abi_call.py:249
        // arc4.abi_call(CallMe.fixed_struct_arg, fixed_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_struct_arg((uint64,uint64))void                                                   Method(fixed_struct_arg((uint64,uint64))void)
        itxn_field ApplicationArgs
        v-load fixed_struct#0                                                                          fixed_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:252
        // nested_struct = zero_bytes(NestedStruct)
        int 24                                                                                         24
        bzero                                                                                          nested_struct#0
        v-store nested_struct#0
        // mutable_native_types/abi_call.py:253
        // arc4.abi_call(CallMe.nested_struct_arg, nested_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method nested_struct_arg(((uint64,uint64),uint64))void                                         Method(nested_struct_arg(((uint64,uint64),uint64))void)
        itxn_field ApplicationArgs
        v-load nested_struct#0                                                                         nested_struct#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:259
        // arc4.abi_call(CallMe.dynamic_struct_arg, dynamic_struct, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void                 Method(dynamic_struct_arg((uint64,uint64,byte[],string,(uint64,uint64)[]))void)
        itxn_field ApplicationArgs
        // mutable_native_types/abi_call.py:256-258
        // dynamic_struct = DynamicStruct(
        //     a=UInt64(), b=UInt64(), c=Bytes(), d=String(), e=NativeArray[FixedStruct]()
        // )
        byte 0x0000000000000000000000000000000000160018001a000000000000                                0x0000000000000000000000000000000000160018001a000000000000
        itxn_field ApplicationArgs
        // mutable_native_types/abi_call.py:259
        // arc4.abi_call(CallMe.dynamic_struct_arg, dynamic_struct, app_id=app)
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:262
        // fixed_arr = zero_bytes(FixedStruct3)
        int 48                                                                                         48
        bzero                                                                                          fixed_arr#0
        v-store fixed_arr#0
        // mutable_native_types/abi_call.py:263
        // arc4.abi_call(CallMe.fixed_arr_arg, fixed_arr, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method fixed_arr_arg((uint64,uint64)[3])void                                                   Method(fixed_arr_arg((uint64,uint64)[3])void)
        itxn_field ApplicationArgs
        v-load fixed_arr#0                                                                             fixed_arr#0
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:267
        // arc4.abi_call(CallMe.native_arr_arg, native_arr, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method native_arr_arg((uint64,uint64)[])void                                                   Method(native_arr_arg((uint64,uint64)[])void)
        itxn_field ApplicationArgs
        // mutable_native_types/abi_call.py:257
        // a=UInt64(), b=UInt64(), c=Bytes(), d=String(), e=NativeArray[FixedStruct]()
        byte 0x0000                                                                                    0x0000
        itxn_field ApplicationArgs
        // mutable_native_types/abi_call.py:267
        // arc4.abi_call(CallMe.native_arr_arg, native_arr, app_id=app)
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:269
        // txn = arc4.abi_call(CallMe.log_it, app_id=app)
        itxn_begin
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method log_it()void                                                                            Method(log_it()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        itxn NumLogs                                                                                   txn.NumLogs#0
        v-store txn.NumLogs#0
        // mutable_native_types/abi_call.py:270
        // assert txn.num_logs == 5, "expected 5 logs"
        v-load txn.NumLogs#0                                                                           txn.NumLogs#0
        int 5                                                                                          txn.NumLogs#0,5
        ==                                                                                             tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert // expected 5 logs
        // mutable_native_types/abi_call.py:271
        // assert txn.logs(0) == op.bzero(size_of(FixedStruct)), "expected fixed struct"
        itxna Logs 0                                                                                   tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        v-load fixed_struct#0                                                                          tmp%5#0,fixed_struct#0
        ==                                                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        assert // expected fixed struct
        // mutable_native_types/abi_call.py:272
        // assert txn.logs(1) == op.bzero(size_of(NestedStruct)), "expected nested struct"
        itxna Logs 1                                                                                   tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        v-load nested_struct#0                                                                         tmp%8#0,nested_struct#0
        ==                                                                                             tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        assert // expected nested struct
        // mutable_native_types/abi_call.py:276
        // assert txn.logs(2).length == dynamic_struct_len, "expected dynamic struct"
        itxna Logs 2                                                                                   tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                                tmp%14#0
        len                                                                                            tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        // mutable_native_types/abi_call.py:275
        // dynamic_struct_len += 2 * 3  # tail for c, d, e
        int 28                                                                                         tmp%15#0,28
        // mutable_native_types/abi_call.py:276
        // assert txn.logs(2).length == dynamic_struct_len, "expected dynamic struct"
        ==                                                                                             tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert // expected dynamic struct
        // mutable_native_types/abi_call.py:277
        // assert txn.logs(3) == op.bzero(size_of(FixedStruct3)), "expected fixed array"
        itxna Logs 3                                                                                   tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        v-load fixed_arr#0                                                                             tmp%17#0,fixed_arr#0
        ==                                                                                             tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                                tmp%19#0
        assert // expected fixed array
        // mutable_native_types/abi_call.py:278
        // assert txn.logs(4) == op.bzero(2), "expected fixed array"
        itxna Logs 4                                                                                   tmp%20#0
        v-store tmp%20#0
        int 2                                                                                          2
        bzero                                                                                          tmp%21#0
        v-store tmp%21#0
        v-load tmp%20#0                                                                                tmp%20#0
        v-load tmp%21#0                                                                                tmp%20#0,tmp%21#0
        ==                                                                                             tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                                                tmp%22#0
        assert // expected fixed array
        // mutable_native_types/abi_call.py:280
        // arc4.abi_call(CallMe.delete, app_id=app)
        itxn_begin
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        v-load create_txn.CreatedApplicationID#0                                                       create_txn.CreatedApplicationID#0
        itxn_field ApplicationID
        method delete()void                                                                            Method(delete()void)
        itxn_field ApplicationArgs
        int appl                                                                                       appl
        itxn_field TypeEnum
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        // mutable_native_types/abi_call.py:242
        // @arc4.abimethod()
        int 1                                                                                          1
        return


