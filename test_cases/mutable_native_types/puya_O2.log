debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), paths=['mutable_native_types'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.mutable_native_types.contract.add
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.add_payment
debug: Sealing block@0
mutable_native_types/contract.py:107:9 debug: encountered already materialized expression ('payments'), reusing result: "payments"
mutable_native_types/contract.py:108:9 debug: encountered already materialized expression ('num_payments'), reusing result: "num_payments"
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Sealing block@0
mutable_native_types/contract.py:113:9 debug: encountered already materialized expression (GlobalState['payments'][index]), reusing result: tmp%1#0
mutable_native_types/contract.py:113:9 debug: encountered already materialized expression (GlobalState['payments']), reusing result: maybe_value%1#0
mutable_native_types/contract.py:113:23 debug: encountered already materialized expression (index), reusing result: index#0
mutable_native_types/contract.py:113:9 debug: encountered already materialized expression ('payments'), reusing result: "payments"
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.create_storage
debug: Sealing block@0
mutable_native_types/contract.py:120:9 debug: encountered already materialized expression (BoxMapKey(prefix='box_map', key=box_key)), reusing result: box_prefixed_key%0#0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Sealing block@0
mutable_native_types/contract.py:133:9 debug: encountered already materialized expression ('nested'), reusing result: "nested"
mutable_native_types/contract.py:134:9 debug: encountered already materialized expression (hex<"70">), reusing result: 0x70
mutable_native_types/contract.py:135:9 debug: encountered already materialized expression (hex<"6C">), reusing result: 0x6c
mutable_native_types/contract.py:135:27 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%0#0
mutable_native_types/contract.py:136:9 debug: encountered already materialized expression ('box'), reusing result: "box"
mutable_native_types/contract.py:137:9 debug: encountered already materialized expression (BoxMapKey(prefix='box_map', key=box_key)), reusing result: box_prefixed_key%0#0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.struct_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.tup_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let result#3: uint64 = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#3: uint64 = φ(result#0 <- block@0) in block@0
debug: Added result#2 to Phi node: let result#3: uint64 = φ(result#0 <- block@0, result#2 <- block@1) in block@1
debug: Terminated block@2
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.mutable_native_types.contract.add
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: optimizing approval program of test_cases.mutable_native_types.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.__init__ for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.fixed_initialize for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.add_payment for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.increment_payment for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.create_storage for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.delete_storage for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.struct_arg for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.struct_return for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.tup_return for inlining
debug: marking single-use function test_cases.mutable_native_types.contract.Contract.calculate_sum for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: inlining call to test_cases.mutable_native_types.contract.Contract.__init__ in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable encoded_tuple_buffer%3#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%6#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable encoded_tuple_buffer%9#0
debug: Removing unused variable current_tail_offset%4#0
debug: Removing unused variable encoded_tuple_buffer%13#0
debug: Removing unused variable current_tail_offset%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%2#0) to val_as_bytes%2#0
debug: Simplified (concat 0x val_as_bytes%4#0) to val_as_bytes%4#0
debug: Simplified (concat 0x encoded_tuple_buffer%2#0) to encoded_tuple_buffer%2#0
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (len 0x) to 0u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (len "") to 0u
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x0000
debug: Simplified (concat 0x0000 "") to 0x0000
debug: Simplified (concat 0x val_as_bytes%6#0) to val_as_bytes%6#0
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0016
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 22u 2u) to 24u
debug: Simplified ((extract 6 2) as_bytes%3#0) to 0x0018
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 24u 2u) to 26u
debug: Simplified ((extract 6 2) as_bytes%4#0) to 0x001a
debug: Simplified (len 0x0000) to 2u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let as_bytes%1#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:81:14-21, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%2#0, encoded_tuple_buffer%4#0
debug: selected val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: val_as_bytes%4#0, encoded_tuple_buffer%7#0
debug: selected val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%2#0, encoded_tuple_buffer%10#0
debug: selected encoded_tuple_buffer%2#0 from equivalence set
debug: Found equivalence set: as_bytes%0#0, as_bytes%1#0
debug: selected as_bytes%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%6#0, encoded_tuple_buffer%14#0
debug: selected val_as_bytes%6#0 from equivalence set
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi encoded%0#0) to (extract_uint64 val#0 0u)
debug: Simplified (btoi encoded%1#0) to (extract_uint64 val#0 8u)
debug: Simplified (extract3 val#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) val#0) // on error: Index access is out of bounds
debug: Simplified (extract3 val#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) val#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.mutable_native_types.contract.Contract.__algopy_default_create in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:149:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.calculate_sum in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:145:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.tup_return in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:141:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.struct_return in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:131:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.struct_arg in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:122:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.delete_storage in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:115:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.create_storage in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:110:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.increment_payment in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:104:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.add_payment in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
mutable_native_types/contract.py:89:6 debug: inlining call to test_cases.mutable_native_types.contract.Contract.fixed_initialize in test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#2, encoded%0#3
debug: selected val_as_bytes%0#2 from equivalence set
debug: Found equivalence set: updated_target%0#2, arr_3#1
debug: selected arr_3#1 from equivalence set
debug: Found equivalence set: val_as_bytes%1#1, encoded%1#1
debug: selected val_as_bytes%1#1 from equivalence set
debug: Found equivalence set: updated_target%1#0, arr_3#2
debug: selected arr_3#2 from equivalence set
debug: Found equivalence set: val_as_bytes%2#1, encoded%2#0
debug: selected val_as_bytes%2#1 from equivalence set
debug: Found equivalence set: updated_target%2#0, arr_3#3, copy%0#2, copy%1#1, arr_3_from_fixed#0
debug: selected arr_3#3 from equivalence set
debug: Found equivalence set: array_data%0#0, arr_3_from_tuple#0
debug: selected arr_3_from_tuple#0 from equivalence set
debug: Found equivalence set: reinterpret_bytes[48]%0#0, pay#0, copy%0#1, assigned_value%0#3
debug: selected pay#0 from equivalence set
debug: Found equivalence set: tmp%15#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%16#0, amt#0
debug: selected amt#0 from equivalence set
debug: Found equivalence set: maybe_value%1#3, array_head_and_tail%0#0
debug: selected maybe_value%1#3 from equivalence set
debug: Found equivalence set: val_as_bytes%0#1, encoded%1#0
debug: selected val_as_bytes%0#1 from equivalence set
debug: Found equivalence set: updated_data%0#2, assigned_value%1#1
debug: selected updated_data%0#2 from equivalence set
debug: Found equivalence set: tmp%21#0, box_key#2
debug: selected box_key#2 from equivalence set
debug: Found equivalence set: maybe_value%0#4, copy%0#0
debug: selected maybe_value%0#4 from equivalence set
debug: Found equivalence set: maybe_value%1#2, copy%1#0
debug: selected maybe_value%1#2 from equivalence set
debug: Found equivalence set: tmp%2#2, copy%2#0, assigned_value%0#1
debug: selected tmp%2#2 from equivalence set
debug: Found equivalence set: tmp%26#0, box_key#1
debug: selected box_key#1 from equivalence set
debug: Found equivalence set: tmp%31#0, box_key#0
debug: selected box_key#0 from equivalence set
debug: Found equivalence set: reinterpret_bytes[16]%0#0, a#0, assigned_value%0#0, assigned_value%1#0, assigned_value%2#0, assigned_value%3#0, assigned_value%4#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%0#2, tmp%36#0
debug: selected tmp%0#2 from equivalence set
debug: Found equivalence set: item0%1#1, elements_to_encode%0#0
debug: selected item0%1#1 from equivalence set
debug: Found equivalence set: item1%1#1, elements_to_encode%1#0
debug: selected item1%1#1 from equivalence set
debug: Found equivalence set: item0%1#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: item1%1#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: result#3, to_encode%0#0
debug: selected result#3 from equivalence set
debug: Copy propagation made 33 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable assigned_value%0#4
debug: Removing unused variable assigned_value%1#2
debug: Removing unused variable assigned_value%2#1
debug: Removing unused variable array_length%0#1
debug: Removing unused variable array_length%0#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (replace3 arr_3#0 0u val_as_bytes%0#2) to 0x000000000000000000000000000000000000000000000000
debug: Simplified (replace3 0x000000000000000000000000000000000000000000000000 8u val_as_bytes%1#1) to 0x000000000000000000000000000000010000000000000000
debug: Simplified (replace3 0x000000000000000000000000000000010000000000000000 16u val_as_bytes%2#1) to 0x000000000000000000000000000000010000000000000002
debug: Simplified (concat 0x val_as_bytes%3#0) to val_as_bytes%3#0
debug: Simplified (concat val_as_bytes%3#0 val_as_bytes%4#0) to 0x00000000000000000000000000000001
debug: Simplified (concat 0x00000000000000000000000000000001 val_as_bytes%5#0) to 0x000000000000000000000000000000010000000000000002
debug: Simplified (concat 0x 0x000000000000000000000000000000010000000000000002) to 0x000000000000000000000000000000010000000000000002
debug: Simplified (== 0x000000000000000000000000000000010000000000000002 0x000000000000000000000000000000010000000000000002) to 1u
debug: Simplified (== 0x000000000000000000000000000000010000000000000002 0x000000000000000000000000000000010000000000000002) to 1u
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (btoi encoded%0#2) to (extract_uint64 tmp%1#3 40u)
debug: Simplified (== tmp%17#0 NoOp) to (! tmp%17#0)
debug: Simplified (== tmp%22#0 NoOp) to (! tmp%22#0)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified (== tmp%38#0 NoOp) to (! tmp%38#0)
debug: Simplified (btoi item0%0#1) to (extract_uint64 encoded%0#1 0u)
debug: Simplified (btoi item1%0#1) to (extract_uint64 encoded%0#1 8u)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (== tmp%43#0 NoOp) to (! tmp%43#0)
debug: Simplified (btoi item0%0#0) to (extract_uint64 encoded%0#0 0u)
debug: Simplified (btoi item1%0#0) to (extract_uint64 encoded%0#0 8u)
debug: Simplified (== tmp%49#0 0u) to (! tmp%49#0)
debug: Simplified (extract3 tmp%1#3 40u 8u) // on error: Index access is out of bounds to ((extract 40 8) tmp%1#3) // on error: Index access is out of bounds
debug: Simplified (replace3 tmp%1#3 40u val_as_bytes%0#1) to ((replace2 40) tmp%1#3 val_as_bytes%0#1)
debug: Simplified (extract3 maybe_value%2#2 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) maybe_value%2#2) // on error: Index access is out of bounds
debug: Simplified (replace3 maybe_value%3#1 0u tmp%2#2) to ((replace2 0) maybe_value%3#1 tmp%2#2)
debug: Simplified (replace3 maybe_value%0#3 0u a#0) to ((replace2 0) maybe_value%0#3 a#0)
debug: Simplified (replace3 maybe_value%1#1 0u a#0) to ((replace2 0) maybe_value%1#1 a#0)
debug: Simplified (replace3 maybe_value%2#1 0u a#0) to ((replace2 0) maybe_value%2#1 a#0)
debug: Simplified (replace3 maybe_value%3#0 0u a#0) to ((replace2 0) maybe_value%3#0 a#0)
debug: Simplified (replace3 maybe_value%4#0 0u a#0) to ((replace2 0) maybe_value%4#0 a#0)
debug: Simplified (extract3 maybe_value%0#2 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) maybe_value%0#2) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%0#1 32u 16u) // on error: Index access is out of bounds to ((extract 32 16) maybe_value%0#1) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#1 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) encoded%0#1) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#1 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) encoded%0#1) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%0#0 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) maybe_value%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%1#0 16u 16u) // on error: Index access is out of bounds to ((extract 16 16) maybe_value%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%2#0 32u 16u) // on error: Index access is out of bounds to ((extract 32 16) maybe_value%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) encoded%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) encoded%0#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@13 from switch tmp%48#0 {0u => block@14, * => block@15} to goto_nth [block@14][tmp%48#0] else goto block@15
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@13 from goto_nth [block@14][tmp%48#0] else goto block@15 to goto tmp%48#0 ? block@15 : block@14
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@38 with block@2 in block@39
debug: Merged linear block@38 into block@2
debug: Merged linear block@39 into block@2
debug: Replaced predecessor block@36 with block@3 in block@37
debug: Merged linear block@36 into block@3
debug: Merged linear block@37 into block@3
debug: Replaced predecessor block@34 with block@4 in block@35
debug: Merged linear block@34 into block@4
debug: Merged linear block@35 into block@4
debug: Replaced predecessor block@32 with block@5 in block@33
debug: Merged linear block@32 into block@5
debug: Merged linear block@33 into block@5
debug: Replaced predecessor block@30 with block@6 in block@31
debug: Merged linear block@30 into block@6
debug: Merged linear block@31 into block@6
debug: Replaced predecessor block@28 with block@7 in block@29
debug: Merged linear block@28 into block@7
debug: Merged linear block@29 into block@7
debug: Replaced predecessor block@26 with block@8 in block@27
debug: Merged linear block@26 into block@8
debug: Merged linear block@27 into block@8
debug: Replaced predecessor block@24 with block@9 in block@25
debug: Merged linear block@24 into block@9
debug: Merged linear block@25 into block@9
debug: Replaced predecessor block@20 with block@10 in block@22
debug: Replaced predecessor block@20 with block@10 in block@21
debug: Merged linear block@20 into block@10
debug: Merged linear block@23 into block@22
debug: Replaced predecessor block@12 with block@11 in block@17
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@18 with block@14 in block@19
debug: Merged linear block@18 into block@14
debug: Merged linear block@19 into block@14
debug: Replaced predecessor block@16 with block@15 in block@17
debug: Merged linear block@16 into block@15
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@11
debug: Removed empty block: block@15
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let val_as_bytes%3#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:92:8-28, ir_type=bytes[8], name='val_as_bytes%0', version=2),)
debug: Replacing redundant declaration let val_as_bytes%4#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:93:8-28, ir_type=bytes[8], name='val_as_bytes%1', version=1),)
debug: Replacing redundant declaration let val_as_bytes%5#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:94:8-28, ir_type=bytes[8], name='val_as_bytes%2', version=1),)
debug: Replacing redundant declaration let write_offset%0#0: uint64 = (* index#0 48u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:113:8-28, ir_type=uint64, name='item_offset%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#2, val_as_bytes%3#0, result%0#0
debug: selected val_as_bytes%0#2 from equivalence set
debug: Found equivalence set: val_as_bytes%1#1, val_as_bytes%4#0
debug: selected val_as_bytes%1#1 from equivalence set
debug: Found equivalence set: val_as_bytes%2#1, val_as_bytes%5#0
debug: selected val_as_bytes%2#1 from equivalence set
debug: Found equivalence set: item_offset%0#0, write_offset%0#0
debug: selected item_offset%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable encoded_tuple_buffer%3#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%6#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable encoded_tuple_buffer%9#0
debug: Removing unused variable current_tail_offset%4#0
debug: Removing unused variable encoded_tuple_buffer%13#0
debug: Removing unused variable current_tail_offset%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%2#0) to val_as_bytes%2#0
debug: Simplified (concat 0x val_as_bytes%4#0) to val_as_bytes%4#0
debug: Simplified (concat 0x encoded_tuple_buffer%2#0) to encoded_tuple_buffer%2#0
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (len 0x) to 0u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (len "") to 0u
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x0000
debug: Simplified (concat 0x0000 "") to 0x0000
debug: Simplified (concat 0x val_as_bytes%6#0) to val_as_bytes%6#0
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0016
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 22u 2u) to 24u
debug: Simplified ((extract 6 2) as_bytes%3#0) to 0x0018
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 24u 2u) to 26u
debug: Simplified ((extract 6 2) as_bytes%4#0) to 0x001a
debug: Simplified (len 0x0000) to 2u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let as_bytes%1#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:81:14-21, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%2#0, encoded_tuple_buffer%4#0
debug: selected val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: val_as_bytes%4#0, encoded_tuple_buffer%7#0
debug: selected val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%2#0, encoded_tuple_buffer%10#0
debug: selected encoded_tuple_buffer%2#0 from equivalence set
debug: Found equivalence set: as_bytes%0#0, as_bytes%1#0
debug: selected as_bytes%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%6#0, encoded_tuple_buffer%14#0
debug: selected val_as_bytes%6#0 from equivalence set
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded%0#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: updated_target%0#0, arr_3#1
debug: selected arr_3#1 from equivalence set
debug: Found equivalence set: val_as_bytes%1#0, encoded%1#0
debug: selected val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: updated_target%1#0, arr_3#2
debug: selected arr_3#2 from equivalence set
debug: Found equivalence set: val_as_bytes%2#0, encoded%2#0
debug: selected val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: updated_target%2#0, arr_3#3, copy%0#0, copy%1#0, arr_3_from_fixed#0
debug: selected arr_3#3 from equivalence set
debug: Found equivalence set: array_data%0#0, arr_3_from_tuple#0
debug: selected arr_3_from_tuple#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable assigned_value%0#0
debug: Removing unused variable assigned_value%1#0
debug: Removing unused variable assigned_value%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 arr_3#0 0u val_as_bytes%0#0) to 0x000000000000000000000000000000000000000000000000
debug: Simplified (replace3 0x000000000000000000000000000000000000000000000000 8u val_as_bytes%1#0) to 0x000000000000000000000000000000010000000000000000
debug: Simplified (replace3 0x000000000000000000000000000000010000000000000000 16u val_as_bytes%2#0) to 0x000000000000000000000000000000010000000000000002
debug: Simplified (concat 0x val_as_bytes%3#0) to val_as_bytes%3#0
debug: Simplified (concat val_as_bytes%3#0 val_as_bytes%4#0) to 0x00000000000000000000000000000001
debug: Simplified (concat 0x00000000000000000000000000000001 val_as_bytes%5#0) to 0x000000000000000000000000000000010000000000000002
debug: Simplified (concat 0x 0x000000000000000000000000000000010000000000000002) to 0x000000000000000000000000000000010000000000000002
debug: Simplified (== 0x000000000000000000000000000000010000000000000002 0x000000000000000000000000000000010000000000000002) to 1u
debug: Simplified (== 0x000000000000000000000000000000010000000000000002 0x000000000000000000000000000000010000000000000002) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let val_as_bytes%3#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:92:8-28, ir_type=bytes[8], name='val_as_bytes%0', version=0),)
debug: Replacing redundant declaration let val_as_bytes%4#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:93:8-28, ir_type=bytes[8], name='val_as_bytes%1', version=0),)
debug: Replacing redundant declaration let val_as_bytes%5#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:94:8-28, ir_type=bytes[8], name='val_as_bytes%2', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, val_as_bytes%3#0, result%0#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%1#0, val_as_bytes%4#0
debug: selected val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: val_as_bytes%2#0, val_as_bytes%5#0
debug: selected val_as_bytes%2#0 from equivalence set
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: pay#0, copy%0#0, assigned_value%0#0
debug: selected pay#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, array_head_and_tail%0#0
debug: selected maybe_value%1#0 from equivalence set
debug: Found equivalence set: val_as_bytes%0#0, encoded%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: updated_data%0#0, assigned_value%1#0
debug: selected updated_data%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi encoded%0#0) to (extract_uint64 tmp%1#0 40u)
debug: Simplified (extract3 tmp%1#0 40u 8u) // on error: Index access is out of bounds to ((extract 40 8) tmp%1#0) // on error: Index access is out of bounds
debug: Simplified (replace3 tmp%1#0 40u val_as_bytes%0#0) to ((replace2 40) tmp%1#0 val_as_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let write_offset%0#0: uint64 = (* index#0 48u) with copy of existing registers (Register(source_location=mutable_native_types/contract.py:113:8-28, ir_type=uint64, name='item_offset%0', version=0),)
debug: Found equivalence set: item_offset%0#0, write_offset%0#0
debug: selected item_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, copy%0#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, copy%1#0
debug: selected maybe_value%1#0 from equivalence set
debug: Found equivalence set: tmp%2#0, copy%2#0, assigned_value%0#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 maybe_value%2#0 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) maybe_value%2#0) // on error: Index access is out of bounds
debug: Simplified (replace3 maybe_value%3#0 0u tmp%2#0) to ((replace2 0) maybe_value%3#0 tmp%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a#0, assigned_value%0#0, assigned_value%1#0, assigned_value%2#0, assigned_value%3#0, assigned_value%4#0
debug: selected a#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 maybe_value%0#0 0u a#0) to ((replace2 0) maybe_value%0#0 a#0)
debug: Simplified (replace3 maybe_value%1#0 0u a#0) to ((replace2 0) maybe_value%1#0 a#0)
debug: Simplified (replace3 maybe_value%2#0 0u a#0) to ((replace2 0) maybe_value%2#0 a#0)
debug: Simplified (replace3 maybe_value%3#0 0u a#0) to ((replace2 0) maybe_value%3#0 a#0)
debug: Simplified (replace3 maybe_value%4#0 0u a#0) to ((replace2 0) maybe_value%4#0 a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 maybe_value%0#0 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) maybe_value%0#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi item0%0#0) to (extract_uint64 encoded%0#0 0u)
debug: Simplified (btoi item1%0#0) to (extract_uint64 encoded%0#0 8u)
debug: Simplified (extract3 maybe_value%0#0 32u 16u) // on error: Index access is out of bounds to ((extract 32 16) maybe_value%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) encoded%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) encoded%0#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: item0%1#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: item1%1#0, d#0
debug: selected d#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi item0%0#0) to (extract_uint64 encoded%0#0 0u)
debug: Simplified (btoi item1%0#0) to (extract_uint64 encoded%0#0 8u)
debug: Simplified (extract3 maybe_value%0#0 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) maybe_value%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%1#0 16u 16u) // on error: Index access is out of bounds to ((extract 16 16) maybe_value%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%2#0 32u 16u) // on error: Index access is out of bounds to ((extract 32 16) maybe_value%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) encoded%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 encoded%0#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) encoded%0#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable arr_3#0
debug: Removing unused variable val_as_bytes%0#2
debug: Removing unused variable arr_3#1
debug: Removing unused variable val_as_bytes%1#1
debug: Removing unused variable arr_3#2
debug: Removing unused variable val_as_bytes%2#1
debug: Removing unused variable arr_3#3
debug: Removing unused variable result%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable arr_3_from_tuple#0
debug: Removing unused variable tmp%0#9
debug: Removing unused variable tmp%1#4
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable encoded%0#2
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%41#0
debug: Removing unused variable item0%0#1
debug: Removing unused variable item1%0#1
debug: Removing unused variable tmp%46#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item1%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@14
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__init__
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.fixed_initialize
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.add_payment
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.increment_payment
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.create_storage
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.delete_storage
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.struct_arg
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.struct_return
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.tup_return
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.calculate_sum
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__ in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable length_uint16%0#0
debug: Removing unused variable encoded_value%0#0
debug: Removing unused variable length%1#0
debug: Removing unused variable length_uint16%1#0
debug: Removing unused variable encoded_value%1#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable current_tail_offset%5#0
debug: Removing unused variable as_bytes%3#0
debug: Removing unused variable offset_as_uint16%1#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable current_tail_offset%6#0
debug: Removing unused variable as_bytes%4#0
debug: Removing unused variable offset_as_uint16%2#0
debug: Removing unused variable data_length%2#0
debug: Removing unused variable tmp%1#2
debug: Removing unused variable tmp%6#1
debug: Removing unused variable arr_3#0
debug: Removing unused variable val_as_bytes%0#3
debug: Removing unused variable arr_3#1
debug: Removing unused variable val_as_bytes%1#2
debug: Removing unused variable arr_3#2
debug: Removing unused variable val_as_bytes%2#2
debug: Removing unused variable arr_3#3
debug: Removing unused variable result%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable arr_3_from_tuple#0
debug: Removing unused variable tmp%0#11
debug: Removing unused variable tmp%1#6
debug: Removing unused variable tmp%10#1
debug: Removing unused variable tmp%14#0
debug: Removing unused variable encoded%0#2
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%41#0
debug: Removing unused variable item0%0#1
debug: Removing unused variable item1%0#1
debug: Removing unused variable tmp%46#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item1%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@16
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#0
debug: Removing unused variable encoded%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable arr_3#0
debug: Removing unused variable val_as_bytes%0#2
debug: Removing unused variable arr_3#1
debug: Removing unused variable val_as_bytes%1#1
debug: Removing unused variable arr_3#2
debug: Removing unused variable val_as_bytes%2#1
debug: Removing unused variable arr_3#3
debug: Removing unused variable result%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable arr_3_from_tuple#0
debug: Removing unused variable tmp%0#8
debug: Removing unused variable tmp%1#4
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable encoded%0#2
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%41#0
debug: Removing unused variable item0%0#1
debug: Removing unused variable item1%0#1
debug: Removing unused variable tmp%46#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item1%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking simple function test_cases.mutable_native_types.contract.add for inlining (complexity=3 <= threshold=3)
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
mutable_native_types/contract.py:153:18 debug: inlining call to test_cases.mutable_native_types.contract.add in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
mutable_native_types/contract.py:153:33 debug: inlining call to test_cases.mutable_native_types.contract.add in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: fixed_a#0, val#0
debug: selected fixed_a#0 from equivalence set
debug: Found equivalence set: tmp%2#5, tmp%0#4
debug: selected tmp%2#5 from equivalence set
debug: Found equivalence set: fixed_b#0, val#1
debug: selected fixed_b#0 from equivalence set
debug: Found equivalence set: tmp%2#6, tmp%1#3
debug: selected tmp%2#6 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@20 with block@13 in block@21
debug: Merged linear block@20 into block@13
debug: Replaced predecessor block@21 with block@13 in block@22
debug: Merged linear block@21 into block@13
debug: Replaced predecessor block@22 with block@13 in block@23
debug: Merged linear block@22 into block@13
debug: Replaced predecessor block@23 with block@13 in block@15
debug: Replaced predecessor block@23 with block@13 in block@14
debug: Merged linear block@23 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.mutable_native_types.contract.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.mutable_native_types.contract.add
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.mutable_native_types.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.mutable_native_types.contract.Contract
debug: lowering array IR nodes in clear program of test_cases.mutable_native_types.contract.Contract
debug: optimizing approval program of test_cases.mutable_native_types.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.mutable_native_types.contract.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.mutable_native_types.contract.Contract
debug: auto reserving slots in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.mutable_native_types.contract.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing tmp%0#0 with [tmp%0#13, tmp%0#10, tmp%0#9, tmp%0#1]
debug: Coalescing tmp%0#2 with [tmp%0#3, tmp%0#11, tmp%0#12]
debug: Coalescing tmp%1#1 with [tmp%1#6, tmp%1#7]
debug: Coalescing val_as_bytes%0#0 with [val_as_bytes%0#2, val_as_bytes%0#1]
debug: Coalescing val_as_bytes%1#0 with [val_as_bytes%1#1]
debug: Coalescing encoded_tuple_buffer%2#0 with [encoded_tuple_buffer%2#1]
debug: Coalescing tmp%2#0 with [tmp%2#4, tmp%2#5]
debug: Coalescing tmp%3#0 with [tmp%3#1]
debug: Coalescing tmp%5#0 with [tmp%5#1]
debug: Coalescing val_as_bytes%2#0 with [val_as_bytes%2#1]
debug: Coalescing tmp%7#0 with [tmp%7#1]
debug: Coalescing tmp%9#0 with [tmp%9#1]
debug: Coalescing tmp%11#0 with [tmp%11#1]
debug: Coalescing tmp%2#1 with [tmp%2#3]
debug: Coalescing test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 with [test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#1, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#2, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#3, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#4, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#5, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#6, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#7, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#8, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#9, test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#10]
debug: Coalescing maybe_value%0#5 with [maybe_value%0#6]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#6, maybe_exists%0#5, maybe_exists%0#4, maybe_exists%0#3, maybe_exists%0#2, maybe_exists%0#1]
debug: Coalescing maybe_value%1#0 with [maybe_value%1#4, maybe_value%1#3, maybe_value%1#2, maybe_value%1#1]
debug: Coalescing maybe_exists%1#0 with [maybe_exists%1#4, maybe_exists%1#3, maybe_exists%1#2, maybe_exists%1#1]
debug: Coalescing maybe_exists%2#0 with [maybe_exists%2#3, maybe_exists%2#2, maybe_exists%2#1]
debug: Coalescing index_is_in_bounds%0#0 with [index_is_in_bounds%0#1]
debug: Coalescing updated_target%0#0 with [updated_target%0#1]
debug: Coalescing maybe_exists%3#0 with [maybe_exists%3#2, maybe_exists%3#1]
debug: Coalescing updated_data%0#0 with [updated_data%0#2, updated_data%0#1]
debug: Coalescing box_key#0 with [box_key#2, box_key#1]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#4, maybe_value%0#3, maybe_value%0#2, maybe_value%0#1]
debug: Coalescing tmp%0#6 with [tmp%0#8, tmp%0#7]
debug: Coalescing maybe_value%2#0 with [maybe_value%2#2, maybe_value%2#1]
debug: Coalescing encoded_value%0#1 with [encoded_value%0#3, encoded_value%0#2]
debug: Coalescing box_prefixed_key%0#0 with [box_prefixed_key%0#2, box_prefixed_key%0#1]
debug: Coalescing maybe_value%3#0 with [maybe_value%3#1]
debug: Coalescing encoded%0#0 with [encoded%0#1]
debug: Coalescing result#0 with [result#1, result#2, result#3]
debug: Coalescing resulted in 163 replacement/s
debug: Sequentializing parallel copies in test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 2
debug: Output IR to mutable_native_types/out_O2/Contract.ir/Contract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to mutable_native_types/out_O2/Contract.ir/Contract.clear.0.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_call___init__@1.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_call___init__@1.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_call___init__@1.ops[22]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_call___init__@1.ops[24]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_call___init__@1.ops[39]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_call___init__@1.ops[41]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_call___init__@1.ops[46]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_call___init__@1.ops[48]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_call___init__@1.ops[65]: 'l-store-copy encoded_tuple_buffer%11#0 0'
debug: Replaced main_call___init__@1.ops[67]: 'v-load encoded_tuple_buffer%11#0' with 'l-load encoded_tuple_buffer%11#0'
debug: Inserted main_call___init__@1.ops[87]: 'l-store-copy encoded_tuple_buffer%15#0 0'
debug: Replaced main_call___init__@1.ops[89]: 'v-load encoded_tuple_buffer%15#0' with 'l-load encoded_tuple_buffer%15#0'
debug: Inserted main_call___init__@1.ops[92]: 'l-store-copy encoded_tuple_buffer%16#0 0'
debug: Replaced main_call___init__@1.ops[94]: 'v-load encoded_tuple_buffer%16#0' with 'l-load encoded_tuple_buffer%16#0'
debug: Inserted main_call___init__@1.ops[97]: 'l-store-copy encoded_tuple_buffer%17#0 0'
debug: Replaced main_call___init__@1.ops[99]: 'v-load encoded_tuple_buffer%17#0' with 'l-load encoded_tuple_buffer%17#0'
debug: Inserted main_call___init__@1.ops[102]: 'l-store-copy encoded_tuple_buffer%18#0 0'
debug: Replaced main_call___init__@1.ops[104]: 'v-load encoded_tuple_buffer%18#0' with 'l-load encoded_tuple_buffer%18#0'
debug: Inserted main_call___init__@1.ops[107]: 'l-store-copy encoded_tuple_buffer%19#0 0'
debug: Replaced main_call___init__@1.ops[109]: 'v-load encoded_tuple_buffer%19#0' with 'l-load encoded_tuple_buffer%19#0'
debug: Inserted main_call___init__@1.ops[112]: 'l-store-copy encoded_tuple_buffer%20#0 0'
debug: Replaced main_call___init__@1.ops[114]: 'v-load encoded_tuple_buffer%20#0' with 'l-load encoded_tuple_buffer%20#0'
debug: Inserted main_call___init__@1.ops[9]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced main_call___init__@1.ops[12]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_call___init__@1.ops[34]: 'l-store-copy val_as_bytes%3#0 0'
debug: Replaced main_call___init__@1.ops[37]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted main_call___init__@1.ops[59]: 'l-store-copy val_as_bytes%5#0 0'
debug: Replaced main_call___init__@1.ops[62]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted main_call___init__@1.ops[73]: 'l-store-copy encoded_tuple_buffer%12#0 0'
debug: Replaced main_call___init__@1.ops[76]: 'v-load encoded_tuple_buffer%12#0' with 'l-load encoded_tuple_buffer%12#0'
debug: Inserted main_call___init__@1.ops[87]: 'l-store-copy val_as_bytes%7#0 0'
debug: Replaced main_call___init__@1.ops[90]: 'v-load val_as_bytes%7#0' with 'l-load val_as_bytes%7#0'
debug: Inserted main_call___init__@1.ops[122]: 'l-store-copy encoded_tuple_buffer%21#0 0'
debug: Replaced main_call___init__@1.ops[125]: 'v-load encoded_tuple_buffer%21#0' with 'l-load encoded_tuple_buffer%21#0'
debug: Inserted main_call___init__@1.ops[132]: 'l-store-copy materialized_values%0#0 0'
debug: Replaced main_call___init__@1.ops[135]: 'v-load materialized_values%0#0' with 'l-load materialized_values%0#0'
debug: Inserted main_call___init__@1.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_call___init__@1.ops[5]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_call___init__@1.ops[80]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_call___init__@1.ops[84]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_call___init__@1.ops[4]: 'l-store-copy tmp%1#1 1'
debug: Replaced main_call___init__@1.ops[9]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_call___init__@1.ops[8]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced main_call___init__@1.ops[14]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_call___init__@1.ops[31]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_call___init__@1.ops[36]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_call___init__@1.ops[35]: 'l-store-copy val_as_bytes%2#0 1'
debug: Replaced main_call___init__@1.ops[41]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted main_call___init__@1.ops[58]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_call___init__@1.ops[63]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_call___init__@1.ops[62]: 'l-store-copy val_as_bytes%4#0 1'
debug: Replaced main_call___init__@1.ops[68]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted main_call___init__@1.ops[89]: 'l-store-copy tmp%11#0 1'
debug: Replaced main_call___init__@1.ops[94]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_call___init__@1.ops[93]: 'l-store-copy val_as_bytes%6#0 1'
debug: Replaced main_call___init__@1.ops[99]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
debug: Inserted main_call___init__@1.ops[71]: 'l-store-copy encoded_tuple_buffer%8#0 0'
debug: Replaced main_call___init__@1.ops[79]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
debug: Inserted main_call___init__@1.ops[24]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_call___init__@1.ops[34]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_call___init__@1.ops[52]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_call___init__@1.ops[62]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_call___init__@1.ops[45]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced main_call___init__@1.ops[77]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted main_call___init__@1.ops[17]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_call___init__@1.ops[77]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_abi_routing@4.ops[12]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_fixed_initialize_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_fixed_initialize_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_fixed_initialize_route@5.ops[5]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_fixed_initialize_route@5.ops[7]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_fixed_initialize_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_fixed_initialize_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_fixed_initialize_route@5.ops[15]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_fixed_initialize_route@5.ops[17]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_add_payment_route@6.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_add_payment_route@6.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_add_payment_route@6.ops[5]: 'l-store-copy tmp%8#1 0'
debug: Replaced main_add_payment_route@6.ops[7]: 'v-load tmp%8#1' with 'l-load tmp%8#1'
debug: Inserted main_add_payment_route@6.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_add_payment_route@6.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_add_payment_route@6.ops[26]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_add_payment_route@6.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_add_payment_route@6.ops[47]: 'l-store-copy index_is_in_bounds%0#0 0'
debug: Replaced main_add_payment_route@6.ops[49]: 'v-load index_is_in_bounds%0#0' with 'l-load index_is_in_bounds%0#0'
debug: Inserted main_add_payment_route@6.ops[78]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_add_payment_route@6.ops[80]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_add_payment_route@6.ops[19]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_add_payment_route@6.ops[22]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_add_payment_route@6.ops[34]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_add_payment_route@6.ops[37]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_add_payment_route@6.ops[42]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced main_add_payment_route@6.ops[45]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted main_add_payment_route@6.ops[57]: 'l-store-copy write_offset%0#1 0'
debug: Replaced main_add_payment_route@6.ops[60]: 'v-load write_offset%0#1' with 'l-load write_offset%0#1'
debug: Inserted main_add_payment_route@6.ops[63]: 'l-store-copy updated_target%0#0 0'
debug: Replaced main_add_payment_route@6.ops[66]: 'v-load updated_target%0#0' with 'l-load updated_target%0#0'
debug: Inserted main_add_payment_route@6.ops[71]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced main_add_payment_route@6.ops[74]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_add_payment_route@6.ops[79]: 'l-store-copy materialized_values%0#1 0'
debug: Replaced main_add_payment_route@6.ops[82]: 'v-load materialized_values%0#1' with 'l-load materialized_values%0#1'
debug: Inserted main_add_payment_route@6.ops[21]: 'l-store-copy maybe_value%0#5 1'
debug: Replaced main_add_payment_route@6.ops[25]: 'v-load maybe_value%0#5' with 'l-load maybe_value%0#5'
debug: Inserted main_add_payment_route@6.ops[45]: 'l-store-copy maybe_value%2#3 1'
debug: Replaced main_add_payment_route@6.ops[49]: 'v-load maybe_value%2#3' with 'l-load maybe_value%2#3'
debug: Inserted main_add_payment_route@6.ops[75]: 'l-store-copy maybe_value%3#2 1'
debug: Replaced main_add_payment_route@6.ops[79]: 'v-load maybe_value%3#2' with 'l-load maybe_value%3#2'
debug: Inserted main_add_payment_route@6.ops[50]: 'l-store-copy maybe_value%2#3 0'
debug: Replaced main_add_payment_route@6.ops[57]: 'v-load maybe_value%2#3' with 'l-load maybe_value%2#3'
debug: Inserted main_add_payment_route@6.ops[37]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_add_payment_route@6.ops[63]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_add_payment_route@6.ops[15]: 'l-store-copy pay#0 0'
debug: Replaced main_add_payment_route@6.ops[66]: 'v-load pay#0' with 'l-load pay#0'
debug: Inserted main_increment_payment_route@7.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_increment_payment_route@7.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_increment_payment_route@7.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_increment_payment_route@7.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_increment_payment_route@7.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_increment_payment_route@7.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_increment_payment_route@7.ops[15]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[17]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_increment_payment_route@7.ops[21]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced main_increment_payment_route@7.ops[23]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted main_increment_payment_route@7.ops[36]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[38]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_increment_payment_route@7.ops[55]: 'l-store-copy tmp%1#5 0'
debug: Replaced main_increment_payment_route@7.ops[57]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_increment_payment_route@7.ops[60]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_increment_payment_route@7.ops[62]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_increment_payment_route@7.ops[65]: 'l-store-copy assigned_value%0#2 0'
debug: Replaced main_increment_payment_route@7.ops[67]: 'v-load assigned_value%0#2' with 'l-load assigned_value%0#2'
debug: Inserted main_increment_payment_route@7.ops[77]: 'l-store-copy index_is_in_bounds%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[79]: 'v-load index_is_in_bounds%0#0' with 'l-load index_is_in_bounds%0#0'
debug: Inserted main_increment_payment_route@7.ops[90]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[92]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_increment_payment_route@7.ops[29]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_increment_payment_route@7.ops[32]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_increment_payment_route@7.ops[44]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_increment_payment_route@7.ops[47]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_increment_payment_route@7.ops[52]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[55]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_increment_payment_route@7.ops[72]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[75]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_increment_payment_route@7.ops[89]: 'l-store-copy updated_target%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[92]: 'v-load updated_target%0#0' with 'l-load updated_target%0#0'
debug: Inserted main_increment_payment_route@7.ops[31]: 'l-store-copy maybe_value%0#5 1'
debug: Replaced main_increment_payment_route@7.ops[36]: 'v-load maybe_value%0#5' with 'l-load maybe_value%0#5'
debug: Inserted main_increment_payment_route@7.ops[47]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_increment_payment_route@7.ops[56]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_increment_payment_route@7.ops[79]: 'l-store-copy updated_data%0#0 0'
debug: Replaced main_increment_payment_route@7.ops[90]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted main_increment_payment_route@7.ops[63]: 'l-store-copy tmp%1#5 0'
debug: Replaced main_increment_payment_route@7.ops[77]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_increment_payment_route@7.ops[19]: 'l-store-copy index#0 0'
debug: Replaced main_increment_payment_route@7.ops[36]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_increment_payment_route@7.ops[37]: 'l-store-copy index#0 1'
debug: Replaced main_increment_payment_route@7.ops[53]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_increment_payment_route@7.ops[54]: 'l-store-copy index#0 1'
debug: Replaced main_increment_payment_route@7.ops[85]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_increment_payment_route@7.ops[60]: 'l-store-copy maybe_value%1#0 2'
debug: Replaced main_increment_payment_route@7.ops[93]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_increment_payment_route@7.ops[62]: 'l-store-copy item_offset%0#0 3'
debug: Replaced main_increment_payment_route@7.ops[95]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_increment_payment_route@7.ops[26]: 'l-store-copy amt#0 1'
debug: Replaced main_increment_payment_route@7.ops[75]: 'v-load amt#0' with 'l-load amt#0'
debug: Inserted main_create_storage_route@8.ops[1]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_create_storage_route@8.ops[3]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_create_storage_route@8.ops[5]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_create_storage_route@8.ops[7]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_create_storage_route@8.ops[10]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_create_storage_route@8.ops[12]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_create_storage_route@8.ops[15]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced main_create_storage_route@8.ops[17]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted main_create_storage_route@8.ops[38]: 'l-store-copy tmp%0#6 0'
debug: Replaced main_create_storage_route@8.ops[40]: 'v-load tmp%0#6' with 'l-load tmp%0#6'
debug: Inserted main_create_storage_route@8.ops[47]: 'l-store-copy tmp%1#4 0'
debug: Replaced main_create_storage_route@8.ops[49]: 'v-load tmp%1#4' with 'l-load tmp%1#4'
debug: Inserted main_create_storage_route@8.ops[67]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced main_create_storage_route@8.ops[69]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted main_create_storage_route@8.ops[83]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_create_storage_route@8.ops[85]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_create_storage_route@8.ops[23]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_create_storage_route@8.ops[26]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_create_storage_route@8.ops[34]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_create_storage_route@8.ops[37]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_create_storage_route@8.ops[56]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced main_create_storage_route@8.ops[59]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted main_create_storage_route@8.ops[66]: 'l-store-copy encoded_value%0#1 0'
debug: Replaced main_create_storage_route@8.ops[69]: 'v-load encoded_value%0#1' with 'l-load encoded_value%0#1'
debug: Inserted main_create_storage_route@8.ops[75]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced main_create_storage_route@8.ops[78]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_create_storage_route@8.ops[83]: 'l-store-copy updated_data%0#0 0'
debug: Replaced main_create_storage_route@8.ops[86]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted main_create_storage_route@8.ops[58]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced main_create_storage_route@8.ops[62]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_create_storage_route@8.ops[78]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced main_create_storage_route@8.ops[82]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted main_create_storage_route@8.ops[25]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_create_storage_route@8.ops[30]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_create_storage_route@8.ops[37]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_create_storage_route@8.ops[46]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_create_storage_route@8.ops[77]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced main_create_storage_route@8.ops[90]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted main_create_storage_route@8.ops[66]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_create_storage_route@8.ops[87]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_create_storage_route@8.ops[19]: 'l-store-copy box_key#0 0'
debug: Replaced main_create_storage_route@8.ops[69]: 'v-load box_key#0' with 'l-load box_key#0'
debug: Inserted main_delete_storage_route@9.ops[1]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_delete_storage_route@9.ops[3]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_delete_storage_route@9.ops[5]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_delete_storage_route@9.ops[7]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_delete_storage_route@9.ops[10]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_delete_storage_route@9.ops[12]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_delete_storage_route@9.ops[15]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced main_delete_storage_route@9.ops[17]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted main_delete_storage_route@9.ops[23]: 'l-store-copy tmp%0#6 0'
debug: Replaced main_delete_storage_route@9.ops[25]: 'v-load tmp%0#6' with 'l-load tmp%0#6'
debug: Inserted main_delete_storage_route@9.ops[37]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced main_delete_storage_route@9.ops[39]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted main_delete_storage_route@9.ops[43]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_delete_storage_route@9.ops[45]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_delete_storage_route@9.ops[33]: 'l-store-copy encoded_value%0#1 0'
debug: Replaced main_delete_storage_route@9.ops[36]: 'v-load encoded_value%0#1' with 'l-load encoded_value%0#1'
debug: Inserted main_delete_storage_route@9.ops[19]: 'l-store-copy box_key#0 0'
debug: Replaced main_delete_storage_route@9.ops[32]: 'v-load box_key#0' with 'l-load box_key#0'
debug: Inserted main_struct_arg_route@10.ops[1]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_struct_arg_route@10.ops[3]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_struct_arg_route@10.ops[5]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_struct_arg_route@10.ops[7]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_struct_arg_route@10.ops[10]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_struct_arg_route@10.ops[12]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_struct_arg_route@10.ops[15]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced main_struct_arg_route@10.ops[17]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted main_struct_arg_route@10.ops[51]: 'l-store-copy tmp%0#6 0'
debug: Replaced main_struct_arg_route@10.ops[53]: 'v-load tmp%0#6' with 'l-load tmp%0#6'
debug: Inserted main_struct_arg_route@10.ops[88]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced main_struct_arg_route@10.ops[90]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted main_struct_arg_route@10.ops[104]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_struct_arg_route@10.ops[106]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_struct_arg_route@10.ops[25]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_struct_arg_route@10.ops[28]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_struct_arg_route@10.ops[33]: 'l-store-copy updated_data%0#0 0'
debug: Replaced main_struct_arg_route@10.ops[36]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted main_struct_arg_route@10.ops[41]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_struct_arg_route@10.ops[44]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_struct_arg_route@10.ops[49]: 'l-store-copy updated_data%1#0 0'
debug: Replaced main_struct_arg_route@10.ops[52]: 'v-load updated_data%1#0' with 'l-load updated_data%1#0'
debug: Inserted main_struct_arg_route@10.ops[61]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced main_struct_arg_route@10.ops[64]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted main_struct_arg_route@10.ops[76]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced main_struct_arg_route@10.ops[79]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_struct_arg_route@10.ops[84]: 'l-store-copy updated_data%3#0 0'
debug: Replaced main_struct_arg_route@10.ops[87]: 'v-load updated_data%3#0' with 'l-load updated_data%3#0'
debug: Inserted main_struct_arg_route@10.ops[91]: 'l-store-copy encoded_value%0#1 0'
debug: Replaced main_struct_arg_route@10.ops[94]: 'v-load encoded_value%0#1' with 'l-load encoded_value%0#1'
debug: Inserted main_struct_arg_route@10.ops[100]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced main_struct_arg_route@10.ops[103]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted main_struct_arg_route@10.ops[108]: 'l-store-copy updated_data%4#0 0'
debug: Replaced main_struct_arg_route@10.ops[111]: 'v-load updated_data%4#0' with 'l-load updated_data%4#0'
debug: Inserted main_struct_arg_route@10.ops[27]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_struct_arg_route@10.ops[31]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_struct_arg_route@10.ops[44]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_struct_arg_route@10.ops[48]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_struct_arg_route@10.ops[65]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced main_struct_arg_route@10.ops[69]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_struct_arg_route@10.ops[72]: 'l-store-copy updated_data%2#0 0'
debug: Replaced main_struct_arg_route@10.ops[76]: 'v-load updated_data%2#0' with 'l-load updated_data%2#0'
debug: Inserted main_struct_arg_route@10.ops[82]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced main_struct_arg_route@10.ops[86]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted main_struct_arg_route@10.ops[107]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced main_struct_arg_route@10.ops[111]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted main_struct_arg_route@10.ops[21]: 'l-store-copy a#0 0'
debug: Replaced main_struct_arg_route@10.ops[33]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_struct_arg_route@10.ops[105]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced main_struct_arg_route@10.ops[118]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted main_struct_arg_route@10.ops[61]: 'l-store-copy tmp%0#6 0'
debug: Replaced main_struct_arg_route@10.ops[76]: 'v-load tmp%0#6' with 'l-load tmp%0#6'
debug: Inserted main_struct_arg_route@10.ops[34]: 'l-store-copy a#0 1'
debug: Replaced main_struct_arg_route@10.ops[51]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_struct_arg_route@10.ops[74]: 'l-store-copy a#0 2'
debug: Replaced main_struct_arg_route@10.ops[91]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_struct_arg_route@10.ops[52]: 'l-store-copy a#0 1'
debug: Replaced main_struct_arg_route@10.ops[74]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_struct_arg_route@10.ops[93]: 'l-store-copy a#0 1'
debug: Replaced main_struct_arg_route@10.ops[119]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_struct_arg_route@10.ops[19]: 'l-store-copy box_key#0 0'
debug: Replaced main_struct_arg_route@10.ops[101]: 'v-load box_key#0' with 'l-load box_key#0'
debug: Inserted main_struct_return_route@11.ops[1]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_struct_return_route@11.ops[3]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_struct_return_route@11.ops[5]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_struct_return_route@11.ops[7]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_struct_return_route@11.ops[10]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_struct_return_route@11.ops[12]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_struct_return_route@11.ops[27]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_struct_return_route@11.ops[29]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_struct_return_route@11.ops[32]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_struct_return_route@11.ops[34]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_struct_return_route@11.ops[17]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_struct_return_route@11.ops[20]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_struct_return_route@11.ops[24]: 'l-store-copy tmp%0#5 0'
debug: Replaced main_struct_return_route@11.ops[27]: 'v-load tmp%0#5' with 'l-load tmp%0#5'
debug: Inserted main_struct_return_route@11.ops[19]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_struct_return_route@11.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_tup_return_route@12.ops[1]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_tup_return_route@12.ops[3]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_tup_return_route@12.ops[5]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_tup_return_route@12.ops[7]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_tup_return_route@12.ops[10]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_tup_return_route@12.ops[12]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_tup_return_route@12.ops[23]: 'l-store-copy encoded%0#0 0'
debug: Replaced main_tup_return_route@12.ops[25]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted main_tup_return_route@12.ops[46]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_tup_return_route@12.ops[48]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_tup_return_route@12.ops[51]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_tup_return_route@12.ops[53]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_tup_return_route@12.ops[17]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_tup_return_route@12.ops[20]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_tup_return_route@12.ops[39]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced main_tup_return_route@12.ops[42]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_tup_return_route@12.ops[44]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_tup_return_route@12.ops[47]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_tup_return_route@12.ops[19]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_tup_return_route@12.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_tup_return_route@12.ops[28]: 'l-store-copy encoded%0#0 0'
debug: Replaced main_tup_return_route@12.ops[32]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted main_tup_return_route@12.ops[35]: 'l-store-copy item1%1#1 0'
debug: Replaced main_tup_return_route@12.ops[40]: 'v-load item1%1#1' with 'l-load item1%1#1'
debug: Inserted main_tup_return_route@12.ops[39]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced main_tup_return_route@12.ops[45]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_tup_return_route@12.ops[31]: 'l-store-copy item0%1#1 1'
debug: Replaced main_tup_return_route@12.ops[38]: 'v-load item0%1#1' with 'l-load item0%1#1'
debug: Inserted main_calculate_sum_route@13.ops[1]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_calculate_sum_route@13.ops[3]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_calculate_sum_route@13.ops[5]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_calculate_sum_route@13.ops[7]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_calculate_sum_route@13.ops[10]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_calculate_sum_route@13.ops[12]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_calculate_sum_route@13.ops[61]: 'l-store-copy result#0 0'
debug: Replaced main_calculate_sum_route@13.ops[63]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_calculate_sum_route@13.ops[17]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_calculate_sum_route@13.ops[20]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_calculate_sum_route@13.ops[28]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_calculate_sum_route@13.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_calculate_sum_route@13.ops[43]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_calculate_sum_route@13.ops[46]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_calculate_sum_route@13.ops[56]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_calculate_sum_route@13.ops[59]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_calculate_sum_route@13.ops[61]: 'l-store-copy tmp%2#6 0'
debug: Replaced main_calculate_sum_route@13.ops[64]: 'v-load tmp%2#6' with 'l-load tmp%2#6'
debug: Inserted main_calculate_sum_route@13.ops[19]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_calculate_sum_route@13.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_calculate_sum_route@13.ops[31]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_calculate_sum_route@13.ops[35]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_calculate_sum_route@13.ops[73]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_calculate_sum_route@13.ops[77]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_calculate_sum_route@13.ops[39]: 'l-store-copy fixed_a#0 0'
debug: Replaced main_calculate_sum_route@13.ops[43]: 'v-load fixed_a#0' with 'l-load fixed_a#0'
debug: Inserted main_calculate_sum_route@13.ops[53]: 'l-store-copy fixed_b#0 0'
debug: Replaced main_calculate_sum_route@13.ops[57]: 'v-load fixed_b#0' with 'l-load fixed_b#0'
debug: Inserted main_calculate_sum_route@13.ops[73]: 'l-store-copy result#0 0'
debug: Replaced main_calculate_sum_route@13.ops[78]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_calculate_sum_route@13.ops[42]: 'l-store-copy tmp%0#2 1'
debug: Replaced main_calculate_sum_route@13.ops[49]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_calculate_sum_route@13.ops[57]: 'l-store-copy tmp%0#2 1'
debug: Replaced main_calculate_sum_route@13.ops[64]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_calculate_sum_route@13.ops[25]: 'l-store-copy fixed_a#0 0'
debug: Replaced main_calculate_sum_route@13.ops[39]: 'v-load fixed_a#0' with 'l-load fixed_a#0'
debug: Inserted main_calculate_sum_route@13.ops[38]: 'l-store-copy fixed_b#0 1'
debug: Replaced main_calculate_sum_route@13.ops[55]: 'v-load fixed_b#0' with 'l-load fixed_b#0'
debug: Inserted main_calculate_sum_route@13.ops[54]: 'l-store-copy tmp%2#0 1'
debug: Replaced main_calculate_sum_route@13.ops[72]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_if_body@14.ops[9]: 'l-store-copy encoded%0#0 0'
debug: Replaced main_if_body@14.ops[11]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted main_if_body@14.ops[22]: 'l-store-copy result#0 0'
debug: Replaced main_if_body@14.ops[24]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_if_body@14.ops[27]: 'l-store-copy result#0 0'
debug: Replaced main_if_body@14.ops[29]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_if_body@14.ops[3]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced main_if_body@14.ops[6]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted main_if_body@14.ops[5]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced main_if_body@14.ops[9]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_if_body@14.ops[14]: 'l-store-copy encoded%0#0 0'
debug: Replaced main_if_body@14.ops[18]: 'v-load encoded%0#0' with 'l-load encoded%0#0'
debug: Inserted main_if_body@14.ops[17]: 'l-store-copy c#0 1'
debug: Replaced main_if_body@14.ops[24]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_if_body@14.ops[22]: 'l-store-copy d#0 1'
debug: Replaced main_if_body@14.ops[30]: 'v-load d#0' with 'l-load d#0'
debug: Inserted main_after_if_else@15.ops[1]: 'l-store-copy result#0 0'
debug: Replaced main_after_if_else@15.ops[3]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_after_if_else@15.ops[9]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_after_if_else@15.ops[11]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_after_if_else@15.ops[14]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@15.ops[16]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@15.ops[5]: 'l-store-copy val_as_bytes%2#0 0'
debug: Replaced main_after_if_else@15.ops[8]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted main_bare_routing@16.ops[1]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_bare_routing@16.ops[3]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main___algopy_default_create@17.ops[1]: 'l-store-copy tmp%49#0 0'
debug: Replaced main___algopy_default_create@17.ops[3]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main___algopy_default_create@17.ops[5]: 'l-store-copy tmp%50#0 0'
debug: Replaced main___algopy_default_create@17.ops[7]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main___algopy_default_create@17.ops[10]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@17.ops[12]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@18.ops[1]: 'l-store-copy test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@18.ops[3]: 'v-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__%0#0'
debug: Found 5 edge set/s for test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_fixed_initialize_route@5 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_add_payment_route@6 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_increment_payment_route@7 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_create_storage_route@8 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_delete_storage_route@9 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_struct_arg_route@10 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_struct_return_route@11 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_tup_return_route@12 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_after_if_else@15 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main___algopy_default_create@17 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: shared x-stack for main_after_if_else@18 -> main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19: tmp%0#0
debug: test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init f-stack entry: ['result#0', 'result#6']
debug: test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init f-stack on first store: []
debug: optimizing TEAL subroutine ops test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine blocks test_cases.mutable_native_types.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: replacing `b main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_inlined_test_cases.mutable_native_types.contract.Contract.__puya_arc4_router__@19 into main_after_if_else@18
debug: inlining single reference block main_if_body@14 into main_calculate_sum_route@13
debug: inlining single reference block main___algopy_default_create@17 into main_bare_routing@16
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_after_if_else@18
debug: removing explicit jump to fall-through block main_after_if_else@15
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing mutable_native_types/out_O2/Contract.approval.teal
info: Writing mutable_native_types/out_O2/Contract.clear.teal
info: Writing mutable_native_types/out_O2/Contract.approval.bin
info: Writing mutable_native_types/out_O2/Contract.clear.bin
info: Writing mutable_native_types/out_O2/Contract.approval.puya.map
info: Writing mutable_native_types/out_O2/Contract.clear.puya.map