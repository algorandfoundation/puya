{
    "name": "ValidationContract",
    "structs": {},
    "methods": [
        {
            "name": "validate_uint64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint8",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint512",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_ufixed64",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint8_arr",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_uint8_arr3",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bool",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_byte",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_string",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_address",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bool_arr",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_bool_arr3",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_tuple",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_tuple",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_struct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_struct_arr",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_static_struct_arr3",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct_arr",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_dynamic_struct_arr3",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_static_struct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_dynamic_struct",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_static_struct_arr",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_static_struct_arr3",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_dynamic_struct_arr",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_native_dynamic_struct_arr3",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        19
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        227
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        591,
                        692,
                        901,
                        1006
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        575,
                        676,
                        885,
                        990
                    ],
                    "errorMessage": "invalid array encoding"
                },
                {
                    "pc": [
                        289,
                        343,
                        360,
                        390,
                        452,
                        495,
                        511,
                        544,
                        626,
                        727,
                        793,
                        813,
                        854,
                        936,
                        1041
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        320
                    ],
                    "errorMessage": "invalid number of bytes for arc4.bool"
                },
                {
                    "pc": [
                        402
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.bool>"
                },
                {
                    "pc": [
                        295,
                        349,
                        366
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        647
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<test_cases.arc4_validation.contract.ARC4DynamicStruct>"
                },
                {
                    "pc": [
                        519
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<test_cases.arc4_validation.contract.ARC4StaticStruct>"
                },
                {
                    "pc": [
                        957
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<test_cases.arc4_validation.contract.NativeDynamicStruct>"
                },
                {
                    "pc": [
                        821
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<test_cases.arc4_validation.contract.NativeStaticStruct>"
                },
                {
                    "pc": [
                        414
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.bool, 3>"
                },
                {
                    "pc": [
                        379
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                },
                {
                    "pc": [
                        308
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 3>"
                },
                {
                    "pc": [
                        747
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<test_cases.arc4_validation.contract.ARC4DynamicStruct, 3>"
                },
                {
                    "pc": [
                        532
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<test_cases.arc4_validation.contract.ARC4StaticStruct, 3>"
                },
                {
                    "pc": [
                        1061
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<test_cases.arc4_validation.contract.NativeDynamicStruct, 3>"
                },
                {
                    "pc": [
                        838
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<test_cases.arc4_validation.contract.NativeStaticStruct, 3>"
                },
                {
                    "pc": [
                        457
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>"
                },
                {
                    "pc": [
                        426
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint8>"
                },
                {
                    "pc": [
                        278
                    ],
                    "errorMessage": "invalid number of bytes for arc4.ufixed64x2"
                },
                {
                    "pc": [
                        265
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint512"
                },
                {
                    "pc": [
                        240
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        252,
                        332
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint8"
                },
                {
                    "pc": [
                        500
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.arc4_validation.contract.ARC4DynamicStruct"
                },
                {
                    "pc": [
                        469
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.arc4_validation.contract.ARC4StaticStruct"
                },
                {
                    "pc": [
                        798
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.arc4_validation.contract.NativeDynamicStruct"
                },
                {
                    "pc": [
                        763
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.arc4_validation.contract.NativeStaticStruct"
                },
                {
                    "pc": [
                        442,
                        485,
                        620,
                        721,
                        783,
                        930,
                        1035
                    ],
                    "errorMessage": "invalid tail pointer at index 2 of (uint64,uint8,(len+utf8[]))"
                },
                {
                    "pc": [
                        583,
                        893
                    ],
                    "errorMessage": "invalid tail pointer for (len+(uint64,uint8,(len+utf8[]))[])"
                },
                {
                    "pc": [
                        684,
                        998
                    ],
                    "errorMessage": "invalid tail pointer for (uint64,uint8,(len+utf8[]))[3]"
                },
                {
                    "pc": [
                        437,
                        480,
                        615,
                        716,
                        778,
                        925,
                        1030
                    ],
                    "errorMessage": "invalid tuple encoding"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQACCSYBAXYxG0EAzDEZFEQxGESCGwRVe4/fBGGXu7EEpRz5QQSOzukPBELr9xwElvpQQAQGBM8bBA/RbZgEDpf4tAQ/aLfRBBdbpa4EAtVq/AQcRw3ABCSPaWAE8AxEmgTS7kNRBF+eE/oENNDOrwSKz+lNBABMgjUEQup8gQTCIdprBFZtirUE69NneAR2kP5rBPch5+gEfJD24jYaAI4bAAsAGAAkADEAPgBPAFwAaAB0AIUAlgCjALoAxgDSAPEA/QEcAS8BPAGvAhMCIwJGAl0CbgLlADEZFDEYFBBEIkM2GgFXAgAVgQgSRCJDNhoBVwIAFSISRCJDNhoBVwIAFYFAEkQiQzYaAVcCABWBCBJEIkM2GgFXAgBJI1kkCEwVEkQiQzYaAVcCABWBAxJEIkM2GgFXAgAVIhJEIkM2GgFXAgAVIhJEIkM2GgFXAgBJI1kkCEwVEkQiQzYaAVcCAEkjWSQITBUSRCJDNhoBVwIAFYEgEkQiQzYaAVcCAEkjWYEHCIEICiQITBUSRCJDNhoBVwIAFSISRCJDNhoBVwIAFSUSRCJDNhoBVwIASSVZSYELEkRLARVOAksCUiNZgQ0IEkQiQzYaAVcCABUlEkQiQzYaAVcCAEklWUmBCxJESwEVTgJLAlIjWYENCBJEIkM2GgFXAgBJI1klCyQITBUSRCJDNhoBVwIAFYEbEkQiQzYaAUlXAgBJI1lJTgMkC04CFUxXBAAjSUsFDEEAS0cCJAtLA0lOA0xZSUsHSU4FEkRMIghLCEsBCUsDFUsCJAtLBUxZTwJNTwNPA08CUkklWUmBCxJESwEVUiNZgQ0ITwIIRQVFAUL/rksDJAhLAxJEIkM2GgFXAgCBBiNJgQMMQQBLRwIkC0sESU4DTFlJSwVJTgUSREwiCIEDSwEJSwMVSwIkC0sFTFlPAk1PA08DTwJSSSVZSYELEkRLARVSI1mBDQhPAghFA0UBQv+uSwIVSwISRCJDNhoBVwIAKEsBZxUlEkQiQzYaAVcCAChLAWdJJVlJgQsSREsBFU4CSwJSI1mBDQgSRCJDNhoBVwIAKEsBZ0kjWSULJAhMFRJEIkM2GgFXAgAoSwFnFYEbEkQiQzYaAUlXAgAoSwFnSSNZSU4DJAtOAhVMVwQAI0lLBQxBAEtHAiQLSwNJTgNMWUlLB0lOBRJETCIISwhLAQlLAxVLAiQLSwVMWU8CTU8DTwNPAlJJJVlJgQsSREsBFVIjWYENCE8CCEUFRQFC/65LAyQISwMSRCJDNhoBVwIASShMZ4EGI0mBAwxBAEtHAiQLSwRJTgNMWUlLBUlOBRJETCIIgQNLAQlLAxVLAiQLSwVMWU8CTU8DTwNPAlJJJVlJgQsSREsBFVIjWYENCE8CCEUDRQFC/65LAhVLAhJEIkM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}