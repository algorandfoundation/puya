contract ValidationContract
{
  method_resolution_order: (
    algopy.arc4.ARC4Contract,
    algopy._contract.Contract,
  )
  
  subroutine algopy.arc4.ARC4Contract.approval_program(): bool
  {
    return arc4_router()
  }
  
  subroutine algopy.arc4.ARC4Contract.clear_state_program(): bool
  {
    return true
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_uint64(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.uint64>(value)), arc4.uint64)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_uint8(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.uint8>(value)), arc4.uint8)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_uint512(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.uint512>(value)), arc4.uint512)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_ufixed64(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.ufixed64x2>(value)), arc4.ufixed64x2)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_uint8_arr(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.dynamic_array<arc4.uint8>>(value)), arc4.dynamic_array<arc4.uint8>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_uint8_arr3(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.static_array<arc4.uint8, 3>>(value)), arc4.static_array<arc4.uint8, 3>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_bool(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.bool>(value)), arc4.bool)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_byte(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.uint8>(value)), arc4.uint8)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_string(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.dynamic_array<arc4.uint8>>(value)), arc4.dynamic_array<arc4.uint8>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_bytes(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.dynamic_array<arc4.uint8>>(value)), arc4.dynamic_array<arc4.uint8>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_address(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.static_array<arc4.uint8, 32>>(value)), arc4.static_array<arc4.uint8, 32>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_bool_arr(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.dynamic_array<arc4.bool>>(value)), arc4.dynamic_array<arc4.bool>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_bool_arr3(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.static_array<arc4.bool, 3>>(value)), arc4.static_array<arc4.bool, 3>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_static_tuple(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.tuple<arc4.uint64,arc4.uint8>>(value)), arc4.tuple<arc4.uint64,arc4.uint8>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_dynamic_tuple(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>>(value)), arc4.tuple<arc4.uint64,arc4.uint8,arc4.dynamic_array<arc4.uint8>>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_static_struct(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<test_cases.arc4_validation.contract.ARC4StaticStruct>(value)), test_cases.arc4_validation.contract.ARC4StaticStruct)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_dynamic_struct(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<test_cases.arc4_validation.contract.ARC4DynamicStruct>(value)), test_cases.arc4_validation.contract.ARC4DynamicStruct)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_static_struct_arr(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.dynamic_array<test_cases.arc4_validation.contract.ARC4StaticStruct>>(value)), arc4.dynamic_array<test_cases.arc4_validation.contract.ARC4StaticStruct>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_static_struct_arr3(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.static_array<test_cases.arc4_validation.contract.ARC4StaticStruct, 3>>(value)), arc4.static_array<test_cases.arc4_validation.contract.ARC4StaticStruct, 3>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_dynamic_struct_arr(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.dynamic_array<test_cases.arc4_validation.contract.ARC4DynamicStruct>>(value)), arc4.dynamic_array<test_cases.arc4_validation.contract.ARC4DynamicStruct>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_dynamic_struct_arr3(value: bytes): void
  {
    arc4_validate(reinterpret_cast<bytes>(reinterpret_cast<arc4.static_array<test_cases.arc4_validation.contract.ARC4DynamicStruct, 3>>(value)), arc4.static_array<test_cases.arc4_validation.contract.ARC4DynamicStruct, 3>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_native_static_struct(value: bytes): void
  {
    b: state_key = 'v'
    GlobalState[b]: bytes = value
    n: state_key = 'v'
    arc4_validate(reinterpret_cast<bytes>(GlobalState[n]), test_cases.arc4_validation.contract.NativeStaticStruct)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_native_dynamic_struct(value: bytes): void
  {
    b: state_key = 'v'
    GlobalState[b]: bytes = value
    n: state_key = 'v'
    arc4_validate(reinterpret_cast<bytes>(GlobalState[n]), test_cases.arc4_validation.contract.NativeDynamicStruct)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_native_static_struct_arr(value: bytes): void
  {
    b: state_key = 'v'
    GlobalState[b]: bytes = value
    n: state_key = 'v'
    arc4_validate(reinterpret_cast<bytes>(GlobalState[n]), arc4.dynamic_array<test_cases.arc4_validation.contract.NativeStaticStruct>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_native_static_struct_arr3(value: bytes): void
  {
    b: state_key = 'v'
    GlobalState[b]: bytes = value
    n: state_key = 'v'
    arc4_validate(reinterpret_cast<bytes>(GlobalState[n]), arc4.static_array<test_cases.arc4_validation.contract.NativeStaticStruct, 3>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_native_dynamic_struct_arr(value: bytes): void
  {
    b: state_key = 'v'
    GlobalState[b]: bytes = value
    n: state_key = 'v'
    arc4_validate(reinterpret_cast<bytes>(GlobalState[n]), arc4.dynamic_array<test_cases.arc4_validation.contract.NativeDynamicStruct>)
  }
  
  abimethod test_cases.arc4_validation.contract.ValidationContract.validate_native_dynamic_struct_arr3(value: bytes): void
  {
    b: state_key = 'v'
    GlobalState[b]: bytes = value
    n: state_key = 'v'
    arc4_validate(reinterpret_cast<bytes>(GlobalState[n]), arc4.static_array<test_cases.arc4_validation.contract.NativeDynamicStruct, 3>)
  }
  
  baremethod test_cases.arc4_validation.contract.ValidationContract.__algopy_default_create(): void
  {
  }
  
  subroutine algopy._contract.Contract.__init__(): void
  {
  }
}