main test_cases.native_tuples_in_state.contracts.TuplesInGlobalState.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "bare_state" 0x00000000000000010000000000000002)
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#2: uint64 = (txn NumAppArgs)
        goto tmp%0#2 ? block@6 : block@4
    block@4: // bare_routing_L4
        let tmp%2#0: uint64 = (txn OnCompletion)
        goto tmp%2#0 ? block@6 : block@5
    block@5: // __algopy_default_create_L1
        let tmp%3#0: uint64 = (txn ApplicationID)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // can only call when creating
        let test_cases.native_tuples_in_state.contracts.TuplesInGlobalState.__puya_arc4_router__%0#0: bool = 1u
        goto block@7
    block@6: // after_if_else_L4
        let test_cases.native_tuples_in_state.contracts.TuplesInGlobalState.__puya_arc4_router__%0#1: bool = 0u
        goto block@7
    block@7: // after_inlined_test_cases.native_tuples_in_state.contracts.TuplesInGlobalState.__puya_arc4_router___L1
        let tmp%0#1: bool = Ï†(test_cases.native_tuples_in_state.contracts.TuplesInGlobalState.__puya_arc4_router__%0#0 <- block@5, test_cases.native_tuples_in_state.contracts.TuplesInGlobalState.__puya_arc4_router__%0#1 <- block@6)
        return tmp%0#1