#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1
    bytecblock 0x151f7c750101
    // struct_by_name/contract.py:18
    // class DemoContract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@9
    pushbytess 0x3d694b70 0x7fb34e8a 0x8ba7c4c2 0x46dadea3 // method "get_one()(uint8,uint8)", method "get_two()(uint8,uint8)", method "get_three()(uint8,uint8)", method "compare()bool"
    txna ApplicationArgs 0
    match main_get_one_route@3 main_get_two_route@4 main_get_three_route@5 main_compare_route@6

main_after_if_else@13:
    // struct_by_name/contract.py:18
    // class DemoContract(ARC4Contract):
    pushint 0 // 0
    return

main_compare_route@6:
    // struct_by_name/contract.py:46
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushbytes 0x151f7c7580
    log
    intc_0 // 1
    return

main_get_three_route@5:
    // struct_by_name/contract.py:39
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_0 // 0x151f7c750101
    log
    intc_0 // 1
    return

main_get_two_route@4:
    // struct_by_name/contract.py:32
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_0 // 0x151f7c750101
    log
    intc_0 // 1
    return

main_get_one_route@3:
    // struct_by_name/contract.py:25
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_0 // 0x151f7c750101
    log
    intc_0 // 1
    return

main_bare_routing@9:
    // struct_by_name/contract.py:18
    // class DemoContract(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@13
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return
