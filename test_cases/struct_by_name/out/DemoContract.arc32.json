{
    "hints": {
        "get_one()(uint8,uint8)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "StructOne",
                    "elements": [
                        [
                            "x",
                            "uint8"
                        ],
                        [
                            "y",
                            "uint8"
                        ]
                    ]
                }
            }
        },
        "get_two()(uint8,uint8)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "StructTwo",
                    "elements": [
                        [
                            "x",
                            "uint8"
                        ],
                        [
                            "y",
                            "uint8"
                        ]
                    ]
                }
            }
        },
        "get_three()(uint8,uint8)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "StructTwo",
                    "elements": [
                        [
                            "x",
                            "uint8"
                        ],
                        [
                            "y",
                            "uint8"
                        ]
                    ]
                }
            }
        },
        "compare()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxCiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUwMTAxCiAgICAvLyBzdHJ1Y3RfYnlfbmFtZS9jb250cmFjdC5weToxOAogICAgLy8gY2xhc3MgRGVtb0NvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50Y18wIC8vIDEKICAgIHNobAogICAgKwogICAgc3dpdGNoIGNhbGxfTm9PcCBjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgogICAgLy8gc3RydWN0X2J5X25hbWUvY29udHJhY3QucHk6MTgKICAgIC8vIGNsYXNzIERlbW9Db250cmFjdChBUkM0Q29udHJhY3QpOgogICAgZXJyIC8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoKY3JlYXRlX05vT3A6CiAgICAvLyBzdHJ1Y3RfYnlfbmFtZS9jb250cmFjdC5weToxOAogICAgLy8gY2xhc3MgRGVtb0NvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgIQogICAgcmV0dXJuIC8vIG9uIGVycm9yOiB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCmNhbGxfTm9PcDoKICAgIC8vIHN0cnVjdF9ieV9uYW1lL2NvbnRyYWN0LnB5OjE4CiAgICAvLyBjbGFzcyBEZW1vQ29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIHB1c2hieXRlc3MgMHgzZDY5NGI3MCAweDdmYjM0ZThhIDB4OGJhN2M0YzIgMHg0NmRhZGVhMyAvLyBtZXRob2QgImdldF9vbmUoKSh1aW50OCx1aW50OCkiLCBtZXRob2QgImdldF90d28oKSh1aW50OCx1aW50OCkiLCBtZXRob2QgImdldF90aHJlZSgpKHVpbnQ4LHVpbnQ4KSIsIG1ldGhvZCAiY29tcGFyZSgpYm9vbCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIGdldF9vbmVfcm91dGVAMyBnZXRfdHdvX3JvdXRlQDQgZ2V0X3RocmVlX3JvdXRlQDUgY29tcGFyZV9yb3V0ZUA2CiAgICBlcnIgLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoKY29tcGFyZV9yb3V0ZUA2OgogICAgLy8gc3RydWN0X2J5X25hbWUvY29udHJhY3QucHk6NDYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NTgwCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCmdldF90aHJlZV9yb3V0ZUA1OgogICAgLy8gc3RydWN0X2J5X25hbWUvY29udHJhY3QucHk6MzkKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUwMTAxCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCmdldF90d29fcm91dGVANDoKICAgIC8vIHN0cnVjdF9ieV9uYW1lL2NvbnRyYWN0LnB5OjMyCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1MDEwMQogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgpnZXRfb25lX3JvdXRlQDM6CiAgICAvLyBzdHJ1Y3RfYnlfbmFtZS9jb250cmFjdC5weToyNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NTAxMDEKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "DemoContract",
        "desc": "\n    Verify that even though named tuples with different names but the same structure should be\n    considered 'comparable' in the type system, they should be output separately when being\n    interpreted as an arc4 Struct in an abi method\n    ",
        "methods": [
            {
                "name": "get_one",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint8,uint8)"
                }
            },
            {
                "name": "get_two",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint8,uint8)"
                }
            },
            {
                "name": "get_three",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint8,uint8)"
                }
            },
            {
                "name": "compare",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}