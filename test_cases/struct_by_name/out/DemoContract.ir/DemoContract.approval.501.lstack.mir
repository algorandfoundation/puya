// Op                                                  Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // struct_by_name/contract.py:25
        // @arc4.abimethod()
        int 1                                          1
        v-store lifted%return#0
        // struct_by_name/contract.py:18
        // class DemoContract(ARC4Contract):
        txn NumAppArgs                                 tmp%0#1
        l-load tmp%0#1 0                               tmp%0#1
        bz main_bare_routing@18 ; b main_abi_routing@2

    main_abi_routing@2:
        // struct_by_name/contract.py:18
        // class DemoContract(ARC4Contract):
        txn OnCompletion                               tmp%3#0
        l-load tmp%3#0 0                               tmp%3#0
        !                                              tmp%4#0
        l-load tmp%4#0 0                               tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                              tmp%6#0
        l-load tmp%6#0 0                               tmp%6#0
        assert
        txna ApplicationArgs 0                         tmp%7#0
        method get_one()(uint8,uint8)                  tmp%7#0,Method(get_one()(uint8,uint8))
        method get_two()(uint8,uint8)                  tmp%7#0,Method(get_one()(uint8,uint8)),Method(get_two()(uint8,uint8))
        method get_three()(uint8,uint8)                tmp%7#0,Method(get_one()(uint8,uint8)),Method(get_two()(uint8,uint8)),Method(get_three()(uint8,uint8))
        method compare()bool                           tmp%7#0,Method(get_one()(uint8,uint8)),Method(get_two()(uint8,uint8)),Method(get_three()(uint8,uint8)),Method(compare()bool)
        l-load tmp%7#0 4                               Method(get_one()(uint8,uint8)),Method(get_two()(uint8,uint8)),Method(get_three()(uint8,uint8)),Method(compare()bool),tmp%7#0
        match main_get_one_route@6 main_get_two_route@7 main_get_three_route@8 main_compare_route@9 ; b main_switch_case_default@10 

    main_get_one_route@6:
        // struct_by_name/contract.py:25
        // @arc4.abimethod()
        byte 0x151f7c750101                            0x151f7c750101
        log
        v-load lifted%return#0                         lifted%return#0
        return

    main_get_two_route@7:
        // struct_by_name/contract.py:32
        // @arc4.abimethod()
        byte 0x151f7c750101                            0x151f7c750101
        log
        v-load lifted%return#0                         lifted%return#0
        return

    main_get_three_route@8:
        // struct_by_name/contract.py:39
        // @arc4.abimethod()
        byte 0x151f7c750101                            0x151f7c750101
        log
        v-load lifted%return#0                         lifted%return#0
        return

    main_compare_route@9:
        // struct_by_name/contract.py:46
        // @arc4.abimethod()
        byte 0x151f7c7580                              0x151f7c7580
        log
        v-load lifted%return#0                         lifted%return#0
        return

    main_switch_case_default@10:
        err

    main_bare_routing@18:
        // struct_by_name/contract.py:18
        // class DemoContract(ARC4Contract):
        txn OnCompletion                               tmp%9#0
        l-load tmp%9#0 0                               tmp%9#0
        !                                              not%tmp%9#0
        l-load not%tmp%9#0 0                           not%tmp%9#0
        assert
        txn ApplicationID                              tmp%10#0
        l-load tmp%10#0 0                              tmp%10#0
        !                                              tmp%11#0
        l-load tmp%11#0 0                              tmp%11#0
        assert // can only call when creating
        v-load lifted%return#0                         lifted%return#0
        return


