main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@9
    block@2: // abi_routing_L18
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "get_one()(uint8,uint8)" => block@3, method "get_two()(uint8,uint8)" => block@4, method "get_three()(uint8,uint8)" => block@5, method "compare()bool" => block@6, * => block@13}
    block@3: // get_one_route_L25
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        (log 0x151f7c750101)
        let test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0
        goto block@14
    block@4: // get_two_route_L32
        let tmp%10#0: uint64 = (txn OnCompletion)
        let tmp%11#0: bool = (! tmp%10#0)
        (assert tmp%11#0) // OnCompletion is not NoOp
        let tmp%12#0: uint64 = (txn ApplicationID)
        (assert tmp%12#0) // can only call when not creating
        (log 0x151f7c750101)
        let test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0
        goto block@14
    block@5: // get_three_route_L39
        let tmp%17#0: uint64 = (txn OnCompletion)
        let tmp%18#0: bool = (! tmp%17#0)
        (assert tmp%18#0) // OnCompletion is not NoOp
        let tmp%19#0: uint64 = (txn ApplicationID)
        (assert tmp%19#0) // can only call when not creating
        (log 0x151f7c750101)
        let test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0
        goto block@14
    block@6: // compare_route_L46
        let tmp%24#0: uint64 = (txn OnCompletion)
        let tmp%25#0: bool = (! tmp%24#0)
        (assert tmp%25#0) // OnCompletion is not NoOp
        let tmp%26#0: uint64 = (txn ApplicationID)
        (assert tmp%26#0) // can only call when not creating
        (log 0x151f7c7580)
        let test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0
        goto block@14
    block@9: // bare_routing_L18
        let tmp%30#0: uint64 = (txn OnCompletion)
        goto tmp%30#0 ? block@13 : block@10
    block@10: // __algopy_default_create_L1
        let tmp%31#0: uint64 = (txn ApplicationID)
        let tmp%32#0: bool = (! tmp%31#0)
        (assert tmp%32#0) // can only call when creating
        let test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0
        goto block@14
    block@13: // after_if_else_L18
        let test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0: bool = 0u
        let tmp%0#0: bool = test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router__%0#0
        goto block@14
    block@14: // after_inlined_test_cases.struct_by_name.contract.DemoContract.__puya_arc4_router___L1
        return tmp%0#0