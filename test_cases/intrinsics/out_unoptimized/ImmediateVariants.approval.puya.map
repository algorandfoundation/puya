{
  "version": 3,
  "sources": [
    "../immediate_variants.py"
  ],
  "mappings": ";;;;;;;;;;;;AAkBuB;;AACR;;;AAAA;;AAAA;AAAP;AACyB;AAAlB;;AAAA;AAAP;AACY;;;AACgB;AAArB;;AAAA;;AAAA;AAAP;AACO;;;;AAAA;;AAAA;AAAP;AACgC;AAAzB;;;AAAA;;AAAA;AAAP;AAC6B;AAAtB;;;AAAA;;AAAA;AAAP;AAC6B;AAAW;AAAjC;;AAAA;;AAAA;AAAP;AAEA;AACyB;;AAAzB;;AAC6B;;AAA7B;;AACgC;AAAhC;;AACmC;AAAnC;;AACmB;AAAnB;;AACmB;AAAnB;;AACA;AAAA;;AACA;AAAyB;;;AAAZ;AACb;AAAA;;AACA;AAEO;;AAAuB;AAAvB;AAAP;AACO;;;AAAA;;AAAA;AAAP;AAC6B;AAAtB;;AAAA;;AAAA;AAAP;AAEO;;;AAAyB;AAAzB;AAAP;AACiC;AAA1B;;;AAAA;;AAAA;AAAP;AACiC;AAA1B;;;AAAA;;AAAA;AAAP;AACO;;;;AAAA;;AAAA;AAAP;AACO;;;;AAAA;AAAP;AAEO;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2"
    },
    "6": {
      "op": "bytecblock 0x068101"
    },
    "12": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "num_app_args#0"
      ],
      "stack_out": [
        "num_app_args#0"
      ]
    },
    "14": {
      "op": "gtxn 0 NumAppArgs",
      "defined_out": [
        "num_app_args#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "num_app_args#0",
        "tmp%0#0"
      ]
    },
    "17": {
      "op": "dig 1",
      "defined_out": [
        "num_app_args#0",
        "num_app_args#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "num_app_args#0",
        "tmp%0#0",
        "num_app_args#0 (copy)"
      ]
    },
    "19": {
      "op": "==",
      "defined_out": [
        "num_app_args#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "num_app_args#0",
        "tmp%1#0"
      ]
    },
    "20": {
      "op": "assert",
      "stack_out": [
        "num_app_args#0"
      ]
    },
    "21": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "num_app_args#0"
      ],
      "stack_out": [
        "num_app_args#0",
        "0"
      ]
    },
    "22": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "num_app_args#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "num_app_args#0",
        "tmp%2#0"
      ]
    },
    "24": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "25": {
      "op": "assert",
      "stack_out": []
    },
    "26": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "first_arg#0"
      ],
      "stack_out": [
        "first_arg#0"
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "0"
      ]
    },
    "30": {
      "op": "txnas ApplicationArgs",
      "defined_out": [
        "first_arg#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%4#0"
      ]
    },
    "32": {
      "op": "dig 1",
      "defined_out": [
        "first_arg#0",
        "first_arg#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%4#0",
        "first_arg#0 (copy)"
      ]
    },
    "34": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%5#0"
      ]
    },
    "35": {
      "op": "assert",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "36": {
      "op": "gtxna 0 ApplicationArgs 0",
      "defined_out": [
        "first_arg#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%6#0"
      ]
    },
    "40": {
      "op": "dig 1",
      "stack_out": [
        "first_arg#0",
        "tmp%6#0",
        "first_arg#0 (copy)"
      ]
    },
    "42": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%7#0"
      ]
    },
    "43": {
      "op": "assert",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "44": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "0"
      ]
    },
    "45": {
      "op": "gtxnas 0 ApplicationArgs",
      "defined_out": [
        "first_arg#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%8#0"
      ]
    },
    "48": {
      "op": "dig 1",
      "stack_out": [
        "first_arg#0",
        "tmp%8#0",
        "first_arg#0 (copy)"
      ]
    },
    "50": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%9#0"
      ]
    },
    "51": {
      "op": "assert",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "52": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "0"
      ]
    },
    "53": {
      "op": "gtxnsa ApplicationArgs 0",
      "defined_out": [
        "first_arg#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%10#0"
      ]
    },
    "56": {
      "op": "dig 1",
      "stack_out": [
        "first_arg#0",
        "tmp%10#0",
        "first_arg#0 (copy)"
      ]
    },
    "58": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%11#0"
      ]
    },
    "59": {
      "op": "assert",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "60": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "0"
      ]
    },
    "61": {
      "op": "dup",
      "stack_out": [
        "first_arg#0",
        "0",
        "0"
      ]
    },
    "62": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "first_arg#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%12#0"
      ]
    },
    "64": {
      "op": "dig 1",
      "stack_out": [
        "first_arg#0",
        "tmp%12#0",
        "first_arg#0 (copy)"
      ]
    },
    "66": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "first_arg#0",
        "tmp%13#0"
      ]
    },
    "67": {
      "op": "assert",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "68": {
      "op": "itxn_begin"
    },
    "69": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "first_arg#0"
      ],
      "stack_out": [
        "first_arg#0",
        "appl"
      ]
    },
    "71": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "73": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "first_arg#0"
      ],
      "stack_out": [
        "first_arg#0",
        "DeleteApplication"
      ]
    },
    "75": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "77": {
      "op": "bytec_0 // 0x068101",
      "defined_out": [
        "0x068101",
        "first_arg#0"
      ],
      "stack_out": [
        "first_arg#0",
        "0x068101"
      ]
    },
    "78": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "80": {
      "op": "bytec_0 // 0x068101",
      "stack_out": [
        "first_arg#0",
        "0x068101"
      ]
    },
    "81": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "83": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "0"
      ]
    },
    "84": {
      "op": "itxn_field Fee",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "0"
      ]
    },
    "87": {
      "op": "itxn_field Fee",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "89": {
      "op": "dup",
      "stack_out": [
        "first_arg#0",
        "first_arg#0 (copy)"
      ]
    },
    "90": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "first_arg#0"
      ]
    },
    "92": {
      "op": "dup",
      "stack_out": [
        "first_arg#0",
        "first_arg#0 (copy)"
      ]
    },
    "93": {
      "op": "pushbytes 0x32",
      "defined_out": [
        "0x32",
        "first_arg#0",
        "first_arg#0 (copy)"
      ],
      "stack_out": [
        "first_arg#0",
        "first_arg#0 (copy)",
        "0x32"
      ]
    },
    "96": {
      "op": "concat",
      "defined_out": [
        "first_arg#0",
        "second_arg#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "97": {
      "op": "dup",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "second_arg#0 (copy)"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "second_arg#0 (copy)"
      ]
    },
    "98": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "100": {
      "op": "itxn_submit"
    },
    "101": {
      "op": "itxn NumAppArgs",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%14#0"
      ]
    },
    "103": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "first_arg#0",
        "second_arg#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%14#0",
        "2"
      ]
    },
    "104": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%15#0"
      ]
    },
    "105": {
      "op": "assert",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "106": {
      "op": "itxna ApplicationArgs 0",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%16#0"
      ]
    },
    "109": {
      "op": "dig 2",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%16#0",
        "first_arg#0 (copy)"
      ]
    },
    "111": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%17#0"
      ]
    },
    "112": {
      "op": "assert",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "first_arg#0",
        "second_arg#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "1"
      ]
    },
    "114": {
      "op": "itxnas ApplicationArgs",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%18#0"
      ]
    },
    "116": {
      "op": "dig 1",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%18#0",
        "second_arg#0 (copy)"
      ]
    },
    "118": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%19#0"
      ]
    },
    "119": {
      "op": "assert",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "120": {
      "op": "gitxn 0 NumAppArgs",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%20#0"
      ]
    },
    "123": {
      "op": "intc_2 // 2",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%20#0",
        "2"
      ]
    },
    "124": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%21#0"
      ]
    },
    "125": {
      "op": "assert",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "126": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "0"
      ]
    },
    "127": {
      "op": "gitxnas 0 ApplicationArgs",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%22#0"
      ]
    },
    "130": {
      "op": "dig 2",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%22#0",
        "first_arg#0 (copy)"
      ]
    },
    "132": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%23#0"
      ]
    },
    "133": {
      "op": "assert",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "134": {
      "op": "intc_1 // 1",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "1"
      ]
    },
    "135": {
      "op": "gitxnas 0 ApplicationArgs",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%24#0"
      ]
    },
    "138": {
      "op": "dig 1",
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%24#0",
        "second_arg#0 (copy)"
      ]
    },
    "140": {
      "op": "==",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%25#0"
      ]
    },
    "141": {
      "op": "assert",
      "stack_out": [
        "first_arg#0",
        "second_arg#0"
      ]
    },
    "142": {
      "op": "gitxna 0 ApplicationArgs 0",
      "defined_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "first_arg#0",
        "second_arg#0",
        "tmp%26#0"
      ]
    },
    "146": {
      "op": "uncover 2",
      "stack_out": [
        "second_arg#0",
        "tmp%26#0",
        "first_arg#0"
      ]
    },
    "148": {
      "op": "==",
      "defined_out": [
        "second_arg#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "second_arg#0",
        "tmp%27#0"
      ]
    },
    "149": {
      "op": "assert",
      "stack_out": [
        "second_arg#0"
      ]
    },
    "150": {
      "op": "gitxna 0 ApplicationArgs 1",
      "defined_out": [
        "second_arg#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "second_arg#0",
        "tmp%28#0"
      ]
    },
    "154": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "155": {
      "op": "assert",
      "stack_out": []
    },
    "156": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "157": {
      "op": "return",
      "stack_out": []
    }
  }
}