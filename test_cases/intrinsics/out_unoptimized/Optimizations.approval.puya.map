{
  "version": 3,
  "sources": [
    "../optimizations.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAiBK;;;;;;AAJA;;;;;;AAJA;;;;;;AAJA;;;;;;AAJA;;;;;;AADL;;;AAAA;;AAAA;;;;;;;;;AAAA;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AACK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAdoB;AAAV;AAAP;;;;AAImB;AAAZ;AAAP;;;;AAIqB;AAAd;AAAP;;;;AAIoB;AAAb;AAAP;AAER;;;;;;AAGY;;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;;AAAA;AAJJ;;AAAA;;AAAA;;AAAA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8"
    },
    "6": {
      "op": "bytecblock 0x151f7c75 0x48656c6c6f20576f726c64"
    },
    "25": {
      "op": "b main_block@0"
    },
    "28": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "31": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "33": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "34": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "35": {
      "op": "bz main_bare_routing@19",
      "stack_out": []
    },
    "38": {
      "op": "b main_abi_routing@2"
    },
    "41": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "44": {
      "op": "match",
      "stack_out": []
    },
    "46": {
      "op": "b main_route_NoOp@3"
    },
    "49": {
      "block": "main_route_NoOp@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "51": {
      "op": "intc_1 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "52": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "53": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "54": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "57": {
      "op": "match",
      "stack_out": []
    },
    "59": {
      "op": "b main_switch_case_default@4"
    },
    "62": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "64": {
      "op": "bz main_create_NoOp@13",
      "stack_out": []
    },
    "67": {
      "op": "b main_call_NoOp@5"
    },
    "70": {
      "block": "main_call_NoOp@5",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "73": {
      "op": "pushbytes 0x86db3e46 // method \"sha256()byte[]\"",
      "defined_out": [
        "Method(sha256()byte[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(sha256()byte[])"
      ]
    },
    "79": {
      "op": "pushbytes 0x5468f98b // method \"sha3_256()byte[]\"",
      "defined_out": [
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])"
      ]
    },
    "85": {
      "op": "pushbytes 0x3c539b61 // method \"sha512_256()byte[]\"",
      "defined_out": [
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])"
      ]
    },
    "91": {
      "op": "pushbytes 0xe6b8cd41 // method \"keccak256()byte[]\"",
      "defined_out": [
        "Method(keccak256()byte[])",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "Method(keccak256()byte[])"
      ]
    },
    "97": {
      "op": "pushbytes 0xb15dc12a // method \"all(byte[])(byte[],byte[],byte[],byte[])\"",
      "defined_out": [
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))",
        "Method(keccak256()byte[])",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "Method(keccak256()byte[])",
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))"
      ]
    },
    "103": {
      "op": "uncover 5",
      "stack_out": [
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "Method(keccak256()byte[])",
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))",
        "tmp%7#0"
      ]
    },
    "105": {
      "op": "match main_sha256_route@6 main_sha3_256_route@7 main_sha512_256_route@8 main_keccak256_route@9 main_all_route@10",
      "stack_out": []
    },
    "117": {
      "op": "b main_switch_case_default@11"
    },
    "120": {
      "block": "main_switch_case_default@11",
      "stack_in": [],
      "op": "b main_switch_case_next@12"
    },
    "123": {
      "block": "main_switch_case_next@12",
      "stack_in": [],
      "op": "b main_after_if_else@16"
    },
    "126": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "b main_switch_case_next@17"
    },
    "129": {
      "block": "main_switch_case_next@17",
      "stack_in": [],
      "op": "b main_switch_case_next@18"
    },
    "132": {
      "block": "main_switch_case_next@18",
      "stack_in": [],
      "op": "b main_after_if_else@23"
    },
    "135": {
      "block": "main_after_if_else@23",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "136": {
      "block": "main_all_route@10",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.all[routing]",
      "op": "callsub all"
    },
    "139": {
      "op": "b main_switch_case_next@12"
    },
    "142": {
      "block": "main_keccak256_route@9",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]",
      "op": "callsub keccak256"
    },
    "145": {
      "op": "b main_switch_case_next@12"
    },
    "148": {
      "block": "main_sha512_256_route@8",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]",
      "op": "callsub sha512_256"
    },
    "151": {
      "op": "b main_switch_case_next@12"
    },
    "154": {
      "block": "main_sha3_256_route@7",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]",
      "op": "callsub sha3_256"
    },
    "157": {
      "op": "b main_switch_case_next@12"
    },
    "160": {
      "block": "main_sha256_route@6",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.sha256[routing]",
      "op": "callsub sha256"
    },
    "163": {
      "op": "b main_switch_case_next@12"
    },
    "166": {
      "block": "main_create_NoOp@13",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "169": {
      "op": "match",
      "stack_out": []
    },
    "171": {
      "op": "b main_switch_case_default@14"
    },
    "174": {
      "block": "main_switch_case_default@14",
      "stack_in": [],
      "op": "b main_switch_case_next@15"
    },
    "177": {
      "block": "main_switch_case_next@15",
      "stack_in": [],
      "op": "b main_after_if_else@16"
    },
    "180": {
      "block": "main_bare_routing@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "182": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "183": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%9#0"
      ]
    },
    "185": {
      "op": "match main___algopy_default_create@20",
      "stack_out": []
    },
    "189": {
      "op": "b main_switch_case_default@21"
    },
    "192": {
      "block": "main_switch_case_default@21",
      "stack_in": [],
      "op": "b main_switch_case_next@22"
    },
    "195": {
      "block": "main_switch_case_next@22",
      "stack_in": [],
      "op": "b main_after_if_else@23"
    },
    "198": {
      "block": "main___algopy_default_create@20",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "200": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "201": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "202": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "203": {
      "op": "b main_block@25"
    },
    "206": {
      "block": "main_block@25",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create@26"
    },
    "209": {
      "block": "main_after_inlined_test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create@26",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "210": {
      "op": "return",
      "stack_out": []
    },
    "211": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.sha256[routing]",
      "params": {},
      "block": "sha256",
      "stack_in": [],
      "op": "b sha256_block@0"
    },
    "214": {
      "block": "sha256_block@0",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.sha256",
      "op": "callsub test_cases.intrinsics.optimizations.Optimizations.sha256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "217": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "218": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#0"
      ]
    },
    "219": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "220": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "223": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "226": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "227": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "229": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "230": {
      "op": "log",
      "stack_out": []
    },
    "231": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "232": {
      "op": "return",
      "stack_out": []
    },
    "233": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]",
      "params": {},
      "block": "sha3_256",
      "stack_in": [],
      "op": "b sha3_256_block@0"
    },
    "236": {
      "block": "sha3_256_block@0",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.sha3_256",
      "op": "callsub test_cases.intrinsics.optimizations.Optimizations.sha3_256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "239": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "240": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#0"
      ]
    },
    "241": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "242": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "245": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "248": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "249": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "251": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "252": {
      "op": "log",
      "stack_out": []
    },
    "253": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "254": {
      "op": "return",
      "stack_out": []
    },
    "255": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]",
      "params": {},
      "block": "sha512_256",
      "stack_in": [],
      "op": "b sha512_256_block@0"
    },
    "258": {
      "block": "sha512_256_block@0",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.sha512_256",
      "op": "callsub test_cases.intrinsics.optimizations.Optimizations.sha512_256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "261": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "262": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#0"
      ]
    },
    "263": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "264": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "267": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "270": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "271": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "273": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "274": {
      "op": "log",
      "stack_out": []
    },
    "275": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "276": {
      "op": "return",
      "stack_out": []
    },
    "277": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]",
      "params": {},
      "block": "keccak256",
      "stack_in": [],
      "op": "b keccak256_block@0"
    },
    "280": {
      "block": "keccak256_block@0",
      "stack_in": [],
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.keccak256",
      "op": "callsub test_cases.intrinsics.optimizations.Optimizations.keccak256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "283": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "284": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#0"
      ]
    },
    "285": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "286": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "289": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%0#0"
      ]
    },
    "291": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "292": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "293": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "295": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "296": {
      "op": "log",
      "stack_out": []
    },
    "297": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "298": {
      "op": "return",
      "stack_out": []
    },
    "299": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.all[routing]",
      "params": {},
      "block": "all",
      "stack_in": [],
      "op": "b all_block@0"
    },
    "302": {
      "block": "all_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "305": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "308": {
      "callsub": "test_cases.intrinsics.optimizations.Optimizations.all",
      "op": "callsub test_cases.intrinsics.optimizations.Optimizations.all",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "311": {
      "op": "cover 3",
      "stack_out": [
        "tmp%4#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "313": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "315": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "317": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "318": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "319": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "320": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "323": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "325": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "326": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "8"
      ]
    },
    "327": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "328": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "331": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "333": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "335": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0"
      ]
    },
    "336": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "338": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "339": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "340": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "8"
      ]
    },
    "341": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "342": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "344": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%length%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "345": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "346": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "349": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%2#0"
      ]
    },
    "351": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "352": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%0#0 (copy)",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%0#0 (copy)"
      ]
    },
    "354": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "355": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "358": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%0#0"
      ]
    },
    "360": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "362": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%1#0"
      ]
    },
    "363": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "365": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0 (copy)",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0 (copy)"
      ]
    },
    "366": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%data_length%1#0"
      ]
    },
    "367": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%data_length%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "369": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "370": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "tmp%3#0 (copy)"
      ]
    },
    "372": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%length%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length%2#0"
      ]
    },
    "373": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%4#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "374": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "377": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%2#0",
        "tmp%3#0"
      ]
    },
    "379": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0"
      ]
    },
    "380": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%current_tail_offset%1#0 (copy)",
        "aggregate%head%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%1#0 (copy)"
      ]
    },
    "382": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_bytes%5#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "383": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "386": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%1#0"
      ]
    },
    "388": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "390": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%head%2#0"
      ]
    },
    "391": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0"
      ]
    },
    "393": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0 (copy)",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0 (copy)"
      ]
    },
    "394": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%data_length%2#0",
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%data_length%2#0"
      ]
    },
    "395": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%data_length%2#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "397": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "398": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "tmp%4#0 (copy)"
      ]
    },
    "400": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%length%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%length%3#0"
      ]
    },
    "401": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_bytes%6#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "402": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "405": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%length_uint16%3#0",
        "tmp%4#0"
      ]
    },
    "407": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%encoded_value%3#0"
      ]
    },
    "408": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "410": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%as_bytes%7#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "411": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%3#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "414": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%2#0"
      ]
    },
    "416": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "418": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%head%3#0"
      ]
    },
    "419": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "421": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%0#0"
      ]
    },
    "422": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "424": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%1#0"
      ]
    },
    "425": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%1#0",
        "aggregate%as_Encoded(len+uint8[])%2#0"
      ]
    },
    "427": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%3#0",
        "aggregate%concat%2#0"
      ]
    },
    "428": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%2#0",
        "aggregate%as_Encoded(len+uint8[])%3#0"
      ]
    },
    "430": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "431": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0x151f7c75"
      ]
    },
    "432": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%5#0"
      ]
    },
    "434": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "435": {
      "op": "log",
      "stack_out": []
    },
    "436": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "437": {
      "op": "return",
      "stack_out": []
    },
    "438": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.sha256",
      "params": {},
      "block": "test_cases.intrinsics.optimizations.Optimizations.sha256",
      "stack_in": [],
      "op": "b test_cases.intrinsics.optimizations.Optimizations.sha256_block@0"
    },
    "441": {
      "block": "test_cases.intrinsics.optimizations.Optimizations.sha256_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x48656c6c6f20576f726c64",
      "defined_out": [
        "0x48656c6c6f20576f726c64"
      ],
      "stack_out": [
        "0x48656c6c6f20576f726c64"
      ]
    },
    "442": {
      "op": "sha256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "443": {
      "retsub": true,
      "op": "retsub"
    },
    "444": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.sha3_256",
      "params": {},
      "block": "test_cases.intrinsics.optimizations.Optimizations.sha3_256",
      "stack_in": [],
      "op": "b test_cases.intrinsics.optimizations.Optimizations.sha3_256_block@0"
    },
    "447": {
      "block": "test_cases.intrinsics.optimizations.Optimizations.sha3_256_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x48656c6c6f20576f726c64",
      "defined_out": [
        "0x48656c6c6f20576f726c64"
      ],
      "stack_out": [
        "0x48656c6c6f20576f726c64"
      ]
    },
    "448": {
      "op": "sha3_256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "449": {
      "retsub": true,
      "op": "retsub"
    },
    "450": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.sha512_256",
      "params": {},
      "block": "test_cases.intrinsics.optimizations.Optimizations.sha512_256",
      "stack_in": [],
      "op": "b test_cases.intrinsics.optimizations.Optimizations.sha512_256_block@0"
    },
    "453": {
      "block": "test_cases.intrinsics.optimizations.Optimizations.sha512_256_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x48656c6c6f20576f726c64",
      "defined_out": [
        "0x48656c6c6f20576f726c64"
      ],
      "stack_out": [
        "0x48656c6c6f20576f726c64"
      ]
    },
    "454": {
      "op": "sha512_256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "455": {
      "retsub": true,
      "op": "retsub"
    },
    "456": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.keccak256",
      "params": {},
      "block": "test_cases.intrinsics.optimizations.Optimizations.keccak256",
      "stack_in": [],
      "op": "b test_cases.intrinsics.optimizations.Optimizations.keccak256_block@0"
    },
    "459": {
      "block": "test_cases.intrinsics.optimizations.Optimizations.keccak256_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x48656c6c6f20576f726c64",
      "defined_out": [
        "0x48656c6c6f20576f726c64"
      ],
      "stack_out": [
        "0x48656c6c6f20576f726c64"
      ]
    },
    "460": {
      "op": "keccak256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "461": {
      "retsub": true,
      "op": "retsub"
    },
    "462": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.all",
      "params": {
        "value_to_hash#0": "bytes"
      },
      "block": "test_cases.intrinsics.optimizations.Optimizations.all",
      "stack_in": [],
      "op": "proto 1 4"
    },
    "465": {
      "op": "b test_cases.intrinsics.optimizations.Optimizations.all_block@0"
    },
    "468": {
      "block": "test_cases.intrinsics.optimizations.Optimizations.all_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "value_to_hash#0 (copy)"
      ],
      "stack_out": [
        "value_to_hash#0 (copy)"
      ]
    },
    "470": {
      "op": "sha256",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "471": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "value_to_hash#0 (copy)"
      ]
    },
    "473": {
      "op": "sha3_256",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "474": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "value_to_hash#0 (copy)"
      ]
    },
    "476": {
      "op": "sha512_256",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "477": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "value_to_hash#0 (copy)"
      ]
    },
    "479": {
      "op": "keccak256",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "480": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%0#0"
      ]
    },
    "482": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "484": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "486": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "488": {
      "retsub": true,
      "op": "retsub"
    }
  }
}