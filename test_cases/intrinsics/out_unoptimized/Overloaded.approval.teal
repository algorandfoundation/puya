#pragma version 10

test_cases.intrinsics.overloaded.Overloaded.approval_program:
    intcblock 0 1
    bytecblock 0x6b6579
    txn ApplicationID
    bnz main_entrypoint@2
    callsub __init__

main_entrypoint@2:
    // intrinsics/overloaded.py:9
    // assert op.AppGlobal.get_uint64(b"key") == op.AppGlobal.get_uint64(b"key")
    bytec_0 // 0x6b6579
    app_global_get
    bytec_0 // 0x6b6579
    app_global_get
    ==
    assert
    // intrinsics/overloaded.py:10
    // assert self.key.maybe()[0] == self.key.maybe()[0]
    intc_0 // 0
    bytec_0 // "key"
    app_global_get_ex
    pop
    intc_0 // 0
    bytec_0 // "key"
    app_global_get_ex
    pop
    ==
    assert
    // intrinsics/overloaded.py:11
    // assert op.setbit_uint64(0, 0, 1) == op.setbit_uint64(0, 0, 1)
    intc_0 // 0
    dup
    intc_1 // 1
    setbit
    intc_0 // 0
    dup
    intc_1 // 1
    setbit
    ==
    assert
    // intrinsics/overloaded.py:12
    // assert op.select_uint64(0, 1, True) == op.select_uint64(1, 0, False)
    intc_0 // 0
    intc_1 // 1
    dup
    select
    intc_1 // 1
    intc_0 // 0
    dup
    select
    ==
    assert
    // intrinsics/overloaded.py:13
    // return True
    intc_1 // 1
    return


// test_cases.intrinsics.overloaded.Overloaded.__init__() -> void:
__init__:
    // intrinsics/overloaded.py:5
    // def __init__(self) -> None:
    proto 0 0
    // intrinsics/overloaded.py:6
    // self.key = GlobalState(UInt64(0))
    bytec_0 // "key"
    intc_0 // 0
    app_global_put
    retsub
