debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['intrinsics'], resource_encoding='value', output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing intrinsics/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.intrinsics.overloaded.Overloaded.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.overloaded.Overloaded.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.overloaded.Overloaded.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.__puya_arc4_router__
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.__puya_arc4_router__
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.__init__
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.approval_program
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.sha256
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.sha3_256
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.sha512_256
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.keccak256
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.all
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.__puya_arc4_router__
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.all
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.intrinsics.immediate_variants.ImmediateVariants.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.__puya_arc4_router__
debug: removing unused subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: removing unused subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.__puya_arc4_router__
debug: removing unused subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: removing unused subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.000.ssa.ir
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.clear.000.ssa.ir
debug: optimizing approval program of test_cases.intrinsics.overloaded.Overloaded at level 1
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.intrinsics.overloaded.Overloaded.__init__ as inlineable
debug: marking single-use function test_cases.intrinsics.overloaded.Overloaded.approval_program for inlining
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.intrinsics.overloaded.Overloaded.approval_program in test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: inlining call to test_cases.intrinsics.overloaded.Overloaded.__init__ in test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (setbit 0u 0u 1u) to 1u
debug: Simplified (setbit 0u 0u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (select 0u 1u 1u) to 1u
debug: Simplified (select 1u 0u 0u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (setbit 18446744073709551615u 3u 0u) to 18446744073709551607u
debug: Simplified (getbit 18446744073709551607u 3u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (setbit 123u 4u 1u) to 123u
debug: Simplified (getbit 123u 4u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
intrinsics/overloaded.py:9:51 debug: replacing app_global read with cached value for key: 0x6b6579
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (setbit 0u 0u 1u) to 1u
debug: Simplified (setbit 0u 0u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (select 0u 1u 1u) to 1u
debug: Simplified (select 1u 0u 0u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (setbit 18446744073709551615u 3u 0u) to 18446744073709551607u
debug: Simplified (getbit 18446744073709551607u 3u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (setbit 123u 4u 1u) to 123u
debug: Simplified (getbit 123u 4u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
intrinsics/overloaded.py:9:51 debug: replacing app_global read with cached value for key: 0x6b6579
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.__init__
debug: removing unused subroutine test_cases.intrinsics.overloaded.Overloaded.approval_program
debug: Unused subroutines removed
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#1 tmp%0#1) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
intrinsics/overloaded.py:10:39 debug: replacing app_global read with cached value for key: "key"
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%1#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%1#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== maybe_value%0#0 maybe_value%0#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.004.ssa.opt.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable maybe_exists%0#0
debug: Removing unused variable maybe_value%0#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.005.ssa.opt.ir
debug: Begin optimization pass 6/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 6, ending loop
debug: optimizing clear program of test_cases.intrinsics.overloaded.Overloaded at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.intrinsics.overloaded.Overloaded
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.intrinsics.overloaded.Overloaded
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.intrinsics.overloaded.Overloaded at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.intrinsics.overloaded.Overloaded at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.intrinsics.overloaded.Overloaded
debug: auto reserving slots in test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init, []
debug: Slot allocation not required
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.intrinsics.overloaded.Overloaded
intrinsics/overloaded.py:17 debug: auto reserving slots in test_cases.intrinsics.overloaded.Overloaded.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.intrinsics.overloaded.Overloaded.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.intrinsics.overloaded.Overloaded.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to intrinsics/out/Overloaded.ir/Overloaded.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Found 1 edge set/s for test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init
debug: optimizing TEAL subroutine ops test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine blocks test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: removing explicit jump to fall-through block main_after_if_else@2
intrinsics/overloaded.py:17 debug: optimizing TEAL subroutine ops test_cases.intrinsics.overloaded.Overloaded.clear_state_program() -> uint64:
intrinsics/overloaded.py:17 debug: optimizing TEAL subroutine blocks test_cases.intrinsics.overloaded.Overloaded.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.000.ssa.ir
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.clear.000.ssa.ir
debug: optimizing approval program of test_cases.intrinsics.optimizations.Optimizations at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.intrinsics.optimizations.Optimizations.sha256 for inlining
debug: marking single-use function test_cases.intrinsics.optimizations.Optimizations.sha3_256 for inlining
debug: marking single-use function test_cases.intrinsics.optimizations.Optimizations.sha512_256 for inlining
debug: marking single-use function test_cases.intrinsics.optimizations.Optimizations.keccak256 for inlining
debug: marking single-use function test_cases.intrinsics.optimizations.Optimizations.all for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@14 from exit 0u to fail
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@13
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@14 into block@12
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@9
debug: Removed empty block: block@10
debug: Removed empty block: block@11
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@15
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create in test_cases.intrinsics.optimizations.Optimizations.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@13 from exit 0u to fail
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@14 with block@12 in block@15
debug: Merged linear block@14 into block@12
debug: Merged linear block@15 into block@12
debug: Merged linear block@13 into block@11
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@8
debug: Removed empty block: block@9
debug: Removed empty block: block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Perform Subroutine Inlining
intrinsics/optimizations.py:5:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.sha256 in test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (sha256 0x48656c6c6f20576f726c64) to 0xa591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Perform Subroutine Inlining
intrinsics/optimizations.py:9:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.sha3_256 in test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (sha3_256 0x48656c6c6f20576f726c64) to 0xe167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Perform Subroutine Inlining
intrinsics/optimizations.py:13:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.sha512_256 in test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (sha512_256 0x48656c6c6f20576f726c64) to 0xff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Perform Subroutine Inlining
intrinsics/optimizations.py:17:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.keccak256 in test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (keccak256 0x48656c6c6f20576f726c64) to 0x592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
intrinsics/optimizations.py:21:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.all in test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, value_to_hash#0
debug: selected value_to_hash#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, tmp%2#0
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: tmp%2#1, tmp%3#0
debug: selected tmp%2#1 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%4#0
debug: selected tmp%3#1 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (sha256 0x48656c6c6f20576f726c64) to 0xa591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (sha3_256 0x48656c6c6f20576f726c64) to 0xe167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (sha512_256 0x48656c6c6f20576f726c64) to 0xff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (keccak256 0x48656c6c6f20576f726c64) to 0x592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.__puya_arc4_router__
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.all
debug: Unused subroutines removed
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@2 from goto tmp%4#0 ? block@3 : block@12 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@6
debug: Replaced predecessor block@3 with block@2 in block@7
debug: Replaced predecessor block@3 with block@2 in block@8
debug: Replaced predecessor block@3 with block@2 in block@12
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@14 with block@13 in block@15
debug: Merged linear block@14 into block@13
debug: Merged linear block@15 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.__algopy_default_create
debug: Unused subroutines removed
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.intrinsics.optimizations.Optimizations at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.intrinsics.optimizations.Optimizations
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.intrinsics.optimizations.Optimizations
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.intrinsics.optimizations.Optimizations at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0xa591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0020
debug: Simplified (concat 0x0020 0xa591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e) to 0x0020a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e
debug: Simplified (concat 0x151f7c75 0x0020a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e) to 0x151f7c750020a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0xe167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0020
debug: Simplified (concat 0x0020 0xe167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51) to 0x0020e167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51
debug: Simplified (concat 0x151f7c75 0x0020e167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51) to 0x151f7c750020e167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0xff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0020
debug: Simplified (concat 0x0020 0xff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442) to 0x0020ff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442
debug: Simplified (concat 0x151f7c75 0x0020ff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442) to 0x151f7c750020ff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0020
debug: Simplified (concat 0x0020 0x592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba) to 0x0020592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba
debug: Simplified (concat 0x151f7c75 0x0020592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba) to 0x151f7c750020592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+uint8[])%1#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+uint8[])%2#0
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+uint8[])%3#0
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((len+uint8[]),(len+uint8[]),(len+uint8[]),(len+uint8[]))%0#0, tmp%5#0
debug: selected aggregate%concat%3#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len tmp%0#1) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0020
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0008
debug: Simplified (concat 0x 0x0008) to 0x0008
debug: Simplified (len tmp%1#1) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0020
debug: Simplified (len tmp%2#1) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0020
debug: Simplified (len tmp%3#1) to 32u
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0020
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 32u) with copy of existing registers (Register(source_location=intrinsics/optimizations.py:21:5-21, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 32u) with copy of existing registers (Register(source_location=intrinsics/optimizations.py:21:5-21, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%6#0: bytes[8] = (itob 32u) with copy of existing registers (Register(source_location=intrinsics/optimizations.py:21:5-21, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%2#0, aggregate%as_bytes%4#0, aggregate%as_bytes%6#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: marking trivial method test_cases.intrinsics.optimizations.Optimizations.sha256[routing] as inlineable
debug: marking trivial method test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing] as inlineable
debug: marking trivial method test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing] as inlineable
debug: marking trivial method test_cases.intrinsics.optimizations.Optimizations.keccak256[routing] as inlineable
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
intrinsics/optimizations.py:17:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.keccak256[routing] in algopy.arc4.ARC4Contract.approval_program
intrinsics/optimizations.py:13:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing] in algopy.arc4.ARC4Contract.approval_program
intrinsics/optimizations.py:9:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing] in algopy.arc4.ARC4Contract.approval_program
intrinsics/optimizations.py:5:6 debug: inlining call to test_cases.intrinsics.optimizations.Optimizations.sha256[routing] in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@20 into block@4
debug: Merged linear block@18 into block@5
debug: Merged linear block@16 into block@6
debug: Merged linear block@14 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@21
debug: Removed empty block: block@19
debug: Removed empty block: block@17
debug: Removed empty block: block@15
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha3_256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.sha512_256[routing]
debug: removing unused subroutine test_cases.intrinsics.optimizations.Optimizations.keccak256[routing]
debug: Unused subroutines removed
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.202.ssa.array.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.intrinsics.optimizations.Optimizations at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.intrinsics.optimizations.Optimizations
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
intrinsics/optimizations.py:21:6 debug: auto reserving slots in test_cases.intrinsics.optimizations.Optimizations.all[routing], []
debug: Slot allocation not required
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.intrinsics.optimizations.Optimizations
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.intrinsics.optimizations.Optimizations.all[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.intrinsics.optimizations.Optimizations.all[routing]
debug: Performing post-SSA optimizations at level 1
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to intrinsics/out/Optimizations.ir/Optimizations.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_abi_routing@2.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_abi_routing@2.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_abi_routing@2.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_abi_routing@2.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_abi_routing@2.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_abi_routing@2.ops[22]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main___algopy_default_create@13.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main___algopy_default_create@13.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@13.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@13.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@13.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@13.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@13.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@13.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@13.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@13.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted all_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(len+uint8[])%0#0 0'
debug: Replaced all_block@0.ops[3]: 'v-load reinterpret_Encoded(len+uint8[])%0#0' with 'l-load reinterpret_Encoded(len+uint8[])%0#0'
debug: Inserted all_block@0.ops[5]: 'l-store-copy value_to_hash#0 0'
debug: Replaced all_block@0.ops[7]: 'v-load value_to_hash#0' with 'l-load value_to_hash#0'
debug: Inserted all_block@0.ops[22]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced all_block@0.ops[24]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted all_block@0.ops[37]: 'l-store-copy aggregate%as_bytes%3#0 0'
debug: Replaced all_block@0.ops[39]: 'v-load aggregate%as_bytes%3#0' with 'l-load aggregate%as_bytes%3#0'
debug: Inserted all_block@0.ops[59]: 'l-store-copy aggregate%as_bytes%5#0 0'
debug: Replaced all_block@0.ops[61]: 'v-load aggregate%as_bytes%5#0' with 'l-load aggregate%as_bytes%5#0'
debug: Inserted all_block@0.ops[81]: 'l-store-copy aggregate%as_bytes%7#0 0'
debug: Replaced all_block@0.ops[83]: 'v-load aggregate%as_bytes%7#0' with 'l-load aggregate%as_bytes%7#0'
debug: Inserted all_block@0.ops[89]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced all_block@0.ops[91]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted all_block@0.ops[94]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced all_block@0.ops[96]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted all_block@0.ops[99]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced all_block@0.ops[101]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted all_block@0.ops[104]: 'l-store-copy aggregate%concat%2#0 0'
debug: Replaced all_block@0.ops[106]: 'v-load aggregate%concat%2#0' with 'l-load aggregate%concat%2#0'
debug: Inserted all_block@0.ops[113]: 'l-store-copy tmp%6#0 0'
debug: Replaced all_block@0.ops[115]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted all_block@0.ops[26]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced all_block@0.ops[29]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted all_block@0.ops[42]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced all_block@0.ops[45]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted all_block@0.ops[50]: 'l-store-copy aggregate%data_length%1#0 0'
debug: Replaced all_block@0.ops[53]: 'v-load aggregate%data_length%1#0' with 'l-load aggregate%data_length%1#0'
debug: Inserted all_block@0.ops[66]: 'l-store-copy aggregate%offset_as_uint16%2#0 0'
debug: Replaced all_block@0.ops[69]: 'v-load aggregate%offset_as_uint16%2#0' with 'l-load aggregate%offset_as_uint16%2#0'
debug: Inserted all_block@0.ops[74]: 'l-store-copy aggregate%data_length%2#0 0'
debug: Replaced all_block@0.ops[77]: 'v-load aggregate%data_length%2#0' with 'l-load aggregate%data_length%2#0'
debug: Inserted all_block@0.ops[90]: 'l-store-copy aggregate%offset_as_uint16%3#0 0'
debug: Replaced all_block@0.ops[93]: 'v-load aggregate%offset_as_uint16%3#0' with 'l-load aggregate%offset_as_uint16%3#0'
debug: Inserted all_block@0.ops[115]: 'l-store-copy aggregate%concat%3#0 0'
debug: Replaced all_block@0.ops[118]: 'v-load aggregate%concat%3#0' with 'l-load aggregate%concat%3#0'
debug: Inserted all_block@0.ops[8]: 'l-store-copy value_to_hash#0 0'
debug: Replaced all_block@0.ops[11]: 'v-load value_to_hash#0' with 'l-load value_to_hash#0'
debug: Inserted all_block@0.ops[12]: 'l-store-copy value_to_hash#0 0'
debug: Replaced all_block@0.ops[15]: 'v-load value_to_hash#0' with 'l-load value_to_hash#0'
debug: Inserted all_block@0.ops[16]: 'l-store-copy value_to_hash#0 0'
debug: Replaced all_block@0.ops[19]: 'v-load value_to_hash#0' with 'l-load value_to_hash#0'
debug: Inserted all_block@0.ops[34]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced all_block@0.ops[40]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted all_block@0.ops[59]: 'l-store-copy aggregate%current_tail_offset%1#0 0'
debug: Replaced all_block@0.ops[65]: 'v-load aggregate%current_tail_offset%1#0' with 'l-load aggregate%current_tail_offset%1#0'
debug: Inserted all_block@0.ops[84]: 'l-store-copy aggregate%current_tail_offset%2#0 0'
debug: Replaced all_block@0.ops[90]: 'v-load aggregate%current_tail_offset%2#0' with 'l-load aggregate%current_tail_offset%2#0'
debug: Inserted all_block@0.ops[10]: 'l-store-copy tmp%0#1 1'
debug: Replaced all_block@0.ops[24]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted all_block@0.ops[40]: 'l-store-copy aggregate%encoded_value%1#0 1'
debug: Replaced all_block@0.ops[54]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted all_block@0.ops[66]: 'l-store-copy aggregate%encoded_value%2#0 1'
debug: Replaced all_block@0.ops[80]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted all_block@0.ops[43]: 'l-store-copy aggregate%current_tail_offset%0#0 1'
debug: Replaced all_block@0.ops[59]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted all_block@0.ops[70]: 'l-store-copy aggregate%current_tail_offset%1#0 1'
debug: Replaced all_block@0.ops[86]: 'v-load aggregate%current_tail_offset%1#0' with 'l-load aggregate%current_tail_offset%1#0'
debug: Inserted all_block@0.ops[54]: 'l-store-copy aggregate%head%1#0 2'
debug: Replaced all_block@0.ops[79]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted all_block@0.ops[82]: 'l-store-copy aggregate%head%2#0 2'
debug: Replaced all_block@0.ops[105]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted all_block@0.ops[15]: 'l-store-copy tmp%1#1 2'
debug: Replaced all_block@0.ops[39]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted all_block@0.ops[97]: 'l-store-copy aggregate%encoded_value%3#0 2'
debug: Replaced all_block@0.ops[128]: 'v-load aggregate%encoded_value%3#0' with 'l-load aggregate%encoded_value%3#0'
debug: Inserted all_block@0.ops[86]: 'l-store-copy aggregate%encoded_value%2#0 2'
debug: Replaced all_block@0.ops[124]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted all_block@0.ops[20]: 'l-store-copy tmp%2#1 3'
debug: Replaced all_block@0.ops[68]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted all_block@0.ops[59]: 'l-store-copy aggregate%encoded_value%1#0 3'
debug: Replaced all_block@0.ops[121]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted all_block@0.ops[24]: 'l-store-copy tmp%3#1 3'
debug: Replaced all_block@0.ops[99]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted all_block@0.ops[32]: 'l-store-copy aggregate%encoded_value%0#0 3'
debug: Replaced all_block@0.ops[118]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Found 2 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
intrinsics/optimizations.py:21:6 debug: optimizing TEAL subroutine ops test_cases.intrinsics.optimizations.Optimizations.all[routing]() -> void:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_if_else@12` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_if_else@12 into main
debug: removing jump-chain block main_all_route@8
debug: branching to main_all_route@8 will be replaced with all
intrinsics/optimizations.py:21:6 debug: optimizing TEAL subroutine blocks test_cases.intrinsics.optimizations.Optimizations.all[routing]() -> void:
debug: inlining single reference block all_block@0 into all
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.approval.000.ssa.ir
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.clear.000.ssa.ir
debug: optimizing approval program of test_cases.intrinsics.immediate_variants.ImmediateVariants at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, num_app_args#0
debug: selected num_app_args#0 from equivalence set
debug: Found equivalence set: tmp%5#0, first_arg#0
debug: selected first_arg#0 from equivalence set
debug: Found equivalence set: tmp%16#0, second_arg#0
debug: selected second_arg#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((itxnas ApplicationArgs) 1u) to (itxna ApplicationArgs 1)
debug: Simplified ((gitxnas 0 ApplicationArgs) 0u) to (gitxna 0 ApplicationArgs 0)
debug: Simplified ((gitxnas 0 ApplicationArgs) 1u) to (gitxna 0 ApplicationArgs 1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.intrinsics.immediate_variants.ImmediateVariants at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.intrinsics.immediate_variants.ImmediateVariants
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.intrinsics.immediate_variants.ImmediateVariants
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.intrinsics.immediate_variants.ImmediateVariants at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.intrinsics.immediate_variants.ImmediateVariants at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.intrinsics.immediate_variants.ImmediateVariants
intrinsics/immediate_variants.py:18 debug: auto reserving slots in test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program, []
debug: Slot allocation not required
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.intrinsics.immediate_variants.ImmediateVariants
intrinsics/immediate_variants.py:53 debug: auto reserving slots in test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to intrinsics/out/ImmediateVariants.ir/ImmediateVariants.clear.400.destructured.ir
debug: Inserted main_block@0.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@0.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_block@0.ops[8]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_block@0.ops[10]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_block@0.ops[14]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_block@0.ops[16]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_block@0.ops[19]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_block@0.ops[21]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_block@0.ops[27]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_block@0.ops[29]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_block@0.ops[32]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_block@0.ops[34]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_block@0.ops[37]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_block@0.ops[39]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_block@0.ops[42]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_block@0.ops[44]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_block@0.ops[48]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_block@0.ops[50]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_block@0.ops[53]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_block@0.ops[55]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_block@0.ops[59]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_block@0.ops[61]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_block@0.ops[64]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_block@0.ops[66]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_block@0.ops[71]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_block@0.ops[73]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_block@0.ops[76]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_block@0.ops[78]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_block@0.ops[96]: 'l-store-copy second_arg#0 0'
debug: Replaced main_block@0.ops[98]: 'v-load second_arg#0' with 'l-load second_arg#0'
debug: Inserted main_block@0.ops[102]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_block@0.ops[104]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_block@0.ops[107]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_block@0.ops[109]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_block@0.ops[112]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_block@0.ops[114]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_block@0.ops[117]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_block@0.ops[119]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_block@0.ops[122]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_block@0.ops[124]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_block@0.ops[127]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_block@0.ops[129]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_block@0.ops[132]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_block@0.ops[134]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_block@0.ops[137]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_block@0.ops[139]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_block@0.ops[142]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_block@0.ops[144]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_block@0.ops[147]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_block@0.ops[149]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_block@0.ops[152]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_block@0.ops[154]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_block@0.ops[157]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_block@0.ops[159]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_block@0.ops[162]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_block@0.ops[164]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_block@0.ops[167]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_block@0.ops[169]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_block@0.ops[172]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_block@0.ops[174]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_block@0.ops[177]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_block@0.ops[179]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_block@0.ops[92]: 'l-store-copy first_arg#0 0'
debug: Replaced main_block@0.ops[94]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[1]: 'l-store-copy num_app_args#0 0'
debug: Replaced main_block@0.ops[7]: 'v-load num_app_args#0' with 'l-load num_app_args#0'
debug: Inserted main_block@0.ops[25]: 'l-store-copy first_arg#0 0'
debug: Replaced main_block@0.ops[32]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[33]: 'l-store-copy first_arg#0 1'
debug: Replaced main_block@0.ops[43]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[8]: 'l-store-copy num_app_args#0 1'
debug: Replaced main_block@0.ops[19]: 'v-load num_app_args#0' with 'l-load num_app_args#0'
debug: Inserted main_block@0.ops[45]: 'l-store-copy first_arg#0 1'
debug: Replaced main_block@0.ops[56]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[57]: 'l-store-copy first_arg#0 1'
debug: Replaced main_block@0.ops[68]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[69]: 'l-store-copy first_arg#0 1'
debug: Replaced main_block@0.ops[81]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[82]: 'l-store-copy first_arg#0 1'
debug: Replaced main_block@0.ops[99]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[155]: 'l-store-copy first_arg#0 1'
debug: Replaced main_block@0.ops[175]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[166]: 'l-store-copy second_arg#0 2'
debug: Replaced main_block@0.ops[186]: 'v-load second_arg#0' with 'l-load second_arg#0'
debug: Inserted main_block@0.ops[103]: 'l-store-copy first_arg#0 0'
debug: Replaced main_block@0.ops[125]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[109]: 'l-store-copy second_arg#0 1'
debug: Replaced main_block@0.ops[136]: 'v-load second_arg#0' with 'l-load second_arg#0'
debug: Inserted main_block@0.ops[127]: 'l-store-copy first_arg#0 2'
debug: Replaced main_block@0.ops[157]: 'v-load first_arg#0' with 'l-load first_arg#0'
debug: Inserted main_block@0.ops[138]: 'l-store-copy second_arg#0 2'
debug: Replaced main_block@0.ops[169]: 'v-load second_arg#0' with 'l-load second_arg#0'
intrinsics/immediate_variants.py:18 debug: optimizing TEAL subroutine ops test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program() -> uint64:
intrinsics/immediate_variants.py:18 debug: optimizing TEAL subroutine blocks test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
intrinsics/immediate_variants.py:53 debug: optimizing TEAL subroutine ops test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program() -> uint64:
intrinsics/immediate_variants.py:53 debug: optimizing TEAL subroutine blocks test_cases.intrinsics.immediate_variants.ImmediateVariants.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing intrinsics/out/Overloaded.approval.teal
info: Writing intrinsics/out/Overloaded.clear.teal
info: Writing intrinsics/out/Overloaded.approval.bin
info: Writing intrinsics/out/Overloaded.clear.bin
info: Writing intrinsics/out/Overloaded.approval.stats.txt
info: Writing intrinsics/out/Overloaded.clear.stats.txt
info: Writing intrinsics/out/Overloaded.approval.puya.map
info: Writing intrinsics/out/Overloaded.clear.puya.map
info: Writing intrinsics/out/Optimizations.arc32.json
info: Writing intrinsics/out/Optimizations.arc56.json
info: Writing intrinsics/out/Optimizations.approval.teal
info: Writing intrinsics/out/Optimizations.clear.teal
info: Writing intrinsics/out/Optimizations.approval.bin
info: Writing intrinsics/out/Optimizations.clear.bin
info: Writing intrinsics/out/Optimizations.approval.stats.txt
info: Writing intrinsics/out/Optimizations.clear.stats.txt
info: Writing intrinsics/out/Optimizations.approval.puya.map
info: Writing intrinsics/out/Optimizations.clear.puya.map
info: Writing intrinsics/out/ImmediateVariants.approval.teal
info: Writing intrinsics/out/ImmediateVariants.clear.teal
info: Writing intrinsics/out/ImmediateVariants.approval.bin
info: Writing intrinsics/out/ImmediateVariants.clear.bin
info: Writing intrinsics/out/ImmediateVariants.approval.stats.txt
info: Writing intrinsics/out/ImmediateVariants.clear.stats.txt
info: Writing intrinsics/out/ImmediateVariants.approval.puya.map
info: Writing intrinsics/out/ImmediateVariants.clear.puya.map
info: writing intrinsics/out/client_Optimizations.py