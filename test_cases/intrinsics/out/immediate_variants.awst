contract ImmediateVariants
{
  approval_program(): bool
  {
    num_app_args: uint64 = txn<NumAppArgs>()
    assert(gtxn<0, NumAppArgs>() == num_app_args)
    assert(gtxns<NumAppArgs>(0u) == num_app_args)
    first_arg: bytes = txna<ApplicationArgs, 0>()
    assert(txnas<ApplicationArgs>(0u) == first_arg)
    assert(gtxna<0, ApplicationArgs, 0>() == first_arg)
    assert(gtxnas<0, ApplicationArgs>(0u) == first_arg)
    assert(gtxnsa<ApplicationArgs, 0>(0u) == first_arg)
    assert(gtxnsas<ApplicationArgs>(0u, 0u) == first_arg)
    itxn_begin()
    itxn_field<TypeEnum>(appl)
    itxn_field<OnCompletion>(DeleteApplication)
    itxn_field<ApprovalProgram>(hex<"068101">)
    itxn_field<ClearStateProgram>(hex<"068101">)
    itxn_field<Fee>(0u)
    itxn_field<Fee>(0u)
    itxn_field<ApplicationArgs>(first_arg)
    second_arg: bytes = first_arg + hex<"32">
    itxn_field<ApplicationArgs>(second_arg)
    itxn_submit()
    assert(itxn<NumAppArgs>() == 2u)
    assert(itxna<ApplicationArgs, 0>() == first_arg)
    assert(itxnas<ApplicationArgs>(1u) == second_arg)
    assert(gitxn<0, NumAppArgs>() == 2u)
    assert(gitxnas<0, ApplicationArgs>(0u) == first_arg)
    assert(gitxnas<0, ApplicationArgs>(1u) == second_arg)
    assert(gitxna<0, ApplicationArgs, 0>() == first_arg)
    assert(gitxna<0, ApplicationArgs, 1>() == second_arg)
    return true
  }
  
  clear_state_program(): bool
  {
    return true
  }
}