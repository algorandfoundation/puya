{
  "version": 3,
  "sources": [
    "../optimizations.py"
  ],
  "mappings": ";;;;;;;;;AAGA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;AAaK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;;;;;;;;;;AAgBA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAGO;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;;AAAA;AANP;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1"
    },
    "4": {
      "op": "bytecblock 0x0020"
    },
    "9": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "11": {
      "op": "bz main___algopy_default_create@12",
      "stack_out": []
    },
    "14": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "16": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "17": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "18": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "20": {
      "op": "assert",
      "stack_out": []
    },
    "21": {
      "op": "pushbytess 0x86db3e46 0x5468f98b 0x3c539b61 0xe6b8cd41 0xb15dc12a // method \"sha256()byte[]\", method \"sha3_256()byte[]\", method \"sha512_256()byte[]\", method \"keccak256()byte[]\", method \"all(byte[])(byte[],byte[],byte[],byte[])\"",
      "defined_out": [
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))",
        "Method(keccak256()byte[])",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])"
      ],
      "stack_out": [
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "Method(keccak256()byte[])",
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))"
      ]
    },
    "48": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))",
        "Method(keccak256()byte[])",
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(sha256()byte[])",
        "Method(sha3_256()byte[])",
        "Method(sha512_256()byte[])",
        "Method(keccak256()byte[])",
        "Method(all(byte[])(byte[],byte[],byte[],byte[]))",
        "tmp%6#0"
      ]
    },
    "51": {
      "op": "match main_sha256_route@4 main_sha3_256_route@5 main_sha512_256_route@6 main_keccak256_route@7 all",
      "stack_out": []
    },
    "63": {
      "op": "err"
    },
    "64": {
      "block": "main_keccak256_route@7",
      "stack_in": [],
      "op": "pushbytes 0x151f7c750020592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
      "defined_out": [
        "0x151f7c750020592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba"
      ],
      "stack_out": [
        "0x151f7c750020592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba"
      ]
    },
    "104": {
      "op": "log",
      "stack_out": []
    },
    "105": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "106": {
      "op": "return",
      "stack_out": []
    },
    "107": {
      "block": "main_sha512_256_route@6",
      "stack_in": [],
      "op": "pushbytes 0x151f7c750020ff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442",
      "defined_out": [
        "0x151f7c750020ff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442"
      ],
      "stack_out": [
        "0x151f7c750020ff20018851481c25bfc2e5d0c1e1fa57dac2a237a1a96192f99a10da47aa5442"
      ]
    },
    "147": {
      "op": "log",
      "stack_out": []
    },
    "148": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "149": {
      "op": "return",
      "stack_out": []
    },
    "150": {
      "block": "main_sha3_256_route@5",
      "stack_in": [],
      "op": "pushbytes 0x151f7c750020e167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51",
      "defined_out": [
        "0x151f7c750020e167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51"
      ],
      "stack_out": [
        "0x151f7c750020e167f68d6563d75bb25f3aa49c29ef612d41352dc00606de7cbd630bb2665f51"
      ]
    },
    "190": {
      "op": "log",
      "stack_out": []
    },
    "191": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "192": {
      "op": "return",
      "stack_out": []
    },
    "193": {
      "block": "main_sha256_route@4",
      "stack_in": [],
      "op": "pushbytes 0x151f7c750020a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e",
      "defined_out": [
        "0x151f7c750020a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e"
      ],
      "stack_out": [
        "0x151f7c750020a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e"
      ]
    },
    "233": {
      "op": "log",
      "stack_out": []
    },
    "234": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "235": {
      "op": "return",
      "stack_out": []
    },
    "236": {
      "block": "main___algopy_default_create@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "238": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "239": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "241": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "242": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "243": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "244": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "245": {
      "op": "return",
      "stack_out": []
    },
    "246": {
      "subroutine": "test_cases.intrinsics.optimizations.Optimizations.all[routing]",
      "params": {},
      "block": "all",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "249": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "250": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0"
      ]
    },
    "252": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "253": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "255": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "add%0#0"
      ]
    },
    "256": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "add%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "258": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "259": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "260": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.uint8>",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "261": {
      "op": "extract 2 0",
      "defined_out": [
        "value_to_hash#0"
      ],
      "stack_out": [
        "value_to_hash#0"
      ]
    },
    "264": {
      "op": "dup",
      "defined_out": [
        "value_to_hash#0",
        "value_to_hash#0 (copy)"
      ],
      "stack_out": [
        "value_to_hash#0",
        "value_to_hash#0 (copy)"
      ]
    },
    "265": {
      "op": "sha256",
      "stack_out": [
        "value_to_hash#0",
        "tmp%0#0"
      ]
    },
    "266": {
      "op": "dig 1",
      "stack_out": [
        "value_to_hash#0",
        "tmp%0#0",
        "value_to_hash#0 (copy)"
      ]
    },
    "268": {
      "op": "sha3_256",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#1",
        "value_to_hash#0"
      ],
      "stack_out": [
        "value_to_hash#0",
        "tmp%0#0",
        "tmp%1#1"
      ]
    },
    "269": {
      "op": "dig 2",
      "stack_out": [
        "value_to_hash#0",
        "tmp%0#0",
        "tmp%1#1",
        "value_to_hash#0 (copy)"
      ]
    },
    "271": {
      "op": "sha512_256",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "value_to_hash#0"
      ],
      "stack_out": [
        "value_to_hash#0",
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1"
      ]
    },
    "272": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "value_to_hash#0"
      ]
    },
    "274": {
      "op": "keccak256",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ]
    },
    "275": {
      "op": "bytec_0 // 0x0020",
      "defined_out": [
        "0x0020",
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "0x0020"
      ]
    },
    "276": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "0x0020",
        "tmp%0#0"
      ]
    },
    "278": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0"
      ]
    },
    "279": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%0#0 (copy)",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%0#0 (copy)"
      ]
    },
    "280": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%encoded_value%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "281": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%data_length%0#0",
        "aggregate%encoded_value%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%data_length%0#0",
        "8"
      ]
    },
    "283": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "284": {
      "op": "bytec_0 // 0x0020",
      "stack_out": [
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "0x0020"
      ]
    },
    "285": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "0x0020",
        "tmp%1#1"
      ]
    },
    "287": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "288": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%0#0 (copy)",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%0#0 (copy)"
      ]
    },
    "290": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "291": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "294": {
      "op": "pushbytes 0x0008",
      "defined_out": [
        "0x0008",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%offset_as_uint16%1#0",
        "0x0008"
      ]
    },
    "298": {
      "op": "swap",
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "0x0008",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "299": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0"
      ]
    },
    "300": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%1#0 (copy)",
        "aggregate%head%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%1#0 (copy)"
      ]
    },
    "302": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%data_length%1#0"
      ]
    },
    "303": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%data_length%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "305": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "306": {
      "op": "bytec_0 // 0x0020",
      "stack_out": [
        "tmp%2#1",
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0",
        "0x0020"
      ]
    },
    "307": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0",
        "0x0020",
        "tmp%2#1"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0"
      ]
    },
    "310": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%current_tail_offset%1#0 (copy)",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%current_tail_offset%1#0 (copy)"
      ]
    },
    "312": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "313": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "316": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%1#0"
      ]
    },
    "318": {
      "op": "swap",
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "319": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0"
      ]
    },
    "320": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%2#0 (copy)",
        "aggregate%head%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%2#0 (copy)"
      ]
    },
    "322": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%1#0",
        "aggregate%data_length%2#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%data_length%2#0"
      ]
    },
    "323": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%data_length%2#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "325": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "326": {
      "op": "bytec_0 // 0x0020",
      "stack_out": [
        "tmp%3#1",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%2#0",
        "0x0020"
      ]
    },
    "327": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%2#0",
        "0x0020",
        "tmp%3#1"
      ]
    },
    "329": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%2#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%encoded_value%3#0"
      ]
    },
    "330": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "331": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "332": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "335": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%2#0"
      ]
    },
    "337": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "338": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%3#0"
      ]
    },
    "339": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%head%3#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%concat%0#0"
      ]
    },
    "342": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%concat%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "344": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%2#0",
        "aggregate%encoded_value%3#0",
        "aggregate%concat%1#0"
      ]
    },
    "345": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_value%3#0",
        "aggregate%concat%1#0",
        "aggregate%encoded_value%2#0"
      ]
    },
    "347": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "aggregate%encoded_value%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%3#0",
        "aggregate%concat%2#0"
      ]
    },
    "348": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%2#0",
        "aggregate%encoded_value%3#0"
      ]
    },
    "349": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%3#0"
      ],
      "stack_out": [
        "aggregate%concat%3#0"
      ]
    },
    "350": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%concat%3#0"
      ],
      "stack_out": [
        "aggregate%concat%3#0",
        "0x151f7c75"
      ]
    },
    "356": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%concat%3#0"
      ]
    },
    "357": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "358": {
      "op": "log",
      "stack_out": []
    },
    "359": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "360": {
      "op": "return",
      "stack_out": []
    }
  }
}