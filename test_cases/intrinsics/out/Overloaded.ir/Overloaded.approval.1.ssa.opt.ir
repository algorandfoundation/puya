main test_cases.intrinsics.overloaded.Overloaded.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "key" 0u)
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#1: uint64 = (app_global_get 0x6b6579)
        let tmp%1#1: uint64 = (app_global_get 0x6b6579)
        let tmp%2#0: bool = (== tmp%0#1 tmp%1#1)
        (assert tmp%2#0)
        let (maybe_value%0#0: uint64, maybe_exists%0#0: bool) = (app_global_get_ex 0u "key")
        let (maybe_value%1#0: uint64, maybe_exists%1#0: bool) = (app_global_get_ex 0u "key")
        let tmp%3#0: bool = (== maybe_value%0#0 maybe_value%1#0)
        (assert tmp%3#0)
        let tmp%4#0: uint64 = 1u
        let tmp%5#0: uint64 = 1u
        let tmp%6#0: bool = 1u
        let tmp%7#0: uint64 = 1u
        let tmp%8#0: uint64 = 1u
        let tmp%9#0: bool = 1u
        let tmp%10#0: uint64 = 18446744073709551607u
        let tmp%11#0: uint64 = 0u
        let tmp%12#0: bool = 1u
        let tmp%13#0: uint64 = 123u
        let tmp%14#0: uint64 = 1u
        let tmp%15#0: bool = 1u
        return 1u