// Op                                                                       Stack (out)
// test_cases.intrinsics.immediate_variants.ImmediateVariants.approval_program() -> uint64:
subroutine main:
    block@0:
        // intrinsics/immediate_variants.py:19
        // num_app_args = Txn.num_app_args
        txn NumAppArgs                                                      num_app_args#0
        v-store num_app_args#0
        // intrinsics/immediate_variants.py:20
        // assert GTxn.num_app_args(0) == num_app_args
        gtxn 0 NumAppArgs                                                   tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                      tmp%1#0
        v-load num_app_args#0                                               tmp%1#0,num_app_args#0
        ==                                                                  tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                      tmp%2#0
        assert
        // intrinsics/immediate_variants.py:21
        // assert GTxn.num_app_args(UInt64(0)) == num_app_args
        int 0                                                               0
        gtxns NumAppArgs                                                    tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                      tmp%3#0
        v-load num_app_args#0                                               tmp%3#0,num_app_args#0
        ==                                                                  tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                      tmp%4#0
        assert
        // intrinsics/immediate_variants.py:22
        // first_arg = Txn.application_args(0)
        txna ApplicationArgs 0                                              first_arg#0
        v-store first_arg#0
        // intrinsics/immediate_variants.py:23
        // assert Txn.application_args(UInt64(0)) == first_arg
        int 0                                                               0
        txnas ApplicationArgs                                               tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                      tmp%6#0
        v-load first_arg#0                                                  tmp%6#0,first_arg#0
        ==                                                                  tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                      tmp%7#0
        assert
        // intrinsics/immediate_variants.py:24
        // assert GTxn.application_args(0, 0) == first_arg
        gtxna 0 ApplicationArgs 0                                           tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                      tmp%8#0
        v-load first_arg#0                                                  tmp%8#0,first_arg#0
        ==                                                                  tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                      tmp%9#0
        assert
        // intrinsics/immediate_variants.py:25
        // assert GTxn.application_args(0, UInt64(0)) == first_arg
        int 0                                                               0
        gtxnas 0 ApplicationArgs                                            tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                     tmp%10#0
        v-load first_arg#0                                                  tmp%10#0,first_arg#0
        ==                                                                  tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                     tmp%11#0
        assert
        // intrinsics/immediate_variants.py:26
        // assert GTxn.application_args(UInt64(0), 0) == first_arg
        int 0                                                               0
        gtxnsa ApplicationArgs 0                                            tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                     tmp%12#0
        v-load first_arg#0                                                  tmp%12#0,first_arg#0
        ==                                                                  tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                     tmp%13#0
        assert
        // intrinsics/immediate_variants.py:27
        // assert GTxn.application_args(UInt64(0), UInt64(0)) == first_arg
        int 0                                                               0
        int 0                                                               0,0
        gtxnsas ApplicationArgs                                             tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                     tmp%14#0
        v-load first_arg#0                                                  tmp%14#0,first_arg#0
        ==                                                                  tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                     tmp%15#0
        assert
        // intrinsics/immediate_variants.py:29
        // ITxnCreate.begin()
        itxn_begin
        // intrinsics/immediate_variants.py:30
        // ITxnCreate.set_type_enum(TransactionType.ApplicationCall)
        int appl                                                            appl
        itxn_field TypeEnum
        // intrinsics/immediate_variants.py:31
        // ITxnCreate.set_on_completion(OnCompleteAction.DeleteApplication)
        int DeleteApplication                                               DeleteApplication
        itxn_field OnCompletion
        // intrinsics/immediate_variants.py:32
        // ITxnCreate.set_approval_program(Bytes.from_hex("068101"))
        byte 0x068101                                                       0x068101
        itxn_field ApprovalProgram
        // intrinsics/immediate_variants.py:33
        // ITxnCreate.set_clear_state_program(Bytes.from_hex("068101"))
        byte 0x068101                                                       0x068101
        itxn_field ClearStateProgram
        // intrinsics/immediate_variants.py:35
        // ITxnCreate.set_fee(UInt64(0))  # cover fee with outer txn
        int 0                                                               0
        itxn_field Fee
        // intrinsics/immediate_variants.py:36
        // ITxnCreate.set_application_args(first_arg)
        v-load first_arg#0                                                  first_arg#0
        itxn_field ApplicationArgs
        // intrinsics/immediate_variants.py:37
        // second_arg = first_arg + b"2"
        v-load first_arg#0                                                  first_arg#0
        byte 0x32                                                           first_arg#0,0x32
        concat                                                              second_arg#0
        v-store second_arg#0
        // intrinsics/immediate_variants.py:38
        // ITxnCreate.set_application_args(second_arg)
        v-load second_arg#0                                                 second_arg#0
        itxn_field ApplicationArgs
        // intrinsics/immediate_variants.py:39
        // ITxnCreate.submit()
        itxn_submit
        // intrinsics/immediate_variants.py:41
        // assert ITxn.num_app_args() == 2
        itxn NumAppArgs                                                     tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                     tmp%17#0
        int 2                                                               tmp%17#0,2
        ==                                                                  tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                     tmp%18#0
        assert
        // intrinsics/immediate_variants.py:42
        // assert ITxn.application_args(0) == first_arg
        itxna ApplicationArgs 0                                             tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                     tmp%19#0
        v-load first_arg#0                                                  tmp%19#0,first_arg#0
        ==                                                                  tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                     tmp%20#0
        assert
        // intrinsics/immediate_variants.py:43
        // assert ITxn.application_args(UInt64(1)) == second_arg
        itxna ApplicationArgs 1                                             tmp%21#0
        v-store tmp%21#0
        v-load tmp%21#0                                                     tmp%21#0
        v-load second_arg#0                                                 tmp%21#0,second_arg#0
        ==                                                                  tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                     tmp%22#0
        assert
        // intrinsics/immediate_variants.py:45
        // assert GITxn.num_app_args(0) == 2
        gitxn 0 NumAppArgs                                                  tmp%23#0
        v-store tmp%23#0
        v-load tmp%23#0                                                     tmp%23#0
        int 2                                                               tmp%23#0,2
        ==                                                                  tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                     tmp%24#0
        assert
        // intrinsics/immediate_variants.py:46
        // assert GITxn.application_args(0, UInt64(0)) == first_arg
        gitxna 0 ApplicationArgs 0                                          tmp%25#0
        v-store tmp%25#0
        v-load tmp%25#0                                                     tmp%25#0
        v-load first_arg#0                                                  tmp%25#0,first_arg#0
        ==                                                                  tmp%26#0
        v-store tmp%26#0
        v-load tmp%26#0                                                     tmp%26#0
        assert
        // intrinsics/immediate_variants.py:47
        // assert GITxn.application_args(0, UInt64(1)) == second_arg
        gitxna 0 ApplicationArgs 1                                          tmp%27#0
        v-store tmp%27#0
        v-load tmp%27#0                                                     tmp%27#0
        v-load second_arg#0                                                 tmp%27#0,second_arg#0
        ==                                                                  tmp%28#0
        v-store tmp%28#0
        v-load tmp%28#0                                                     tmp%28#0
        assert
        // intrinsics/immediate_variants.py:48
        // assert GITxn.application_args(0, 0) == first_arg
        gitxna 0 ApplicationArgs 0                                          tmp%29#0
        v-store tmp%29#0
        v-load tmp%29#0                                                     tmp%29#0
        v-load first_arg#0                                                  tmp%29#0,first_arg#0
        ==                                                                  tmp%30#0
        v-store tmp%30#0
        v-load tmp%30#0                                                     tmp%30#0
        assert
        // intrinsics/immediate_variants.py:49
        // assert GITxn.application_args(0, 1) == second_arg
        gitxna 0 ApplicationArgs 1                                          tmp%31#0
        v-store tmp%31#0
        v-load tmp%31#0                                                     tmp%31#0
        v-load second_arg#0                                                 tmp%31#0,second_arg#0
        ==                                                                  tmp%32#0
        v-store tmp%32#0
        v-load tmp%32#0                                                     tmp%32#0
        assert
        // intrinsics/immediate_variants.py:51
        // return True
        int 1                                                               1
        return


