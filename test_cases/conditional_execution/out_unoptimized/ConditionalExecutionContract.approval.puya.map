{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ;AAAqB;AAArB;AACA;AAAqB;AAArB;;AAER;;;;;;;;;;;;;;;;;AAEoB;AAAZ;;;AAAA;;;AAAA;;;AAAiC;AAAZ;;;AAArB;;;AAAA;;;;;;AAEI;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAA2B;AAAA;AAAA;AAAA;AAAJ;;;AAAA;;;;;;;;;AAD3B;;AAAA;;;AAKY;AAAZ;;;AAAA;;;AAAA;;;AAAkC;AAAZ;;;AAAtB;;;AAAA;;;;;;AAEI;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAuB;AAAA;AAAA;AAAA;AAAvB;;;AAAA;;;;;;;;;AADJ;;AAAA;;;AAKY;AAAZ;;;AAAA;;;AAAA;;;AAAmC;AAAZ;;;AAAvB;;;AAAA;;;;;;AAEI;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAA2B;AAAA;AAAA;AAAA;AAAJ;;;AAAA;;;;;;;;;AAD3B;;AAAA;;;AAKY;AAAZ;;;AAAA;;;AAAA;;;AAAkC;AAAZ;;;AAAtB;;;AAAA;;;;;;AAEI;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAuB;AAAA;AAAA;AAAA;AAAvB;;;AAAA;;;;;;;;;AADJ;;AAAA;;;AAKa;AAAZ;;;AAAA;;AAA+B;AAAZ;;;AAAA;;AAEhB;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAuB;AAAA;AAAA;AAAA;AAAvB;;;AAAA;;;;;;;;;AADJ;;AAAA;;;AAKiC;AAAZ;;;AAArB;;;AAAA;;;AAAY;AAAZ;;;AAAA;;;;;AAEI;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAA2B;AAAA;AAAA;AAAA;AAAJ;;;AAAA;;;;;;;;;AAD3B;;AAAA;;;AAKiC;AAAZ;;;AAArB;;;AAAA;;;AAAY;AAAZ;;;AAAA;;;;;AAEQ;AAAA;AAAA;AAAA;AAAJ;;;AAAA;;;AAA2B;AAAA;AAAA;AAAA;AAA3B;;;AAAA;;;;;;;;;AADJ;;AAAA;;;AAIO;AAAP;;AAAA;;;;;;;AALyD;AAAZ;;;AAAA;;;;;;;;;;;AANW;AAAZ;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBpD;;;;;;AAEQ;;AAAA;AACA;AAAqB;AAArB;AACA;AAAqB;AAArB;;AAER;;;;;;AAEQ;AAAqB;AAArB;AACA;;AAAA;AAER;;;;;;AAEQ;AAAqB;AAArB;AACA;;AAAA;AAER;;;;;;AAEQ;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"\" \"did_execute_a\" \"did_execute_b\""
    },
    "36": {
      "op": "b main_block@0"
    },
    "39": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "41": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "44": {
      "op": "b main_call___init__@1"
    },
    "47": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.__init__",
      "op": "callsub __init__"
    },
    "50": {
      "op": "b main_after_if_else@2"
    },
    "53": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "56": {
      "op": "return",
      "stack_out": []
    },
    "57": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "60": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\""
      ],
      "stack_out": [
        "\"did_execute_a\""
      ]
    },
    "61": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "\"did_execute_a\"",
        "0"
      ]
    },
    "62": {
      "op": "app_global_put",
      "stack_out": []
    },
    "63": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\""
      ],
      "stack_out": [
        "\"did_execute_b\""
      ]
    },
    "64": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"did_execute_b\"",
        "0"
      ]
    },
    "65": {
      "op": "app_global_put",
      "stack_out": []
    },
    "66": {
      "retsub": true,
      "op": "retsub"
    },
    "67": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "70": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "71": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0"
      ]
    },
    "72": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0"
      ]
    },
    "73": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0"
      ]
    },
    "74": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0"
      ]
    },
    "75": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0"
      ]
    },
    "76": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0"
      ]
    },
    "77": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0"
      ]
    },
    "78": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0"
      ]
    },
    "79": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0"
      ]
    },
    "80": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "81": {
      "op": "b approval_program_block@0"
    },
    "84": {
      "block": "approval_program_block@0",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "85": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%0#0"
      ]
    },
    "88": {
      "op": "bnz approval_program_bool_true@2",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "91": {
      "op": "b approval_program_or_contd@1"
    },
    "94": {
      "block": "approval_program_or_contd@1",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "95": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%1#0"
      ]
    },
    "98": {
      "op": "bz approval_program_bool_false@3",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "101": {
      "op": "b approval_program_bool_true@2"
    },
    "104": {
      "block": "approval_program_bool_true@2",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@4"
    },
    "107": {
      "block": "approval_program_bool_merge@4",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "108": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "109": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "110": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%0#0"
      ]
    },
    "111": {
      "op": "bz approval_program_bool_false@7",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "114": {
      "op": "b approval_program_and_contd@5"
    },
    "117": {
      "block": "approval_program_and_contd@5",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "118": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "119": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "120": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%1#0"
      ]
    },
    "121": {
      "op": "bnz approval_program_bool_false@7",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "124": {
      "op": "b approval_program_bool_true@6"
    },
    "127": {
      "block": "approval_program_bool_true@6",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "128": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "130": {
      "op": "b approval_program_bool_merge@8"
    },
    "133": {
      "block": "approval_program_bool_merge@8",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%0#0"
      ]
    },
    "135": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "138": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "139": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "and_result%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%2#0"
      ]
    },
    "142": {
      "op": "bnz approval_program_bool_true@10",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "145": {
      "op": "b approval_program_or_contd@9"
    },
    "148": {
      "block": "approval_program_or_contd@9",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "149": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%3#0"
      ]
    },
    "152": {
      "op": "bz approval_program_bool_false@11",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "155": {
      "op": "b approval_program_bool_true@10"
    },
    "158": {
      "block": "approval_program_bool_true@10",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@12"
    },
    "161": {
      "block": "approval_program_bool_merge@12",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "162": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "163": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "164": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%2#0"
      ]
    },
    "165": {
      "op": "bz approval_program_bool_false@15",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "168": {
      "op": "b approval_program_and_contd@13"
    },
    "171": {
      "block": "approval_program_and_contd@13",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "172": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "173": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "174": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%3#0"
      ]
    },
    "175": {
      "op": "bz approval_program_bool_false@15",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "178": {
      "op": "b approval_program_bool_true@14"
    },
    "181": {
      "block": "approval_program_bool_true@14",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "182": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "184": {
      "op": "b approval_program_bool_merge@16"
    },
    "187": {
      "block": "approval_program_bool_merge@16",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%1#0"
      ]
    },
    "189": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "192": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "and_result%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "193": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "and_result%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%4#0"
      ]
    },
    "196": {
      "op": "bz approval_program_bool_false@19",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "199": {
      "op": "b approval_program_and_contd@17"
    },
    "202": {
      "block": "approval_program_and_contd@17",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "203": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%5#0"
      ]
    },
    "206": {
      "op": "bz approval_program_bool_false@19",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "209": {
      "op": "b approval_program_bool_true@18"
    },
    "212": {
      "block": "approval_program_bool_true@18",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@20"
    },
    "215": {
      "block": "approval_program_bool_merge@20",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "216": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "217": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "218": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%4#0"
      ]
    },
    "219": {
      "op": "bz approval_program_bool_false@23",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "222": {
      "op": "b approval_program_and_contd@21"
    },
    "225": {
      "block": "approval_program_and_contd@21",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "226": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "227": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "228": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%5#0"
      ]
    },
    "229": {
      "op": "bnz approval_program_bool_false@23",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "232": {
      "op": "b approval_program_bool_true@22"
    },
    "235": {
      "block": "approval_program_bool_true@22",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "236": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "238": {
      "op": "b approval_program_bool_merge@24"
    },
    "241": {
      "block": "approval_program_bool_merge@24",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "and_result%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%3#0"
      ]
    },
    "243": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "246": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "and_result%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "247": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "and_result%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%6#0"
      ]
    },
    "250": {
      "op": "bz approval_program_bool_false@27",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "253": {
      "op": "b approval_program_and_contd@25"
    },
    "256": {
      "block": "approval_program_and_contd@25",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "257": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%7#0"
      ]
    },
    "260": {
      "op": "bz approval_program_bool_false@27",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "263": {
      "op": "b approval_program_bool_true@26"
    },
    "266": {
      "block": "approval_program_bool_true@26",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@28"
    },
    "269": {
      "block": "approval_program_bool_merge@28",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "270": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "271": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "272": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%6#0"
      ]
    },
    "273": {
      "op": "bz approval_program_bool_false@31",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "276": {
      "op": "b approval_program_and_contd@29"
    },
    "279": {
      "block": "approval_program_and_contd@29",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "280": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "281": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "282": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%7#0"
      ]
    },
    "283": {
      "op": "bz approval_program_bool_false@31",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "286": {
      "op": "b approval_program_bool_true@30"
    },
    "289": {
      "block": "approval_program_bool_true@30",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "290": {
      "op": "frame_bury 3",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "292": {
      "op": "b approval_program_bool_merge@32"
    },
    "295": {
      "block": "approval_program_bool_merge@32",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "and_result%5#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%5#0"
      ]
    },
    "297": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "300": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "and_result%5#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "301": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "and_result%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%8#0"
      ]
    },
    "304": {
      "op": "frame_bury 9",
      "defined_out": [
        "and_result%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "306": {
      "op": "intc_1 // 1",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "307": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "and_result%5#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "310": {
      "op": "frame_bury 10",
      "defined_out": [
        "and_result%5#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "312": {
      "op": "intc_0 // 0",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "313": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0",
        "and_result%5#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "314": {
      "op": "app_global_get_ex",
      "defined_out": [
        "and_result%5#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "315": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%8#0"
      ]
    },
    "316": {
      "op": "bz approval_program_bool_false@35",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "319": {
      "op": "b approval_program_and_contd@33"
    },
    "322": {
      "block": "approval_program_and_contd@33",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "323": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "324": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "325": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%9#0"
      ]
    },
    "326": {
      "op": "bz approval_program_bool_false@35",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "329": {
      "op": "b approval_program_bool_true@34"
    },
    "332": {
      "block": "approval_program_bool_true@34",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "333": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "335": {
      "op": "b approval_program_bool_merge@36"
    },
    "338": {
      "block": "approval_program_bool_merge@36",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "and_result%6#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%6#0"
      ]
    },
    "340": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "343": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "and_result%6#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "344": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_c",
      "op": "callsub func_c",
      "defined_out": [
        "and_result%6#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "347": {
      "op": "bz approval_program_ternary_false@38",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "350": {
      "op": "b approval_program_ternary_true@37"
    },
    "353": {
      "block": "approval_program_ternary_true@37",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "354": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "ternary_result%0#0"
      ]
    },
    "357": {
      "op": "frame_bury 7",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "359": {
      "op": "b approval_program_ternary_merge@39"
    },
    "362": {
      "block": "approval_program_ternary_merge@39",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "363": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "364": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "365": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%10#0"
      ]
    },
    "366": {
      "op": "bz approval_program_bool_false@42",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "369": {
      "op": "b approval_program_and_contd@40"
    },
    "372": {
      "block": "approval_program_and_contd@40",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "373": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "374": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%11#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "375": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%11#0"
      ]
    },
    "376": {
      "op": "bnz approval_program_bool_false@42",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "379": {
      "op": "b approval_program_bool_true@41"
    },
    "382": {
      "block": "approval_program_bool_true@41",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "383": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "385": {
      "op": "b approval_program_bool_merge@43"
    },
    "388": {
      "block": "approval_program_bool_merge@43",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "and_result%7#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%7#0"
      ]
    },
    "390": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "393": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "and_result%7#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "394": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_c",
      "op": "callsub func_c",
      "defined_out": [
        "and_result%7#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "397": {
      "op": "bz approval_program_ternary_false@45",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "400": {
      "op": "b approval_program_ternary_true@44"
    },
    "403": {
      "block": "approval_program_ternary_true@44",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "404": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "op": "callsub func_a",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "ternary_result%1#0"
      ]
    },
    "407": {
      "op": "frame_bury 8",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "409": {
      "op": "b approval_program_ternary_merge@46"
    },
    "412": {
      "block": "approval_program_ternary_merge@46",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "413": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_a\""
      ]
    },
    "414": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "415": {
      "error": "check self.did_execute_a exists",
      "op": "assert // check self.did_execute_a exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%12#0"
      ]
    },
    "416": {
      "op": "bnz approval_program_bool_false@49",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "419": {
      "op": "b approval_program_and_contd@47"
    },
    "422": {
      "block": "approval_program_and_contd@47",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "423": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0",
        "\"did_execute_b\""
      ]
    },
    "424": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%13#0",
        "maybe_value%13#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "425": {
      "error": "check self.did_execute_b exists",
      "op": "assert // check self.did_execute_b exists",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "maybe_value%13#0"
      ]
    },
    "426": {
      "op": "bz approval_program_bool_false@49",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "429": {
      "op": "b approval_program_bool_true@48"
    },
    "432": {
      "block": "approval_program_bool_true@48",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "433": {
      "op": "frame_bury 6",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "435": {
      "op": "b approval_program_bool_merge@50"
    },
    "438": {
      "block": "approval_program_bool_merge@50",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "and_result%8#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "and_result%8#0"
      ]
    },
    "440": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "op": "callsub assert_and_reset",
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "443": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "and_result%8#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "444": {
      "op": "frame_bury 0"
    },
    "446": {
      "retsub": true,
      "op": "retsub"
    },
    "447": {
      "block": "approval_program_bool_false@49",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "448": {
      "op": "frame_bury 6",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "450": {
      "op": "b approval_program_bool_merge@50"
    },
    "453": {
      "block": "approval_program_ternary_false@45",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "454": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "ternary_result%1#0"
      ]
    },
    "457": {
      "op": "frame_bury 8",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "459": {
      "op": "b approval_program_ternary_merge@46"
    },
    "462": {
      "block": "approval_program_bool_false@42",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "463": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "465": {
      "op": "b approval_program_bool_merge@43"
    },
    "468": {
      "block": "approval_program_ternary_false@38",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "1"
      ]
    },
    "469": {
      "callsub": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "op": "callsub func_b",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "ternary_result%0#0"
      ]
    },
    "472": {
      "op": "frame_bury 7",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "474": {
      "op": "b approval_program_ternary_merge@39"
    },
    "477": {
      "block": "approval_program_bool_false@35",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "478": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "480": {
      "op": "b approval_program_bool_merge@36"
    },
    "483": {
      "block": "approval_program_bool_false@31",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "484": {
      "op": "frame_bury 3",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "486": {
      "op": "b approval_program_bool_merge@32"
    },
    "489": {
      "block": "approval_program_bool_false@27",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@28"
    },
    "492": {
      "block": "approval_program_bool_false@23",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "493": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "495": {
      "op": "b approval_program_bool_merge@24"
    },
    "498": {
      "block": "approval_program_bool_false@19",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@20"
    },
    "501": {
      "block": "approval_program_bool_false@15",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "502": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "504": {
      "op": "b approval_program_bool_merge@16"
    },
    "507": {
      "block": "approval_program_bool_false@11",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@12"
    },
    "510": {
      "block": "approval_program_bool_false@7",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "511": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "513": {
      "op": "b approval_program_bool_merge@8"
    },
    "516": {
      "block": "approval_program_bool_false@3",
      "stack_in": [
        "and_result%0#0",
        "and_result%1#0",
        "and_result%3#0",
        "and_result%5#0",
        "and_result%6#0",
        "and_result%7#0",
        "and_result%8#0",
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "op": "b approval_program_bool_merge@4"
    },
    "519": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset",
      "params": {
        "condition#0": "uint64"
      },
      "block": "assert_and_reset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "522": {
      "op": "b assert_and_reset_block@0"
    },
    "525": {
      "block": "assert_and_reset_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "condition#0 (copy)"
      ],
      "stack_out": [
        "condition#0 (copy)"
      ]
    },
    "527": {
      "op": "assert",
      "stack_out": []
    },
    "528": {
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\""
      ],
      "stack_out": [
        "\"did_execute_b\""
      ]
    },
    "529": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"did_execute_b\"",
        "0"
      ],
      "stack_out": [
        "\"did_execute_b\"",
        "0"
      ]
    },
    "530": {
      "op": "app_global_put",
      "stack_out": []
    },
    "531": {
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\""
      ],
      "stack_out": [
        "\"did_execute_a\""
      ]
    },
    "532": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"did_execute_a\"",
        "0"
      ]
    },
    "533": {
      "op": "app_global_put",
      "stack_out": []
    },
    "534": {
      "retsub": true,
      "op": "retsub"
    },
    "535": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a",
      "params": {
        "ret_val#0": "uint64"
      },
      "block": "func_a",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "538": {
      "op": "b func_a_block@0"
    },
    "541": {
      "block": "func_a_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"did_execute_a\"",
      "defined_out": [
        "\"did_execute_a\""
      ],
      "stack_out": [
        "\"did_execute_a\""
      ]
    },
    "542": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"did_execute_a\"",
        "1"
      ],
      "stack_out": [
        "\"did_execute_a\"",
        "1"
      ]
    },
    "543": {
      "op": "app_global_put",
      "stack_out": []
    },
    "544": {
      "op": "frame_dig -1",
      "defined_out": [
        "ret_val#0 (copy)"
      ],
      "stack_out": [
        "ret_val#0 (copy)"
      ]
    },
    "546": {
      "retsub": true,
      "op": "retsub"
    },
    "547": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b",
      "params": {
        "ret_val#0": "uint64"
      },
      "block": "func_b",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "550": {
      "op": "b func_b_block@0"
    },
    "553": {
      "block": "func_b_block@0",
      "stack_in": [],
      "op": "bytec_2 // \"did_execute_b\"",
      "defined_out": [
        "\"did_execute_b\""
      ],
      "stack_out": [
        "\"did_execute_b\""
      ]
    },
    "554": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"did_execute_b\"",
        "1"
      ],
      "stack_out": [
        "\"did_execute_b\"",
        "1"
      ]
    },
    "555": {
      "op": "app_global_put",
      "stack_out": []
    },
    "556": {
      "op": "frame_dig -1",
      "defined_out": [
        "ret_val#0 (copy)"
      ],
      "stack_out": [
        "ret_val#0 (copy)"
      ]
    },
    "558": {
      "retsub": true,
      "op": "retsub"
    },
    "559": {
      "subroutine": "test_cases.conditional_execution.contract.ConditionalExecutionContract.func_c",
      "params": {
        "ret_val#0": "uint64"
      },
      "block": "func_c",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "562": {
      "op": "b func_c_block@0"
    },
    "565": {
      "block": "func_c_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "ret_val#0 (copy)"
      ],
      "stack_out": [
        "ret_val#0 (copy)"
      ]
    },
    "567": {
      "retsub": true,
      "op": "retsub"
    }
  }
}