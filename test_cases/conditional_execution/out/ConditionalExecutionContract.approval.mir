// Op                                                 // Op Description                                         Stack (out)                                    X stack        Source code                                                               Source line

#pragma version 10

// test_cases.conditional_execution.contract.ConditionalExecutionContract.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                 //                                                        {txn}
                                                      // virtual: store app_id%0#0 to l-stack (no copy)         app_id%0#0
                                                      // virtual: load app_id%0#0 from l-stack (no copy)        app_id%0#0
    bnz main_entrypoint@2                             //
    // Implicit fall through to main_on_create@1      //

main_on_create@1:
    callsub __init__                                  //
    // Implicit fall through to main_entrypoint@2     //

main_entrypoint@2:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:11
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(True)                                                         conditional_execution/contract.py:11
                                                      // virtual: store tmp%0#0 to l-stack (no copy)            tmp%0#0                                                       self.func_a(True)                                                         conditional_execution/contract.py:11
                                                      // virtual: load tmp%0#0 from l-stack (no copy)           tmp%0#0                                                       self.func_a(True) or self.func_b(True)                                    conditional_execution/contract.py:11
    bnz main_bool_merge@6                             //                                                                                                                      self.func_a(True) or self.func_b(True)                                    conditional_execution/contract.py:11
    // Implicit fall through to main_or_contd@3       //                                                                                                                      self.func_a(True) or self.func_b(True)                                    conditional_execution/contract.py:11

main_or_contd@3:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:11
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:11
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:11
    // Implicit fall through to main_bool_merge@6     //                                                                                                                      self.func_a(True) or self.func_b(True)                                    conditional_execution/contract.py:11

main_bool_merge@6:
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:13
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:13
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:13
                                                      // virtual: store maybe_exists%0#0 to l-stack (no copy)   maybe_exists%0#0,{app_global_get_ex}.0                        self.did_execute_a                                                        conditional_execution/contract.py:13
                                                      // virtual: store maybe_value%0#0 to l-stack (no copy)    maybe_value%0#0,maybe_exists%0#0                              self.did_execute_a                                                        conditional_execution/contract.py:13
                                                      // virtual: load maybe_exists%0#0 from l-stack (no copy)  maybe_value%0#0,maybe_exists%0#0                              self.did_execute_a                                                        conditional_execution/contract.py:13
    assert // check self.did_execute_a exists         //                                                        maybe_value%0#0                                               self.did_execute_a                                                        conditional_execution/contract.py:13
                                                      // virtual: load maybe_value%0#0 from l-stack (no copy)   maybe_value%0#0                                               self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:13
    bz main_bool_false@9                              //                                                                                                                      self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:13
    // Implicit fall through to main_and_contd@7      //                                                                                                                      self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:13

main_and_contd@7:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:13
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:13
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:13
                                                      // virtual: store maybe_exists%1#0 to l-stack (no copy)   maybe_exists%1#0,{app_global_get_ex}.0                        self.did_execute_b                                                        conditional_execution/contract.py:13
                                                      // virtual: store maybe_value%1#0 to l-stack (no copy)    maybe_value%1#0,maybe_exists%1#0                              self.did_execute_b                                                        conditional_execution/contract.py:13
                                                      // virtual: load maybe_exists%1#0 from l-stack (no copy)  maybe_value%1#0,maybe_exists%1#0                              self.did_execute_b                                                        conditional_execution/contract.py:13
    assert // check self.did_execute_b exists         //                                                        maybe_value%1#0                                               self.did_execute_b                                                        conditional_execution/contract.py:13
                                                      // virtual: load maybe_value%1#0 from l-stack (no copy)   maybe_value%1#0                                               not self.did_execute_b                                                    conditional_execution/contract.py:13
    bnz main_bool_false@9                             //                                                                                                                      not self.did_execute_b                                                    conditional_execution/contract.py:13
    // Implicit fall through to main_bool_true@8      //                                                                                                                      not self.did_execute_b                                                    conditional_execution/contract.py:13

main_bool_true@8:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%0#0 to x-stack               (ùïè) and_result%0#0 |
    b main_bool_merge@10                              //                                                        (ùïè) and_result%0#0 |                           and_result%0#0

main_bool_false@9:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%0#0 to x-stack               (ùïè) and_result%0#0 |
    // Implicit fall through to main_bool_merge@10    //                                                        (ùïè) and_result%0#0 |                           and_result%0#0

main_bool_merge@10:
                                                      // virtual: load and_result%0#0 from x-stack              and_result%0#0                                 and_result%0#0 self.assert_and_reset(\nself.did_execute_a and not self.did_execute_b,\n) conditional_execution/contract.py:12-14
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nself.did_execute_a and not self.did_execute_b,\n) conditional_execution/contract.py:12-14
    int 0                                             //                                                        0                                                             False                                                                     conditional_execution/contract.py:17
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(False)                                                        conditional_execution/contract.py:17
                                                      // virtual: store tmp%2#0 to l-stack (no copy)            tmp%2#0                                                       self.func_a(False)                                                        conditional_execution/contract.py:17
                                                      // virtual: load tmp%2#0 from l-stack (no copy)           tmp%2#0                                                       self.func_a(False) or self.func_b(True)                                   conditional_execution/contract.py:17
    bnz main_bool_merge@14                            //                                                                                                                      self.func_a(False) or self.func_b(True)                                   conditional_execution/contract.py:17
    // Implicit fall through to main_or_contd@11      //                                                                                                                      self.func_a(False) or self.func_b(True)                                   conditional_execution/contract.py:17

main_or_contd@11:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:17
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:17
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:17
    // Implicit fall through to main_bool_merge@14    //                                                                                                                      self.func_a(False) or self.func_b(True)                                   conditional_execution/contract.py:17

main_bool_merge@14:
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:19
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:19
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:19
                                                      // virtual: store maybe_exists%2#0 to l-stack (no copy)   maybe_exists%2#0,{app_global_get_ex}.0                        self.did_execute_a                                                        conditional_execution/contract.py:19
                                                      // virtual: store maybe_value%2#0 to l-stack (no copy)    maybe_value%2#0,maybe_exists%2#0                              self.did_execute_a                                                        conditional_execution/contract.py:19
                                                      // virtual: load maybe_exists%2#0 from l-stack (no copy)  maybe_value%2#0,maybe_exists%2#0                              self.did_execute_a                                                        conditional_execution/contract.py:19
    assert // check self.did_execute_a exists         //                                                        maybe_value%2#0                                               self.did_execute_a                                                        conditional_execution/contract.py:19
                                                      // virtual: load maybe_value%2#0 from l-stack (no copy)   maybe_value%2#0                                               self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:19
    bz main_bool_false@17                             //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:19
    // Implicit fall through to main_and_contd@15     //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:19

main_and_contd@15:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:19
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:19
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:19
                                                      // virtual: store maybe_exists%3#0 to l-stack (no copy)   maybe_exists%3#0,{app_global_get_ex}.0                        self.did_execute_b                                                        conditional_execution/contract.py:19
                                                      // virtual: store maybe_value%3#0 to l-stack (no copy)    maybe_value%3#0,maybe_exists%3#0                              self.did_execute_b                                                        conditional_execution/contract.py:19
                                                      // virtual: load maybe_exists%3#0 from l-stack (no copy)  maybe_value%3#0,maybe_exists%3#0                              self.did_execute_b                                                        conditional_execution/contract.py:19
    assert // check self.did_execute_b exists         //                                                        maybe_value%3#0                                               self.did_execute_b                                                        conditional_execution/contract.py:19
                                                      // virtual: load maybe_value%3#0 from l-stack (no copy)   maybe_value%3#0                                               self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:19
    bz main_bool_false@17                             //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:19
    // Implicit fall through to main_bool_true@16     //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:19

main_bool_true@16:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%1#0 to x-stack               (ùïè) and_result%1#0 |
    b main_bool_merge@18                              //                                                        (ùïè) and_result%1#0 |                           and_result%1#0

main_bool_false@17:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%1#0 to x-stack               (ùïè) and_result%1#0 |
    // Implicit fall through to main_bool_merge@18    //                                                        (ùïè) and_result%1#0 |                           and_result%1#0

main_bool_merge@18:
                                                      // virtual: load and_result%1#0 from x-stack              and_result%1#0                                 and_result%1#0 self.assert_and_reset(\nself.did_execute_a and self.did_execute_b,\n)     conditional_execution/contract.py:18-20
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nself.did_execute_a and self.did_execute_b,\n)     conditional_execution/contract.py:18-20
    int 0                                             //                                                        0                                                             False                                                                     conditional_execution/contract.py:23
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(False)                                                        conditional_execution/contract.py:23
                                                      // virtual: store tmp%4#0 to l-stack (no copy)            tmp%4#0                                                       self.func_a(False)                                                        conditional_execution/contract.py:23
                                                      // virtual: load tmp%4#0 from l-stack (no copy)           tmp%4#0                                                       self.func_a(False) and self.func_b(True)                                  conditional_execution/contract.py:23
    bz main_bool_merge@22                             //                                                                                                                      self.func_a(False) and self.func_b(True)                                  conditional_execution/contract.py:23
    // Implicit fall through to main_and_contd@19     //                                                                                                                      self.func_a(False) and self.func_b(True)                                  conditional_execution/contract.py:23

main_and_contd@19:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:23
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:23
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:23
    // Implicit fall through to main_bool_merge@22    //                                                                                                                      self.func_a(False) and self.func_b(True)                                  conditional_execution/contract.py:23

main_bool_merge@22:
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:25
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:25
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:25
                                                      // virtual: store maybe_exists%4#0 to l-stack (no copy)   maybe_exists%4#0,{app_global_get_ex}.0                        self.did_execute_a                                                        conditional_execution/contract.py:25
                                                      // virtual: store maybe_value%4#0 to l-stack (no copy)    maybe_value%4#0,maybe_exists%4#0                              self.did_execute_a                                                        conditional_execution/contract.py:25
                                                      // virtual: load maybe_exists%4#0 from l-stack (no copy)  maybe_value%4#0,maybe_exists%4#0                              self.did_execute_a                                                        conditional_execution/contract.py:25
    assert // check self.did_execute_a exists         //                                                        maybe_value%4#0                                               self.did_execute_a                                                        conditional_execution/contract.py:25
                                                      // virtual: load maybe_value%4#0 from l-stack (no copy)   maybe_value%4#0                                               self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:25
    bz main_bool_false@25                             //                                                                                                                      self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:25
    // Implicit fall through to main_and_contd@23     //                                                                                                                      self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:25

main_and_contd@23:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:25
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:25
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:25
                                                      // virtual: store maybe_exists%5#0 to l-stack (no copy)   maybe_exists%5#0,{app_global_get_ex}.0                        self.did_execute_b                                                        conditional_execution/contract.py:25
                                                      // virtual: store maybe_value%5#0 to l-stack (no copy)    maybe_value%5#0,maybe_exists%5#0                              self.did_execute_b                                                        conditional_execution/contract.py:25
                                                      // virtual: load maybe_exists%5#0 from l-stack (no copy)  maybe_value%5#0,maybe_exists%5#0                              self.did_execute_b                                                        conditional_execution/contract.py:25
    assert // check self.did_execute_b exists         //                                                        maybe_value%5#0                                               self.did_execute_b                                                        conditional_execution/contract.py:25
                                                      // virtual: load maybe_value%5#0 from l-stack (no copy)   maybe_value%5#0                                               not self.did_execute_b                                                    conditional_execution/contract.py:25
    bnz main_bool_false@25                            //                                                                                                                      not self.did_execute_b                                                    conditional_execution/contract.py:25
    // Implicit fall through to main_bool_true@24     //                                                                                                                      not self.did_execute_b                                                    conditional_execution/contract.py:25

main_bool_true@24:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%3#0 to x-stack               (ùïè) and_result%3#0 |
    b main_bool_merge@26                              //                                                        (ùïè) and_result%3#0 |                           and_result%3#0

main_bool_false@25:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%3#0 to x-stack               (ùïè) and_result%3#0 |
    // Implicit fall through to main_bool_merge@26    //                                                        (ùïè) and_result%3#0 |                           and_result%3#0

main_bool_merge@26:
                                                      // virtual: load and_result%3#0 from x-stack              and_result%3#0                                 and_result%3#0 self.assert_and_reset(\nself.did_execute_a and not self.did_execute_b,\n) conditional_execution/contract.py:24-26
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nself.did_execute_a and not self.did_execute_b,\n) conditional_execution/contract.py:24-26
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:29
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(True)                                                         conditional_execution/contract.py:29
                                                      // virtual: store tmp%6#0 to l-stack (no copy)            tmp%6#0                                                       self.func_a(True)                                                         conditional_execution/contract.py:29
                                                      // virtual: load tmp%6#0 from l-stack (no copy)           tmp%6#0                                                       self.func_a(True) and self.func_b(True)                                   conditional_execution/contract.py:29
    bz main_bool_merge@30                             //                                                                                                                      self.func_a(True) and self.func_b(True)                                   conditional_execution/contract.py:29
    // Implicit fall through to main_and_contd@27     //                                                                                                                      self.func_a(True) and self.func_b(True)                                   conditional_execution/contract.py:29

main_and_contd@27:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:29
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:29
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:29
    // Implicit fall through to main_bool_merge@30    //                                                                                                                      self.func_a(True) and self.func_b(True)                                   conditional_execution/contract.py:29

main_bool_merge@30:
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:31
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:31
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:31
                                                      // virtual: store maybe_exists%6#0 to l-stack (no copy)   maybe_exists%6#0,{app_global_get_ex}.0                        self.did_execute_a                                                        conditional_execution/contract.py:31
                                                      // virtual: store maybe_value%6#0 to l-stack (no copy)    maybe_value%6#0,maybe_exists%6#0                              self.did_execute_a                                                        conditional_execution/contract.py:31
                                                      // virtual: load maybe_exists%6#0 from l-stack (no copy)  maybe_value%6#0,maybe_exists%6#0                              self.did_execute_a                                                        conditional_execution/contract.py:31
    assert // check self.did_execute_a exists         //                                                        maybe_value%6#0                                               self.did_execute_a                                                        conditional_execution/contract.py:31
                                                      // virtual: load maybe_value%6#0 from l-stack (no copy)   maybe_value%6#0                                               self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:31
    bz main_bool_false@33                             //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:31
    // Implicit fall through to main_and_contd@31     //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:31

main_and_contd@31:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:31
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:31
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:31
                                                      // virtual: store maybe_exists%7#0 to l-stack (no copy)   maybe_exists%7#0,{app_global_get_ex}.0                        self.did_execute_b                                                        conditional_execution/contract.py:31
                                                      // virtual: store maybe_value%7#0 to l-stack (no copy)    maybe_value%7#0,maybe_exists%7#0                              self.did_execute_b                                                        conditional_execution/contract.py:31
                                                      // virtual: load maybe_exists%7#0 from l-stack (no copy)  maybe_value%7#0,maybe_exists%7#0                              self.did_execute_b                                                        conditional_execution/contract.py:31
    assert // check self.did_execute_b exists         //                                                        maybe_value%7#0                                               self.did_execute_b                                                        conditional_execution/contract.py:31
                                                      // virtual: load maybe_value%7#0 from l-stack (no copy)   maybe_value%7#0                                               self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:31
    bz main_bool_false@33                             //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:31
    // Implicit fall through to main_bool_true@32     //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:31

main_bool_true@32:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%5#0 to x-stack               (ùïè) and_result%5#0 |
    b main_bool_merge@34                              //                                                        (ùïè) and_result%5#0 |                           and_result%5#0

main_bool_false@33:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%5#0 to x-stack               (ùïè) and_result%5#0 |
    // Implicit fall through to main_bool_merge@34    //                                                        (ùïè) and_result%5#0 |                           and_result%5#0

main_bool_merge@34:
                                                      // virtual: load and_result%5#0 from x-stack              and_result%5#0                                 and_result%5#0 self.assert_and_reset(\nself.did_execute_a and self.did_execute_b,\n)     conditional_execution/contract.py:30-32
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nself.did_execute_a and self.did_execute_b,\n)     conditional_execution/contract.py:30-32
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:35
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(True)                                                         conditional_execution/contract.py:35
    pop                                               //                                                                                                                      self.func_a(True)                                                         conditional_execution/contract.py:35
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:35
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:35
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:35
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:37
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:37
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:37
                                                      // virtual: store maybe_exists%8#0 to l-stack (no copy)   maybe_exists%8#0,{app_global_get_ex}.0                        self.did_execute_a                                                        conditional_execution/contract.py:37
                                                      // virtual: store maybe_value%8#0 to l-stack (no copy)    maybe_value%8#0,maybe_exists%8#0                              self.did_execute_a                                                        conditional_execution/contract.py:37
                                                      // virtual: load maybe_exists%8#0 from l-stack (no copy)  maybe_value%8#0,maybe_exists%8#0                              self.did_execute_a                                                        conditional_execution/contract.py:37
    assert // check self.did_execute_a exists         //                                                        maybe_value%8#0                                               self.did_execute_a                                                        conditional_execution/contract.py:37
                                                      // virtual: load maybe_value%8#0 from l-stack (no copy)   maybe_value%8#0                                               self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:37
    bz main_bool_false@37                             //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:37
    // Implicit fall through to main_and_contd@35     //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:37

main_and_contd@35:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:37
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:37
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:37
                                                      // virtual: store maybe_exists%9#0 to l-stack (no copy)   maybe_exists%9#0,{app_global_get_ex}.0                        self.did_execute_b                                                        conditional_execution/contract.py:37
                                                      // virtual: store maybe_value%9#0 to l-stack (no copy)    maybe_value%9#0,maybe_exists%9#0                              self.did_execute_b                                                        conditional_execution/contract.py:37
                                                      // virtual: load maybe_exists%9#0 from l-stack (no copy)  maybe_value%9#0,maybe_exists%9#0                              self.did_execute_b                                                        conditional_execution/contract.py:37
    assert // check self.did_execute_b exists         //                                                        maybe_value%9#0                                               self.did_execute_b                                                        conditional_execution/contract.py:37
                                                      // virtual: load maybe_value%9#0 from l-stack (no copy)   maybe_value%9#0                                               self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:37
    bz main_bool_false@37                             //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:37
    // Implicit fall through to main_bool_true@36     //                                                                                                                      self.did_execute_a and self.did_execute_b                                 conditional_execution/contract.py:37

main_bool_true@36:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%6#0 to x-stack               (ùïè) and_result%6#0 |
    b main_bool_merge@38                              //                                                        (ùïè) and_result%6#0 |                           and_result%6#0

main_bool_false@37:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%6#0 to x-stack               (ùïè) and_result%6#0 |
    // Implicit fall through to main_bool_merge@38    //                                                        (ùïè) and_result%6#0 |                           and_result%6#0

main_bool_merge@38:
                                                      // virtual: load and_result%6#0 from x-stack              and_result%6#0                                 and_result%6#0 self.assert_and_reset(\nself.did_execute_a and self.did_execute_b,\n)     conditional_execution/contract.py:36-38
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nself.did_execute_a and self.did_execute_b,\n)     conditional_execution/contract.py:36-38
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:41
    callsub func_c                                    //                                                        {func_c}                                                      self.func_c(True)                                                         conditional_execution/contract.py:41
                                                      // virtual: store tmp%10#0 to l-stack (no copy)           tmp%10#0                                                      self.func_c(True)                                                         conditional_execution/contract.py:41
                                                      // virtual: load tmp%10#0 from l-stack (no copy)          tmp%10#0                                                      self.func_a(True) if self.func_c(True) else self.func_b(True)             conditional_execution/contract.py:41
    bz main_ternary_false@40                          //                                                                                                                      self.func_a(True) if self.func_c(True) else self.func_b(True)             conditional_execution/contract.py:41
    // Implicit fall through to main_ternary_true@39  //                                                                                                                      self.func_a(True) if self.func_c(True) else self.func_b(True)             conditional_execution/contract.py:41

main_ternary_true@39:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:41
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(True)                                                         conditional_execution/contract.py:41
    pop                                               //                                                                                                                      self.func_a(True)                                                         conditional_execution/contract.py:41
    b main_ternary_merge@41                           //

main_ternary_false@40:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:41
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:41
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:41
    // Implicit fall through to main_ternary_merge@41 //

main_ternary_merge@41:
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:43
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:43
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:43
                                                      // virtual: store maybe_exists%10#0 to l-stack (no copy)  maybe_exists%10#0,{app_global_get_ex}.0                       self.did_execute_a                                                        conditional_execution/contract.py:43
                                                      // virtual: store maybe_value%10#0 to l-stack (no copy)   maybe_value%10#0,maybe_exists%10#0                            self.did_execute_a                                                        conditional_execution/contract.py:43
                                                      // virtual: load maybe_exists%10#0 from l-stack (no copy) maybe_value%10#0,maybe_exists%10#0                            self.did_execute_a                                                        conditional_execution/contract.py:43
    assert // check self.did_execute_a exists         //                                                        maybe_value%10#0                                              self.did_execute_a                                                        conditional_execution/contract.py:43
                                                      // virtual: load maybe_value%10#0 from l-stack (no copy)  maybe_value%10#0                                              self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:43
    bz main_bool_false@44                             //                                                                                                                      self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:43
    // Implicit fall through to main_and_contd@42     //                                                                                                                      self.did_execute_a and not self.did_execute_b                             conditional_execution/contract.py:43

main_and_contd@42:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:43
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:43
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:43
                                                      // virtual: store maybe_exists%11#0 to l-stack (no copy)  maybe_exists%11#0,{app_global_get_ex}.0                       self.did_execute_b                                                        conditional_execution/contract.py:43
                                                      // virtual: store maybe_value%11#0 to l-stack (no copy)   maybe_value%11#0,maybe_exists%11#0                            self.did_execute_b                                                        conditional_execution/contract.py:43
                                                      // virtual: load maybe_exists%11#0 from l-stack (no copy) maybe_value%11#0,maybe_exists%11#0                            self.did_execute_b                                                        conditional_execution/contract.py:43
    assert // check self.did_execute_b exists         //                                                        maybe_value%11#0                                              self.did_execute_b                                                        conditional_execution/contract.py:43
                                                      // virtual: load maybe_value%11#0 from l-stack (no copy)  maybe_value%11#0                                              not self.did_execute_b                                                    conditional_execution/contract.py:43
    bnz main_bool_false@44                            //                                                                                                                      not self.did_execute_b                                                    conditional_execution/contract.py:43
    // Implicit fall through to main_bool_true@43     //                                                                                                                      not self.did_execute_b                                                    conditional_execution/contract.py:43

main_bool_true@43:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%7#0 to x-stack               (ùïè) and_result%7#0 |
    b main_bool_merge@45                              //                                                        (ùïè) and_result%7#0 |                           and_result%7#0

main_bool_false@44:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%7#0 to x-stack               (ùïè) and_result%7#0 |
    // Implicit fall through to main_bool_merge@45    //                                                        (ùïè) and_result%7#0 |                           and_result%7#0

main_bool_merge@45:
                                                      // virtual: load and_result%7#0 from x-stack              and_result%7#0                                 and_result%7#0 self.assert_and_reset(\nself.did_execute_a and not self.did_execute_b,\n) conditional_execution/contract.py:42-44
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nself.did_execute_a and not self.did_execute_b,\n) conditional_execution/contract.py:42-44
    int 0                                             //                                                        0                                                             False                                                                     conditional_execution/contract.py:47
    callsub func_c                                    //                                                        {func_c}                                                      self.func_c(False)                                                        conditional_execution/contract.py:47
                                                      // virtual: store tmp%11#0 to l-stack (no copy)           tmp%11#0                                                      self.func_c(False)                                                        conditional_execution/contract.py:47
                                                      // virtual: load tmp%11#0 from l-stack (no copy)          tmp%11#0                                                      self.func_a(True) if self.func_c(False) else self.func_b(True)            conditional_execution/contract.py:47
    bz main_ternary_false@47                          //                                                                                                                      self.func_a(True) if self.func_c(False) else self.func_b(True)            conditional_execution/contract.py:47
    // Implicit fall through to main_ternary_true@46  //                                                                                                                      self.func_a(True) if self.func_c(False) else self.func_b(True)            conditional_execution/contract.py:47

main_ternary_true@46:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:47
    callsub func_a                                    //                                                        {func_a}                                                      self.func_a(True)                                                         conditional_execution/contract.py:47
    pop                                               //                                                                                                                      self.func_a(True)                                                         conditional_execution/contract.py:47
    b main_ternary_merge@48                           //

main_ternary_false@47:
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:47
    callsub func_b                                    //                                                        {func_b}                                                      self.func_b(True)                                                         conditional_execution/contract.py:47
    pop                                               //                                                                                                                      self.func_b(True)                                                         conditional_execution/contract.py:47
    // Implicit fall through to main_ternary_merge@48 //

main_ternary_merge@48:
    int 0                                             //                                                        0                                                             self.did_execute_a                                                        conditional_execution/contract.py:49
    byte "did_execute_a"                              //                                                        0,"did_execute_a"                                             self.did_execute_a                                                        conditional_execution/contract.py:49
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_a                                                        conditional_execution/contract.py:49
                                                      // virtual: store maybe_exists%12#0 to l-stack (no copy)  maybe_exists%12#0,{app_global_get_ex}.0                       self.did_execute_a                                                        conditional_execution/contract.py:49
                                                      // virtual: store maybe_value%12#0 to l-stack (no copy)   maybe_value%12#0,maybe_exists%12#0                            self.did_execute_a                                                        conditional_execution/contract.py:49
                                                      // virtual: load maybe_exists%12#0 from l-stack (no copy) maybe_value%12#0,maybe_exists%12#0                            self.did_execute_a                                                        conditional_execution/contract.py:49
    assert // check self.did_execute_a exists         //                                                        maybe_value%12#0                                              self.did_execute_a                                                        conditional_execution/contract.py:49
                                                      // virtual: load maybe_value%12#0 from l-stack (no copy)  maybe_value%12#0                                              not self.did_execute_a                                                    conditional_execution/contract.py:49
    bnz main_bool_false@51                            //                                                                                                                      not self.did_execute_a                                                    conditional_execution/contract.py:49
    // Implicit fall through to main_and_contd@49     //                                                                                                                      not self.did_execute_a                                                    conditional_execution/contract.py:49

main_and_contd@49:
    int 0                                             //                                                        0                                                             self.did_execute_b                                                        conditional_execution/contract.py:49
    byte "did_execute_b"                              //                                                        0,"did_execute_b"                                             self.did_execute_b                                                        conditional_execution/contract.py:49
    app_global_get_ex                                 //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                   self.did_execute_b                                                        conditional_execution/contract.py:49
                                                      // virtual: store maybe_exists%13#0 to l-stack (no copy)  maybe_exists%13#0,{app_global_get_ex}.0                       self.did_execute_b                                                        conditional_execution/contract.py:49
                                                      // virtual: store maybe_value%13#0 to l-stack (no copy)   maybe_value%13#0,maybe_exists%13#0                            self.did_execute_b                                                        conditional_execution/contract.py:49
                                                      // virtual: load maybe_exists%13#0 from l-stack (no copy) maybe_value%13#0,maybe_exists%13#0                            self.did_execute_b                                                        conditional_execution/contract.py:49
    assert // check self.did_execute_b exists         //                                                        maybe_value%13#0                                              self.did_execute_b                                                        conditional_execution/contract.py:49
                                                      // virtual: load maybe_value%13#0 from l-stack (no copy)  maybe_value%13#0                                              not self.did_execute_a and self.did_execute_b                             conditional_execution/contract.py:49
    bz main_bool_false@51                             //                                                                                                                      not self.did_execute_a and self.did_execute_b                             conditional_execution/contract.py:49
    // Implicit fall through to main_bool_true@50     //                                                                                                                      not self.did_execute_a and self.did_execute_b                             conditional_execution/contract.py:49

main_bool_true@50:
    int 1                                             //                                                        1
                                                      // virtual: store and_result%8#0 to x-stack               (ùïè) and_result%8#0 |
    b main_bool_merge@52                              //                                                        (ùïè) and_result%8#0 |                           and_result%8#0

main_bool_false@51:
    int 0                                             //                                                        0
                                                      // virtual: store and_result%8#0 to x-stack               (ùïè) and_result%8#0 |
    // Implicit fall through to main_bool_merge@52    //                                                        (ùïè) and_result%8#0 |                           and_result%8#0

main_bool_merge@52:
                                                      // virtual: load and_result%8#0 from x-stack              and_result%8#0                                 and_result%8#0 self.assert_and_reset(\nnot self.did_execute_a and self.did_execute_b,\n) conditional_execution/contract.py:48-50
    callsub assert_and_reset                          //                                                                                                                      self.assert_and_reset(\nnot self.did_execute_a and self.did_execute_b,\n) conditional_execution/contract.py:48-50
    int 1                                             //                                                        1                                                             True                                                                      conditional_execution/contract.py:52
    return                                            //                                                                                                                      return True                                                               conditional_execution/contract.py:52


// test_cases.conditional_execution.contract.ConditionalExecutionContract.func_a(ret_val: uint64) -> uint64:
func_a:
    proto 1 1                                         //                                                        (ùï°) ret_val#0 |                                               @subroutine\ndef func_a(self, ret_val: bool) -> bool:                     conditional_execution/contract.py:63-64

func_a_block@0:
    byte "did_execute_a"                              //                                                        (ùï°) ret_val#0 | "did_execute_a"                               self.did_execute_a                                                        conditional_execution/contract.py:65
    int 1                                             //                                                        (ùï°) ret_val#0 | "did_execute_a",1                             True                                                                      conditional_execution/contract.py:65
    app_global_put                                    //                                                        (ùï°) ret_val#0 |                                               self.did_execute_a = True                                                 conditional_execution/contract.py:65
    frame_dig -1                                      // load ret_val#0 from parameters                         (ùï°) ret_val#0 | ret_val#0                                     return ret_val                                                            conditional_execution/contract.py:66
    retsub                                            //                                                        ret_val#0                                                     return ret_val                                                            conditional_execution/contract.py:66


// test_cases.conditional_execution.contract.ConditionalExecutionContract.func_b(ret_val: uint64) -> uint64:
func_b:
    proto 1 1                                         //                                                        (ùï°) ret_val#0 |                                               @subroutine\ndef func_b(self, ret_val: bool) -> bool:                     conditional_execution/contract.py:68-69

func_b_block@0:
    byte "did_execute_b"                              //                                                        (ùï°) ret_val#0 | "did_execute_b"                               self.did_execute_b                                                        conditional_execution/contract.py:70
    int 1                                             //                                                        (ùï°) ret_val#0 | "did_execute_b",1                             True                                                                      conditional_execution/contract.py:70
    app_global_put                                    //                                                        (ùï°) ret_val#0 |                                               self.did_execute_b = True                                                 conditional_execution/contract.py:70
    frame_dig -1                                      // load ret_val#0 from parameters                         (ùï°) ret_val#0 | ret_val#0                                     return ret_val                                                            conditional_execution/contract.py:71
    retsub                                            //                                                        ret_val#0                                                     return ret_val                                                            conditional_execution/contract.py:71


// test_cases.conditional_execution.contract.ConditionalExecutionContract.assert_and_reset(condition: uint64) -> void:
assert_and_reset:
    proto 1 0                                         //                                                        (ùï°) condition#0 |                                             @subroutine\ndef assert_and_reset(self, condition: bool) -> None:         conditional_execution/contract.py:57-58

assert_and_reset_block@0:
    frame_dig -1                                      // load condition#0 from parameters                       (ùï°) condition#0 | condition#0                                 assert condition                                                          conditional_execution/contract.py:59
    assert                                            //                                                        (ùï°) condition#0 |                                             assert condition                                                          conditional_execution/contract.py:59
    byte "did_execute_b"                              //                                                        (ùï°) condition#0 | "did_execute_b"                             self.did_execute_b                                                        conditional_execution/contract.py:60
    int 0                                             //                                                        (ùï°) condition#0 | "did_execute_b",0                           False                                                                     conditional_execution/contract.py:60
    app_global_put                                    //                                                        (ùï°) condition#0 |                                             self.did_execute_b = False                                                conditional_execution/contract.py:60
    byte "did_execute_a"                              //                                                        (ùï°) condition#0 | "did_execute_a"                             self.did_execute_a                                                        conditional_execution/contract.py:61
    int 0                                             //                                                        (ùï°) condition#0 | "did_execute_a",0                           False                                                                     conditional_execution/contract.py:61
    app_global_put                                    //                                                        (ùï°) condition#0 |                                             self.did_execute_a = False                                                conditional_execution/contract.py:61
    retsub                                            //


// test_cases.conditional_execution.contract.ConditionalExecutionContract.func_c(ret_val: uint64) -> uint64:
func_c:
    proto 1 1                                         //                                                        (ùï°) ret_val#0 |                                               @subroutine\ndef func_c(self, ret_val: bool) -> bool:                     conditional_execution/contract.py:73-74

func_c_block@0:
    frame_dig -1                                      // load ret_val#0 from parameters                         (ùï°) ret_val#0 | ret_val#0                                     return ret_val                                                            conditional_execution/contract.py:75
    retsub                                            //                                                        ret_val#0                                                     return ret_val                                                            conditional_execution/contract.py:75


// test_cases.conditional_execution.contract.ConditionalExecutionContract.__init__() -> void:
__init__:
    proto 0 0                                         //                                                                                                                      def __init__(self) -> None:                                               conditional_execution/contract.py:5

__init___block@0:
    byte "did_execute_a"                              //                                                        "did_execute_a"                                               self.did_execute_a                                                        conditional_execution/contract.py:6
    int 0                                             //                                                        "did_execute_a",0                                             False                                                                     conditional_execution/contract.py:6
    app_global_put                                    //                                                                                                                      self.did_execute_a = False                                                conditional_execution/contract.py:6
    byte "did_execute_b"                              //                                                        "did_execute_b"                                               self.did_execute_b                                                        conditional_execution/contract.py:7
    int 0                                             //                                                        "did_execute_b",0                                             False                                                                     conditional_execution/contract.py:7
    app_global_put                                    //                                                                                                                      self.did_execute_b = False                                                conditional_execution/contract.py:7
    retsub                                            //

