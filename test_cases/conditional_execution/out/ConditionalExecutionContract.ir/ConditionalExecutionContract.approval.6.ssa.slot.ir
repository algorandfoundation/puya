main test_cases.conditional_execution.contract.ConditionalExecutionContract.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_b" 0u)
        goto block@2
    block@2: // after_if_else_L1
        (app_global_put "did_execute_a" 1u)
        let (maybe_value%0#0: uint64, maybe_exists%0#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%0#0) // check self.did_execute_a exists
        goto maybe_value%0#0 ? block@8 : block@10
    block@8: // and_contd_L13
        let (maybe_value%1#0: uint64, maybe_exists%1#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%1#0) // check self.did_execute_b exists
        goto maybe_value%1#0 ? block@10 : block@9
    block@9: // bool_true_L13
        let and_result%0#0: bool = 1u
        goto block@11
    block@10: // bool_false_L13
        let and_result%0#1: bool = 0u
        goto block@11
    block@11: // bool_merge_L13
        let condition#6: bool = φ(and_result%0#0 <- block@9, and_result%0#1 <- block@10)
        (assert condition#6)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_a" 1u)
        (app_global_put "did_execute_b" 1u)
        let (maybe_value%2#0: uint64, maybe_exists%2#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%2#0) // check self.did_execute_a exists
        goto maybe_value%2#0 ? block@16 : block@18
    block@16: // and_contd_L19
        let (maybe_value%3#0: uint64, maybe_exists%3#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%3#0) // check self.did_execute_b exists
        goto maybe_value%3#0 ? block@17 : block@18
    block@17: // bool_true_L19
        let and_result%1#0: bool = 1u
        goto block@19
    block@18: // bool_false_L19
        let and_result%1#1: bool = 0u
        goto block@19
    block@19: // bool_merge_L19
        let condition#5: bool = φ(and_result%1#0 <- block@17, and_result%1#1 <- block@18)
        (assert condition#5)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_a" 1u)
        let (maybe_value%4#0: uint64, maybe_exists%4#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%4#0) // check self.did_execute_a exists
        goto maybe_value%4#0 ? block@24 : block@26
    block@24: // and_contd_L25
        let (maybe_value%5#0: uint64, maybe_exists%5#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%5#0) // check self.did_execute_b exists
        goto maybe_value%5#0 ? block@26 : block@25
    block@25: // bool_true_L25
        let and_result%3#0: bool = 1u
        goto block@27
    block@26: // bool_false_L25
        let and_result%3#1: bool = 0u
        goto block@27
    block@27: // bool_merge_L25
        let condition#4: bool = φ(and_result%3#0 <- block@25, and_result%3#1 <- block@26)
        (assert condition#4)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_a" 1u)
        (app_global_put "did_execute_b" 1u)
        let (maybe_value%6#0: uint64, maybe_exists%6#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%6#0) // check self.did_execute_a exists
        goto maybe_value%6#0 ? block@32 : block@34
    block@32: // and_contd_L31
        let (maybe_value%7#0: uint64, maybe_exists%7#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%7#0) // check self.did_execute_b exists
        goto maybe_value%7#0 ? block@33 : block@34
    block@33: // bool_true_L31
        let and_result%5#0: bool = 1u
        goto block@35
    block@34: // bool_false_L31
        let and_result%5#1: bool = 0u
        goto block@35
    block@35: // bool_merge_L31
        let condition#3: bool = φ(and_result%5#0 <- block@33, and_result%5#1 <- block@34)
        (assert condition#3)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_a" 1u)
        (app_global_put "did_execute_b" 1u)
        let (maybe_value%8#0: uint64, maybe_exists%8#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%8#0) // check self.did_execute_a exists
        goto maybe_value%8#0 ? block@36 : block@38
    block@36: // and_contd_L37
        let (maybe_value%9#0: uint64, maybe_exists%9#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%9#0) // check self.did_execute_b exists
        goto maybe_value%9#0 ? block@37 : block@38
    block@37: // bool_true_L37
        let and_result%6#0: bool = 1u
        goto block@39
    block@38: // bool_false_L37
        let and_result%6#1: bool = 0u
        goto block@39
    block@39: // bool_merge_L37
        let condition#2: bool = φ(and_result%6#0 <- block@37, and_result%6#1 <- block@38)
        (assert condition#2)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_a" 1u)
        let (maybe_value%10#0: uint64, maybe_exists%10#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%10#0) // check self.did_execute_a exists
        goto maybe_value%10#0 ? block@43 : block@45
    block@43: // and_contd_L43
        let (maybe_value%11#0: uint64, maybe_exists%11#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%11#0) // check self.did_execute_b exists
        goto maybe_value%11#0 ? block@45 : block@44
    block@44: // bool_true_L43
        let and_result%7#0: bool = 1u
        goto block@46
    block@45: // bool_false_L43
        let and_result%7#1: bool = 0u
        goto block@46
    block@46: // bool_merge_L43
        let condition#1: bool = φ(and_result%7#0 <- block@44, and_result%7#1 <- block@45)
        (assert condition#1)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        (app_global_put "did_execute_b" 1u)
        let (maybe_value%12#0: uint64, maybe_exists%12#0: bool) = (app_global_get_ex 0u "did_execute_a")
        (assert maybe_exists%12#0) // check self.did_execute_a exists
        goto maybe_value%12#0 ? block@52 : block@50
    block@50: // and_contd_L49
        let (maybe_value%13#0: uint64, maybe_exists%13#0: bool) = (app_global_get_ex 0u "did_execute_b")
        (assert maybe_exists%13#0) // check self.did_execute_b exists
        goto maybe_value%13#0 ? block@51 : block@52
    block@51: // bool_true_L49
        let and_result%8#0: bool = 1u
        goto block@53
    block@52: // bool_false_L49
        let and_result%8#1: bool = 0u
        goto block@53
    block@53: // bool_merge_L49
        let condition#0: bool = φ(and_result%8#0 <- block@51, and_result%8#1 <- block@52)
        (assert condition#0)
        (app_global_put "did_execute_b" 0u)
        (app_global_put "did_execute_a" 0u)
        return 1u