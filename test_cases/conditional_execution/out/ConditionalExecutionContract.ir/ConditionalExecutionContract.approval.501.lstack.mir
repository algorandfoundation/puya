// Op                                                     Stack (out)
// test_cases.conditional_execution.contract.ConditionalExecutionContract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    block@0:
        txn ApplicationID                                 tmp%0#0
        l-load tmp%0#0 0                                  tmp%0#0
        bz call___init__@1 ; b after_if_else@2

    call___init__@1:
        // conditional_execution/contract.py:6
        // self.did_execute_a = False
        byte "did_execute_a"                              "did_execute_a"
        int 0                                             "did_execute_a",0
        app_global_put
        // conditional_execution/contract.py:7
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        b after_if_else@2

    after_if_else@2:
        // conditional_execution/contract.py:65
        // self.did_execute_a = True
        byte "did_execute_a"                              "did_execute_a"
        int 1                                             "did_execute_a",1
        app_global_put
        // conditional_execution/contract.py:13
        // self.did_execute_a and not self.did_execute_b,
        int 0                                             0
        byte "did_execute_b"                              0,"did_execute_b"
        app_global_get_ex                                 maybe_value%1#0,maybe_exists%1#0
        l-load maybe_exists%1#0 0                         maybe_value%1#0,maybe_exists%1#0
        assert // check self.did_execute_b exists         maybe_value%1#0
        l-load maybe_value%1#0 0                          maybe_value%1#0
        bz bool_true@9 ; b bool_false@10

    bool_true@9:
        int 1                                             1
        l-store and_result%0#0 0                          and_result%0#0
        l-load and_result%0#0 0                           and_result%0#0
        v-store condition#0
        b bool_merge@11

    bool_false@10:
        int 0                                             0
        l-store and_result%0#0 0                          and_result%0#0
        l-load and_result%0#0 0                           and_result%0#0
        v-store condition#0
        b bool_merge@11

    bool_merge@11:
        // conditional_execution/contract.py:59
        // assert condition
        v-load condition#0                                condition#0
        assert
        // conditional_execution/contract.py:60
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        // conditional_execution/contract.py:65
        // self.did_execute_a = True
        byte "did_execute_a"                              "did_execute_a"
        int 1                                             "did_execute_a",1
        app_global_put
        // conditional_execution/contract.py:60
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        // conditional_execution/contract.py:65
        // self.did_execute_a = True
        byte "did_execute_a"                              "did_execute_a"
        int 1                                             "did_execute_a",1
        app_global_put
        // conditional_execution/contract.py:60
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        // conditional_execution/contract.py:65
        // self.did_execute_a = True
        byte "did_execute_a"                              "did_execute_a"
        int 1                                             "did_execute_a",1
        app_global_put
        // conditional_execution/contract.py:60
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        // conditional_execution/contract.py:65
        // self.did_execute_a = True
        byte "did_execute_a"                              "did_execute_a"
        int 1                                             "did_execute_a",1
        app_global_put
        // conditional_execution/contract.py:60
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        // conditional_execution/contract.py:61
        // self.did_execute_a = False
        byte "did_execute_a"                              "did_execute_a"
        int 0                                             "did_execute_a",0
        app_global_put
        // conditional_execution/contract.py:70
        // self.did_execute_b = True
        byte "did_execute_b"                              "did_execute_b"
        int 1                                             "did_execute_b",1
        app_global_put
        // conditional_execution/contract.py:49
        // not self.did_execute_a and self.did_execute_b,
        int 0                                             0
        byte "did_execute_a"                              0,"did_execute_a"
        app_global_get_ex                                 maybe_value%12#0,maybe_exists%12#0
        l-load maybe_exists%12#0 0                        maybe_value%12#0,maybe_exists%12#0
        assert // check self.did_execute_a exists         maybe_value%12#0
        l-load maybe_value%12#0 0                         maybe_value%12#0
        bz and_contd@50 ; b bool_false@52

    and_contd@50:
        // conditional_execution/contract.py:49
        // not self.did_execute_a and self.did_execute_b,
        int 0                                             0
        byte "did_execute_b"                              0,"did_execute_b"
        app_global_get_ex                                 maybe_value%13#0,maybe_exists%13#0
        l-load maybe_exists%13#0 0                        maybe_value%13#0,maybe_exists%13#0
        assert // check self.did_execute_b exists         maybe_value%13#0
        l-load maybe_value%13#0 0                         maybe_value%13#0
        bz bool_false@52 ; b bool_true@51

    bool_true@51:
        int 1                                             1
        l-store and_result%8#0 0                          and_result%8#0
        l-load and_result%8#0 0                           and_result%8#0
        v-store condition#0
        b bool_merge@53

    bool_false@52:
        int 0                                             0
        l-store and_result%8#0 0                          and_result%8#0
        l-load and_result%8#0 0                           and_result%8#0
        v-store condition#0
        b bool_merge@53

    bool_merge@53:
        // conditional_execution/contract.py:59
        // assert condition
        v-load condition#0                                condition#0
        assert
        // conditional_execution/contract.py:60
        // self.did_execute_b = False
        byte "did_execute_b"                              "did_execute_b"
        int 0                                             "did_execute_b",0
        app_global_put
        // conditional_execution/contract.py:61
        // self.did_execute_a = False
        byte "did_execute_a"                              "did_execute_a"
        int 0                                             "did_execute_a",0
        app_global_put
        // conditional_execution/contract.py:52
        // return True
        int 1                                             1
        return


