// Op                                                 // Op Description                           Stack (out)                               Source code                                                     Source line

#pragma version 10

// test_cases.chained_assignment.contract.ChainedAssignment.approval_program() -> uint64:
main_block@0:
        txn ApplicationID                             //                                          {txn}
        bnz main_entrypoint@2                         //
        // Implicit fall through to main_on_create@1  //

main_on_create@1:
        callsub __init__                              //
        // Implicit fall through to main_entrypoint@2 //

main_entrypoint@2:
        int 1                                         //                                          1                                         True                                                            File "chained_assignment/contract.py", line 19
        return                                        //                                                                                    return True                                                     File "chained_assignment/contract.py", line 19


// test_cases.chained_assignment.contract.ChainedAssignment.__init__() -> void:
__init__:
        proto 0 0                                     //                                                                                    def __init__(self) -> None:                                     File "chained_assignment/contract.py", line 15

__init___block@0:
        callsub BaseContract.__init__                 //                                                                                    super().__init__()                                              File "chained_assignment/contract.py", line 16
        retsub                                        //


// test_cases.chained_assignment.contract.BaseContract.__init__() -> void:
BaseContract.__init__:
        proto 0 0                                     //                                                                                    def __init__(self) -> None:                                     File "chained_assignment/contract.py", line 7

BaseContract.__init___block@0:
        byte "Hello, world!"                          //                                          "Hello, world!"                           b"Hello, world!"                                                File "chained_assignment/contract.py", line 10
        byte "\xf0\x9f\x91\x8b"                       //                                          "Hello, world!","\xf0\x9f\x91\x8b"        WAVE                                                            File "chained_assignment/contract.py", line 9
        callsub join_log_and_return                   //                                          {join_log_and_return}                     join_log_and_return(                                            File "chained_assignment/contract.py", line 8
        byte "state2"                                 //                                          awst_tmp%0#0,"state2"                     self.state2                                                     File "chained_assignment/contract.py", line 8
        dig 1                                         // load awst_tmp%0#0 from l-stack (copy)    awst_tmp%0#0,"state2",awst_tmp%0#0        join_log_and_return(                                            File "chained_assignment/contract.py", line 8
        app_global_put                                //                                          awst_tmp%0#0                              self.state1 = self.state2 = join_log_and_return(                File "chained_assignment/contract.py", line 8
        byte "state1"                                 //                                          awst_tmp%0#0,"state1"                     self.state1                                                     File "chained_assignment/contract.py", line 8
        swap                                          // load awst_tmp%0#0 from l-stack (no copy) "state1",awst_tmp%0#0                     join_log_and_return(                                            File "chained_assignment/contract.py", line 8
        app_global_put                                //                                                                                    self.state1 = self.state2 = join_log_and_return(                File "chained_assignment/contract.py", line 8
        retsub                                        //


// test_cases.chained_assignment.contract.join_log_and_return(left#0: bytes, right#0: bytes) -> bytes:
join_log_and_return:
        proto 2 1                                     //                                          (洧도) left#0,right#0 |                      def join_log_and_return(*, left: Bytes, right: Bytes) -> Bytes: File "chained_assignment/contract.py", line 26

join_log_and_return_block@0:
        frame_dig -2                                  // load left#0 from parameters              (洧도) left#0,right#0 | left#0               left: Bytes                                                     File "chained_assignment/contract.py", line 26
        byte " "                                      //                                          (洧도) left#0,right#0 | left#0," "           b" "                                                            File "chained_assignment/contract.py", line 27
        concat                                        //                                          (洧도) left#0,right#0 | {concat}             left + b" "                                                     File "chained_assignment/contract.py", line 27
        frame_dig -1                                  // load right#0 from parameters             (洧도) left#0,right#0 | tmp%0#0,right#0      right: Bytes                                                    File "chained_assignment/contract.py", line 26
        concat                                        //                                          (洧도) left#0,right#0 | {concat}             left + b" " + right                                             File "chained_assignment/contract.py", line 27
        dup                                           // load result#0 from l-stack (copy)        (洧도) left#0,right#0 | result#0,result#0    result                                                          File "chained_assignment/contract.py", line 27
        log                                           //                                          (洧도) left#0,right#0 | result#0             log(result)                                                     File "chained_assignment/contract.py", line 28
        retsub                                        //                                          result#0                                  return result                                                   File "chained_assignment/contract.py", line 29

