#pragma version 10
#pragma typetrack false

// test_cases.logic_signature.compiled_logic_sig.dont_use_this() -> uint64:
main:
    b main_block@0

main_block@0:
    // logic_signature/compiled_logic_sig.py:6
    // assert op.arg(1) == b"this is not secure", "arg is not correct"
    arg_1
    pushbytes 0x74686973206973206e6f7420736563757265
    ==
    assert // arg is not correct
    // logic_signature/compiled_logic_sig.py:7
    // assert op.arg(0) == b"0"
    arg_0
    pushbytes 0x30
    ==
    assert
    // logic_signature/compiled_logic_sig.py:8
    // assert op.arg(2) == b"2"
    arg_2
    pushbytes 0x32
    ==
    assert
    // logic_signature/compiled_logic_sig.py:9
    // assert op.arg(3) == b"3"
    arg_3
    pushbytes 0x33
    ==
    assert
    // logic_signature/compiled_logic_sig.py:10
    // assert op.arg(4) == b"4"
    arg 4
    pushbytes 0x34
    ==
    assert
    // logic_signature/compiled_logic_sig.py:11
    // assert op.arg(Txn.num_app_args) == b"cant_happen"
    txn NumAppArgs
    args
    pushbytes 0x63616e745f68617070656e
    ==
    assert
    // logic_signature/compiled_logic_sig.py:12
    // return True
    pushint 1 // 1
    return
