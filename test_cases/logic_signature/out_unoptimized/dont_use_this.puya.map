{
  "version": 3,
  "sources": [
    "../compiled_logic_sig.py"
  ],
  "mappings": ";;;;AAKW;AAAa;;;;;;;;;;;;;;;;;;;;AAAb;AAAP;AACO;AAAa;;;AAAb;AAAP;AACO;AAAa;;;AAAb;AAAP;AACO;AAAa;;;AAAb;AAAP;AACO;;AAAa;;;AAAb;AAAP;AACc;;AAAP;AAA4B;;;;;;;;;;;;;AAA5B;AAAP;AACO;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.logic_signature.compiled_logic_sig.dont_use_this",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "b block@0"
    },
    "4": {
      "block": "block@0",
      "stack_in": [],
      "op": "arg_1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5": {
      "op": "pushbytes 0x74686973206973206e6f7420736563757265",
      "defined_out": [
        "0x74686973206973206e6f7420736563757265",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x74686973206973206e6f7420736563757265"
      ]
    },
    "25": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "26": {
      "error": "arg is not correct",
      "op": "assert // arg is not correct",
      "stack_out": []
    },
    "27": {
      "op": "arg_0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "28": {
      "op": "pushbytes 0x30",
      "defined_out": [
        "0x30",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x30"
      ]
    },
    "31": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "32": {
      "op": "assert",
      "stack_out": []
    },
    "33": {
      "op": "arg_2",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "34": {
      "op": "pushbytes 0x32",
      "defined_out": [
        "0x32",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x32"
      ]
    },
    "37": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "38": {
      "op": "assert",
      "stack_out": []
    },
    "39": {
      "op": "arg_3",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "40": {
      "op": "pushbytes 0x33",
      "defined_out": [
        "0x33",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x33"
      ]
    },
    "43": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "44": {
      "op": "assert",
      "stack_out": []
    },
    "45": {
      "op": "arg 4",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "47": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x34"
      ]
    },
    "50": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "51": {
      "op": "assert",
      "stack_out": []
    },
    "52": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "54": {
      "op": "args",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "55": {
      "op": "pushbytes 0x63616e745f68617070656e",
      "defined_out": [
        "0x63616e745f68617070656e",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0x63616e745f68617070656e"
      ]
    },
    "68": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "69": {
      "op": "assert",
      "stack_out": []
    },
    "70": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "72": {
      "op": "return",
      "stack_out": []
    }
  }
}