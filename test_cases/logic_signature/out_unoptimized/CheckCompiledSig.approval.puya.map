{
  "version": 3,
  "sources": [
    "../compiled_logic_sig.py"
  ],
  "mappings": ";;;;;;;;;;;;;AAcA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;;;;;;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIY;;AAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAd;AADJ;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "16": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "20": {
      "op": "b main_abi_routing@2"
    },
    "23": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "pushbytes 0xbb31fc82 // method \"check_sig_with_logic_sig_only_op_compiles()void\"",
      "defined_out": [
        "Method(check_sig_with_logic_sig_only_op_compiles()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(check_sig_with_logic_sig_only_op_compiles()void)"
      ]
    },
    "32": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "Method(check_sig_with_logic_sig_only_op_compiles()void)",
        "tmp%2#0"
      ]
    },
    "34": {
      "op": "match main_check_sig_with_logic_sig_only_op_compiles_route@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "38": {
      "op": "b main_switch_case_default@4"
    },
    "41": {
      "block": "main_switch_case_default@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@5"
    },
    "44": {
      "block": "main_switch_case_next@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "47": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0"
      ]
    },
    "48": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "50": {
      "op": "b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11"
    },
    "53": {
      "block": "main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "block": "main_check_sig_with_logic_sig_only_op_compiles_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "56": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "57": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "58": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "59": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "61": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "62": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "63": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "64": {
      "callsub": "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.check_sig_with_logic_sig_only_op_compiles",
      "op": "callsub check_sig_with_logic_sig_only_op_compiles"
    },
    "67": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0"
      ]
    },
    "68": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "op": "b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11"
    },
    "73": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "75": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "0"
      ]
    },
    "76": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%7#0"
      ]
    },
    "78": {
      "op": "match main___algopy_default_create@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "82": {
      "op": "b main_switch_case_default@8"
    },
    "85": {
      "block": "main_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@9"
    },
    "88": {
      "block": "main_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "91": {
      "block": "main___algopy_default_create@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0"
      ]
    },
    "94": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "95": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "96": {
      "op": "b main_block@12"
    },
    "99": {
      "block": "main_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__algopy_default_create@13"
    },
    "102": {
      "block": "main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0"
      ]
    },
    "103": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "105": {
      "op": "b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11"
    },
    "108": {
      "subroutine": "test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.check_sig_with_logic_sig_only_op_compiles",
      "params": {},
      "block": "check_sig_with_logic_sig_only_op_compiles",
      "stack_in": [],
      "op": "b check_sig_with_logic_sig_only_op_compiles_block@0"
    },
    "111": {
      "block": "check_sig_with_logic_sig_only_op_compiles_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "pushbytes base32(SJUCVRWJ255MULZL7JQBH4L72QXFAUF77FQSOO44HNJR5OXE77ZQ) // addr SJUCVRWJ255MULZL7JQBH4L72QXFAUF77FQSOO44HNJR5OXE77ZQ3J6UWM",
      "defined_out": [
        "Address(SJUCVRWJ255MULZL7JQBH4L72QXFAUF77FQSOO44HNJR5OXE77ZQ3J6UWM)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Address(SJUCVRWJ255MULZL7JQBH4L72QXFAUF77FQSOO44HNJR5OXE77ZQ3J6UWM)"
      ]
    },
    "147": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "148": {
      "error": "expected to be signed by logic sig",
      "op": "assert // expected to be signed by logic sig",
      "stack_out": []
    },
    "149": {
      "retsub": true,
      "op": "retsub"
    }
  }
}