// Op                                                               //                                                 Op Description                           Stack (out)                                 Live (out)        X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.logic_signature.signature.pre_approved_sale() -> uint64:
main_block@0:
    int 0                                                           //                                                                                          0                                                                                                                                                                  0                                                                                                    logic_signature/signature.py:13
    callsub assert_correct_payment                                  //                                                                                                                                                                                                                                                             assert_correct_payment(txn_offset=UInt64(0))                                                         logic_signature/signature.py:13
    int 1                                                           //                                                                                          1                                                                                                                                                                  1                                                                                                    logic_signature/signature.py:14
    callsub assert_correct_asset                                    //                                                                                                                                                                                                                                                             assert_correct_asset(txn_offset=UInt64(1))                                                           logic_signature/signature.py:14
    int 0                                                           //                                                                                          0                                                                                                                                                                  0                                                                                                    logic_signature/signature.py:15
    gtxns Sender                                                    //                                                                                          {gtxns}                                                                                                                                                            GTxn.sender(UInt64(0))                                                                               logic_signature/signature.py:15
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)        tmp%0#0                                                                                                GTxn.sender(UInt64(0))                                                                               logic_signature/signature.py:15
    int 1                                                           //                                                                                          tmp%0#0,1                                                                                                                                                          1                                                                                                    logic_signature/signature.py:15
    gtxns AssetReceiver                                             //                                                                                          tmp%0#0,{gtxns}                                                                                                                                                    GTxn.asset_receiver(UInt64(1))                                                                       logic_signature/signature.py:15
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)        tmp%0#0,tmp%1#0                                                                                        GTxn.asset_receiver(UInt64(1))                                                                       logic_signature/signature.py:15
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)       tmp%1#0,tmp%0#0                                                                                        GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)       tmp%0#0,tmp%1#0                                                                                        GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    ==                                                              //                                                                                          {==}                                                                                                                                                               GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)        tmp%2#0                                                                                                GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)       tmp%2#0                                                                                                assert GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                      logic_signature/signature.py:15
    assert                                                          //                                                                                                                                                                                                                                                             assert GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                      logic_signature/signature.py:15
    int 1                                                           //                                                                                          1                                                                                                                                                                  True                                                                                                 logic_signature/signature.py:16
    return                                                          //                                                                                                                                                                                                                                                             return True                                                                                          logic_signature/signature.py:16


// test_cases.logic_signature.signature.assert_correct_payment(txn_offset: uint64) -> void:
assert_correct_payment:
    proto 1 0                                                       //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 @subroutine\ndef assert_correct_payment(txn_offset: UInt64) -> None:                                 logic_signature/signature.py:24-25

assert_correct_payment_block@0:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:27
    gtxns TypeEnum                                                  //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:27
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%0#0                                                                             GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:27
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%0#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.Payment                                                logic_signature/signature.py:27
    int pay                                                         //                                                                                          (洧도) txn_offset#0 | tmp%0#0,pay                                                                                                                                     TransactionType.Payment                                                                              logic_signature/signature.py:27
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.type_enum(txn_offset) == TransactionType.Payment                                                logic_signature/signature.py:27
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%1#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.Payment                                                logic_signature/signature.py:27
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%1#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29
    bz assert_correct_payment_bool_false@4                          //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29
    // Implicit fall through to assert_correct_payment_and_contd@1  //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29

assert_correct_payment_and_contd@1:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.receiver(txn_offset)                                                                            logic_signature/signature.py:28
    gtxns Receiver                                                  //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.receiver(txn_offset)                                                                            logic_signature/signature.py:28
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%2#0                                                                             GTxn.receiver(txn_offset)                                                                            logic_signature/signature.py:28
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%2#0                                                                             GTxn.receiver(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                      logic_signature/signature.py:28
    byte TMPL_SELLER                                                //                                                                                          (洧도) txn_offset#0 | tmp%2#0,TMPL_SELLER                                                                                                                             TemplateVar[Bytes]("SELLER")                                                                         logic_signature/signature.py:28
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.receiver(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                      logic_signature/signature.py:28
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%3#0                                                                             GTxn.receiver(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                      logic_signature/signature.py:28
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%3#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29
    bz assert_correct_payment_bool_false@4                          //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29
    // Implicit fall through to assert_correct_payment_and_contd@2  //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29

assert_correct_payment_and_contd@2:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.amount(txn_offset)                                                                              logic_signature/signature.py:29
    gtxns Amount                                                    //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.amount(txn_offset)                                                                              logic_signature/signature.py:29
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%4#0                                                                             GTxn.amount(txn_offset)                                                                              logic_signature/signature.py:29
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%4#0                                                                             GTxn.amount(txn_offset) == TemplateVar[UInt64]("PRICE")                                              logic_signature/signature.py:29
    int TMPL_PRICE                                                  //                                                                                          (洧도) txn_offset#0 | tmp%4#0,TMPL_PRICE                                                                                                                              TemplateVar[UInt64]("PRICE")                                                                         logic_signature/signature.py:29
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.amount(txn_offset) == TemplateVar[UInt64]("PRICE")                                              logic_signature/signature.py:29
    //                                                              virtual: store tmp%5#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%5#0                                                                             GTxn.amount(txn_offset) == TemplateVar[UInt64]("PRICE")                                              logic_signature/signature.py:29
    //                                                              virtual: load tmp%5#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%5#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29
    bz assert_correct_payment_bool_false@4                          //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29
    // Implicit fall through to assert_correct_payment_bool_true@3  //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:27-29

assert_correct_payment_bool_true@3:
    int 1                                                           //                                                                                          (洧도) txn_offset#0 | 1
    //                                                              virtual: store and_result%6#0 to x-stack (no copy) (洧도) txn_offset#0 | (洧뎶) and_result%6#0 |
    b assert_correct_payment_bool_merge@5                           //                                                                                          (洧도) txn_offset#0 | (洧뎶) and_result%6#0 |                       and_result%6#0

assert_correct_payment_bool_false@4:
    int 0                                                           //                                                                                          (洧도) txn_offset#0 | 0
    //                                                              virtual: store and_result%6#0 to x-stack (no copy) (洧도) txn_offset#0 | (洧뎶) and_result%6#0 |
    // Implicit fall through to assert_correct_payment_bool_merge@5 //                                                                                          (洧도) txn_offset#0 | (洧뎶) and_result%6#0 |                       and_result%6#0

assert_correct_payment_bool_merge@5:
    //                                                              virtual: load and_result%6#0 from x-stack          (洧도) txn_offset#0 | and_result%6#0                                                    and_result%6#0    assert (\nGTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).by... logic_signature/signature.py:26-30
    assert                                                          //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 assert (\nGTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).by... logic_signature/signature.py:26-30
    retsub                                                          //


// test_cases.logic_signature.signature.assert_correct_asset(txn_offset: uint64) -> void:
assert_correct_asset:
    proto 1 0                                                       //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 @subroutine\ndef assert_correct_asset(txn_offset: UInt64) -> None:                                   logic_signature/signature.py:33-34

assert_correct_asset_block@0:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:36
    gtxns TypeEnum                                                  //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:36
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%0#0                                                                             GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:36
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%0#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer                                          logic_signature/signature.py:36
    int axfer                                                       //                                                                                          (洧도) txn_offset#0 | tmp%0#0,axfer                                                                                                                                   TransactionType.AssetTransfer                                                                        logic_signature/signature.py:36
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer                                          logic_signature/signature.py:36
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%1#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer                                          logic_signature/signature.py:36
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%1#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    bz assert_correct_asset_bool_false@5                            //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    // Implicit fall through to assert_correct_asset_and_contd@1    //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39

assert_correct_asset_and_contd@1:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.asset_amount(txn_offset)                                                                        logic_signature/signature.py:37
    gtxns AssetAmount                                               //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.asset_amount(txn_offset)                                                                        logic_signature/signature.py:37
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%2#0                                                                             GTxn.asset_amount(txn_offset)                                                                        logic_signature/signature.py:37
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%2#0                                                                             GTxn.asset_amount(txn_offset) == 1                                                                   logic_signature/signature.py:37
    int 1                                                           //                                                                                          (洧도) txn_offset#0 | tmp%2#0,1                                                                                                                                       1                                                                                                    logic_signature/signature.py:37
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.asset_amount(txn_offset) == 1                                                                   logic_signature/signature.py:37
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%3#0                                                                             GTxn.asset_amount(txn_offset) == 1                                                                   logic_signature/signature.py:37
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%3#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    bz assert_correct_asset_bool_false@5                            //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    // Implicit fall through to assert_correct_asset_and_contd@2    //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39

assert_correct_asset_and_contd@2:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.sender(txn_offset)                                                                              logic_signature/signature.py:38
    gtxns Sender                                                    //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.sender(txn_offset)                                                                              logic_signature/signature.py:38
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%4#0                                                                             GTxn.sender(txn_offset)                                                                              logic_signature/signature.py:38
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%4#0                                                                             GTxn.sender(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                        logic_signature/signature.py:38
    byte TMPL_SELLER                                                //                                                                                          (洧도) txn_offset#0 | tmp%4#0,TMPL_SELLER                                                                                                                             TemplateVar[Bytes]("SELLER")                                                                         logic_signature/signature.py:38
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.sender(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                        logic_signature/signature.py:38
    //                                                              virtual: store tmp%5#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%5#0                                                                             GTxn.sender(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                        logic_signature/signature.py:38
    //                                                              virtual: load tmp%5#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%5#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    bz assert_correct_asset_bool_false@5                            //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    // Implicit fall through to assert_correct_asset_and_contd@3    //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39

assert_correct_asset_and_contd@3:
    frame_dig -1                                                    //                                                 load txn_offset#0 from parameters        (洧도) txn_offset#0 | txn_offset#0                                                                                                                                    GTxn.xfer_asset(txn_offset)                                                                          logic_signature/signature.py:39
    gtxns XferAsset                                                 //                                                                                          (洧도) txn_offset#0 | {gtxns}                                                                                                                                         GTxn.xfer_asset(txn_offset)                                                                          logic_signature/signature.py:39
    //                                                              virtual: store tmp%6#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%6#0                                                                             GTxn.xfer_asset(txn_offset)                                                                          logic_signature/signature.py:39
    //                                                              virtual: load tmp%6#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%6#0                                                                             GTxn.xfer_asset(txn_offset).id == TemplateVar[UInt64]("ASSET_ID")                                    logic_signature/signature.py:39
    int TMPL_ASSET_ID                                               //                                                                                          (洧도) txn_offset#0 | tmp%6#0,TMPL_ASSET_ID                                                                                                                           TemplateVar[UInt64]("ASSET_ID")                                                                      logic_signature/signature.py:39
    ==                                                              //                                                                                          (洧도) txn_offset#0 | {==}                                                                                                                                            GTxn.xfer_asset(txn_offset).id == TemplateVar[UInt64]("ASSET_ID")                                    logic_signature/signature.py:39
    //                                                              virtual: store tmp%7#0 to l-stack (no copy)        (洧도) txn_offset#0 | tmp%7#0                                                                             GTxn.xfer_asset(txn_offset).id == TemplateVar[UInt64]("ASSET_ID")                                    logic_signature/signature.py:39
    //                                                              virtual: load tmp%7#0 from l-stack (no copy)       (洧도) txn_offset#0 | tmp%7#0                                                                             GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    bz assert_correct_asset_bool_false@5                            //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39
    // Implicit fall through to assert_correct_asset_bool_true@4    //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:36-39

assert_correct_asset_bool_true@4:
    int 1                                                           //                                                                                          (洧도) txn_offset#0 | 1
    //                                                              virtual: store and_result%8#0 to x-stack (no copy) (洧도) txn_offset#0 | (洧뎶) and_result%8#0 |
    b assert_correct_asset_bool_merge@6                             //                                                                                          (洧도) txn_offset#0 | (洧뎶) and_result%8#0 |                       and_result%8#0

assert_correct_asset_bool_false@5:
    int 0                                                           //                                                                                          (洧도) txn_offset#0 | 0
    //                                                              virtual: store and_result%8#0 to x-stack (no copy) (洧도) txn_offset#0 | (洧뎶) and_result%8#0 |
    // Implicit fall through to assert_correct_asset_bool_merge@6   //                                                                                          (洧도) txn_offset#0 | (洧뎶) and_result%8#0 |                       and_result%8#0

assert_correct_asset_bool_merge@6:
    //                                                              virtual: load and_result%8#0 from x-stack          (洧도) txn_offset#0 | and_result%8#0                                                    and_result%8#0    assert (\nGTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_... logic_signature/signature.py:35-40
    assert                                                          //                                                                                          (洧도) txn_offset#0 |                                                                                                                                                 assert (\nGTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_... logic_signature/signature.py:35-40
    retsub                                                          //

