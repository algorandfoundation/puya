// Op                                                               //                                                 Op Description                    Stack (out)                          Live (out)        X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.logic_signature.signature.pre_approved_sale() -> uint64:
main_block@0:
    int 0                                                           //                                                                                   0                                                                                                                                                           gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    gtxns TypeEnum                                                  //                                                                                   {gtxns}                                                                                                                                                     gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)        tmp%0#0                                                                                  gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)       tmp%0#0                                                                                  gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    int pay                                                         //                                                                                   tmp%0#0,pay                                                                                                                                                 gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    ==                                                              //                                                                                   {==}                                                                                                                                                        gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)        tmp%1#0                                                                                  gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)       tmp%1#0                                                                                  gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    assert // transaction type is pay                               //                                                                                                                                                                                                                                               gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    int 1                                                           //                                                                                   1                                                                                                                                                           gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    gtxns TypeEnum                                                  //                                                                                   {gtxns}                                                                                                                                                     gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)        tmp%2#0                                                                                  gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)       tmp%2#0                                                                                  gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    int axfer                                                       //                                                                                   tmp%2#0,axfer                                                                                                                                               gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    ==                                                              //                                                                                   {==}                                                                                                                                                        gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)        tmp%3#0                                                                                  gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)       tmp%3#0                                                                                  gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    assert // transaction type is axfer                             //                                                                                                                                                                                                                                               gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    int 0                                                           //                                                                                   0                                                                                                                                                           gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    callsub assert_correct_payment                                  //                                                                                                                                                                                                                                               assert_correct_payment(pay_txn)                                                                      logic_signature/signature.py:15
    int 1                                                           //                                                                                   1                                                                                                                                                           gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    callsub assert_correct_asset                                    //                                                                                                                                                                                                                                               assert_correct_asset(asset_txn)                                                                      logic_signature/signature.py:16
    int 0                                                           //                                                                                   0                                                                                                                                                           gtxn.PaymentTransaction(0)                                                                           logic_signature/signature.py:13
    gtxns Sender                                                    //                                                                                   {gtxns}                                                                                                                                                     pay_txn.sender                                                                                       logic_signature/signature.py:17
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)        tmp%4#0                                                                                  pay_txn.sender                                                                                       logic_signature/signature.py:17
    int 1                                                           //                                                                                   tmp%4#0,1                                                                                                                                                   gtxn.AssetTransferTransaction(1)                                                                     logic_signature/signature.py:14
    gtxns AssetReceiver                                             //                                                                                   tmp%4#0,{gtxns}                                                                                                                                             asset_txn.asset_receiver                                                                             logic_signature/signature.py:17
    //                                                              virtual: store tmp%5#0 to l-stack (no copy)        tmp%4#0,tmp%5#0                                                                          asset_txn.asset_receiver                                                                             logic_signature/signature.py:17
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)       tmp%5#0,tmp%4#0                                                                          pay_txn.sender == asset_txn.asset_receiver                                                           logic_signature/signature.py:17
    //                                                              virtual: load tmp%5#0 from l-stack (no copy)       tmp%4#0,tmp%5#0                                                                          pay_txn.sender == asset_txn.asset_receiver                                                           logic_signature/signature.py:17
    ==                                                              //                                                                                   {==}                                                                                                                                                        pay_txn.sender == asset_txn.asset_receiver                                                           logic_signature/signature.py:17
    //                                                              virtual: store tmp%6#0 to l-stack (no copy)        tmp%6#0                                                                                  pay_txn.sender == asset_txn.asset_receiver                                                           logic_signature/signature.py:17
    //                                                              virtual: load tmp%6#0 from l-stack (no copy)       tmp%6#0                                                                                  assert pay_txn.sender == asset_txn.asset_receiver                                                    logic_signature/signature.py:17
    assert                                                          //                                                                                                                                                                                                                                               assert pay_txn.sender == asset_txn.asset_receiver                                                    logic_signature/signature.py:17
    global GroupSize                                                //                                                                                   {global}                                                                                                                                                    Global.group_size                                                                                    logic_signature/signature.py:18
    //                                                              virtual: store tmp%7#0 to l-stack (no copy)        tmp%7#0                                                                                  Global.group_size                                                                                    logic_signature/signature.py:18
    //                                                              virtual: load tmp%7#0 from l-stack (no copy)       tmp%7#0                                                                                  Global.group_size == 2                                                                               logic_signature/signature.py:18
    int 2                                                           //                                                                                   tmp%7#0,2                                                                                                                                                   2                                                                                                    logic_signature/signature.py:18
    ==                                                              //                                                                                   {==}                                                                                                                                                        Global.group_size == 2                                                                               logic_signature/signature.py:18
    //                                                              virtual: store tmp%8#0 to l-stack (no copy)        tmp%8#0                                                                                  Global.group_size == 2                                                                               logic_signature/signature.py:18
    //                                                              virtual: load tmp%8#0 from l-stack (no copy)       tmp%8#0                                                                                  assert Global.group_size == 2                                                                        logic_signature/signature.py:18
    assert                                                          //                                                                                                                                                                                                                                               assert Global.group_size == 2                                                                        logic_signature/signature.py:18
    int 1                                                           //                                                                                   1                                                                                                                                                           True                                                                                                 logic_signature/signature.py:19
    return                                                          //                                                                                                                                                                                                                                               return True                                                                                          logic_signature/signature.py:19


// test_cases.logic_signature.signature.assert_correct_payment(txn: uint64) -> void:
assert_correct_payment:
    proto 1 0                                                       //                                                                                   (𝕡) txn#0 |                                                                                                                                                 @subroutine\ndef assert_correct_payment(txn: gtxn.PaymentTransaction) -> None:                       logic_signature/signature.py:27-28

assert_correct_payment_block@0:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.receiver                                                                                         logic_signature/signature.py:29
    gtxns Receiver                                                  //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.receiver                                                                                         logic_signature/signature.py:29
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%0#0                                                                      txn.receiver                                                                                         logic_signature/signature.py:29
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%0#0                                                                      txn.receiver == TemplateVar[Account]("SELLER") and (                                                 logic_signature/signature.py:29
    byte TMPL_SELLER                                                //                                                                                   (𝕡) txn#0 | tmp%0#0,TMPL_SELLER                                                                                                                             TemplateVar[Account]("SELLER")                                                                       logic_signature/signature.py:29
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.receiver == TemplateVar[Account]("SELLER") and (                                                 logic_signature/signature.py:29
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%1#0                                                                      txn.receiver == TemplateVar[Account]("SELLER") and (                                                 logic_signature/signature.py:29
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%1#0                                                                      txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("PRICE")\n)  logic_signature/signature.py:29-31
    bz assert_correct_payment_bool_false@3                          //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("PRICE")\n)  logic_signature/signature.py:29-31
    // Implicit fall through to assert_correct_payment_and_contd@1  //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("PRICE")\n)  logic_signature/signature.py:29-31

assert_correct_payment_and_contd@1:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.amount                                                                                           logic_signature/signature.py:30
    gtxns Amount                                                    //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.amount                                                                                           logic_signature/signature.py:30
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%2#0                                                                      txn.amount                                                                                           logic_signature/signature.py:30
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%2#0                                                                      txn.amount == TemplateVar[UInt64]("PRICE")                                                           logic_signature/signature.py:30
    int TMPL_PRICE                                                  //                                                                                   (𝕡) txn#0 | tmp%2#0,TMPL_PRICE                                                                                                                              TemplateVar[UInt64]("PRICE")                                                                         logic_signature/signature.py:30
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.amount == TemplateVar[UInt64]("PRICE")                                                           logic_signature/signature.py:30
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%3#0                                                                      txn.amount == TemplateVar[UInt64]("PRICE")                                                           logic_signature/signature.py:30
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%3#0                                                                      txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("PRICE")\n)  logic_signature/signature.py:29-31
    bz assert_correct_payment_bool_false@3                          //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("PRICE")\n)  logic_signature/signature.py:29-31
    // Implicit fall through to assert_correct_payment_bool_true@2  //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("PRICE")\n)  logic_signature/signature.py:29-31

assert_correct_payment_bool_true@2:
    int 1                                                           //                                                                                   (𝕡) txn#0 | 1
    //                                                              virtual: store and_result%0#0 to x-stack (no copy) (𝕡) txn#0 | (𝕏) and_result%0#0 |
    b assert_correct_payment_bool_merge@4                           //                                                                                   (𝕡) txn#0 | (𝕏) and_result%0#0 |                       and_result%0#0

assert_correct_payment_bool_false@3:
    int 0                                                           //                                                                                   (𝕡) txn#0 | 0
    //                                                              virtual: store and_result%0#0 to x-stack (no copy) (𝕡) txn#0 | (𝕏) and_result%0#0 |
    // Implicit fall through to assert_correct_payment_bool_merge@4 //                                                                                   (𝕡) txn#0 | (𝕏) and_result%0#0 |                       and_result%0#0

assert_correct_payment_bool_merge@4:
    //                                                              virtual: load and_result%0#0 from x-stack          (𝕡) txn#0 | and_result%0#0                                             and_result%0#0    assert txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("P... logic_signature/signature.py:29-31
    assert                                                          //                                                                                   (𝕡) txn#0 |                                                                                                                                                 assert txn.receiver == TemplateVar[Account]("SELLER") and (\ntxn.amount == TemplateVar[UInt64]("P... logic_signature/signature.py:29-31
    retsub                                                          //


// test_cases.logic_signature.signature.assert_correct_asset(txn: uint64) -> void:
assert_correct_asset:
    proto 1 0                                                       //                                                                                   (𝕡) txn#0 |                                                                                                                                                 @subroutine\ndef assert_correct_asset(txn: gtxn.AssetTransferTransaction) -> None:                   logic_signature/signature.py:34-35

assert_correct_asset_block@0:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.asset_amount                                                                                     logic_signature/signature.py:37
    gtxns AssetAmount                                               //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.asset_amount                                                                                     logic_signature/signature.py:37
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%0#0                                                                      txn.asset_amount                                                                                     logic_signature/signature.py:37
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%0#0                                                                      txn.asset_amount == 1                                                                                logic_signature/signature.py:37
    int 1                                                           //                                                                                   (𝕡) txn#0 | tmp%0#0,1                                                                                                                                       1                                                                                                    logic_signature/signature.py:37
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.asset_amount == 1                                                                                logic_signature/signature.py:37
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%1#0                                                                      txn.asset_amount == 1                                                                                logic_signature/signature.py:37
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%1#0                                                                      txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    bz assert_correct_asset_bool_false@6                            //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    // Implicit fall through to assert_correct_asset_and_contd@1    //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41

assert_correct_asset_and_contd@1:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.sender                                                                                           logic_signature/signature.py:38
    gtxns Sender                                                    //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.sender                                                                                           logic_signature/signature.py:38
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%2#0                                                                      txn.sender                                                                                           logic_signature/signature.py:38
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%2#0                                                                      txn.sender == TemplateVar[Account]("SELLER")                                                         logic_signature/signature.py:38
    byte TMPL_SELLER                                                //                                                                                   (𝕡) txn#0 | tmp%2#0,TMPL_SELLER                                                                                                                             TemplateVar[Account]("SELLER")                                                                       logic_signature/signature.py:38
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.sender == TemplateVar[Account]("SELLER")                                                         logic_signature/signature.py:38
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%3#0                                                                      txn.sender == TemplateVar[Account]("SELLER")                                                         logic_signature/signature.py:38
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%3#0                                                                      txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    bz assert_correct_asset_bool_false@6                            //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    // Implicit fall through to assert_correct_asset_and_contd@2    //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41

assert_correct_asset_and_contd@2:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.xfer_asset                                                                                       logic_signature/signature.py:39
    gtxns XferAsset                                                 //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.xfer_asset                                                                                       logic_signature/signature.py:39
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%4#0                                                                      txn.xfer_asset                                                                                       logic_signature/signature.py:39
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%4#0                                                                      txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")                                                     logic_signature/signature.py:39
    int TMPL_ASSET_ID                                               //                                                                                   (𝕡) txn#0 | tmp%4#0,TMPL_ASSET_ID                                                                                                                           TemplateVar[Asset]("ASSET_ID")                                                                       logic_signature/signature.py:39
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")                                                     logic_signature/signature.py:39
    //                                                              virtual: store tmp%5#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%5#0                                                                      txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")                                                     logic_signature/signature.py:39
    //                                                              virtual: load tmp%5#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%5#0                                                                      txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    bz assert_correct_asset_bool_false@6                            //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    // Implicit fall through to assert_correct_asset_and_contd@3    //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41

assert_correct_asset_and_contd@3:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.asset_close_to                                                                                   logic_signature/signature.py:40
    gtxns AssetCloseTo                                              //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.asset_close_to                                                                                   logic_signature/signature.py:40
    //                                                              virtual: store tmp%6#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%6#0                                                                      txn.asset_close_to                                                                                   logic_signature/signature.py:40
    global ZeroAddress                                              //                                                                                   (𝕡) txn#0 | tmp%6#0,{global}                                                                                                                                Global.zero_address                                                                                  logic_signature/signature.py:40
    //                                                              virtual: store tmp%7#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%6#0,tmp%7#0                                                              Global.zero_address                                                                                  logic_signature/signature.py:40
    //                                                              virtual: load tmp%6#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%7#0,tmp%6#0                                                              txn.asset_close_to == Global.zero_address                                                            logic_signature/signature.py:40
    //                                                              virtual: load tmp%7#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%6#0,tmp%7#0                                                              txn.asset_close_to == Global.zero_address                                                            logic_signature/signature.py:40
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.asset_close_to == Global.zero_address                                                            logic_signature/signature.py:40
    //                                                              virtual: store tmp%8#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%8#0                                                                      txn.asset_close_to == Global.zero_address                                                            logic_signature/signature.py:40
    //                                                              virtual: load tmp%8#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%8#0                                                                      txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    bz assert_correct_asset_bool_false@6                            //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    // Implicit fall through to assert_correct_asset_and_contd@4    //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41

assert_correct_asset_and_contd@4:
    frame_dig -1                                                    //                                                 load txn#0 from parameters        (𝕡) txn#0 | txn#0                                                                                                                                           txn.rekey_to                                                                                         logic_signature/signature.py:41
    gtxns RekeyTo                                                   //                                                                                   (𝕡) txn#0 | {gtxns}                                                                                                                                         txn.rekey_to                                                                                         logic_signature/signature.py:41
    //                                                              virtual: store tmp%9#0 to l-stack (no copy)        (𝕡) txn#0 | tmp%9#0                                                                      txn.rekey_to                                                                                         logic_signature/signature.py:41
    global ZeroAddress                                              //                                                                                   (𝕡) txn#0 | tmp%9#0,{global}                                                                                                                                Global.zero_address                                                                                  logic_signature/signature.py:41
    //                                                              virtual: store tmp%10#0 to l-stack (no copy)       (𝕡) txn#0 | tmp%9#0,tmp%10#0                                                             Global.zero_address                                                                                  logic_signature/signature.py:41
    //                                                              virtual: load tmp%9#0 from l-stack (no copy)       (𝕡) txn#0 | tmp%10#0,tmp%9#0                                                             txn.rekey_to == Global.zero_address                                                                  logic_signature/signature.py:41
    //                                                              virtual: load tmp%10#0 from l-stack (no copy)      (𝕡) txn#0 | tmp%9#0,tmp%10#0                                                             txn.rekey_to == Global.zero_address                                                                  logic_signature/signature.py:41
    ==                                                              //                                                                                   (𝕡) txn#0 | {==}                                                                                                                                            txn.rekey_to == Global.zero_address                                                                  logic_signature/signature.py:41
    //                                                              virtual: store tmp%11#0 to l-stack (no copy)       (𝕡) txn#0 | tmp%11#0                                                                     txn.rekey_to == Global.zero_address                                                                  logic_signature/signature.py:41
    //                                                              virtual: load tmp%11#0 from l-stack (no copy)      (𝕡) txn#0 | tmp%11#0                                                                     txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    bz assert_correct_asset_bool_false@6                            //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41
    // Implicit fall through to assert_correct_asset_bool_true@5    //                                                                                   (𝕡) txn#0 |                                                                                                                                                 txn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_asset == Te... logic_signature/signature.py:37-41

assert_correct_asset_bool_true@5:
    int 1                                                           //                                                                                   (𝕡) txn#0 | 1
    //                                                              virtual: store and_result%0#0 to x-stack (no copy) (𝕡) txn#0 | (𝕏) and_result%0#0 |
    b assert_correct_asset_bool_merge@7                             //                                                                                   (𝕡) txn#0 | (𝕏) and_result%0#0 |                       and_result%0#0

assert_correct_asset_bool_false@6:
    int 0                                                           //                                                                                   (𝕡) txn#0 | 0
    //                                                              virtual: store and_result%0#0 to x-stack (no copy) (𝕡) txn#0 | (𝕏) and_result%0#0 |
    // Implicit fall through to assert_correct_asset_bool_merge@7   //                                                                                   (𝕡) txn#0 | (𝕏) and_result%0#0 |                       and_result%0#0

assert_correct_asset_bool_merge@7:
    //                                                              virtual: load and_result%0#0 from x-stack          (𝕡) txn#0 | and_result%0#0                                             and_result%0#0    assert (\ntxn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_a... logic_signature/signature.py:36-42
    assert                                                          //                                                                                   (𝕡) txn#0 |                                                                                                                                                 assert (\ntxn.asset_amount == 1\nand txn.sender == TemplateVar[Account]("SELLER")\nand txn.xfer_a... logic_signature/signature.py:36-42
    retsub                                                          //

