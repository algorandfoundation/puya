// Op                                                               //                                                  Op Description                            Stack (out)                                  Live (out)         X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.logic_signature.signature.pre_approved_sale() -> uint64:
main_block@0:
    int 0                                                           //                                                                                            0                                                                                                                                                                    UInt64(0)                                                                                            logic_signature/signature.py:13
    callsub assert_correct_payment                                  //                                                                                                                                                                                                                                                                 assert_correct_payment(txn_offset=UInt64(0))                                                         logic_signature/signature.py:13
    int 1                                                           //                                                                                            1                                                                                                                                                                    UInt64(1)                                                                                            logic_signature/signature.py:14
    callsub assert_correct_asset                                    //                                                                                                                                                                                                                                                                 assert_correct_asset(txn_offset=UInt64(1))                                                           logic_signature/signature.py:14
    int 0                                                           //                                                                                            0                                                                                                                                                                    UInt64(0)                                                                                            logic_signature/signature.py:15
    gtxns Sender                                                    //                                                                                            {gtxns}                                                                                                                                                              GTxn.sender(UInt64(0))                                                                               logic_signature/signature.py:15
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)         tmp%0#0                                                                                                   GTxn.sender(UInt64(0))                                                                               logic_signature/signature.py:15
    int 1                                                           //                                                                                            tmp%0#0,1                                                                                                                                                            UInt64(1)                                                                                            logic_signature/signature.py:15
    gtxns AssetReceiver                                             //                                                                                            tmp%0#0,{gtxns}                                                                                                                                                      GTxn.asset_receiver(UInt64(1))                                                                       logic_signature/signature.py:15
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)         tmp%0#0,tmp%1#0                                                                                           GTxn.asset_receiver(UInt64(1))                                                                       logic_signature/signature.py:15
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)        tmp%1#0,tmp%0#0                                                                                           GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)        tmp%0#0,tmp%1#0                                                                                           GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    ==                                                              //                                                                                            {==}                                                                                                                                                                 GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)         tmp%2#0                                                                                                   GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                             logic_signature/signature.py:15
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)        tmp%2#0                                                                                                   assert GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                      logic_signature/signature.py:15
    assert                                                          //                                                                                                                                                                                                                                                                 assert GTxn.sender(UInt64(0)) == GTxn.asset_receiver(UInt64(1))                                      logic_signature/signature.py:15
    global GroupSize                                                //                                                                                            {global}                                                                                                                                                             Global.group_size                                                                                    logic_signature/signature.py:16
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)         tmp%3#0                                                                                                   Global.group_size                                                                                    logic_signature/signature.py:16
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)        tmp%3#0                                                                                                   Global.group_size == 2                                                                               logic_signature/signature.py:16
    int 2                                                           //                                                                                            tmp%3#0,2                                                                                                                                                            2                                                                                                    logic_signature/signature.py:16
    ==                                                              //                                                                                            {==}                                                                                                                                                                 Global.group_size == 2                                                                               logic_signature/signature.py:16
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)         tmp%4#0                                                                                                   Global.group_size == 2                                                                               logic_signature/signature.py:16
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)        tmp%4#0                                                                                                   assert Global.group_size == 2                                                                        logic_signature/signature.py:16
    assert                                                          //                                                                                                                                                                                                                                                                 assert Global.group_size == 2                                                                        logic_signature/signature.py:16
    int 1                                                           //                                                                                            1                                                                                                                                                                    True                                                                                                 logic_signature/signature.py:17
    return                                                          //                                                                                                                                                                                                                                                                 return True                                                                                          logic_signature/signature.py:17


// test_cases.logic_signature.signature.assert_correct_payment(txn_offset: uint64) -> void:
assert_correct_payment:
    proto 1 0                                                       //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   @subroutine\ndef assert_correct_payment(txn_offset: UInt64) -> None:                                 logic_signature/signature.py:25-26

assert_correct_payment_block@0:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:28
    gtxns TypeEnum                                                  //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:28
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%0#0                                                                                GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:28
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%0#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.Payment                                                logic_signature/signature.py:28
    int pay                                                         //                                                                                            (𝕡) txn_offset#0 | tmp%0#0,pay                                                                                                                                       TransactionType.Payment                                                                              logic_signature/signature.py:28
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.type_enum(txn_offset) == TransactionType.Payment                                                logic_signature/signature.py:28
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%1#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.Payment                                                logic_signature/signature.py:28
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%1#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30
    bz assert_correct_payment_bool_false@4                          //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30
    // Implicit fall through to assert_correct_payment_and_contd@1  //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30

assert_correct_payment_and_contd@1:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.receiver(txn_offset)                                                                            logic_signature/signature.py:29
    gtxns Receiver                                                  //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.receiver(txn_offset)                                                                            logic_signature/signature.py:29
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%2#0                                                                                GTxn.receiver(txn_offset)                                                                            logic_signature/signature.py:29
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%2#0                                                                                GTxn.receiver(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                      logic_signature/signature.py:29
    byte TMPL_SELLER                                                //                                                                                            (𝕡) txn_offset#0 | tmp%2#0,TMPL_SELLER                                                                                                                               TemplateVar[Bytes]("SELLER")                                                                         logic_signature/signature.py:29
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.receiver(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                      logic_signature/signature.py:29
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%3#0                                                                                GTxn.receiver(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                      logic_signature/signature.py:29
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%3#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30
    bz assert_correct_payment_bool_false@4                          //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30
    // Implicit fall through to assert_correct_payment_and_contd@2  //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30

assert_correct_payment_and_contd@2:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.amount(txn_offset)                                                                              logic_signature/signature.py:30
    gtxns Amount                                                    //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.amount(txn_offset)                                                                              logic_signature/signature.py:30
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%4#0                                                                                GTxn.amount(txn_offset)                                                                              logic_signature/signature.py:30
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%4#0                                                                                GTxn.amount(txn_offset) == TemplateVar[UInt64]("PRICE")                                              logic_signature/signature.py:30
    int TMPL_PRICE                                                  //                                                                                            (𝕡) txn_offset#0 | tmp%4#0,TMPL_PRICE                                                                                                                                TemplateVar[UInt64]("PRICE")                                                                         logic_signature/signature.py:30
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.amount(txn_offset) == TemplateVar[UInt64]("PRICE")                                              logic_signature/signature.py:30
    //                                                              virtual: store tmp%5#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%5#0                                                                                GTxn.amount(txn_offset) == TemplateVar[UInt64]("PRICE")                                              logic_signature/signature.py:30
    //                                                              virtual: load tmp%5#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%5#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30
    bz assert_correct_payment_bool_false@4                          //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30
    // Implicit fall through to assert_correct_payment_bool_true@3  //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).bytes == Tem... logic_signature/signature.py:28-30

assert_correct_payment_bool_true@3:
    int 1                                                           //                                                                                            (𝕡) txn_offset#0 | 1
    //                                                              virtual: store and_result%6#0 to x-stack (no copy)  (𝕡) txn_offset#0 | (𝕏) and_result%6#0 |
    b assert_correct_payment_bool_merge@5                           //                                                                                            (𝕡) txn_offset#0 | (𝕏) and_result%6#0 |                         and_result%6#0

assert_correct_payment_bool_false@4:
    int 0                                                           //                                                                                            (𝕡) txn_offset#0 | 0
    //                                                              virtual: store and_result%6#0 to x-stack (no copy)  (𝕡) txn_offset#0 | (𝕏) and_result%6#0 |
    // Implicit fall through to assert_correct_payment_bool_merge@5 //                                                                                            (𝕡) txn_offset#0 | (𝕏) and_result%6#0 |                         and_result%6#0

assert_correct_payment_bool_merge@5:
    //                                                              virtual: load and_result%6#0 from x-stack           (𝕡) txn_offset#0 | and_result%6#0                                                      and_result%6#0     assert (\nGTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).by... logic_signature/signature.py:27-31
    assert                                                          //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   assert (\nGTxn.type_enum(txn_offset) == TransactionType.Payment\nand GTxn.receiver(txn_offset).by... logic_signature/signature.py:27-31
    retsub                                                          //


// test_cases.logic_signature.signature.assert_correct_asset(txn_offset: uint64) -> void:
assert_correct_asset:
    proto 1 0                                                       //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   @subroutine\ndef assert_correct_asset(txn_offset: UInt64) -> None:                                   logic_signature/signature.py:34-35

assert_correct_asset_block@0:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:37
    gtxns TypeEnum                                                  //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:37
    //                                                              virtual: store tmp%0#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%0#0                                                                                GTxn.type_enum(txn_offset)                                                                           logic_signature/signature.py:37
    //                                                              virtual: load tmp%0#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%0#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer                                          logic_signature/signature.py:37
    int axfer                                                       //                                                                                            (𝕡) txn_offset#0 | tmp%0#0,axfer                                                                                                                                     TransactionType.AssetTransfer                                                                        logic_signature/signature.py:37
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer                                          logic_signature/signature.py:37
    //                                                              virtual: store tmp%1#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%1#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer                                          logic_signature/signature.py:37
    //                                                              virtual: load tmp%1#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%1#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    bz assert_correct_asset_bool_false@7                            //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    // Implicit fall through to assert_correct_asset_and_contd@1    //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42

assert_correct_asset_and_contd@1:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.asset_amount(txn_offset)                                                                        logic_signature/signature.py:38
    gtxns AssetAmount                                               //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.asset_amount(txn_offset)                                                                        logic_signature/signature.py:38
    //                                                              virtual: store tmp%2#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%2#0                                                                                GTxn.asset_amount(txn_offset)                                                                        logic_signature/signature.py:38
    //                                                              virtual: load tmp%2#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%2#0                                                                                GTxn.asset_amount(txn_offset) == 1                                                                   logic_signature/signature.py:38
    int 1                                                           //                                                                                            (𝕡) txn_offset#0 | tmp%2#0,1                                                                                                                                         1                                                                                                    logic_signature/signature.py:38
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.asset_amount(txn_offset) == 1                                                                   logic_signature/signature.py:38
    //                                                              virtual: store tmp%3#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%3#0                                                                                GTxn.asset_amount(txn_offset) == 1                                                                   logic_signature/signature.py:38
    //                                                              virtual: load tmp%3#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%3#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    bz assert_correct_asset_bool_false@7                            //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    // Implicit fall through to assert_correct_asset_and_contd@2    //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42

assert_correct_asset_and_contd@2:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.sender(txn_offset)                                                                              logic_signature/signature.py:39
    gtxns Sender                                                    //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.sender(txn_offset)                                                                              logic_signature/signature.py:39
    //                                                              virtual: store tmp%4#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%4#0                                                                                GTxn.sender(txn_offset)                                                                              logic_signature/signature.py:39
    //                                                              virtual: load tmp%4#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%4#0                                                                                GTxn.sender(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                        logic_signature/signature.py:39
    byte TMPL_SELLER                                                //                                                                                            (𝕡) txn_offset#0 | tmp%4#0,TMPL_SELLER                                                                                                                               TemplateVar[Bytes]("SELLER")                                                                         logic_signature/signature.py:39
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.sender(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                        logic_signature/signature.py:39
    //                                                              virtual: store tmp%5#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%5#0                                                                                GTxn.sender(txn_offset).bytes == TemplateVar[Bytes]("SELLER")                                        logic_signature/signature.py:39
    //                                                              virtual: load tmp%5#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%5#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    bz assert_correct_asset_bool_false@7                            //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    // Implicit fall through to assert_correct_asset_and_contd@3    //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42

assert_correct_asset_and_contd@3:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.xfer_asset(txn_offset)                                                                          logic_signature/signature.py:40
    gtxns XferAsset                                                 //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.xfer_asset(txn_offset)                                                                          logic_signature/signature.py:40
    //                                                              virtual: store tmp%6#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%6#0                                                                                GTxn.xfer_asset(txn_offset)                                                                          logic_signature/signature.py:40
    //                                                              virtual: load tmp%6#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%6#0                                                                                GTxn.xfer_asset(txn_offset).id == TemplateVar[UInt64]("ASSET_ID")                                    logic_signature/signature.py:40
    int TMPL_ASSET_ID                                               //                                                                                            (𝕡) txn_offset#0 | tmp%6#0,TMPL_ASSET_ID                                                                                                                             TemplateVar[UInt64]("ASSET_ID")                                                                      logic_signature/signature.py:40
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.xfer_asset(txn_offset).id == TemplateVar[UInt64]("ASSET_ID")                                    logic_signature/signature.py:40
    //                                                              virtual: store tmp%7#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%7#0                                                                                GTxn.xfer_asset(txn_offset).id == TemplateVar[UInt64]("ASSET_ID")                                    logic_signature/signature.py:40
    //                                                              virtual: load tmp%7#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%7#0                                                                                GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    bz assert_correct_asset_bool_false@7                            //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    // Implicit fall through to assert_correct_asset_and_contd@4    //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42

assert_correct_asset_and_contd@4:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.asset_close_to(txn_offset)                                                                      logic_signature/signature.py:41
    gtxns AssetCloseTo                                              //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.asset_close_to(txn_offset)                                                                      logic_signature/signature.py:41
    //                                                              virtual: store tmp%8#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%8#0                                                                                GTxn.asset_close_to(txn_offset)                                                                      logic_signature/signature.py:41
    global ZeroAddress                                              //                                                                                            (𝕡) txn_offset#0 | tmp%8#0,{global}                                                                                                                                  Global.zero_address                                                                                  logic_signature/signature.py:41
    //                                                              virtual: store tmp%9#0 to l-stack (no copy)         (𝕡) txn_offset#0 | tmp%8#0,tmp%9#0                                                                        Global.zero_address                                                                                  logic_signature/signature.py:41
    //                                                              virtual: load tmp%8#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%9#0,tmp%8#0                                                                        GTxn.asset_close_to(txn_offset) == Global.zero_address                                               logic_signature/signature.py:41
    //                                                              virtual: load tmp%9#0 from l-stack (no copy)        (𝕡) txn_offset#0 | tmp%8#0,tmp%9#0                                                                        GTxn.asset_close_to(txn_offset) == Global.zero_address                                               logic_signature/signature.py:41
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.asset_close_to(txn_offset) == Global.zero_address                                               logic_signature/signature.py:41
    //                                                              virtual: store tmp%10#0 to l-stack (no copy)        (𝕡) txn_offset#0 | tmp%10#0                                                                               GTxn.asset_close_to(txn_offset) == Global.zero_address                                               logic_signature/signature.py:41
    //                                                              virtual: load tmp%10#0 from l-stack (no copy)       (𝕡) txn_offset#0 | tmp%10#0                                                                               GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    bz assert_correct_asset_bool_false@7                            //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    // Implicit fall through to assert_correct_asset_and_contd@5    //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42

assert_correct_asset_and_contd@5:
    frame_dig -1                                                    //                                                  load txn_offset#0 from parameters         (𝕡) txn_offset#0 | txn_offset#0                                                                                                                                      GTxn.rekey_to(txn_offset)                                                                            logic_signature/signature.py:42
    gtxns RekeyTo                                                   //                                                                                            (𝕡) txn_offset#0 | {gtxns}                                                                                                                                           GTxn.rekey_to(txn_offset)                                                                            logic_signature/signature.py:42
    //                                                              virtual: store tmp%11#0 to l-stack (no copy)        (𝕡) txn_offset#0 | tmp%11#0                                                                               GTxn.rekey_to(txn_offset)                                                                            logic_signature/signature.py:42
    global ZeroAddress                                              //                                                                                            (𝕡) txn_offset#0 | tmp%11#0,{global}                                                                                                                                 Global.zero_address                                                                                  logic_signature/signature.py:42
    //                                                              virtual: store tmp%12#0 to l-stack (no copy)        (𝕡) txn_offset#0 | tmp%11#0,tmp%12#0                                                                      Global.zero_address                                                                                  logic_signature/signature.py:42
    //                                                              virtual: load tmp%11#0 from l-stack (no copy)       (𝕡) txn_offset#0 | tmp%12#0,tmp%11#0                                                                      GTxn.rekey_to(txn_offset) == Global.zero_address                                                     logic_signature/signature.py:42
    //                                                              virtual: load tmp%12#0 from l-stack (no copy)       (𝕡) txn_offset#0 | tmp%11#0,tmp%12#0                                                                      GTxn.rekey_to(txn_offset) == Global.zero_address                                                     logic_signature/signature.py:42
    ==                                                              //                                                                                            (𝕡) txn_offset#0 | {==}                                                                                                                                              GTxn.rekey_to(txn_offset) == Global.zero_address                                                     logic_signature/signature.py:42
    //                                                              virtual: store tmp%13#0 to l-stack (no copy)        (𝕡) txn_offset#0 | tmp%13#0                                                                               GTxn.rekey_to(txn_offset) == Global.zero_address                                                     logic_signature/signature.py:42
    //                                                              virtual: load tmp%13#0 from l-stack (no copy)       (𝕡) txn_offset#0 | tmp%13#0                                                                               GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    bz assert_correct_asset_bool_false@7                            //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42
    // Implicit fall through to assert_correct_asset_bool_true@6    //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   GTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_offset) ==... logic_signature/signature.py:37-42

assert_correct_asset_bool_true@6:
    int 1                                                           //                                                                                            (𝕡) txn_offset#0 | 1
    //                                                              virtual: store and_result%14#0 to x-stack (no copy) (𝕡) txn_offset#0 | (𝕏) and_result%14#0 |
    b assert_correct_asset_bool_merge@8                             //                                                                                            (𝕡) txn_offset#0 | (𝕏) and_result%14#0 |                        and_result%14#0

assert_correct_asset_bool_false@7:
    int 0                                                           //                                                                                            (𝕡) txn_offset#0 | 0
    //                                                              virtual: store and_result%14#0 to x-stack (no copy) (𝕡) txn_offset#0 | (𝕏) and_result%14#0 |
    // Implicit fall through to assert_correct_asset_bool_merge@8   //                                                                                            (𝕡) txn_offset#0 | (𝕏) and_result%14#0 |                        and_result%14#0

assert_correct_asset_bool_merge@8:
    //                                                              virtual: load and_result%14#0 from x-stack          (𝕡) txn_offset#0 | and_result%14#0                                                     and_result%14#0    assert (\nGTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_... logic_signature/signature.py:36-43
    assert                                                          //                                                                                            (𝕡) txn_offset#0 |                                                                                                                                                   assert (\nGTxn.type_enum(txn_offset) == TransactionType.AssetTransfer\nand GTxn.asset_amount(txn_... logic_signature/signature.py:36-43
    retsub                                                          //

