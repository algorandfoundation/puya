// Op                                                                      Stack (out)
// test_cases.logic_signature.compiled_logic_sig.dont_use_this() -> uint64:
subroutine main:
    block@0:
        // logic_signature/compiled_logic_sig.py:6
        // assert op.arg(1) == b"this is not secure", "arg is not correct"
        arg 1                                                              tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                     tmp%0#0
        byte 0x74686973206973206e6f7420736563757265                        tmp%0#0,0x74686973206973206e6f7420736563757265
        ==                                                                 tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                     tmp%1#0
        assert // arg is not correct
        // logic_signature/compiled_logic_sig.py:7
        // assert op.arg(0) == b"0"
        arg 0                                                              tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                     tmp%2#0
        byte 0x30                                                          tmp%2#0,0x30
        ==                                                                 tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                     tmp%3#0
        assert
        // logic_signature/compiled_logic_sig.py:8
        // assert op.arg(2) == b"2"
        arg 2                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                     tmp%4#0
        byte 0x32                                                          tmp%4#0,0x32
        ==                                                                 tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                     tmp%5#0
        assert
        // logic_signature/compiled_logic_sig.py:9
        // assert op.arg(3) == b"3"
        arg 3                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                     tmp%6#0
        byte 0x33                                                          tmp%6#0,0x33
        ==                                                                 tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                     tmp%7#0
        assert
        // logic_signature/compiled_logic_sig.py:10
        // assert op.arg(4) == b"4"
        arg 4                                                              tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                     tmp%8#0
        byte 0x34                                                          tmp%8#0,0x34
        ==                                                                 tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                     tmp%9#0
        assert
        // logic_signature/compiled_logic_sig.py:11
        // assert op.arg(Txn.num_app_args) == b"cant_happen"
        txn NumAppArgs                                                     tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                    tmp%10#0
        args                                                               tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                    tmp%11#0
        byte 0x63616e745f68617070656e                                      tmp%11#0,0x63616e745f68617070656e
        ==                                                                 tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                    tmp%12#0
        assert
        // logic_signature/compiled_logic_sig.py:12
        // return True
        int 1                                                              1
        return


