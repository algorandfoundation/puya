// Op                                                                                                          Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // logic_signature/compiled_logic_sig.py:10
        // class CheckCompiledSig(arc4.ARC4Contract):
        txn NumAppArgs                                                                                         tmp%0#1
        bz main_bare_routing@6 ; b main_abi_routing@2

    main_abi_routing@2:
        // logic_signature/compiled_logic_sig.py:10
        // class CheckCompiledSig(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                 tmp%2#0
        method check_sig_with_logic_sig_only_op_compiles()void                                                 tmp%2#0,Method(check_sig_with_logic_sig_only_op_compiles()void)
        l-load tmp%2#0 1                                                                                       Method(check_sig_with_logic_sig_only_op_compiles()void),tmp%2#0
        match main_check_sig_with_logic_sig_only_op_compiles_route@3 ; b main_after_if_else@10 

    main_check_sig_with_logic_sig_only_op_compiles_route@3:
        // logic_signature/compiled_logic_sig.py:11
        // @arc4.abimethod()
        txn OnCompletion                                                                                       tmp%3#0
        !                                                                                                      tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                      tmp%5#0
        assert // can only call when not creating
        callsub check_sig_with_logic_sig_only_op_compiles
        int 1                                                                                                  test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11 

    main_bare_routing@6:
        // logic_signature/compiled_logic_sig.py:10
        // class CheckCompiledSig(arc4.ARC4Contract):
        txn OnCompletion                                                                                       tmp%7#0
        bz main___algopy_default_create@7 ; b main_after_if_else@10

    main___algopy_default_create@7:
        txn ApplicationID                                                                                      tmp%8#0
        !                                                                                                      tmp%9#0
        assert // can only call when creating
        int 1                                                                                                  test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11 

    main_after_if_else@10:
        // logic_signature/compiled_logic_sig.py:10
        // class CheckCompiledSig(arc4.ARC4Contract):
        int 0                                                                                                  test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11 

    main_after_inlined_test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.__puya_arc4_router__@11:
        v-load tmp%0#0                                                                                         tmp%0#0
        return


// test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.check_sig_with_logic_sig_only_op_compiles() -> void:
subroutine check_sig_with_logic_sig_only_op_compiles:
    check_sig_with_logic_sig_only_op_compiles_block@0:
        // logic_signature/compiled_logic_sig.py:14
        // Txn.sender == compile_logicsig(dont_use_this).account
        txn Sender                                                                                             tmp%0#0
        addr "67S4QBKFNXRYLOXCZ5F5IVDQWDGQLUJ3TR6VDZBTGD4JLK3TSDX7L63MI4"                                      tmp%0#0,Address(67S4QBKFNXRYLOXCZ5F5IVDQWDGQLUJ3TR6VDZBTGD4JLK3TSDX7L63MI4)
        ==                                                                                                     tmp%1#0
        // logic_signature/compiled_logic_sig.py:13-15
        // assert (
        //     Txn.sender == compile_logicsig(dont_use_this).account
        // ), "expected to be signed by logic sig"
        assert // expected to be signed by logic sig
        retsub


