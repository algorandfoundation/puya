// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // logic_signature/compiled_logic_sig.py:15
        // class CheckCompiledSig(arc4.ARC4Contract):
        txn ApplicationID                                                               tmp%0#1
        l-load tmp%0#1 0                                                                tmp%0#1
        !                                                                               tmp%1#0
        txn OnCompletion                                                                tmp%1#0,tmp%2#0
        l-load tmp%2#0 0                                                                tmp%1#0,tmp%2#0
        int 1                                                                           tmp%1#0,tmp%2#0,1
        shl                                                                             tmp%1#0,tmp%3#0
        l-load tmp%1#0 1                                                                tmp%3#0,tmp%1#0
        l-load tmp%3#0 1                                                                tmp%1#0,tmp%3#0
        +                                                                               tmp%4#0
        l-load tmp%4#0 0                                                                tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // logic_signature/compiled_logic_sig.py:15
        // class CheckCompiledSig(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%5#0
        method check_sig_with_logic_sig_only_op_compiles()void                          tmp%5#0,Method(check_sig_with_logic_sig_only_op_compiles()void)
        l-load tmp%5#0 1                                                                Method(check_sig_with_logic_sig_only_op_compiles()void),tmp%5#0
        match check_sig_with_logic_sig_only_op_compiles_route@3 ; b switch_case_next@5

    check_sig_with_logic_sig_only_op_compiles_route@3:
        // logic_signature/compiled_logic_sig.py:15
        // class CheckCompiledSig(arc4.ARC4Contract):
        callsub check_sig_with_logic_sig_only_op_compiles
        b switch_case_next@5

    switch_case_next@5:
        // logic_signature/compiled_logic_sig.py:15
        // class CheckCompiledSig(arc4.ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // logic_signature/compiled_logic_sig.py:15
        // class CheckCompiledSig(arc4.ARC4Contract):
        txn NumAppArgs                                                                  tmp%6#0
        l-load tmp%6#0 0                                                                tmp%6#0
        !                                                                               tmp%7#0
        l-load tmp%7#0 0                                                                tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                           1
        return

    *NOT_IMPLEMENTED:
        // logic_signature/compiled_logic_sig.py:15
        // class CheckCompiledSig(arc4.ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.check_sig_with_logic_sig_only_op_compiles[routing]() -> void:
subroutine check_sig_with_logic_sig_only_op_compiles:
    check_sig_with_logic_sig_only_op_compiles_block@0:
        // logic_signature/compiled_logic_sig.py:19
        // Txn.sender == compile_logicsig(dont_use_this).account
        txn Sender                                                                      tmp%0#0
        l-load tmp%0#0 0                                                                tmp%0#0
        addr "XFVQVIX76GWVJE3FEPZ5QKF2QWHX2RLJVSREIIXYAJYQWXP6RQKM4RLYNY"               tmp%0#0,Address(XFVQVIX76GWVJE3FEPZ5QKF2QWHX2RLJVSREIIXYAJYQWXP6RQKM4RLYNY)
        ==                                                                              tmp%1#0
        // logic_signature/compiled_logic_sig.py:18-20
        // assert (
        //     Txn.sender == compile_logicsig(dont_use_this).account
        // ), "expected to be signed by logic sig"
        l-load tmp%1#0 0                                                                tmp%1#0
        assert // expected to be signed by logic sig
        // logic_signature/compiled_logic_sig.py:16
        // @arc4.abimethod()
        int 1                                                                           1
        return


