{
    "name": "CheckCompiledSig",
    "structs": {},
    "methods": [
        {
            "name": "check_sig_with_logic_sig_only_op_compiles",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        20
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        34
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        23
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        75
                    ],
                    "errorMessage": "expected to be signed by logic sig"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTUKICAgIC8vIGNsYXNzIENoZWNrQ29tcGlsZWRTaWcoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDYKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIHB1c2hieXRlcyAweGJiMzFmYzgyIC8vIG1ldGhvZCAiY2hlY2tfc2lnX3dpdGhfbG9naWNfc2lnX29ubHlfb3BfY29tcGlsZXMoKXZvaWQiCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBsb2dpY19zaWduYXR1cmUvY29tcGlsZWRfbG9naWNfc2lnLnB5OjE2CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBiIGNoZWNrX3NpZ193aXRoX2xvZ2ljX3NpZ19vbmx5X29wX2NvbXBpbGVzCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gbG9naWNfc2lnbmF0dXJlL2NvbXBpbGVkX2xvZ2ljX3NpZy5weToxNQogICAgLy8gY2xhc3MgQ2hlY2tDb21waWxlZFNpZyhhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5sb2dpY19zaWduYXR1cmUuY29tcGlsZWRfbG9naWNfc2lnLkNoZWNrQ29tcGlsZWRTaWcuY2hlY2tfc2lnX3dpdGhfbG9naWNfc2lnX29ubHlfb3BfY29tcGlsZXNbcm91dGluZ10oKSAtPiB2b2lkOgpjaGVja19zaWdfd2l0aF9sb2dpY19zaWdfb25seV9vcF9jb21waWxlczoKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTkKICAgIC8vIFR4bi5zZW5kZXIgPT0gY29tcGlsZV9sb2dpY3NpZyhkb250X3VzZV90aGlzKS5hY2NvdW50CiAgICB0eG4gU2VuZGVyCiAgICBwdXNoYnl0ZXMgYmFzZTMyKEw1QUJBNkpFVkUzVkFES0lCUVBWVDZKU0xGU05UVTZQM1o1T0NOUkdBNExNUllBN1dLQkEpIC8vIGFkZHIgTDVBQkE2SkVWRTNWQURLSUJRUFZUNkpTTEZTTlRVNlAzWjVPQ05SR0E0TE1SWUE3V0tCQ1NMSkJHSQogICAgPT0KICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTgtMjAKICAgIC8vIGFzc2VydCAoCiAgICAvLyAgICAgVHhuLnNlbmRlciA9PSBjb21waWxlX2xvZ2ljc2lnKGRvbnRfdXNlX3RoaXMpLmFjY291bnQKICAgIC8vICksICJleHBlY3RlZCB0byBiZSBzaWduZWQgYnkgbG9naWMgc2lnIgogICAgYXNzZXJ0IC8vIGV4cGVjdGVkIHRvIGJlIHNpZ25lZCBieSBsb2dpYyBzaWcKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CjEbQQAVNhoAgAS7MfyCEkQxGRREMRhEQgALMRkURDEYFESBAUMxAIAgX0AQeSSpN1ANSAwfWfkyWWTZ08/eeuE2JgcWyOAfsoISRIEBQw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}