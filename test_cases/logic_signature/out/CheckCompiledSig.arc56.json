{
    "name": "CheckCompiledSig",
    "structs": {},
    "methods": [
        {
            "name": "check_sig_with_logic_sig_only_op_compiles",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        23
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        41
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "expected to be signed by logic sig"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTUKICAgIC8vIGNsYXNzIENoZWNrQ29tcGlsZWRTaWcoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDYKICAgIHB1c2hieXRlcyAweGJiMzFmYzgyIC8vIG1ldGhvZCAiY2hlY2tfc2lnX3dpdGhfbG9naWNfc2lnX29ubHlfb3BfY29tcGlsZXMoKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2NoZWNrX3NpZ193aXRoX2xvZ2ljX3NpZ19vbmx5X29wX2NvbXBpbGVzX3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIGVycgoKbWFpbl9jaGVja19zaWdfd2l0aF9sb2dpY19zaWdfb25seV9vcF9jb21waWxlc19yb3V0ZUAzOgogICAgLy8gbG9naWNfc2lnbmF0dXJlL2NvbXBpbGVkX2xvZ2ljX3NpZy5weToxNgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiBjaGVja19zaWdfd2l0aF9sb2dpY19zaWdfb25seV9vcF9jb21waWxlcwogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdANjoKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTUKICAgIC8vIGNsYXNzIENoZWNrQ29tcGlsZWRTaWcoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLmxvZ2ljX3NpZ25hdHVyZS5jb21waWxlZF9sb2dpY19zaWcuQ2hlY2tDb21waWxlZFNpZy5jaGVja19zaWdfd2l0aF9sb2dpY19zaWdfb25seV9vcF9jb21waWxlcygpIC0+IHZvaWQ6CmNoZWNrX3NpZ193aXRoX2xvZ2ljX3NpZ19vbmx5X29wX2NvbXBpbGVzOgogICAgLy8gbG9naWNfc2lnbmF0dXJlL2NvbXBpbGVkX2xvZ2ljX3NpZy5weToxOQogICAgLy8gVHhuLnNlbmRlciA9PSBjb21waWxlX2xvZ2ljc2lnKGRvbnRfdXNlX3RoaXMpLmFjY291bnQKICAgIHR4biBTZW5kZXIKICAgIHB1c2hieXRlcyBiYXNlMzIoTDVBQkE2SkVWRTNWQURLSUJRUFZUNkpTTEZTTlRVNlAzWjVPQ05SR0E0TE1SWUE3V0tCQSkgLy8gYWRkciBMNUFCQTZKRVZFM1ZBREtJQlFQVlQ2SlNMRlNOVFU2UDNaNU9DTlJHQTRMTVJZQTdXS0JDU0xKQkdJCiAgICA9PQogICAgLy8gbG9naWNfc2lnbmF0dXJlL2NvbXBpbGVkX2xvZ2ljX3NpZy5weToxOC0yMAogICAgLy8gYXNzZXJ0ICgKICAgIC8vICAgICBUeG4uc2VuZGVyID09IGNvbXBpbGVfbG9naWNzaWcoZG9udF91c2VfdGhpcykuYWNjb3VudAogICAgLy8gKSwgImV4cGVjdGVkIHRvIGJlIHNpZ25lZCBieSBsb2dpYyBzaWciCiAgICBhc3NlcnQgLy8gZXhwZWN0ZWQgdG8gYmUgc2lnbmVkIGJ5IGxvZ2ljIHNpZwogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CjEbQQAbgAS7MfyCNhoAjgEAAQAxGRREMRhEiAAPgQFDMRlA/+0xGBREgQFDMQCAIF9AEHkkqTdQDUgMH1n5Mllk2dPP3nrhNiYHFsjgH7KCEkSJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}