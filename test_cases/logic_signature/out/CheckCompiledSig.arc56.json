{
    "name": "CheckCompiledSig",
    "structs": {},
    "methods": [
        {
            "name": "check_sig_with_logic_sig_only_op_compiles",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        37
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        75
                    ],
                    "errorMessage": "expected to be signed by logic sig"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTUKICAgIC8vIGNsYXNzIENoZWNrQ29tcGlsZWRTaWcoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IF9fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDYKICAgIHB1c2hieXRlcyAweGJiMzFmYzgyIC8vIG1ldGhvZCAiY2hlY2tfc2lnX3dpdGhfbG9naWNfc2lnX29ubHlfb3BfY29tcGlsZXMoKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBjaGVja19zaWdfd2l0aF9sb2dpY19zaWdfb25seV9vcF9jb21waWxlc19yb3V0ZUAzCiAgICBlcnIKCmNoZWNrX3NpZ193aXRoX2xvZ2ljX3NpZ19vbmx5X29wX2NvbXBpbGVzX3JvdXRlQDM6CiAgICAvLyBsb2dpY19zaWduYXR1cmUvY29tcGlsZWRfbG9naWNfc2lnLnB5OjE2CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBiIGNoZWNrX3NpZ193aXRoX2xvZ2ljX3NpZ19vbmx5X29wX2NvbXBpbGVzCgpfX2FsZ29weV9kZWZhdWx0X2NyZWF0ZUA2OgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgICYmCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCgoKLy8gdGVzdF9jYXNlcy5sb2dpY19zaWduYXR1cmUuY29tcGlsZWRfbG9naWNfc2lnLkNoZWNrQ29tcGlsZWRTaWcuY2hlY2tfc2lnX3dpdGhfbG9naWNfc2lnX29ubHlfb3BfY29tcGlsZXNbcm91dGluZ10oKSAtPiB2b2lkOgpjaGVja19zaWdfd2l0aF9sb2dpY19zaWdfb25seV9vcF9jb21waWxlczoKICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTkKICAgIC8vIFR4bi5zZW5kZXIgPT0gY29tcGlsZV9sb2dpY3NpZyhkb250X3VzZV90aGlzKS5hY2NvdW50CiAgICB0eG4gU2VuZGVyCiAgICBwdXNoYnl0ZXMgYmFzZTMyKFhGVlFWSVg3NkdXVkpFM0ZFUFo1UUtGMlFXSFgyUkxKVlNSRUlJWFlBSllRV1hQNlJRS0EpIC8vIGFkZHIgWEZWUVZJWDc2R1dWSkUzRkVQWjVRS0YyUVdIWDJSTEpWU1JFSUlYWUFKWVFXWFA2UlFLTTRSTFlOWQogICAgPT0KICAgIC8vIGxvZ2ljX3NpZ25hdHVyZS9jb21waWxlZF9sb2dpY19zaWcucHk6MTYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IGV4cGVjdGVkIHRvIGJlIHNpZ25lZCBieSBsb2dpYyBzaWcK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CjEbQQAYgAS7MfyCNhoAjgEAAQAxGRQxGBBEQgAIMRkUMRgUEEMxAIAguWsKov/xrVSTZSPz2Ci6hY99RWmsokQi+AJxC13+jBQSQw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}