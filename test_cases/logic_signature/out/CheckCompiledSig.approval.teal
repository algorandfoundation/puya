#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // logic_signature/compiled_logic_sig.py:15
    // class CheckCompiledSig(arc4.ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@5
    pushbytes 0xbb31fc82 // method "check_sig_with_logic_sig_only_op_compiles()void"
    txna ApplicationArgs 0
    match main_check_sig_with_logic_sig_only_op_compiles_route@3
    err

main_check_sig_with_logic_sig_only_op_compiles_route@3:
    // logic_signature/compiled_logic_sig.py:16
    // @arc4.abimethod()
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    b check_sig_with_logic_sig_only_op_compiles

main___algopy_default_create@5:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// test_cases.logic_signature.compiled_logic_sig.CheckCompiledSig.check_sig_with_logic_sig_only_op_compiles[routing]() -> void:
check_sig_with_logic_sig_only_op_compiles:
    // logic_signature/compiled_logic_sig.py:19
    // Txn.sender == compile_logicsig(dont_use_this).account
    txn Sender
    pushbytes base32(XFVQVIX76GWVJE3FEPZ5QKF2QWHX2RLJVSREIIXYAJYQWXP6RQKA) // addr XFVQVIX76GWVJE3FEPZ5QKF2QWHX2RLJVSREIIXYAJYQWXP6RQKM4RLYNY
    ==
    // logic_signature/compiled_logic_sig.py:16
    // @arc4.abimethod()
    return // on error: expected to be signed by logic sig
