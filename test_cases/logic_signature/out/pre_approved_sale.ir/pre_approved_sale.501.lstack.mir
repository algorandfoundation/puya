// Op                                                                  Stack (out)
// test_cases.logic_signature.signature.pre_approved_sale() -> uint64:
subroutine main:
    main_block@0:
        // logic_signature/signature.py:13
        // pay_txn = gtxn.PaymentTransaction(0)
        int 0                                                          0
        gtxns TypeEnum                                                 gtxn_type%0#0
        l-load gtxn_type%0#0 0                                         gtxn_type%0#0
        int pay                                                        gtxn_type%0#0,pay
        ==                                                             gtxn_type_matches%0#0
        l-load gtxn_type_matches%0#0 0                                 gtxn_type_matches%0#0
        assert // transaction type is pay
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          1
        gtxns TypeEnum                                                 gtxn_type%1#0
        l-load gtxn_type%1#0 0                                         gtxn_type%1#0
        int axfer                                                      gtxn_type%1#0,axfer
        ==                                                             gtxn_type_matches%1#0
        l-load gtxn_type_matches%1#0 0                                 gtxn_type_matches%1#0
        assert // transaction type is axfer
        // logic_signature/signature.py:13
        // pay_txn = gtxn.PaymentTransaction(0)
        int 0                                                          0
        // logic_signature/signature.py:24
        // assert txn.receiver == TemplateVar[Account]("SELLER") and (
        gtxns Receiver                                                 tmp%0#0
        l-load tmp%0#0 0                                               tmp%0#0
        byte TMPL_SELLER                                               tmp%0#0,TMPL_SELLER
        ==                                                             tmp%1#1
        // logic_signature/signature.py:24-26
        // assert txn.receiver == TemplateVar[Account]("SELLER") and (
        //     txn.amount == TemplateVar[UInt64]("PRICE")
        // )
        l-load tmp%1#1 0                                               tmp%1#1
        bz main_bool_false@4 ; b main_and_contd@2

    main_and_contd@2:
        // logic_signature/signature.py:13
        // pay_txn = gtxn.PaymentTransaction(0)
        int 0                                                          0
        // logic_signature/signature.py:25
        // txn.amount == TemplateVar[UInt64]("PRICE")
        gtxns Amount                                                   tmp%2#1
        l-load tmp%2#1 0                                               tmp%2#1
        int TMPL_PRICE                                                 tmp%2#1,TMPL_PRICE
        ==                                                             tmp%3#1
        // logic_signature/signature.py:24-26
        // assert txn.receiver == TemplateVar[Account]("SELLER") and (
        //     txn.amount == TemplateVar[UInt64]("PRICE")
        // )
        l-load tmp%3#1 0                                               tmp%3#1
        bz main_bool_false@4 ; b main_bool_true@3

    main_bool_true@3:
        int 1                                                          1
        v-store and_result%0#0
        b main_bool_merge@5

    main_bool_false@4:
        int 0                                                          0
        v-store and_result%0#0
        b main_bool_merge@5

    main_bool_merge@5:
        // logic_signature/signature.py:24-26
        // assert txn.receiver == TemplateVar[Account]("SELLER") and (
        //     txn.amount == TemplateVar[UInt64]("PRICE")
        // )
        v-load and_result%0#0                                          and_result%0#0
        assert
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          1
        // logic_signature/signature.py:32
        // txn.asset_amount == 1
        gtxns AssetAmount                                              tmp%0#2
        l-load tmp%0#2 0                                               tmp%0#2
        int 1                                                          tmp%0#2,1
        ==                                                             tmp%1#1
        // logic_signature/signature.py:32-36
        // txn.asset_amount == 1
        // and txn.sender == TemplateVar[Account]("SELLER")
        // and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        // and txn.asset_close_to == Global.zero_address
        // and txn.rekey_to == Global.zero_address
        l-load tmp%1#1 0                                               tmp%1#1
        bz main_bool_false@13 ; b main_and_contd@8

    main_and_contd@8:
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          1
        // logic_signature/signature.py:33
        // and txn.sender == TemplateVar[Account]("SELLER")
        gtxns Sender                                                   tmp%2#2
        l-load tmp%2#2 0                                               tmp%2#2
        byte TMPL_SELLER                                               tmp%2#2,TMPL_SELLER
        ==                                                             tmp%3#1
        // logic_signature/signature.py:32-36
        // txn.asset_amount == 1
        // and txn.sender == TemplateVar[Account]("SELLER")
        // and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        // and txn.asset_close_to == Global.zero_address
        // and txn.rekey_to == Global.zero_address
        l-load tmp%3#1 0                                               tmp%3#1
        bz main_bool_false@13 ; b main_and_contd@9

    main_and_contd@9:
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          1
        // logic_signature/signature.py:34
        // and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        gtxns XferAsset                                                tmp%4#1
        l-load tmp%4#1 0                                               tmp%4#1
        int TMPL_ASSET_ID                                              tmp%4#1,TMPL_ASSET_ID
        ==                                                             tmp%5#0
        // logic_signature/signature.py:32-36
        // txn.asset_amount == 1
        // and txn.sender == TemplateVar[Account]("SELLER")
        // and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        // and txn.asset_close_to == Global.zero_address
        // and txn.rekey_to == Global.zero_address
        l-load tmp%5#0 0                                               tmp%5#0
        bz main_bool_false@13 ; b main_and_contd@10

    main_and_contd@10:
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          1
        // logic_signature/signature.py:35
        // and txn.asset_close_to == Global.zero_address
        gtxns AssetCloseTo                                             tmp%6#0
        global ZeroAddress                                             tmp%6#0,tmp%7#0
        l-load tmp%6#0 1                                               tmp%7#0,tmp%6#0
        l-load tmp%7#0 1                                               tmp%6#0,tmp%7#0
        ==                                                             tmp%8#0
        // logic_signature/signature.py:32-36
        // txn.asset_amount == 1
        // and txn.sender == TemplateVar[Account]("SELLER")
        // and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        // and txn.asset_close_to == Global.zero_address
        // and txn.rekey_to == Global.zero_address
        l-load tmp%8#0 0                                               tmp%8#0
        bz main_bool_false@13 ; b main_and_contd@11

    main_and_contd@11:
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          1
        // logic_signature/signature.py:36
        // and txn.rekey_to == Global.zero_address
        gtxns RekeyTo                                                  tmp%9#0
        global ZeroAddress                                             tmp%9#0,tmp%10#0
        l-load tmp%9#0 1                                               tmp%10#0,tmp%9#0
        l-load tmp%10#0 1                                              tmp%9#0,tmp%10#0
        ==                                                             tmp%11#0
        // logic_signature/signature.py:32-36
        // txn.asset_amount == 1
        // and txn.sender == TemplateVar[Account]("SELLER")
        // and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        // and txn.asset_close_to == Global.zero_address
        // and txn.rekey_to == Global.zero_address
        l-load tmp%11#0 0                                              tmp%11#0
        bz main_bool_false@13 ; b main_bool_true@12

    main_bool_true@12:
        int 1                                                          1
        v-store and_result%0#0
        b main_bool_merge@14

    main_bool_false@13:
        int 0                                                          0
        v-store and_result%0#0
        b main_bool_merge@14

    main_bool_merge@14:
        // logic_signature/signature.py:31-37
        // assert (
        //     txn.asset_amount == 1
        //     and txn.sender == TemplateVar[Account]("SELLER")
        //     and txn.xfer_asset == TemplateVar[Asset]("ASSET_ID")
        //     and txn.asset_close_to == Global.zero_address
        //     and txn.rekey_to == Global.zero_address
        // )
        v-load and_result%0#0                                          and_result%0#0
        assert
        // logic_signature/signature.py:13
        // pay_txn = gtxn.PaymentTransaction(0)
        int 0                                                          0
        // logic_signature/signature.py:17
        // assert pay_txn.sender == asset_txn.asset_receiver
        gtxns Sender                                                   tmp%0#0
        // logic_signature/signature.py:14
        // asset_txn = gtxn.AssetTransferTransaction(1)
        int 1                                                          tmp%0#0,1
        // logic_signature/signature.py:17
        // assert pay_txn.sender == asset_txn.asset_receiver
        gtxns AssetReceiver                                            tmp%0#0,tmp%1#0
        l-load tmp%0#0 1                                               tmp%1#0,tmp%0#0
        l-load tmp%1#0 1                                               tmp%0#0,tmp%1#0
        ==                                                             tmp%2#0
        l-load tmp%2#0 0                                               tmp%2#0
        assert
        // logic_signature/signature.py:18
        // assert Global.group_size == 2
        global GroupSize                                               tmp%3#0
        l-load tmp%3#0 0                                               tmp%3#0
        int 2                                                          tmp%3#0,2
        ==                                                             tmp%4#0
        l-load tmp%4#0 0                                               tmp%4#0
        assert
        // logic_signature/signature.py:19
        // return True
        int 1                                                          1
        return


