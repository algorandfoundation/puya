main test_cases.logic_signature.signature.pre_approved_sale:
    block@0: // L5
        let gtxn_type%0#0: uint64 = ((gtxns TypeEnum) 0u)
        let gtxn_type_matches%0#0: bool = (== gtxn_type%0#0 pay)
        (assert gtxn_type_matches%0#0) // transaction type is pay
        let gtxn_type%1#0: uint64 = ((gtxns TypeEnum) 1u)
        let gtxn_type_matches%1#0: bool = (== gtxn_type%1#0 axfer)
        (assert gtxn_type_matches%1#0) // transaction type is axfer
        let tmp%0#0: bytes[32] = ((gtxns Receiver) 0u)
        let tmp%1#1: bool = (== tmp%0#0 TemplateVar[bytes[32]](TMPL_SELLER))
        goto tmp%1#1 ? block@2 : block@4
    block@2: // and_contd_L24
        let tmp%2#1: uint64 = ((gtxns Amount) 0u)
        let tmp%3#1: bool = (== tmp%2#1 TemplateVar[uint64](TMPL_PRICE))
        goto tmp%3#1 ? block@3 : block@4
    block@3: // bool_true_L24
        let and_result%0#0: bool = 1u
        goto block@5
    block@4: // bool_false_L24
        let and_result%0#0: bool = 0u
        goto block@5
    block@5: // bool_merge_L24
        (assert and_result%0#0)
        let tmp%0#2: uint64 = ((gtxns AssetAmount) 1u)
        let tmp%1#1: bool = (== tmp%0#2 1u)
        goto tmp%1#1 ? block@8 : block@13
    block@8: // and_contd_L32
        let tmp%2#2: bytes[32] = ((gtxns Sender) 1u)
        let tmp%3#1: bool = (== tmp%2#2 TemplateVar[bytes[32]](TMPL_SELLER))
        goto tmp%3#1 ? block@9 : block@13
    block@9: // and_contd_L32
        let tmp%4#1: uint64 = ((gtxns XferAsset) 1u)
        let tmp%5#0: bool = (== tmp%4#1 TemplateVar[uint64](TMPL_ASSET_ID))
        goto tmp%5#0 ? block@10 : block@13
    block@10: // and_contd_L32
        let tmp%6#0: bytes[32] = ((gtxns AssetCloseTo) 1u)
        let tmp%7#0: bytes[32] = (global ZeroAddress)
        let tmp%8#0: bool = (== tmp%6#0 tmp%7#0)
        goto tmp%8#0 ? block@11 : block@13
    block@11: // and_contd_L32
        let tmp%9#0: bytes[32] = ((gtxns RekeyTo) 1u)
        let tmp%10#0: bytes[32] = (global ZeroAddress)
        let tmp%11#0: bool = (== tmp%9#0 tmp%10#0)
        goto tmp%11#0 ? block@12 : block@13
    block@12: // bool_true_L32
        let and_result%0#0: bool = 1u
        goto block@14
    block@13: // bool_false_L32
        let and_result%0#0: bool = 0u
        goto block@14
    block@14: // bool_merge_L32
        (assert and_result%0#0)
        let tmp%0#0: bytes[32] = ((gtxns Sender) 0u)
        let tmp%1#0: bytes[32] = ((gtxns AssetReceiver) 1u)
        let tmp%2#0: bool = (== tmp%0#0 tmp%1#0)
        (assert tmp%2#0)
        let tmp%3#0: uint64 = (global GroupSize)
        let tmp%4#0: bool = (== tmp%3#0 2u)
        (assert tmp%4#0)
        return 1u