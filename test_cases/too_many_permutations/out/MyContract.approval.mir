// Op                                                                 Stack (out)
// test_cases.too_many_permutations.contract.MyContract.approval_program() -> uint64:
main_block@0:
    // too_many_permutations/contract.py:6
    // a = op.Txn.application_args(0)
    txna ApplicationArgs 0                                            a#0
    l-store-copy a#0 0                                                a#0,a#0
    f-store a#0                                                       (洧뎽) a#0 | a#0
    // too_many_permutations/contract.py:7
    // b = op.Txn.application_args(1)
    txna ApplicationArgs 1                                            (洧뎽) a#0 | a#0,b#0
    f-store b#0                                                       (洧뎽) a#0,b#0 | a#0
    // too_many_permutations/contract.py:8
    // c = op.Txn.application_args(2)
    txna ApplicationArgs 2                                            (洧뎽) a#0,b#0 | a#0,c#0
    l-store-copy c#0 0                                                (洧뎽) a#0,b#0 | a#0,c#0,c#0
    f-store c#0                                                       (洧뎽) a#0,b#0,c#0 | a#0,c#0
    // too_many_permutations/contract.py:9
    // d = op.Txn.application_args(3)
    txna ApplicationArgs 3                                            (洧뎽) a#0,b#0,c#0 | a#0,c#0,d#0
    f-store d#0                                                       (洧뎽) a#0,b#0,c#0,d#0 | a#0,c#0
    // too_many_permutations/contract.py:11
    // assert (a != c) or (b != d)
    l-load a#0 1                                                      (洧뎽) a#0,b#0,c#0,d#0 | c#0,a#0
    l-load c#0 1                                                      (洧뎽) a#0,b#0,c#0,d#0 | a#0,c#0
    !=                                                                (洧뎽) a#0,b#0,c#0,d#0 | tmp%0#0
    bnz main_bool_true@2                                              (洧뎽) a#0,b#0,c#0,d#0 |
    // Implicit fall through to main_or_contd@1                       (洧뎽) a#0,b#0,c#0,d#0 |

main_or_contd@1:                                                      (洧뎽) a#0,b#0,c#0,d#0 |
    // too_many_permutations/contract.py:11
    // assert (a != c) or (b != d)
    f-load b#0                                                        (洧뎽) a#0,b#0,c#0,d#0 | b#0
    f-load d#0                                                        (洧뎽) a#0,b#0,c#0,d#0 | b#0,d#0
    !=                                                                (洧뎽) a#0,b#0,c#0,d#0 | tmp%1#0
    bz main_bool_false@3                                              (洧뎽) a#0,b#0,c#0,d#0 |
    // Implicit fall through to main_bool_true@2                      (洧뎽) a#0,b#0,c#0,d#0 |

main_bool_true@2:                                                     (洧뎽) a#0,b#0,c#0,d#0 |
    int 1                                                             (洧뎽) a#0,b#0,c#0,d#0 | or_result%0#0
    x-store or_result%0#0                                             (洧뎽) a#0,b#0,c#0,d#0 | (洧뎶) or_result%0#0 |
    b main_bool_merge@4                                               (洧뎽) a#0,b#0,c#0,d#0 | (洧뎶) or_result%0#0 |

main_bool_false@3:                                                    (洧뎽) a#0,b#0,c#0,d#0 |
    int 0                                                             (洧뎽) a#0,b#0,c#0,d#0 | or_result%0#0
    x-store or_result%0#0                                             (洧뎽) a#0,b#0,c#0,d#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to main_bool_merge@4                     (洧뎽) a#0,b#0,c#0,d#0 | (洧뎶) or_result%0#0 |

main_bool_merge@4:                                                    (洧뎽) a#0,b#0,c#0,d#0 | (洧뎶) or_result%0#0 |
    // too_many_permutations/contract.py:11
    // assert (a != c) or (b != d)
    x-load or_result%0#0                                              (洧뎽) a#0,b#0,c#0,d#0 | or_result%0#0
    assert                                                            (洧뎽) a#0,b#0,c#0,d#0 |
    // too_many_permutations/contract.py:12
    // assert four_args(a, b, c, d)
    f-load a#0                                                        (洧뎽) a#0,b#0,c#0,d#0 | a#0
    l-store-copy a#0 0                                                (洧뎽) a#0,b#0,c#0,d#0 | a#0,a#0 (copy)
    f-load b#0                                                        (洧뎽) a#0,b#0,c#0,d#0 | a#0,a#0 (copy),b#0
    l-store-copy b#0 2                                                (洧뎽) a#0,b#0,c#0,d#0 | b#0,a#0,a#0 (copy),b#0 (copy)
    f-load c#0                                                        (洧뎽) a#0,b#0,c#0,d#0 | b#0,a#0,a#0 (copy),b#0 (copy),c#0
    l-store-copy c#0 4                                                (洧뎽) a#0,b#0,c#0,d#0 | c#0,b#0,a#0,a#0 (copy),b#0 (copy),c#0 (copy)
    f-load d#0                                                        (洧뎽) a#0,b#0,c#0,d#0 | c#0,b#0,a#0,a#0 (copy),b#0 (copy),c#0 (copy),d#0
    l-store-copy d#0 6                                                (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0,b#0,a#0,a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)
    callsub four_args                                                 (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0,b#0,a#0,tmp%2#0
    assert                                                            (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0,b#0,a#0
    // too_many_permutations/contract.py:13
    // two_args(a, b)
    l-load a#0 0                                                      (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0,b#0,a#0
    l-load b#0 1                                                      (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0,a#0,b#0
    callsub two_args                                                  (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0
    // too_many_permutations/contract.py:14
    // two_args(c, d)
    l-load c#0 0                                                      (洧뎽) a#0,b#0,c#0,d#0 | d#0,c#0
    l-load d#0 1                                                      (洧뎽) a#0,b#0,c#0,d#0 | c#0,d#0
    callsub two_args                                                  (洧뎽) a#0,b#0,c#0,d#0 |
    // too_many_permutations/contract.py:16
    // return True
    int 1                                                             (洧뎽) a#0,b#0,c#0,d#0 | 1
    return                                                            (洧뎽) a#0,b#0,c#0,d#0 |


// test_cases.too_many_permutations.contract.four_args(a: bytes, b: bytes, c: bytes, d: bytes) -> uint64:
four_args:                                                            (洧도) a#0,b#0,c#0,d#0 |
    // too_many_permutations/contract.py:22-23
    // @subroutine
    // def four_args(a: Bytes, b: Bytes, c: Bytes, d: Bytes) -> bool:
    proto 4 1                                                         (洧도) a#0,b#0,c#0,d#0 |

four_args_block@0:                                                    (洧도) a#0,b#0,c#0,d#0 |
    // too_many_permutations/contract.py:24
    // return (a + b + c + d).length > 0
    p-load a#0                                                        (洧도) a#0,b#0,c#0,d#0 | a#0 (copy)
    p-load b#0                                                        (洧도) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy)
    concat                                                            (洧도) a#0,b#0,c#0,d#0 | tmp%0#0
    p-load c#0                                                        (洧도) a#0,b#0,c#0,d#0 | tmp%0#0,c#0 (copy)
    concat                                                            (洧도) a#0,b#0,c#0,d#0 | tmp%1#0
    p-load d#0                                                        (洧도) a#0,b#0,c#0,d#0 | tmp%1#0,d#0 (copy)
    concat                                                            (洧도) a#0,b#0,c#0,d#0 | tmp%2#0
    len                                                               (洧도) a#0,b#0,c#0,d#0 | tmp%3#0
    int 0                                                             (洧도) a#0,b#0,c#0,d#0 | tmp%3#0,0
    >                                                                 (洧도) a#0,b#0,c#0,d#0 | tmp%4#0
    retsub                                                            tmp%4#0


// test_cases.too_many_permutations.contract.two_args(a: bytes, b: bytes) -> void:
two_args:                                                             (洧도) a#0,b#0 |
    // too_many_permutations/contract.py:27-28
    // @subroutine
    // def two_args(a: Bytes, b: Bytes) -> None:
    proto 2 0                                                         (洧도) a#0,b#0 |

two_args_block@0:                                                     (洧도) a#0,b#0 |
    // too_many_permutations/contract.py:29
    // assert a + b
    p-load a#0                                                        (洧도) a#0,b#0 | a#0 (copy)
    p-load b#0                                                        (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
    concat                                                            (洧도) a#0,b#0 | tmp%0#0
    len                                                               (洧도) a#0,b#0 | tmp%1#0
    assert                                                            (洧도) a#0,b#0 |
    retsub


