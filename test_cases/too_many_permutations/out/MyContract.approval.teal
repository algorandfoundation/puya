#pragma version 10
#pragma typetrack false

// test_cases.too_many_permutations.contract.MyContract.approval_program() -> uint64:
main:
    // too_many_permutations/contract.py:6
    // a = op.Txn.application_args(0)
    txna ApplicationArgs 0
    // too_many_permutations/contract.py:7
    // b = op.Txn.application_args(1)
    txna ApplicationArgs 1
    // too_many_permutations/contract.py:8
    // c = op.Txn.application_args(2)
    txna ApplicationArgs 2
    // too_many_permutations/contract.py:9
    // d = op.Txn.application_args(3)
    txna ApplicationArgs 3
    // too_many_permutations/contract.py:6
    // a = op.Txn.application_args(0)
    txna ApplicationArgs 0
    // too_many_permutations/contract.py:8
    // c = op.Txn.application_args(2)
    txna ApplicationArgs 2
    // too_many_permutations/contract.py:11
    // assert (a != c) or (b != d)
    !=
    bnz bool_true@2
    dig 2
    dig 1
    !=
    bz bool_false@3

bool_true@2:
    pushint 1 // 1

bool_merge@4:
    // too_many_permutations/contract.py:11
    // assert (a != c) or (b != d)
    assert
    // too_many_permutations/contract.py:24
    // return (a + b + c + d).length > 0
    dig 3
    dig 3
    concat
    dup
    dig 3
    dup
    cover 3
    concat
    dig 3
    dup
    cover 3
    concat
    len
    // too_many_permutations/contract.py:12
    // assert four_args(a, b, c, d)
    assert
    // too_many_permutations/contract.py:29
    // assert a + b
    len
    assert
    concat
    len
    // too_many_permutations/contract.py:16
    // return True
    return

bool_false@3:
    pushint 0 // 0
    b bool_merge@4
