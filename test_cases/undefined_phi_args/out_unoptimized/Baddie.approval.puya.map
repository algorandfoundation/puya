{
  "version": 3,
  "sources": [
    "../baddie.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAKoB;;;AAER;;AAAsB;AAAtB;AAAA;;;AAAoC;;;AAAR;AAAsC;AAAtC;AAA5B;;;;AAGZ;;;AACe;AAAa;AAAb;AAAf;;;AAC2C;AAAM;AAA1B;;;AAAoC;AAApC;AAAP;AAC2B;AAAO;AAA3B;;;AAAoC;AAApC;AAAP;AAiBD;AAAP;AAhBS;AAAa;;AAAb;AAAjB;;;AAC4C;AAAM;AAA3B;;;AAAqC;AAArC;AAAP;AAC4B;AAAO;AAA5B;;;AAAqC;AAArC;AAAP;;;;AAE4B;AAAM;AAA3B;;;AAAqC;AAArC;AAAP;AAC4B;AAAO;AAA5B;;;AAAqC;AAArC;AAAP;;;;AAED;AAAa;AAAb;AAAf;;;AAC2C;AAAM;AAA1B;;;AAAmC;AAAnC;AAAP;AAC2B;AAAO;AAA3B;;;AAAqC;AAArC;AAAP;;;;AACC;AAAa;;AAAb;AAAjB;;;AAC4C;AAAM;AAA3B;;;AAAoC;AAApC;AAAP;AAC4B;AAAO;AAA5B;;;AAAsC;AAAtC;AAAP;;;;AAE4B;AAAM;AAA3B;;;AAAoC;AAApC;AAAP;AAC4B;AAAO;AAA5B;;;AAAsC;AAAtC;AAAP;;;;;;;;AAOhB;;;;;AAEA;;AAAA;;;AACY;;AAAJ;;AACR;;AAAA;;;AAIA;;AAAA;;;AACQ;;AAAQ;AAAJ;AAGR;AAAA;AAPQ;;AAMI;AAAJ;;;;;;;AAIZ;;;;AAEA;;AAAA;;;AACY;;;AAAJ;;AACR;;AAAA;;;AAIA;;AAAA;;;AACQ;;AAAQ;AAAJ;AAGR;AAAA;AAPQ;;;AAMI;AAAJ;;;;;;;AAIZ;;;;;AAEA;;AAAA;;;AACY;;AAAJ;;AACR;;AAAA;;;AAIA;;AAAA;;;AACY;;AAAA;AAAa;AAAb;AAGR;AAAA;AAPQ;;;AAMI;AAAJ;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.undefined_phi_args.baddie.Baddie.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 10 8"
    },
    "7": {
      "op": "bytecblock 0x0a 0x08 0x01 0x75696e74 0x6279746573"
    },
    "26": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0"
      ]
    },
    "29": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "test_case#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%0#0"
      ]
    },
    "31": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "test_case#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%0#0",
        "1"
      ]
    },
    "32": {
      "op": ">",
      "defined_out": [
        "test_case#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%1#0"
      ]
    },
    "33": {
      "op": "bz main_bool_false@3",
      "stack_out": [
        "test_case#0"
      ]
    },
    "36": {
      "block": "main_and_contd@1",
      "stack_in": [
        "test_case#0"
      ],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%2#0"
      ]
    },
    "39": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%3#0"
      ]
    },
    "40": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%3#0",
        "0"
      ]
    },
    "41": {
      "op": ">",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%4#0"
      ]
    },
    "42": {
      "op": "bz main_bool_false@3",
      "stack_out": [
        "test_case#0"
      ]
    },
    "45": {
      "block": "main_bool_true@2",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "test_case#0",
        "and_result%0#0"
      ]
    },
    "46": {
      "block": "main_bool_merge@4",
      "stack_in": [
        "test_case#0",
        "and_result%0#0"
      ],
      "op": "bz main_else_body@12",
      "defined_out": [],
      "stack_out": [
        "test_case#0"
      ]
    },
    "49": {
      "block": "main_if_body@5",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "50": {
      "op": "bytec_3 // 0x75696e74",
      "defined_out": [
        "0x75696e74",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x75696e74"
      ]
    },
    "51": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%5#0"
      ]
    },
    "52": {
      "op": "bz main_else_body@7",
      "stack_out": [
        "test_case#0"
      ]
    },
    "55": {
      "block": "main_if_body@6",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "56": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1",
        "0"
      ]
    },
    "57": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%6#0"
      ]
    },
    "60": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "tmp%6#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%6#0",
        "10"
      ]
    },
    "61": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%7#0"
      ]
    },
    "62": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "63": {
      "op": "intc_1 // 0",
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "64": {
      "op": "intc_0 // 1",
      "stack_out": [
        "test_case#0",
        "0",
        "1"
      ]
    },
    "65": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%8#0"
      ]
    },
    "68": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "tmp%8#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%8#0",
        "8"
      ]
    },
    "69": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%9#0"
      ]
    },
    "70": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "71": {
      "block": "main_after_if_else@19",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "72": {
      "op": "return",
      "stack_out": [
        "test_case#0"
      ]
    },
    "73": {
      "block": "main_else_body@7",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "74": {
      "op": "bytec 4 // 0x6279746573",
      "defined_out": [
        "0x6279746573",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x6279746573"
      ]
    },
    "76": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%10#0"
      ]
    },
    "77": {
      "op": "bz main_else_body@9",
      "stack_out": [
        "test_case#0"
      ]
    },
    "80": {
      "block": "main_if_body@8",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "81": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1",
        "0"
      ]
    },
    "82": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%11#0"
      ]
    },
    "85": {
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%11#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%11#0",
        "0x0a"
      ]
    },
    "86": {
      "op": "b==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%12#0"
      ]
    },
    "87": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "88": {
      "op": "intc_1 // 0",
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "89": {
      "op": "intc_0 // 1",
      "stack_out": [
        "test_case#0",
        "0",
        "1"
      ]
    },
    "90": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%13#0"
      ]
    },
    "93": {
      "op": "bytec_1 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%13#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%13#0",
        "0x08"
      ]
    },
    "94": {
      "op": "b==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%14#0"
      ]
    },
    "95": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "96": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "test_case#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "99": {
      "block": "main_else_body@9",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "100": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1",
        "0"
      ]
    },
    "101": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%15#0"
      ]
    },
    "104": {
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%15#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%15#0",
        "0x0a"
      ]
    },
    "105": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%16#0"
      ]
    },
    "106": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "107": {
      "op": "intc_1 // 0",
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "108": {
      "op": "intc_0 // 1",
      "stack_out": [
        "test_case#0",
        "0",
        "1"
      ]
    },
    "109": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%17#0"
      ]
    },
    "112": {
      "op": "bytec_1 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%17#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%17#0",
        "0x08"
      ]
    },
    "113": {
      "op": "b==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%18#0"
      ]
    },
    "114": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "115": {
      "op": "b main_after_if_else@10"
    },
    "118": {
      "block": "main_else_body@12",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "119": {
      "op": "bytec_3 // 0x75696e74",
      "defined_out": [
        "0x75696e74",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x75696e74"
      ]
    },
    "120": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%19#0"
      ]
    },
    "121": {
      "op": "bz main_else_body@14",
      "stack_out": [
        "test_case#0"
      ]
    },
    "124": {
      "block": "main_if_body@13",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "125": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "1",
        "1"
      ]
    },
    "126": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%20#0"
      ]
    },
    "129": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "tmp%20#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%20#0",
        "8"
      ]
    },
    "130": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%21#0"
      ]
    },
    "131": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "132": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "133": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "0",
        "0"
      ]
    },
    "134": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%22#0"
      ]
    },
    "137": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "tmp%22#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%22#0",
        "10"
      ]
    },
    "138": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%23#0"
      ]
    },
    "139": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "140": {
      "block": "main_after_if_else@18",
      "stack_in": [
        "test_case#0"
      ],
      "op": "b main_after_if_else@19"
    },
    "143": {
      "block": "main_else_body@14",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "144": {
      "op": "bytec 4 // 0x6279746573",
      "defined_out": [
        "0x6279746573",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x6279746573"
      ]
    },
    "146": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%24#0"
      ]
    },
    "147": {
      "op": "bz main_else_body@16",
      "stack_out": [
        "test_case#0"
      ]
    },
    "150": {
      "block": "main_if_body@15",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "151": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "1",
        "1"
      ]
    },
    "152": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%25#0"
      ]
    },
    "155": {
      "op": "bytec_1 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%25#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%25#0",
        "0x08"
      ]
    },
    "156": {
      "op": "b==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%26#0"
      ]
    },
    "157": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "158": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "159": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "0",
        "0"
      ]
    },
    "160": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%27#0"
      ]
    },
    "163": {
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%27#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%27#0",
        "0x0a"
      ]
    },
    "164": {
      "op": "b==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%28#0"
      ]
    },
    "165": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "166": {
      "block": "main_after_if_else@17",
      "stack_in": [
        "test_case#0"
      ],
      "op": "b main_after_if_else@18"
    },
    "169": {
      "block": "main_else_body@16",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "170": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "1",
        "1"
      ]
    },
    "171": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%29#0"
      ]
    },
    "174": {
      "op": "bytec_1 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%29#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%29#0",
        "0x08"
      ]
    },
    "175": {
      "op": "b==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%30#0"
      ]
    },
    "176": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "177": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "178": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "0",
        "0"
      ]
    },
    "179": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%31#0"
      ]
    },
    "182": {
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%31#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%31#0",
        "0x0a"
      ]
    },
    "183": {
      "op": "b==",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%32#0"
      ]
    },
    "184": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "185": {
      "op": "b main_after_if_else@17"
    },
    "188": {
      "block": "main_bool_false@3",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "test_case#0",
        "and_result%0#0"
      ]
    },
    "189": {
      "op": "b main_bool_merge@4"
    },
    "192": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_uint_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "195": {
      "block": "test_uint_undefined_block@0",
      "stack_in": [],
      "op": "pushbytes \"\"",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "197": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "199": {
      "op": "bz test_uint_undefined_after_if_else@2",
      "stack_out": [
        "a#0"
      ]
    },
    "202": {
      "block": "test_uint_undefined_if_body@1",
      "stack_in": [
        "a#0"
      ],
      "op": "pushint 7 // 7",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0"
      ]
    },
    "204": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "206": {
      "block": "test_uint_undefined_after_if_else@2",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "208": {
      "op": "bz test_uint_undefined_else_body@4",
      "stack_out": [
        "a#0"
      ]
    },
    "211": {
      "block": "test_uint_undefined_after_if_else@5",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "y#0 (copy)"
      ]
    },
    "213": {
      "op": "bz test_uint_undefined_else_body@7",
      "stack_out": [
        "a#0"
      ]
    },
    "216": {
      "block": "test_uint_undefined_if_body@6",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0"
      ]
    },
    "218": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0",
        "1"
      ]
    },
    "219": {
      "op": "+",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "220": {
      "block": "test_uint_undefined_after_if_else@8",
      "stack_in": [
        "a#0",
        "c#0"
      ],
      "op": "swap",
      "defined_out": [
        "c#0"
      ]
    },
    "221": {
      "retsub": true,
      "op": "retsub"
    },
    "222": {
      "block": "test_uint_undefined_else_body@7",
      "stack_in": [
        "a#0"
      ],
      "op": "pushint 11 // 11",
      "defined_out": [
        "11"
      ],
      "stack_out": [
        "a#0",
        "11"
      ]
    },
    "224": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "11"
      ],
      "stack_out": [
        "a#0",
        "11",
        "1"
      ]
    },
    "225": {
      "op": "-",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "226": {
      "op": "b test_uint_undefined_after_if_else@8"
    },
    "229": {
      "block": "test_uint_undefined_else_body@4",
      "stack_in": [
        "a#0"
      ],
      "op": "b test_uint_undefined_after_if_else@5"
    },
    "232": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_bytes_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "235": {
      "block": "test_bytes_undefined_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "236": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "238": {
      "op": "bz test_bytes_undefined_after_if_else@2",
      "stack_out": [
        "a#0"
      ]
    },
    "241": {
      "block": "test_bytes_undefined_if_body@1",
      "stack_in": [
        "a#0"
      ],
      "op": "pushbytes 0x07",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0"
      ]
    },
    "244": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "246": {
      "block": "test_bytes_undefined_after_if_else@2",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "248": {
      "op": "bz test_bytes_undefined_else_body@4",
      "stack_out": [
        "a#0"
      ]
    },
    "251": {
      "block": "test_bytes_undefined_after_if_else@5",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "y#0 (copy)"
      ]
    },
    "253": {
      "op": "bz test_bytes_undefined_else_body@7",
      "stack_out": [
        "a#0"
      ]
    },
    "256": {
      "block": "test_bytes_undefined_if_body@6",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0"
      ]
    },
    "258": {
      "op": "bytec_2 // 0x01",
      "defined_out": [
        "0x01",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0",
        "0x01"
      ]
    },
    "259": {
      "op": "b+",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "260": {
      "block": "test_bytes_undefined_after_if_else@8",
      "stack_in": [
        "a#0",
        "c#0"
      ],
      "op": "swap",
      "defined_out": [
        "c#0"
      ]
    },
    "261": {
      "retsub": true,
      "op": "retsub"
    },
    "262": {
      "block": "test_bytes_undefined_else_body@7",
      "stack_in": [
        "a#0"
      ],
      "op": "pushbytes 0x0b",
      "defined_out": [
        "0x0b"
      ],
      "stack_out": [
        "a#0",
        "0x0b"
      ]
    },
    "265": {
      "op": "bytec_2 // 0x01",
      "defined_out": [
        "0x01",
        "0x0b"
      ],
      "stack_out": [
        "a#0",
        "0x0b",
        "0x01"
      ]
    },
    "266": {
      "op": "b-",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "267": {
      "op": "b test_bytes_undefined_after_if_else@8"
    },
    "270": {
      "block": "test_bytes_undefined_else_body@4",
      "stack_in": [
        "a#0"
      ],
      "op": "b test_bytes_undefined_after_if_else@5"
    },
    "273": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_mixed_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "276": {
      "block": "test_mixed_undefined_block@0",
      "stack_in": [],
      "op": "pushbytes \"\"",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "278": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "280": {
      "op": "bz test_mixed_undefined_after_if_else@2",
      "stack_out": [
        "a#0"
      ]
    },
    "283": {
      "block": "test_mixed_undefined_if_body@1",
      "stack_in": [
        "a#0"
      ],
      "op": "pushint 7 // 7",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0"
      ]
    },
    "285": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "287": {
      "block": "test_mixed_undefined_after_if_else@2",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "289": {
      "op": "bz test_mixed_undefined_else_body@4",
      "stack_out": [
        "a#0"
      ]
    },
    "292": {
      "block": "test_mixed_undefined_after_if_else@5",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "y#0 (copy)"
      ]
    },
    "294": {
      "op": "bz test_mixed_undefined_else_body@7",
      "stack_out": [
        "a#0"
      ]
    },
    "297": {
      "block": "test_mixed_undefined_if_body@6",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "a#0"
      ]
    },
    "299": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%0#0"
      ]
    },
    "300": {
      "op": "bytec_2 // 0x01",
      "defined_out": [
        "0x01",
        "a#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%0#0",
        "0x01"
      ]
    },
    "301": {
      "op": "b+",
      "defined_out": [
        "a#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "302": {
      "block": "test_mixed_undefined_after_if_else@8",
      "stack_in": [
        "a#0",
        "c#0"
      ],
      "op": "swap",
      "defined_out": [
        "c#0"
      ]
    },
    "303": {
      "retsub": true,
      "op": "retsub"
    },
    "304": {
      "block": "test_mixed_undefined_else_body@7",
      "stack_in": [
        "a#0"
      ],
      "op": "pushbytes 0x0b",
      "defined_out": [
        "0x0b"
      ],
      "stack_out": [
        "a#0",
        "0x0b"
      ]
    },
    "307": {
      "op": "bytec_2 // 0x01",
      "defined_out": [
        "0x01",
        "0x0b"
      ],
      "stack_out": [
        "a#0",
        "0x0b",
        "0x01"
      ]
    },
    "308": {
      "op": "b-",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "309": {
      "op": "b test_mixed_undefined_after_if_else@8"
    },
    "312": {
      "block": "test_mixed_undefined_else_body@4",
      "stack_in": [
        "a#0"
      ],
      "op": "b test_mixed_undefined_after_if_else@5"
    }
  }
}