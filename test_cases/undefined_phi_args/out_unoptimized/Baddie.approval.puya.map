{
  "version": 3,
  "sources": [
    "../baddie.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKoB;;;AAER;;AAAsB;AAAtB;AAAA;;;AAAA;;;AAAoC;;;AAAR;AAAsC;AAAtC;AAA5B;;;AAAA;;;;;;;;;AADJ;;AAIR;;;AAAA;;;AACe;AAAa;;AAAb;AAAf;;;AAAA;;;AAC2C;AAAM;AAA1B;;;AAAoC;AAApC;AAAP;AAC2B;AAAO;AAA3B;;;AAAoC;AAApC;AAAP;;;;;;;AAiBD;AAAP;AAhBS;AAAa;;AAAb;AAAjB;;;AAAA;;;AAC4C;AAAM;AAA3B;;;AAAqC;AAArC;AAAP;AAC4B;AAAO;AAA5B;;;AAAqC;AAArC;AAAP;;;;;;;AAE4B;AAAM;AAA3B;;;AAAqC;AAArC;AAAP;AAC4B;AAAO;AAA5B;;;AAAqC;AAArC;AAAP;;;;AAED;AAAa;;AAAb;AAAf;;;AAAA;;;AAC2C;AAAM;AAA1B;;;AAAmC;AAAnC;AAAP;AAC2B;AAAO;AAA3B;;;AAAqC;AAArC;AAAP;;;;;;;AACC;AAAa;;AAAb;AAAjB;;;AAAA;;;AAC4C;AAAM;AAA3B;;;AAAoC;AAApC;AAAP;AAC4B;AAAO;AAA5B;;;AAAsC;AAAtC;AAAP;;;;;;;AAE4B;AAAM;AAA3B;;;AAAoC;AAApC;AAAP;AAC4B;AAAO;AAA5B;;;AAAsC;AAAtC;AAAP;;;;;;;;;;AAOhB;;;;;;;;AAEA;;AAAA;;;AAAA;;;AACY;;AAAJ;;;;;AACR;;AAAA;;;AAAA;;;;;;AAIA;;AAAA;;;AAAA;;;AACY;;AAAI;AAAJ;AAAJ;;;;;AAGJ;AAPQ;;AAMI;AAAJ;AAAJ;;;;;;;;AAIR;;;;;;;;AAEA;;AAAA;;;AAAA;;;AACY;;;AAAJ;;;;;AACR;;AAAA;;;AAAA;;;;;;AAIA;;AAAA;;;AAAA;;;AACY;;AAAI;AAAJ;AAAJ;;;;;AAGJ;AAPQ;;;AAMI;AAAJ;AAAJ;;;;;;;;AAIR;;;;;;;;AAEA;;AAAA;;;AAAA;;;AACY;;AAAJ;;;;;AACR;;AAAA;;;AAAA;;;;;;AAIA;;AAAA;;;AAAA;;;AACY;;AAAA;AAAa;AAAb;AAAJ;;;;;AAGJ;AAPQ;;;AAMI;AAAJ;AAAJ;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.undefined_phi_args.baddie.Baddie.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 10 8"
    },
    "7": {
      "op": "bytecblock \"\" 0x0a 0x08 0x01 0x75696e74 0x6279746573"
    },
    "27": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "28": {
      "op": "b block@0"
    },
    "31": {
      "block": "block@0",
      "stack_in": [
        "and_result%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "34": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%1#0"
      ]
    },
    "36": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%1#0",
        "1"
      ]
    },
    "37": {
      "op": ">",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%2#0"
      ]
    },
    "38": {
      "op": "bz bool_false@3",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "41": {
      "op": "b and_contd@1"
    },
    "44": {
      "block": "and_contd@1",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%3#0"
      ]
    },
    "47": {
      "op": "btoi",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%4#0"
      ]
    },
    "48": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%4#0",
        "0"
      ]
    },
    "49": {
      "op": ">",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%5#0"
      ]
    },
    "50": {
      "op": "bz bool_false@3",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "53": {
      "op": "b bool_true@2"
    },
    "56": {
      "block": "bool_true@2",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "57": {
      "op": "bury 2",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "59": {
      "op": "b bool_merge@4"
    },
    "62": {
      "block": "bool_merge@4",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "and_result%0#0",
        "invert_second_condition#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "invert_second_condition#0"
      ]
    },
    "64": {
      "op": "bz else_body@12",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "67": {
      "op": "b if_body@5"
    },
    "70": {
      "block": "if_body@5",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0"
      ]
    },
    "71": {
      "op": "bytec 4 // 0x75696e74",
      "defined_out": [
        "0x75696e74",
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0",
        "0x75696e74"
      ]
    },
    "73": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%6#0"
      ]
    },
    "74": {
      "op": "bz else_body@7",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "77": {
      "op": "b if_body@6"
    },
    "80": {
      "block": "if_body@6",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "81": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1",
        "0"
      ]
    },
    "82": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%7#0"
      ]
    },
    "85": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "tmp%7#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%7#0",
        "10"
      ]
    },
    "86": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%8#0"
      ]
    },
    "87": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "88": {
      "op": "intc_1 // 0",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "89": {
      "op": "intc_0 // 1",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0",
        "1"
      ]
    },
    "90": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%9#0"
      ]
    },
    "93": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "tmp%9#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%9#0",
        "8"
      ]
    },
    "94": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%10#0"
      ]
    },
    "95": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "96": {
      "op": "b after_if_else@11"
    },
    "99": {
      "block": "after_if_else@11",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "b after_if_else@19"
    },
    "102": {
      "block": "after_if_else@19",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "103": {
      "op": "return",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "104": {
      "block": "else_body@7",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0"
      ]
    },
    "105": {
      "op": "bytec 5 // 0x6279746573",
      "defined_out": [
        "0x6279746573",
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0",
        "0x6279746573"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%11#0"
      ]
    },
    "108": {
      "op": "bz else_body@9",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "111": {
      "op": "b if_body@8"
    },
    "114": {
      "block": "if_body@8",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "115": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1",
        "0"
      ]
    },
    "116": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%12#0"
      ]
    },
    "119": {
      "op": "bytec_1 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%12#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%12#0",
        "0x0a"
      ]
    },
    "120": {
      "op": "b==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%13#0"
      ]
    },
    "121": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "122": {
      "op": "intc_1 // 0",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "123": {
      "op": "intc_0 // 1",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0",
        "1"
      ]
    },
    "124": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%14#0"
      ]
    },
    "127": {
      "op": "bytec_2 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%14#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%14#0",
        "0x08"
      ]
    },
    "128": {
      "op": "b==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%15#0"
      ]
    },
    "129": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "130": {
      "op": "b after_if_else@10"
    },
    "133": {
      "block": "after_if_else@10",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "b after_if_else@11"
    },
    "136": {
      "block": "else_body@9",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "137": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1",
        "0"
      ]
    },
    "138": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%16#0"
      ]
    },
    "141": {
      "op": "bytec_1 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%16#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%16#0",
        "0x0a"
      ]
    },
    "142": {
      "op": "b==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%17#0"
      ]
    },
    "143": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "144": {
      "op": "intc_1 // 0",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "145": {
      "op": "intc_0 // 1",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0",
        "1"
      ]
    },
    "146": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%18#0"
      ]
    },
    "149": {
      "op": "bytec_2 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%18#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%18#0",
        "0x08"
      ]
    },
    "150": {
      "op": "b==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%19#0"
      ]
    },
    "151": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "152": {
      "op": "b after_if_else@10"
    },
    "155": {
      "block": "else_body@12",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0"
      ]
    },
    "156": {
      "op": "bytec 4 // 0x75696e74",
      "defined_out": [
        "0x75696e74",
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0",
        "0x75696e74"
      ]
    },
    "158": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%20#0"
      ]
    },
    "159": {
      "op": "bz else_body@14",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "162": {
      "op": "b if_body@13"
    },
    "165": {
      "block": "if_body@13",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "166": {
      "op": "intc_0 // 1",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1",
        "1"
      ]
    },
    "167": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%21#0"
      ]
    },
    "170": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "tmp%21#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%21#0",
        "8"
      ]
    },
    "171": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%22#0"
      ]
    },
    "172": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "173": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "174": {
      "op": "intc_1 // 0",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0",
        "0"
      ]
    },
    "175": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%23#0"
      ]
    },
    "178": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "tmp%23#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%23#0",
        "10"
      ]
    },
    "179": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%24#0"
      ]
    },
    "180": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "181": {
      "op": "b after_if_else@18"
    },
    "184": {
      "block": "after_if_else@18",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "b after_if_else@19"
    },
    "187": {
      "block": "else_body@14",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0"
      ]
    },
    "188": {
      "op": "bytec 5 // 0x6279746573",
      "defined_out": [
        "0x6279746573",
        "test_case#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "test_case#0",
        "0x6279746573"
      ]
    },
    "190": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%25#0"
      ]
    },
    "191": {
      "op": "bz else_body@16",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "194": {
      "op": "b if_body@15"
    },
    "197": {
      "block": "if_body@15",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "198": {
      "op": "intc_0 // 1",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1",
        "1"
      ]
    },
    "199": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%26#0"
      ]
    },
    "202": {
      "op": "bytec_2 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%26#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%26#0",
        "0x08"
      ]
    },
    "203": {
      "op": "b==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%27#0"
      ]
    },
    "204": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "205": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "206": {
      "op": "intc_1 // 0",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0",
        "0"
      ]
    },
    "207": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%28#0"
      ]
    },
    "210": {
      "op": "bytec_1 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%28#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%28#0",
        "0x0a"
      ]
    },
    "211": {
      "op": "b==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%29#0"
      ]
    },
    "212": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "213": {
      "op": "b after_if_else@17"
    },
    "216": {
      "block": "after_if_else@17",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "b after_if_else@18"
    },
    "219": {
      "block": "else_body@16",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1"
      ]
    },
    "220": {
      "op": "intc_0 // 1",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "1",
        "1"
      ]
    },
    "221": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%30#0"
      ]
    },
    "224": {
      "op": "bytec_2 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%30#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%30#0",
        "0x08"
      ]
    },
    "225": {
      "op": "b==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%31#0"
      ]
    },
    "226": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "227": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "228": {
      "op": "intc_1 // 0",
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0",
        "0"
      ]
    },
    "229": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%32#0"
      ]
    },
    "232": {
      "op": "bytec_1 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%32#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%32#0",
        "0x0a"
      ]
    },
    "233": {
      "op": "b==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "tmp%33#0"
      ]
    },
    "234": {
      "op": "assert",
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "235": {
      "op": "b after_if_else@17"
    },
    "238": {
      "block": "bool_false@3",
      "stack_in": [
        "and_result%0#0",
        "test_case#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "test_case#0",
        "0"
      ]
    },
    "239": {
      "op": "bury 2",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "test_case#0"
      ]
    },
    "241": {
      "op": "b bool_merge@4"
    },
    "244": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_uint_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "247": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "c#0"
      ]
    },
    "248": {
      "op": "b test_uint_undefined_block@0"
    },
    "251": {
      "block": "test_uint_undefined_block@0",
      "stack_in": [
        "c#0"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "252": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "254": {
      "op": "bz test_uint_undefined_after_if_else@2",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "257": {
      "op": "b test_uint_undefined_if_body@1"
    },
    "260": {
      "block": "test_uint_undefined_if_body@1",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "pushint 7 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "7"
      ]
    },
    "262": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "264": {
      "op": "b test_uint_undefined_after_if_else@2"
    },
    "267": {
      "block": "test_uint_undefined_after_if_else@2",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "269": {
      "op": "bz test_uint_undefined_else_body@4",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "272": {
      "op": "b test_uint_undefined_if_body@3"
    },
    "275": {
      "block": "test_uint_undefined_if_body@3",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "b test_uint_undefined_after_if_else@5"
    },
    "278": {
      "block": "test_uint_undefined_after_if_else@5",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "y#0 (copy)"
      ]
    },
    "280": {
      "op": "bz test_uint_undefined_else_body@7",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "283": {
      "op": "b test_uint_undefined_if_body@6"
    },
    "286": {
      "block": "test_uint_undefined_if_body@6",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "288": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "a#0",
        "1"
      ]
    },
    "289": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%0#0"
      ]
    },
    "290": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "292": {
      "op": "b test_uint_undefined_after_if_else@8"
    },
    "295": {
      "block": "test_uint_undefined_after_if_else@8",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "296": {
      "block": "test_uint_undefined_else_body@7",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "pushint 11 // 11",
      "defined_out": [
        "11"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "11"
      ]
    },
    "298": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "11"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "11",
        "1"
      ]
    },
    "299": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%1#0"
      ]
    },
    "300": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "302": {
      "op": "b test_uint_undefined_after_if_else@8"
    },
    "305": {
      "block": "test_uint_undefined_else_body@4",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "b test_uint_undefined_after_if_else@5"
    },
    "308": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_bytes_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "311": {
      "op": "intc_1 // 0",
      "stack_out": [
        "c#0"
      ]
    },
    "312": {
      "op": "b test_bytes_undefined_block@0"
    },
    "315": {
      "block": "test_bytes_undefined_block@0",
      "stack_in": [
        "c#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "316": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "318": {
      "op": "bz test_bytes_undefined_after_if_else@2",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "321": {
      "op": "b test_bytes_undefined_if_body@1"
    },
    "324": {
      "block": "test_bytes_undefined_if_body@1",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "pushbytes 0x07",
      "defined_out": [
        "0x07"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "0x07"
      ]
    },
    "327": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "329": {
      "op": "b test_bytes_undefined_after_if_else@2"
    },
    "332": {
      "block": "test_bytes_undefined_after_if_else@2",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "334": {
      "op": "bz test_bytes_undefined_else_body@4",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "337": {
      "op": "b test_bytes_undefined_if_body@3"
    },
    "340": {
      "block": "test_bytes_undefined_if_body@3",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "b test_bytes_undefined_after_if_else@5"
    },
    "343": {
      "block": "test_bytes_undefined_after_if_else@5",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "y#0 (copy)"
      ]
    },
    "345": {
      "op": "bz test_bytes_undefined_else_body@7",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "348": {
      "op": "b test_bytes_undefined_if_body@6"
    },
    "351": {
      "block": "test_bytes_undefined_if_body@6",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "353": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "a#0",
        "0x01"
      ]
    },
    "354": {
      "op": "b+",
      "defined_out": [
        "a#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%0#0"
      ]
    },
    "355": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "357": {
      "op": "b test_bytes_undefined_after_if_else@8"
    },
    "360": {
      "block": "test_bytes_undefined_after_if_else@8",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "361": {
      "block": "test_bytes_undefined_else_body@7",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "pushbytes 0x0b",
      "defined_out": [
        "0x0b"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "0x0b"
      ]
    },
    "364": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "0x0b"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "0x0b",
        "0x01"
      ]
    },
    "365": {
      "op": "b-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%1#0"
      ]
    },
    "366": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "368": {
      "op": "b test_bytes_undefined_after_if_else@8"
    },
    "371": {
      "block": "test_bytes_undefined_else_body@4",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "b test_bytes_undefined_after_if_else@5"
    },
    "374": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_mixed_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "377": {
      "op": "intc_1 // 0",
      "stack_out": [
        "c#0"
      ]
    },
    "378": {
      "op": "b test_mixed_undefined_block@0"
    },
    "381": {
      "block": "test_mixed_undefined_block@0",
      "stack_in": [
        "c#0"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "382": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "384": {
      "op": "bz test_mixed_undefined_after_if_else@2",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "387": {
      "op": "b test_mixed_undefined_if_body@1"
    },
    "390": {
      "block": "test_mixed_undefined_if_body@1",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "pushint 7 // 7",
      "defined_out": [
        "7"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "7"
      ]
    },
    "392": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "394": {
      "op": "b test_mixed_undefined_after_if_else@2"
    },
    "397": {
      "block": "test_mixed_undefined_after_if_else@2",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "x#0 (copy)"
      ]
    },
    "399": {
      "op": "bz test_mixed_undefined_else_body@4",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "402": {
      "op": "b test_mixed_undefined_if_body@3"
    },
    "405": {
      "block": "test_mixed_undefined_if_body@3",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "b test_mixed_undefined_after_if_else@5"
    },
    "408": {
      "block": "test_mixed_undefined_after_if_else@5",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "y#0 (copy)"
      ]
    },
    "410": {
      "op": "bz test_mixed_undefined_else_body@7",
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "413": {
      "op": "b test_mixed_undefined_if_body@6"
    },
    "416": {
      "block": "test_mixed_undefined_if_body@6",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "a#0"
      ]
    },
    "418": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%0#0"
      ]
    },
    "419": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "a#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%0#0",
        "0x01"
      ]
    },
    "420": {
      "op": "b+",
      "defined_out": [
        "a#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%1#0"
      ]
    },
    "421": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "423": {
      "op": "b test_mixed_undefined_after_if_else@8"
    },
    "426": {
      "block": "test_mixed_undefined_after_if_else@8",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "c#0"
      ]
    },
    "427": {
      "block": "test_mixed_undefined_else_body@7",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "pushbytes 0x0b",
      "defined_out": [
        "0x0b"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "0x0b"
      ]
    },
    "430": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "0x0b"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "0x0b",
        "0x01"
      ]
    },
    "431": {
      "op": "b-",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "c#0",
        "a#0",
        "tmp%2#0"
      ]
    },
    "432": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "a#0"
      ]
    },
    "434": {
      "op": "b test_mixed_undefined_after_if_else@8"
    },
    "437": {
      "block": "test_mixed_undefined_else_body@4",
      "stack_in": [
        "c#0",
        "a#0"
      ],
      "op": "b test_mixed_undefined_after_if_else@5"
    }
  }
}