{
  "version": 3,
  "sources": [
    "../baddie.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAKoB;;;AAER;;AAAsB;AAAtB;AAAA;;;AAAoC;;;AAAR;AAA5B;;;;AAGZ;;;AACe;AAAa;AAAb;AAAf;;;AAC2C;AAAM;AAA1B;;;AAAoC;AAApC;AAAP;AAC2B;AAAO;AAA3B;;;AAAoC;AAApC;AAAP;AAiBD;AAAP;AAhBS;AAAa;AAAb;AAAjB;;;AAC4C;AAAM;AAA3B;;;AAAqC;AAArC;AAAP;AAC4B;AAAO;AAA5B;;;AAAqC;AAArC;AAAP;;;;AAE4B;AAAM;AAA3B;;;AAAqC;AAArC;AAAP;AAC4B;AAAO;AAA5B;;;AAAqC;AAArC;AAAP;;;;AAED;AAAa;AAAb;AAAf;;;AAC2C;AAAM;AAA1B;;;AAAmC;AAAnC;AAAP;AAC2B;AAAO;AAA3B;;;AAAqC;AAArC;AAAP;;;;AACC;AAAa;AAAb;AAAjB;;;AAC4C;AAAM;AAA3B;;;AAAoC;AAApC;AAAP;AAC4B;AAAO;AAA5B;;;AAAsC;AAAtC;AAAP;;;;AAE4B;AAAM;AAA3B;;;AAAoC;AAApC;AAAP;AAC4B;AAAO;AAA5B;;;AAAsC;AAAtC;AAAP;;;;;;;;AAOhB;;;;;AAEA;;AAAA;;;AACY;;AAAJ;;AAKR;;AAAA;;;AACQ;;AAAQ;AAAJ;AAGR;AAAA;AADQ;;;;AAIZ;;;;AAEA;;AAAA;;;AACY;;;AAAJ;;AAKR;;AAAA;;;AACQ;;AAAQ;;;AAAJ;AAGR;AAAA;AADQ;;;;AAIZ;;;;;AAEA;;AAAA;;;AACY;;AAAJ;;AAKR;;AAAA;;;AACY;;AAAA;AAAa;;;AAAb;AAGR;AAAA;AADQ;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.undefined_phi_args.baddie.Baddie.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 10 8"
    },
    "7": {
      "op": "bytecblock 0x0a 0x08 0x75696e74 0x6279746573"
    },
    "24": {
      "op": "txna ApplicationArgs 0"
    },
    "27": {
      "op": "txn NumAppArgs"
    },
    "29": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "test_case#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%0#0",
        "1"
      ]
    },
    "30": {
      "op": ">",
      "defined_out": [
        "test_case#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%1#0"
      ]
    },
    "31": {
      "op": "bz main_bool_false@3",
      "stack_out": [
        "test_case#0"
      ]
    },
    "34": {
      "op": "txna ApplicationArgs 1"
    },
    "37": {
      "op": "btoi"
    },
    "38": {
      "op": "bz main_bool_false@3"
    },
    "41": {
      "op": "intc_0 // 1"
    },
    "42": {
      "block": "main_bool_merge@4",
      "stack_in": [
        "test_case#0",
        "invert_second_condition#0"
      ],
      "op": "bz main_else_body@12",
      "defined_out": [],
      "stack_out": [
        "test_case#0"
      ]
    },
    "45": {
      "op": "dup"
    },
    "46": {
      "op": "bytec_2 // 0x75696e74"
    },
    "47": {
      "op": "=="
    },
    "48": {
      "op": "bz main_else_body@7"
    },
    "51": {
      "op": "intc_0 // 1"
    },
    "52": {
      "op": "intc_1 // 0"
    },
    "53": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined"
    },
    "56": {
      "op": "intc_2 // 10"
    },
    "57": {
      "op": "=="
    },
    "58": {
      "op": "assert"
    },
    "59": {
      "op": "intc_1 // 0"
    },
    "60": {
      "op": "intc_0 // 1"
    },
    "61": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined"
    },
    "64": {
      "op": "intc_3 // 8"
    },
    "65": {
      "op": "=="
    },
    "66": {
      "op": "assert"
    },
    "67": {
      "block": "main_after_if_else@19",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "68": {
      "op": "return",
      "stack_out": [
        "test_case#0"
      ]
    },
    "69": {
      "block": "main_else_body@7",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "70": {
      "op": "bytec_3 // 0x6279746573",
      "defined_out": [
        "0x6279746573",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x6279746573"
      ]
    },
    "71": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%10#0"
      ]
    },
    "72": {
      "op": "bz main_else_body@9",
      "stack_out": [
        "test_case#0"
      ]
    },
    "75": {
      "op": "intc_0 // 1"
    },
    "76": {
      "op": "intc_1 // 0"
    },
    "77": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined"
    },
    "80": {
      "op": "bytec_0 // 0x0a"
    },
    "81": {
      "op": "b=="
    },
    "82": {
      "op": "assert"
    },
    "83": {
      "op": "intc_1 // 0"
    },
    "84": {
      "op": "intc_0 // 1"
    },
    "85": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined"
    },
    "88": {
      "op": "bytec_1 // 0x08"
    },
    "89": {
      "op": "b=="
    },
    "90": {
      "op": "assert"
    },
    "91": {
      "op": "b main_after_if_else@19"
    },
    "94": {
      "block": "main_else_body@9",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "95": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1",
        "0"
      ]
    },
    "96": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%15#0"
      ]
    },
    "99": {
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%15#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%15#0",
        "0x0a"
      ]
    },
    "100": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%16#0"
      ]
    },
    "101": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "102": {
      "op": "intc_1 // 0",
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "103": {
      "op": "intc_0 // 1",
      "stack_out": [
        "test_case#0",
        "0",
        "1"
      ]
    },
    "104": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%17#0"
      ]
    },
    "107": {
      "op": "bytec_1 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%17#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%17#0",
        "0x08"
      ]
    },
    "108": {
      "op": "b==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%18#0"
      ]
    },
    "109": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "110": {
      "op": "b main_after_if_else@19"
    },
    "113": {
      "block": "main_else_body@12",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "114": {
      "op": "bytec_2 // 0x75696e74",
      "defined_out": [
        "0x75696e74",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x75696e74"
      ]
    },
    "115": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%19#0"
      ]
    },
    "116": {
      "op": "bz main_else_body@14",
      "stack_out": [
        "test_case#0"
      ]
    },
    "119": {
      "op": "intc_0 // 1"
    },
    "120": {
      "op": "dup"
    },
    "121": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined"
    },
    "124": {
      "op": "intc_3 // 8"
    },
    "125": {
      "op": "=="
    },
    "126": {
      "op": "assert"
    },
    "127": {
      "op": "intc_1 // 0"
    },
    "128": {
      "op": "dup"
    },
    "129": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "op": "callsub test_uint_undefined"
    },
    "132": {
      "op": "intc_2 // 10"
    },
    "133": {
      "op": "=="
    },
    "134": {
      "op": "assert"
    },
    "135": {
      "op": "b main_after_if_else@19"
    },
    "138": {
      "block": "main_else_body@14",
      "stack_in": [
        "test_case#0"
      ],
      "op": "dup",
      "defined_out": [
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0"
      ]
    },
    "139": {
      "op": "bytec_3 // 0x6279746573",
      "defined_out": [
        "0x6279746573",
        "test_case#0"
      ],
      "stack_out": [
        "test_case#0",
        "test_case#0",
        "0x6279746573"
      ]
    },
    "140": {
      "op": "==",
      "defined_out": [
        "test_case#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%24#0"
      ]
    },
    "141": {
      "op": "bz main_else_body@16",
      "stack_out": [
        "test_case#0"
      ]
    },
    "144": {
      "op": "intc_0 // 1"
    },
    "145": {
      "op": "dup"
    },
    "146": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined"
    },
    "149": {
      "op": "bytec_1 // 0x08"
    },
    "150": {
      "op": "b=="
    },
    "151": {
      "op": "assert"
    },
    "152": {
      "op": "intc_1 // 0"
    },
    "153": {
      "op": "dup"
    },
    "154": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "op": "callsub test_bytes_undefined"
    },
    "157": {
      "op": "bytec_0 // 0x0a"
    },
    "158": {
      "op": "b=="
    },
    "159": {
      "op": "assert"
    },
    "160": {
      "op": "b main_after_if_else@19"
    },
    "163": {
      "block": "main_else_body@16",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "test_case#0",
        "1"
      ]
    },
    "164": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "1",
        "1"
      ]
    },
    "165": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%29#0"
      ]
    },
    "168": {
      "op": "bytec_1 // 0x08",
      "defined_out": [
        "0x08",
        "tmp%29#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%29#0",
        "0x08"
      ]
    },
    "169": {
      "op": "b==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%30#0"
      ]
    },
    "170": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "171": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "test_case#0",
        "0"
      ]
    },
    "172": {
      "op": "dup",
      "stack_out": [
        "test_case#0",
        "0",
        "0"
      ]
    },
    "173": {
      "callsub": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "op": "callsub test_mixed_undefined",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%31#0"
      ]
    },
    "176": {
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%31#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%31#0",
        "0x0a"
      ]
    },
    "177": {
      "op": "b==",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "test_case#0",
        "tmp%32#0"
      ]
    },
    "178": {
      "op": "assert",
      "stack_out": [
        "test_case#0"
      ]
    },
    "179": {
      "op": "b main_after_if_else@19"
    },
    "182": {
      "block": "main_bool_false@3",
      "stack_in": [
        "test_case#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "invert_second_condition#0"
      ],
      "stack_out": [
        "test_case#0",
        "invert_second_condition#0"
      ]
    },
    "183": {
      "op": "b main_bool_merge@4"
    },
    "186": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_uint_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_uint_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "189": {
      "op": "pushbytes \"\""
    },
    "191": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "193": {
      "op": "bz test_uint_undefined_after_if_else@2",
      "stack_out": [
        "a#0"
      ]
    },
    "196": {
      "op": "pushint 7 // 7"
    },
    "198": {
      "op": "frame_bury 0"
    },
    "200": {
      "block": "test_uint_undefined_after_if_else@2",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "y#0 (copy)"
      ]
    },
    "202": {
      "op": "bz test_uint_undefined_else_body@7",
      "stack_out": [
        "a#0"
      ]
    },
    "205": {
      "op": "frame_dig 0"
    },
    "207": {
      "op": "intc_0 // 1"
    },
    "208": {
      "op": "+"
    },
    "209": {
      "block": "test_uint_undefined_after_if_else@8",
      "stack_in": [
        "a#0",
        "c#0"
      ],
      "op": "swap",
      "defined_out": [
        "c#0"
      ]
    },
    "210": {
      "retsub": true,
      "op": "retsub"
    },
    "211": {
      "block": "test_uint_undefined_else_body@7",
      "stack_in": [
        "a#0"
      ],
      "op": "intc_2 // 10",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "212": {
      "op": "b test_uint_undefined_after_if_else@8"
    },
    "215": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_bytes_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_bytes_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "218": {
      "op": "intc_1 // 0"
    },
    "219": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "221": {
      "op": "bz test_bytes_undefined_after_if_else@2",
      "stack_out": [
        "a#0"
      ]
    },
    "224": {
      "op": "pushbytes 0x07"
    },
    "227": {
      "op": "frame_bury 0"
    },
    "229": {
      "block": "test_bytes_undefined_after_if_else@2",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "y#0 (copy)"
      ]
    },
    "231": {
      "op": "bz test_bytes_undefined_else_body@7",
      "stack_out": [
        "a#0"
      ]
    },
    "234": {
      "op": "frame_dig 0"
    },
    "236": {
      "op": "pushbytes 0x01"
    },
    "239": {
      "op": "b+"
    },
    "240": {
      "block": "test_bytes_undefined_after_if_else@8",
      "stack_in": [
        "a#0",
        "c#0"
      ],
      "op": "swap",
      "defined_out": [
        "c#0"
      ]
    },
    "241": {
      "retsub": true,
      "op": "retsub"
    },
    "242": {
      "block": "test_bytes_undefined_else_body@7",
      "stack_in": [
        "a#0"
      ],
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "243": {
      "op": "b test_bytes_undefined_after_if_else@8"
    },
    "246": {
      "subroutine": "test_cases.undefined_phi_args.baddie.test_mixed_undefined",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64"
      },
      "block": "test_mixed_undefined",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "249": {
      "op": "pushbytes \"\""
    },
    "251": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "x#0 (copy)"
      ]
    },
    "253": {
      "op": "bz test_mixed_undefined_after_if_else@2",
      "stack_out": [
        "a#0"
      ]
    },
    "256": {
      "op": "pushint 7 // 7"
    },
    "258": {
      "op": "frame_bury 0"
    },
    "260": {
      "block": "test_mixed_undefined_after_if_else@2",
      "stack_in": [
        "a#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "y#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "y#0 (copy)"
      ]
    },
    "262": {
      "op": "bz test_mixed_undefined_else_body@7",
      "stack_out": [
        "a#0"
      ]
    },
    "265": {
      "op": "frame_dig 0"
    },
    "267": {
      "op": "itob"
    },
    "268": {
      "op": "pushbytes 0x01"
    },
    "271": {
      "op": "b+"
    },
    "272": {
      "block": "test_mixed_undefined_after_if_else@8",
      "stack_in": [
        "a#0",
        "c#0"
      ],
      "op": "swap",
      "defined_out": [
        "c#0"
      ]
    },
    "273": {
      "retsub": true,
      "op": "retsub"
    },
    "274": {
      "block": "test_mixed_undefined_else_body@7",
      "stack_in": [
        "a#0"
      ],
      "op": "bytec_0 // 0x0a",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "c#0"
      ]
    },
    "275": {
      "op": "b test_mixed_undefined_after_if_else@8"
    }
  }
}