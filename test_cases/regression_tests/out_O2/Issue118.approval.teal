#pragma version 10

test_cases.regression_tests.issue_118.Issue118.approval_program:
    intcblock 0 1
    bytecblock 0x0003 "\x00\x00"
    callsub __puya_arc4_router__
    return


// test_cases.regression_tests.issue_118.Issue118.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@5
    pushbytes 0xbc66eb62 // method "verify(uint256[])(bool,string)"
    txna ApplicationArgs 0
    match __puya_arc4_router___verify_route@2
    intc_0 // 0
    retsub

__puya_arc4_router___verify_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub verify
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___bare_routing@5:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@9
    txn ApplicationID
    !
    assert // is creating
    intc_1 // 1
    retsub

__puya_arc4_router___after_if_else@9:
    intc_0 // 0
    retsub


// test_cases.regression_tests.issue_118.Issue118.verify(values: bytes) -> bytes:
verify:
    proto 1 1
    pushbytes 0x00
    intc_0 // 0
    txn NumAppArgs
    setbit
    frame_dig -1
    intc_0 // 0
    extract_uint16
    pushint 2 // 2
    !=
    bz verify_after_if_else@2
    bytec_0 // 0x0003
    concat
    bytec_1 // "\x00\x00"
    concat
    retsub

verify_after_if_else@2:
    bytec_0 // 0x0003
    concat
    bytec_1 // "\x00\x00"
    concat
    retsub
