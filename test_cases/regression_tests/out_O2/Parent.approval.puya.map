{
  "version": 3,
  "sources": [
    "../issue_491.py"
  ],
  "mappings": ";;;;;;AAMQ;;;;;;;;;;;;;;;;AAAsB;;AAAtB;AAHR;;AAAA;;;AAAA;;AAAA;;;;;;;;;;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.regression_tests.issue_491.Parent.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "6": {
      "op": "pushbytes \"is_initialised\"",
      "defined_out": [
        "\"is_initialised\""
      ],
      "stack_out": [
        "\"is_initialised\""
      ]
    },
    "22": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "\"is_initialised\"",
        "0"
      ],
      "stack_out": [
        "\"is_initialised\"",
        "0"
      ]
    },
    "24": {
      "op": "app_global_put",
      "stack_out": []
    },
    "25": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "27": {
      "op": "bnz main_after_if_else@6",
      "stack_out": []
    },
    "30": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "32": {
      "op": "bnz main_after_if_else@6",
      "stack_out": []
    },
    "35": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "37": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "38": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "39": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "41": {
      "op": "return",
      "stack_out": []
    },
    "42": {
      "block": "main_after_if_else@6",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "44": {
      "op": "return",
      "stack_out": []
    }
  }
}