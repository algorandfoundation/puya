{
  "version": 3,
  "sources": [
    "../biguint_opt.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;AAaK;;AAAA;AAAA;AAAA;;AAAA;AAIwB;AAAT;AAJf;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;AAGkC;;AAA1B;;AACR;;;AAKiC;AAAT;AAAA;;AARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AADL;;AAAA;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock 0x010000000000000000 0x151f7c75"
    },
    "18": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "20": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%0#1"
      ]
    },
    "22": {
      "op": "bz main_bare_routing@7",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "25": {
      "op": "pushbytess 0x58db7ce9 0xc95c01ca // method \"get_abs_bound1(uint64)uint64\", method \"get_abs_bound2()uint64\"",
      "defined_out": [
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)"
      ],
      "stack_out": [
        "abs_bound#0",
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)"
      ]
    },
    "37": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)",
        "tmp%2#0"
      ]
    },
    "40": {
      "op": "match main_get_abs_bound1_route@3 main_get_abs_bound2_route@4",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "46": {
      "block": "main_after_if_else@11",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "err",
      "defined_out": []
    },
    "47": {
      "block": "main_get_abs_bound2_route@4",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%11#0"
      ]
    },
    "49": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%12#0"
      ]
    },
    "50": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "51": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%13#0"
      ]
    },
    "53": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "54": {
      "op": "bytec_0 // 0x010000000000000000",
      "defined_out": [
        "0x010000000000000000"
      ],
      "stack_out": [
        "abs_bound#0",
        "0x010000000000000000"
      ]
    },
    "55": {
      "op": "btoi",
      "defined_out": [
        "abs_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "abs_bound#0"
      ]
    },
    "56": {
      "op": "itob",
      "defined_out": [
        "abs_bound#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "57": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "abs_bound#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "aggregate%val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "58": {
      "op": "swap",
      "stack_out": [
        "abs_bound#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "59": {
      "op": "concat",
      "defined_out": [
        "abs_bound#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%17#0"
      ]
    },
    "60": {
      "op": "log",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "61": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "abs_bound#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%0#0"
      ]
    },
    "63": {
      "op": "return",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "64": {
      "block": "main_get_abs_bound1_route@3",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%3#0"
      ]
    },
    "66": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%4#0"
      ]
    },
    "67": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "68": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%5#0"
      ]
    },
    "70": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "71": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "74": {
      "op": "btoi",
      "defined_out": [
        "upper_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "upper_bound#0"
      ]
    },
    "75": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "abs_bound#0",
        "upper_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "upper_bound#0",
        "abs_bound#0"
      ]
    },
    "77": {
      "op": "bury 2",
      "defined_out": [
        "abs_bound#0",
        "upper_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "upper_bound#0"
      ]
    },
    "79": {
      "op": "bz main_after_if_else@19",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "82": {
      "op": "bytec_0 // 0x010000000000000000",
      "defined_out": [
        "0x010000000000000000",
        "abs_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "0x010000000000000000"
      ]
    },
    "83": {
      "op": "btoi",
      "stack_out": [
        "abs_bound#0",
        "abs_bound#0"
      ]
    },
    "84": {
      "op": "bury 1",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "86": {
      "block": "main_after_if_else@19",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "dup",
      "defined_out": [
        "abs_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "abs_bound#0"
      ]
    },
    "87": {
      "op": "itob",
      "defined_out": [
        "abs_bound#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "88": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "abs_bound#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "89": {
      "op": "swap",
      "stack_out": [
        "abs_bound#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "90": {
      "op": "concat",
      "defined_out": [
        "abs_bound#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%10#0"
      ]
    },
    "91": {
      "op": "log",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "92": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "abs_bound#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%0#0"
      ]
    },
    "94": {
      "op": "return",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "95": {
      "block": "main_bare_routing@7",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%18#0"
      ]
    },
    "97": {
      "op": "bnz main_after_if_else@11",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%19#0"
      ]
    },
    "102": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%20#0"
      ]
    },
    "103": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "104": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%0#0"
      ]
    },
    "106": {
      "op": "return",
      "stack_out": [
        "abs_bound#0"
      ]
    }
  }
}