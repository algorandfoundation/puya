{
    "name": "Issue118",
    "structs": {},
    "methods": [
        {
            "name": "verify",
            "args": [
                {
                    "type": "uint256[]",
                    "name": "values"
                }
            ],
            "returns": {
                "type": "(bool,string)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        35
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        64
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        38
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDEKICAgIGJ5dGVjYmxvY2sgMHgwMDAzMDAwMAogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9pc3N1ZV8xMTgucHk6NQogICAgLy8gY2xhc3MgSXNzdWUxMTgoQVJDNENvbnRyYWN0KToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A2CiAgICBwdXNoYnl0ZXMgMHhiYzY2ZWI2MiAvLyBtZXRob2QgInZlcmlmeSh1aW50MjU2W10pKGJvb2wsc3RyaW5nKSIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdmVyaWZ5X3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvaXNzdWVfMTE4LnB5OjUKICAgIC8vIGNsYXNzIElzc3VlMTE4KEFSQzRDb250cmFjdCk6CiAgICBpbnRjXzAgLy8gMAogICAgcmV0dXJuCgptYWluX3ZlcmlmeV9yb3V0ZUAzOgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9pc3N1ZV8xMTgucHk6Ni03CiAgICAvLyAjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9wdXlhL2lzc3Vlcy8xMTgKICAgIC8vIEBhYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9pc3N1ZV8xMTgucHk6NQogICAgLy8gY2xhc3MgSXNzdWUxMTgoQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvaXNzdWVfMTE4LnB5OjYtNwogICAgLy8gIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vcHV5YS9pc3N1ZXMvMTE4CiAgICAvLyBAYWJpbWV0aG9kCiAgICBjYWxsc3ViIHZlcmlmeQogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9pc3N1ZV8xMTgucHk6NQogICAgLy8gY2xhc3MgSXNzdWUxMTgoQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5yZWdyZXNzaW9uX3Rlc3RzLmlzc3VlXzExOC5Jc3N1ZTExOC52ZXJpZnkodmFsdWVzOiBieXRlcykgLT4gYnl0ZXM6CnZlcmlmeToKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvaXNzdWVfMTE4LnB5OjYtOAogICAgLy8gIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vcHV5YS9pc3N1ZXMvMTE4CiAgICAvLyBAYWJpbWV0aG9kCiAgICAvLyBkZWYgdmVyaWZ5KHNlbGYsIHZhbHVlczogRHluYW1pY0FycmF5W1VJbnQyNTZdKSAtPiBUdXBsZVtCb29sLCBTdHJpbmddOgogICAgcHJvdG8gMSAxCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2lzc3VlXzExOC5weTo5LTExCiAgICAvLyB2YWwxID0gQm9vbCgKICAgIC8vICAgICBib29sKFR4bi5udW1fYXBwX2FyZ3MpCiAgICAvLyApICAjIHVzZSBhIG5vbiBjb25zdGFudCB2YWx1ZSBzbyB0aGUgcmVwZWF0ZWQgZXhwcmVzc2lvbiBpcyBub3Qgc2ltcGxpZmllZAogICAgcHVzaGJ5dGVzIDB4MDAKICAgIGludGNfMCAvLyAwCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2lzc3VlXzExOC5weToxMAogICAgLy8gYm9vbChUeG4ubnVtX2FwcF9hcmdzKQogICAgdHhuIE51bUFwcEFyZ3MKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvaXNzdWVfMTE4LnB5OjktMTEKICAgIC8vIHZhbDEgPSBCb29sKAogICAgLy8gICAgIGJvb2woVHhuLm51bV9hcHBfYXJncykKICAgIC8vICkgICMgdXNlIGEgbm9uIGNvbnN0YW50IHZhbHVlIHNvIHRoZSByZXBlYXRlZCBleHByZXNzaW9uIGlzIG5vdCBzaW1wbGlmaWVkCiAgICBzZXRiaXQKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvaXNzdWVfMTE4LnB5OjEyCiAgICAvLyBpZiB2YWx1ZXMubGVuZ3RoICE9IDI6CiAgICBmcmFtZV9kaWcgLTEKICAgIGludGNfMCAvLyAwCiAgICBleHRyYWN0X3VpbnQxNgogICAgcHVzaGludCAyIC8vIDIKICAgICE9CiAgICBieiB2ZXJpZnlfYWZ0ZXJfaWZfZWxzZUAyCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2lzc3VlXzExOC5weToxMwogICAgLy8gcmV0dXJuIFR1cGxlKCh2YWwxLCBTdHJpbmcoIiIpKSkKICAgIGJ5dGVjXzAgLy8gMHgwMDAzMDAwMAogICAgY29uY2F0CiAgICByZXRzdWIKCnZlcmlmeV9hZnRlcl9pZl9lbHNlQDI6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2lzc3VlXzExOC5weToxNAogICAgLy8gcmV0dXJuIFR1cGxlKCh2YWwxLCBTdHJpbmcoIiIpKSkKICAgIGJ5dGVjXzAgLy8gMHgwMDAzMDAwMAogICAgY29uY2F0CiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmAQQAAwAAMRtBACeABLxm62I2GgCOAQACIkMxGRREMRhENhoBiAAWgAQVH3x1TFCwI0MxGUD/4TEYFEQjQ4oBAYABACIxG1SL/yJZgQITQQADKFCJKFCJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}