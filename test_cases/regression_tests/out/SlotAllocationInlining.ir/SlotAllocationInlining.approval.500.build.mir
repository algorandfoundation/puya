// Op                                                                 Stack (out)
// test_cases.regression_tests.slot_allocation_inlining.SlotAllocationInlining.approval_program() -> uint64:
subroutine main:
    main_while_top@2:
        global OpcodeBudget                                           tmp%1#0
        v-store tmp%1#0
        int 810                                                       810
        v-load tmp%1#0                                                810,tmp%1#0
        >                                                             tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                tmp%2#0
        bz main_after_while@7 ; b main_while_body@3

    main_while_body@3:
        itxn_begin
        int appl                                                      appl
        itxn_field TypeEnum
        int DeleteApplication                                         DeleteApplication
        itxn_field OnCompletion
        byte 0x068101                                                 0x068101
        itxn_field ApprovalProgram
        byte 0x068101                                                 0x068101
        itxn_field ClearStateProgram
        int 0                                                         0
        itxn_field Fee
        itxn_submit
        b main_while_top@2

    main_after_while@7:
        // regression_tests/slot_allocation_inlining.py:25
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                arr#0
        v-store arr#0
        v-load arr#0                                                  arr#0
        byte 0x                                                       arr#0,0x
        stores
        // regression_tests/slot_allocation_inlining.py:26
        // append_to_array(arr)
        v-load arr#0                                                  arr#0
        callsub append_to_array
        // regression_tests/slot_allocation_inlining.py:27
        // assert arr.length == 32, "expected array of length 32"
        v-load arr#0                                                  arr#0
        loads                                                         aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                            aggregate%slot_contents%0#0
        len                                                           aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                aggregate%bytes_len%0#0
        int 8                                                         aggregate%bytes_len%0#0,8
        /                                                             aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                aggregate%array_len%0#0
        int 32                                                        aggregate%array_len%0#0,32
        ==                                                            tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                tmp%1#1
        assert // expected array of length 32
        // regression_tests/slot_allocation_inlining.py:16
        // return True
        int 1                                                         1
        return


// test_cases.regression_tests.slot_allocation_inlining.append_to_array(arr: uint64) -> void:
subroutine append_to_array:
    append_to_array_block@0:                                          (洧도) arr#0 |
        // regression_tests/slot_allocation_inlining.py:32
        // for b in Txn.sender.bytes:
        txn Sender                                                    (洧도) arr#0 | tmp%0#0
        v-store tmp%0#0                                               (洧도) arr#0 |
        int 0                                                         (洧도) arr#0 | 0
        v-store item_index_internal%0#0                               (洧도) arr#0 |
        b append_to_array_for_header@1                                (洧도) arr#0 |

    append_to_array_for_header@1:                                     (洧도) arr#0 |
        // regression_tests/slot_allocation_inlining.py:32
        // for b in Txn.sender.bytes:
        v-load item_index_internal%0#0                                (洧도) arr#0 | item_index_internal%0#0
        int 32                                                        (洧도) arr#0 | item_index_internal%0#0,32
        <                                                             (洧도) arr#0 | continue_looping%0#0
        v-store continue_looping%0#0                                  (洧도) arr#0 |
        v-load continue_looping%0#0                                   (洧도) arr#0 | continue_looping%0#0
        bz append_to_array_after_for@4 ; b append_to_array_for_body@2 (洧도) arr#0 |

    append_to_array_for_body@2:                                       (洧도) arr#0 |
        // regression_tests/slot_allocation_inlining.py:33
        // arr.append(op.btoi(b))
        v-load tmp%0#0                                                (洧도) arr#0 | tmp%0#0
        v-load item_index_internal%0#0                                (洧도) arr#0 | tmp%0#0,item_index_internal%0#0
        getbyte                                                       (洧도) arr#0 | tmp%1#0
        v-store tmp%1#0                                               (洧도) arr#0 |
        p-load arr#0                                                  (洧도) arr#0 | arr#0 (copy)
        loads                                                         (洧도) arr#0 | slot_contents%0#0
        v-store slot_contents%0#0                                     (洧도) arr#0 |
        v-load tmp%1#0                                                (洧도) arr#0 | tmp%1#0
        itob                                                          (洧도) arr#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                            (洧도) arr#0 |
        v-load slot_contents%0#0                                      (洧도) arr#0 | slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                             (洧도) arr#0 | slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                 (洧도) arr#0 | concat%0#0
        v-store concat%0#0                                            (洧도) arr#0 |
        p-load arr#0                                                  (洧도) arr#0 | arr#0 (copy)
        v-load concat%0#0                                             (洧도) arr#0 | arr#0 (copy),concat%0#0
        stores                                                        (洧도) arr#0 |
        v-load item_index_internal%0#0                                (洧도) arr#0 | item_index_internal%0#0
        int 1                                                         (洧도) arr#0 | item_index_internal%0#0,1
        +                                                             (洧도) arr#0 | item_index_internal%0#0
        v-store item_index_internal%0#0                               (洧도) arr#0 |
        b append_to_array_for_header@1                                (洧도) arr#0 |

    append_to_array_after_for@4:                                      (洧도) arr#0 |
        retsub


// _puya_lib.mem.new_slot() -> uint64:
subroutine _puya_lib.mem.new_slot:
    _puya_lib.mem.new_slot@entry:
        load 0                                                        slot_allocations
        bitlen                                                        {bitlen}
        v-store free_slot#0
        load 0                                                        slot_allocations
        int 256                                                       slot_allocations,256
        v-load free_slot#0                                            slot_allocations,256,free_slot#0
        -                                                             slot_allocations,free_slot_idx
        int 0                                                         slot_allocations,free_slot_idx,0
        setbit // on error: no available slots                        new_slot_allocations
        store 0
        v-load free_slot#0                                            free_slot#0
        retsub                                                        free_slot#0


