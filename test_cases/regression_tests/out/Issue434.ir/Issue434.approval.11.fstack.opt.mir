// Op                                                                                          Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // regression_tests/issue_434.py:4
        // class Issue434(ARC4Contract):
        txn NumAppArgs                                                                         tmp%0#1
        bz main_bare_routing@6 ; b main_abi_routing@2

    main_abi_routing@2:
        // regression_tests/issue_434.py:4
        // class Issue434(ARC4Contract):
        txna ApplicationArgs 0                                                                 tmp%2#0
        method method(uint64)void                                                              tmp%2#0,Method(method(uint64)void)
        l-load tmp%2#0 1                                                                       Method(method(uint64)void),tmp%2#0
        match main_method_route@3 ; b main_after_if_else@10

    main_method_route@3:
        // regression_tests/issue_434.py:6
        // @arc4.abimethod
        txn OnCompletion                                                                       tmp%3#0
        !                                                                                      tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                      tmp%5#0
        assert // can only call when not creating
        // regression_tests/issue_434.py:4
        // class Issue434(ARC4Contract):
        txna ApplicationArgs 1                                                                 reinterpret_Encoded(uint64)%0#0
        btoi                                                                                   tmp%7#0
        // regression_tests/issue_434.py:6
        // @arc4.abimethod
        callsub method
        int 1                                                                                  tmp%0#0
        x-store tmp%0#0                                                                        (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router__@11 (洧뎶) tmp%0#0 | 

    main_bare_routing@6:
        // regression_tests/issue_434.py:4
        // class Issue434(ARC4Contract):
        txn OnCompletion                                                                       tmp%8#0
        bz main___algopy_default_create@7 ; b main_after_if_else@10

    main___algopy_default_create@7:
        txn ApplicationID                                                                      tmp%9#0
        !                                                                                      tmp%10#0
        assert // can only call when creating
        int 1                                                                                  tmp%0#0
        x-store tmp%0#0                                                                        (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router__@11 (洧뎶) tmp%0#0 | 

    main_after_if_else@10:
        // regression_tests/issue_434.py:4
        // class Issue434(ARC4Contract):
        int 0                                                                                  tmp%0#0
        x-store tmp%0#0                                                                        (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router__@11 (洧뎶) tmp%0#0 | 

    main_after_inlined_test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router__@11: (洧뎶) tmp%0#0 |
        x-load tmp%0#0                                                                         tmp%0#0
        return


// test_cases.regression_tests.issue_434.Issue434.method(c: uint64) -> void:
subroutine method:
    method_while_top@1:                                                                        (洧도) c#0 |
        // regression_tests/issue_434.py:8
        // while Global.opcode_budget() > 350:
        global OpcodeBudget                                                                    (洧도) c#0 | tmp%0#0
        int 350                                                                                (洧도) c#0 | tmp%0#0,350
        >                                                                                      (洧도) c#0 | tmp%1#0
        bz method_after_while@3 ; b method_while_body@2                                        (洧도) c#0 |

    method_while_body@2:                                                                       (洧도) c#0 |
        // regression_tests/issue_434.py:9
        // assert op.sha3_256(Txn.sender.bytes) != Txn.sender.bytes
        txn Sender                                                                             (洧도) c#0 | tmp%2#0
        sha3_256                                                                               (洧도) c#0 | tmp%3#0
        txn Sender                                                                             (洧도) c#0 | tmp%3#0,tmp%4#0
        l-load tmp%3#0 1                                                                       (洧도) c#0 | tmp%4#0,tmp%3#0
        l-load tmp%4#0 1                                                                       (洧도) c#0 | tmp%3#0,tmp%4#0
        !=                                                                                     (洧도) c#0 | tmp%5#0
        assert                                                                                 (洧도) c#0 |
        b method_while_top@1                                                                   (洧도) c#0 |

    method_after_while@3:                                                                      (洧도) c#0 |
        // regression_tests/issue_434.py:11
        // if c > 0:
        p-load c#0                                                                             (洧도) c#0 | c#0 (copy)
        bz method_else_body@5 ; b method_if_body@4                                             (洧도) c#0 |

    method_if_body@4:                                                                          (洧도) c#0 |
        // regression_tests/issue_434.py:12
        // x = c + 2
        p-load c#0                                                                             (洧도) c#0 | c#0 (copy)
        int 2                                                                                  (洧도) c#0 | c#0 (copy),2
        +                                                                                      (洧도) c#0 | x#0
        x-store x#0                                                                            (洧도) c#0 | (洧뎶) x#0 |
        b method_after_if_else@6                                                               (洧도) c#0 | (洧뎶) x#0 |

    method_else_body@5:                                                                        (洧도) c#0 |
        // regression_tests/issue_434.py:14
        // x = c + 2
        p-load c#0                                                                             (洧도) c#0 | c#0 (copy)
        int 2                                                                                  (洧도) c#0 | c#0 (copy),2
        +                                                                                      (洧도) c#0 | x#0
        x-store x#0                                                                            (洧도) c#0 | (洧뎶) x#0 |
        b method_after_if_else@6                                                               (洧도) c#0 | (洧뎶) x#0 |

    method_after_if_else@6:                                                                    (洧도) c#0 | (洧뎶) x#0 |
        // regression_tests/issue_434.py:16
        // assert x - 2 == c
        x-load x#0                                                                             (洧도) c#0 | x#0
        int 2                                                                                  (洧도) c#0 | x#0,2
        -                                                                                      (洧도) c#0 | tmp%7#0
        p-load c#0                                                                             (洧도) c#0 | tmp%7#0,c#0 (copy)
        ==                                                                                     (洧도) c#0 | tmp%8#0
        assert                                                                                 (洧도) c#0 |
        retsub


