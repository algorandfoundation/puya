main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router__() -> bool:
    block@0: // L4
        let tmp%0#0: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#0)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        switch tmp%4#0 {0u => block@1, 1u => block@5, 2u => block@8, 3u => block@9, 4u => block@10, 5u => block@11, 6u => block@12, 7u => block@13, 8u => block@14, 9u => block@15, 10u => block@16, 11u => block@17, * => block@18}
    block@1: // switch_case_0_L4
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "method(uint64)void" => block@2, * => block@3}
    block@2: // method_route_L6
        test_cases.regression_tests.issue_434.Issue434.method[routing]()
        goto block@4
    block@3: // switch_case_default_L4
        goto block@4
    block@4: // switch_case_next_L4
        fail // this contract does not implement the given ABI method for call NoOp
    block@5: // switch_case_1_L4
        let tmp%6#0: uint64 = (txn NumAppArgs)
        let tmp%7#0: bool = (== tmp%6#0 0u)
        goto tmp%7#0 ? block@6 : block@7
    block@6: // __algopy_default_create_L1
        test_cases.regression_tests.issue_434.Issue434.__algopy_default_create()
        exit 1u
    block@7: // else_body_L4
        fail // this contract does not implement the given ABI method for create NoOp
    block@8: // switch_case_2_L4
        goto block@18
    block@9: // switch_case_3_L4
        goto block@18
    block@10: // switch_case_4_L4
        goto block@18
    block@11: // switch_case_5_L4
        goto block@18
    block@12: // switch_case_6_L4
        goto block@18
    block@13: // switch_case_7_L4
        goto block@18
    block@14: // switch_case_8_L4
        goto block@18
    block@15: // switch_case_9_L4
        goto block@18
    block@16: // switch_case_10_L4
        goto block@18
    block@17: // switch_case_11_L4
        goto block@18
    block@18: // switch_case_default_L4
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

subroutine test_cases.regression_tests.issue_434.Issue434.method[routing]() -> void:
    block@0: // L6
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let tmp%0#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%0#0)
        test_cases.regression_tests.issue_434.Issue434.method(tmp%0#0)
        exit 1u

subroutine test_cases.regression_tests.issue_434.Issue434.method(c: uint64) -> void:
    block@0: // L6
        goto block@1
    block@1: // while_top_L8
        let tmp%0#0: uint64 = (global OpcodeBudget)
        let tmp%1#0: bool = (> tmp%0#0 350u)
        goto tmp%1#0 ? block@2 : block@3
    block@2: // while_body_L9
        let tmp%2#0: account = (txn Sender)
        let tmp%3#0: bytes = (sha3_256 tmp%2#0)
        let tmp%4#0: account = (txn Sender)
        let tmp%5#0: bool = (!= tmp%3#0 tmp%4#0)
        (assert tmp%5#0)
        goto block@1
    block@3: // after_while_L8
        let tmp%6#0: bool = (> c#0 0u)
        goto tmp%6#0 ? block@4 : block@5
    block@4: // if_body_L12
        let tmp%7#0: uint64 = (+ c#0 2u)
        let x#0: uint64 = tmp%7#0
        goto block@6
    block@5: // else_body_L14
        let tmp%8#0: uint64 = (+ c#0 2u)
        let x#1: uint64 = tmp%8#0
        goto block@6
    block@6: // after_if_else_L11
        let x#2: uint64 = Ï†(x#0 <- block@4, x#1 <- block@5)
        let tmp%9#0: uint64 = (- x#2 2u)
        let tmp%10#0: bool = (== tmp%9#0 c#0)
        (assert tmp%10#0)
        return 

subroutine test_cases.regression_tests.issue_434.Issue434.__algopy_default_create() -> void:
    block@0: // L1
        return 