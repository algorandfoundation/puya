{
    "name": "ConstBigIntToIntOverflow",
    "structs": {},
    "methods": [
        {
            "name": "get_abs_bound1",
            "args": [
                {
                    "type": "uint64",
                    "name": "upper_bound"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_abs_bound2",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        59
                    ],
                    "errorMessage": "can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGJ5dGVjYmxvY2sgMHgwMTAwMDAwMDAwMDAwMDAwMDAgMHgxNTFmN2M3NQogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weTo0CiAgICAvLyBjbGFzcyBDb25zdEJpZ0ludFRvSW50T3ZlcmZsb3coYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDE2CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0CiAgICBwdXNoYnl0ZXNzIDB4NThkYjdjZTkgMHhjOTVjMDFjYSAvLyBtZXRob2QgImdldF9hYnNfYm91bmQxKHVpbnQ2NCl1aW50NjQiLCBtZXRob2QgImdldF9hYnNfYm91bmQyKCl1aW50NjQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBnZXRfYWJzX2JvdW5kMSBnZXRfYWJzX2JvdW5kMgogICAgZXJyCgptYWluX2JhcmVfcm91dGluZ0AxNjoKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvYmlndWludF9vcHQucHk6NAogICAgLy8gY2xhc3MgQ29uc3RCaWdJbnRUb0ludE92ZXJmbG93KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLnJlZ3Jlc3Npb25fdGVzdHMuYmlndWludF9vcHQuQ29uc3RCaWdJbnRUb0ludE92ZXJmbG93LmdldF9hYnNfYm91bmQxW3JvdXRpbmddKCkgLT4gdm9pZDoKZ2V0X2Fic19ib3VuZDE6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjcKICAgIC8vIGFic19ib3VuZCA9IGxvd2VyX2JvdW5kID0gVUludDY0KDApCiAgICBwdXNoaW50IDAgLy8gMAogICAgc3dhcAogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weTo4CiAgICAvLyBpZiB1cHBlcl9ib3VuZDoKICAgIGJ6IGdldF9hYnNfYm91bmQxX2FmdGVyX2lmX2Vsc2VAMwogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weTo5LTEzCiAgICAvLyAjIGlmIHVwcGVyIGJvdW5kIGlzIHRydXRoeSwgdGhlbiB0aGlzIHdpbGwgZXJyb3IgYXQgcnVuIHRpbWUKICAgIC8vICMgYnV0IG9wdGltaXplciBzaG91bGQgbm90IHJlcGxhY2UgdGhpcyBvcCBpbiB0aGlzIGNhc2Ugc2luY2UgaXQgaXMgZ3VhcmRlZAogICAgLy8gIyBUT0RPOiBpdCB3b3VsZCBiZSBuaWNlIGlmIHRoZSBvcHRpbWl6ZXIgY291bGQganVzdCByZXBsYWNlIHRoaXMgZmFpbHVyZQogICAgLy8gIyAgICAgICB3aXRoIGFuIGVyciwgYnV0IHRoYXQgd291bGQgcmVxdWlyZSB0ZXJtaW5hdGluZyB0aGUgYmxvY2sgYXMgcGFydCBvZiBvcHRpbWl6aW5nCiAgICAvLyBhYnNfYm91bmQgPSBvcC5idG9pKChCaWdVSW50KDEgPDwgNjQpIC0gbG93ZXJfYm91bmQpLmJ5dGVzKQogICAgYnl0ZWNfMCAvLyAweDAxMDAwMDAwMDAwMDAwMDAwMAogICAgYnRvaQogICAgYnVyeSAxCgpnZXRfYWJzX2JvdW5kMV9hZnRlcl9pZl9lbHNlQDM6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBkdXAKICAgIGl0b2IKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLnJlZ3Jlc3Npb25fdGVzdHMuYmlndWludF9vcHQuQ29uc3RCaWdJbnRUb0ludE92ZXJmbG93LmdldF9hYnNfYm91bmQyW3JvdXRpbmddKCkgLT4gdm9pZDoKZ2V0X2Fic19ib3VuZDI6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjE5LTIxCiAgICAvLyAjIHRoaXMgdmFyaWFudCByZXN1bHRlZCBpbiB0aGUgb3B0aW1pemF0aW9uIGJ1ZyBhcHBlYXJpbmcgaW4gdGhlIHJvdXRlciBhZnRlciBpbmxpbmluZwogICAgLy8gIyB0aGlzIGZ1bmN0aW9uCiAgICAvLyBhYnNfYm91bmQgPSBvcC5idG9pKChCaWdVSW50KDEgPDwgNjQpIC0gMCkuYnl0ZXMpCiAgICBieXRlY18wIC8vIDB4MDEwMDAwMDAwMDAwMDAwMDAwCiAgICBidG9pCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjE3CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgaXRvYgogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiYCCQEAAAAAAAAAAAQVH3x1MRtBAB0xGRREMRhEggIEWNt86QTJXAHKNhoAjgIADAAjADEZFEQxGBREgQFDNhoBF4EATEEABCgXRQFJFilMULCBAUMoFxYpTFCwgQFD",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}