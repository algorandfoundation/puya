{
    "name": "ConstBigIntToIntOverflow",
    "structs": {},
    "methods": [
        {
            "name": "get_abs_bound1",
            "args": [
                {
                    "type": "uint64",
                    "name": "upper_bound"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_abs_bound2",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        48,
                        66
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        93
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        51,
                        69
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGJ5dGVjYmxvY2sgMHgxNTFmN2M3NSAweDAxMDAwMDAwMDAwMDAwMDAwMAogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weTo0CiAgICAvLyBjbGFzcyBDb25zdEJpZ0ludFRvSW50T3ZlcmZsb3coYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDcKICAgIHB1c2hieXRlc3MgMHg1OGRiN2NlOSAweGM5NWMwMWNhIC8vIG1ldGhvZCAiZ2V0X2Fic19ib3VuZDEodWludDY0KXVpbnQ2NCIsIG1ldGhvZCAiZ2V0X2Fic19ib3VuZDIoKXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fZ2V0X2Fic19ib3VuZDFfcm91dGVAMyBtYWluX2dldF9hYnNfYm91bmQyX3JvdXRlQDQKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMToKICAgIGVycgoKbWFpbl9nZXRfYWJzX2JvdW5kMl9yb3V0ZUA0OgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weToxNwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiBnZXRfYWJzX2JvdW5kMgogICAgaXRvYgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgoKbWFpbl9nZXRfYWJzX2JvdW5kMV9yb3V0ZUAzOgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weTo1CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjQKICAgIC8vIGNsYXNzIENvbnN0QmlnSW50VG9JbnRPdmVyZmxvdyhhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIGdldF9hYnNfYm91bmQxCiAgICBpdG9iCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A3OgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weTo0CiAgICAvLyBjbGFzcyBDb25zdEJpZ0ludFRvSW50T3ZlcmZsb3coYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLnJlZ3Jlc3Npb25fdGVzdHMuYmlndWludF9vcHQuQ29uc3RCaWdJbnRUb0ludE92ZXJmbG93LmdldF9hYnNfYm91bmQxKHVwcGVyX2JvdW5kOiB1aW50NjQpIC0+IHVpbnQ2NDoKZ2V0X2Fic19ib3VuZDE6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjUtNgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIC8vIGRlZiBnZXRfYWJzX2JvdW5kMShzZWxmLCB1cHBlcl9ib3VuZDogVUludDY0KSAtPiBVSW50NjQ6CiAgICBwcm90byAxIDEKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvYmlndWludF9vcHQucHk6NwogICAgLy8gYWJzX2JvdW5kID0gbG93ZXJfYm91bmQgPSBVSW50NjQoMCkKICAgIHB1c2hpbnQgMCAvLyAwCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JpZ3VpbnRfb3B0LnB5OjgKICAgIC8vIGlmIHVwcGVyX2JvdW5kOgogICAgZnJhbWVfZGlnIC0xCiAgICBieiBnZXRfYWJzX2JvdW5kMV9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvYmlndWludF9vcHQucHk6OS0xMwogICAgLy8gIyBpZiB1cHBlciBib3VuZCBpcyB0cnV0aHksIHRoZW4gdGhpcyB3aWxsIGVycm9yIGF0IHJ1biB0aW1lCiAgICAvLyAjIGJ1dCBvcHRpbWl6ZXIgc2hvdWxkIG5vdCByZXBsYWNlIHRoaXMgb3AgaW4gdGhpcyBjYXNlIHNpbmNlIGl0IGlzIGd1YXJkZWQKICAgIC8vICMgVE9ETzogaXQgd291bGQgYmUgbmljZSBpZiB0aGUgb3B0aW1pemVyIGNvdWxkIGp1c3QgcmVwbGFjZSB0aGlzIGZhaWx1cmUKICAgIC8vICMgICAgICAgd2l0aCBhbiBlcnIsIGJ1dCB0aGF0IHdvdWxkIHJlcXVpcmUgdGVybWluYXRpbmcgdGhlIGJsb2NrIGFzIHBhcnQgb2Ygb3B0aW1pemluZwogICAgLy8gYWJzX2JvdW5kID0gb3AuYnRvaSgoQmlnVUludCgxIDw8IDY0KSAtIGxvd2VyX2JvdW5kKS5ieXRlcykKICAgIGJ5dGVjXzEgLy8gMHgwMTAwMDAwMDAwMDAwMDAwMDAKICAgIGJ0b2kKICAgIGZyYW1lX2J1cnkgMAoKZ2V0X2Fic19ib3VuZDFfYWZ0ZXJfaWZfZWxzZUAyOgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weToxNQogICAgLy8gcmV0dXJuIGFic19ib3VuZAogICAgZnJhbWVfZGlnIDAKICAgIHN3YXAKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMucmVncmVzc2lvbl90ZXN0cy5iaWd1aW50X29wdC5Db25zdEJpZ0ludFRvSW50T3ZlcmZsb3cuZ2V0X2Fic19ib3VuZDIoKSAtPiB1aW50NjQ6CmdldF9hYnNfYm91bmQyOgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weToxOS0yMQogICAgLy8gIyB0aGlzIHZhcmlhbnQgcmVzdWx0ZWQgaW4gdGhlIG9wdGltaXphdGlvbiBidWcgYXBwZWFyaW5nIGluIHRoZSByb3V0ZXIgYWZ0ZXIgaW5saW5pbmcKICAgIC8vICMgdGhpcyBmdW5jdGlvbgogICAgLy8gYWJzX2JvdW5kID0gb3AuYnRvaSgoQmlnVUludCgxIDw8IDY0KSAtIDApLmJ5dGVzKQogICAgYnl0ZWNfMSAvLyAweDAxMDAwMDAwMDAwMDAwMDAwMAogICAgYnRvaQogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9iaWd1aW50X29wdC5weToyMwogICAgLy8gcmV0dXJuIGFic19ib3VuZAogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiYCBBUffHUJAQAAAAAAAAAAMRtBAD6CAgRY23zpBMlcAco2GgCOAgATAAEAMRkURDEYRIgAPBYoTFCwgQFDMRkURDEYRDYaAReIABQWKExQsIEBQzEZQP/SMRgURIEBQ4oBAYEAi/9BAAQpF4wAiwBMiSkXiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}