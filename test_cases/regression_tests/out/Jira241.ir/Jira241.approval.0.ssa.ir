main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.regression_tests.jira_241.Jira241.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.regression_tests.jira_241.Jira241.__puya_arc4_router__() -> bool:
    block@0: // L4
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@6
    block@1: // abi_routing_L4
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "oh_no(bool)void" => block@2, method "oh_yes(bool)void" => block@3, * => block@4}
    block@2: // oh_no_route_L5
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let reinterpret_bytes[1]%0#0: bytes[1] = (txna ApplicationArgs 1)
        let tmp%7#0: bool = (getbit reinterpret_bytes[1]%0#0 0u)
        test_cases.regression_tests.jira_241.Jira241.oh_no(tmp%7#0)
        return 1u
    block@3: // oh_yes_route_L9
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 NoOp)
        (assert tmp%9#0) // OnCompletion is not NoOp
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (!= tmp%10#0 0u)
        (assert tmp%11#0) // can only call when not creating
        let reinterpret_bytes[1]%1#0: bytes[1] = (txna ApplicationArgs 1)
        let tmp%12#0: bool = (getbit reinterpret_bytes[1]%1#0 0u)
        test_cases.regression_tests.jira_241.Jira241.oh_yes(tmp%12#0)
        return 1u
    block@4: // switch_case_default_L4
        goto block@5
    block@5: // switch_case_next_L4
        goto block@10
    block@6: // bare_routing_L4
        let tmp%13#0: uint64 = (txn OnCompletion)
        switch tmp%13#0 {0u => block@7, * => block@8}
    block@7: // __algopy_default_create_L1
        let tmp%14#0: uint64 = (txn ApplicationID)
        let tmp%15#0: bool = (== tmp%14#0 0u)
        (assert tmp%15#0) // can only call when creating
        test_cases.regression_tests.jira_241.Jira241.__algopy_default_create()
        return 1u
    block@8: // switch_case_default_L4
        goto block@9
    block@9: // switch_case_next_L4
        goto block@10
    block@10: // after_if_else_L4
        return 0u

subroutine test_cases.regression_tests.jira_241.Jira241.oh_no(wrong_size: bool) -> void:
    block@0: // L5
        return 

subroutine test_cases.regression_tests.jira_241.Jira241.oh_yes(wrong_size: bool) -> void:
    block@0: // L9
        return 

subroutine test_cases.regression_tests.jira_241.Jira241.__algopy_default_create() -> void:
    block@0: // L1
        return 