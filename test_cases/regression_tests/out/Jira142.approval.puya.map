{
  "version": 3,
  "sources": [
    "../jira_142.py"
  ],
  "mappings": ";AAYK;;AALL;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAKK;;AAAA;AAAA;AAAA;;AAAA;AAE4B;;;;;;;;;;AAKzB;AAPH;AALL;;AAAA;AAAA;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushint 1 // 1"
    },
    "3": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#1"
      ]
    },
    "5": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "8": {
      "op": "pushbytes 0xebb6cc95 // method \"battle()void\"",
      "defined_out": [
        "Method(battle()void)",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(battle()void)"
      ]
    },
    "14": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(battle()void)",
        "lifted%return#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(battle()void)",
        "tmp%2#0"
      ]
    },
    "17": {
      "op": "match main_battle_route@3",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "21": {
      "op": "err"
    },
    "22": {
      "block": "main_battle_route@3",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0"
      ]
    },
    "24": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "25": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%5#0"
      ]
    },
    "28": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "29": {
      "op": "pushbytes 0x00000000000000c8",
      "defined_out": [
        "0x00000000000000c8"
      ],
      "stack_out": [
        "lifted%return#0",
        "0x00000000000000c8"
      ]
    },
    "39": {
      "op": "log",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "40": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "41": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%7#0"
      ]
    },
    "43": {
      "op": "!",
      "defined_out": [
        "not%tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "not%tmp%7#0"
      ]
    },
    "44": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "45": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%8#0"
      ]
    },
    "47": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%9#0"
      ]
    },
    "48": {
      "error": "can only call when creating",
      "op": "return // on error: can only call when creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    }
  }
}