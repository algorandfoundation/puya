// Op                                                                                  Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // regression_tests/issue_118.py:5
        // class Issue118(ARC4Contract):
        txn NumAppArgs                                                                 tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                 tmp%0#1
        bz main___algopy_default_create@5 ; b main_abi_routing@2

    main_abi_routing@2:
        // regression_tests/issue_118.py:5
        // class Issue118(ARC4Contract):
        txna ApplicationArgs 0                                                         tmp%2#0
        v-store tmp%2#0
        method verify(uint256[])(bool,string)                                          Method(verify(uint256[])(bool,string))
        v-load tmp%2#0                                                                 Method(verify(uint256[])(bool,string)),tmp%2#0
        match main_verify_route@3 ; b main_switch_case_next@4

    main_verify_route@3:
        // regression_tests/issue_118.py:7
        // @abimethod
        txn OnCompletion                                                               tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                 tmp%3#0
        !                                                                              tmp%4#0
        v-store tmp%4#0
        txn ApplicationID                                                              tmp%5#0
        v-store tmp%5#0
        v-load tmp%4#0                                                                 tmp%4#0
        v-load tmp%5#0                                                                 tmp%4#0,tmp%5#0
        &&                                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                 tmp%7#0
        assert // OnCompletion must be NoOp && can only call when not creating
        callsub verify
        b main_switch_case_next@4

    main_switch_case_next@4:
        // regression_tests/issue_118.py:5
        // class Issue118(ARC4Contract):
        err

    main___algopy_default_create@5:
        txn OnCompletion                                                               tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                 tmp%8#0
        !                                                                              tmp%9#0
        v-store tmp%9#0
        txn ApplicationID                                                              tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                tmp%10#0
        !                                                                              tmp%11#0
        v-store tmp%11#0
        v-load tmp%9#0                                                                 tmp%9#0
        v-load tmp%11#0                                                                tmp%9#0,tmp%11#0
        &&                                                                             tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                tmp%12#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                          1
        return


// test_cases.regression_tests.issue_118.Issue118.verify[routing]() -> void:
subroutine verify:
    verify_block@0:
        // regression_tests/issue_118.py:7
        // @abimethod
        txna ApplicationArgs 1                                                         values#0
        v-store values#0
        v-load values#0                                                                values#0
        int 0                                                                          values#0,0
        extract_uint16                                                                 aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                              aggregate%array_length%0#0
        int 32                                                                         aggregate%array_length%0#0,32
        *                                                                              mul%0#0
        v-store mul%0#0
        v-load mul%0#0                                                                 mul%0#0
        int 2                                                                          mul%0#0,2
        +                                                                              add%0#0
        v-store add%0#0
        v-load values#0                                                                values#0
        len                                                                            len%0#0
        v-store len%0#0
        v-load len%0#0                                                                 len%0#0
        v-load add%0#0                                                                 len%0#0,add%0#0
        ==                                                                             eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                                  eq%0#0
        assert // invalid number of bytes for (len+uint256[])
        // regression_tests/issue_118.py:10
        // bool(Txn.num_app_args)
        txn NumAppArgs                                                                 tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                 tmp%0#1
        int 0                                                                          tmp%0#1,0
        !=                                                                             tmp%1#1
        v-store tmp%1#1
        // regression_tests/issue_118.py:9-11
        // val1 = Bool(
        //     bool(Txn.num_app_args)
        // )  # use a non constant value so the repeated expression is not simplified
        byte 0x00                                                                      0x00
        int 0                                                                          0x00,0
        v-load tmp%1#1                                                                 0x00,0,tmp%1#1
        setbit                                                                         val1#0
        v-store val1#0
        // regression_tests/issue_118.py:12
        // if values.length != 2:
        v-load aggregate%array_length%0#0                                              aggregate%array_length%0#0
        int 2                                                                          aggregate%array_length%0#0,2
        !=                                                                             tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                 tmp%4#0
        bz verify_after_if_else@3 ; b verify_if_body@2

    verify_if_body@2:
        // regression_tests/issue_118.py:13
        // return Tuple((val1, String("")))
        v-load val1#0                                                                  val1#0
        byte 0x00030000                                                                val1#0,0x00030000
        concat                                                                         aggregate%concat%0#0
        v-store aggregate%concat%0#0
        v-load aggregate%concat%0#0                                                    aggregate%concat%0#0
        v-store tmp%1#0
        // regression_tests/issue_118.py:7
        // @abimethod
        b verify_after_inlined_test_cases.regression_tests.issue_118.Issue118.verify@4

    verify_after_if_else@3:
        // regression_tests/issue_118.py:14
        // return Tuple((val1, String("")))
        v-load val1#0                                                                  val1#0
        byte 0x00030000                                                                val1#0,0x00030000
        concat                                                                         aggregate%concat%1#0
        v-store aggregate%concat%1#0
        v-load aggregate%concat%1#0                                                    aggregate%concat%1#0
        v-store tmp%1#0
        // regression_tests/issue_118.py:7
        // @abimethod
        b verify_after_inlined_test_cases.regression_tests.issue_118.Issue118.verify@4

    verify_after_inlined_test_cases.regression_tests.issue_118.Issue118.verify@4:
        // regression_tests/issue_118.py:7
        // @abimethod
        byte 0x151f7c75                                                                0x151f7c75
        v-load tmp%1#0                                                                 0x151f7c75,tmp%1#0
        concat                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                 tmp%2#0
        log
        int 1                                                                          1
        return


