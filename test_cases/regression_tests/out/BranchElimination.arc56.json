{
    "name": "BranchElimination",
    "structs": {},
    "methods": [
        {
            "name": "umm",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "umm2",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "calculate",
            "args": [
                {
                    "type": "uint64[][]",
                    "name": "nested_list"
                },
                {
                    "type": "uint64",
                    "name": "threshold"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        15
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        55
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        242,
                        294,
                        345
                    ],
                    "errorMessage": "index access is out of bounds"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAAEIAjEbQQAkMRkURDEYRIIDBK7CUO8EvUsiPwSEf3dfNhoAjgMADQBoAJ0AMRkUMRgUEEMiiSKJgABHAiKI//ZFAiJFBEsDSwIMQQAziP/kSwFFBEEAHIj/2ksBRQRBABKI/9BLAUUEQQAIiP/GSwEIRQNLAkUBSwMjCEUEQv/FiP+xQf+3SRaABBUffHVMULAjQ4AAIoj/m0sBRQNBAByI/5FLAUUDQQASiP+HSwFFA0EACIj/fUsBCEUCSwFFAYj/cUH/0CNDIkcCgABHBTYaATYaAiJJNhoBIlkiSUsCDElFDEEAsUsFVwIASwtESwElC0sBTFlKWSQLJQhYSUUPIllJRQ0jCUUJIkUKSwlLDAxBAHtLDVcCAElFEEsKJAskWElFDksFp0sDRQlLBEUIQQBLSwlLCQxLA0UJSwRFCEEAM0sDIwhJRQVLCiMIJAtLEEwkWEsOpUsERQpMRQhBAAxLAyULSwMjCEUJRQdLBksIRQlFB0sGSwhFCUUHSwdFA0sGRQRLCSMIRQpC/31JIwhFAUL/RSND",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}