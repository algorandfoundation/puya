{
  "version": 3,
  "sources": [
    "../jira_241.py"
  ],
  "mappings": ";AAIK;;AADL;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAKK;AAJA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushint 1 // 1"
    },
    "3": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#1"
      ]
    },
    "5": {
      "op": "bz main___algopy_default_create@10",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "8": {
      "op": "txn OnCompletion",
      "defined_out": [
        "lifted%return#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%2#0"
      ]
    },
    "10": {
      "op": "!",
      "defined_out": [
        "lifted%return#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0"
      ]
    },
    "11": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "12": {
      "op": "txn ApplicationID",
      "defined_out": [
        "lifted%return#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "14": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "15": {
      "op": "pushbytess 0x1e3e4374 0xd7a938c9 // method \"oh_no(bool)void\", method \"oh_yes(bool)void\"",
      "defined_out": [
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)"
      ]
    },
    "27": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)",
        "lifted%return#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)",
        "tmp%5#0"
      ]
    },
    "30": {
      "op": "match main_oh_no_route@4 main_oh_yes_route@5",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "36": {
      "op": "err"
    },
    "37": {
      "block": "main_oh_yes_route@5",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "38": {
      "block": "main_oh_no_route@4",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "39": {
      "block": "main___algopy_default_create@10",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%6#0"
      ]
    },
    "41": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%7#0"
      ]
    },
    "42": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "44": {
      "op": "!",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "45": {
      "op": "&&",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%10#0"
      ]
    },
    "46": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    }
  }
}