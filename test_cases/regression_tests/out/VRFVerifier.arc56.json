{
    "name": "VRFVerifier",
    "structs": {},
    "methods": [
        {
            "name": "verify",
            "args": [
                {
                    "type": "byte[]",
                    "name": "message"
                },
                {
                    "type": "byte[]",
                    "name": "proof"
                },
                {
                    "type": "byte[]",
                    "name": "pk"
                }
            ],
            "returns": {
                "type": "(byte[],bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        29
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        100
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        32
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGJ5dGVjYmxvY2sgMHgwNjgxMDEKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvYnJhbmNoX3RvX3Byb3RvLnB5OjQKICAgIC8vIGNsYXNzIFZSRlZlcmlmaWVyKEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4NmU1MGJkOTkgLy8gbWV0aG9kICJ2ZXJpZnkoYnl0ZVtdLGJ5dGVbXSxieXRlW10pKGJ5dGVbXSxib29sKSIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdmVyaWZ5X3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIGVycgoKbWFpbl92ZXJpZnlfcm91dGVAMzoKICAgIC8vIHJlZ3Jlc3Npb25fdGVzdHMvYnJhbmNoX3RvX3Byb3RvLnB5OjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JyYW5jaF90b19wcm90by5weTo0CiAgICAvLyBjbGFzcyBWUkZWZXJpZmllcihBUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZXh0cmFjdCAyIDAKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAzCiAgICBleHRyYWN0IDIgMAogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9icmFuY2hfdG9fcHJvdG8ucHk6NQogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICBjYWxsc3ViIHZlcmlmeQogICAgZGlnIDEKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgMgogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHgwMAogICAgcHVzaGludCAwIC8vIDAKICAgIHVuY292ZXIgMwogICAgc2V0Yml0CiAgICBwdXNoYnl0ZXMgMHgwMDAzCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gcmVncmVzc2lvbl90ZXN0cy9icmFuY2hfdG9fcHJvdG8ucHk6NAogICAgLy8gY2xhc3MgVlJGVmVyaWZpZXIoQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5yZWdyZXNzaW9uX3Rlc3RzLmJyYW5jaF90b19wcm90by5WUkZWZXJpZmllci52ZXJpZnkobWVzc2FnZTogYnl0ZXMsIHByb29mOiBieXRlcywgcGs6IGJ5dGVzKSAtPiBieXRlcywgdWludDY0Ogp2ZXJpZnk6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JyYW5jaF90b19wcm90by5weTo1LTYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgLy8gZGVmIHZlcmlmeShzZWxmLCBtZXNzYWdlOiBCeXRlcywgcHJvb2Y6IEJ5dGVzLCBwazogQnl0ZXMpIC0+IHR1cGxlW0J5dGVzLCBib29sXToKICAgIHByb3RvIDMgMgoKdmVyaWZ5X3doaWxlX3RvcEAyOgogICAgcHVzaGludCAxMDAxMCAvLyAxMDAxMAogICAgZ2xvYmFsIE9wY29kZUJ1ZGdldAogICAgPgogICAgYnogdmVyaWZ5X2FmdGVyX3doaWxlQDcKICAgIGl0eG5fYmVnaW4KICAgIHB1c2hpbnQgNiAvLyBhcHBsCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KICAgIGl0eG5fZmllbGQgT25Db21wbGV0aW9uCiAgICBieXRlY18wIC8vIDB4MDY4MTAxCiAgICBpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQogICAgYnl0ZWNfMCAvLyAweDA2ODEwMQogICAgaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQogICAgZ2xvYmFsIE1pblR4bkZlZQogICAgaXR4bl9maWVsZCBGZWUKICAgIGl0eG5fc3VibWl0CiAgICBiIHZlcmlmeV93aGlsZV90b3BAMgoKdmVyaWZ5X2FmdGVyX3doaWxlQDc6CiAgICAvLyByZWdyZXNzaW9uX3Rlc3RzL2JyYW5jaF90b19wcm90by5weTo4CiAgICAvLyByZXR1cm4gb3AudnJmX3ZlcmlmeShvcC5WcmZWZXJpZnkuVnJmQWxnb3JhbmQsIG1lc3NhZ2UsIHByb29mLCBwaykKICAgIGZyYW1lX2RpZyAtMwogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIHZyZl92ZXJpZnkgVnJmQWxnb3JhbmQKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiYBAwaBATEbQQBQgARuUL2ZNhoAjgEAAQAxGRREMRhENhoBVwIANhoCVwIANhoDVwIAiAAySwEVFlcGAk8CUIABAIEATwNUgAIAA0xQTFCABBUffHVMULCBAUMxGUD/uDEYFESBAUOKAwKBmk4yDA1BABexgQayEIEFshkosh4osh8yALIBs0L/4Iv9i/6L/9AAiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}