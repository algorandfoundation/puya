// Op                                                                                                 Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // regression_tests/jira_ak_752.py:12
        // class Verifier(algopy.ARC4Contract):
        txn NumAppArgs                                                                                tmp%0#1
        bz main_bare_routing@6 ; b main_abi_routing@2

    main_abi_routing@2:
        // regression_tests/jira_ak_752.py:12
        // class Verifier(algopy.ARC4Contract):
        txna ApplicationArgs 0                                                                        tmp%2#0
        method verify(byte[32][])byte[]                                                               tmp%2#0,Method(verify(byte[32][])byte[])
        l-load tmp%2#0 1                                                                              Method(verify(byte[32][])byte[]),tmp%2#0
        match main_verify_route@3 ; b main_after_if_else@10

    main_verify_route@3:
        // regression_tests/jira_ak_752.py:13
        // @abimethod
        txn OnCompletion                                                                              tmp%3#0
        !                                                                                             tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                             tmp%5#0
        assert // can only call when not creating
        // regression_tests/jira_ak_752.py:12
        // class Verifier(algopy.ARC4Contract):
        txna ApplicationArgs 1                                                                        reinterpret_Encoded(len+uint8[32][])%0#0
        // regression_tests/jira_ak_752.py:13
        // @abimethod
        callsub verify                                                                                tmp%7#0
        l-load-copy tmp%7#0 0                                                                         tmp%7#0,tmp%7#0 (copy)
        len                                                                                           tmp%7#0,aggregate%length%0#0
        itob                                                                                          tmp%7#0,aggregate%as_bytes%0#0
        extract 6 2                                                                                   tmp%7#0,aggregate%length_uint16%0#0
        l-load tmp%7#0 1                                                                              aggregate%length_uint16%0#0,tmp%7#0
        concat                                                                                        aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                               aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                                          0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                        tmp%9#0
        log
        int 1                                                                                         tmp%0#0
        x-store tmp%0#0                                                                               (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.regression_tests.jira_ak_752.Verifier.__puya_arc4_router__@11 (洧뎶) tmp%0#0 | 

    main_bare_routing@6:
        // regression_tests/jira_ak_752.py:12
        // class Verifier(algopy.ARC4Contract):
        txn OnCompletion                                                                              tmp%10#0
        bz main___algopy_default_create@7 ; b main_after_if_else@10

    main___algopy_default_create@7:
        txn ApplicationID                                                                             tmp%11#0
        !                                                                                             tmp%12#0
        assert // can only call when creating
        int 1                                                                                         tmp%0#0
        x-store tmp%0#0                                                                               (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.regression_tests.jira_ak_752.Verifier.__puya_arc4_router__@11 (洧뎶) tmp%0#0 | 

    main_after_if_else@10:
        // regression_tests/jira_ak_752.py:12
        // class Verifier(algopy.ARC4Contract):
        int 0                                                                                         tmp%0#0
        x-store tmp%0#0                                                                               (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.regression_tests.jira_ak_752.Verifier.__puya_arc4_router__@11 (洧뎶) tmp%0#0 | 

    main_after_inlined_test_cases.regression_tests.jira_ak_752.Verifier.__puya_arc4_router__@11:      (洧뎶) tmp%0#0 |
        x-load tmp%0#0                                                                                tmp%0#0
        return


// test_cases.regression_tests.jira_ak_752.Verifier.verify(proof: bytes) -> bytes:
subroutine verify:
    verify_block@0:                                                                                   (洧도) proof#0 |
        // regression_tests/jira_ak_752.py:18
        // x = proof[8].bytes  # ok
        p-load proof#0                                                                                (洧도) proof#0 | proof#0 (copy)
        int 258                                                                                       (洧도) proof#0 | proof#0 (copy),258
        int 32                                                                                        (洧도) proof#0 | proof#0 (copy),258,32
        extract3                                                                                      (洧도) proof#0 | x#0
        // regression_tests/jira_ak_752.py:19
        // y = proof[6].bytes + proof[7].bytes  # ok
        p-load proof#0                                                                                (洧도) proof#0 | x#0,proof#0 (copy)
        extract 194 32                                                                                (洧도) proof#0 | x#0,aggregate%encoded_element%1#0
        p-load proof#0                                                                                (洧도) proof#0 | x#0,aggregate%encoded_element%1#0,proof#0 (copy)
        extract 226 32                                                                                (洧도) proof#0 | x#0,aggregate%encoded_element%1#0,aggregate%encoded_element%2#0
        l-load aggregate%encoded_element%1#0 1                                                        (洧도) proof#0 | x#0,aggregate%encoded_element%2#0,aggregate%encoded_element%1#0
        l-load-copy aggregate%encoded_element%2#0 1                                                   (洧도) proof#0 | x#0,aggregate%encoded_element%2#0,aggregate%encoded_element%1#0,aggregate%encoded_element%2#0 (copy)
        concat                                                                                        (洧도) proof#0 | x#0,aggregate%encoded_element%2#0,y#0
        // regression_tests/jira_ak_752.py:20
        // z = proof[7].bytes + proof[8].bytes  # Invalid immediate, expected value between 0 and 255
        l-load aggregate%encoded_element%2#0 1                                                        (洧도) proof#0 | x#0,y#0,aggregate%encoded_element%2#0
        l-load-copy x#0 2                                                                             (洧도) proof#0 | x#0,y#0,aggregate%encoded_element%2#0,x#0 (copy)
        concat                                                                                        (洧도) proof#0 | x#0,y#0,z#0
        // regression_tests/jira_ak_752.py:22
        // return x + y + z
        l-load x#0 2                                                                                  (洧도) proof#0 | y#0,z#0,x#0
        l-load y#0 2                                                                                  (洧도) proof#0 | z#0,x#0,y#0
        concat                                                                                        (洧도) proof#0 | z#0,tmp%2#0
        l-load z#0 1                                                                                  (洧도) proof#0 | tmp%2#0,z#0
        concat                                                                                        (洧도) proof#0 | tmp%3#0
        retsub                                                                                        tmp%3#0


