main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@6
    block@2: // abi_routing_L12
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        let eq%tmp%2#0: bool = (== tmp%2#0 method "verify(byte[32][])byte[]")
        (assert eq%tmp%2#0)
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        test_cases.regression_tests.jira_ak_752.Verifier.verify[routing]()
        fail
    block@6: // bare_routing_L12
        let tmp%7#0: uint64 = (txn OnCompletion)
        let not%tmp%7#0: bool = (! tmp%7#0)
        (assert not%tmp%7#0)
        let tmp%8#0: uint64 = (txn ApplicationID)
        let tmp%9#0: bool = (! tmp%8#0)
        (assert tmp%9#0) // can only call when creating
        exit 1u

subroutine test_cases.regression_tests.jira_ak_752.Verifier.verify[routing]() -> void:
    block@0: // L13
        let proof#0: Encoded(len+uint8[32][]) = (txna ApplicationArgs 1)
        let x#0: bytes = (extract3 proof#0 258u 32u)
        let aggregate%encoded_element%1#0: bytes = ((extract 194 32) proof#0)
        let aggregate%encoded_element%2#0: bytes = ((extract 226 32) proof#0)
        let y#0: bytes = (concat aggregate%encoded_element%1#0 aggregate%encoded_element%2#0)
        let z#0: bytes = (concat aggregate%encoded_element%2#0 x#0)
        let tmp%2#0: bytes = (concat x#0 y#0)
        let tmp%3#0: bytes = (concat tmp%2#0 z#0)
        let aggregate%length%0#0: uint64 = (len tmp%3#0)
        let aggregate%as_bytes%0#0: bytes[8] = (itob aggregate%length%0#0)
        let aggregate%length_uint16%0#0: bytes = ((extract 6 2) aggregate%as_bytes%0#0)
        let aggregate%encoded_value%0#0: bytes = (concat aggregate%length_uint16%0#0 tmp%3#0)
        let tmp%2#0: bytes = (concat 0x151f7c75 aggregate%encoded_value%0#0)
        (log tmp%2#0)
        exit 1u