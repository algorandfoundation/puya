{
  "version": 3,
  "sources": [
    "../issue_118.py"
  ],
  "mappings": ";;;;;;;;;;;;AAIA;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAEK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAFL;;AAAA;AAAA;;;;;;;AAEK;;;AAGY;;AAAL;AAAA;AADG;;;AAAA;AAAA;;AAAA;AAAA;AAGJ;AAAA;AAAiB;;AAAjB;AAAX;;;AACmB;AAAA;AANd;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOU;AAAA;AAPV",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x00030000"
    },
    "12": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "14": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "17": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "20": {
      "op": "pushbytes 0xbc66eb62 // method \"verify(uint256[])(bool,string)\"",
      "defined_out": [
        "Method(verify(uint256[])(bool,string))",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(verify(uint256[])(bool,string))"
      ]
    },
    "26": {
      "op": "==",
      "defined_out": [
        "eq%tmp%2#0"
      ],
      "stack_out": [
        "eq%tmp%2#0"
      ]
    },
    "27": {
      "op": "assert",
      "stack_out": []
    },
    "28": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "30": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "31": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "32": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "34": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "35": {
      "op": "b verify"
    },
    "38": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "40": {
      "op": "!",
      "defined_out": [
        "not%tmp%7#0"
      ],
      "stack_out": [
        "not%tmp%7#0"
      ]
    },
    "41": {
      "op": "assert",
      "stack_out": []
    },
    "42": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "44": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "45": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "46": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "47": {
      "op": "return",
      "stack_out": []
    },
    "48": {
      "subroutine": "test_cases.regression_tests.issue_118.Issue118.verify[routing]",
      "params": {},
      "block": "verify",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "values#0"
      ],
      "stack_out": [
        "values#0"
      ]
    },
    "51": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1",
        "values#0"
      ],
      "stack_out": [
        "values#0",
        "tmp%0#1"
      ]
    },
    "53": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1",
        "values#0"
      ],
      "stack_out": [
        "values#0",
        "tmp%0#1",
        "0"
      ]
    },
    "54": {
      "op": "!=",
      "defined_out": [
        "tmp%1#1",
        "values#0"
      ],
      "stack_out": [
        "values#0",
        "tmp%1#1"
      ]
    },
    "55": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "tmp%1#1",
        "values#0"
      ],
      "stack_out": [
        "values#0",
        "tmp%1#1",
        "0x00"
      ]
    },
    "58": {
      "op": "intc_0 // 0",
      "stack_out": [
        "values#0",
        "tmp%1#1",
        "0x00",
        "0"
      ]
    },
    "59": {
      "op": "uncover 2",
      "stack_out": [
        "values#0",
        "0x00",
        "0",
        "tmp%1#1"
      ]
    },
    "61": {
      "op": "setbit",
      "defined_out": [
        "val1#0",
        "values#0"
      ],
      "stack_out": [
        "values#0",
        "val1#0"
      ]
    },
    "62": {
      "op": "swap",
      "defined_out": [
        "val1#0",
        "values#0"
      ],
      "stack_out": [
        "val1#0",
        "values#0"
      ]
    },
    "63": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val1#0",
        "values#0",
        "0"
      ]
    },
    "64": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "val1#0"
      ],
      "stack_out": [
        "val1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "65": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "val1#0"
      ],
      "stack_out": [
        "val1#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "67": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0",
        "val1#0"
      ],
      "stack_out": [
        "val1#0",
        "tmp%4#0"
      ]
    },
    "68": {
      "op": "bz verify_after_if_else@3",
      "stack_out": [
        "val1#0"
      ]
    },
    "71": {
      "op": "bytec_0 // 0x00030000",
      "defined_out": [
        "0x00030000",
        "val1#0"
      ],
      "stack_out": [
        "val1#0",
        "0x00030000"
      ]
    },
    "72": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "73": {
      "block": "verify_after_inlined_test_cases.regression_tests.issue_118.Issue118.verify@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75"
      ]
    },
    "79": {
      "op": "swap",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0"
      ],
      "stack_out": [
        "0x151f7c75",
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "81": {
      "op": "log",
      "stack_out": []
    },
    "82": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "83": {
      "op": "return",
      "stack_out": []
    },
    "84": {
      "block": "verify_after_if_else@3",
      "stack_in": [
        "val1#0"
      ],
      "op": "bytec_0 // 0x00030000",
      "defined_out": [
        "0x00030000",
        "val1#0"
      ],
      "stack_out": [
        "val1#0",
        "0x00030000"
      ]
    },
    "85": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "86": {
      "op": "b verify_after_inlined_test_cases.regression_tests.issue_118.Issue118.verify@4"
    }
  }
}