{
  "version": 3,
  "sources": [
    "../slot_allocation_inlining.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBU;;;AAAA;AAAA;;AAAA;AACN;AAAA;;;AACO;AAAA;AAAA;;AAAA;AAAc;AAAd;AAXH;AAcP;;;AAEY;;;AAAb;;AAAA;AAAA;AAAA;;;AACmB;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.regression_tests.slot_allocation_inlining.SlotAllocationInlining.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 32"
    },
    "5": {
      "op": "bytecblock 0x068101"
    },
    "11": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "45": {
      "op": "store 0"
    },
    "47": {
      "block": "main_while_top@2",
      "stack_in": [],
      "op": "pushint 810 // 810",
      "defined_out": [
        "810"
      ],
      "stack_out": [
        "810"
      ]
    },
    "50": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "810",
        "tmp%1#0"
      ],
      "stack_out": [
        "810",
        "tmp%1#0"
      ]
    },
    "52": {
      "op": ">",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "53": {
      "op": "bz main_after_while@7",
      "stack_out": []
    },
    "56": {
      "op": "itxn_begin"
    },
    "57": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "59": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "61": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "DeleteApplication"
      ]
    },
    "63": {
      "op": "itxn_field OnCompletion",
      "stack_out": []
    },
    "65": {
      "op": "bytec_0 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "0x068101"
      ]
    },
    "66": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": []
    },
    "68": {
      "op": "bytec_0 // 0x068101",
      "stack_out": [
        "0x068101"
      ]
    },
    "69": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": []
    },
    "71": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "72": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "74": {
      "op": "itxn_submit"
    },
    "75": {
      "op": "b main_while_top@2"
    },
    "78": {
      "block": "main_after_while@7",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "81": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "82": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0x"
      ]
    },
    "84": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "85": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "86": {
      "callsub": "test_cases.regression_tests.slot_allocation_inlining.append_to_array",
      "op": "callsub append_to_array",
      "stack_out": [
        "arr#0"
      ]
    },
    "89": {
      "op": "loads",
      "defined_out": [
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%slot_contents%0#0"
      ]
    },
    "90": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%0#0"
      ]
    },
    "91": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "93": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%0#0"
      ]
    },
    "94": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "aggregate%array_len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%0#0",
        "32"
      ]
    },
    "95": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "96": {
      "error": "expected array of length 32",
      "op": "return // on error: expected array of length 32",
      "defined_out": [],
      "stack_out": []
    },
    "97": {
      "subroutine": "test_cases.regression_tests.slot_allocation_inlining.append_to_array",
      "params": {
        "arr#0": "uint64"
      },
      "block": "append_to_array",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "100": {
      "op": "txn Sender"
    },
    "102": {
      "op": "intc_0 // 0",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "103": {
      "block": "append_to_array_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "105": {
      "op": "intc_1 // 32",
      "defined_out": [
        "32",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "32"
      ]
    },
    "106": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "107": {
      "op": "bz append_to_array_after_for@4",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "110": {
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "112": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "114": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "115": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "117": {
      "op": "getbyte",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "118": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "120": {
      "op": "loads",
      "defined_out": [
        "item_index_internal%0#0",
        "slot_contents%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "slot_contents%0#0"
      ]
    },
    "121": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%0#0",
        "tmp%1#0"
      ]
    },
    "122": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "item_index_internal%0#0",
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "123": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "concat%0#0"
      ]
    },
    "124": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "126": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "127": {
      "op": "stores",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "128": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "130": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "131": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "133": {
      "op": "b append_to_array_for_header@1"
    },
    "136": {
      "block": "append_to_array_after_for@4",
      "stack_in": [
        "tmp%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "137": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "139": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "140": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "142": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "145": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "147": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "148": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "149": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "150": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "152": {
      "retsub": true,
      "op": "retsub"
    }
  }
}