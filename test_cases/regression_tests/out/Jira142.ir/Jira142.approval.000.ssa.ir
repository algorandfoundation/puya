main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.regression_tests.jira_142.Jira142.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.regression_tests.jira_142.Jira142.__puya_arc4_router__() -> bool:
    block@0: // L8
        let tmp%0#0: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#0)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        switch tmp%4#0 {0u => block@1, 1u => block@5, 2u => block@8, 3u => block@9, 4u => block@10, 5u => block@11, 6u => block@12, 7u => block@13, 8u => block@14, 9u => block@15, 10u => block@16, 11u => block@17, * => block@18}
    block@1: // switch_case_0_L8
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "battle()void" => block@2, * => block@3}
    block@2: // battle_route_L13
        test_cases.regression_tests.jira_142.Jira142.battle[routing]()
        goto block@4
    block@3: // switch_case_default_L8
        goto block@4
    block@4: // switch_case_next_L8
        fail // this contract does not implement the given ABI method for call NoOp
    block@5: // switch_case_1_L8
        let tmp%6#0: uint64 = (txn NumAppArgs)
        let tmp%7#0: bool = (== tmp%6#0 0u)
        goto tmp%7#0 ? block@6 : block@7
    block@6: // __algopy_default_create_L1
        test_cases.regression_tests.jira_142.Jira142.__algopy_default_create()
        exit 1u
    block@7: // else_body_L8
        fail // this contract does not implement the given ABI method for create NoOp
    block@8: // switch_case_2_L8
        goto block@18
    block@9: // switch_case_3_L8
        goto block@18
    block@10: // switch_case_4_L8
        goto block@18
    block@11: // switch_case_5_L8
        goto block@18
    block@12: // switch_case_6_L8
        goto block@18
    block@13: // switch_case_7_L8
        goto block@18
    block@14: // switch_case_8_L8
        goto block@18
    block@15: // switch_case_9_L8
        goto block@18
    block@16: // switch_case_10_L8
        goto block@18
    block@17: // switch_case_11_L8
        goto block@18
    block@18: // switch_case_default_L8
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

subroutine test_cases.regression_tests.jira_142.Jira142.battle[routing]() -> void:
    block@0: // L13
        test_cases.regression_tests.jira_142.Jira142.battle()
        exit 1u

subroutine test_cases.regression_tests.jira_142.Jira142.some_subroutine(char: Encoded(uint64)) -> Encoded(uint64):
    block@0: // L9
        let char%is_original#0: bool = 1u
        let char%out#0: Encoded(uint64) = char#0
        return char%out#0

subroutine test_cases.regression_tests.jira_142.Jira142.battle() -> void:
    block@0: // L13
        let tmp%0#0: Encoded(uint64) = bytes_encode<(uint64)>(0x00000000000000c8)
        let my_struct#0: Encoded(uint64) = tmp%0#0
        let tuple_item%0#0: Encoded(uint64) = extract_value(my_struct#0, 0)
        let reinterpret_biguint%0#0: biguint = tuple_item%0#0
        let reinterpret_biguint%1#0: biguint = 0x0000000000000064
        let tmp%1#0: bool = (b> reinterpret_biguint%0#0 reinterpret_biguint%1#0)
        goto tmp%1#0 ? block@1 : block@2
    block@1: // if_body_L18
        let some_subroutine%0#0: Encoded(uint64) = test_cases.regression_tests.jira_142.Jira142.some_subroutine(my_struct#0)
        let my_struct#1: Encoded(uint64) = some_subroutine%0#0
        goto block@2
    block@2: // after_if_else_L17
        let my_struct#2: Encoded(uint64) = Ï†(my_struct#0 <- block@0, my_struct#1 <- block@1)
        (log my_struct#2)
        return 

subroutine test_cases.regression_tests.jira_142.Jira142.__algopy_default_create() -> void:
    block@0: // L1
        return 