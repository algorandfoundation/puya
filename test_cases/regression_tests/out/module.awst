contract Issue194
{
  approval_program(): bool
  {
    assert(1u != 0u == 2u != 0u)
    two: uint64 = 2u
    switch (two != 0u) {
      case true: {
        return true
      }
      case _: {
        return false
      }
    }
  }
  
  clear_state_program(): bool
  {
    return true
  }
}

contract Issue118 extends (algopy.arc4.ARC4Contract)
{
  baremethod __algopy_default_create(): void
  {
  }
  
  abimethod verify(values: arc4.dynamic_array<arc4.uint256>): arc4.tuple<arc4.bool,arc4.dynamic_array<arc4.uint8>>
  {
    val1: arc4.bool = arc4_encode(txn<NumAppArgs>() != 0u, arc4.bool)
    if (extract_uint16(values, 0u) != 2u) {
      return arc4_encode((val1, arc4_encode('', arc4.dynamic_array<arc4.uint8>)), arc4.tuple<arc4.bool,arc4.dynamic_array<arc4.uint8>>)
    }
    return arc4_encode((val1, arc4_encode('', arc4.dynamic_array<arc4.uint8>)), arc4.tuple<arc4.bool,arc4.dynamic_array<arc4.uint8>>)
  }
}