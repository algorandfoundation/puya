{
  "version": 3,
  "sources": [
    "../biguint_opt.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;AAaK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;AAZA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;AACK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEkC;AACvB;;AAAA;AAAA;AAAX;;;AAAA;;;AADkC;AAMD;AAAA;AAAA;;AAAA;AAAT;AAAZ;;;;;AAEJ;;AAAA;;AAAA;;;;AAMqB;AAAmB;AAAnB;AAAT;AAEZ",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x 0x151f7c75 0x010000000000000000"
    },
    "23": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "b main_block@0"
    },
    "27": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "30": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "32": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "33": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "34": {
      "op": "bz main_bare_routing@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "37": {
      "op": "b main_abi_routing@2"
    },
    "40": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "43": {
      "op": "pushbytes 0x58db7ce9 // method \"get_abs_bound1(uint64)uint64\"",
      "defined_out": [
        "Method(get_abs_bound1(uint64)uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(get_abs_bound1(uint64)uint64)"
      ]
    },
    "49": {
      "op": "pushbytes 0xc95c01ca // method \"get_abs_bound2()uint64\"",
      "defined_out": [
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)"
      ]
    },
    "55": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "Method(get_abs_bound1(uint64)uint64)",
        "Method(get_abs_bound2()uint64)",
        "tmp%2#0"
      ]
    },
    "57": {
      "op": "match main_get_abs_bound1_route@3 main_get_abs_bound2_route@4",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "63": {
      "op": "b main_switch_case_default@5"
    },
    "66": {
      "block": "main_switch_case_default@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@6"
    },
    "69": {
      "block": "main_switch_case_next@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "72": {
      "block": "main_after_if_else@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ]
    },
    "73": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "b main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__@12"
    },
    "78": {
      "block": "main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "79": {
      "block": "main_get_abs_bound2_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "81": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "NoOp"
      ]
    },
    "82": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "83": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "84": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0",
        "0"
      ]
    },
    "87": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "88": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "89": {
      "callsub": "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.get_abs_bound2",
      "op": "callsub get_abs_bound2",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "92": {
      "op": "itob",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "93": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0",
        "0x151f7c75"
      ]
    },
    "94": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%16#0"
      ]
    },
    "96": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "97": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "98": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ]
    },
    "99": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "101": {
      "op": "b main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__@12"
    },
    "104": {
      "block": "main_get_abs_bound1_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "106": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "108": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "109": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "111": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "112": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "113": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "114": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "117": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "118": {
      "callsub": "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.get_abs_bound1",
      "op": "callsub get_abs_bound1",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "121": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "122": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "123": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%9#0"
      ]
    },
    "125": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "126": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "127": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ]
    },
    "128": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "op": "b main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__@12"
    },
    "133": {
      "block": "main_bare_routing@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "135": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0",
        "0"
      ]
    },
    "136": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%18#0"
      ]
    },
    "138": {
      "op": "match main___algopy_default_create@8",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "142": {
      "op": "b main_switch_case_default@9"
    },
    "145": {
      "block": "main_switch_case_default@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@10"
    },
    "148": {
      "block": "main_switch_case_next@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "151": {
      "block": "main___algopy_default_create@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "0"
      ]
    },
    "154": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "155": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "156": {
      "op": "b main_block@13"
    },
    "159": {
      "block": "main_block@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__algopy_default_create@14"
    },
    "162": {
      "block": "main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__algopy_default_create@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__%0#0"
      ]
    },
    "163": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "165": {
      "op": "b main_after_inlined_test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.__puya_arc4_router__@12"
    },
    "168": {
      "subroutine": "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.get_abs_bound1",
      "params": {
        "upper_bound#0": "uint64"
      },
      "block": "get_abs_bound1",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "171": {
      "op": "b get_abs_bound1_block@0"
    },
    "174": {
      "block": "get_abs_bound1_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "175": {
      "op": "frame_dig -1",
      "defined_out": [
        "upper_bound#0 (copy)"
      ],
      "stack_out": [
        "abs_bound#0",
        "upper_bound#0 (copy)"
      ]
    },
    "177": {
      "op": "intc_0 // 0",
      "stack_out": [
        "abs_bound#0",
        "upper_bound#0 (copy)",
        "0"
      ]
    },
    "178": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%0#0"
      ]
    },
    "179": {
      "op": "bz get_abs_bound1_after_if_else@2",
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "182": {
      "op": "b get_abs_bound1_if_body@1"
    },
    "185": {
      "block": "get_abs_bound1_if_body@1",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "abs_bound#0",
        "0"
      ]
    },
    "186": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%1#0"
      ]
    },
    "187": {
      "op": "bytec_2 // 0x010000000000000000",
      "defined_out": [
        "0x010000000000000000",
        "tmp%1#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%1#0",
        "0x010000000000000000"
      ]
    },
    "188": {
      "op": "uncover 1",
      "stack_out": [
        "abs_bound#0",
        "0x010000000000000000",
        "tmp%1#0"
      ]
    },
    "190": {
      "op": "b-",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%2#0"
      ]
    },
    "191": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "tmp%3#0"
      ]
    },
    "192": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "194": {
      "op": "b get_abs_bound1_after_if_else@2"
    },
    "197": {
      "block": "get_abs_bound1_after_if_else@2",
      "stack_in": [
        "abs_bound#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "abs_bound#0"
      ],
      "stack_out": [
        "abs_bound#0",
        "abs_bound#0"
      ]
    },
    "199": {
      "op": "uncover 1"
    },
    "201": {
      "retsub": true,
      "op": "retsub"
    },
    "202": {
      "subroutine": "test_cases.regression_tests.biguint_opt.ConstBigIntToIntOverflow.get_abs_bound2",
      "params": {},
      "block": "get_abs_bound2",
      "stack_in": [],
      "op": "b get_abs_bound2_block@0"
    },
    "205": {
      "block": "get_abs_bound2_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x010000000000000000",
      "defined_out": [
        "0x010000000000000000"
      ],
      "stack_out": [
        "0x010000000000000000"
      ]
    },
    "206": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "0x010000000000000000"
      ],
      "stack_out": [
        "0x010000000000000000",
        "0x"
      ]
    },
    "207": {
      "op": "b-",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "208": {
      "op": "btoi",
      "defined_out": [
        "abs_bound#0"
      ],
      "stack_out": [
        "abs_bound#0"
      ]
    },
    "209": {
      "retsub": true,
      "op": "retsub"
    }
  }
}