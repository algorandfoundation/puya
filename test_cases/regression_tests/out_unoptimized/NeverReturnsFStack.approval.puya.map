{
  "version": 3,
  "sources": [
    "../never_returns.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAeA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AACK;;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAL;;;;;;;;;;;AAEiB;;;AAMT;AAAJ;;AACG;;AAAmB;AAAnB;AAAP;;;AAAA;;;AACY;;AAAJ;;;;;AAEE;AAAN;;AACkB;;AAAA;;AAAP;AAAf;AAAe;AAAP;;;;;AAAO;;AAAA;;AAAA;AAAf;;;AAAA;;;AACQ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACU;AAAP;;;;;AAAX;;;AAAA;;;AACY;;AAAO;AAAP;;;;;;;;;;;;;AAHG;;AAAA;AAAA;AAAA;;;;;AAKP;;;;;;;;;;;;;;;;;;;;AAAJ;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AACA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"\""
    },
    "8": {
      "op": "b main_block@0"
    },
    "11": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "14": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "16": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "17": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "18": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "21": {
      "op": "b main_abi_routing@2"
    },
    "24": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "27": {
      "op": "pushbytes 0x3f27f4a4 // method \"method()uint64\"",
      "defined_out": [
        "Method(method()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(method()uint64)"
      ]
    },
    "33": {
      "op": "uncover 1",
      "stack_out": [
        "Method(method()uint64)",
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "match main_method_route@3",
      "stack_out": []
    },
    "39": {
      "op": "b main_switch_case_default@4"
    },
    "42": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "b main_switch_case_next@5"
    },
    "45": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "48": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "49": {
      "block": "main_method_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "51": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "52": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "53": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "54": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "56": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "57": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "58": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "59": {
      "callsub": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method[routing]",
      "op": "callsub method"
    },
    "62": {
      "op": "b main_switch_case_next@5"
    },
    "65": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "67": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "68": {
      "op": "uncover 1",
      "stack_out": [
        "0",
        "tmp%7#0"
      ]
    },
    "70": {
      "op": "match main___algopy_default_create@7",
      "stack_out": []
    },
    "74": {
      "op": "b main_switch_case_default@8"
    },
    "77": {
      "block": "main_switch_case_default@8",
      "stack_in": [],
      "op": "b main_switch_case_next@9"
    },
    "80": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "83": {
      "block": "main___algopy_default_create@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "85": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "86": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "87": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "88": {
      "op": "b main_block@12"
    },
    "91": {
      "block": "main_block@12",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__algopy_default_create@13"
    },
    "94": {
      "block": "main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "95": {
      "op": "return",
      "stack_out": []
    },
    "96": {
      "subroutine": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method[routing]",
      "params": {},
      "block": "method",
      "stack_in": [],
      "op": "b method_block@0"
    },
    "99": {
      "block": "method_block@0",
      "stack_in": [],
      "callsub": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method",
      "op": "callsub test_cases.regression_tests.never_returns.NeverReturnsFStack.method",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "103": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "109": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "111": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "112": {
      "op": "log",
      "stack_out": []
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "114": {
      "op": "return",
      "stack_out": []
    },
    "115": {
      "subroutine": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method",
      "params": {},
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "118": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0"
      ]
    },
    "119": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0"
      ]
    },
    "120": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9"
      ]
    },
    "121": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0"
      ]
    },
    "122": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "123": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_block@0"
    },
    "126": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_block@0",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_block@1"
    },
    "129": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_block@1",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "1"
      ]
    },
    "130": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "132": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%0#0"
      ]
    },
    "134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%0#0",
        "0"
      ]
    },
    "135": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%1#0"
      ]
    },
    "136": {
      "op": "bz test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_if_else@3",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "139": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_if_body@2"
    },
    "142": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_if_body@2",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "2"
      ]
    },
    "144": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "146": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_if_else@3"
    },
    "149": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_if_else@3",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "0"
      ]
    },
    "150": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "152": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%2#0"
      ]
    },
    "154": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "156": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "1"
      ]
    },
    "157": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "158": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "0"
      ]
    },
    "159": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "161": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_header@4"
    },
    "164": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_header@4",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "166": {
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "tmp%2#0"
      ]
    },
    "168": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "continue_looping%0#0"
      ]
    },
    "169": {
      "op": "bz test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_for@9",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "172": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_body@5"
    },
    "175": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_body@5",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "x#0"
      ]
    },
    "177": {
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "x#0",
        "idx#0"
      ]
    },
    "179": {
      "op": "dup",
      "defined_out": [
        "idx#0",
        "idx#0 (copy)",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "x#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "180": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "x#0",
        "idx#0 (copy)"
      ]
    },
    "182": {
      "op": "+",
      "defined_out": [
        "idx#0",
        "tmp%3#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "183": {
      "op": "frame_bury 4",
      "defined_out": [
        "idx#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "185": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "0"
      ]
    },
    "186": {
      "op": "==",
      "defined_out": [
        "idx#0",
        "tmp%4#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%4#0"
      ]
    },
    "187": {
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0",
        "one#0",
        "tmp%4#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%4#0",
        "one#0"
      ]
    },
    "189": {
      "op": "frame_bury 2",
      "defined_out": [
        "idx#0",
        "one#0",
        "tmp%4#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%4#0"
      ]
    },
    "191": {
      "op": "bz test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_if_else@7",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "194": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_if_body@6"
    },
    "197": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_if_body@6",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#0"
      ]
    },
    "199": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#0",
        "1"
      ]
    },
    "200": {
      "op": "+",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#0"
      ]
    },
    "201": {
      "op": "frame_bury 2",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "203": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_if_else@7"
    },
    "206": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_if_else@7",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "one#9"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#9"
      ]
    },
    "208": {
      "op": "frame_bury 1",
      "defined_out": [
        "one#9"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "210": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_footer@8"
    },
    "213": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_footer@8",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "215": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "1"
      ]
    },
    "216": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "217": {
      "op": "frame_bury 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "219": {
      "op": "b test_cases.regression_tests.never_returns.NeverReturnsFStack.method_for_header@4"
    },
    "222": {
      "block": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method_after_for@9",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "pushbytes \"you won't see this\"",
      "defined_out": [
        "\"you won't see this\""
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "\"you won't see this\""
      ]
    },
    "242": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "\"you won't see this\""
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "\"you won't see this\"",
        "\"\""
      ]
    },
    "243": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%6#0"
      ]
    },
    "244": {
      "op": "frame_dig 1",
      "defined_out": [
        "one#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%6#0",
        "one#0"
      ]
    },
    "246": {
      "op": "itob",
      "defined_out": [
        "one#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "one#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%8#0"
      ]
    },
    "248": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "249": {
      "op": "err"
    }
  }
}