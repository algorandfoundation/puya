{
  "version": 3,
  "sources": [
    "../never_returns.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAeA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;;;;;;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;AAEiB;;;AAMT;AAAJ;;AACG;;AAAmB;AAAnB;AAAP;;;AAAA;;;AACY;;AAAJ;;;;;AAEE;AAAN;;AACkB;;AAAA;;AAAP;AAAf;AAAe;AAAP;;;;;AAAO;;AAAA;;AAAA;AAAf;;;AAAA;;;AACQ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACU;AAAP;;;;;AAAX;;;AAAA;;;AACY;;AAAO;AAAP;;;;;;;;;;;;;AAHG;;AAAA;AAAA;AAAA;;;;;AAKP;;;;;;;;;;;;;;;;;;;;AAAJ;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AACA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"\""
    },
    "8": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "9": {
      "op": "b main_block@0"
    },
    "12": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "15": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "17": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "18": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "19": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "22": {
      "op": "b main_abi_routing@2"
    },
    "25": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "28": {
      "op": "pushbytes 0x3f27f4a4 // method \"method()uint64\"",
      "defined_out": [
        "Method(method()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(method()uint64)"
      ]
    },
    "34": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "Method(method()uint64)",
        "tmp%2#0"
      ]
    },
    "36": {
      "op": "match main_method_route@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "40": {
      "op": "b main_switch_case_default@4"
    },
    "43": {
      "block": "main_switch_case_default@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@5"
    },
    "46": {
      "block": "main_switch_case_next@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "49": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__%0#0"
      ]
    },
    "50": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "52": {
      "op": "b main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__@11"
    },
    "55": {
      "block": "main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "56": {
      "block": "main_method_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "58": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "59": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "60": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "61": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "63": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "64": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "65": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "66": {
      "callsub": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method",
      "op": "callsub method",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "69": {
      "op": "itob",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "70": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "76": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "78": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "79": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__%0#0"
      ]
    },
    "81": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "83": {
      "op": "b main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__@11"
    },
    "86": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "88": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0",
        "0"
      ]
    },
    "89": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%10#0"
      ]
    },
    "91": {
      "op": "match main___algopy_default_create@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "b main_switch_case_default@8"
    },
    "98": {
      "block": "main_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@9"
    },
    "101": {
      "block": "main_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "104": {
      "block": "main___algopy_default_create@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "106": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "0"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "108": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "109": {
      "op": "b main_block@12"
    },
    "112": {
      "block": "main_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__algopy_default_create@13"
    },
    "115": {
      "block": "main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__%0#0"
      ]
    },
    "116": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "118": {
      "op": "b main_after_inlined_test_cases.regression_tests.never_returns.NeverReturnsFStack.__puya_arc4_router__@11"
    },
    "121": {
      "subroutine": "test_cases.regression_tests.never_returns.NeverReturnsFStack.method",
      "params": {},
      "block": "method",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "124": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0"
      ]
    },
    "125": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0"
      ]
    },
    "126": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9"
      ]
    },
    "127": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0"
      ]
    },
    "128": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "129": {
      "op": "b method_block@0"
    },
    "132": {
      "block": "method_block@0",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "b method_block@1"
    },
    "135": {
      "block": "method_block@1",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "1"
      ]
    },
    "136": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "138": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%0#0"
      ]
    },
    "140": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%0#0",
        "0"
      ]
    },
    "141": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%1#0"
      ]
    },
    "142": {
      "op": "bz method_after_if_else@3",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "145": {
      "op": "b method_if_body@2"
    },
    "148": {
      "block": "method_if_body@2",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "2"
      ]
    },
    "150": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "152": {
      "op": "b method_after_if_else@3"
    },
    "155": {
      "block": "method_after_if_else@3",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "0"
      ]
    },
    "156": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "158": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%2#0"
      ]
    },
    "160": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "162": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "1"
      ]
    },
    "163": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "0"
      ]
    },
    "165": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "167": {
      "op": "b method_for_header@4"
    },
    "170": {
      "block": "method_for_header@4",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "172": {
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "tmp%2#0"
      ]
    },
    "174": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "continue_looping%0#0"
      ]
    },
    "175": {
      "op": "bz method_after_for@9",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "178": {
      "op": "b method_for_body@5"
    },
    "181": {
      "block": "method_for_body@5",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "x#0"
      ]
    },
    "183": {
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "x#0",
        "idx#0"
      ]
    },
    "185": {
      "op": "dup",
      "defined_out": [
        "idx#0",
        "idx#0 (copy)",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "x#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "186": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "x#0",
        "idx#0 (copy)"
      ]
    },
    "188": {
      "op": "+",
      "defined_out": [
        "idx#0",
        "tmp%3#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "tmp%3#0"
      ]
    },
    "189": {
      "op": "frame_bury 4",
      "defined_out": [
        "idx#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "0"
      ]
    },
    "192": {
      "op": "==",
      "defined_out": [
        "idx#0",
        "tmp%4#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%4#0"
      ]
    },
    "193": {
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0",
        "one#0",
        "tmp%4#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%4#0",
        "one#0"
      ]
    },
    "195": {
      "op": "frame_bury 2",
      "defined_out": [
        "idx#0",
        "one#0",
        "tmp%4#0",
        "x#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%4#0"
      ]
    },
    "197": {
      "op": "bz method_after_if_else@7",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "200": {
      "op": "b method_if_body@6"
    },
    "203": {
      "block": "method_if_body@6",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#0"
      ]
    },
    "205": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#0",
        "1"
      ]
    },
    "206": {
      "op": "+",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#0"
      ]
    },
    "207": {
      "op": "frame_bury 2",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "209": {
      "op": "b method_after_if_else@7"
    },
    "212": {
      "block": "method_after_if_else@7",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "one#9"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "one#9"
      ]
    },
    "214": {
      "op": "frame_bury 1",
      "defined_out": [
        "one#9"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "216": {
      "op": "b method_for_footer@8"
    },
    "219": {
      "block": "method_for_footer@8",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "221": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0",
        "1"
      ]
    },
    "222": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "idx#0"
      ]
    },
    "223": {
      "op": "frame_bury 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "225": {
      "op": "b method_for_header@4"
    },
    "228": {
      "block": "method_after_for@9",
      "stack_in": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ],
      "op": "pushbytes \"you won't see this\"",
      "defined_out": [
        "\"you won't see this\""
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "\"you won't see this\""
      ]
    },
    "248": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "\"you won't see this\""
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "\"you won't see this\"",
        "\"\""
      ]
    },
    "249": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%6#0"
      ]
    },
    "250": {
      "op": "frame_dig 1",
      "defined_out": [
        "one#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%6#0",
        "one#0"
      ]
    },
    "252": {
      "op": "itob",
      "defined_out": [
        "one#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "253": {
      "op": "concat",
      "defined_out": [
        "one#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0",
        "tmp%8#0"
      ]
    },
    "254": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "one#0",
        "one#9",
        "tmp%2#0",
        "x#0"
      ]
    },
    "255": {
      "op": "err"
    }
  }
}