{
  "version": 3,
  "sources": [
    "../jira_241.py"
  ],
  "mappings": ";;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAAA;AAKK;;;;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAJA;;;;;;;AAIA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "11": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "14": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "bz main___algopy_default_create@9",
      "stack_out": []
    },
    "18": {
      "op": "b main_abi_routing@2"
    },
    "21": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "23": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "24": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "25": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "29": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "30": {
      "op": "bz main_create_NoOp@7",
      "stack_out": []
    },
    "33": {
      "op": "b main_call_NoOp@3"
    },
    "36": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "39": {
      "op": "pushbytes 0x1e3e4374 // method \"oh_no(bool)void\"",
      "defined_out": [
        "Method(oh_no(bool)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(oh_no(bool)void)"
      ]
    },
    "45": {
      "op": "pushbytes 0xd7a938c9 // method \"oh_yes(bool)void\"",
      "defined_out": [
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)"
      ]
    },
    "51": {
      "op": "uncover 2",
      "stack_out": [
        "Method(oh_no(bool)void)",
        "Method(oh_yes(bool)void)",
        "tmp%6#0"
      ]
    },
    "53": {
      "op": "match main_oh_no_route@4 main_oh_yes_route@5",
      "stack_out": []
    },
    "59": {
      "op": "b main_switch_case_next@6"
    },
    "62": {
      "block": "main_switch_case_next@6",
      "stack_in": [],
      "op": "b main_after_if_else@8"
    },
    "65": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "68": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "69": {
      "block": "main_oh_yes_route@5",
      "stack_in": [],
      "callsub": "test_cases.regression_tests.jira_241.Jira241.oh_yes[routing]",
      "op": "callsub oh_yes"
    },
    "72": {
      "op": "b main_switch_case_next@6"
    },
    "75": {
      "block": "main_oh_no_route@4",
      "stack_in": [],
      "callsub": "test_cases.regression_tests.jira_241.Jira241.oh_no[routing]",
      "op": "callsub oh_no"
    },
    "78": {
      "op": "b main_switch_case_next@6"
    },
    "81": {
      "block": "main_create_NoOp@7",
      "stack_in": [],
      "op": "b main_after_if_else@8"
    },
    "84": {
      "block": "main___algopy_default_create@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "86": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "87": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "88": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "90": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "91": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "92": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "93": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "94": {
      "op": "b main_block@12"
    },
    "97": {
      "block": "main_block@12",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.regression_tests.jira_241.Jira241.__algopy_default_create@13"
    },
    "100": {
      "block": "main_after_inlined_test_cases.regression_tests.jira_241.Jira241.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "101": {
      "op": "return",
      "stack_out": []
    },
    "102": {
      "subroutine": "test_cases.regression_tests.jira_241.Jira241.oh_no[routing]",
      "params": {},
      "block": "oh_no",
      "stack_in": [],
      "op": "b oh_no_block@0"
    },
    "105": {
      "block": "oh_no_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "108": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(bool8)%0#0",
        "0"
      ]
    },
    "109": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "110": {
      "callsub": "test_cases.regression_tests.jira_241.Jira241.oh_no",
      "op": "callsub test_cases.regression_tests.jira_241.Jira241.oh_no",
      "stack_out": []
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "114": {
      "op": "return",
      "stack_out": []
    },
    "115": {
      "subroutine": "test_cases.regression_tests.jira_241.Jira241.oh_yes[routing]",
      "params": {},
      "block": "oh_yes",
      "stack_in": [],
      "op": "b oh_yes_block@0"
    },
    "118": {
      "block": "oh_yes_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(bool8)%0#0",
        "0"
      ]
    },
    "122": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "123": {
      "callsub": "test_cases.regression_tests.jira_241.Jira241.oh_yes",
      "op": "callsub test_cases.regression_tests.jira_241.Jira241.oh_yes",
      "stack_out": []
    },
    "126": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "127": {
      "op": "return",
      "stack_out": []
    },
    "128": {
      "subroutine": "test_cases.regression_tests.jira_241.Jira241.oh_no",
      "params": {
        "wrong_size#0": "uint64"
      },
      "block": "test_cases.regression_tests.jira_241.Jira241.oh_no",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "131": {
      "op": "b test_cases.regression_tests.jira_241.Jira241.oh_no_block@0"
    },
    "134": {
      "block": "test_cases.regression_tests.jira_241.Jira241.oh_no_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "135": {
      "subroutine": "test_cases.regression_tests.jira_241.Jira241.oh_yes",
      "params": {
        "wrong_size#0": "uint64"
      },
      "block": "test_cases.regression_tests.jira_241.Jira241.oh_yes",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "138": {
      "op": "b test_cases.regression_tests.jira_241.Jira241.oh_yes_block@0"
    },
    "141": {
      "block": "test_cases.regression_tests.jira_241.Jira241.oh_yes_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    }
  }
}