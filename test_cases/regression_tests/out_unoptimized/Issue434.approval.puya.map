{
  "version": 3,
  "sources": [
    "../issue_434.py"
  ],
  "mappings": ";;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;AAEK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAL;;;;;;;;;;;AAEc;;AAAyB;;;AAAzB;AAAd;;;AAAA;;;AAC+B;;AAAZ;AAAiC;;AAAjC;AAAP;;;;AAED;;AAAI;AAAJ;AAAX;;;AAAA;;;AACgB;;AAAI;AAAJ;AAAJ;;;;;AAIG;;AAAI;AAAJ;AAAA;;AAAA;AAAP;;AAFQ;;AAAI;AAAJ;AAAJ;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2 1"
    },
    "6": {
      "op": "b main_block@0"
    },
    "9": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "12": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "14": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "15": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "16": {
      "op": "bz main___algopy_default_create@6",
      "stack_out": []
    },
    "19": {
      "op": "b main_abi_routing@2"
    },
    "22": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "25": {
      "op": "pushbytes 0xd3ad7a55 // method \"method(uint64)void\"",
      "defined_out": [
        "Method(method(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(method(uint64)void)"
      ]
    },
    "31": {
      "op": "uncover 1",
      "stack_out": [
        "Method(method(uint64)void)",
        "tmp%2#0"
      ]
    },
    "33": {
      "op": "match main_method_route@3",
      "stack_out": []
    },
    "37": {
      "op": "b main_switch_case_default@4"
    },
    "40": {
      "block": "main_switch_case_default@4",
      "stack_in": [],
      "op": "b main_switch_case_next@5"
    },
    "43": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "b main_after_if_else@7"
    },
    "46": {
      "block": "main_after_if_else@7",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "47": {
      "block": "main_method_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "49": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "50": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "51": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "53": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0"
      ]
    },
    "54": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "55": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "56": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": []
    },
    "57": {
      "callsub": "test_cases.regression_tests.issue_434.Issue434.method[routing]",
      "op": "callsub method"
    },
    "60": {
      "op": "b main_switch_case_next@5"
    },
    "63": {
      "block": "main___algopy_default_create@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "65": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "66": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "67": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "0"
      ]
    },
    "70": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "71": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "72": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "73": {
      "op": "b main_block@9"
    },
    "76": {
      "block": "main_block@9",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.regression_tests.issue_434.Issue434.__algopy_default_create@10"
    },
    "79": {
      "block": "main_after_inlined_test_cases.regression_tests.issue_434.Issue434.__algopy_default_create@10",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "80": {
      "op": "return",
      "stack_out": []
    },
    "81": {
      "subroutine": "test_cases.regression_tests.issue_434.Issue434.method[routing]",
      "params": {},
      "block": "method",
      "stack_in": [],
      "op": "b method_block@0"
    },
    "84": {
      "block": "method_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "87": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "88": {
      "callsub": "test_cases.regression_tests.issue_434.Issue434.method",
      "op": "callsub test_cases.regression_tests.issue_434.Issue434.method",
      "stack_out": []
    },
    "91": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "92": {
      "op": "return",
      "stack_out": []
    },
    "93": {
      "subroutine": "test_cases.regression_tests.issue_434.Issue434.method",
      "params": {
        "c#0": "uint64"
      },
      "block": "test_cases.regression_tests.issue_434.Issue434.method",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "96": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "x#0"
      ]
    },
    "98": {
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_block@0"
    },
    "101": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_block@0",
      "stack_in": [
        "x#0"
      ],
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_while_top@1"
    },
    "104": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_while_top@1",
      "stack_in": [
        "x#0"
      ],
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%0#0"
      ]
    },
    "106": {
      "op": "pushint 350 // 350",
      "defined_out": [
        "350",
        "tmp%0#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%0#0",
        "350"
      ]
    },
    "109": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%1#0"
      ]
    },
    "110": {
      "op": "bz test_cases.regression_tests.issue_434.Issue434.method_after_while@3",
      "stack_out": [
        "x#0"
      ]
    },
    "113": {
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_while_body@2"
    },
    "116": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_while_body@2",
      "stack_in": [
        "x#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%2#0"
      ]
    },
    "118": {
      "op": "sha3_256",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%3#0"
      ]
    },
    "119": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "121": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%5#0"
      ]
    },
    "122": {
      "op": "assert",
      "stack_out": [
        "x#0"
      ]
    },
    "123": {
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_while_top@1"
    },
    "126": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_after_while@3",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "c#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "c#0 (copy)"
      ]
    },
    "128": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "c#0 (copy)",
        "0"
      ]
    },
    "129": {
      "op": ">",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%6#0"
      ]
    },
    "130": {
      "op": "bz test_cases.regression_tests.issue_434.Issue434.method_else_body@5",
      "stack_out": [
        "x#0"
      ]
    },
    "133": {
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_if_body@4"
    },
    "136": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_if_body@4",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "c#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "c#0 (copy)"
      ]
    },
    "138": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "c#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "c#0 (copy)",
        "2"
      ]
    },
    "139": {
      "op": "+",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%7#0"
      ]
    },
    "140": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "x#0"
      ]
    },
    "142": {
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_after_if_else@6"
    },
    "145": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_after_if_else@6",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "x#0"
      ]
    },
    "147": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "x#0",
        "2"
      ]
    },
    "148": {
      "op": "-",
      "defined_out": [
        "tmp%9#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%9#0"
      ]
    },
    "149": {
      "op": "frame_dig -1",
      "defined_out": [
        "c#0 (copy)",
        "tmp%9#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%9#0",
        "c#0 (copy)"
      ]
    },
    "151": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%10#0"
      ]
    },
    "152": {
      "op": "assert",
      "stack_out": [
        "x#0"
      ]
    },
    "153": {
      "retsub": true,
      "op": "retsub"
    },
    "154": {
      "block": "test_cases.regression_tests.issue_434.Issue434.method_else_body@5",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "c#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "c#0 (copy)"
      ]
    },
    "156": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "c#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "c#0 (copy)",
        "2"
      ]
    },
    "157": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "x#0",
        "tmp%8#0"
      ]
    },
    "158": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "x#0"
      ]
    },
    "160": {
      "op": "b test_cases.regression_tests.issue_434.Issue434.method_after_if_else@6"
    }
  }
}