#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1
    b block@0

block@0:
    b block@1

block@1:
    // regression_tests/jira_241.py:4
    // class Jira241(ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __algopy_default_create@10
    b abi_routing@2

abi_routing@2:
    // regression_tests/jira_241.py:4
    // class Jira241(ARC4Contract):
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    bz create_NoOp@8
    b call_NoOp@3

call_NoOp@3:
    // regression_tests/jira_241.py:4
    // class Jira241(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x1e3e4374 // method "oh_no(bool)void"
    pushbytes 0xd7a938c9 // method "oh_yes(bool)void"
    uncover 2
    match oh_no_route@4 oh_yes_route@5
    b switch_case_default@6

switch_case_default@6:
    b switch_case_next@7

switch_case_next@7:
    b after_if_else@9

after_if_else@9:
    b after_if_else@11

after_if_else@11:
    // regression_tests/jira_241.py:4
    // class Jira241(ARC4Contract):
    err

oh_yes_route@5:
    // regression_tests/jira_241.py:9
    // @arc4.abimethod(default_args={"wrong_size": True})
    callsub oh_yes
    b switch_case_next@7

oh_no_route@4:
    // regression_tests/jira_241.py:5
    // @arc4.abimethod(default_args={"wrong_size": False})
    callsub oh_no
    b switch_case_next@7

create_NoOp@8:
    b after_if_else@9

__algopy_default_create@10:
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    b block@13

block@13:
    b after_inlined_test_cases.regression_tests.jira_241.Jira241.__algopy_default_create@14

after_inlined_test_cases.regression_tests.jira_241.Jira241.__algopy_default_create@14:
    intc_1 // 1
    return


// test_cases.regression_tests.jira_241.Jira241.oh_no[routing]() -> void:
oh_no:
    b oh_no_block@0

oh_no_block@0:
    // regression_tests/jira_241.py:5
    // @arc4.abimethod(default_args={"wrong_size": False})
    txna ApplicationArgs 1
    intc_0 // 0
    getbit
    callsub test_cases.regression_tests.jira_241.Jira241.oh_no
    intc_1 // 1
    return


// test_cases.regression_tests.jira_241.Jira241.oh_yes[routing]() -> void:
oh_yes:
    b oh_yes_block@0

oh_yes_block@0:
    // regression_tests/jira_241.py:9
    // @arc4.abimethod(default_args={"wrong_size": True})
    txna ApplicationArgs 1
    intc_0 // 0
    getbit
    callsub test_cases.regression_tests.jira_241.Jira241.oh_yes
    intc_1 // 1
    return


// test_cases.regression_tests.jira_241.Jira241.oh_no(wrong_size: uint64) -> void:
test_cases.regression_tests.jira_241.Jira241.oh_no:
    // regression_tests/jira_241.py:5-6
    // @arc4.abimethod(default_args={"wrong_size": False})
    // def oh_no(self, wrong_size: bool) -> None:
    proto 1 0
    b test_cases.regression_tests.jira_241.Jira241.oh_no_block@0

test_cases.regression_tests.jira_241.Jira241.oh_no_block@0:
    retsub


// test_cases.regression_tests.jira_241.Jira241.oh_yes(wrong_size: uint64) -> void:
test_cases.regression_tests.jira_241.Jira241.oh_yes:
    // regression_tests/jira_241.py:9-10
    // @arc4.abimethod(default_args={"wrong_size": True})
    // def oh_yes(self, wrong_size: bool) -> None:
    proto 1 0
    b test_cases.regression_tests.jira_241.Jira241.oh_yes_block@0

test_cases.regression_tests.jira_241.Jira241.oh_yes_block@0:
    retsub
