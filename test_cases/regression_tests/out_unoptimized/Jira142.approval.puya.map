{
  "version": 3,
  "sources": [
    "../jira_142.py"
  ],
  "mappings": ";;;;;AAOA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;;;AAAA;;AAKK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AALL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;AAEoB;;AAAa;;;;;;;;;;AAAb;AAAZ;;AAEG;AAAA;;AAAA;AAAgB;;;;;;;;;;AAAhB;AAAX;;;AACY;;AAAA;;;;;;;AAEJ;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "8": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "9": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "12": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "15": {
      "op": "pushbytes 0xebb6cc95 // method \"battle()void\"",
      "defined_out": [
        "Method(battle()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(battle()void)"
      ]
    },
    "21": {
      "op": "swap",
      "stack_out": [
        "Method(battle()void)",
        "tmp%2#0"
      ]
    },
    "22": {
      "op": "match main_battle_route@3",
      "stack_out": []
    },
    "26": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "27": {
      "block": "main_after_inlined_test_cases.regression_tests.jira_142.Jira142.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "28": {
      "block": "main_battle_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "30": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "31": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "32": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "33": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "35": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "36": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "37": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "38": {
      "callsub": "test_cases.regression_tests.jira_142.Jira142.battle",
      "op": "callsub battle"
    },
    "41": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "42": {
      "op": "b main_after_inlined_test_cases.regression_tests.jira_142.Jira142.__puya_arc4_router__@11"
    },
    "45": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "47": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "48": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%7#0"
      ]
    },
    "49": {
      "op": "match main___algopy_default_create@7",
      "stack_out": []
    },
    "53": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "56": {
      "block": "main___algopy_default_create@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "58": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "59": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "60": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "61": {
      "block": "main_after_inlined_test_cases.regression_tests.jira_142.Jira142.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "62": {
      "op": "b main_after_inlined_test_cases.regression_tests.jira_142.Jira142.__puya_arc4_router__@11"
    },
    "65": {
      "subroutine": "test_cases.regression_tests.jira_142.Jira142.some_subroutine",
      "params": {
        "char#0": "bytes"
      },
      "block": "some_subroutine",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "68": {
      "block": "some_subroutine_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "char%out#0"
      ],
      "stack_out": [
        "char%out#0"
      ]
    },
    "70": {
      "retsub": true,
      "op": "retsub"
    },
    "71": {
      "subroutine": "test_cases.regression_tests.jira_142.Jira142.battle",
      "params": {},
      "block": "battle",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "74": {
      "block": "battle_block@0",
      "stack_in": [],
      "op": "pushbytes 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "76": {
      "op": "pushbytes 0x00000000000000c8",
      "defined_out": [
        "0x",
        "0x00000000000000c8"
      ],
      "stack_out": [
        "0x",
        "0x00000000000000c8"
      ]
    },
    "86": {
      "op": "concat",
      "defined_out": [
        "my_struct#0"
      ],
      "stack_out": [
        "my_struct#0"
      ]
    },
    "87": {
      "op": "dupn 2",
      "defined_out": [
        "my_struct#0",
        "my_struct#0 (copy)"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#0",
        "my_struct#0 (copy)"
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_struct#0",
        "my_struct#0",
        "my_struct#0 (copy)",
        "0"
      ]
    },
    "90": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "8",
        "my_struct#0",
        "my_struct#0 (copy)"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#0",
        "my_struct#0 (copy)",
        "0",
        "8"
      ]
    },
    "92": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "my_struct#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "93": {
      "op": "pushbytes 0x0000000000000064",
      "defined_out": [
        "0x0000000000000064",
        "my_struct#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000064"
      ]
    },
    "103": {
      "op": "b>",
      "defined_out": [
        "my_struct#0",
        "my_struct#5",
        "tmp%0#0"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#5",
        "tmp%0#0"
      ]
    },
    "104": {
      "op": "bz battle_after_if_else@2",
      "stack_out": [
        "my_struct#0",
        "my_struct#5"
      ]
    },
    "107": {
      "block": "battle_if_body@1",
      "stack_in": [
        "my_struct#0",
        "my_struct#5"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "my_struct#0"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#5",
        "my_struct#0"
      ]
    },
    "109": {
      "callsub": "test_cases.regression_tests.jira_142.Jira142.some_subroutine",
      "op": "callsub some_subroutine",
      "defined_out": [
        "my_struct#0",
        "my_struct#5"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#5",
        "my_struct#5"
      ]
    },
    "112": {
      "op": "frame_bury 1",
      "defined_out": [
        "my_struct#0",
        "my_struct#5"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#5"
      ]
    },
    "114": {
      "block": "battle_after_if_else@2",
      "stack_in": [
        "my_struct#0",
        "my_struct#5"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "copy%0#0"
      ],
      "stack_out": [
        "my_struct#0",
        "my_struct#5",
        "copy%0#0"
      ]
    },
    "116": {
      "op": "log",
      "stack_out": [
        "my_struct#0",
        "my_struct#5"
      ]
    },
    "117": {
      "retsub": true,
      "op": "retsub"
    }
  }
}