main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        goto block@1
    block@1: // L4
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@6
    block@2: // abi_routing_L4
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "method(uint64)void" => block@3, * => block@4}
    block@3: // method_route_L6
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        let tmp%7#0: bool = (&& tmp%4#0 tmp%6#0)
        (assert tmp%7#0) // OnCompletion must be NoOp && can only call when not creating
        test_cases.regression_tests.issue_434.Issue434.method[routing]()
        goto block@5
    block@4: // switch_case_default_L4
        goto block@5
    block@5: // switch_case_next_L4
        goto block@7
    block@6: // __algopy_default_create_L1
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 NoOp)
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (== tmp%10#0 0u)
        let tmp%12#0: bool = (&& tmp%9#0 tmp%11#0)
        (assert tmp%12#0) // OnCompletion must be NoOp && can only call when creating
        goto block@9
    block@9: // L1
        goto block@10
    block@10: // after_inlined_test_cases.regression_tests.issue_434.Issue434.__algopy_default_create_L1
        exit 1u
    block@7: // after_if_else_L4
        exit 0u
    block@8: // after_inlined_test_cases.regression_tests.issue_434.Issue434.__puya_arc4_router___L1
        let tmp%0#0: bool = undefined
        return tmp%0#0

subroutine test_cases.regression_tests.issue_434.Issue434.method[routing]() -> void:
    block@0: // L6
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 1)
        let tmp%0#0: uint64 = (btoi reinterpret_Encoded(uint64)%0#0)
        test_cases.regression_tests.issue_434.Issue434.method(tmp%0#0)
        exit 1u

subroutine test_cases.regression_tests.issue_434.Issue434.method(c: uint64) -> void:
    block@0: // L6
        goto block@1
    block@1: // while_top_L8
        let tmp%0#0: uint64 = (global OpcodeBudget)
        let tmp%1#0: bool = (> tmp%0#0 350u)
        goto tmp%1#0 ? block@2 : block@3
    block@2: // while_body_L9
        let tmp%2#0: account = (txn Sender)
        let tmp%3#0: bytes = (sha3_256 tmp%2#0)
        let tmp%4#0: account = (txn Sender)
        let tmp%5#0: bool = (!= tmp%3#0 tmp%4#0)
        (assert tmp%5#0)
        goto block@1
    block@3: // after_while_L8
        let tmp%6#0: bool = (> c#0 0u)
        goto tmp%6#0 ? block@4 : block@5
    block@4: // if_body_L12
        let tmp%7#0: uint64 = (+ c#0 2u)
        let x#0: uint64 = tmp%7#0
        goto block@6
    block@5: // else_body_L14
        let tmp%8#0: uint64 = (+ c#0 2u)
        let x#0: uint64 = tmp%8#0
        goto block@6
    block@6: // after_if_else_L11
        let tmp%9#0: uint64 = (- x#0 2u)
        let tmp%10#0: bool = (== tmp%9#0 c#0)
        (assert tmp%10#0)
        return 