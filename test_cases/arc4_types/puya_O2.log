debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['arc4_types'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
arc4_types/mutable_params.py:63:9 warning: expression result is ignored
arc4_types/mutable_params.py:79:9 warning: expression result is ignored
arc4_types/mutable_params.py:122:9 warning: expression result is ignored
arc4_types/bool.py:13:9 warning: expression result is ignored
arc4_types/array.py:77:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.arc4_types.structs.add
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.structs.check
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.structs.nested_decode
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.structs.add_decimal
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.bool.get_arr
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Building IR for function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@9
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@7) in block@7
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@7, and_result%0#1 <- block@8) in block@8
debug: Created Phi assignment: let c#1: Encoded(bool8) = undefined while trying to resolve 'c' in block@9
debug: Added c#0 to Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7) in block@7
debug: Created Phi assignment: let c#2: Encoded(bool8) = undefined while trying to resolve 'c' in block@8
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0) in block@0
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1) in block@1
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2) in block@2
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3) in block@3
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4) in block@4
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5) in block@5
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6) (c#2) with c#0
debug: Deleting Phi assignment: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6)
debug: Replaced trivial Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6) (c#2) with c#0 in current definition for 1 blocks
debug: Added c#0 to Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8) (c#1) with c#0
debug: Deleting Phi assignment: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8)
debug: Replaced trivial Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8) (c#1) with c#0 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let h#1: Encoded(bool8) = undefined while trying to resolve 'h' in block@9
debug: Added h#0 to Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7) in block@7
debug: Created Phi assignment: let h#2: Encoded(bool8) = undefined while trying to resolve 'h' in block@8
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0) in block@0
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1) in block@1
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2) in block@2
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3) in block@3
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4) in block@4
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5) in block@5
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6) (h#2) with h#0
debug: Deleting Phi assignment: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6)
debug: Replaced trivial Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6) (h#2) with h#0 in current definition for 1 blocks
debug: Added h#0 to Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8) (h#1) with h#0
debug: Deleting Phi assignment: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8)
debug: Replaced trivial Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8) (h#1) with h#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@13
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@11) in block@11
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@11, or_result%0#1 <- block@12) in block@12
debug: Created Phi assignment: let k#1: Encoded(uint8) = undefined while trying to resolve 'k' in block@13
debug: Created Phi assignment: let k#2: Encoded(uint8) = undefined while trying to resolve 'k' in block@11
debug: Created Phi assignment: let k#3: Encoded(uint8) = undefined while trying to resolve 'k' in block@9
debug: Added k#0 to Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7) in block@7
debug: Created Phi assignment: let k#4: Encoded(uint8) = undefined while trying to resolve 'k' in block@8
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0) in block@0
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1) in block@1
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2) in block@2
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3) in block@3
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4) in block@4
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5) in block@5
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6) (k#4) with k#0
debug: Deleting Phi assignment: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6)
debug: Replaced trivial Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6) (k#4) with k#0 in current definition for 1 blocks
debug: Added k#0 to Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8) (k#3) with k#0
debug: Deleting Phi assignment: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8)
debug: Replaced trivial Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8) (k#3) with k#0 in current definition for 1 blocks
debug: Added k#0 to Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9) in block@9
debug: Added k#0 to Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10) (k#2) with k#0
debug: Deleting Phi assignment: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10)
debug: Replaced trivial Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10) (k#2) with k#0 in current definition for 1 blocks
debug: Added k#0 to Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11) in block@11
debug: Added k#0 to Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12) in block@12
debug: Replacing trivial Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12) (k#1) with k#0
debug: Deleting Phi assignment: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12)
debug: Replaced trivial Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12) (k#1) with k#0 in current definition for 1 blocks
debug: Created Phi assignment: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@13
debug: Created Phi assignment: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@11
debug: Created Phi assignment: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@9
debug: Added boolean_packing#0 to Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7) in block@7
debug: Created Phi assignment: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@8
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0) in block@0
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1) in block@1
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2) in block@2
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3) in block@3
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4) in block@4
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5) in block@5
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6) (boolean_packing#4) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6)
debug: Replaced trivial Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6) (boolean_packing#4) with boolean_packing#0 in current definition for 1 blocks
debug: Added boolean_packing#0 to Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8) (boolean_packing#3) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8)
debug: Replaced trivial Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8) (boolean_packing#3) with boolean_packing#0 in current definition for 1 blocks
debug: Added boolean_packing#0 to Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9) in block@9
debug: Added boolean_packing#0 to Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10) (boolean_packing#2) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10)
debug: Replaced trivial Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10) (boolean_packing#2) with boolean_packing#0 in current definition for 1 blocks
debug: Added boolean_packing#0 to Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11) in block@11
debug: Added boolean_packing#0 to Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12) in block@12
debug: Replacing trivial Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12) (boolean_packing#1) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12)
debug: Replaced trivial Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12) (boolean_packing#1) with boolean_packing#0 in current definition for 1 blocks
debug: Created Phi assignment: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@13
debug: Created Phi assignment: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@11
debug: Created Phi assignment: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@9
debug: Added my_tuple#0 to Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7) in block@7
debug: Created Phi assignment: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@8
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0) in block@0
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1) in block@1
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2) in block@2
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3) in block@3
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4) in block@4
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5) in block@5
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6) (my_tuple#4) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6)
debug: Replaced trivial Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6) (my_tuple#4) with my_tuple#0 in current definition for 1 blocks
debug: Added my_tuple#0 to Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8) (my_tuple#3) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8)
debug: Replaced trivial Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8) (my_tuple#3) with my_tuple#0 in current definition for 1 blocks
debug: Added my_tuple#0 to Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9) in block@9
debug: Added my_tuple#0 to Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10) (my_tuple#2) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10)
debug: Replaced trivial Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10) (my_tuple#2) with my_tuple#0 in current definition for 1 blocks
debug: Added my_tuple#0 to Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11) in block@11
debug: Added my_tuple#0 to Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12) in block@12
debug: Replacing trivial Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12) (my_tuple#1) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12)
debug: Replaced trivial Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12) (my_tuple#1) with my_tuple#0 in current definition for 1 blocks
debug: Terminated block@13
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy
debug: Sealing block@0
arc4_types/tuples.py:72:9 debug: encountered already materialized expression (tup), reusing result: tup#0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@9
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@7) in block@7
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@7, and_result%0#1 <- block@8) in block@8
debug: Created Phi assignment: let c#1: Encoded(bool8) = undefined while trying to resolve 'c' in block@9
debug: Added c#0 to Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7) in block@7
debug: Created Phi assignment: let c#2: Encoded(bool8) = undefined while trying to resolve 'c' in block@8
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0) in block@0
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1) in block@1
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2) in block@2
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3) in block@3
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4) in block@4
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5) in block@5
debug: Added c#0 to Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6) (c#2) with c#0
debug: Deleting Phi assignment: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6)
debug: Replaced trivial Phi node: let c#2: Encoded(bool8) = φ(c#0 <- block@0, c#0 <- block@1, c#0 <- block@2, c#0 <- block@3, c#0 <- block@4, c#0 <- block@5, c#0 <- block@6) (c#2) with c#0 in current definition for 1 blocks
debug: Added c#0 to Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8) (c#1) with c#0
debug: Deleting Phi assignment: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8)
debug: Replaced trivial Phi node: let c#1: Encoded(bool8) = φ(c#0 <- block@7, c#0 <- block@8) (c#1) with c#0 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let h#1: Encoded(bool8) = undefined while trying to resolve 'h' in block@9
debug: Added h#0 to Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7) in block@7
debug: Created Phi assignment: let h#2: Encoded(bool8) = undefined while trying to resolve 'h' in block@8
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0) in block@0
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1) in block@1
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2) in block@2
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3) in block@3
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4) in block@4
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5) in block@5
debug: Added h#0 to Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6) (h#2) with h#0
debug: Deleting Phi assignment: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6)
debug: Replaced trivial Phi node: let h#2: Encoded(bool8) = φ(h#0 <- block@0, h#0 <- block@1, h#0 <- block@2, h#0 <- block@3, h#0 <- block@4, h#0 <- block@5, h#0 <- block@6) (h#2) with h#0 in current definition for 1 blocks
debug: Added h#0 to Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8) (h#1) with h#0
debug: Deleting Phi assignment: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8)
debug: Replaced trivial Phi node: let h#1: Encoded(bool8) = φ(h#0 <- block@7, h#0 <- block@8) (h#1) with h#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@13
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@11) in block@11
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@11, or_result%0#1 <- block@12) in block@12
debug: Created Phi assignment: let k#1: Encoded(uint8) = undefined while trying to resolve 'k' in block@13
debug: Created Phi assignment: let k#2: Encoded(uint8) = undefined while trying to resolve 'k' in block@11
debug: Created Phi assignment: let k#3: Encoded(uint8) = undefined while trying to resolve 'k' in block@9
debug: Added k#0 to Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7) in block@7
debug: Created Phi assignment: let k#4: Encoded(uint8) = undefined while trying to resolve 'k' in block@8
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0) in block@0
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1) in block@1
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2) in block@2
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3) in block@3
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4) in block@4
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5) in block@5
debug: Added k#0 to Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6) (k#4) with k#0
debug: Deleting Phi assignment: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6)
debug: Replaced trivial Phi node: let k#4: Encoded(uint8) = φ(k#0 <- block@0, k#0 <- block@1, k#0 <- block@2, k#0 <- block@3, k#0 <- block@4, k#0 <- block@5, k#0 <- block@6) (k#4) with k#0 in current definition for 1 blocks
debug: Added k#0 to Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8) (k#3) with k#0
debug: Deleting Phi assignment: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8)
debug: Replaced trivial Phi node: let k#3: Encoded(uint8) = φ(k#0 <- block@7, k#0 <- block@8) (k#3) with k#0 in current definition for 1 blocks
debug: Added k#0 to Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9) in block@9
debug: Added k#0 to Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10) (k#2) with k#0
debug: Deleting Phi assignment: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10)
debug: Replaced trivial Phi node: let k#2: Encoded(uint8) = φ(k#0 <- block@9, k#0 <- block@10) (k#2) with k#0 in current definition for 1 blocks
debug: Added k#0 to Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11) in block@11
debug: Added k#0 to Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12) in block@12
debug: Replacing trivial Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12) (k#1) with k#0
debug: Deleting Phi assignment: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12)
debug: Replaced trivial Phi node: let k#1: Encoded(uint8) = φ(k#0 <- block@11, k#0 <- block@12) (k#1) with k#0 in current definition for 1 blocks
debug: Created Phi assignment: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@13
debug: Created Phi assignment: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@11
debug: Created Phi assignment: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@9
debug: Added boolean_packing#0 to Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7) in block@7
debug: Created Phi assignment: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = undefined while trying to resolve 'boolean_packing' in block@8
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0) in block@0
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1) in block@1
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2) in block@2
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3) in block@3
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4) in block@4
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5) in block@5
debug: Added boolean_packing#0 to Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6) (boolean_packing#4) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6)
debug: Replaced trivial Phi node: let boolean_packing#4: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@0, boolean_packing#0 <- block@1, boolean_packing#0 <- block@2, boolean_packing#0 <- block@3, boolean_packing#0 <- block@4, boolean_packing#0 <- block@5, boolean_packing#0 <- block@6) (boolean_packing#4) with boolean_packing#0 in current definition for 1 blocks
debug: Added boolean_packing#0 to Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8) (boolean_packing#3) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8)
debug: Replaced trivial Phi node: let boolean_packing#3: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@7, boolean_packing#0 <- block@8) (boolean_packing#3) with boolean_packing#0 in current definition for 1 blocks
debug: Added boolean_packing#0 to Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9) in block@9
debug: Added boolean_packing#0 to Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10) (boolean_packing#2) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10)
debug: Replaced trivial Phi node: let boolean_packing#2: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@9, boolean_packing#0 <- block@10) (boolean_packing#2) with boolean_packing#0 in current definition for 1 blocks
debug: Added boolean_packing#0 to Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11) in block@11
debug: Added boolean_packing#0 to Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12) in block@12
debug: Replacing trivial Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12) (boolean_packing#1) with boolean_packing#0
debug: Deleting Phi assignment: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12)
debug: Replaced trivial Phi node: let boolean_packing#1: Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8) = φ(boolean_packing#0 <- block@11, boolean_packing#0 <- block@12) (boolean_packing#1) with boolean_packing#0 in current definition for 1 blocks
debug: Created Phi assignment: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@13
debug: Created Phi assignment: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@11
debug: Created Phi assignment: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@9
debug: Added my_tuple#0 to Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7) in block@7
debug: Created Phi assignment: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = undefined while trying to resolve 'my_tuple' in block@8
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0) in block@0
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1) in block@1
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2) in block@2
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3) in block@3
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4) in block@4
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5) in block@5
debug: Added my_tuple#0 to Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6) in block@6
debug: Replacing trivial Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6) (my_tuple#4) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6)
debug: Replaced trivial Phi node: let my_tuple#4: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@0, my_tuple#0 <- block@1, my_tuple#0 <- block@2, my_tuple#0 <- block@3, my_tuple#0 <- block@4, my_tuple#0 <- block@5, my_tuple#0 <- block@6) (my_tuple#4) with my_tuple#0 in current definition for 1 blocks
debug: Added my_tuple#0 to Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8) (my_tuple#3) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8)
debug: Replaced trivial Phi node: let my_tuple#3: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@7, my_tuple#0 <- block@8) (my_tuple#3) with my_tuple#0 in current definition for 1 blocks
debug: Added my_tuple#0 to Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9) in block@9
debug: Added my_tuple#0 to Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10) (my_tuple#2) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10)
debug: Replaced trivial Phi node: let my_tuple#2: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@9, my_tuple#0 <- block@10) (my_tuple#2) with my_tuple#0 in current definition for 1 blocks
debug: Added my_tuple#0 to Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11) in block@11
debug: Added my_tuple#0 to Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12) in block@12
debug: Replacing trivial Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12) (my_tuple#1) with my_tuple#0
debug: Deleting Phi assignment: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12)
debug: Replaced trivial Phi node: let my_tuple#1: Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8) = φ(my_tuple#0 <- block@11, my_tuple#0 <- block@12) (my_tuple#1) with my_tuple#0 in current definition for 1 blocks
debug: Terminated block@13
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.structs.Arc4StructsTypeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'val' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let val#1: Encoded(uint64) = undefined while trying to resolve 'val' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added val#0 to Phi node: let val#1: Encoded(uint64) = φ(val#0 <- block@0) in block@0
debug: Added val#2 to Phi node: let val#1: Encoded(uint64) = φ(val#0 <- block@0, val#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let coord_1#1: Encoded(uint64,uint64) = undefined while trying to resolve 'coord_1' in block@1
debug: Added coord_1#0 to Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0) in block@0
debug: Added coord_1#1 to Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3) (coord_1#1) with coord_1#0
debug: Deleting Phi assignment: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3)
debug: Replaced trivial Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3) (coord_1#1) with coord_1#0 in current definition for 3 blocks
arc4_types/structs.py:55:9 debug: encountered already materialized expression (copy), reusing result: copy#0
debug: Terminated block@4
debug: Building IR for function test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1
debug: Looking for 'val' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let val#1: Encoded(uint64) = undefined while trying to resolve 'val' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3
debug: Added val#0 to Phi node: let val#1: Encoded(uint64) = φ(val#0 <- block@0) in block@0
debug: Added val#2 to Phi node: let val#1: Encoded(uint64) = φ(val#0 <- block@0, val#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let coord_1#1: Encoded(uint64,uint64) = undefined while trying to resolve 'coord_1' in block@1
debug: Added coord_1#0 to Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0) in block@0
debug: Added coord_1#1 to Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3) (coord_1#1) with coord_1#0
debug: Deleting Phi assignment: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3)
debug: Replaced trivial Phi node: let coord_1#1: Encoded(uint64,uint64) = φ(coord_1#0 <- block@0, coord_1#1 <- block@3) (coord_1#1) with coord_1#0 in current definition for 3 blocks
arc4_types/structs.py:55:9 debug: encountered already materialized expression (copy), reusing result: copy#0
debug: Terminated block@4
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.string.Arc4StringTypesContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0#2: Encoded(len+utf8[]) = undefined while trying to resolve 'ternary_result%0' in block@3
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: Encoded(len+utf8[]) = φ(ternary_result%0#0 <- block@1) in block@1
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: Encoded(len+utf8[]) = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0#2: Encoded(len+utf8[]) = undefined while trying to resolve 'ternary_result%0' in block@3
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: Encoded(len+utf8[]) = φ(ternary_result%0#0 <- block@1) in block@1
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: Encoded(len+utf8[]) = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
debug: Terminated block@3
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.string.Arc4StringTypesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.string.Arc4StringTypesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.reference_types.Arc4RefTypesContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.numeric.Arc4NumericTypesContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.check_copy_required
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.array_concat
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic
debug: Sealing block@0
arc4_types/mutation.py:78:9 debug: encountered already materialized expression (array_of_array), reusing result: array_of_array#2
arc4_types/mutation.py:78:24 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.index_assign
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.check_copy_required
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.check_copy_required
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_concat
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.index_assign
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Building IR for function test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let a#3: Encoded(len+uint8[]) = undefined while trying to resolve 'a' in block@5
debug: Added a#2 to Phi node: let a#3: Encoded(len+uint8[]) = φ(a#2 <- block@3) in block@3
debug: Added a#2 to Phi node: let a#3: Encoded(len+uint8[]) = φ(a#2 <- block@3, a#2 <- block@4) in block@4
debug: Replacing trivial Phi node: let a#3: Encoded(len+uint8[]) = φ(a#2 <- block@3, a#2 <- block@4) (a#3) with a#2
debug: Deleting Phi assignment: let a#3: Encoded(len+uint8[]) = φ(a#2 <- block@3, a#2 <- block@4)
debug: Replaced trivial Phi node: let a#3: Encoded(len+uint8[]) = φ(a#2 <- block@3, a#2 <- block@4) (a#3) with a#2 in current definition for 1 blocks
debug: Created Phi assignment: let a%is_original#2: bool = undefined while trying to resolve 'a%is_original' in block@5
debug: Added a%is_original#1 to Phi node: let a%is_original#2: bool = φ(a%is_original#1 <- block@3) in block@3
debug: Added a%is_original#1 to Phi node: let a%is_original#2: bool = φ(a%is_original#1 <- block@3, a%is_original#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let a%is_original#2: bool = φ(a%is_original#1 <- block@3, a%is_original#1 <- block@4) (a%is_original#2) with a%is_original#1
debug: Deleting Phi assignment: let a%is_original#2: bool = φ(a%is_original#1 <- block@3, a%is_original#1 <- block@4)
debug: Replaced trivial Phi node: let a%is_original#2: bool = φ(a%is_original#1 <- block@3, a%is_original#1 <- block@4) (a%is_original#2) with a%is_original#1 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let a#7: Encoded(len+uint8[]) = undefined while trying to resolve 'a' in block@13
debug: Created Phi assignment: let a#8: Encoded(len+uint8[]) = undefined while trying to resolve 'a' in block@9
debug: Added a#5 to Phi node: let a#8: Encoded(len+uint8[]) = φ(a#5 <- block@7) in block@7
debug: Added a#5 to Phi node: let a#8: Encoded(len+uint8[]) = φ(a#5 <- block@7, a#5 <- block@8) in block@8
debug: Replacing trivial Phi node: let a#8: Encoded(len+uint8[]) = φ(a#5 <- block@7, a#5 <- block@8) (a#8) with a#5
debug: Deleting Phi assignment: let a#8: Encoded(len+uint8[]) = φ(a#5 <- block@7, a#5 <- block@8)
debug: Replaced trivial Phi node: let a#8: Encoded(len+uint8[]) = φ(a#5 <- block@7, a#5 <- block@8) (a#8) with a#5 in current definition for 1 blocks
debug: Added a#5 to Phi node: let a#7: Encoded(len+uint8[]) = φ(a#5 <- block@9) in block@9
debug: Created Phi assignment: let a#9: Encoded(len+uint8[]) = undefined while trying to resolve 'a' in block@12
debug: Added a#6 to Phi node: let a#9: Encoded(len+uint8[]) = φ(a#6 <- block@10) in block@10
debug: Added a#6 to Phi node: let a#9: Encoded(len+uint8[]) = φ(a#6 <- block@10, a#6 <- block@11) in block@11
debug: Replacing trivial Phi node: let a#9: Encoded(len+uint8[]) = φ(a#6 <- block@10, a#6 <- block@11) (a#9) with a#6
debug: Deleting Phi assignment: let a#9: Encoded(len+uint8[]) = φ(a#6 <- block@10, a#6 <- block@11)
debug: Replaced trivial Phi node: let a#9: Encoded(len+uint8[]) = φ(a#6 <- block@10, a#6 <- block@11) (a#9) with a#6 in current definition for 1 blocks
debug: Added a#6 to Phi node: let a#7: Encoded(len+uint8[]) = φ(a#5 <- block@9, a#6 <- block@12) in block@12
debug: Created Phi assignment: let a%is_original#4: bool = undefined while trying to resolve 'a%is_original' in block@13
debug: Created Phi assignment: let a%is_original#5: bool = undefined while trying to resolve 'a%is_original' in block@9
debug: Added a%is_original#3 to Phi node: let a%is_original#5: bool = φ(a%is_original#3 <- block@7) in block@7
debug: Added a%is_original#3 to Phi node: let a%is_original#5: bool = φ(a%is_original#3 <- block@7, a%is_original#3 <- block@8) in block@8
debug: Replacing trivial Phi node: let a%is_original#5: bool = φ(a%is_original#3 <- block@7, a%is_original#3 <- block@8) (a%is_original#5) with a%is_original#3
debug: Deleting Phi assignment: let a%is_original#5: bool = φ(a%is_original#3 <- block@7, a%is_original#3 <- block@8)
debug: Replaced trivial Phi node: let a%is_original#5: bool = φ(a%is_original#3 <- block@7, a%is_original#3 <- block@8) (a%is_original#5) with a%is_original#3 in current definition for 1 blocks
debug: Added a%is_original#3 to Phi node: let a%is_original#4: bool = φ(a%is_original#3 <- block@9) in block@9
debug: Created Phi assignment: let a%is_original#6: bool = undefined while trying to resolve 'a%is_original' in block@12
debug: Added a%is_original#0 to Phi node: let a%is_original#6: bool = φ(a%is_original#0 <- block@10) in block@10
debug: Added a%is_original#0 to Phi node: let a%is_original#6: bool = φ(a%is_original#0 <- block@10, a%is_original#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let a%is_original#6: bool = φ(a%is_original#0 <- block@10, a%is_original#0 <- block@11) (a%is_original#6) with a%is_original#0
debug: Deleting Phi assignment: let a%is_original#6: bool = φ(a%is_original#0 <- block@10, a%is_original#0 <- block@11)
debug: Replaced trivial Phi node: let a%is_original#6: bool = φ(a%is_original#0 <- block@10, a%is_original#0 <- block@11) (a%is_original#6) with a%is_original#0 in current definition for 1 blocks
debug: Added a%is_original#0 to Phi node: let a%is_original#4: bool = φ(a%is_original#3 <- block@9, a%is_original#0 <- block@12) in block@12
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let a%out#7: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@15
debug: Created Phi assignment: let a%out#8: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@13
debug: Created Phi assignment: let a%out#9: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@9
debug: Created Phi assignment: let a%out#10: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@7
debug: Created Phi assignment: let a%out#11: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@5
debug: Created Phi assignment: let a%out#12: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@3
debug: Added a%out#0 to Phi node: let a%out#12: Encoded(len+uint8[]) = φ(a%out#0 <- block@1) in block@1
debug: Added a%out#1 to Phi node: let a%out#12: Encoded(len+uint8[]) = φ(a%out#0 <- block@1, a%out#1 <- block@2) in block@2
debug: Added a%out#12 to Phi node: let a%out#11: Encoded(len+uint8[]) = φ(a%out#12 <- block@3) in block@3
debug: Added a%out#2 to Phi node: let a%out#11: Encoded(len+uint8[]) = φ(a%out#12 <- block@3, a%out#2 <- block@4) in block@4
debug: Added a%out#11 to Phi node: let a%out#10: Encoded(len+uint8[]) = φ(a%out#11 <- block@5) in block@5
debug: Added a%out#3 to Phi node: let a%out#10: Encoded(len+uint8[]) = φ(a%out#11 <- block@5, a%out#3 <- block@6) in block@6
debug: Added a%out#10 to Phi node: let a%out#9: Encoded(len+uint8[]) = φ(a%out#10 <- block@7) in block@7
debug: Added a%out#4 to Phi node: let a%out#9: Encoded(len+uint8[]) = φ(a%out#10 <- block@7, a%out#4 <- block@8) in block@8
debug: Added a%out#9 to Phi node: let a%out#8: Encoded(len+uint8[]) = φ(a%out#9 <- block@9) in block@9
debug: Created Phi assignment: let a%out#13: Encoded(len+uint8[]) = undefined while trying to resolve 'a%out' in block@12
debug: Added a%out#0 to Phi node: let a%out#13: Encoded(len+uint8[]) = φ(a%out#0 <- block@10) in block@10
debug: Added a%out#5 to Phi node: let a%out#13: Encoded(len+uint8[]) = φ(a%out#0 <- block@10, a%out#5 <- block@11) in block@11
debug: Added a%out#13 to Phi node: let a%out#8: Encoded(len+uint8[]) = φ(a%out#9 <- block@9, a%out#13 <- block@12) in block@12
debug: Added a%out#8 to Phi node: let a%out#7: Encoded(len+uint8[]) = φ(a%out#8 <- block@13) in block@13
debug: Added a%out#6 to Phi node: let a%out#7: Encoded(len+uint8[]) = φ(a%out#8 <- block@13, a%out#6 <- block@14) in block@14
debug: Terminated block@15
debug: Building IR for function test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies
debug: Sealing block@0
arc4_types/mutable_params.py:90:16 debug: encountered already materialized expression (originals), reusing result: (originals.0#0, originals.1#0, originals.2#0)
arc4_types/mutable_params.py:90:16 debug: encountered already materialized expression (originals), reusing result: (originals.0#0, originals.1#0, originals.2#0)
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let struct#1: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = undefined while trying to resolve 'struct' in block@2
debug: Added struct#0 to Phi node: let struct#1: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#0 <- block@0) in block@0
debug: Added struct#0 to Phi node: let struct#1: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#0 <- block@0, struct#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let struct#1: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#0 <- block@0, struct#0 <- block@1) (struct#1) with struct#0
debug: Deleting Phi assignment: let struct#1: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#0 <- block@0, struct#0 <- block@1)
debug: Replaced trivial Phi node: let struct#1: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#0 <- block@0, struct#0 <- block@1) (struct#1) with struct#0 in current definition for 1 blocks
debug: Created Phi assignment: let struct%is_original#1: bool = undefined while trying to resolve 'struct%is_original' in block@2
debug: Added struct%is_original#0 to Phi node: let struct%is_original#1: bool = φ(struct%is_original#0 <- block@0) in block@0
debug: Added struct%is_original#0 to Phi node: let struct%is_original#1: bool = φ(struct%is_original#0 <- block@0, struct%is_original#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let struct%is_original#1: bool = φ(struct%is_original#0 <- block@0, struct%is_original#0 <- block@1) (struct%is_original#1) with struct%is_original#0
debug: Deleting Phi assignment: let struct%is_original#1: bool = φ(struct%is_original#0 <- block@0, struct%is_original#0 <- block@1)
debug: Replaced trivial Phi node: let struct%is_original#1: bool = φ(struct%is_original#0 <- block@0, struct%is_original#0 <- block@1) (struct%is_original#1) with struct%is_original#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let array#2: Encoded(uint8[4]) = undefined while trying to resolve 'array' in block@4
debug: Created Phi assignment: let array#3: Encoded(uint8[4]) = undefined while trying to resolve 'array' in block@2
debug: Added array#1 to Phi node: let array#3: Encoded(uint8[4]) = φ(array#1 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#3: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1) in block@1
debug: Replacing trivial Phi node: let array#3: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1) (array#3) with array#1
debug: Deleting Phi assignment: let array#3: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1)
debug: Replaced trivial Phi node: let array#3: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1) (array#3) with array#1 in current definition for 1 blocks
debug: Added array#1 to Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@2) in block@2
debug: Added array#1 to Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@2, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@2, array#1 <- block@3) (array#2) with array#1
debug: Deleting Phi assignment: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@2, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@2, array#1 <- block@3) (array#2) with array#1 in current definition for 1 blocks
debug: Created Phi assignment: let struct#3: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = undefined while trying to resolve 'struct' in block@4
debug: Added struct#2 to Phi node: let struct#3: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#2 <- block@2) in block@2
debug: Added struct#2 to Phi node: let struct#3: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#2 <- block@2, struct#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let struct#3: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#2 <- block@2, struct#2 <- block@3) (struct#3) with struct#2
debug: Deleting Phi assignment: let struct#3: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#2 <- block@2, struct#2 <- block@3)
debug: Replaced trivial Phi node: let struct#3: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[])) = φ(struct#2 <- block@2, struct#2 <- block@3) (struct#3) with struct#2 in current definition for 1 blocks
debug: Terminated block@4
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let copy#1: Encoded(uint8[4]) = undefined while trying to resolve 'copy' in block@2
debug: Added copy#0 to Phi node: let copy#1: Encoded(uint8[4]) = φ(copy#0 <- block@0) in block@0
debug: Added copy#0 to Phi node: let copy#1: Encoded(uint8[4]) = φ(copy#0 <- block@0, copy#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let copy#1: Encoded(uint8[4]) = φ(copy#0 <- block@0, copy#0 <- block@1) (copy#1) with copy#0
debug: Deleting Phi assignment: let copy#1: Encoded(uint8[4]) = φ(copy#0 <- block@0, copy#0 <- block@1)
debug: Replaced trivial Phi node: let copy#1: Encoded(uint8[4]) = φ(copy#0 <- block@0, copy#0 <- block@1) (copy#1) with copy#0 in current definition for 1 blocks
debug: Created Phi assignment: let array#2: Encoded(uint8[4]) = undefined while trying to resolve 'array' in block@2
debug: Added array#1 to Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1) in block@1
debug: Replacing trivial Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1) (array#2) with array#1
debug: Deleting Phi assignment: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1)
debug: Replaced trivial Phi node: let array#2: Encoded(uint8[4]) = φ(array#1 <- block@0, array#1 <- block@1) (array#2) with array#1 in current definition for 1 blocks
debug: Terminated block@2
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@2
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#0 <- block@1) (start#1) with start#0
debug: Deleting Phi assignment: let start#1: uint64 = φ(start#0 <- block@0, start#0 <- block@1)
debug: Replaced trivial Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#0 <- block@1) (start#1) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1#1: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@2
debug: Added arrays.1#0 to Phi node: let arrays.1#1: Encoded(uint8[4]) = φ(arrays.1#0 <- block@0) in block@0
debug: Added arrays.1#0 to Phi node: let arrays.1#1: Encoded(uint8[4]) = φ(arrays.1#0 <- block@0, arrays.1#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.1#1: Encoded(uint8[4]) = φ(arrays.1#0 <- block@0, arrays.1#0 <- block@1) (arrays.1#1) with arrays.1#0
debug: Deleting Phi assignment: let arrays.1#1: Encoded(uint8[4]) = φ(arrays.1#0 <- block@0, arrays.1#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.1#1: Encoded(uint8[4]) = φ(arrays.1#0 <- block@0, arrays.1#0 <- block@1) (arrays.1#1) with arrays.1#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1%is_original#1: bool = undefined while trying to resolve 'arrays.1%is_original' in block@2
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#1: bool = φ(arrays.1%is_original#0 <- block@0) in block@0
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#1: bool = φ(arrays.1%is_original#0 <- block@0, arrays.1%is_original#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.1%is_original#1: bool = φ(arrays.1%is_original#0 <- block@0, arrays.1%is_original#0 <- block@1) (arrays.1%is_original#1) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#1: bool = φ(arrays.1%is_original#0 <- block@0, arrays.1%is_original#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.1%is_original#1: bool = φ(arrays.1%is_original#0 <- block@0, arrays.1%is_original#0 <- block@1) (arrays.1%is_original#1) with arrays.1%is_original#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let start#2: uint64 = undefined while trying to resolve 'start' in block@4
debug: Added start#0 to Phi node: let start#2: uint64 = φ(start#0 <- block@2) in block@2
debug: Added start#0 to Phi node: let start#2: uint64 = φ(start#0 <- block@2, start#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let start#2: uint64 = φ(start#0 <- block@2, start#0 <- block@3) (start#2) with start#0
debug: Deleting Phi assignment: let start#2: uint64 = φ(start#0 <- block@2, start#0 <- block@3)
debug: Replaced trivial Phi node: let start#2: uint64 = φ(start#0 <- block@2, start#0 <- block@3) (start#2) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2#1: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@4
debug: Created Phi assignment: let arrays.2#2: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@2
debug: Added arrays.2#0 to Phi node: let arrays.2#2: Encoded(uint8[4]) = φ(arrays.2#0 <- block@0) in block@0
debug: Added arrays.2#0 to Phi node: let arrays.2#2: Encoded(uint8[4]) = φ(arrays.2#0 <- block@0, arrays.2#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.2#2: Encoded(uint8[4]) = φ(arrays.2#0 <- block@0, arrays.2#0 <- block@1) (arrays.2#2) with arrays.2#0
debug: Deleting Phi assignment: let arrays.2#2: Encoded(uint8[4]) = φ(arrays.2#0 <- block@0, arrays.2#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.2#2: Encoded(uint8[4]) = φ(arrays.2#0 <- block@0, arrays.2#0 <- block@1) (arrays.2#2) with arrays.2#0 in current definition for 1 blocks
debug: Added arrays.2#0 to Phi node: let arrays.2#1: Encoded(uint8[4]) = φ(arrays.2#0 <- block@2) in block@2
debug: Added arrays.2#0 to Phi node: let arrays.2#1: Encoded(uint8[4]) = φ(arrays.2#0 <- block@2, arrays.2#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.2#1: Encoded(uint8[4]) = φ(arrays.2#0 <- block@2, arrays.2#0 <- block@3) (arrays.2#1) with arrays.2#0
debug: Deleting Phi assignment: let arrays.2#1: Encoded(uint8[4]) = φ(arrays.2#0 <- block@2, arrays.2#0 <- block@3)
debug: Replaced trivial Phi node: let arrays.2#1: Encoded(uint8[4]) = φ(arrays.2#0 <- block@2, arrays.2#0 <- block@3) (arrays.2#1) with arrays.2#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2%is_original#1: bool = undefined while trying to resolve 'arrays.2%is_original' in block@4
debug: Created Phi assignment: let arrays.2%is_original#2: bool = undefined while trying to resolve 'arrays.2%is_original' in block@2
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#2: bool = φ(arrays.2%is_original#0 <- block@0) in block@0
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#2: bool = φ(arrays.2%is_original#0 <- block@0, arrays.2%is_original#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.2%is_original#2: bool = φ(arrays.2%is_original#0 <- block@0, arrays.2%is_original#0 <- block@1) (arrays.2%is_original#2) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#2: bool = φ(arrays.2%is_original#0 <- block@0, arrays.2%is_original#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.2%is_original#2: bool = φ(arrays.2%is_original#0 <- block@0, arrays.2%is_original#0 <- block@1) (arrays.2%is_original#2) with arrays.2%is_original#0 in current definition for 1 blocks
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#1: bool = φ(arrays.2%is_original#0 <- block@2) in block@2
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#1: bool = φ(arrays.2%is_original#0 <- block@2, arrays.2%is_original#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.2%is_original#1: bool = φ(arrays.2%is_original#0 <- block@2, arrays.2%is_original#0 <- block@3) (arrays.2%is_original#1) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#1: bool = φ(arrays.2%is_original#0 <- block@2, arrays.2%is_original#0 <- block@3)
debug: Replaced trivial Phi node: let arrays.2%is_original#1: bool = φ(arrays.2%is_original#0 <- block@2, arrays.2%is_original#0 <- block@3) (arrays.2%is_original#1) with arrays.2%is_original#0 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let arrays.0#2: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@6
debug: Created Phi assignment: let arrays.0#3: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@4
debug: Created Phi assignment: let arrays.0#4: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@2
debug: Added arrays.0#1 to Phi node: let arrays.0#4: Encoded(uint8[4]) = φ(arrays.0#1 <- block@0) in block@0
debug: Added arrays.0#1 to Phi node: let arrays.0#4: Encoded(uint8[4]) = φ(arrays.0#1 <- block@0, arrays.0#1 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.0#4: Encoded(uint8[4]) = φ(arrays.0#1 <- block@0, arrays.0#1 <- block@1) (arrays.0#4) with arrays.0#1
debug: Deleting Phi assignment: let arrays.0#4: Encoded(uint8[4]) = φ(arrays.0#1 <- block@0, arrays.0#1 <- block@1)
debug: Replaced trivial Phi node: let arrays.0#4: Encoded(uint8[4]) = φ(arrays.0#1 <- block@0, arrays.0#1 <- block@1) (arrays.0#4) with arrays.0#1 in current definition for 1 blocks
debug: Added arrays.0#1 to Phi node: let arrays.0#3: Encoded(uint8[4]) = φ(arrays.0#1 <- block@2) in block@2
debug: Added arrays.0#1 to Phi node: let arrays.0#3: Encoded(uint8[4]) = φ(arrays.0#1 <- block@2, arrays.0#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.0#3: Encoded(uint8[4]) = φ(arrays.0#1 <- block@2, arrays.0#1 <- block@3) (arrays.0#3) with arrays.0#1
debug: Deleting Phi assignment: let arrays.0#3: Encoded(uint8[4]) = φ(arrays.0#1 <- block@2, arrays.0#1 <- block@3)
debug: Replaced trivial Phi node: let arrays.0#3: Encoded(uint8[4]) = φ(arrays.0#1 <- block@2, arrays.0#1 <- block@3) (arrays.0#3) with arrays.0#1 in current definition for 1 blocks
debug: Added arrays.0#1 to Phi node: let arrays.0#2: Encoded(uint8[4]) = φ(arrays.0#1 <- block@4) in block@4
debug: Added arrays.0#1 to Phi node: let arrays.0#2: Encoded(uint8[4]) = φ(arrays.0#1 <- block@4, arrays.0#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.0#2: Encoded(uint8[4]) = φ(arrays.0#1 <- block@4, arrays.0#1 <- block@5) (arrays.0#2) with arrays.0#1
debug: Deleting Phi assignment: let arrays.0#2: Encoded(uint8[4]) = φ(arrays.0#1 <- block@4, arrays.0#1 <- block@5)
debug: Replaced trivial Phi node: let arrays.0#2: Encoded(uint8[4]) = φ(arrays.0#1 <- block@4, arrays.0#1 <- block@5) (arrays.0#2) with arrays.0#1 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1#3: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@6
debug: Created Phi assignment: let arrays.1#4: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@4
debug: Added arrays.1#2 to Phi node: let arrays.1#4: Encoded(uint8[4]) = φ(arrays.1#2 <- block@2) in block@2
debug: Added arrays.1#2 to Phi node: let arrays.1#4: Encoded(uint8[4]) = φ(arrays.1#2 <- block@2, arrays.1#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.1#4: Encoded(uint8[4]) = φ(arrays.1#2 <- block@2, arrays.1#2 <- block@3) (arrays.1#4) with arrays.1#2
debug: Deleting Phi assignment: let arrays.1#4: Encoded(uint8[4]) = φ(arrays.1#2 <- block@2, arrays.1#2 <- block@3)
debug: Replaced trivial Phi node: let arrays.1#4: Encoded(uint8[4]) = φ(arrays.1#2 <- block@2, arrays.1#2 <- block@3) (arrays.1#4) with arrays.1#2 in current definition for 1 blocks
debug: Added arrays.1#2 to Phi node: let arrays.1#3: Encoded(uint8[4]) = φ(arrays.1#2 <- block@4) in block@4
debug: Added arrays.1#2 to Phi node: let arrays.1#3: Encoded(uint8[4]) = φ(arrays.1#2 <- block@4, arrays.1#2 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.1#3: Encoded(uint8[4]) = φ(arrays.1#2 <- block@4, arrays.1#2 <- block@5) (arrays.1#3) with arrays.1#2
debug: Deleting Phi assignment: let arrays.1#3: Encoded(uint8[4]) = φ(arrays.1#2 <- block@4, arrays.1#2 <- block@5)
debug: Replaced trivial Phi node: let arrays.1#3: Encoded(uint8[4]) = φ(arrays.1#2 <- block@4, arrays.1#2 <- block@5) (arrays.1#3) with arrays.1#2 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2#4: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@6
debug: Added arrays.2#3 to Phi node: let arrays.2#4: Encoded(uint8[4]) = φ(arrays.2#3 <- block@4) in block@4
debug: Added arrays.2#3 to Phi node: let arrays.2#4: Encoded(uint8[4]) = φ(arrays.2#3 <- block@4, arrays.2#3 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.2#4: Encoded(uint8[4]) = φ(arrays.2#3 <- block@4, arrays.2#3 <- block@5) (arrays.2#4) with arrays.2#3
debug: Deleting Phi assignment: let arrays.2#4: Encoded(uint8[4]) = φ(arrays.2#3 <- block@4, arrays.2#3 <- block@5)
debug: Replaced trivial Phi node: let arrays.2#4: Encoded(uint8[4]) = φ(arrays.2#3 <- block@4, arrays.2#3 <- block@5) (arrays.2#4) with arrays.2#3 in current definition for 1 blocks
debug: Created Phi assignment: let start#3: uint64 = undefined while trying to resolve 'start' in block@6
debug: Added start#0 to Phi node: let start#3: uint64 = φ(start#0 <- block@4) in block@4
debug: Added start#0 to Phi node: let start#3: uint64 = φ(start#0 <- block@4, start#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let start#3: uint64 = φ(start#0 <- block@4, start#0 <- block@5) (start#3) with start#0
debug: Deleting Phi assignment: let start#3: uint64 = φ(start#0 <- block@4, start#0 <- block@5)
debug: Replaced trivial Phi node: let start#3: uint64 = φ(start#0 <- block@4, start#0 <- block@5) (start#3) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.0%is_original#1: bool = undefined while trying to resolve 'arrays.0%is_original' in block@6
debug: Created Phi assignment: let arrays.0%is_original#2: bool = undefined while trying to resolve 'arrays.0%is_original' in block@4
debug: Created Phi assignment: let arrays.0%is_original#3: bool = undefined while trying to resolve 'arrays.0%is_original' in block@2
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#3: bool = φ(arrays.0%is_original#0 <- block@0) in block@0
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#3: bool = φ(arrays.0%is_original#0 <- block@0, arrays.0%is_original#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.0%is_original#3: bool = φ(arrays.0%is_original#0 <- block@0, arrays.0%is_original#0 <- block@1) (arrays.0%is_original#3) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#3: bool = φ(arrays.0%is_original#0 <- block@0, arrays.0%is_original#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.0%is_original#3: bool = φ(arrays.0%is_original#0 <- block@0, arrays.0%is_original#0 <- block@1) (arrays.0%is_original#3) with arrays.0%is_original#0 in current definition for 1 blocks
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#2: bool = φ(arrays.0%is_original#0 <- block@2) in block@2
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#2: bool = φ(arrays.0%is_original#0 <- block@2, arrays.0%is_original#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.0%is_original#2: bool = φ(arrays.0%is_original#0 <- block@2, arrays.0%is_original#0 <- block@3) (arrays.0%is_original#2) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#2: bool = φ(arrays.0%is_original#0 <- block@2, arrays.0%is_original#0 <- block@3)
debug: Replaced trivial Phi node: let arrays.0%is_original#2: bool = φ(arrays.0%is_original#0 <- block@2, arrays.0%is_original#0 <- block@3) (arrays.0%is_original#2) with arrays.0%is_original#0 in current definition for 1 blocks
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#1: bool = φ(arrays.0%is_original#0 <- block@4) in block@4
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#1: bool = φ(arrays.0%is_original#0 <- block@4, arrays.0%is_original#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.0%is_original#1: bool = φ(arrays.0%is_original#0 <- block@4, arrays.0%is_original#0 <- block@5) (arrays.0%is_original#1) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#1: bool = φ(arrays.0%is_original#0 <- block@4, arrays.0%is_original#0 <- block@5)
debug: Replaced trivial Phi node: let arrays.0%is_original#1: bool = φ(arrays.0%is_original#0 <- block@4, arrays.0%is_original#0 <- block@5) (arrays.0%is_original#1) with arrays.0%is_original#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let start#4: uint64 = undefined while trying to resolve 'start' in block@8
debug: Added start#0 to Phi node: let start#4: uint64 = φ(start#0 <- block@6) in block@6
debug: Added start#0 to Phi node: let start#4: uint64 = φ(start#0 <- block@6, start#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let start#4: uint64 = φ(start#0 <- block@6, start#0 <- block@7) (start#4) with start#0
debug: Deleting Phi assignment: let start#4: uint64 = φ(start#0 <- block@6, start#0 <- block@7)
debug: Replaced trivial Phi node: let start#4: uint64 = φ(start#0 <- block@6, start#0 <- block@7) (start#4) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1#5: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@8
debug: Added arrays.1#2 to Phi node: let arrays.1#5: Encoded(uint8[4]) = φ(arrays.1#2 <- block@6) in block@6
debug: Added arrays.1#2 to Phi node: let arrays.1#5: Encoded(uint8[4]) = φ(arrays.1#2 <- block@6, arrays.1#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.1#5: Encoded(uint8[4]) = φ(arrays.1#2 <- block@6, arrays.1#2 <- block@7) (arrays.1#5) with arrays.1#2
debug: Deleting Phi assignment: let arrays.1#5: Encoded(uint8[4]) = φ(arrays.1#2 <- block@6, arrays.1#2 <- block@7)
debug: Replaced trivial Phi node: let arrays.1#5: Encoded(uint8[4]) = φ(arrays.1#2 <- block@6, arrays.1#2 <- block@7) (arrays.1#5) with arrays.1#2 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1%is_original#2: bool = undefined while trying to resolve 'arrays.1%is_original' in block@8
debug: Created Phi assignment: let arrays.1%is_original#3: bool = undefined while trying to resolve 'arrays.1%is_original' in block@6
debug: Created Phi assignment: let arrays.1%is_original#4: bool = undefined while trying to resolve 'arrays.1%is_original' in block@4
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#4: bool = φ(arrays.1%is_original#0 <- block@2) in block@2
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#4: bool = φ(arrays.1%is_original#0 <- block@2, arrays.1%is_original#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.1%is_original#4: bool = φ(arrays.1%is_original#0 <- block@2, arrays.1%is_original#0 <- block@3) (arrays.1%is_original#4) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#4: bool = φ(arrays.1%is_original#0 <- block@2, arrays.1%is_original#0 <- block@3)
debug: Replaced trivial Phi node: let arrays.1%is_original#4: bool = φ(arrays.1%is_original#0 <- block@2, arrays.1%is_original#0 <- block@3) (arrays.1%is_original#4) with arrays.1%is_original#0 in current definition for 1 blocks
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#3: bool = φ(arrays.1%is_original#0 <- block@4) in block@4
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#3: bool = φ(arrays.1%is_original#0 <- block@4, arrays.1%is_original#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.1%is_original#3: bool = φ(arrays.1%is_original#0 <- block@4, arrays.1%is_original#0 <- block@5) (arrays.1%is_original#3) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#3: bool = φ(arrays.1%is_original#0 <- block@4, arrays.1%is_original#0 <- block@5)
debug: Replaced trivial Phi node: let arrays.1%is_original#3: bool = φ(arrays.1%is_original#0 <- block@4, arrays.1%is_original#0 <- block@5) (arrays.1%is_original#3) with arrays.1%is_original#0 in current definition for 1 blocks
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#2: bool = φ(arrays.1%is_original#0 <- block@6) in block@6
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#2: bool = φ(arrays.1%is_original#0 <- block@6, arrays.1%is_original#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.1%is_original#2: bool = φ(arrays.1%is_original#0 <- block@6, arrays.1%is_original#0 <- block@7) (arrays.1%is_original#2) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#2: bool = φ(arrays.1%is_original#0 <- block@6, arrays.1%is_original#0 <- block@7)
debug: Replaced trivial Phi node: let arrays.1%is_original#2: bool = φ(arrays.1%is_original#0 <- block@6, arrays.1%is_original#0 <- block@7) (arrays.1%is_original#2) with arrays.1%is_original#0 in current definition for 1 blocks
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let start#5: uint64 = undefined while trying to resolve 'start' in block@10
debug: Added start#0 to Phi node: let start#5: uint64 = φ(start#0 <- block@8) in block@8
debug: Added start#0 to Phi node: let start#5: uint64 = φ(start#0 <- block@8, start#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let start#5: uint64 = φ(start#0 <- block@8, start#0 <- block@9) (start#5) with start#0
debug: Deleting Phi assignment: let start#5: uint64 = φ(start#0 <- block@8, start#0 <- block@9)
debug: Replaced trivial Phi node: let start#5: uint64 = φ(start#0 <- block@8, start#0 <- block@9) (start#5) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2#5: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@10
debug: Created Phi assignment: let arrays.2#6: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@8
debug: Added arrays.2#3 to Phi node: let arrays.2#6: Encoded(uint8[4]) = φ(arrays.2#3 <- block@6) in block@6
debug: Added arrays.2#3 to Phi node: let arrays.2#6: Encoded(uint8[4]) = φ(arrays.2#3 <- block@6, arrays.2#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.2#6: Encoded(uint8[4]) = φ(arrays.2#3 <- block@6, arrays.2#3 <- block@7) (arrays.2#6) with arrays.2#3
debug: Deleting Phi assignment: let arrays.2#6: Encoded(uint8[4]) = φ(arrays.2#3 <- block@6, arrays.2#3 <- block@7)
debug: Replaced trivial Phi node: let arrays.2#6: Encoded(uint8[4]) = φ(arrays.2#3 <- block@6, arrays.2#3 <- block@7) (arrays.2#6) with arrays.2#3 in current definition for 1 blocks
debug: Added arrays.2#3 to Phi node: let arrays.2#5: Encoded(uint8[4]) = φ(arrays.2#3 <- block@8) in block@8
debug: Added arrays.2#3 to Phi node: let arrays.2#5: Encoded(uint8[4]) = φ(arrays.2#3 <- block@8, arrays.2#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.2#5: Encoded(uint8[4]) = φ(arrays.2#3 <- block@8, arrays.2#3 <- block@9) (arrays.2#5) with arrays.2#3
debug: Deleting Phi assignment: let arrays.2#5: Encoded(uint8[4]) = φ(arrays.2#3 <- block@8, arrays.2#3 <- block@9)
debug: Replaced trivial Phi node: let arrays.2#5: Encoded(uint8[4]) = φ(arrays.2#3 <- block@8, arrays.2#3 <- block@9) (arrays.2#5) with arrays.2#3 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2%is_original#3: bool = undefined while trying to resolve 'arrays.2%is_original' in block@10
debug: Created Phi assignment: let arrays.2%is_original#4: bool = undefined while trying to resolve 'arrays.2%is_original' in block@8
debug: Created Phi assignment: let arrays.2%is_original#5: bool = undefined while trying to resolve 'arrays.2%is_original' in block@6
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#5: bool = φ(arrays.2%is_original#0 <- block@4) in block@4
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#5: bool = φ(arrays.2%is_original#0 <- block@4, arrays.2%is_original#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.2%is_original#5: bool = φ(arrays.2%is_original#0 <- block@4, arrays.2%is_original#0 <- block@5) (arrays.2%is_original#5) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#5: bool = φ(arrays.2%is_original#0 <- block@4, arrays.2%is_original#0 <- block@5)
debug: Replaced trivial Phi node: let arrays.2%is_original#5: bool = φ(arrays.2%is_original#0 <- block@4, arrays.2%is_original#0 <- block@5) (arrays.2%is_original#5) with arrays.2%is_original#0 in current definition for 1 blocks
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#4: bool = φ(arrays.2%is_original#0 <- block@6) in block@6
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#4: bool = φ(arrays.2%is_original#0 <- block@6, arrays.2%is_original#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.2%is_original#4: bool = φ(arrays.2%is_original#0 <- block@6, arrays.2%is_original#0 <- block@7) (arrays.2%is_original#4) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#4: bool = φ(arrays.2%is_original#0 <- block@6, arrays.2%is_original#0 <- block@7)
debug: Replaced trivial Phi node: let arrays.2%is_original#4: bool = φ(arrays.2%is_original#0 <- block@6, arrays.2%is_original#0 <- block@7) (arrays.2%is_original#4) with arrays.2%is_original#0 in current definition for 1 blocks
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#3: bool = φ(arrays.2%is_original#0 <- block@8) in block@8
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#3: bool = φ(arrays.2%is_original#0 <- block@8, arrays.2%is_original#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.2%is_original#3: bool = φ(arrays.2%is_original#0 <- block@8, arrays.2%is_original#0 <- block@9) (arrays.2%is_original#3) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#3: bool = φ(arrays.2%is_original#0 <- block@8, arrays.2%is_original#0 <- block@9)
debug: Replaced trivial Phi node: let arrays.2%is_original#3: bool = φ(arrays.2%is_original#0 <- block@8, arrays.2%is_original#0 <- block@9) (arrays.2%is_original#3) with arrays.2%is_original#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Created Phi assignment: let reassign#1: bool = undefined while trying to resolve 'reassign' in block@12
debug: Created Phi assignment: let reassign#2: bool = undefined while trying to resolve 'reassign' in block@10
debug: Created Phi assignment: let reassign#3: bool = undefined while trying to resolve 'reassign' in block@8
debug: Created Phi assignment: let reassign#4: bool = undefined while trying to resolve 'reassign' in block@6
debug: Created Phi assignment: let reassign#5: bool = undefined while trying to resolve 'reassign' in block@4
debug: Created Phi assignment: let reassign#6: bool = undefined while trying to resolve 'reassign' in block@2
debug: Added reassign#0 to Phi node: let reassign#6: bool = φ(reassign#0 <- block@0) in block@0
debug: Added reassign#0 to Phi node: let reassign#6: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let reassign#6: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) (reassign#6) with reassign#0
debug: Deleting Phi assignment: let reassign#6: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1)
debug: Replaced trivial Phi node: let reassign#6: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) (reassign#6) with reassign#0 in current definition for 1 blocks
debug: Added reassign#0 to Phi node: let reassign#5: bool = φ(reassign#0 <- block@2) in block@2
debug: Added reassign#0 to Phi node: let reassign#5: bool = φ(reassign#0 <- block@2, reassign#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let reassign#5: bool = φ(reassign#0 <- block@2, reassign#0 <- block@3) (reassign#5) with reassign#0
debug: Deleting Phi assignment: let reassign#5: bool = φ(reassign#0 <- block@2, reassign#0 <- block@3)
debug: Replaced trivial Phi node: let reassign#5: bool = φ(reassign#0 <- block@2, reassign#0 <- block@3) (reassign#5) with reassign#0 in current definition for 1 blocks
debug: Added reassign#0 to Phi node: let reassign#4: bool = φ(reassign#0 <- block@4) in block@4
debug: Added reassign#0 to Phi node: let reassign#4: bool = φ(reassign#0 <- block@4, reassign#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let reassign#4: bool = φ(reassign#0 <- block@4, reassign#0 <- block@5) (reassign#4) with reassign#0
debug: Deleting Phi assignment: let reassign#4: bool = φ(reassign#0 <- block@4, reassign#0 <- block@5)
debug: Replaced trivial Phi node: let reassign#4: bool = φ(reassign#0 <- block@4, reassign#0 <- block@5) (reassign#4) with reassign#0 in current definition for 1 blocks
debug: Added reassign#0 to Phi node: let reassign#3: bool = φ(reassign#0 <- block@6) in block@6
debug: Added reassign#0 to Phi node: let reassign#3: bool = φ(reassign#0 <- block@6, reassign#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let reassign#3: bool = φ(reassign#0 <- block@6, reassign#0 <- block@7) (reassign#3) with reassign#0
debug: Deleting Phi assignment: let reassign#3: bool = φ(reassign#0 <- block@6, reassign#0 <- block@7)
debug: Replaced trivial Phi node: let reassign#3: bool = φ(reassign#0 <- block@6, reassign#0 <- block@7) (reassign#3) with reassign#0 in current definition for 1 blocks
debug: Added reassign#0 to Phi node: let reassign#2: bool = φ(reassign#0 <- block@8) in block@8
debug: Added reassign#0 to Phi node: let reassign#2: bool = φ(reassign#0 <- block@8, reassign#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let reassign#2: bool = φ(reassign#0 <- block@8, reassign#0 <- block@9) (reassign#2) with reassign#0
debug: Deleting Phi assignment: let reassign#2: bool = φ(reassign#0 <- block@8, reassign#0 <- block@9)
debug: Replaced trivial Phi node: let reassign#2: bool = φ(reassign#0 <- block@8, reassign#0 <- block@9) (reassign#2) with reassign#0 in current definition for 1 blocks
debug: Added reassign#0 to Phi node: let reassign#1: bool = φ(reassign#0 <- block@10) in block@10
debug: Added reassign#0 to Phi node: let reassign#1: bool = φ(reassign#0 <- block@10, reassign#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let reassign#1: bool = φ(reassign#0 <- block@10, reassign#0 <- block@11) (reassign#1) with reassign#0
debug: Deleting Phi assignment: let reassign#1: bool = φ(reassign#0 <- block@10, reassign#0 <- block@11)
debug: Replaced trivial Phi node: let reassign#1: bool = φ(reassign#0 <- block@10, reassign#0 <- block@11) (reassign#1) with reassign#0 in current definition for 1 blocks
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let arrays.0#6: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@12
debug: Created Phi assignment: let arrays.0#7: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@10
debug: Created Phi assignment: let arrays.0#8: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@8
debug: Added arrays.0#5 to Phi node: let arrays.0#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@6) in block@6
debug: Added arrays.0#5 to Phi node: let arrays.0#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@6, arrays.0#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.0#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@6, arrays.0#5 <- block@7) (arrays.0#8) with arrays.0#5
debug: Deleting Phi assignment: let arrays.0#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@6, arrays.0#5 <- block@7)
debug: Replaced trivial Phi node: let arrays.0#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@6, arrays.0#5 <- block@7) (arrays.0#8) with arrays.0#5 in current definition for 1 blocks
debug: Added arrays.0#5 to Phi node: let arrays.0#7: Encoded(uint8[4]) = φ(arrays.0#5 <- block@8) in block@8
debug: Added arrays.0#5 to Phi node: let arrays.0#7: Encoded(uint8[4]) = φ(arrays.0#5 <- block@8, arrays.0#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.0#7: Encoded(uint8[4]) = φ(arrays.0#5 <- block@8, arrays.0#5 <- block@9) (arrays.0#7) with arrays.0#5
debug: Deleting Phi assignment: let arrays.0#7: Encoded(uint8[4]) = φ(arrays.0#5 <- block@8, arrays.0#5 <- block@9)
debug: Replaced trivial Phi node: let arrays.0#7: Encoded(uint8[4]) = φ(arrays.0#5 <- block@8, arrays.0#5 <- block@9) (arrays.0#7) with arrays.0#5 in current definition for 1 blocks
debug: Added arrays.0#5 to Phi node: let arrays.0#6: Encoded(uint8[4]) = φ(arrays.0#5 <- block@10) in block@10
debug: Added arrays.0#5 to Phi node: let arrays.0#6: Encoded(uint8[4]) = φ(arrays.0#5 <- block@10, arrays.0#5 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.0#6: Encoded(uint8[4]) = φ(arrays.0#5 <- block@10, arrays.0#5 <- block@11) (arrays.0#6) with arrays.0#5
debug: Deleting Phi assignment: let arrays.0#6: Encoded(uint8[4]) = φ(arrays.0#5 <- block@10, arrays.0#5 <- block@11)
debug: Replaced trivial Phi node: let arrays.0#6: Encoded(uint8[4]) = φ(arrays.0#5 <- block@10, arrays.0#5 <- block@11) (arrays.0#6) with arrays.0#5 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1#7: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@12
debug: Created Phi assignment: let arrays.1#8: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@10
debug: Added arrays.1#6 to Phi node: let arrays.1#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@8) in block@8
debug: Added arrays.1#6 to Phi node: let arrays.1#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@8, arrays.1#6 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.1#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@8, arrays.1#6 <- block@9) (arrays.1#8) with arrays.1#6
debug: Deleting Phi assignment: let arrays.1#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@8, arrays.1#6 <- block@9)
debug: Replaced trivial Phi node: let arrays.1#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@8, arrays.1#6 <- block@9) (arrays.1#8) with arrays.1#6 in current definition for 1 blocks
debug: Added arrays.1#6 to Phi node: let arrays.1#7: Encoded(uint8[4]) = φ(arrays.1#6 <- block@10) in block@10
debug: Added arrays.1#6 to Phi node: let arrays.1#7: Encoded(uint8[4]) = φ(arrays.1#6 <- block@10, arrays.1#6 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.1#7: Encoded(uint8[4]) = φ(arrays.1#6 <- block@10, arrays.1#6 <- block@11) (arrays.1#7) with arrays.1#6
debug: Deleting Phi assignment: let arrays.1#7: Encoded(uint8[4]) = φ(arrays.1#6 <- block@10, arrays.1#6 <- block@11)
debug: Replaced trivial Phi node: let arrays.1#7: Encoded(uint8[4]) = φ(arrays.1#6 <- block@10, arrays.1#6 <- block@11) (arrays.1#7) with arrays.1#6 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2#8: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@12
debug: Added arrays.2#7 to Phi node: let arrays.2#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@10) in block@10
debug: Added arrays.2#7 to Phi node: let arrays.2#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@10, arrays.2#7 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.2#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@10, arrays.2#7 <- block@11) (arrays.2#8) with arrays.2#7
debug: Deleting Phi assignment: let arrays.2#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@10, arrays.2#7 <- block@11)
debug: Replaced trivial Phi node: let arrays.2#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@10, arrays.2#7 <- block@11) (arrays.2#8) with arrays.2#7 in current definition for 1 blocks
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let arrays.1%is_original#6: bool = undefined while trying to resolve 'arrays.1%is_original' in block@15
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#6: bool = φ(arrays.1%is_original#5 <- block@13) in block@13
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#6: bool = φ(arrays.1%is_original#5 <- block@13, arrays.1%is_original#5 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.1%is_original#6: bool = φ(arrays.1%is_original#5 <- block@13, arrays.1%is_original#5 <- block@14) (arrays.1%is_original#6) with arrays.1%is_original#5
debug: Deleting Phi assignment: let arrays.1%is_original#6: bool = φ(arrays.1%is_original#5 <- block@13, arrays.1%is_original#5 <- block@14)
debug: Replaced trivial Phi node: let arrays.1%is_original#6: bool = φ(arrays.1%is_original#5 <- block@13, arrays.1%is_original#5 <- block@14) (arrays.1%is_original#6) with arrays.1%is_original#5 in current definition for 1 blocks
debug: Terminated block@15
debug: Sealing block@16
debug: Created Phi assignment: let arrays.1#10: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@15
debug: Added arrays.1#9 to Phi node: let arrays.1#10: Encoded(uint8[4]) = φ(arrays.1#9 <- block@13) in block@13
debug: Added arrays.1#9 to Phi node: let arrays.1#10: Encoded(uint8[4]) = φ(arrays.1#9 <- block@13, arrays.1#9 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.1#10: Encoded(uint8[4]) = φ(arrays.1#9 <- block@13, arrays.1#9 <- block@14) (arrays.1#10) with arrays.1#9
debug: Deleting Phi assignment: let arrays.1#10: Encoded(uint8[4]) = φ(arrays.1#9 <- block@13, arrays.1#9 <- block@14)
debug: Replaced trivial Phi node: let arrays.1#10: Encoded(uint8[4]) = φ(arrays.1#9 <- block@13, arrays.1#9 <- block@14) (arrays.1#10) with arrays.1#9 in current definition for 1 blocks
debug: Terminated block@16
debug: Sealing block@17
debug: Created Phi assignment: let arrays.2%is_original#7: bool = undefined while trying to resolve 'arrays.2%is_original' in block@17
debug: Created Phi assignment: let arrays.2%is_original#8: bool = undefined while trying to resolve 'arrays.2%is_original' in block@15
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#8: bool = φ(arrays.2%is_original#6 <- block@13) in block@13
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#8: bool = φ(arrays.2%is_original#6 <- block@13, arrays.2%is_original#6 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.2%is_original#8: bool = φ(arrays.2%is_original#6 <- block@13, arrays.2%is_original#6 <- block@14) (arrays.2%is_original#8) with arrays.2%is_original#6
debug: Deleting Phi assignment: let arrays.2%is_original#8: bool = φ(arrays.2%is_original#6 <- block@13, arrays.2%is_original#6 <- block@14)
debug: Replaced trivial Phi node: let arrays.2%is_original#8: bool = φ(arrays.2%is_original#6 <- block@13, arrays.2%is_original#6 <- block@14) (arrays.2%is_original#8) with arrays.2%is_original#6 in current definition for 1 blocks
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#7: bool = φ(arrays.2%is_original#6 <- block@15) in block@15
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#7: bool = φ(arrays.2%is_original#6 <- block@15, arrays.2%is_original#6 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.2%is_original#7: bool = φ(arrays.2%is_original#6 <- block@15, arrays.2%is_original#6 <- block@16) (arrays.2%is_original#7) with arrays.2%is_original#6
debug: Deleting Phi assignment: let arrays.2%is_original#7: bool = φ(arrays.2%is_original#6 <- block@15, arrays.2%is_original#6 <- block@16)
debug: Replaced trivial Phi node: let arrays.2%is_original#7: bool = φ(arrays.2%is_original#6 <- block@15, arrays.2%is_original#6 <- block@16) (arrays.2%is_original#7) with arrays.2%is_original#6 in current definition for 1 blocks
debug: Terminated block@17
debug: Sealing block@18
debug: Created Phi assignment: let arrays.2#10: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@17
debug: Created Phi assignment: let arrays.2#11: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@15
debug: Added arrays.2#9 to Phi node: let arrays.2#11: Encoded(uint8[4]) = φ(arrays.2#9 <- block@13) in block@13
debug: Added arrays.2#9 to Phi node: let arrays.2#11: Encoded(uint8[4]) = φ(arrays.2#9 <- block@13, arrays.2#9 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.2#11: Encoded(uint8[4]) = φ(arrays.2#9 <- block@13, arrays.2#9 <- block@14) (arrays.2#11) with arrays.2#9
debug: Deleting Phi assignment: let arrays.2#11: Encoded(uint8[4]) = φ(arrays.2#9 <- block@13, arrays.2#9 <- block@14)
debug: Replaced trivial Phi node: let arrays.2#11: Encoded(uint8[4]) = φ(arrays.2#9 <- block@13, arrays.2#9 <- block@14) (arrays.2#11) with arrays.2#9 in current definition for 1 blocks
debug: Added arrays.2#9 to Phi node: let arrays.2#10: Encoded(uint8[4]) = φ(arrays.2#9 <- block@15) in block@15
debug: Added arrays.2#9 to Phi node: let arrays.2#10: Encoded(uint8[4]) = φ(arrays.2#9 <- block@15, arrays.2#9 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.2#10: Encoded(uint8[4]) = φ(arrays.2#9 <- block@15, arrays.2#9 <- block@16) (arrays.2#10) with arrays.2#9
debug: Deleting Phi assignment: let arrays.2#10: Encoded(uint8[4]) = φ(arrays.2#9 <- block@15, arrays.2#9 <- block@16)
debug: Replaced trivial Phi node: let arrays.2#10: Encoded(uint8[4]) = φ(arrays.2#9 <- block@15, arrays.2#9 <- block@16) (arrays.2#10) with arrays.2#9 in current definition for 1 blocks
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Created Phi assignment: let start#6: uint64 = undefined while trying to resolve 'start' in block@20
debug: Created Phi assignment: let start#7: uint64 = undefined while trying to resolve 'start' in block@12
debug: Added start#0 to Phi node: let start#7: uint64 = φ(start#0 <- block@10) in block@10
debug: Added start#0 to Phi node: let start#7: uint64 = φ(start#0 <- block@10, start#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let start#7: uint64 = φ(start#0 <- block@10, start#0 <- block@11) (start#7) with start#0
debug: Deleting Phi assignment: let start#7: uint64 = φ(start#0 <- block@10, start#0 <- block@11)
debug: Replaced trivial Phi node: let start#7: uint64 = φ(start#0 <- block@10, start#0 <- block@11) (start#7) with start#0 in current definition for 1 blocks
debug: Added start#0 to Phi node: let start#6: uint64 = φ(start#0 <- block@12) in block@12
debug: Created Phi assignment: let start#8: uint64 = undefined while trying to resolve 'start' in block@19
debug: Created Phi assignment: let start#9: uint64 = undefined while trying to resolve 'start' in block@17
debug: Created Phi assignment: let start#10: uint64 = undefined while trying to resolve 'start' in block@15
debug: Added start#0 to Phi node: let start#10: uint64 = φ(start#0 <- block@13) in block@13
debug: Added start#0 to Phi node: let start#10: uint64 = φ(start#0 <- block@13, start#0 <- block@14) in block@14
debug: Replacing trivial Phi node: let start#10: uint64 = φ(start#0 <- block@13, start#0 <- block@14) (start#10) with start#0
debug: Deleting Phi assignment: let start#10: uint64 = φ(start#0 <- block@13, start#0 <- block@14)
debug: Replaced trivial Phi node: let start#10: uint64 = φ(start#0 <- block@13, start#0 <- block@14) (start#10) with start#0 in current definition for 1 blocks
debug: Added start#0 to Phi node: let start#9: uint64 = φ(start#0 <- block@15) in block@15
debug: Added start#0 to Phi node: let start#9: uint64 = φ(start#0 <- block@15, start#0 <- block@16) in block@16
debug: Replacing trivial Phi node: let start#9: uint64 = φ(start#0 <- block@15, start#0 <- block@16) (start#9) with start#0
debug: Deleting Phi assignment: let start#9: uint64 = φ(start#0 <- block@15, start#0 <- block@16)
debug: Replaced trivial Phi node: let start#9: uint64 = φ(start#0 <- block@15, start#0 <- block@16) (start#9) with start#0 in current definition for 1 blocks
debug: Added start#0 to Phi node: let start#8: uint64 = φ(start#0 <- block@17) in block@17
debug: Added start#0 to Phi node: let start#8: uint64 = φ(start#0 <- block@17, start#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let start#8: uint64 = φ(start#0 <- block@17, start#0 <- block@18) (start#8) with start#0
debug: Deleting Phi assignment: let start#8: uint64 = φ(start#0 <- block@17, start#0 <- block@18)
debug: Replaced trivial Phi node: let start#8: uint64 = φ(start#0 <- block@17, start#0 <- block@18) (start#8) with start#0 in current definition for 1 blocks
debug: Added start#0 to Phi node: let start#6: uint64 = φ(start#0 <- block@12, start#0 <- block@19) in block@19
debug: Replacing trivial Phi node: let start#6: uint64 = φ(start#0 <- block@12, start#0 <- block@19) (start#6) with start#0
debug: Deleting Phi assignment: let start#6: uint64 = φ(start#0 <- block@12, start#0 <- block@19)
debug: Replaced trivial Phi node: let start#6: uint64 = φ(start#0 <- block@12, start#0 <- block@19) (start#6) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.0#10: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@20
debug: Added arrays.0#5 to Phi node: let arrays.0#10: Encoded(uint8[4]) = φ(arrays.0#5 <- block@12) in block@12
debug: Created Phi assignment: let arrays.0#11: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@19
debug: Created Phi assignment: let arrays.0#12: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@17
debug: Created Phi assignment: let arrays.0#13: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@15
debug: Added arrays.0#9 to Phi node: let arrays.0#13: Encoded(uint8[4]) = φ(arrays.0#9 <- block@13) in block@13
debug: Added arrays.0#9 to Phi node: let arrays.0#13: Encoded(uint8[4]) = φ(arrays.0#9 <- block@13, arrays.0#9 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.0#13: Encoded(uint8[4]) = φ(arrays.0#9 <- block@13, arrays.0#9 <- block@14) (arrays.0#13) with arrays.0#9
debug: Deleting Phi assignment: let arrays.0#13: Encoded(uint8[4]) = φ(arrays.0#9 <- block@13, arrays.0#9 <- block@14)
debug: Replaced trivial Phi node: let arrays.0#13: Encoded(uint8[4]) = φ(arrays.0#9 <- block@13, arrays.0#9 <- block@14) (arrays.0#13) with arrays.0#9 in current definition for 1 blocks
debug: Added arrays.0#9 to Phi node: let arrays.0#12: Encoded(uint8[4]) = φ(arrays.0#9 <- block@15) in block@15
debug: Added arrays.0#9 to Phi node: let arrays.0#12: Encoded(uint8[4]) = φ(arrays.0#9 <- block@15, arrays.0#9 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.0#12: Encoded(uint8[4]) = φ(arrays.0#9 <- block@15, arrays.0#9 <- block@16) (arrays.0#12) with arrays.0#9
debug: Deleting Phi assignment: let arrays.0#12: Encoded(uint8[4]) = φ(arrays.0#9 <- block@15, arrays.0#9 <- block@16)
debug: Replaced trivial Phi node: let arrays.0#12: Encoded(uint8[4]) = φ(arrays.0#9 <- block@15, arrays.0#9 <- block@16) (arrays.0#12) with arrays.0#9 in current definition for 1 blocks
debug: Added arrays.0#9 to Phi node: let arrays.0#11: Encoded(uint8[4]) = φ(arrays.0#9 <- block@17) in block@17
debug: Added arrays.0#9 to Phi node: let arrays.0#11: Encoded(uint8[4]) = φ(arrays.0#9 <- block@17, arrays.0#9 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.0#11: Encoded(uint8[4]) = φ(arrays.0#9 <- block@17, arrays.0#9 <- block@18) (arrays.0#11) with arrays.0#9
debug: Deleting Phi assignment: let arrays.0#11: Encoded(uint8[4]) = φ(arrays.0#9 <- block@17, arrays.0#9 <- block@18)
debug: Replaced trivial Phi node: let arrays.0#11: Encoded(uint8[4]) = φ(arrays.0#9 <- block@17, arrays.0#9 <- block@18) (arrays.0#11) with arrays.0#9 in current definition for 1 blocks
debug: Added arrays.0#9 to Phi node: let arrays.0#10: Encoded(uint8[4]) = φ(arrays.0#5 <- block@12, arrays.0#9 <- block@19) in block@19
debug: Created Phi assignment: let arrays.0%is_original#5: bool = undefined while trying to resolve 'arrays.0%is_original' in block@20
debug: Created Phi assignment: let arrays.0%is_original#6: bool = undefined while trying to resolve 'arrays.0%is_original' in block@12
debug: Created Phi assignment: let arrays.0%is_original#7: bool = undefined while trying to resolve 'arrays.0%is_original' in block@10
debug: Created Phi assignment: let arrays.0%is_original#8: bool = undefined while trying to resolve 'arrays.0%is_original' in block@8
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#8: bool = φ(arrays.0%is_original#0 <- block@6) in block@6
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#8: bool = φ(arrays.0%is_original#0 <- block@6, arrays.0%is_original#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.0%is_original#8: bool = φ(arrays.0%is_original#0 <- block@6, arrays.0%is_original#0 <- block@7) (arrays.0%is_original#8) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#8: bool = φ(arrays.0%is_original#0 <- block@6, arrays.0%is_original#0 <- block@7)
debug: Replaced trivial Phi node: let arrays.0%is_original#8: bool = φ(arrays.0%is_original#0 <- block@6, arrays.0%is_original#0 <- block@7) (arrays.0%is_original#8) with arrays.0%is_original#0 in current definition for 1 blocks
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#7: bool = φ(arrays.0%is_original#0 <- block@8) in block@8
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#7: bool = φ(arrays.0%is_original#0 <- block@8, arrays.0%is_original#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.0%is_original#7: bool = φ(arrays.0%is_original#0 <- block@8, arrays.0%is_original#0 <- block@9) (arrays.0%is_original#7) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#7: bool = φ(arrays.0%is_original#0 <- block@8, arrays.0%is_original#0 <- block@9)
debug: Replaced trivial Phi node: let arrays.0%is_original#7: bool = φ(arrays.0%is_original#0 <- block@8, arrays.0%is_original#0 <- block@9) (arrays.0%is_original#7) with arrays.0%is_original#0 in current definition for 1 blocks
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#0 <- block@10) in block@10
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#0 <- block@10, arrays.0%is_original#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#0 <- block@10, arrays.0%is_original#0 <- block@11) (arrays.0%is_original#6) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#0 <- block@10, arrays.0%is_original#0 <- block@11)
debug: Replaced trivial Phi node: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#0 <- block@10, arrays.0%is_original#0 <- block@11) (arrays.0%is_original#6) with arrays.0%is_original#0 in current definition for 1 blocks
debug: Added arrays.0%is_original#0 to Phi node: let arrays.0%is_original#5: bool = φ(arrays.0%is_original#0 <- block@12) in block@12
debug: Created Phi assignment: let arrays.0%is_original#9: bool = undefined while trying to resolve 'arrays.0%is_original' in block@19
debug: Created Phi assignment: let arrays.0%is_original#10: bool = undefined while trying to resolve 'arrays.0%is_original' in block@17
debug: Created Phi assignment: let arrays.0%is_original#11: bool = undefined while trying to resolve 'arrays.0%is_original' in block@15
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#4 <- block@13) in block@13
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#4 <- block@13, arrays.0%is_original#4 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#4 <- block@13, arrays.0%is_original#4 <- block@14) (arrays.0%is_original#11) with arrays.0%is_original#4
debug: Deleting Phi assignment: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#4 <- block@13, arrays.0%is_original#4 <- block@14)
debug: Replaced trivial Phi node: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#4 <- block@13, arrays.0%is_original#4 <- block@14) (arrays.0%is_original#11) with arrays.0%is_original#4 in current definition for 1 blocks
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#10: bool = φ(arrays.0%is_original#4 <- block@15) in block@15
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#10: bool = φ(arrays.0%is_original#4 <- block@15, arrays.0%is_original#4 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.0%is_original#10: bool = φ(arrays.0%is_original#4 <- block@15, arrays.0%is_original#4 <- block@16) (arrays.0%is_original#10) with arrays.0%is_original#4
debug: Deleting Phi assignment: let arrays.0%is_original#10: bool = φ(arrays.0%is_original#4 <- block@15, arrays.0%is_original#4 <- block@16)
debug: Replaced trivial Phi node: let arrays.0%is_original#10: bool = φ(arrays.0%is_original#4 <- block@15, arrays.0%is_original#4 <- block@16) (arrays.0%is_original#10) with arrays.0%is_original#4 in current definition for 1 blocks
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#9: bool = φ(arrays.0%is_original#4 <- block@17) in block@17
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#9: bool = φ(arrays.0%is_original#4 <- block@17, arrays.0%is_original#4 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.0%is_original#9: bool = φ(arrays.0%is_original#4 <- block@17, arrays.0%is_original#4 <- block@18) (arrays.0%is_original#9) with arrays.0%is_original#4
debug: Deleting Phi assignment: let arrays.0%is_original#9: bool = φ(arrays.0%is_original#4 <- block@17, arrays.0%is_original#4 <- block@18)
debug: Replaced trivial Phi node: let arrays.0%is_original#9: bool = φ(arrays.0%is_original#4 <- block@17, arrays.0%is_original#4 <- block@18) (arrays.0%is_original#9) with arrays.0%is_original#4 in current definition for 1 blocks
debug: Added arrays.0%is_original#4 to Phi node: let arrays.0%is_original#5: bool = φ(arrays.0%is_original#0 <- block@12, arrays.0%is_original#4 <- block@19) in block@19
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Created Phi assignment: let start#11: uint64 = undefined while trying to resolve 'start' in block@22
debug: Added start#0 to Phi node: let start#11: uint64 = φ(start#0 <- block@20) in block@20
debug: Added start#0 to Phi node: let start#11: uint64 = φ(start#0 <- block@20, start#0 <- block@21) in block@21
debug: Replacing trivial Phi node: let start#11: uint64 = φ(start#0 <- block@20, start#0 <- block@21) (start#11) with start#0
debug: Deleting Phi assignment: let start#11: uint64 = φ(start#0 <- block@20, start#0 <- block@21)
debug: Replaced trivial Phi node: let start#11: uint64 = φ(start#0 <- block@20, start#0 <- block@21) (start#11) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1#11: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@22
debug: Created Phi assignment: let arrays.1#12: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@20
debug: Added arrays.1#6 to Phi node: let arrays.1#12: Encoded(uint8[4]) = φ(arrays.1#6 <- block@12) in block@12
debug: Created Phi assignment: let arrays.1#13: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@19
debug: Created Phi assignment: let arrays.1#14: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@17
debug: Added arrays.1#9 to Phi node: let arrays.1#14: Encoded(uint8[4]) = φ(arrays.1#9 <- block@15) in block@15
debug: Added arrays.1#9 to Phi node: let arrays.1#14: Encoded(uint8[4]) = φ(arrays.1#9 <- block@15, arrays.1#9 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.1#14: Encoded(uint8[4]) = φ(arrays.1#9 <- block@15, arrays.1#9 <- block@16) (arrays.1#14) with arrays.1#9
debug: Deleting Phi assignment: let arrays.1#14: Encoded(uint8[4]) = φ(arrays.1#9 <- block@15, arrays.1#9 <- block@16)
debug: Replaced trivial Phi node: let arrays.1#14: Encoded(uint8[4]) = φ(arrays.1#9 <- block@15, arrays.1#9 <- block@16) (arrays.1#14) with arrays.1#9 in current definition for 1 blocks
debug: Added arrays.1#9 to Phi node: let arrays.1#13: Encoded(uint8[4]) = φ(arrays.1#9 <- block@17) in block@17
debug: Added arrays.1#9 to Phi node: let arrays.1#13: Encoded(uint8[4]) = φ(arrays.1#9 <- block@17, arrays.1#9 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.1#13: Encoded(uint8[4]) = φ(arrays.1#9 <- block@17, arrays.1#9 <- block@18) (arrays.1#13) with arrays.1#9
debug: Deleting Phi assignment: let arrays.1#13: Encoded(uint8[4]) = φ(arrays.1#9 <- block@17, arrays.1#9 <- block@18)
debug: Replaced trivial Phi node: let arrays.1#13: Encoded(uint8[4]) = φ(arrays.1#9 <- block@17, arrays.1#9 <- block@18) (arrays.1#13) with arrays.1#9 in current definition for 1 blocks
debug: Added arrays.1#9 to Phi node: let arrays.1#12: Encoded(uint8[4]) = φ(arrays.1#6 <- block@12, arrays.1#9 <- block@19) in block@19
debug: Added arrays.1#12 to Phi node: let arrays.1#11: Encoded(uint8[4]) = φ(arrays.1#12 <- block@20) in block@20
debug: Added arrays.1#12 to Phi node: let arrays.1#11: Encoded(uint8[4]) = φ(arrays.1#12 <- block@20, arrays.1#12 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.1#11: Encoded(uint8[4]) = φ(arrays.1#12 <- block@20, arrays.1#12 <- block@21) (arrays.1#11) with arrays.1#12
debug: Deleting Phi assignment: let arrays.1#11: Encoded(uint8[4]) = φ(arrays.1#12 <- block@20, arrays.1#12 <- block@21)
debug: Replaced trivial Phi node: let arrays.1#11: Encoded(uint8[4]) = φ(arrays.1#12 <- block@20, arrays.1#12 <- block@21) (arrays.1#11) with arrays.1#12 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1%is_original#7: bool = undefined while trying to resolve 'arrays.1%is_original' in block@22
debug: Created Phi assignment: let arrays.1%is_original#8: bool = undefined while trying to resolve 'arrays.1%is_original' in block@20
debug: Created Phi assignment: let arrays.1%is_original#9: bool = undefined while trying to resolve 'arrays.1%is_original' in block@12
debug: Created Phi assignment: let arrays.1%is_original#10: bool = undefined while trying to resolve 'arrays.1%is_original' in block@10
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#10: bool = φ(arrays.1%is_original#0 <- block@8) in block@8
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#10: bool = φ(arrays.1%is_original#0 <- block@8, arrays.1%is_original#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.1%is_original#10: bool = φ(arrays.1%is_original#0 <- block@8, arrays.1%is_original#0 <- block@9) (arrays.1%is_original#10) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#10: bool = φ(arrays.1%is_original#0 <- block@8, arrays.1%is_original#0 <- block@9)
debug: Replaced trivial Phi node: let arrays.1%is_original#10: bool = φ(arrays.1%is_original#0 <- block@8, arrays.1%is_original#0 <- block@9) (arrays.1%is_original#10) with arrays.1%is_original#0 in current definition for 1 blocks
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#0 <- block@10) in block@10
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#0 <- block@10, arrays.1%is_original#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#0 <- block@10, arrays.1%is_original#0 <- block@11) (arrays.1%is_original#9) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#0 <- block@10, arrays.1%is_original#0 <- block@11)
debug: Replaced trivial Phi node: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#0 <- block@10, arrays.1%is_original#0 <- block@11) (arrays.1%is_original#9) with arrays.1%is_original#0 in current definition for 1 blocks
debug: Added arrays.1%is_original#0 to Phi node: let arrays.1%is_original#8: bool = φ(arrays.1%is_original#0 <- block@12) in block@12
debug: Created Phi assignment: let arrays.1%is_original#11: bool = undefined while trying to resolve 'arrays.1%is_original' in block@19
debug: Created Phi assignment: let arrays.1%is_original#12: bool = undefined while trying to resolve 'arrays.1%is_original' in block@17
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#12: bool = φ(arrays.1%is_original#5 <- block@15) in block@15
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#12: bool = φ(arrays.1%is_original#5 <- block@15, arrays.1%is_original#5 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.1%is_original#12: bool = φ(arrays.1%is_original#5 <- block@15, arrays.1%is_original#5 <- block@16) (arrays.1%is_original#12) with arrays.1%is_original#5
debug: Deleting Phi assignment: let arrays.1%is_original#12: bool = φ(arrays.1%is_original#5 <- block@15, arrays.1%is_original#5 <- block@16)
debug: Replaced trivial Phi node: let arrays.1%is_original#12: bool = φ(arrays.1%is_original#5 <- block@15, arrays.1%is_original#5 <- block@16) (arrays.1%is_original#12) with arrays.1%is_original#5 in current definition for 1 blocks
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#11: bool = φ(arrays.1%is_original#5 <- block@17) in block@17
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#11: bool = φ(arrays.1%is_original#5 <- block@17, arrays.1%is_original#5 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.1%is_original#11: bool = φ(arrays.1%is_original#5 <- block@17, arrays.1%is_original#5 <- block@18) (arrays.1%is_original#11) with arrays.1%is_original#5
debug: Deleting Phi assignment: let arrays.1%is_original#11: bool = φ(arrays.1%is_original#5 <- block@17, arrays.1%is_original#5 <- block@18)
debug: Replaced trivial Phi node: let arrays.1%is_original#11: bool = φ(arrays.1%is_original#5 <- block@17, arrays.1%is_original#5 <- block@18) (arrays.1%is_original#11) with arrays.1%is_original#5 in current definition for 1 blocks
debug: Added arrays.1%is_original#5 to Phi node: let arrays.1%is_original#8: bool = φ(arrays.1%is_original#0 <- block@12, arrays.1%is_original#5 <- block@19) in block@19
debug: Added arrays.1%is_original#8 to Phi node: let arrays.1%is_original#7: bool = φ(arrays.1%is_original#8 <- block@20) in block@20
debug: Added arrays.1%is_original#8 to Phi node: let arrays.1%is_original#7: bool = φ(arrays.1%is_original#8 <- block@20, arrays.1%is_original#8 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.1%is_original#7: bool = φ(arrays.1%is_original#8 <- block@20, arrays.1%is_original#8 <- block@21) (arrays.1%is_original#7) with arrays.1%is_original#8
debug: Deleting Phi assignment: let arrays.1%is_original#7: bool = φ(arrays.1%is_original#8 <- block@20, arrays.1%is_original#8 <- block@21)
debug: Replaced trivial Phi node: let arrays.1%is_original#7: bool = φ(arrays.1%is_original#8 <- block@20, arrays.1%is_original#8 <- block@21) (arrays.1%is_original#7) with arrays.1%is_original#8 in current definition for 1 blocks
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Created Phi assignment: let start#12: uint64 = undefined while trying to resolve 'start' in block@24
debug: Added start#0 to Phi node: let start#12: uint64 = φ(start#0 <- block@22) in block@22
debug: Added start#0 to Phi node: let start#12: uint64 = φ(start#0 <- block@22, start#0 <- block@23) in block@23
debug: Replacing trivial Phi node: let start#12: uint64 = φ(start#0 <- block@22, start#0 <- block@23) (start#12) with start#0
debug: Deleting Phi assignment: let start#12: uint64 = φ(start#0 <- block@22, start#0 <- block@23)
debug: Replaced trivial Phi node: let start#12: uint64 = φ(start#0 <- block@22, start#0 <- block@23) (start#12) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2#12: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@24
debug: Created Phi assignment: let arrays.2#13: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@22
debug: Created Phi assignment: let arrays.2#14: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@20
debug: Added arrays.2#7 to Phi node: let arrays.2#14: Encoded(uint8[4]) = φ(arrays.2#7 <- block@12) in block@12
debug: Created Phi assignment: let arrays.2#15: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@19
debug: Added arrays.2#9 to Phi node: let arrays.2#15: Encoded(uint8[4]) = φ(arrays.2#9 <- block@17) in block@17
debug: Added arrays.2#9 to Phi node: let arrays.2#15: Encoded(uint8[4]) = φ(arrays.2#9 <- block@17, arrays.2#9 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.2#15: Encoded(uint8[4]) = φ(arrays.2#9 <- block@17, arrays.2#9 <- block@18) (arrays.2#15) with arrays.2#9
debug: Deleting Phi assignment: let arrays.2#15: Encoded(uint8[4]) = φ(arrays.2#9 <- block@17, arrays.2#9 <- block@18)
debug: Replaced trivial Phi node: let arrays.2#15: Encoded(uint8[4]) = φ(arrays.2#9 <- block@17, arrays.2#9 <- block@18) (arrays.2#15) with arrays.2#9 in current definition for 1 blocks
debug: Added arrays.2#9 to Phi node: let arrays.2#14: Encoded(uint8[4]) = φ(arrays.2#7 <- block@12, arrays.2#9 <- block@19) in block@19
debug: Added arrays.2#14 to Phi node: let arrays.2#13: Encoded(uint8[4]) = φ(arrays.2#14 <- block@20) in block@20
debug: Added arrays.2#14 to Phi node: let arrays.2#13: Encoded(uint8[4]) = φ(arrays.2#14 <- block@20, arrays.2#14 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.2#13: Encoded(uint8[4]) = φ(arrays.2#14 <- block@20, arrays.2#14 <- block@21) (arrays.2#13) with arrays.2#14
debug: Deleting Phi assignment: let arrays.2#13: Encoded(uint8[4]) = φ(arrays.2#14 <- block@20, arrays.2#14 <- block@21)
debug: Replaced trivial Phi node: let arrays.2#13: Encoded(uint8[4]) = φ(arrays.2#14 <- block@20, arrays.2#14 <- block@21) (arrays.2#13) with arrays.2#14 in current definition for 1 blocks
debug: Added arrays.2#14 to Phi node: let arrays.2#12: Encoded(uint8[4]) = φ(arrays.2#14 <- block@22) in block@22
debug: Added arrays.2#14 to Phi node: let arrays.2#12: Encoded(uint8[4]) = φ(arrays.2#14 <- block@22, arrays.2#14 <- block@23) in block@23
debug: Replacing trivial Phi node: let arrays.2#12: Encoded(uint8[4]) = φ(arrays.2#14 <- block@22, arrays.2#14 <- block@23) (arrays.2#12) with arrays.2#14
debug: Deleting Phi assignment: let arrays.2#12: Encoded(uint8[4]) = φ(arrays.2#14 <- block@22, arrays.2#14 <- block@23)
debug: Replaced trivial Phi node: let arrays.2#12: Encoded(uint8[4]) = φ(arrays.2#14 <- block@22, arrays.2#14 <- block@23) (arrays.2#12) with arrays.2#14 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2%is_original#9: bool = undefined while trying to resolve 'arrays.2%is_original' in block@24
debug: Created Phi assignment: let arrays.2%is_original#10: bool = undefined while trying to resolve 'arrays.2%is_original' in block@22
debug: Created Phi assignment: let arrays.2%is_original#11: bool = undefined while trying to resolve 'arrays.2%is_original' in block@20
debug: Created Phi assignment: let arrays.2%is_original#12: bool = undefined while trying to resolve 'arrays.2%is_original' in block@12
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#0 <- block@10) in block@10
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#0 <- block@10, arrays.2%is_original#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#0 <- block@10, arrays.2%is_original#0 <- block@11) (arrays.2%is_original#12) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#0 <- block@10, arrays.2%is_original#0 <- block@11)
debug: Replaced trivial Phi node: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#0 <- block@10, arrays.2%is_original#0 <- block@11) (arrays.2%is_original#12) with arrays.2%is_original#0 in current definition for 1 blocks
debug: Added arrays.2%is_original#0 to Phi node: let arrays.2%is_original#11: bool = φ(arrays.2%is_original#0 <- block@12) in block@12
debug: Created Phi assignment: let arrays.2%is_original#13: bool = undefined while trying to resolve 'arrays.2%is_original' in block@19
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#13: bool = φ(arrays.2%is_original#6 <- block@17) in block@17
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#13: bool = φ(arrays.2%is_original#6 <- block@17, arrays.2%is_original#6 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.2%is_original#13: bool = φ(arrays.2%is_original#6 <- block@17, arrays.2%is_original#6 <- block@18) (arrays.2%is_original#13) with arrays.2%is_original#6
debug: Deleting Phi assignment: let arrays.2%is_original#13: bool = φ(arrays.2%is_original#6 <- block@17, arrays.2%is_original#6 <- block@18)
debug: Replaced trivial Phi node: let arrays.2%is_original#13: bool = φ(arrays.2%is_original#6 <- block@17, arrays.2%is_original#6 <- block@18) (arrays.2%is_original#13) with arrays.2%is_original#6 in current definition for 1 blocks
debug: Added arrays.2%is_original#6 to Phi node: let arrays.2%is_original#11: bool = φ(arrays.2%is_original#0 <- block@12, arrays.2%is_original#6 <- block@19) in block@19
debug: Added arrays.2%is_original#11 to Phi node: let arrays.2%is_original#10: bool = φ(arrays.2%is_original#11 <- block@20) in block@20
debug: Added arrays.2%is_original#11 to Phi node: let arrays.2%is_original#10: bool = φ(arrays.2%is_original#11 <- block@20, arrays.2%is_original#11 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.2%is_original#10: bool = φ(arrays.2%is_original#11 <- block@20, arrays.2%is_original#11 <- block@21) (arrays.2%is_original#10) with arrays.2%is_original#11
debug: Deleting Phi assignment: let arrays.2%is_original#10: bool = φ(arrays.2%is_original#11 <- block@20, arrays.2%is_original#11 <- block@21)
debug: Replaced trivial Phi node: let arrays.2%is_original#10: bool = φ(arrays.2%is_original#11 <- block@20, arrays.2%is_original#11 <- block@21) (arrays.2%is_original#10) with arrays.2%is_original#11 in current definition for 1 blocks
debug: Added arrays.2%is_original#11 to Phi node: let arrays.2%is_original#9: bool = φ(arrays.2%is_original#11 <- block@22) in block@22
debug: Added arrays.2%is_original#11 to Phi node: let arrays.2%is_original#9: bool = φ(arrays.2%is_original#11 <- block@22, arrays.2%is_original#11 <- block@23) in block@23
debug: Replacing trivial Phi node: let arrays.2%is_original#9: bool = φ(arrays.2%is_original#11 <- block@22, arrays.2%is_original#11 <- block@23) (arrays.2%is_original#9) with arrays.2%is_original#11
debug: Deleting Phi assignment: let arrays.2%is_original#9: bool = φ(arrays.2%is_original#11 <- block@22, arrays.2%is_original#11 <- block@23)
debug: Replaced trivial Phi node: let arrays.2%is_original#9: bool = φ(arrays.2%is_original#11 <- block@22, arrays.2%is_original#11 <- block@23) (arrays.2%is_original#9) with arrays.2%is_original#11 in current definition for 1 blocks
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Created Phi assignment: let arrays.0#15: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@26
debug: Created Phi assignment: let arrays.0#16: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@24
debug: Created Phi assignment: let arrays.0#17: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0' in block@22
debug: Added arrays.0#14 to Phi node: let arrays.0#17: Encoded(uint8[4]) = φ(arrays.0#14 <- block@20) in block@20
debug: Added arrays.0#14 to Phi node: let arrays.0#17: Encoded(uint8[4]) = φ(arrays.0#14 <- block@20, arrays.0#14 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.0#17: Encoded(uint8[4]) = φ(arrays.0#14 <- block@20, arrays.0#14 <- block@21) (arrays.0#17) with arrays.0#14
debug: Deleting Phi assignment: let arrays.0#17: Encoded(uint8[4]) = φ(arrays.0#14 <- block@20, arrays.0#14 <- block@21)
debug: Replaced trivial Phi node: let arrays.0#17: Encoded(uint8[4]) = φ(arrays.0#14 <- block@20, arrays.0#14 <- block@21) (arrays.0#17) with arrays.0#14 in current definition for 1 blocks
debug: Added arrays.0#14 to Phi node: let arrays.0#16: Encoded(uint8[4]) = φ(arrays.0#14 <- block@22) in block@22
debug: Added arrays.0#14 to Phi node: let arrays.0#16: Encoded(uint8[4]) = φ(arrays.0#14 <- block@22, arrays.0#14 <- block@23) in block@23
debug: Replacing trivial Phi node: let arrays.0#16: Encoded(uint8[4]) = φ(arrays.0#14 <- block@22, arrays.0#14 <- block@23) (arrays.0#16) with arrays.0#14
debug: Deleting Phi assignment: let arrays.0#16: Encoded(uint8[4]) = φ(arrays.0#14 <- block@22, arrays.0#14 <- block@23)
debug: Replaced trivial Phi node: let arrays.0#16: Encoded(uint8[4]) = φ(arrays.0#14 <- block@22, arrays.0#14 <- block@23) (arrays.0#16) with arrays.0#14 in current definition for 1 blocks
debug: Added arrays.0#14 to Phi node: let arrays.0#15: Encoded(uint8[4]) = φ(arrays.0#14 <- block@24) in block@24
debug: Added arrays.0#14 to Phi node: let arrays.0#15: Encoded(uint8[4]) = φ(arrays.0#14 <- block@24, arrays.0#14 <- block@25) in block@25
debug: Replacing trivial Phi node: let arrays.0#15: Encoded(uint8[4]) = φ(arrays.0#14 <- block@24, arrays.0#14 <- block@25) (arrays.0#15) with arrays.0#14
debug: Deleting Phi assignment: let arrays.0#15: Encoded(uint8[4]) = φ(arrays.0#14 <- block@24, arrays.0#14 <- block@25)
debug: Replaced trivial Phi node: let arrays.0#15: Encoded(uint8[4]) = φ(arrays.0#14 <- block@24, arrays.0#14 <- block@25) (arrays.0#15) with arrays.0#14 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1#16: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@26
debug: Created Phi assignment: let arrays.1#17: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1' in block@24
debug: Added arrays.1#15 to Phi node: let arrays.1#17: Encoded(uint8[4]) = φ(arrays.1#15 <- block@22) in block@22
debug: Added arrays.1#15 to Phi node: let arrays.1#17: Encoded(uint8[4]) = φ(arrays.1#15 <- block@22, arrays.1#15 <- block@23) in block@23
debug: Replacing trivial Phi node: let arrays.1#17: Encoded(uint8[4]) = φ(arrays.1#15 <- block@22, arrays.1#15 <- block@23) (arrays.1#17) with arrays.1#15
debug: Deleting Phi assignment: let arrays.1#17: Encoded(uint8[4]) = φ(arrays.1#15 <- block@22, arrays.1#15 <- block@23)
debug: Replaced trivial Phi node: let arrays.1#17: Encoded(uint8[4]) = φ(arrays.1#15 <- block@22, arrays.1#15 <- block@23) (arrays.1#17) with arrays.1#15 in current definition for 1 blocks
debug: Added arrays.1#15 to Phi node: let arrays.1#16: Encoded(uint8[4]) = φ(arrays.1#15 <- block@24) in block@24
debug: Added arrays.1#15 to Phi node: let arrays.1#16: Encoded(uint8[4]) = φ(arrays.1#15 <- block@24, arrays.1#15 <- block@25) in block@25
debug: Replacing trivial Phi node: let arrays.1#16: Encoded(uint8[4]) = φ(arrays.1#15 <- block@24, arrays.1#15 <- block@25) (arrays.1#16) with arrays.1#15
debug: Deleting Phi assignment: let arrays.1#16: Encoded(uint8[4]) = φ(arrays.1#15 <- block@24, arrays.1#15 <- block@25)
debug: Replaced trivial Phi node: let arrays.1#16: Encoded(uint8[4]) = φ(arrays.1#15 <- block@24, arrays.1#15 <- block@25) (arrays.1#16) with arrays.1#15 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2#17: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2' in block@26
debug: Added arrays.2#16 to Phi node: let arrays.2#17: Encoded(uint8[4]) = φ(arrays.2#16 <- block@24) in block@24
debug: Added arrays.2#16 to Phi node: let arrays.2#17: Encoded(uint8[4]) = φ(arrays.2#16 <- block@24, arrays.2#16 <- block@25) in block@25
debug: Replacing trivial Phi node: let arrays.2#17: Encoded(uint8[4]) = φ(arrays.2#16 <- block@24, arrays.2#16 <- block@25) (arrays.2#17) with arrays.2#16
debug: Deleting Phi assignment: let arrays.2#17: Encoded(uint8[4]) = φ(arrays.2#16 <- block@24, arrays.2#16 <- block@25)
debug: Replaced trivial Phi node: let arrays.2#17: Encoded(uint8[4]) = φ(arrays.2#16 <- block@24, arrays.2#16 <- block@25) (arrays.2#17) with arrays.2#16 in current definition for 1 blocks
debug: Created Phi assignment: let start#13: uint64 = undefined while trying to resolve 'start' in block@26
debug: Added start#0 to Phi node: let start#13: uint64 = φ(start#0 <- block@24) in block@24
debug: Added start#0 to Phi node: let start#13: uint64 = φ(start#0 <- block@24, start#0 <- block@25) in block@25
debug: Replacing trivial Phi node: let start#13: uint64 = φ(start#0 <- block@24, start#0 <- block@25) (start#13) with start#0
debug: Deleting Phi assignment: let start#13: uint64 = φ(start#0 <- block@24, start#0 <- block@25)
debug: Replaced trivial Phi node: let start#13: uint64 = φ(start#0 <- block@24, start#0 <- block@25) (start#13) with start#0 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.0%out#5: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@26
debug: Created Phi assignment: let arrays.0%out#6: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@24
debug: Created Phi assignment: let arrays.0%out#7: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@22
debug: Created Phi assignment: let arrays.0%out#8: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@20
debug: Created Phi assignment: let arrays.0%out#9: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@12
debug: Created Phi assignment: let arrays.0%out#10: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@10
debug: Created Phi assignment: let arrays.0%out#11: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@8
debug: Created Phi assignment: let arrays.0%out#12: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@6
debug: Created Phi assignment: let arrays.0%out#13: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@4
debug: Created Phi assignment: let arrays.0%out#14: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@2
debug: Added arrays.0%out#0 to Phi node: let arrays.0%out#14: Encoded(uint8[4]) = φ(arrays.0%out#0 <- block@0) in block@0
debug: Added arrays.0%out#1 to Phi node: let arrays.0%out#14: Encoded(uint8[4]) = φ(arrays.0%out#0 <- block@0, arrays.0%out#1 <- block@1) in block@1
debug: Added arrays.0%out#14 to Phi node: let arrays.0%out#13: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@2) in block@2
debug: Added arrays.0%out#14 to Phi node: let arrays.0%out#13: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@2, arrays.0%out#14 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.0%out#13: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@2, arrays.0%out#14 <- block@3) (arrays.0%out#13) with arrays.0%out#14
debug: Deleting Phi assignment: let arrays.0%out#13: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@2, arrays.0%out#14 <- block@3)
debug: Replaced trivial Phi node: let arrays.0%out#13: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@2, arrays.0%out#14 <- block@3) (arrays.0%out#13) with arrays.0%out#14 in current definition for 1 blocks
debug: Added arrays.0%out#14 to Phi node: let arrays.0%out#12: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@4) in block@4
debug: Added arrays.0%out#14 to Phi node: let arrays.0%out#12: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@4, arrays.0%out#14 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.0%out#12: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@4, arrays.0%out#14 <- block@5) (arrays.0%out#12) with arrays.0%out#14
debug: Deleting Phi assignment: let arrays.0%out#12: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@4, arrays.0%out#14 <- block@5)
debug: Replaced trivial Phi node: let arrays.0%out#12: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@4, arrays.0%out#14 <- block@5) (arrays.0%out#12) with arrays.0%out#14 in current definition for 1 blocks
debug: Added arrays.0%out#14 to Phi node: let arrays.0%out#11: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@6) in block@6
debug: Added arrays.0%out#2 to Phi node: let arrays.0%out#11: Encoded(uint8[4]) = φ(arrays.0%out#14 <- block@6, arrays.0%out#2 <- block@7) in block@7
debug: Added arrays.0%out#11 to Phi node: let arrays.0%out#10: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@8) in block@8
debug: Added arrays.0%out#11 to Phi node: let arrays.0%out#10: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@8, arrays.0%out#11 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.0%out#10: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@8, arrays.0%out#11 <- block@9) (arrays.0%out#10) with arrays.0%out#11
debug: Deleting Phi assignment: let arrays.0%out#10: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@8, arrays.0%out#11 <- block@9)
debug: Replaced trivial Phi node: let arrays.0%out#10: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@8, arrays.0%out#11 <- block@9) (arrays.0%out#10) with arrays.0%out#11 in current definition for 1 blocks
debug: Added arrays.0%out#11 to Phi node: let arrays.0%out#9: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@10) in block@10
debug: Added arrays.0%out#11 to Phi node: let arrays.0%out#9: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@10, arrays.0%out#11 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.0%out#9: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@10, arrays.0%out#11 <- block@11) (arrays.0%out#9) with arrays.0%out#11
debug: Deleting Phi assignment: let arrays.0%out#9: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@10, arrays.0%out#11 <- block@11)
debug: Replaced trivial Phi node: let arrays.0%out#9: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@10, arrays.0%out#11 <- block@11) (arrays.0%out#9) with arrays.0%out#11 in current definition for 1 blocks
debug: Added arrays.0%out#11 to Phi node: let arrays.0%out#8: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@12) in block@12
debug: Created Phi assignment: let arrays.0%out#15: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@19
debug: Created Phi assignment: let arrays.0%out#16: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@17
debug: Created Phi assignment: let arrays.0%out#17: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.0%out' in block@15
debug: Added arrays.0%out#11 to Phi node: let arrays.0%out#17: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@13) in block@13
debug: Added arrays.0%out#3 to Phi node: let arrays.0%out#17: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@13, arrays.0%out#3 <- block@14) in block@14
debug: Added arrays.0%out#17 to Phi node: let arrays.0%out#16: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@15) in block@15
debug: Added arrays.0%out#17 to Phi node: let arrays.0%out#16: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@15, arrays.0%out#17 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.0%out#16: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@15, arrays.0%out#17 <- block@16) (arrays.0%out#16) with arrays.0%out#17
debug: Deleting Phi assignment: let arrays.0%out#16: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@15, arrays.0%out#17 <- block@16)
debug: Replaced trivial Phi node: let arrays.0%out#16: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@15, arrays.0%out#17 <- block@16) (arrays.0%out#16) with arrays.0%out#17 in current definition for 1 blocks
debug: Added arrays.0%out#17 to Phi node: let arrays.0%out#15: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@17) in block@17
debug: Added arrays.0%out#17 to Phi node: let arrays.0%out#15: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@17, arrays.0%out#17 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.0%out#15: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@17, arrays.0%out#17 <- block@18) (arrays.0%out#15) with arrays.0%out#17
debug: Deleting Phi assignment: let arrays.0%out#15: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@17, arrays.0%out#17 <- block@18)
debug: Replaced trivial Phi node: let arrays.0%out#15: Encoded(uint8[4]) = φ(arrays.0%out#17 <- block@17, arrays.0%out#17 <- block@18) (arrays.0%out#15) with arrays.0%out#17 in current definition for 1 blocks
debug: Added arrays.0%out#17 to Phi node: let arrays.0%out#8: Encoded(uint8[4]) = φ(arrays.0%out#11 <- block@12, arrays.0%out#17 <- block@19) in block@19
debug: Added arrays.0%out#8 to Phi node: let arrays.0%out#7: Encoded(uint8[4]) = φ(arrays.0%out#8 <- block@20) in block@20
debug: Added arrays.0%out#4 to Phi node: let arrays.0%out#7: Encoded(uint8[4]) = φ(arrays.0%out#8 <- block@20, arrays.0%out#4 <- block@21) in block@21
debug: Added arrays.0%out#7 to Phi node: let arrays.0%out#6: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@22) in block@22
debug: Added arrays.0%out#7 to Phi node: let arrays.0%out#6: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@22, arrays.0%out#7 <- block@23) in block@23
debug: Replacing trivial Phi node: let arrays.0%out#6: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@22, arrays.0%out#7 <- block@23) (arrays.0%out#6) with arrays.0%out#7
debug: Deleting Phi assignment: let arrays.0%out#6: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@22, arrays.0%out#7 <- block@23)
debug: Replaced trivial Phi node: let arrays.0%out#6: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@22, arrays.0%out#7 <- block@23) (arrays.0%out#6) with arrays.0%out#7 in current definition for 1 blocks
debug: Added arrays.0%out#7 to Phi node: let arrays.0%out#5: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@24) in block@24
debug: Added arrays.0%out#7 to Phi node: let arrays.0%out#5: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@24, arrays.0%out#7 <- block@25) in block@25
debug: Replacing trivial Phi node: let arrays.0%out#5: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@24, arrays.0%out#7 <- block@25) (arrays.0%out#5) with arrays.0%out#7
debug: Deleting Phi assignment: let arrays.0%out#5: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@24, arrays.0%out#7 <- block@25)
debug: Replaced trivial Phi node: let arrays.0%out#5: Encoded(uint8[4]) = φ(arrays.0%out#7 <- block@24, arrays.0%out#7 <- block@25) (arrays.0%out#5) with arrays.0%out#7 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.1%out#5: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@26
debug: Created Phi assignment: let arrays.1%out#6: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@24
debug: Created Phi assignment: let arrays.1%out#7: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@22
debug: Created Phi assignment: let arrays.1%out#8: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@20
debug: Created Phi assignment: let arrays.1%out#9: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@12
debug: Created Phi assignment: let arrays.1%out#10: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@10
debug: Created Phi assignment: let arrays.1%out#11: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@8
debug: Created Phi assignment: let arrays.1%out#12: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@6
debug: Created Phi assignment: let arrays.1%out#13: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@4
debug: Created Phi assignment: let arrays.1%out#14: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@2
debug: Added arrays.1%out#0 to Phi node: let arrays.1%out#14: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@0) in block@0
debug: Added arrays.1%out#0 to Phi node: let arrays.1%out#14: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@0, arrays.1%out#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.1%out#14: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@0, arrays.1%out#0 <- block@1) (arrays.1%out#14) with arrays.1%out#0
debug: Deleting Phi assignment: let arrays.1%out#14: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@0, arrays.1%out#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.1%out#14: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@0, arrays.1%out#0 <- block@1) (arrays.1%out#14) with arrays.1%out#0 in current definition for 1 blocks
debug: Added arrays.1%out#0 to Phi node: let arrays.1%out#13: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@2) in block@2
debug: Added arrays.1%out#1 to Phi node: let arrays.1%out#13: Encoded(uint8[4]) = φ(arrays.1%out#0 <- block@2, arrays.1%out#1 <- block@3) in block@3
debug: Added arrays.1%out#13 to Phi node: let arrays.1%out#12: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@4) in block@4
debug: Added arrays.1%out#13 to Phi node: let arrays.1%out#12: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@4, arrays.1%out#13 <- block@5) in block@5
debug: Replacing trivial Phi node: let arrays.1%out#12: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@4, arrays.1%out#13 <- block@5) (arrays.1%out#12) with arrays.1%out#13
debug: Deleting Phi assignment: let arrays.1%out#12: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@4, arrays.1%out#13 <- block@5)
debug: Replaced trivial Phi node: let arrays.1%out#12: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@4, arrays.1%out#13 <- block@5) (arrays.1%out#12) with arrays.1%out#13 in current definition for 1 blocks
debug: Added arrays.1%out#13 to Phi node: let arrays.1%out#11: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@6) in block@6
debug: Added arrays.1%out#13 to Phi node: let arrays.1%out#11: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@6, arrays.1%out#13 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.1%out#11: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@6, arrays.1%out#13 <- block@7) (arrays.1%out#11) with arrays.1%out#13
debug: Deleting Phi assignment: let arrays.1%out#11: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@6, arrays.1%out#13 <- block@7)
debug: Replaced trivial Phi node: let arrays.1%out#11: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@6, arrays.1%out#13 <- block@7) (arrays.1%out#11) with arrays.1%out#13 in current definition for 1 blocks
debug: Added arrays.1%out#13 to Phi node: let arrays.1%out#10: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@8) in block@8
debug: Added arrays.1%out#2 to Phi node: let arrays.1%out#10: Encoded(uint8[4]) = φ(arrays.1%out#13 <- block@8, arrays.1%out#2 <- block@9) in block@9
debug: Added arrays.1%out#10 to Phi node: let arrays.1%out#9: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@10) in block@10
debug: Added arrays.1%out#10 to Phi node: let arrays.1%out#9: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@10, arrays.1%out#10 <- block@11) in block@11
debug: Replacing trivial Phi node: let arrays.1%out#9: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@10, arrays.1%out#10 <- block@11) (arrays.1%out#9) with arrays.1%out#10
debug: Deleting Phi assignment: let arrays.1%out#9: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@10, arrays.1%out#10 <- block@11)
debug: Replaced trivial Phi node: let arrays.1%out#9: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@10, arrays.1%out#10 <- block@11) (arrays.1%out#9) with arrays.1%out#10 in current definition for 1 blocks
debug: Added arrays.1%out#10 to Phi node: let arrays.1%out#8: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@12) in block@12
debug: Created Phi assignment: let arrays.1%out#15: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@19
debug: Created Phi assignment: let arrays.1%out#16: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@17
debug: Created Phi assignment: let arrays.1%out#17: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.1%out' in block@15
debug: Added arrays.1%out#10 to Phi node: let arrays.1%out#17: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@13) in block@13
debug: Added arrays.1%out#10 to Phi node: let arrays.1%out#17: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@13, arrays.1%out#10 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.1%out#17: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@13, arrays.1%out#10 <- block@14) (arrays.1%out#17) with arrays.1%out#10
debug: Deleting Phi assignment: let arrays.1%out#17: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@13, arrays.1%out#10 <- block@14)
debug: Replaced trivial Phi node: let arrays.1%out#17: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@13, arrays.1%out#10 <- block@14) (arrays.1%out#17) with arrays.1%out#10 in current definition for 1 blocks
debug: Added arrays.1%out#10 to Phi node: let arrays.1%out#16: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@15) in block@15
debug: Added arrays.1%out#3 to Phi node: let arrays.1%out#16: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@15, arrays.1%out#3 <- block@16) in block@16
debug: Added arrays.1%out#16 to Phi node: let arrays.1%out#15: Encoded(uint8[4]) = φ(arrays.1%out#16 <- block@17) in block@17
debug: Added arrays.1%out#16 to Phi node: let arrays.1%out#15: Encoded(uint8[4]) = φ(arrays.1%out#16 <- block@17, arrays.1%out#16 <- block@18) in block@18
debug: Replacing trivial Phi node: let arrays.1%out#15: Encoded(uint8[4]) = φ(arrays.1%out#16 <- block@17, arrays.1%out#16 <- block@18) (arrays.1%out#15) with arrays.1%out#16
debug: Deleting Phi assignment: let arrays.1%out#15: Encoded(uint8[4]) = φ(arrays.1%out#16 <- block@17, arrays.1%out#16 <- block@18)
debug: Replaced trivial Phi node: let arrays.1%out#15: Encoded(uint8[4]) = φ(arrays.1%out#16 <- block@17, arrays.1%out#16 <- block@18) (arrays.1%out#15) with arrays.1%out#16 in current definition for 1 blocks
debug: Added arrays.1%out#16 to Phi node: let arrays.1%out#8: Encoded(uint8[4]) = φ(arrays.1%out#10 <- block@12, arrays.1%out#16 <- block@19) in block@19
debug: Added arrays.1%out#8 to Phi node: let arrays.1%out#7: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@20) in block@20
debug: Added arrays.1%out#8 to Phi node: let arrays.1%out#7: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@20, arrays.1%out#8 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.1%out#7: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@20, arrays.1%out#8 <- block@21) (arrays.1%out#7) with arrays.1%out#8
debug: Deleting Phi assignment: let arrays.1%out#7: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@20, arrays.1%out#8 <- block@21)
debug: Replaced trivial Phi node: let arrays.1%out#7: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@20, arrays.1%out#8 <- block@21) (arrays.1%out#7) with arrays.1%out#8 in current definition for 1 blocks
debug: Added arrays.1%out#8 to Phi node: let arrays.1%out#6: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@22) in block@22
debug: Added arrays.1%out#4 to Phi node: let arrays.1%out#6: Encoded(uint8[4]) = φ(arrays.1%out#8 <- block@22, arrays.1%out#4 <- block@23) in block@23
debug: Added arrays.1%out#6 to Phi node: let arrays.1%out#5: Encoded(uint8[4]) = φ(arrays.1%out#6 <- block@24) in block@24
debug: Added arrays.1%out#6 to Phi node: let arrays.1%out#5: Encoded(uint8[4]) = φ(arrays.1%out#6 <- block@24, arrays.1%out#6 <- block@25) in block@25
debug: Replacing trivial Phi node: let arrays.1%out#5: Encoded(uint8[4]) = φ(arrays.1%out#6 <- block@24, arrays.1%out#6 <- block@25) (arrays.1%out#5) with arrays.1%out#6
debug: Deleting Phi assignment: let arrays.1%out#5: Encoded(uint8[4]) = φ(arrays.1%out#6 <- block@24, arrays.1%out#6 <- block@25)
debug: Replaced trivial Phi node: let arrays.1%out#5: Encoded(uint8[4]) = φ(arrays.1%out#6 <- block@24, arrays.1%out#6 <- block@25) (arrays.1%out#5) with arrays.1%out#6 in current definition for 1 blocks
debug: Created Phi assignment: let arrays.2%out#5: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@26
debug: Created Phi assignment: let arrays.2%out#6: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@24
debug: Created Phi assignment: let arrays.2%out#7: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@22
debug: Created Phi assignment: let arrays.2%out#8: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@20
debug: Created Phi assignment: let arrays.2%out#9: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@12
debug: Created Phi assignment: let arrays.2%out#10: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@10
debug: Created Phi assignment: let arrays.2%out#11: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@8
debug: Created Phi assignment: let arrays.2%out#12: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@6
debug: Created Phi assignment: let arrays.2%out#13: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@4
debug: Created Phi assignment: let arrays.2%out#14: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@2
debug: Added arrays.2%out#0 to Phi node: let arrays.2%out#14: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@0) in block@0
debug: Added arrays.2%out#0 to Phi node: let arrays.2%out#14: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@0, arrays.2%out#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let arrays.2%out#14: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@0, arrays.2%out#0 <- block@1) (arrays.2%out#14) with arrays.2%out#0
debug: Deleting Phi assignment: let arrays.2%out#14: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@0, arrays.2%out#0 <- block@1)
debug: Replaced trivial Phi node: let arrays.2%out#14: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@0, arrays.2%out#0 <- block@1) (arrays.2%out#14) with arrays.2%out#0 in current definition for 1 blocks
debug: Added arrays.2%out#0 to Phi node: let arrays.2%out#13: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@2) in block@2
debug: Added arrays.2%out#0 to Phi node: let arrays.2%out#13: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@2, arrays.2%out#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let arrays.2%out#13: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@2, arrays.2%out#0 <- block@3) (arrays.2%out#13) with arrays.2%out#0
debug: Deleting Phi assignment: let arrays.2%out#13: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@2, arrays.2%out#0 <- block@3)
debug: Replaced trivial Phi node: let arrays.2%out#13: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@2, arrays.2%out#0 <- block@3) (arrays.2%out#13) with arrays.2%out#0 in current definition for 1 blocks
debug: Added arrays.2%out#0 to Phi node: let arrays.2%out#12: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@4) in block@4
debug: Added arrays.2%out#1 to Phi node: let arrays.2%out#12: Encoded(uint8[4]) = φ(arrays.2%out#0 <- block@4, arrays.2%out#1 <- block@5) in block@5
debug: Added arrays.2%out#12 to Phi node: let arrays.2%out#11: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@6) in block@6
debug: Added arrays.2%out#12 to Phi node: let arrays.2%out#11: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@6, arrays.2%out#12 <- block@7) in block@7
debug: Replacing trivial Phi node: let arrays.2%out#11: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@6, arrays.2%out#12 <- block@7) (arrays.2%out#11) with arrays.2%out#12
debug: Deleting Phi assignment: let arrays.2%out#11: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@6, arrays.2%out#12 <- block@7)
debug: Replaced trivial Phi node: let arrays.2%out#11: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@6, arrays.2%out#12 <- block@7) (arrays.2%out#11) with arrays.2%out#12 in current definition for 1 blocks
debug: Added arrays.2%out#12 to Phi node: let arrays.2%out#10: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@8) in block@8
debug: Added arrays.2%out#12 to Phi node: let arrays.2%out#10: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@8, arrays.2%out#12 <- block@9) in block@9
debug: Replacing trivial Phi node: let arrays.2%out#10: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@8, arrays.2%out#12 <- block@9) (arrays.2%out#10) with arrays.2%out#12
debug: Deleting Phi assignment: let arrays.2%out#10: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@8, arrays.2%out#12 <- block@9)
debug: Replaced trivial Phi node: let arrays.2%out#10: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@8, arrays.2%out#12 <- block@9) (arrays.2%out#10) with arrays.2%out#12 in current definition for 1 blocks
debug: Added arrays.2%out#12 to Phi node: let arrays.2%out#9: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@10) in block@10
debug: Added arrays.2%out#2 to Phi node: let arrays.2%out#9: Encoded(uint8[4]) = φ(arrays.2%out#12 <- block@10, arrays.2%out#2 <- block@11) in block@11
debug: Added arrays.2%out#9 to Phi node: let arrays.2%out#8: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@12) in block@12
debug: Created Phi assignment: let arrays.2%out#15: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@19
debug: Created Phi assignment: let arrays.2%out#16: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@17
debug: Created Phi assignment: let arrays.2%out#17: Encoded(uint8[4]) = undefined while trying to resolve 'arrays.2%out' in block@15
debug: Added arrays.2%out#9 to Phi node: let arrays.2%out#17: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@13) in block@13
debug: Added arrays.2%out#9 to Phi node: let arrays.2%out#17: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@13, arrays.2%out#9 <- block@14) in block@14
debug: Replacing trivial Phi node: let arrays.2%out#17: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@13, arrays.2%out#9 <- block@14) (arrays.2%out#17) with arrays.2%out#9
debug: Deleting Phi assignment: let arrays.2%out#17: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@13, arrays.2%out#9 <- block@14)
debug: Replaced trivial Phi node: let arrays.2%out#17: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@13, arrays.2%out#9 <- block@14) (arrays.2%out#17) with arrays.2%out#9 in current definition for 1 blocks
debug: Added arrays.2%out#9 to Phi node: let arrays.2%out#16: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@15) in block@15
debug: Added arrays.2%out#9 to Phi node: let arrays.2%out#16: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@15, arrays.2%out#9 <- block@16) in block@16
debug: Replacing trivial Phi node: let arrays.2%out#16: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@15, arrays.2%out#9 <- block@16) (arrays.2%out#16) with arrays.2%out#9
debug: Deleting Phi assignment: let arrays.2%out#16: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@15, arrays.2%out#9 <- block@16)
debug: Replaced trivial Phi node: let arrays.2%out#16: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@15, arrays.2%out#9 <- block@16) (arrays.2%out#16) with arrays.2%out#9 in current definition for 1 blocks
debug: Added arrays.2%out#9 to Phi node: let arrays.2%out#15: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@17) in block@17
debug: Added arrays.2%out#3 to Phi node: let arrays.2%out#15: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@17, arrays.2%out#3 <- block@18) in block@18
debug: Added arrays.2%out#15 to Phi node: let arrays.2%out#8: Encoded(uint8[4]) = φ(arrays.2%out#9 <- block@12, arrays.2%out#15 <- block@19) in block@19
debug: Added arrays.2%out#8 to Phi node: let arrays.2%out#7: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@20) in block@20
debug: Added arrays.2%out#8 to Phi node: let arrays.2%out#7: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@20, arrays.2%out#8 <- block@21) in block@21
debug: Replacing trivial Phi node: let arrays.2%out#7: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@20, arrays.2%out#8 <- block@21) (arrays.2%out#7) with arrays.2%out#8
debug: Deleting Phi assignment: let arrays.2%out#7: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@20, arrays.2%out#8 <- block@21)
debug: Replaced trivial Phi node: let arrays.2%out#7: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@20, arrays.2%out#8 <- block@21) (arrays.2%out#7) with arrays.2%out#8 in current definition for 1 blocks
debug: Added arrays.2%out#8 to Phi node: let arrays.2%out#6: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@22) in block@22
debug: Added arrays.2%out#8 to Phi node: let arrays.2%out#6: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@22, arrays.2%out#8 <- block@23) in block@23
debug: Replacing trivial Phi node: let arrays.2%out#6: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@22, arrays.2%out#8 <- block@23) (arrays.2%out#6) with arrays.2%out#8
debug: Deleting Phi assignment: let arrays.2%out#6: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@22, arrays.2%out#8 <- block@23)
debug: Replaced trivial Phi node: let arrays.2%out#6: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@22, arrays.2%out#8 <- block@23) (arrays.2%out#6) with arrays.2%out#8 in current definition for 1 blocks
debug: Added arrays.2%out#8 to Phi node: let arrays.2%out#5: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@24) in block@24
debug: Added arrays.2%out#4 to Phi node: let arrays.2%out#5: Encoded(uint8[4]) = φ(arrays.2%out#8 <- block@24, arrays.2%out#4 <- block@25) in block@25
debug: Terminated block@26
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Created Phi assignment: let dynamic_bytes2#1: Encoded(len+uint8[]) = undefined while trying to resolve 'dynamic_bytes2' in block@5
debug: Added dynamic_bytes2#0 to Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4) in block@4
debug: Added dynamic_bytes2#1 to Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7) (dynamic_bytes2#1) with dynamic_bytes2#0
debug: Deleting Phi assignment: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7)
debug: Replaced trivial Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7) (dynamic_bytes2#1) with dynamic_bytes2#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let total#5: uint64 = undefined while trying to resolve 'total' in block@9
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@11) in block@11
debug: Added total#3 to Phi node: let total#5: uint64 = φ(total#3 <- block@8) in block@8
debug: Added total#6 to Phi node: let total#5: uint64 = φ(total#3 <- block@8, total#6 <- block@11) in block@11
debug: Sealing block@12
debug: Created Phi assignment: let dynamic_bytes3#1: Encoded(len+uint8[]) = undefined while trying to resolve 'dynamic_bytes3' in block@9
debug: Added dynamic_bytes3#0 to Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8) in block@8
debug: Added dynamic_bytes3#1 to Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11) in block@11
debug: Replacing trivial Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11) (dynamic_bytes3#1) with dynamic_bytes3#0
debug: Deleting Phi assignment: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11)
debug: Replaced trivial Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11) (dynamic_bytes3#1) with dynamic_bytes3#0 in current definition for 3 blocks
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let ternary_result%0#2: Encoded(len+uint8[]) = undefined while trying to resolve 'ternary_result%0' in block@15
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: Encoded(len+uint8[]) = φ(ternary_result%0#0 <- block@13) in block@13
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: Encoded(len+uint8[]) = φ(ternary_result%0#0 <- block@13, ternary_result%0#1 <- block@14) in block@14
debug: Terminated block@15
debug: Building IR for function test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Created Phi assignment: let dynamic_bytes2#1: Encoded(len+uint8[]) = undefined while trying to resolve 'dynamic_bytes2' in block@5
debug: Added dynamic_bytes2#0 to Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4) in block@4
debug: Added dynamic_bytes2#1 to Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7) (dynamic_bytes2#1) with dynamic_bytes2#0
debug: Deleting Phi assignment: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7)
debug: Replaced trivial Phi node: let dynamic_bytes2#1: Encoded(len+uint8[]) = φ(dynamic_bytes2#0 <- block@4, dynamic_bytes2#1 <- block@7) (dynamic_bytes2#1) with dynamic_bytes2#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let total#5: uint64 = undefined while trying to resolve 'total' in block@9
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@11) in block@11
debug: Added total#3 to Phi node: let total#5: uint64 = φ(total#3 <- block@8) in block@8
debug: Added total#6 to Phi node: let total#5: uint64 = φ(total#3 <- block@8, total#6 <- block@11) in block@11
debug: Sealing block@12
debug: Created Phi assignment: let dynamic_bytes3#1: Encoded(len+uint8[]) = undefined while trying to resolve 'dynamic_bytes3' in block@9
debug: Added dynamic_bytes3#0 to Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8) in block@8
debug: Added dynamic_bytes3#1 to Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11) in block@11
debug: Replacing trivial Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11) (dynamic_bytes3#1) with dynamic_bytes3#0
debug: Deleting Phi assignment: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11)
debug: Replaced trivial Phi node: let dynamic_bytes3#1: Encoded(len+uint8[]) = φ(dynamic_bytes3#0 <- block@8, dynamic_bytes3#1 <- block@11) (dynamic_bytes3#1) with dynamic_bytes3#0 in current definition for 3 blocks
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let ternary_result%0#2: Encoded(len+uint8[]) = undefined while trying to resolve 'ternary_result%0' in block@15
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: Encoded(len+uint8[]) = φ(ternary_result%0#0 <- block@13) in block@13
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: Encoded(len+uint8[]) = φ(ternary_result%0#0 <- block@13, ternary_result%0#1 <- block@14) in block@14
debug: Terminated block@15
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.bool.Arc4BoolTypeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.array.Arc4ArraysContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let result#2: string = undefined while trying to resolve 'result' in block@9
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@9
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@14) in block@14
debug: Added result#0 to Phi node: let result#2: string = φ(result#0 <- block@8) in block@8
debug: Created Phi assignment: let result#4: string = undefined while trying to resolve 'result' in block@13
debug: Added result#1 to Phi node: let result#4: string = φ(result#1 <- block@11) in block@11
debug: Added result#3 to Phi node: let result#4: string = φ(result#1 <- block@11, result#3 <- block@12) in block@12
debug: Added result#4 to Phi node: let result#2: string = φ(result#0 <- block@8, result#4 <- block@14) in block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@16
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@16
debug: Created Phi assignment: let total#5: uint64 = undefined while trying to resolve 'total' in block@16
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@16
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@15) in block@15
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@15, item_index_internal%3#2 <- block@18) in block@18
debug: Created Phi assignment: let total#7: uint64 = undefined while trying to resolve 'total' in block@9
debug: Added total#3 to Phi node: let total#7: uint64 = φ(total#3 <- block@8) in block@8
debug: Created Phi assignment: let total#8: uint64 = undefined while trying to resolve 'total' in block@13
debug: Added total#7 to Phi node: let total#8: uint64 = φ(total#7 <- block@11) in block@11
debug: Added total#7 to Phi node: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12) in block@12
debug: Replacing trivial Phi node: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12) (total#8) with total#7
debug: Deleting Phi assignment: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12)
debug: Replaced trivial Phi node: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12) (total#8) with total#7 in current definition for 1 blocks
debug: Added total#7 to Phi node: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14) in block@14
debug: Replacing trivial Phi node: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14) (total#7) with total#3
debug: Deleting Phi assignment: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14)
debug: Replaced trivial Phi node: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14) (total#7) with total#3 in current definition for 6 blocks
debug: Added total#3 to Phi node: let total#5: uint64 = φ(total#3 <- block@15) in block@15
debug: Added total#6 to Phi node: let total#5: uint64 = φ(total#3 <- block@15, total#6 <- block@18) in block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Looking for 'item_index_internal%4' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let item_index_internal%4#1: uint64 = undefined while trying to resolve 'item_index_internal%4' in block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let result#7: string = undefined while trying to resolve 'result' in block@20
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@20
debug: Added item_index_internal%4#0 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@19) in block@19
debug: Added item_index_internal%4#2 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@19, item_index_internal%4#2 <- block@25) in block@25
debug: Added result#5 to Phi node: let result#7: string = φ(result#5 <- block@19) in block@19
debug: Created Phi assignment: let result#9: string = undefined while trying to resolve 'result' in block@24
debug: Added result#6 to Phi node: let result#9: string = φ(result#6 <- block@22) in block@22
debug: Added result#8 to Phi node: let result#9: string = φ(result#6 <- block@22, result#8 <- block@23) in block@23
debug: Added result#9 to Phi node: let result#7: string = φ(result#5 <- block@19, result#9 <- block@25) in block@25
debug: Sealing block@26
debug: Created Phi assignment: let static_string_array#1: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'static_string_array' in block@20
debug: Added static_string_array#0 to Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19) in block@19
debug: Created Phi assignment: let static_string_array#2: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'static_string_array' in block@24
debug: Added static_string_array#1 to Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22) in block@22
debug: Added static_string_array#1 to Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23) in block@23
debug: Replacing trivial Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23) (static_string_array#2) with static_string_array#1
debug: Deleting Phi assignment: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23)
debug: Replaced trivial Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23) (static_string_array#2) with static_string_array#1 in current definition for 1 blocks
debug: Added static_string_array#1 to Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25) in block@25
debug: Replacing trivial Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25) (static_string_array#1) with static_string_array#0
debug: Deleting Phi assignment: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25)
debug: Replaced trivial Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25) (static_string_array#1) with static_string_array#0 in current definition for 6 blocks
debug: Terminated block@26
debug: Looking for 'item_index_internal%5' in an unsealed block creating an incomplete Phi: block@27
debug: Created Phi assignment: let item_index_internal%5#1: uint64 = undefined while trying to resolve 'item_index_internal%5' in block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@27
debug: Created Phi assignment: let result#11: string = undefined while trying to resolve 'result' in block@27
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@27
debug: Added item_index_internal%5#0 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@26) in block@26
debug: Added item_index_internal%5#2 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@26, item_index_internal%5#2 <- block@29) in block@29
debug: Added result#10 to Phi node: let result#11: string = φ(result#10 <- block@26) in block@26
debug: Added result#12 to Phi node: let result#11: string = φ(result#10 <- block@26, result#12 <- block@29) in block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Building IR for function test_cases.arc4_types.array.Arc4ArraysContract.hash_as_array
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let result#2: string = undefined while trying to resolve 'result' in block@9
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@9
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8) in block@8
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@8, item_index_internal%2#2 <- block@14) in block@14
debug: Added result#0 to Phi node: let result#2: string = φ(result#0 <- block@8) in block@8
debug: Created Phi assignment: let result#4: string = undefined while trying to resolve 'result' in block@13
debug: Added result#1 to Phi node: let result#4: string = φ(result#1 <- block@11) in block@11
debug: Added result#3 to Phi node: let result#4: string = φ(result#1 <- block@11, result#3 <- block@12) in block@12
debug: Added result#4 to Phi node: let result#2: string = φ(result#0 <- block@8, result#4 <- block@14) in block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@16
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@16
debug: Created Phi assignment: let total#5: uint64 = undefined while trying to resolve 'total' in block@16
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@16
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@15) in block@15
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@15, item_index_internal%3#2 <- block@18) in block@18
debug: Created Phi assignment: let total#7: uint64 = undefined while trying to resolve 'total' in block@9
debug: Added total#3 to Phi node: let total#7: uint64 = φ(total#3 <- block@8) in block@8
debug: Created Phi assignment: let total#8: uint64 = undefined while trying to resolve 'total' in block@13
debug: Added total#7 to Phi node: let total#8: uint64 = φ(total#7 <- block@11) in block@11
debug: Added total#7 to Phi node: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12) in block@12
debug: Replacing trivial Phi node: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12) (total#8) with total#7
debug: Deleting Phi assignment: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12)
debug: Replaced trivial Phi node: let total#8: uint64 = φ(total#7 <- block@11, total#7 <- block@12) (total#8) with total#7 in current definition for 1 blocks
debug: Added total#7 to Phi node: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14) in block@14
debug: Replacing trivial Phi node: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14) (total#7) with total#3
debug: Deleting Phi assignment: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14)
debug: Replaced trivial Phi node: let total#7: uint64 = φ(total#3 <- block@8, total#7 <- block@14) (total#7) with total#3 in current definition for 6 blocks
debug: Added total#3 to Phi node: let total#5: uint64 = φ(total#3 <- block@15) in block@15
debug: Added total#6 to Phi node: let total#5: uint64 = φ(total#3 <- block@15, total#6 <- block@18) in block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Looking for 'item_index_internal%4' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let item_index_internal%4#1: uint64 = undefined while trying to resolve 'item_index_internal%4' in block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@20
debug: Created Phi assignment: let result#7: string = undefined while trying to resolve 'result' in block@20
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@20
debug: Added item_index_internal%4#0 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@19) in block@19
debug: Added item_index_internal%4#2 to Phi node: let item_index_internal%4#1: uint64 = φ(item_index_internal%4#0 <- block@19, item_index_internal%4#2 <- block@25) in block@25
debug: Added result#5 to Phi node: let result#7: string = φ(result#5 <- block@19) in block@19
debug: Created Phi assignment: let result#9: string = undefined while trying to resolve 'result' in block@24
debug: Added result#6 to Phi node: let result#9: string = φ(result#6 <- block@22) in block@22
debug: Added result#8 to Phi node: let result#9: string = φ(result#6 <- block@22, result#8 <- block@23) in block@23
debug: Added result#9 to Phi node: let result#7: string = φ(result#5 <- block@19, result#9 <- block@25) in block@25
debug: Sealing block@26
debug: Created Phi assignment: let static_string_array#1: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'static_string_array' in block@20
debug: Added static_string_array#0 to Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19) in block@19
debug: Created Phi assignment: let static_string_array#2: Encoded((len+utf8[])[2]) = undefined while trying to resolve 'static_string_array' in block@24
debug: Added static_string_array#1 to Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22) in block@22
debug: Added static_string_array#1 to Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23) in block@23
debug: Replacing trivial Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23) (static_string_array#2) with static_string_array#1
debug: Deleting Phi assignment: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23)
debug: Replaced trivial Phi node: let static_string_array#2: Encoded((len+utf8[])[2]) = φ(static_string_array#1 <- block@22, static_string_array#1 <- block@23) (static_string_array#2) with static_string_array#1 in current definition for 1 blocks
debug: Added static_string_array#1 to Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25) in block@25
debug: Replacing trivial Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25) (static_string_array#1) with static_string_array#0
debug: Deleting Phi assignment: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25)
debug: Replaced trivial Phi node: let static_string_array#1: Encoded((len+utf8[])[2]) = φ(static_string_array#0 <- block@19, static_string_array#1 <- block@25) (static_string_array#1) with static_string_array#0 in current definition for 6 blocks
debug: Terminated block@26
debug: Looking for 'item_index_internal%5' in an unsealed block creating an incomplete Phi: block@27
debug: Created Phi assignment: let item_index_internal%5#1: uint64 = undefined while trying to resolve 'item_index_internal%5' in block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@27
debug: Created Phi assignment: let result#11: string = undefined while trying to resolve 'result' in block@27
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@27
debug: Added item_index_internal%5#0 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@26) in block@26
debug: Added item_index_internal%5#2 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@26, item_index_internal%5#2 <- block@29) in block@29
debug: Added result#10 to Phi node: let result#11: string = φ(result#10 <- block@26) in block@26
debug: Added result#12 to Phi node: let result#11: string = φ(result#10 <- block@26, result#12 <- block@29) in block@29
debug: Sealing block@30
debug: Terminated block@30
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.hash_as_array
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.address.Arc4AddressContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.address.Arc4AddressContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.address.Arc4AddressContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: removing unused subroutine test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: removing unused subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: removing unused subroutine test_cases.arc4_types.bool.get_arr
debug: removing unused subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: removing unused subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of test_cases.arc4_types.uint_overflow.UIntOverflow at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8 for inlining
debug: marking single-use function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16 for inlining
debug: marking single-use function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32 for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%16#0 0u) to (! tmp%16#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@8 from switch tmp%15#0 {0u => block@9, * => block@10} to goto_nth [block@9][tmp%15#0] else goto block@10
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@8 from goto_nth [block@9][tmp%15#0] else goto block@10 to goto tmp%15#0 ? block@10 : block@9
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@8
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@7 with block@6 in block@12
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@11 with block@10 in block@12
debug: Merged linear block@11 into block@10
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@6
debug: Removed empty block: block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create in test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
arc4_types/uint_overflow.py:15:6 debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32 in test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
arc4_types/uint_overflow.py:10:6 debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16 in test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
arc4_types/uint_overflow.py:5:6 debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8 in test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#3, too_big#2
debug: selected too_big#2 from equivalence set
debug: Found equivalence set: tmp%2#2, too_big#1
debug: selected too_big#1 from equivalence set
debug: Found equivalence set: tmp%2#1, too_big#0
debug: selected too_big#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%16#0 0u) to (! tmp%16#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@7 from switch tmp%15#0 {0u => block@8, * => block@9} to goto_nth [block@8][tmp%15#0] else goto block@9
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@7 from goto_nth [block@8][tmp%15#0] else goto block@9 to goto tmp%15#0 ? block@9 : block@8
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@18 with block@2 in block@19
debug: Merged linear block@18 into block@2
debug: Merged linear block@19 into block@2
debug: Replaced predecessor block@16 with block@3 in block@17
debug: Merged linear block@16 into block@3
debug: Merged linear block@17 into block@3
debug: Replaced predecessor block@14 with block@4 in block@15
debug: Merged linear block@14 into block@4
debug: Merged linear block@15 into block@4
debug: Replaced predecessor block@6 with block@5 in block@11
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@12 with block@8 in block@13
debug: Merged linear block@12 into block@8
debug: Merged linear block@13 into block@8
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5
debug: Removed empty block: block@9
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, too_big#0
debug: selected too_big#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, too_big#0
debug: selected too_big#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, too_big#0
debug: selected too_big#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8 for inlining
debug: marking single-use function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16 for inlining
debug: marking single-use function test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32 for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
arc4_types/uint_overflow.py:15:6 debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32 in algopy.arc4.ARC4Contract.approval_program
arc4_types/uint_overflow.py:10:6 debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16 in algopy.arc4.ARC4Contract.approval_program
arc4_types/uint_overflow.py:5:6 debug: inlining call to test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8 in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@20 with block@3 in block@21
debug: Merged linear block@20 into block@3
debug: Replaced predecessor block@21 with block@3 in block@13
debug: Merged linear block@21 into block@3
debug: Replaced predecessor block@18 with block@4 in block@19
debug: Merged linear block@18 into block@4
debug: Replaced predecessor block@19 with block@4 in block@13
debug: Merged linear block@19 into block@4
debug: Replaced predecessor block@16 with block@5 in block@17
debug: Merged linear block@16 into block@5
debug: Replaced predecessor block@17 with block@5 in block@13
debug: Merged linear block@17 into block@5
debug: Replaced predecessor block@14 with block@9 in block@15
debug: Merged linear block@14 into block@9
debug: Replaced predecessor block@15 with block@9 in block@13
debug: Merged linear block@15 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32
debug: removing unused subroutine test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.uint_overflow.UIntOverflow at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.uint_overflow.UIntOverflow
debug: lowering array IR nodes in clear program of test_cases.arc4_types.uint_overflow.UIntOverflow
debug: optimizing approval program of test_cases.arc4_types.uint_overflow.UIntOverflow at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%uint8%0#0, aggregate%as_Encoded(uint8)%0#0, too_big#2
debug: selected too_big#2 from equivalence set
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, too_big#1
debug: selected too_big#1 from equivalence set
debug: Found equivalence set: aggregate%uint32%0#0, aggregate%as_Encoded(uint32)%0#0, too_big#0
debug: selected too_big#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 aggregate%val_as_bytes%0#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%0#0)
debug: Simplified (extract3 aggregate%val_as_bytes%1#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%1#0)
debug: Simplified (extract3 aggregate%val_as_bytes%2#0 4u 4u) to ((extract 4 4) aggregate%val_as_bytes%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.arc4_types.uint_overflow.UIntOverflow at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.uint_overflow.UIntOverflow
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.uint_overflow.UIntOverflow
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing tmp%0#1 with [tmp%0#4, tmp%0#3, tmp%0#2]
debug: Coalescing tmp%1#1 with [tmp%1#3, tmp%1#2]
debug: Coalescing too_big#0 with [too_big#2, too_big#1, too_big#0]
debug: Coalescing tmp%3#1 with [tmp%3#3, tmp%3#2]
debug: Coalescing test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0 with [test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#1, test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#2, test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#3, test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#4]
debug: Coalescing tmp%0#0 with [tmp%0#5]
debug: Coalescing resulted in 34 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/UIntOverflow.ir/UIntOverflow.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/UIntOverflow.ir/UIntOverflow.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[6]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_uint8_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_uint8_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_uint8_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_uint8_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_uint8_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_uint8_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_uint8_route@3.ops[15]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_test_uint8_route@3.ops[17]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_test_uint8_route@3.ops[20]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_uint8_route@3.ops[22]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_uint8_route@3.ops[24]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced main_test_uint8_route@3.ops[26]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted main_test_uint8_route@3.ops[28]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced main_test_uint8_route@3.ops[30]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted main_test_uint8_route@3.ops[33]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced main_test_uint8_route@3.ops[35]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted main_test_uint8_route@3.ops[39]: 'l-store-copy too_big#0 0'
debug: Replaced main_test_uint8_route@3.ops[41]: 'v-load too_big#0' with 'l-load too_big#0'
debug: Inserted main_test_uint8_route@3.ops[44]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_uint8_route@3.ops[46]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_uint8_route@3.ops[49]: 'l-store-copy test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_uint8_route@3.ops[51]: 'v-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0'
debug: Inserted main_test_uint8_route@3.ops[27]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced main_test_uint8_route@3.ops[38]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted main_test_uint16_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_uint16_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_uint16_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_uint16_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_uint16_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_uint16_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_uint16_route@4.ops[15]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_test_uint16_route@4.ops[17]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_test_uint16_route@4.ops[20]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_uint16_route@4.ops[22]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_uint16_route@4.ops[24]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_test_uint16_route@4.ops[26]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_test_uint16_route@4.ops[28]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced main_test_uint16_route@4.ops[30]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted main_test_uint16_route@4.ops[33]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced main_test_uint16_route@4.ops[35]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted main_test_uint16_route@4.ops[39]: 'l-store-copy too_big#0 0'
debug: Replaced main_test_uint16_route@4.ops[41]: 'v-load too_big#0' with 'l-load too_big#0'
debug: Inserted main_test_uint16_route@4.ops[44]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_uint16_route@4.ops[46]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_uint16_route@4.ops[49]: 'l-store-copy test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_uint16_route@4.ops[51]: 'v-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0'
debug: Inserted main_test_uint16_route@4.ops[27]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_test_uint16_route@4.ops[38]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_test_uint32_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_uint32_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_uint32_route@5.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_uint32_route@5.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_uint32_route@5.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_uint32_route@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_uint32_route@5.ops[15]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_test_uint32_route@5.ops[17]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_test_uint32_route@5.ops[20]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_uint32_route@5.ops[22]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_uint32_route@5.ops[24]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_test_uint32_route@5.ops[26]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_test_uint32_route@5.ops[28]: 'l-store-copy aggregate%bitlen%2#0 0'
debug: Replaced main_test_uint32_route@5.ops[30]: 'v-load aggregate%bitlen%2#0' with 'l-load aggregate%bitlen%2#0'
debug: Inserted main_test_uint32_route@5.ops[33]: 'l-store-copy aggregate%no_overflow%2#0 0'
debug: Replaced main_test_uint32_route@5.ops[35]: 'v-load aggregate%no_overflow%2#0' with 'l-load aggregate%no_overflow%2#0'
debug: Inserted main_test_uint32_route@5.ops[39]: 'l-store-copy too_big#0 0'
debug: Replaced main_test_uint32_route@5.ops[41]: 'v-load too_big#0' with 'l-load too_big#0'
debug: Inserted main_test_uint32_route@5.ops[44]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_uint32_route@5.ops[46]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_uint32_route@5.ops[49]: 'l-store-copy test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_uint32_route@5.ops[51]: 'v-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0'
debug: Inserted main_test_uint32_route@5.ops[27]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_test_uint32_route@5.ops[38]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_bare_routing@8.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_bare_routing@8.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main___algopy_default_create@9.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main___algopy_default_create@9.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main___algopy_default_create@9.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main___algopy_default_create@9.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main___algopy_default_create@9.ops[10]: 'l-store-copy test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@9.ops[12]: 'v-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@12.ops[1]: 'l-store-copy test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@12.ops[3]: 'v-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__%0#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_uint8_route@3 -> main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13: tmp%0#0
debug: shared x-stack for main_test_uint16_route@4 -> main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13: tmp%0#0
debug: shared x-stack for main_test_uint32_route@5 -> main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13: tmp%0#0
debug: shared x-stack for main___algopy_default_create@9 -> main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13: tmp%0#0
debug: shared x-stack for main_after_if_else@12 -> main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13: tmp%0#0
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13` with `return`
debug: replacing `b main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13` with `return`
debug: replacing `b main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13` with `return`
debug: replacing `b main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__puya_arc4_router__@13 into main_after_if_else@12
debug: inlining single reference block main___algopy_default_create@9 into main_bare_routing@8
debug: removing explicit jump to fall-through block main_after_if_else@12
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff for inlining
debug: marking single-use function test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy for inlining
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/tuples.py:45:25 debug: inlining call to test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
arc4_types/tuples.py:49:9 debug: inlining call to test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, my_tuple#0, test_tuple#0
debug: selected my_tuple#0 from equivalence set
debug: Found equivalence set: tmp%13#0, boolean_packing#0
debug: selected boolean_packing#0 from equivalence set
debug: Found equivalence set: tmp%15#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%16#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%17#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: tmp%18#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%19#0, e#0
debug: selected e#0 from equivalence set
debug: Found equivalence set: tmp%20#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: tmp%21#0, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: tmp%22#0, h#0
debug: selected h#0 from equivalence set
debug: Found equivalence set: tmp%23#0, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%24#0, j#0
debug: selected j#0 from equivalence set
debug: Found equivalence set: tmp%25#0, k#0, reinterpret_biguint%1#0
debug: selected k#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, reinterpret_biguint%0#0
debug: selected tuple_item%0#0 from equivalence set
debug: Found equivalence set: tmp%0#1, a#1, reinterpret_biguint%1#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: tmp%1#1, b#1
debug: selected b#1 from equivalence set
debug: Found equivalence set: tmp%2#1, c#1
debug: selected c#1 from equivalence set
debug: Found equivalence set: tmp%3#1, d#1
debug: selected d#1 from equivalence set
debug: Found equivalence set: tmp%4#1, e#1, reinterpret_biguint%3#0
debug: selected e#1 from equivalence set
debug: Found equivalence set: tuple_item%0#1, reinterpret_biguint%0#1
debug: selected tuple_item%0#1 from equivalence set
debug: Found equivalence set: tuple_item%1#0, reinterpret_biguint%2#0
debug: selected tuple_item%1#0 from equivalence set
debug: Found equivalence set: tmp%12#1, total#1, tmp%63#0, total#0
debug: selected total#1 from equivalence set
debug: Found equivalence set: tmp%16#1, text#0
debug: selected text#0 from equivalence set
debug: Found equivalence set: tmp%17#1, tmp%64#0, concat#0
debug: selected concat#0 from equivalence set
debug: Found equivalence set: tmp%1#2, tup#0
debug: selected tup#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, tup#1, tup2#0
debug: selected tup#1 from equivalence set
debug: Found equivalence set: updated_tuple%1#0, tup#2
debug: selected tup#2 from equivalence set
debug: Copy propagation made 37 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8)%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@14 with block@13 in block@15
debug: Merged linear block@14 into block@13
debug: Replaced predecessor block@15 with block@13 in block@16
debug: Merged linear block@15 into block@13
debug: Replaced predecessor block@16 with block@13 in block@17
debug: Merged linear block@16 into block@13
debug: Merged linear block@17 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%6#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:23:16-26, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:23:16-26, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%8#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:23:16-26, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%9#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:23:16-26, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%10#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:24:16-27, ir_type=Encoded(bool8), name='tmp%5', version=0),)
debug: Replacing redundant declaration let tmp%11#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:23:16-26, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%12#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:23:16-26, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%29#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:24:16-27, ir_type=Encoded(bool8), name='tmp%5', version=0),)
debug: Replacing redundant declaration let tuple_item%3#0: Encoded(len+uint8[]) = extract_value(tup#1, 1) with copy of existing registers (Register(source_location=arc4_types/tuples.py:74:15-21, ir_type=Encoded(len+uint8[]), name='tuple_item%1', version=1),)
debug: Replacing redundant declaration let tmp%31#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:24:16-27, ir_type=Encoded(bool8), name='tmp%5', version=0),)
debug: Replacing redundant declaration let tmp%33#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:39:21-22, ir_type=Encoded(bool8), name='tmp%31', version=0),)
debug: Replacing redundant declaration let tmp%35#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:39:27-28, ir_type=Encoded(bool8), name='tmp%33', version=0),)
debug: Replacing redundant declaration let tmp%37#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:39:33-34, ir_type=Encoded(bool8), name='tmp%35', version=0),)
debug: Replacing redundant declaration let tmp%39#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:39:39-40, ir_type=Encoded(bool8), name='tmp%37', version=0),)
debug: Replacing redundant declaration let tmp%41#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:39:45-46, ir_type=Encoded(bool8), name='tmp%39', version=0),)
debug: Replacing redundant declaration let tmp%43#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:24:16-27, ir_type=Encoded(bool8), name='tmp%5', version=0),)
debug: Replacing redundant declaration let tmp%45#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:40:20-21, ir_type=Encoded(bool8), name='tmp%43', version=0),)
debug: Replacing redundant declaration let (tmp%50#0: Encoded(uint8), tmp%51#0: Encoded(bool8), tmp%52#0: Encoded(bool8), tmp%53#0: Encoded(bool8), tmp%54#0: Encoded(bool8), tmp%55#0: Encoded(bool8), tmp%56#0: Encoded(bool8), tmp%57#0: Encoded(bool8), tmp%58#0: Encoded(bool8), tmp%59#0: Encoded(bool8), tmp%60#0: Encoded(uint8)) = decode_bytes<(Encoded(uint8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(bool8),Encoded(uint8),)>(boolean_packing#0) with copy of existing registers (Register(source_location=arc4_types/tuples.py:36:8-9, ir_type=Encoded(uint8), name='a', version=0), Register(source_location=arc4_types/tuples.py:36:11-12, ir_type=Encoded(bool8), name='b', version=0), Register(source_location=arc4_types/tuples.py:36:14-15, ir_type=Encoded(bool8), name='c', version=0), Register(source_location=arc4_types/tuples.py:36:17-18, ir_type=Encoded(bool8), name='d', version=0), Register(source_location=arc4_types/tuples.py:36:20-21, ir_type=Encoded(bool8), name='e', version=0), Register(source_location=arc4_types/tuples.py:36:23-24, ir_type=Encoded(bool8), name='f', version=0), Register(source_location=arc4_types/tuples.py:36:26-27, ir_type=Encoded(bool8), name='g', version=0), Register(source_location=arc4_types/tuples.py:36:29-30, ir_type=Encoded(bool8), name='h', version=0), Register(source_location=arc4_types/tuples.py:36:32-33, ir_type=Encoded(bool8), name='i', version=0), Register(source_location=arc4_types/tuples.py:36:35-36, ir_type=Encoded(bool8), name='j', version=0), Register(source_location=arc4_types/tuples.py:36:38-39, ir_type=Encoded(uint8), name='k', version=0))
debug: Found equivalence set: tmp%4#0, tmp%6#0, tmp%7#0, tmp%8#0, tmp%9#0, tmp%11#0, tmp%12#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%10#0, tmp%29#0, tmp%31#0, tmp%33#0, tmp%35#0, tmp%37#0, tmp%39#0, tmp%41#0, tmp%43#0, tmp%45#0
debug: selected tmp%5#0 from equivalence set
debug: Found equivalence set: a#0, tmp%50#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: b#0, tmp%51#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: c#0, tmp%52#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: d#0, tmp%53#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: e#0, tmp%54#0
debug: selected e#0 from equivalence set
debug: Found equivalence set: f#0, tmp%55#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: g#0, tmp%56#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: h#0, tmp%57#0
debug: selected h#0 from equivalence set
debug: Found equivalence set: i#0, tmp%58#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: j#0, tmp%59#0
debug: selected j#0 from equivalence set
debug: Found equivalence set: k#0, tmp%60#0
debug: selected k#0 from equivalence set
debug: Found equivalence set: tuple_item%1#1, tuple_item%3#0
debug: selected tuple_item%1#1 from equivalence set
debug: Copy propagation made 28 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: 0x01, 0x02, tmp%0#0, tmp%1#0, 0xff
debug: replacing redundant decode-of-encode with: text#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, a#0, reinterpret_biguint%1#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%2#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: tmp%3#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%4#0, e#0, reinterpret_biguint%3#0
debug: selected e#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, reinterpret_biguint%0#0
debug: selected tuple_item%0#0 from equivalence set
debug: Found equivalence set: tuple_item%1#0, reinterpret_biguint%2#0
debug: selected tuple_item%1#0 from equivalence set
debug: Found equivalence set: tmp%12#0, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: tmp%16#0, text#0
debug: selected text#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, tup#0
debug: selected tup#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, tup#1, tup2#0
debug: selected tup#1 from equivalence set
debug: Found equivalence set: updated_tuple%1#0, tup#2
debug: selected tup#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tuple_item%3#0: Encoded(len+uint8[]) = extract_value(tup#1, 1) with copy of existing registers (Register(source_location=arc4_types/tuples.py:74:15-21, ir_type=Encoded(len+uint8[]), name='tuple_item%1', version=0),)
debug: Found equivalence set: tuple_item%1#0, tuple_item%3#0
debug: selected tuple_item%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff
debug: removing unused subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, c#1
debug: selected c#1 from equivalence set
debug: Found equivalence set: tmp%1#0, d#1
debug: selected d#1 from equivalence set
debug: Found equivalence set: text#0, tmp%65#0
debug: selected text#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a#1
debug: Removing unused variable b#1
debug: Removing unused variable e#1
debug: Removing unused variable concat#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: "hello"
debug: replacing redundant decode-of-encode with: "world"
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%13#1
debug: Removing unused variable tmp%15#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "hello" " ") to "hello "
debug: Simplified (concat "hello " "world") to "hello world"
debug: Simplified (== "hello world" "hello world") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%14#1
debug: Removing unused variable text#0
debug: Removing unused variable tmp%66#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract
debug: optimizing approval program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, c#1
debug: selected c#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, d#1
debug: selected d#1 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint8,uint8,(len+utf8[]),(len+utf8[]),uint8)%0#0, my_tuple#0
debug: selected my_tuple#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%4#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, tmp%5#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%8#0, aggregate%as_Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8)%0#0, boolean_packing#0
debug: selected boolean_packing#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%3#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%4#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%5#0, e#0
debug: selected e#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%6#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%7#0, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%8#0, h#0
debug: selected h#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%9#0, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%10#0, j#0
debug: selected j#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, k#0
debug: selected k#0 from equivalence set
debug: Found equivalence set: aggregate%extract%2#0, tuple_item%0#0
debug: selected aggregate%extract%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%12#0, aggregate%as_Encoded(uint8,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint8)%1#0, tmp%61#0
debug: selected aggregate%head%12#0 from equivalence set
debug: Found equivalence set: aggregate%extract%3#0, tuple_item%0#1
debug: selected aggregate%extract%3#0 from equivalence set
debug: Found equivalence set: aggregate%extract%4#0, tuple_item%1#0
debug: selected aggregate%extract%4#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, tuple_item%2#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%0#2
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%concat%2#0, aggregate%as_Encoded(uint8,(len+uint8[]))%0#0, tup#0
debug: selected tup#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, tuple_item%0#2
debug: selected aggregate%substring3%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%15#0, aggregate%as_Encoded(uint8[])%0#0, tmp%2#2
debug: selected aggregate%head%15#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%0#0, tup#1
debug: selected tup#1 from equivalence set
debug: Found equivalence set: aggregate%substring3%3#0, tuple_item%1#1
debug: selected aggregate%substring3%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%16#0, aggregate%as_Encoded(len+uint8[])%1#0, encoded_array%0#0
debug: selected aggregate%head%16#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%1#0, tup#2
debug: selected tup#2 from equivalence set
debug: Found equivalence set: aggregate%substring3%5#0, tuple_item%2#1
debug: selected aggregate%substring3%5#0 from equivalence set
debug: Copy propagation made 50 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%substring3%2#0
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%extract_uint16%2#0
debug: Removing unused variable aggregate%len%2#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0005
debug: Simplified (concat 0x0005 "hello") to 0x000568656c6c6f
debug: Simplified (len "world") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0005
debug: Simplified (concat 0x0005 "world") to 0x0005776f726c64
debug: Simplified (concat 0x 0x01) to 0x01
debug: Simplified (concat 0x01 0x02) to 0x0102
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0007
debug: Simplified (concat 0x0102 0x0007) to 0x01020007
debug: Simplified (len 0x000568656c6c6f) to 7u
debug: Simplified (+ 7u 7u) to 14u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000e
debug: Simplified (concat 0x01020007 0x000e) to 0x01020007000e
debug: Simplified (concat 0x01020007000e 0xff) to 0x01020007000eff
debug: Simplified (concat 0x01020007000eff 0x000568656c6c6f) to 0x01020007000eff000568656c6c6f
debug: Simplified (concat 0x01020007000eff000568656c6c6f 0x0005776f726c64) to 0x01020007000eff000568656c6c6f0005776f726c64
debug: Simplified (== 0x01020007000eff000568656c6c6f0005776f726c64 0x01020007000eff000568656c6c6f0005776f726c64) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (concat 0x 0x04) to 0x04
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa0 3u 1u) to 0xb0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xb0 4u 1u) to 0xb8
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xb8 5u 1u) to 0xbc
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xbc 6u 0u) to 0xbc
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xbc 7u 1u) to 0xbd
debug: Simplified (concat 0x04 0xbd) to 0x04bd
debug: Simplified (concat 0x04bd 0x80) to 0x04bd80
debug: Simplified (concat 0x04bd80 0x10) to 0x04bd8010
debug: Simplified (== 0x04bd8010 0x04bd8010) to 1u
debug: Simplified (extract3 0x04bd8010 0u 1u) to 0x04
debug: Simplified (getbit 0x04bd8010 8u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x04bd8010 9u) to 0u
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x04bd8010 10u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x04bd8010 11u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x04bd8010 12u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x04bd8010 13u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x04bd8010 14u) to 0u
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x04bd8010 15u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x04bd8010 16u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (extract3 0x04bd8010 3u 1u) to 0x10
debug: Simplified (extract3 0x04bd8010 3u 1u) to 0x10
debug: Simplified (b== 0x10 0x10) to 1u
debug: Simplified (btoi 0x04) to 4u
debug: Simplified (== 4u 4u) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (!= 0x00 0x00) to 0u
debug: Simplified (!= 0x00 0x00) to 0u
debug: Simplified (btoi 0x10) to 16u
debug: Simplified (== 16u 16u) to 1u
debug: Simplified (concat 0x 0x04) to 0x04
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa0 3u 1u) to 0xb0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xb0 4u 1u) to 0xb8
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xb8 5u 1u) to 0xbc
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xbc 6u 0u) to 0xbc
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xbc 7u 1u) to 0xbd
debug: Simplified (concat 0x04 0xbd) to 0x04bd
debug: Simplified (concat 0x04bd 0x80) to 0x04bd80
debug: Simplified (concat 0x04bd80 0x10) to 0x04bd8010
debug: Simplified (== 0x04bd8010 0x04bd8010) to 1u
debug: Simplified (extract3 0x01020007000eff000568656c6c6f0005776f726c64 0u 1u) to 0x01
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (extract3 0x01020007000eff000568656c6c6f0005776f726c64 6u 1u) to 0xff
debug: Simplified (b== 0xff 0xff) to 1u
debug: Simplified (extract_uint16 0x01020007000eff000568656c6c6f0005776f726c64 4u) to 14u
debug: Simplified (len 0x01020007000eff000568656c6c6f0005776f726c64) to 21u
debug: Simplified (substring3 0x01020007000eff000568656c6c6f0005776f726c64 14u 21u) to 0x0005776f726c64
debug: Simplified (== 0x0005776f726c64 0x0005776f726c64) to 1u
debug: Simplified (btoi 0x01) to 1u
debug: Simplified (btoi 0x02) to 2u
debug: Simplified (+ 1u 2u) to 3u
debug: Simplified (btoi 0xff) to 255u
debug: Simplified (+ 3u 255u) to 258u
debug: Simplified (== 258u 258u) to 1u
debug: Simplified (len 0x) to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0003
debug: Simplified (concat 0x00 0x0003) to 0x000003
debug: Simplified (concat 0x000003 0x0000) to 0x0000030000
debug: Simplified (extract_uint16 0x0000030000 1u) to 3u
debug: Simplified (len 0x0000030000) to 5u
debug: Simplified (substring3 0x0000030000 3u 5u) to 0x0000
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x0000 0x00) // on error: max array length exceeded to 0x000000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0001
debug: Simplified ((replace2 0) 0x000000 0x0001) to 0x000100
debug: Simplified (extract_uint16 0x0000030000 1u) to 3u
debug: Simplified (extract3 0x0000030000 0u 3u) to 0x000003
debug: Simplified (concat 0x000003 0x000100) to 0x000003000100
debug: Simplified (extract_uint16 0x000003000100 1u) to 3u
debug: Simplified (len 0x000003000100) to 6u
debug: Simplified (substring3 0x000003000100 3u 6u) to 0x000100
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0001
debug: Simplified (concat 0x0001 0x00) to 0x000100
debug: Simplified (== 0x000100 0x000100) to 1u
debug: Simplified (extract_uint16 0x000003000100 1u) to 3u
debug: Simplified (len 0x000003000100) to 6u
debug: Simplified (substring3 0x000003000100 3u 6u) to 0x000100
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (replace3 0x000100 2u 0x01) // on error: index access is out of bounds to 0x000101
debug: Simplified (extract_uint16 0x000003000100 1u) to 3u
debug: Simplified (extract3 0x000003000100 0u 3u) to 0x000003
debug: Simplified (concat 0x000003 0x000101) to 0x000003000101
debug: Simplified (extract_uint16 0x000003000101 1u) to 3u
debug: Simplified (len 0x000003000101) to 6u
debug: Simplified (substring3 0x000003000101 3u 6u) to 0x000101
debug: Simplified (!= 0x000101 0x000100) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@8 to goto block@1
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@8 to goto block@2
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@2 from goto 1u ? block@3 : block@8 to goto block@3
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@3 from goto 1u ? block@4 : block@8 to goto block@4
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@4 from goto 1u ? block@5 : block@8 to goto block@5
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5 from goto 1u ? block@6 : block@8 to goto block@6
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@6 from goto 1u ? block@7 : block@8 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@9 from goto 0u ? block@11 : block@10 to goto block@10
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10 from goto 0u ? block@11 : block@12 to goto block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@9
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@10 with block@9 in block@12
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@8, block@11
debug: Removed unreachable predecessors from block@9
debug: Removed unreachable predecessors from block@13
debug: Removing unreachable phi arguments: and_result%0#1 <- block@8
debug: Replacing trivial Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@0) (and_result%0#2) with and_result%0#0
debug: Deleting Phi assignment: let and_result%0#2: bool = φ(and_result%0#0 <- block@0)
debug: Removing unreachable phi arguments: or_result%0#0 <- block@11
debug: Replacing trivial Phi node: let or_result%0#2: bool = φ(or_result%0#1 <- block@9) (or_result%0#2) with or_result%0#1
debug: Deleting Phi assignment: let or_result%0#2: bool = φ(or_result%0#1 <- block@9)
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:15:46-61, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%6#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/tuples.py:72:8-29, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%1#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: as_bytes%0#0, aggregate%as_bytes%6#0
debug: selected as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable c#1
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable d#1
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable my_tuple#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable aggregate%encoded_bool%1#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%get_bit%0#0
debug: Removing unused variable aggregate%set_bit%0#0
debug: Removing unused variable aggregate%get_bit%1#0
debug: Removing unused variable aggregate%set_bit%1#0
debug: Removing unused variable aggregate%get_bit%2#0
debug: Removing unused variable aggregate%set_bit%2#0
debug: Removing unused variable aggregate%get_bit%3#0
debug: Removing unused variable aggregate%set_bit%3#0
debug: Removing unused variable aggregate%get_bit%4#0
debug: Removing unused variable aggregate%set_bit%4#0
debug: Removing unused variable aggregate%get_bit%5#0
debug: Removing unused variable aggregate%set_bit%5#0
debug: Removing unused variable aggregate%get_bit%6#0
debug: Removing unused variable aggregate%set_bit%6#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable boolean_packing#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable a#0
debug: Removing unused variable aggregate%get_bit%7#0
debug: Removing unused variable b#0
debug: Removing unused variable aggregate%get_bit%8#0
debug: Removing unused variable c#0
debug: Removing unused variable aggregate%get_bit%9#0
debug: Removing unused variable d#0
debug: Removing unused variable aggregate%get_bit%10#0
debug: Removing unused variable e#0
debug: Removing unused variable aggregate%get_bit%11#0
debug: Removing unused variable f#0
debug: Removing unused variable aggregate%get_bit%12#0
debug: Removing unused variable g#0
debug: Removing unused variable aggregate%get_bit%13#0
debug: Removing unused variable h#0
debug: Removing unused variable aggregate%get_bit%14#0
debug: Removing unused variable i#0
debug: Removing unused variable aggregate%get_bit%15#0
debug: Removing unused variable j#0
debug: Removing unused variable k#0
debug: Removing unused variable aggregate%extract%2#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%28#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%40#0
debug: Removing unused variable tmp%42#0
debug: Removing unused variable and_result%0#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable tmp%46#0
debug: Removing unused variable or_result%0#1
debug: Removing unused variable tmp%48#0
debug: Removing unused variable tmp%49#0
debug: Removing unused variable aggregate%head%9#0
debug: Removing unused variable aggregate%get_bit%16#0
debug: Removing unused variable aggregate%set_bit%7#0
debug: Removing unused variable aggregate%get_bit%17#0
debug: Removing unused variable aggregate%set_bit%8#0
debug: Removing unused variable aggregate%get_bit%18#0
debug: Removing unused variable aggregate%set_bit%9#0
debug: Removing unused variable aggregate%get_bit%19#0
debug: Removing unused variable aggregate%set_bit%10#0
debug: Removing unused variable aggregate%get_bit%20#0
debug: Removing unused variable aggregate%set_bit%11#0
debug: Removing unused variable aggregate%get_bit%21#0
debug: Removing unused variable aggregate%set_bit%12#0
debug: Removing unused variable aggregate%get_bit%22#0
debug: Removing unused variable aggregate%set_bit%13#0
debug: Removing unused variable aggregate%head%10#0
debug: Removing unused variable aggregate%head%11#0
debug: Removing unused variable aggregate%head%12#0
debug: Removing unused variable tmp%62#0
debug: Removing unused variable aggregate%extract%3#0
debug: Removing unused variable tmp%5#1
debug: Removing unused variable aggregate%extract%4#0
debug: Removing unused variable tmp%6#1
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%len%0#0
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%9#1
debug: Removing unused variable tmp%10#1
debug: Removing unused variable tmp%11#1
debug: Removing unused variable total#1
debug: Removing unused variable tmp%67#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%as_bytes%4#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%encoded_value%2#0
debug: Removing unused variable aggregate%head%13#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%14#0
debug: Removing unused variable tup#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Removing unused variable aggregate%len%1#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable aggregate%head%15#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable replace%0#0
debug: Removing unused variable aggregate%item_offset%0#0
debug: Removing unused variable aggregate%data_up_to_item%0#0
debug: Removing unused variable tup#1
debug: Removing unused variable aggregate%extract_uint16%3#0
debug: Removing unused variable aggregate%len%3#0
debug: Removing unused variable aggregate%substring3%3#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%16#0
debug: Removing unused variable tmp%3#2
debug: Removing unused variable aggregate%extract_uint16%4#0
debug: Removing unused variable aggregate%len%4#0
debug: Removing unused variable aggregate%substring3%4#0
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable aggregate%write_offset_with_length_header%0#0
debug: Removing unused variable aggregate%updated_array%0#0
debug: Removing unused variable aggregate%item_offset%1#0
debug: Removing unused variable aggregate%data_up_to_item%1#0
debug: Removing unused variable tup#2
debug: Removing unused variable aggregate%extract_uint16%5#0
debug: Removing unused variable aggregate%len%5#0
debug: Removing unused variable aggregate%substring3%5#0
debug: Removing unused variable tmp%4#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@9 with block@0 in block@13
debug: Merged linear block@9 into block@0
debug: Merged linear block@13 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%47#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract
arc4_types/tuples.py:14 debug: auto reserving slots in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.tuples.Arc4TuplesTypeContract
arc4_types/tuples.py:53 debug: auto reserving slots in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4TuplesTypeContract.ir/Arc4TuplesTypeContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4TuplesTypeContract.ir/Arc4TuplesTypeContract.clear.400.destructured.ir
arc4_types/tuples.py:14 debug: optimizing TEAL subroutine ops test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program() -> uint64:
arc4_types/tuples.py:14 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
arc4_types/tuples.py:53 debug: optimizing TEAL subroutine ops test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program() -> uint64:
arc4_types/tuples.py:53 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.tuples.Arc4TuplesTypeContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.structs.Arc4StructsTypeContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.arc4_types.structs.add for inlining
debug: marking single-use function test_cases.arc4_types.structs.check for inlining
debug: marking single-use function test_cases.arc4_types.structs.nested_decode for inlining
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/structs.py:47:9 debug: inlining call to test_cases.arc4_types.structs.check in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
arc4_types/structs.py:51:9 debug: inlining call to test_cases.arc4_types.structs.nested_decode in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
arc4_types/structs.py:42:19 debug: inlining call to test_cases.arc4_types.structs.add in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, coord_1#0, v1#0, v1%out#0, add%1#0
debug: selected coord_1#0 from equivalence set
debug: Found equivalence set: tmp%1#0, coord_2#0, v2#0, v2%out#0, add%2#0
debug: selected coord_2#0 from equivalence set
debug: Found equivalence set: tmp%2#3, add%0#0, coord_3#0
debug: selected coord_3#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tuple_item%1#0, val#2
debug: selected val#2 from equivalence set
debug: Found equivalence set: tmp%6#0, flags#0, flags#1, flags%out#0, check%0#0
debug: selected flags#0 from equivalence set
debug: Found equivalence set: tmp%8#0, vector_flags#0, vector_flags%out#0, nested_decode%0#0
debug: selected vector_flags#0 from equivalence set
debug: Found equivalence set: tmp%10#0, mutable#0, copy#0
debug: selected mutable#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, copy#1
debug: selected copy#1 from equivalence set
debug: Found equivalence set: tmp%13#0, immutable#0, no_copy#0, immutable_copy#0
debug: selected immutable#0 from equivalence set
debug: Found equivalence set: tmp%16#0, immutable2#0
debug: selected immutable2#0 from equivalence set
debug: Found equivalence set: tuple_item%4#0, reinterpret_biguint%0#0
debug: selected tuple_item%4#0 from equivalence set
debug: Found equivalence set: tuple_item%5#0, reinterpret_biguint%2#0
debug: selected tuple_item%5#0 from equivalence set
debug: Found equivalence set: tuple_item%6#0, reinterpret_biguint%3#0
debug: selected tuple_item%6#0 from equivalence set
debug: Copy propagation made 27 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable v1%is_original#0
debug: Removing unused variable v2%is_original#0
debug: Removing unused variable flags%is_original#0
debug: Removing unused variable vector_flags%is_original#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== coord_1#0 coord_1#0) to 1u
debug: Simplified (== immutable#0 immutable#0) to 1u
debug: Simplified (== immutable#0 immutable#0) to 1u
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@2 from goto_nth [block@3][loop_counter%0#1] else goto block@4 to goto loop_counter%0#1 ? block@4 : block@3
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@1
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Merged linear block@2 into block@1
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@6 with block@4 in block@7
debug: Merged linear block@6 into block@4
debug: Replaced predecessor block@7 with block@4 in block@8
debug: Merged linear block@7 into block@4
debug: Merged linear block@8 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let coord_2#0: Encoded(uint64,uint64) = bytes_encode<(uint64,uint64)>(0x000000083cfbf217, 0x000000230384b842) with copy of existing registers (Register(source_location=arc4_types/structs.py:40:8-15, ir_type=Encoded(uint64,uint64), name='coord_1', version=0),)
debug: Replacing redundant declaration let tmp%4#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/structs.py:46:24-39, ir_type=Encoded(bool8), name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%5#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/structs.py:46:43-59, ir_type=Encoded(bool8), name='tmp%3', version=0),)
debug: Replacing redundant declaration let tuple_item%6#0: Encoded(uint64) = extract_value(immutable#0, 0) with copy of existing registers (Register(source_location=arc4_types/structs.py:64:21-61, ir_type=Encoded(uint64), name='tuple_item%3', version=0),)
debug: Replacing redundant declaration let tmp%20#0: Encoded() = bytes_encode<()>() with copy of existing registers (Register(source_location=arc4_types/structs.py:68:15-28, ir_type=Encoded(), name='tmp%19', version=0),)
debug: Found equivalence set: coord_1#0, coord_2#0
debug: selected coord_1#0 from equivalence set
debug: Found equivalence set: tmp%2#0, tmp%4#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%3#0, tmp%5#0
debug: selected tmp%3#0 from equivalence set
debug: Found equivalence set: tuple_item%3#0, tuple_item%6#0
debug: selected tuple_item%3#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tmp%20#0
debug: selected tmp%19#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Replacing redundant declaration let tuple_item%1#3: Encoded(uint64) = extract_value(coord_1#0, 0) with copy of existing registers (Register(source_location=arc4_types/structs.py:79:22-26, ir_type=Encoded(uint64), name='tuple_item%0', version=3),)
debug: Replacing redundant declaration let tuple_item%3#3: Encoded(uint64) = extract_value(coord_1#0, 1) with copy of existing registers (Register(source_location=arc4_types/structs.py:80:22-26, ir_type=Encoded(uint64), name='tuple_item%2', version=3),)
debug: Found equivalence set: tuple_item%0#3, tuple_item%1#3
debug: selected tuple_item%0#3 from equivalence set
debug: Found equivalence set: tuple_item%2#3, tuple_item%3#3
debug: selected tuple_item%2#3 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
arc4_types/structs.py:94:12 debug: replacing extract_value(tuple_item%0#2, 0) with extract_value(vector_flags#0, 0, 0)
arc4_types/structs.py:95:12 debug: replacing extract_value(tuple_item%2#2, 2) with extract_value(vector_flags#0, 1, 2)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.structs.add
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: v1#0, v1%out#0
debug: selected v1#0 from equivalence set
debug: Found equivalence set: v2#0, v2%out#0
debug: selected v2#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable v1%is_original#0
debug: Removing unused variable v2%is_original#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.structs.check
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: flags#0, flags%out#0
debug: selected flags#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable flags%is_original#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.structs.nested_decode
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: vector_flags#0, vector_flags%out#0
debug: selected vector_flags#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable vector_flags%is_original#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
arc4_types/structs.py:94:12 debug: replacing extract_value(tuple_item%0#0, 0) with extract_value(vector_flags#0, 0, 0)
arc4_types/structs.py:95:12 debug: replacing extract_value(tuple_item%2#0, 2) with extract_value(vector_flags#0, 1, 2)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.structs.add_decimal
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.structs.add
debug: removing unused subroutine test_cases.arc4_types.structs.check
debug: removing unused subroutine test_cases.arc4_types.structs.nested_decode
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tuple_item%0#2
debug: Removing unused variable tuple_item%2#2
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%19#0 tmp%19#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.structs.add_decimal
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: marking simple function test_cases.arc4_types.structs.add_decimal for inlining (complexity=4 <= threshold=4)
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/structs.py:79:11 debug: inlining call to test_cases.arc4_types.structs.add_decimal in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
arc4_types/structs.py:80:11 debug: inlining call to test_cases.arc4_types.structs.add_decimal in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_item%0#3, x#0, y#0
debug: selected x#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, tmp%0#3
debug: selected reinterpret_Encoded(uint64)%0#0 from equivalence set
debug: Found equivalence set: tuple_item%2#3, x#1, y#1
debug: selected x#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#1, tmp%1#3
debug: selected reinterpret_Encoded(uint64)%0#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%21#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@1
debug: Merged linear block@8 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#4: uint64 = (btoi x#0) with copy of existing registers (Register(source_location=arc4_types/structs.py:100:38-54, ir_type=uint64, name='tmp%0', version=4),)
debug: Replacing redundant declaration let tmp%1#5: uint64 = (btoi x#1) with copy of existing registers (Register(source_location=arc4_types/structs.py:100:38-54, ir_type=uint64, name='tmp%0', version=5),)
debug: Found equivalence set: tmp%0#4, tmp%1#4
debug: selected tmp%0#4 from equivalence set
debug: Found equivalence set: tmp%0#5, tmp%1#5
debug: selected tmp%0#5 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.structs.add_decimal
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.structs.add_decimal
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc4_types.structs.Arc4StructsTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.structs.Arc4StructsTypeContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.structs.Arc4StructsTypeContract
debug: optimizing approval program of test_cases.arc4_types.structs.Arc4StructsTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0, coord_1#0
debug: selected coord_1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, x#0
debug: selected x#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, x#1
debug: selected x#1 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(uint64,uint64)%1#0, coord_3#0
debug: selected coord_3#0 from equivalence set
debug: Found equivalence set: aggregate%extract%2#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: aggregate%extract%3#0, val#2
debug: selected val#2 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%2#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, tmp%3#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0, flags#0
debug: selected flags#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%3#0, tuple_item%0#1
debug: selected aggregate%get_bit%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, values%0#0
debug: selected aggregate%encoded_bool%2#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%4#0, tmp%0#1
debug: selected aggregate%get_bit%4#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%5#0, tuple_item%1#1
debug: selected aggregate%get_bit%5#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%3#0, values%1#0
debug: selected aggregate%encoded_bool%3#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%6#0, tmp%1#1
debug: selected aggregate%get_bit%6#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%7#0, tuple_item%2#1
debug: selected aggregate%get_bit%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%4#0, values%2#0
debug: selected aggregate%encoded_bool%4#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%8#0, tmp%3#1
debug: selected aggregate%get_bit%8#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%9#0, tuple_item%3#1
debug: selected aggregate%get_bit%9#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%5#0, values%3#0
debug: selected aggregate%encoded_bool%5#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%10#0, tmp%4#1
debug: selected aggregate%get_bit%10#0 from equivalence set
debug: Found equivalence set: aggregate%head%6#0, aggregate%as_Encoded((uint64,uint64),(bool1,bool1,bool1,bool1))%0#0, vector_flags#0
debug: selected vector_flags#0 from equivalence set
debug: Found equivalence set: aggregate%extract%5#0, tuple_item%1#2
debug: selected aggregate%extract%5#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%11#0, tuple_item%3#2
debug: selected aggregate%get_bit%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%6#0, values%0#1
debug: selected aggregate%encoded_bool%6#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%12#0, tmp%2#2
debug: selected aggregate%get_bit%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%9#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint8[]))%0#0, mutable#0
debug: selected mutable#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, tuple_item%2#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%8#0, aggregate%as_Encoded(uint8[])%0#0, tmp%11#0
debug: selected aggregate%head%8#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%0#0, copy#1
debug: selected copy#1 from equivalence set
debug: Found equivalence set: aggregate%head%10#0, aggregate%as_Encoded(uint64,uint64)%2#0, immutable#0
debug: selected immutable#0 from equivalence set
debug: Found equivalence set: aggregate%extract%7#0, tuple_item%3#0
debug: selected aggregate%extract%7#0 from equivalence set
debug: Found equivalence set: aggregate%head%12#0, aggregate%as_Encoded(uint64,uint64)%3#0, immutable2#0
debug: selected immutable2#0 from equivalence set
debug: Found equivalence set: aggregate%extract%8#0, tuple_item%4#0
debug: selected aggregate%extract%8#0 from equivalence set
debug: Found equivalence set: aggregate%extract%9#0, tuple_item%5#0
debug: selected aggregate%extract%9#0 from equivalence set
debug: Copy propagation made 41 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Removing unused variable aggregate%len%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x000000083cfbf217) to 0x000000083cfbf217
debug: Simplified (concat 0x000000083cfbf217 0x000000230384b842) to 0x000000083cfbf217000000230384b842
debug: Simplified (extract3 0x000000083cfbf217000000230384b842 0u 8u) to 0x000000083cfbf217
debug: Simplified (btoi 0x000000083cfbf217) to 35382882839u
debug: Simplified (+ 35382882839u 35382882839u) to 70765765678u
debug: Simplified (extract3 0x000000083cfbf217000000230384b842 8u 8u) to 0x000000230384b842
debug: Simplified (btoi 0x000000230384b842) to 150382884930u
debug: Simplified (+ 150382884930u 150382884930u) to 300765769860u
debug: Simplified (concat 0x reinterpret_Encoded(uint64)%0#0) to reinterpret_Encoded(uint64)%0#0
debug: Simplified (concat reinterpret_Encoded(uint64)%0#0 reinterpret_Encoded(uint64)%0#1) to 0x0000001079f7e42e0000004607097084
debug: Simplified (extract3 0x0000001079f7e42e0000004607097084 0u 8u) to 0x0000001079f7e42e
debug: Simplified (extract3 0x0000001079f7e42e0000004607097084 8u 8u) to 0x0000004607097084
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (concat 0x 0xa0) to 0xa0
debug: Simplified (getbit 0xa0 0u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (getbit 0xa0 1u) to 0u
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (getbit 0xa0 2u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (getbit 0xa0 3u) to 0u
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x 0x000000083cfbf217000000230384b842) to 0x000000083cfbf217000000230384b842
debug: Simplified (concat 0x000000083cfbf217000000230384b842 0xa0) to 0x000000083cfbf217000000230384b842a0
debug: Simplified (extract3 0x000000083cfbf217000000230384b842a0 0u 16u) to 0x000000083cfbf217000000230384b842
debug: Simplified (extract3 0x000000083cfbf217000000230384b842 0u 8u) to 0x000000083cfbf217
debug: Simplified (== 0x000000083cfbf217 tmp%0#2) to 1u
debug: Simplified (extract3 0x000000083cfbf217000000230384b842a0 16u 1u) to 0xa0
debug: Simplified (getbit 0xa0 2u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (len 0x) to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (concat 0x0002 0x0000) to 0x00020000
debug: Simplified (extract_uint16 0x00020000 0u) to 2u
debug: Simplified (len 0x00020000) to 4u
debug: Simplified (substring3 0x00020000 2u 4u) to 0x0000
debug: Simplified (concat 0x 0x2a) to 0x2a
debug: Simplified (concat 0x0000 0x2a) // on error: max array length exceeded to 0x00002a
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0001
debug: Simplified ((replace2 0) 0x00002a 0x0001) to 0x00012a
debug: Simplified (extract_uint16 0x00020000 0u) to 2u
debug: Simplified (extract3 0x00020000 0u 2u) to 0x0002
debug: Simplified (concat 0x0002 0x00012a) to 0x000200012a
debug: Simplified (!= 0x00020000 0x000200012a) to 1u
debug: Simplified (concat 0x 0x000000000000000c) to 0x000000000000000c
debug: Simplified (concat 0x000000000000000c 0x0000000000000022) to 0x000000000000000c0000000000000022
debug: Simplified (extract3 0x000000000000000c0000000000000022 0u 8u) to 0x000000000000000c
debug: Simplified (concat 0x 0x000000000000000c) to 0x000000000000000c
debug: Simplified (concat 0x000000000000000c 0x000000000000007b) to 0x000000000000000c000000000000007b
debug: Simplified (extract3 0x000000000000000c000000000000007b 8u 8u) to 0x000000000000007b
debug: Simplified (b== 0x000000000000007b 0x000000000000007b) to 1u
debug: Simplified (extract3 0x000000000000000c000000000000007b 0u 8u) to 0x000000000000000c
debug: Simplified (b== 0x000000000000000c 0x000000000000000c) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, aggregate%head%2#0
debug: selected reinterpret_Encoded(uint64)%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable coord_1#0
debug: Removing unused variable x#0
debug: Removing unused variable tmp%0#4
debug: Removing unused variable tmp%2#3
debug: Removing unused variable reinterpret_Encoded(uint64)%0#0
debug: Removing unused variable x#1
debug: Removing unused variable tmp%0#5
debug: Removing unused variable tmp%2#4
debug: Removing unused variable reinterpret_Encoded(uint64)%0#1
debug: Removing unused variable coord_3#0
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable aggregate%encoded_bool%1#0
debug: Removing unused variable aggregate%get_bit%0#0
debug: Removing unused variable aggregate%set_bit%0#0
debug: Removing unused variable aggregate%get_bit%1#0
debug: Removing unused variable aggregate%set_bit%1#0
debug: Removing unused variable aggregate%get_bit%2#0
debug: Removing unused variable aggregate%set_bit%2#0
debug: Removing unused variable flags#0
debug: Removing unused variable aggregate%get_bit%3#0
debug: Removing unused variable aggregate%encoded_bool%2#0
debug: Removing unused variable aggregate%get_bit%4#0
debug: Removing unused variable aggregate%get_bit%5#0
debug: Removing unused variable aggregate%encoded_bool%3#0
debug: Removing unused variable aggregate%get_bit%6#0
debug: Removing unused variable tmp%2#1
debug: Removing unused variable aggregate%get_bit%7#0
debug: Removing unused variable aggregate%encoded_bool%4#0
debug: Removing unused variable aggregate%get_bit%8#0
debug: Removing unused variable aggregate%get_bit%9#0
debug: Removing unused variable aggregate%encoded_bool%5#0
debug: Removing unused variable aggregate%get_bit%10#0
debug: Removing unused variable tmp%5#1
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable vector_flags#0
debug: Removing unused variable aggregate%extract%4#0
debug: Removing unused variable aggregate%extract%5#0
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#2
debug: Removing unused variable aggregate%extract%6#0
debug: Removing unused variable aggregate%get_bit%11#0
debug: Removing unused variable aggregate%encoded_bool%6#0
debug: Removing unused variable aggregate%get_bit%12#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable mutable#0
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%len%0#0
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable aggregate%head%8#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%3#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable replace%0#0
debug: Removing unused variable aggregate%item_offset%0#0
debug: Removing unused variable aggregate%data_up_to_item%0#0
debug: Removing unused variable copy#1
debug: Removing unused variable tmp%12#0
debug: Removing unused variable aggregate%head%9#0
debug: Removing unused variable immutable#0
debug: Removing unused variable aggregate%extract%7#0
debug: Removing unused variable aggregate%head%11#0
debug: Removing unused variable immutable2#0
debug: Removing unused variable aggregate%extract%8#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable aggregate%extract%9#0
debug: Removing unused variable tmp%18#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.structs.Arc4StructsTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.structs.Arc4StructsTypeContract
arc4_types/structs.py:39 debug: auto reserving slots in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.structs.Arc4StructsTypeContract
arc4_types/structs.py:72 debug: auto reserving slots in test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program using strategy 'root_operand'
debug: Coalescing val#0 with [val#5, val#1]
debug: Coalescing loop_counter%0#0 with [loop_counter%0#5, loop_counter%0#1, loop_counter%0#2]
debug: Coalescing resulted in 12 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: loc: {loop_counter%0#0=loop_counter%0#0, val#0=val#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, val#0=val#0}
debug: ready: 
debug: to_do: loop_counter%0#0, val#0
debug: * to_do val#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, val#0=val#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, val#0=val#0}
debug: ready: 
debug: to_do: loop_counter%0#0, val#0
debug: * to_do val#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, val#0=None, val#2=val#2}
debug: pred: {loop_counter%0#0=loop_counter%0#0, val#0=val#2}
debug: ready: val#0
debug: to_do: loop_counter%0#0, val#0
debug: * avail val#0
debug: * avail val#2
debug: * to_do val#0
debug: * to_do loop_counter%0#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4StructsTypeContract.ir/Arc4StructsTypeContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4StructsTypeContract.ir/Arc4StructsTypeContract.clear.400.destructured.ir
debug: Found 2 edge set/s for test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program
debug: Allocated 1 variable/s to x-stack: val#0
debug: shared x-stack for main_block@0 -> main_for_body@1: val#0
debug: shared x-stack for main_for_header_1@3 -> main_for_body@1: val#0
debug: test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program f-stack entry: []
debug: test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program f-stack on first store: ['val#2', 'loop_counter%0#0']
arc4_types/structs.py:39 debug: optimizing TEAL subroutine ops test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program() -> uint64:
arc4_types/structs.py:39 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_for_header_1@3 into main_for_body@1
debug: removing explicit jump to fall-through block main_for_body@1
arc4_types/structs.py:72 debug: optimizing TEAL subroutine ops test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program() -> uint64:
arc4_types/structs.py:72 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.structs.Arc4StructsTypeContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.string.Arc4StringTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, some_bytes_as_string#0
debug: selected some_bytes_as_string#0 from equivalence set
debug: Found equivalence set: tmp%1#0, some_bytes_as_bytes_again#0
debug: selected some_bytes_as_bytes_again#0 from equivalence set
debug: Found equivalence set: tmp%6#0, hello#0
debug: selected hello#0 from equivalence set
debug: Found equivalence set: tmp%7#0, space#0
debug: selected space#0 from equivalence set
debug: Found equivalence set: tmp%8#0, world#0
debug: selected world#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+utf8[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+utf8[])%1#0
debug: selected replace%1#0 from equivalence set
debug: Found equivalence set: tmp%11#0, thing#0
debug: selected thing#0 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+utf8[])%2#0, thing#1
debug: selected thing#1 from equivalence set
debug: Found equivalence set: replace%3#0, as_Encoded(len+utf8[])%3#0
debug: selected replace%3#0 from equivalence set
debug: Found equivalence set: replace%4#0, as_Encoded(len+utf8[])%4#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: replace%5#0, as_Encoded(len+utf8[])%5#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: replace%6#0, as_Encoded(len+utf8[])%6#0, value#2
debug: selected value#2 from equivalence set
debug: Found equivalence set: replace%7#0, as_Encoded(len+utf8[])%7#0, value#3
debug: selected value#3 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_string%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 space#0 2u total_length%0#0) to ((extract 2 0) space#0)
debug: Simplified (substring3 concat%0#0 2u total_length%1#0) to ((extract 2 0) concat%0#0)
debug: Simplified (/ len%0#0 1u) to len%0#0
debug: Simplified (substring3 world#0 2u total_length%2#0) to ((extract 2 0) world#0)
debug: Simplified (substring3 concat%1#0 2u total_length%3#0) to ((extract 2 0) concat%1#0)
debug: Simplified (/ len%1#0 1u) to len%1#0
debug: Simplified (substring3 thing#0 2u total_length%4#0) to ((extract 2 0) thing#0)
debug: Simplified (substring3 concat%2#0 2u total_length%5#0) to ((extract 2 0) concat%2#0)
debug: Simplified (/ len%2#0 1u) to len%2#0
debug: Simplified (substring3 tmp%15#0 2u total_length%6#0) to ((extract 2 0) tmp%15#0)
debug: Simplified (substring3 concat%3#0 2u total_length%7#0) to ((extract 2 0) concat%3#0)
debug: Simplified (/ len%3#0 1u) to len%3#0
debug: Simplified (substring3 tmp%16#0 2u total_length%8#0) to ((extract 2 0) tmp%16#0)
debug: Simplified (substring3 concat%4#0 2u total_length%9#0) to ((extract 2 0) concat%4#0)
debug: Simplified (/ len%4#0 1u) to len%4#0
debug: Simplified (substring3 tmp%17#0 2u total_length%10#0) to ((extract 2 0) tmp%17#0)
debug: Simplified (substring3 concat%5#0 2u total_length%11#0) to ((extract 2 0) concat%5#0)
debug: Simplified (/ len%5#0 1u) to len%5#0
debug: Simplified (substring3 tmp%18#0 2u total_length%12#0) to ((extract 2 0) tmp%18#0)
debug: Simplified (substring3 concat%6#0 2u total_length%13#0) to ((extract 2 0) concat%6#0)
debug: Simplified (/ len%6#0 1u) to len%6#0
debug: Simplified (substring3 tmp%19#0 2u total_length%14#0) to ((extract 2 0) tmp%19#0)
debug: Simplified (substring3 concat%7#0 2u total_length%15#0) to ((extract 2 0) concat%7#0)
debug: Simplified (/ len%7#0 1u) to len%7#0
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Simplified (replace3 concat%3#0 0u as_u16_bytes%3#0) to ((replace2 0) concat%3#0 as_u16_bytes%3#0)
debug: Simplified (replace3 concat%4#0 0u as_u16_bytes%4#0) to ((replace2 0) concat%4#0 as_u16_bytes%4#0)
debug: Simplified (replace3 concat%5#0 0u as_u16_bytes%5#0) to ((replace2 0) concat%5#0 as_u16_bytes%5#0)
debug: Simplified (replace3 concat%6#0 0u as_u16_bytes%6#0) to ((replace2 0) concat%6#0 as_u16_bytes%6#0)
debug: Simplified (replace3 concat%7#0 0u as_u16_bytes%7#0) to ((replace2 0) concat%7#0 as_u16_bytes%7#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: 0x48656c6c6f20576f726c6421
debug: replacing redundant decode-of-encode with: ""
debug: replacing redundant decode-of-encode with: "hello"
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: len%0#0, div_floor%0#0
debug: selected len%0#0 from equivalence set
debug: Found equivalence set: len%1#0, div_floor%1#0
debug: selected len%1#0 from equivalence set
debug: Found equivalence set: len%2#0, div_floor%2#0
debug: selected len%2#0 from equivalence set
debug: Found equivalence set: len%3#0, div_floor%3#0
debug: selected len%3#0 from equivalence set
debug: Found equivalence set: len%4#0, div_floor%4#0
debug: selected len%4#0 from equivalence set
debug: Found equivalence set: len%5#0, div_floor%5#0
debug: selected len%5#0 from equivalence set
debug: Found equivalence set: len%6#0, div_floor%6#0
debug: selected len%6#0 from equivalence set
debug: Found equivalence set: len%7#0, div_floor%7#0
debug: selected len%7#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable some_bytes_as_bytes_again#0
debug: Removing unused variable total_length%0#0
debug: Removing unused variable total_length%1#0
debug: Removing unused variable total_length%2#0
debug: Removing unused variable total_length%3#0
debug: Removing unused variable total_length%4#0
debug: Removing unused variable total_length%5#0
debug: Removing unused variable total_length%6#0
debug: Removing unused variable total_length%7#0
debug: Removing unused variable total_length%8#0
debug: Removing unused variable total_length%9#0
debug: Removing unused variable total_length%10#0
debug: Removing unused variable total_length%11#0
debug: Removing unused variable total_length%12#0
debug: Removing unused variable total_length%13#0
debug: Removing unused variable total_length%14#0
debug: Removing unused variable total_length%15#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%29#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x48656c6c6f20576f726c6421 0x48656c6c6f20576f726c6421) to 1u
debug: Simplified (== "" "") to 1u
debug: Simplified (== "hello" "hello") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable tmp%27#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc4_types.string.Arc4StringTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.string.Arc4StringTypesContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.string.Arc4StringTypesContract
debug: optimizing approval program of test_cases.arc4_types.string.Arc4StringTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, some_bytes_as_string#0
debug: selected some_bytes_as_string#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, hello#0
debug: selected hello#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+utf8[])%2#0, space#0
debug: selected space#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+utf8[])%3#0, world#0
debug: selected world#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#0, aggregate%as_Encoded(len+utf8[])%4#0, tmp%9#0
debug: selected aggregate%encoded_value%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%5#0, aggregate%as_Encoded(len+utf8[])%5#0, thing#0
debug: selected thing#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%6#0, aggregate%as_Encoded(len+utf8[])%6#0, tmp%12#0
debug: selected aggregate%encoded_value%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%7#0, aggregate%as_Encoded(len+utf8[])%7#0, tmp%14#0
debug: selected aggregate%encoded_value%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%8#0, aggregate%as_Encoded(len+utf8[])%8#0, tmp%15#0
debug: selected aggregate%encoded_value%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%9#0, aggregate%as_Encoded(len+utf8[])%9#0, tmp%16#0
debug: selected aggregate%encoded_value%9#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%10#0, aggregate%as_Encoded(len+utf8[])%10#0, tmp%17#0
debug: selected aggregate%encoded_value%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%11#0, aggregate%as_Encoded(len+utf8[])%11#0, tmp%18#0
debug: selected aggregate%encoded_value%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%12#0, aggregate%as_Encoded(len+utf8[])%12#0, tmp%19#0
debug: selected aggregate%encoded_value%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%13#0, aggregate%as_Encoded(len+utf8[])%13#0, tmp%20#0
debug: selected aggregate%encoded_value%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%14#0, aggregate%as_Encoded(len+utf8[])%14#0, ternary_result%0#0
debug: selected aggregate%encoded_value%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%15#0, aggregate%as_Encoded(len+utf8[])%15#0, ternary_result%0#1
debug: selected aggregate%encoded_value%15#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%16#0, aggregate%as_Encoded(len+utf8[])%16#0, tmp%30#0
debug: selected aggregate%encoded_value%16#0 from equivalence set
debug: Copy propagation made 17 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x48656c6c6f20576f726c6421) to 12u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x000c
debug: Simplified (concat 0x000c 0x48656c6c6f20576f726c6421) to 0x000c48656c6c6f20576f726c6421
debug: Simplified (!= 0x000c48656c6c6f20576f726c6421 0x48656c6c6f20576f726c6421) to 1u
debug: Simplified (len 0x000c48656c6c6f20576f726c6421) to 14u
debug: Simplified (>= 2u 14u) to 0u
debug: Simplified (select 2u 14u 0u) to 2u
debug: Simplified (substring3 0x000c48656c6c6f20576f726c6421 2u 14u) to 0x48656c6c6f20576f726c6421
debug: Simplified (== 0x48656c6c6f20576f726c6421 0x48656c6c6f20576f726c6421) to 1u
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (len " ") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0001
debug: Simplified (concat 0x0001 " ") to 0x000120
debug: Simplified (len "World!") to 6u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0006
debug: Simplified (concat 0x0006 "World!") to 0x0006576f726c6421
debug: Simplified (len "Hello World!") to 12u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x000c
debug: Simplified (concat 0x000c "Hello World!") to 0x000c48656c6c6f20576f726c6421
debug: Simplified ((extract 2 0) 0x000120) to 0x20
debug: Simplified (concat 0x000548656c6c6f 0x20) // on error: max array length exceeded to 0x000548656c6c6f20
debug: Simplified ((extract 2 0) 0x000548656c6c6f20) to 0x48656c6c6f20
debug: Simplified (len 0x48656c6c6f20) to 6u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0006
debug: Simplified ((replace2 0) 0x000548656c6c6f20 0x0006) to 0x000648656c6c6f20
debug: Simplified ((extract 2 0) 0x0006576f726c6421) to 0x576f726c6421
debug: Simplified (concat 0x000648656c6c6f20 0x576f726c6421) // on error: max array length exceeded to 0x000648656c6c6f20576f726c6421
debug: Simplified ((extract 2 0) 0x000648656c6c6f20576f726c6421) to 0x48656c6c6f20576f726c6421
debug: Simplified (len 0x48656c6c6f20576f726c6421) to 12u
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000c
debug: Simplified ((replace2 0) 0x000648656c6c6f20576f726c6421 0x000c) to 0x000c48656c6c6f20576f726c6421
debug: Simplified (== 0x000c48656c6c6f20576f726c6421 0x000c48656c6c6f20576f726c6421) to 1u
debug: Simplified (len "hi") to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0002
debug: Simplified (concat 0x0002 "hi") to 0x00026869
debug: Simplified ((extract 2 0) 0x00026869) to 0x6869
debug: Simplified (concat 0x00026869 0x6869) // on error: max array length exceeded to 0x000268696869
debug: Simplified ((extract 2 0) 0x000268696869) to 0x68696869
debug: Simplified (len 0x68696869) to 4u
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0004
debug: Simplified ((replace2 0) 0x000268696869 0x0004) to 0x000468696869
debug: Simplified (len "hihi") to 4u
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0004
debug: Simplified (concat 0x0004 "hihi") to 0x000468696869
debug: Simplified (== 0x000468696869 0x000468696869) to 1u
debug: Simplified (len "a") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x0001
debug: Simplified (concat 0x0001 "a") to 0x000161
debug: Simplified (len "b") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0001
debug: Simplified (concat 0x0001 "b") to 0x000162
debug: Simplified ((extract 2 0) 0x000162) to 0x62
debug: Simplified (concat 0x000161 0x62) // on error: max array length exceeded to 0x00016162
debug: Simplified ((extract 2 0) 0x00016162) to 0x6162
debug: Simplified (len 0x6162) to 2u
debug: Simplified ((extract 6 2) as_bytes%3#0) to 0x0002
debug: Simplified ((replace2 0) 0x00016162 0x0002) to 0x00026162
debug: Simplified (len "cd") to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0002
debug: Simplified (concat 0x0002 "cd") to 0x00026364
debug: Simplified ((extract 2 0) 0x00026364) to 0x6364
debug: Simplified (concat 0x00026162 0x6364) // on error: max array length exceeded to 0x000261626364
debug: Simplified ((extract 2 0) 0x000261626364) to 0x61626364
debug: Simplified (len 0x61626364) to 4u
debug: Simplified ((extract 6 2) as_bytes%4#0) to 0x0004
debug: Simplified ((replace2 0) 0x000261626364 0x0004) to 0x000461626364
debug: Simplified (len "e") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%10#0) to 0x0001
debug: Simplified (concat 0x0001 "e") to 0x000165
debug: Simplified ((extract 2 0) 0x000165) to 0x65
debug: Simplified (concat 0x000461626364 0x65) // on error: max array length exceeded to 0x00046162636465
debug: Simplified ((extract 2 0) 0x00046162636465) to 0x6162636465
debug: Simplified (len 0x6162636465) to 5u
debug: Simplified ((extract 6 2) as_bytes%5#0) to 0x0005
debug: Simplified ((replace2 0) 0x00046162636465 0x0005) to 0x00056162636465
debug: Simplified (len "f") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%11#0) to 0x0001
debug: Simplified (concat 0x0001 "f") to 0x000166
debug: Simplified ((extract 2 0) 0x000166) to 0x66
debug: Simplified (concat 0x00056162636465 0x66) // on error: max array length exceeded to 0x0005616263646566
debug: Simplified ((extract 2 0) 0x0005616263646566) to 0x616263646566
debug: Simplified (len 0x616263646566) to 6u
debug: Simplified ((extract 6 2) as_bytes%6#0) to 0x0006
debug: Simplified ((replace2 0) 0x0005616263646566 0x0006) to 0x0006616263646566
debug: Simplified (len "g") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%12#0) to 0x0001
debug: Simplified (concat 0x0001 "g") to 0x000167
debug: Simplified ((extract 2 0) 0x000167) to 0x67
debug: Simplified (concat 0x0006616263646566 0x67) // on error: max array length exceeded to 0x000661626364656667
debug: Simplified ((extract 2 0) 0x000661626364656667) to 0x61626364656667
debug: Simplified (len 0x61626364656667) to 7u
debug: Simplified ((extract 6 2) as_bytes%7#0) to 0x0007
debug: Simplified ((replace2 0) 0x000661626364656667 0x0007) to 0x000761626364656667
debug: Simplified (len "abcdefg") to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%13#0) to 0x0007
debug: Simplified (concat 0x0007 "abcdefg") to 0x000761626364656667
debug: Simplified (== 0x000761626364656667 0x000761626364656667) to 1u
debug: Simplified (len "aye") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%14#0) to 0x0003
debug: Simplified (concat 0x0003 "aye") to 0x0003617965
debug: Simplified (len "bee") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%15#0) to 0x0003
debug: Simplified (concat 0x0003 "bee") to 0x0003626565
debug: Simplified (len "bee") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%16#0) to 0x0003
debug: Simplified (concat 0x0003 "bee") to 0x0003626565
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 12u) with copy of existing registers (Register(source_location=arc4_types/string.py:8:31-74, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let as_bytes%0#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/string.py:24:16-37, ir_type=bytes[8], name='aggregate%as_bytes%3', version=0),)
debug: Replacing redundant declaration let as_bytes%1#0: bytes[8] = (itob 12u) with copy of existing registers (Register(source_location=arc4_types/string.py:8:31-74, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%6#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/string.py:29:8-22, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%7#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/string.py:23:16-32, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%8#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/string.py:23:16-32, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let as_bytes%3#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/string.py:28:16-33, ir_type=bytes[8], name='aggregate%as_bytes%5', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%9#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/string.py:28:16-33, ir_type=bytes[8], name='aggregate%as_bytes%5', version=0),)
debug: Replacing redundant declaration let as_bytes%4#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/string.py:29:8-22, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%10#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/string.py:23:16-32, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let as_bytes%5#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/string.py:22:16-36, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%11#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/string.py:23:16-32, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let as_bytes%6#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/string.py:24:16-37, ir_type=bytes[8], name='aggregate%as_bytes%3', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%12#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/string.py:23:16-32, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%13#0: bytes[8] = (itob 7u) with copy of existing registers (Register(source_location=arc4_types/string.py:35:8-33, ir_type=bytes[8], name='as_bytes%7', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%4#0, as_bytes%1#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%3#0, as_bytes%0#0, as_bytes%6#0
debug: selected aggregate%as_bytes%3#0 from equivalence set
debug: Found equivalence set: as_bytes%2#0, aggregate%as_bytes%6#0, as_bytes%4#0
debug: selected as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%2#0, aggregate%as_bytes%7#0, aggregate%as_bytes%8#0, aggregate%as_bytes%10#0, aggregate%as_bytes%11#0, aggregate%as_bytes%12#0
debug: selected aggregate%as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%5#0, as_bytes%3#0, aggregate%as_bytes%9#0
debug: selected aggregate%as_bytes%5#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%1#0, as_bytes%5#0
debug: selected aggregate%as_bytes%1#0 from equivalence set
debug: Found equivalence set: as_bytes%7#0, aggregate%as_bytes%13#0
debug: selected as_bytes%7#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable some_bytes_as_string#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable length%0#0
debug: Removing unused variable is_out_of_bounds%0#0
debug: Removing unused variable bounded_index%0#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable hello#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable space#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Removing unused variable world#0
debug: Removing unused variable aggregate%length%4#0
debug: Removing unused variable aggregate%length_uint16%4#0
debug: Removing unused variable aggregate%encoded_value%4#0
debug: Removing unused variable extract_to_end%0#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_to_end%1#0
debug: Removing unused variable len%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable replace%0#0
debug: Removing unused variable extract_to_end%2#0
debug: Removing unused variable concat%1#0
debug: Removing unused variable extract_to_end%3#0
debug: Removing unused variable len%1#0
debug: Removing unused variable as_u16_bytes%1#0
debug: Removing unused variable replace%1#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable aggregate%length%5#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%length_uint16%5#0
debug: Removing unused variable thing#0
debug: Removing unused variable extract_to_end%4#0
debug: Removing unused variable concat%2#0
debug: Removing unused variable extract_to_end%5#0
debug: Removing unused variable len%2#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable as_u16_bytes%2#0
debug: Removing unused variable thing#1
debug: Removing unused variable aggregate%length%6#0
debug: Removing unused variable aggregate%length_uint16%6#0
debug: Removing unused variable aggregate%encoded_value%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable aggregate%length%7#0
debug: Removing unused variable aggregate%length_uint16%7#0
debug: Removing unused variable aggregate%encoded_value%7#0
debug: Removing unused variable aggregate%length%8#0
debug: Removing unused variable aggregate%length_uint16%8#0
debug: Removing unused variable aggregate%encoded_value%8#0
debug: Removing unused variable extract_to_end%6#0
debug: Removing unused variable concat%3#0
debug: Removing unused variable extract_to_end%7#0
debug: Removing unused variable len%3#0
debug: Removing unused variable as_u16_bytes%3#0
debug: Removing unused variable replace%3#0
debug: Removing unused variable aggregate%length%9#0
debug: Removing unused variable aggregate%length_uint16%9#0
debug: Removing unused variable aggregate%encoded_value%9#0
debug: Removing unused variable extract_to_end%8#0
debug: Removing unused variable concat%4#0
debug: Removing unused variable extract_to_end%9#0
debug: Removing unused variable len%4#0
debug: Removing unused variable as_u16_bytes%4#0
debug: Removing unused variable value#0
debug: Removing unused variable aggregate%length%10#0
debug: Removing unused variable aggregate%length_uint16%10#0
debug: Removing unused variable aggregate%encoded_value%10#0
debug: Removing unused variable extract_to_end%10#0
debug: Removing unused variable concat%5#0
debug: Removing unused variable extract_to_end%11#0
debug: Removing unused variable len%5#0
debug: Removing unused variable as_u16_bytes%5#0
debug: Removing unused variable value#1
debug: Removing unused variable aggregate%length%11#0
debug: Removing unused variable aggregate%length_uint16%11#0
debug: Removing unused variable aggregate%encoded_value%11#0
debug: Removing unused variable extract_to_end%12#0
debug: Removing unused variable concat%6#0
debug: Removing unused variable extract_to_end%13#0
debug: Removing unused variable len%6#0
debug: Removing unused variable as_u16_bytes%6#0
debug: Removing unused variable value#2
debug: Removing unused variable aggregate%length%12#0
debug: Removing unused variable aggregate%length_uint16%12#0
debug: Removing unused variable aggregate%encoded_value%12#0
debug: Removing unused variable extract_to_end%14#0
debug: Removing unused variable concat%7#0
debug: Removing unused variable extract_to_end%15#0
debug: Removing unused variable len%7#0
debug: Removing unused variable as_bytes%7#0
debug: Removing unused variable as_u16_bytes%7#0
debug: Removing unused variable value#3
debug: Removing unused variable aggregate%length%13#0
debug: Removing unused variable aggregate%length_uint16%13#0
debug: Removing unused variable aggregate%encoded_value%13#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable aggregate%length%14#0
debug: Removing unused variable aggregate%as_bytes%14#0
debug: Removing unused variable aggregate%length_uint16%14#0
debug: Removing unused variable aggregate%length%15#0
debug: Removing unused variable aggregate%as_bytes%15#0
debug: Removing unused variable aggregate%length_uint16%15#0
debug: Removing unused variable aggregate%length%16#0
debug: Removing unused variable aggregate%as_bytes%16#0
debug: Removing unused variable aggregate%length_uint16%16#0
debug: Removing unused variable aggregate%encoded_value%16#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.string.Arc4StringTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.string.Arc4StringTypesContract
arc4_types/string.py:7 debug: auto reserving slots in test_cases.arc4_types.string.Arc4StringTypesContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.string.Arc4StringTypesContract
arc4_types/string.py:44 debug: auto reserving slots in test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.string.Arc4StringTypesContract.approval_program using strategy 'root_operand'
debug: Coalescing ternary_result%0#2 with [ternary_result%0#3]
debug: Coalescing resulted in 3 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4StringTypesContract.ir/Arc4StringTypesContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4StringTypesContract.ir/Arc4StringTypesContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_ternary_true@1.ops[1]: 'l-store-copy aggregate%encoded_value%14#0 0'
debug: Replaced main_ternary_true@1.ops[3]: 'v-load aggregate%encoded_value%14#0' with 'l-load aggregate%encoded_value%14#0'
debug: Inserted main_ternary_false@2.ops[1]: 'l-store-copy aggregate%encoded_value%15#0 0'
debug: Replaced main_ternary_false@2.ops[3]: 'v-load aggregate%encoded_value%15#0' with 'l-load aggregate%encoded_value%15#0'
debug: Inserted main_ternary_merge@3.ops[3]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_ternary_merge@3.ops[5]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Found 2 edge set/s for test_cases.arc4_types.string.Arc4StringTypesContract.approval_program
debug: Allocated 1 variable/s to x-stack: ternary_result%0#2
debug: shared x-stack for main_ternary_true@1 -> main_ternary_merge@3: ternary_result%0#2
debug: shared x-stack for main_ternary_false@2 -> main_ternary_merge@3: ternary_result%0#2
arc4_types/string.py:7 debug: optimizing TEAL subroutine ops test_cases.arc4_types.string.Arc4StringTypesContract.approval_program() -> uint64:
arc4_types/string.py:7 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.string.Arc4StringTypesContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_ternary_true@1 into main
debug: removing explicit jump to fall-through block main_ternary_merge@3
arc4_types/string.py:44 debug: optimizing TEAL subroutine ops test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program() -> uint64:
arc4_types/string.py:44 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.reference_types.Arc4RefTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint8[32])%0#0, sender_address#0
debug: selected sender_address#0 from equivalence set
debug: Found equivalence set: awst_tmp%0#0, reinterpret_Encoded(uint8[32])%2#0, checked_address#0
debug: selected checked_address#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint8[32])%3#0, unchecked_address#0
debug: selected unchecked_address#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len checked_address#0) to 32u
debug: Simplified (== 32u 32u) to 1u
debug: Simplified (== tmp%5#0 addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.reference_types.Arc4RefTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.reference_types.Arc4RefTypesContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.reference_types.Arc4RefTypesContract
debug: optimizing approval program of test_cases.arc4_types.reference_types.Arc4RefTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.arc4_types.reference_types.Arc4RefTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.reference_types.Arc4RefTypesContract
arc4_types/reference_types.py:5 debug: auto reserving slots in test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.reference_types.Arc4RefTypesContract
arc4_types/reference_types.py:21 debug: auto reserving slots in test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program using strategy 'root_operand'
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4RefTypesContract.ir/Arc4RefTypesContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4RefTypesContract.ir/Arc4RefTypesContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_block@0.ops[18]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_block@0.ops[20]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_block@0.ops[3]: 'l-store-copy reinterpret_Encoded(uint8[32])%1#0 0'
debug: Replaced main_block@0.ops[6]: 'v-load reinterpret_Encoded(uint8[32])%1#0' with 'l-load reinterpret_Encoded(uint8[32])%1#0'
debug: Inserted main_block@0.ops[1]: 'l-store-copy sender_address#0 0'
debug: Replaced main_block@0.ops[6]: 'v-load sender_address#0' with 'l-load sender_address#0'
debug: Inserted main_block@0.ops[14]: 'l-store-copy checked_address#0 0'
debug: Replaced main_block@0.ops[19]: 'v-load checked_address#0' with 'l-load checked_address#0'
debug: Inserted main_block@0.ops[7]: 'l-store-copy sender_address#0 1'
debug: Replaced main_block@0.ops[19]: 'v-load sender_address#0' with 'l-load sender_address#0'
debug: Inserted main_and_contd@1.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_and_contd@1.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Found 2 edge set/s for test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program
debug: Allocated 1 variable/s to x-stack: and_result%0#0
debug: shared x-stack for main_bool_true@2 -> main_bool_merge@4: and_result%0#0
debug: shared x-stack for main_bool_false@3 -> main_bool_merge@4: and_result%0#0
debug: test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program f-stack entry: []
debug: test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program f-stack on first store: ['checked_address#0', 'unchecked_address#0']
arc4_types/reference_types.py:5 debug: optimizing TEAL subroutine ops test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program() -> uint64:
arc4_types/reference_types.py:5 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_and_contd@1 into main
debug: inlining single reference block main_bool_true@2 into main
debug: removing explicit jump to fall-through block main_bool_merge@4
arc4_types/reference_types.py:21 debug: optimizing TEAL subroutine ops test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program() -> uint64:
arc4_types/reference_types.py:21 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.reference_types.Arc4RefTypesContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.numeric.Arc4NumericTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, int8_encoded#0
debug: selected int8_encoded#0 from equivalence set
debug: Found equivalence set: tmp%1#0, int8_decoded#0
debug: selected int8_decoded#0 from equivalence set
debug: Found equivalence set: select%0#0, reinterpret_biguint%0#0
debug: selected select%0#0 from equivalence set
debug: Found equivalence set: select%1#0, reinterpret_biguint%2#0
debug: selected select%1#0 from equivalence set
debug: Found equivalence set: tmp%46#0, arc4_biguint_dynamic#0
debug: selected arc4_biguint_dynamic#0 from equivalence set
debug: Found equivalence set: tmp%54#0, tup#0
debug: selected tup#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable uint8#0
debug: Removing unused variable test_bytes#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable decimals#0
debug: Removing unused variable decimals_from_truncated_str#0
debug: Removing unused variable thousand#0
debug: Removing unused variable one_decimal#0
debug: Removing unused variable zero_decimal#0
debug: Removing unused variable small_decimal#0
debug: Removing unused variable smaller_decimal#0
debug: Removing unused variable smallest_decimal#0
debug: Removing unused variable sixty_four_decimal#0
debug: Removing unused variable really_big_int#0
debug: Removing unused variable reinterpret_biguint%6#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable reinterpret_Encoded(uint512)%0#0
debug: Removing unused variable really_big_decimal#0
debug: Removing unused variable biguint#0
debug: Removing unused variable arc4_biguint_const#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x7fffffffffffffff00) to 9u
debug: Simplified (>= 1u 9u) to 0u
debug: Simplified (select 1u 9u 0u) to 1u
debug: Simplified (substring3 0x7fffffffffffffff00 0u 1u) to 0x7f
debug: Simplified (len 0x7fffffffffffffff00) to 9u
debug: Simplified (>= 3u 9u) to 0u
debug: Simplified (select 3u 9u 0u) to 3u
debug: Simplified (substring3 0x7fffffffffffffff00 0u 3u) to 0x7fffff
debug: Simplified (len 0x7fffffffffffffff00) to 9u
debug: Simplified (>= 2u 9u) to 0u
debug: Simplified (select 2u 9u 0u) to 2u
debug: Simplified (substring3 0x7fffffffffffffff00 0u 2u) to 0x7fff
debug: Simplified (len 0x7fffffffffffffff00) to 9u
debug: Simplified (>= 4u 9u) to 0u
debug: Simplified (select 4u 9u 0u) to 4u
debug: Simplified (substring3 0x7fffffffffffffff00 0u 4u) to 0x7fffffff
debug: Simplified (len 0x7fffffffffffffff00) to 9u
debug: Simplified (>= 8u 9u) to 0u
debug: Simplified (select 8u 9u 0u) to 8u
debug: Simplified (substring3 0x7fffffffffffffff00 0u 8u) to 0x7fffffffffffffff
debug: Simplified (select 0x02 0x01 tmp%14#0) to (select 0x02 0x01 tmp%13#0)
debug: Simplified (select 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 tmp%17#0) to (select 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 tmp%16#0)
debug: Simplified (== 0x0000015333430684 tmp%21#0) to 1u
debug: Simplified (== 0x000001519abc2400 tmp%23#0) to 1u
debug: Simplified (len 0x000009184e72a000) to 8u
debug: Simplified (== 8u 8u) to 1u
debug: Simplified (== 0x000009184e72a000 tmp%27#0) to 1u
debug: Simplified (== 0x00000002540be400 tmp%29#0) to 1u
debug: Simplified (== 0x0000000000000000 tmp%31#0) to 1u
debug: Simplified (== 0x0000000000000064 tmp%33#0) to 1u
debug: Simplified (== 0x000000000000000a tmp%35#0) to 1u
debug: Simplified (== 0x0000000000000001 tmp%37#0) to 1u
debug: Simplified (== 0xffffffffffffffff tmp%39#0) to 1u
debug: Simplified (b== 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) to 1u
debug: Simplified (select 0x0000000000000000 0xffffffffffffffff tmp%43#0) to (select 0x0000000000000000 0xffffffffffffffff tmp%42#0)
debug: Simplified (b+ 1b 1b) to 2b
debug: Simplified (len 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095b) to 64u
debug: Simplified (== 64u 64u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length%0#0
debug: Removing unused variable is_out_of_bounds%0#0
debug: Removing unused variable bounded_index%0#0
debug: Removing unused variable reinterpret_Encoded(uint8)%0#0
debug: Removing unused variable length%1#0
debug: Removing unused variable is_out_of_bounds%1#0
debug: Removing unused variable bounded_index%1#0
debug: Removing unused variable reinterpret_Encoded(uint24)%0#0
debug: Removing unused variable length%2#0
debug: Removing unused variable is_out_of_bounds%2#0
debug: Removing unused variable bounded_index%2#0
debug: Removing unused variable reinterpret_Encoded(uint16)%0#0
debug: Removing unused variable length%3#0
debug: Removing unused variable is_out_of_bounds%3#0
debug: Removing unused variable bounded_index%3#0
debug: Removing unused variable reinterpret_Encoded(uint32)%0#0
debug: Removing unused variable length%4#0
debug: Removing unused variable is_out_of_bounds%4#0
debug: Removing unused variable bounded_index%4#0
debug: Removing unused variable reinterpret_Encoded(uint64)%0#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%28#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%33#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%40#0
debug: Removing unused variable tmp%41#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%45#0
debug: Removing unused variable tmp%51#0
debug: Removing unused variable tmp%52#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.numeric.Arc4NumericTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%0#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%2#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%4#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%6#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (b== 0x0000000000000000 0b) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0b) to 1u
debug: Simplified (b== 0x00 0x00) to 1u
debug: Simplified (b== 0x0000000000000000 0x0000000000000000) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.numeric.Arc4NumericTypesContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.numeric.Arc4NumericTypesContract
debug: optimizing approval program of test_cases.arc4_types.numeric.Arc4NumericTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%uint8%0#0, aggregate%as_Encoded(uint8)%0#0, int8_encoded#0
debug: selected int8_encoded#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%0#0, aggregate%as_Encoded(uint512)%0#0, reinterpret_biguint%4#0
debug: selected aggregate%arc4_encoded%0#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%1#0, aggregate%as_Encoded(uint128)%0#0, arc4_biguint_dynamic#0
debug: selected arc4_biguint_dynamic#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%0#0, tmp%53#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64)%1#0, tup#0
debug: selected tup#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, tuple_item%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%57#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (bitlen aggregate%val_as_bytes%0#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified (extract3 aggregate%val_as_bytes%0#0 7u 1u) to 0xff
debug: Simplified (btoi 0xff) to 255u
debug: Simplified (== 255u 255u) to 1u
debug: Simplified (btoi 0x7f) to 127u
debug: Simplified (== 127u 127u) to 1u
debug: Simplified (btoi 0x7fffff) to 8388607u
debug: Simplified (== 8388607u 8388607u) to 1u
debug: Simplified (btoi 0x7fff) to 32767u
debug: Simplified (== 32767u 32767u) to 1u
debug: Simplified (btoi 0x7fffffff) to 2147483647u
debug: Simplified (== 2147483647u 2147483647u) to 1u
debug: Simplified (btoi 0x7fffffffffffffff) to 9223372036854775807u
debug: Simplified (== 9223372036854775807u 9223372036854775807u) to 1u
debug: Simplified (len 2b) to 1u
debug: Simplified (<= 1u 16u) to 1u
debug: Simplified (b| 2b aggregate%bzero%1#0) to 0x00000000000000000000000000000002
debug: Simplified (b== 1b 0x00000000000000000000000000000001) to 1u
debug: Simplified (len 0x00000000000000000000000000000002) to 16u
debug: Simplified (== 16u 16u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%2#0) to aggregate%val_as_bytes%2#0
debug: Simplified (extract3 aggregate%val_as_bytes%2#0 0u 8u) to 0x0000000000000003
debug: Simplified (btoi 0x0000000000000003) to 3u
debug: Simplified (== 3u ClearState) to 1u
debug: Simplified (b== 0x00000001 1b) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%2#0, tup#0
debug: selected tup#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%bitlen%0#0
debug: Removing unused variable aggregate%no_overflow%0#0
debug: Removing unused variable int8_encoded#0
debug: Removing unused variable int8_decoded#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable aggregate%value_len%0#0
debug: Removing unused variable aggregate%len_ok%0#0
debug: Removing unused variable aggregate%bzero%1#0
debug: Removing unused variable arc4_biguint_dynamic#0
debug: Removing unused variable tmp%48#0
debug: Removing unused variable tmp%49#0
debug: Removing unused variable tmp%50#0
debug: Removing unused variable tup#0
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable tmp%55#0
debug: Removing unused variable tmp%56#0
debug: Removing unused variable tmp%58#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.numeric.Arc4NumericTypesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.numeric.Arc4NumericTypesContract
arc4_types/numeric.py:30 debug: auto reserving slots in test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.numeric.Arc4NumericTypesContract
arc4_types/numeric.py:114 debug: auto reserving slots in test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4NumericTypesContract.ir/Arc4NumericTypesContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4NumericTypesContract.ir/Arc4NumericTypesContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[6]: 'l-store-copy select%0#0 0'
debug: Replaced main_block@0.ops[8]: 'v-load select%0#0' with 'l-load select%0#0'
debug: Inserted main_block@0.ops[11]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_block@0.ops[13]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_block@0.ops[21]: 'l-store-copy select%1#0 0'
debug: Replaced main_block@0.ops[23]: 'v-load select%1#0' with 'l-load select%1#0'
debug: Inserted main_block@0.ops[26]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_block@0.ops[28]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_block@0.ops[31]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_block@0.ops[33]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_block@0.ops[42]: 'l-store-copy aggregate%arc4_encoded%0#0 0'
debug: Replaced main_block@0.ops[44]: 'v-load aggregate%arc4_encoded%0#0' with 'l-load aggregate%arc4_encoded%0#0'
debug: Inserted main_block@0.ops[47]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_block@0.ops[49]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_block@0.ops[57]: 'l-store-copy select%2#0 0'
debug: Replaced main_block@0.ops[59]: 'v-load select%2#0' with 'l-load select%2#0'
debug: Inserted main_block@0.ops[62]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_block@0.ops[64]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_block@0.ops[38]: 'l-store-copy aggregate%bzero%0#0 0'
debug: Replaced main_block@0.ops[41]: 'v-load aggregate%bzero%0#0' with 'l-load aggregate%bzero%0#0'
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_block@0.ops[5]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_block@0.ops[17]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_block@0.ops[21]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_block@0.ops[55]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_block@0.ops[59]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_block@0.ops[37]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_block@0.ops[43]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
arc4_types/numeric.py:30 debug: optimizing TEAL subroutine ops test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program() -> uint64:
arc4_types/numeric.py:30 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
arc4_types/numeric.py:114 debug: optimizing TEAL subroutine ops test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
arc4_types/numeric.py:114 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.mutation.Arc4MutationContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.dynamic_array_pop_fixed_size for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.array_concat for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.index_assign for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool for inlining
debug: marking single-use function test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string for inlining
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutation.py:35:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:36:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:37:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:38:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:39:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:40:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.index_assign in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:41:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
arc4_types/mutation.py:42:9 debug: inlining call to test_cases.arc4_types.mutation.Arc4MutationContract.array_concat in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0, dynamic_uint8_array#1
debug: selected dynamic_uint8_array#1 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint8[])%1#0, dynamic_uint8_array#2
debug: selected dynamic_uint8_array#2 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+uint8[])%2#0, dynamic_uint8_array#3
debug: selected dynamic_uint8_array#3 from equivalence set
debug: Found equivalence set: tmp%6#0, dynamic_uint8_array#4
debug: selected dynamic_uint8_array#4 from equivalence set
debug: Found equivalence set: tmp%5#0, popped#0, reinterpret_biguint%0#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: encoded_array%0#1, dynamic_bool_array#0
debug: selected dynamic_bool_array#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, dynamic_bool_array#1
debug: selected dynamic_bool_array#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%1#0, dynamic_bool_array#2
debug: selected dynamic_bool_array#2 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%2#0, dynamic_bool_array#3
debug: selected dynamic_bool_array#3 from equivalence set
debug: Found equivalence set: tmp%35#0, dynamic_bool_array#4
debug: selected dynamic_bool_array#4 from equivalence set
debug: Found equivalence set: tmp%40#0, dynamic_bool_array#5
debug: selected dynamic_bool_array#5 from equivalence set
debug: Found equivalence set: tmp%0#2, hello#0
debug: selected hello#0 from equivalence set
debug: Found equivalence set: tmp%1#2, world#0
debug: selected world#0 from equivalence set
debug: Found equivalence set: tmp%2#2, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: tmp%3#2, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: encoded_array%0#2, dynamic_string_array#0
debug: selected dynamic_string_array#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#0, dynamic_string_array#1
debug: selected dynamic_string_array#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%1#0, dynamic_string_array#2
debug: selected dynamic_string_array#2 from equivalence set
debug: Found equivalence set: encoded_array%2#2, dynamic_string_array#3
debug: selected dynamic_string_array#3 from equivalence set
debug: Found equivalence set: updated_array%0#0, dynamic_string_array#4
debug: selected dynamic_string_array#4 from equivalence set
debug: Found equivalence set: updated_array%1#0, dynamic_string_array#5
debug: selected dynamic_string_array#5 from equivalence set
debug: Found equivalence set: tmp%10#1, dynamic_string_array#6
debug: selected dynamic_string_array#6 from equivalence set
debug: Found equivalence set: tmp%13#1, dynamic_string_array#7
debug: selected dynamic_string_array#7 from equivalence set
debug: Found equivalence set: encoded_array%0#3, array_of_array#0
debug: selected array_of_array#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint8[])[])%0#0, array_of_array#1
debug: selected array_of_array#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint8[])[])%1#0, array_of_array#2
debug: selected array_of_array#2 from equivalence set
debug: Found equivalence set: replace%0#1, as_Encoded(len+uint8[])%0#1
debug: selected replace%0#1 from equivalence set
debug: Found equivalence set: updated_array%0#1, array_of_array#3
debug: selected array_of_array#3 from equivalence set
debug: Found equivalence set: updated_array%1#1, array_of_array#4
debug: selected array_of_array#4 from equivalence set
debug: Found equivalence set: encoded_array%2#4, array_of_array#5
debug: selected array_of_array#5 from equivalence set
debug: Found equivalence set: updated_array%0#2, array_of_array#6
debug: selected array_of_array#6 from equivalence set
debug: Found equivalence set: updated_array%1#2, array_of_array#7
debug: selected array_of_array#7 from equivalence set
debug: Found equivalence set: encoded_array%0#5, dynamic_uint8_array#5
debug: selected dynamic_uint8_array#5 from equivalence set
debug: Found equivalence set: updated_array%0#3, dynamic_uint8_array#6
debug: selected dynamic_uint8_array#6 from equivalence set
debug: Found equivalence set: encoded_array%1#5, static_uint8_array#0
debug: selected static_uint8_array#0 from equivalence set
debug: Found equivalence set: updated_array%1#3, static_uint8_array#1
debug: selected static_uint8_array#1 from equivalence set
debug: Found equivalence set: encoded_array%2#5, dynamic_bool_array#6
debug: selected dynamic_bool_array#6 from equivalence set
debug: Found equivalence set: updated_array%2#0, dynamic_bool_array#7
debug: selected dynamic_bool_array#7 from equivalence set
debug: Found equivalence set: encoded_array%3#4, static_bool_array#0
debug: selected static_bool_array#0 from equivalence set
debug: Found equivalence set: updated_array%3#0, static_bool_array#1
debug: selected static_bool_array#1 from equivalence set
debug: Found equivalence set: tmp%3#5, test_struct#0
debug: selected test_struct#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, test_struct#1
debug: selected test_struct#1 from equivalence set
debug: Found equivalence set: updated_tuple%1#0, test_struct#2
debug: selected test_struct#2 from equivalence set
debug: Found equivalence set: updated_tuple%2#0, test_struct#3
debug: selected test_struct#3 from equivalence set
debug: Found equivalence set: updated_tuple%3#0, test_struct#4
debug: selected test_struct#4 from equivalence set
debug: Found equivalence set: encoded_array%0#6, uint8_array#0
debug: selected uint8_array#0 from equivalence set
debug: Found equivalence set: replace%0#2, as_Encoded(len+uint8[])%0#2, array_concat_tuple#0
debug: selected array_concat_tuple#0 from equivalence set
debug: Found equivalence set: replace%1#1, as_Encoded(len+uint8[])%1#1, array_concat_tuple#1
debug: selected array_concat_tuple#1 from equivalence set
debug: Found equivalence set: encoded_array%3#5, hello_world#0
debug: selected hello_world#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#1, hello_world_concat#0
debug: selected hello_world_concat#0 from equivalence set
debug: Copy propagation made 52 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 dynamic_uint8_array#1 2u total_length%0#0) to ((extract 2 0) dynamic_uint8_array#1)
debug: Simplified (substring3 concat%1#0 2u total_length%1#0) to ((extract 2 0) concat%1#0)
debug: Simplified (/ len%0#0 1u) to len%0#0
debug: Simplified (substring3 dynamic_bool_array#1 2u total_length%0#1) to ((extract 2 0) dynamic_bool_array#1)
debug: Simplified (concat 0x foo#0) to foo#0
debug: Simplified (substring3 dynamic_string_array#1 2u total_length%0#2) to ((extract 2 0) dynamic_string_array#1)
debug: Simplified (concat 0x encoded_array%1#3) to encoded_array%1#3
debug: Simplified (concat 0x encoded_array%2#3) to encoded_array%2#3
debug: Simplified (substring3 encoded_array%5#0 2u total_length%0#3) to ((extract 2 0) encoded_array%5#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Simplified (replace3 concat%2#1 0u as_u16_bytes%0#1) to ((replace2 0) concat%2#1 as_u16_bytes%0#1)
debug: Simplified (replace3 concat%0#3 0u as_u16_bytes%0#2) to ((replace2 0) concat%0#3 as_u16_bytes%0#2)
debug: Simplified (replace3 concat%1#3 0u as_u16_bytes%1#1) to ((replace2 0) concat%1#3 as_u16_bytes%1#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@12
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@12 with block@0 in block@13
debug: Merged linear block@12 into block@0
debug: Replaced predecessor block@13 with block@0 in block@14
debug: Merged linear block@13 into block@0
debug: Replaced predecessor block@14 with block@0 in block@15
debug: Merged linear block@14 into block@0
debug: Replaced predecessor block@15 with block@0 in block@16
debug: Merged linear block@15 into block@0
debug: Merged linear block@16 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#1: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%4#1: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%7#1: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%8#1: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%9#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%10#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%13#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%14#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%15#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%16#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%17#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%18#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%19#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%20#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%22#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%24#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%25#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%26#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%27#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%28#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%29#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%30#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%31#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%32#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%37#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%42#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%44#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%45#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%46#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%47#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%48#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%49#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%50#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let dynamic_string_array#3: Encoded(len+(len+utf8[])[]) = bytes_encode<(len+(len+utf8[])[])>(hello#0, world#0, foo#0, bar#0, hello#0, world#0, foo#0, bar#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:231:39-99, ir_type=Encoded(len+(len+utf8[])[]), name='encoded_array%1', version=2),)
debug: Replacing redundant declaration let dynamic_uint8_array#5: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(0x01, 0x02) with copy of existing registers (Register(source_location=arc4_types/mutation.py:145:8-27, ir_type=Encoded(len+uint8[]), name='dynamic_uint8_array', version=0),)
debug: Replacing redundant declaration let tmp%2#5: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%3#4: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%4#4: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%6#3: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%7#3: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%8#3: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%0#6: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%4#5: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%5#5: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%6#4: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Happy") with copy of existing registers (Register(source_location=arc4_types/mutation.py:121:20-35, ir_type=Encoded(len+utf8[]), name='tmp%1', version=6),)
debug: Replacing redundant declaration let tmp%7#4: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Days") with copy of existing registers (Register(source_location=arc4_types/mutation.py:122:20-34, ir_type=Encoded(len+utf8[]), name='tmp%2', version=6),)
debug: Replacing redundant declaration let tmp%12#2: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%13#2: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Hmmmm") with copy of existing registers (Register(source_location=arc4_types/mutation.py:133:30-45, ir_type=Encoded(len+utf8[]), name='tmp%10', version=2),)
debug: Replacing redundant declaration let tmp%14#2: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Oh well") with copy of existing registers (Register(source_location=arc4_types/mutation.py:134:30-47, ir_type=Encoded(len+utf8[]), name='tmp%11', version=2),)
debug: Replacing redundant declaration let uint8_array#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(0x01, 0x02) with copy of existing registers (Register(source_location=arc4_types/mutation.py:145:8-27, ir_type=Encoded(len+uint8[]), name='dynamic_uint8_array', version=0),)
debug: Replacing redundant declaration let tmp%4#6: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Hello") with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:8-13, ir_type=Encoded(len+utf8[]), name='hello', version=0),)
debug: Replacing redundant declaration let tmp%5#6: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("World") with copy of existing registers (Register(source_location=arc4_types/mutation.py:216:8-13, ir_type=Encoded(len+utf8[]), name='world', version=0),)
debug: Replacing redundant declaration let tmp%6#5: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Hello") with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:8-13, ir_type=Encoded(len+utf8[]), name='hello', version=0),)
debug: Replacing redundant declaration let tmp%7#5: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("World") with copy of existing registers (Register(source_location=arc4_types/mutation.py:216:8-13, ir_type=Encoded(len+utf8[]), name='world', version=0),)
debug: Found equivalence set: len%0#0, div_floor%0#0
debug: selected len%0#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%3#1, tmp%7#1, tmp%9#0, tmp%13#0, tmp%15#0, tmp%17#0, tmp%19#0, tmp%22#0, tmp%24#0, tmp%26#0, tmp%28#0, tmp%30#0, tmp%32#0, tmp%37#0, tmp%44#0, tmp%46#0, tmp%48#0, tmp%50#0, tmp%2#5, tmp%6#3, tmp%7#3, tmp%0#6
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, tmp%4#1, tmp%8#1, tmp%10#0, tmp%14#0, tmp%16#0, tmp%18#0, tmp%20#0, tmp%25#0, tmp%27#0, tmp%29#0, tmp%31#0, tmp%42#0, tmp%45#0, tmp%47#0, tmp%49#0, tmp%3#4, tmp%4#4, tmp%8#3, tmp%4#5, tmp%5#5, tmp%12#2
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: foo#0, concat%0#1
debug: selected foo#0 from equivalence set
debug: Found equivalence set: encoded_array%1#2, dynamic_string_array#3
debug: selected dynamic_string_array#3 from equivalence set
debug: Found equivalence set: encoded_array%1#3, concat%0#2
debug: selected encoded_array%1#3 from equivalence set
debug: Found equivalence set: encoded_array%2#3, concat%1#2
debug: selected encoded_array%2#3 from equivalence set
debug: Found equivalence set: dynamic_uint8_array#0, dynamic_uint8_array#5, uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: tmp%1#6, tmp%6#4
debug: selected tmp%1#6 from equivalence set
debug: Found equivalence set: tmp%2#6, tmp%7#4
debug: selected tmp%2#6 from equivalence set
debug: Found equivalence set: tmp%10#2, tmp%13#2
debug: selected tmp%10#2 from equivalence set
debug: Found equivalence set: tmp%11#2, tmp%14#2
debug: selected tmp%11#2 from equivalence set
debug: Found equivalence set: hello#0, tmp%4#6, tmp%6#5
debug: selected hello#0 from equivalence set
debug: Found equivalence set: world#0, tmp%5#6, tmp%7#5
debug: selected world#0 from equivalence set
debug: Copy propagation made 56 modifications
debug: Replacing redundant declaration let dynamic_bool_array#6: Encoded(len+bool1[]) = bytes_encode<(len+bool1[])>(tmp%0#1, tmp%1#1) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:8-26, ir_type=Encoded(len+bool1[]), name='dynamic_bool_array', version=0),)
debug: Replacing redundant declaration let encoded_value%1#0: Encoded(bool1) = bytes_encode<bool1>(tmp%1#1) with copy of existing registers (Register(source_location=arc4_types/mutation.py:110:8-43, ir_type=Encoded(bool1), name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%0#1: Encoded(bool1) = bytes_encode<bool1>(tmp%1#1) with copy of existing registers (Register(source_location=arc4_types/mutation.py:110:8-43, ir_type=Encoded(bool1), name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let extract_uint16%0#2: uint64 = (extract_uint16 dynamic_uint8_array#0 0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:146:8-45, ir_type=uint64, name='extract_uint16%0', version=0),)
debug: Replacing redundant declaration let hello_world#0: Encoded(len+(len+utf8[])[]) = bytes_encode<(len+(len+utf8[])[])>(hello#0, world#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:219:8-28, ir_type=Encoded(len+(len+utf8[])[]), name='dynamic_string_array', version=0),)
debug: Found equivalence set: dynamic_bool_array#0, dynamic_bool_array#6
debug: selected dynamic_bool_array#0 from equivalence set
debug: Found equivalence set: encoded_value%0#0, encoded_value%1#0, encoded_value%0#1
debug: selected encoded_value%0#0 from equivalence set
debug: Found equivalence set: extract_uint16%0#0, extract_uint16%0#2
debug: selected extract_uint16%0#0 from equivalence set
debug: Found equivalence set: dynamic_string_array#0, hello_world#0
debug: selected dynamic_string_array#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, length_minus_1#0
debug: selected length_minus_1#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%5#0, popped_location#0
debug: selected popped_location#0 from equivalence set
debug: Found equivalence set: tmp%6#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%7#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%11#0, result#2
debug: selected result#2 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, length_minus_1#0
debug: selected length_minus_1#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#0, item_location#0
debug: selected item_location#0 from equivalence set
debug: Found equivalence set: tmp%7#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%8#0, result#1
debug: selected result#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, length_minus_1#0
debug: selected length_minus_1#0 from equivalence set
debug: Found equivalence set: tmp%2#0, popped_header_offset#0
debug: selected popped_header_offset#0 from equivalence set
debug: Found equivalence set: tmp%3#0, head_and_tail#0
debug: selected head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%4#0, popped_offset#0
debug: selected popped_offset#0 from equivalence set
debug: Found equivalence set: tmp%6#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%10#0, head_and_tail#1
debug: selected head_and_tail#1 from equivalence set
debug: Found equivalence set: tmp%14#0, updated#0
debug: selected updated#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, new_array_length#0
debug: selected new_array_length#0 from equivalence set
debug: Found equivalence set: tmp%3#0, new_array_length_b#0
debug: selected new_array_length_b#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#0, current_bytes#0
debug: selected current_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, required_bytes#0
debug: selected required_bytes#0 from equivalence set
debug: Found equivalence set: tmp%12#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%13#0, write_offset#0
debug: selected write_offset#0 from equivalence set
debug: Found equivalence set: tmp%14#0, write_end#0
debug: selected write_end#0 from equivalence set
debug: Found equivalence set: tmp%17#0, result#3
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%18#0, write_offset#2
debug: selected write_offset#2 from equivalence set
debug: Found equivalence set: tmp%19#0, read_offset#2
debug: selected read_offset#2 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, new_length#0
debug: selected new_length#0 from equivalence set
debug: Found equivalence set: tmp%3#0, header_end#0
debug: selected header_end#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_concat
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, uint8_array#0
debug: selected uint8_array#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0, array_concat_tuple#0
debug: selected array_concat_tuple#0 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint8[])%1#0, array_concat_tuple#1
debug: selected array_concat_tuple#1 from equivalence set
debug: Found equivalence set: encoded_array%3#0, hello_world#0
debug: selected hello_world#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#0, hello_world_concat#0
debug: selected hello_world_concat#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 encoded_array%5#0 2u total_length%0#0) to ((extract 2 0) encoded_array%5#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%6#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Hello") with copy of existing registers (Register(source_location=arc4_types/mutation.py:66:35-50, ir_type=Encoded(len+utf8[]), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("World") with copy of existing registers (Register(source_location=arc4_types/mutation.py:66:52-67, ir_type=Encoded(len+utf8[]), name='tmp%5', version=0),)
debug: Found equivalence set: tmp%4#0, tmp%6#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%7#0
debug: selected tmp%5#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, array_of_array#0
debug: selected array_of_array#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint8[])[])%0#0, array_of_array#1
debug: selected array_of_array#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint8[])[])%1#0, array_of_array#2
debug: selected array_of_array#2 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0
debug: selected replace%0#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, array_of_array#3
debug: selected array_of_array#3 from equivalence set
debug: Found equivalence set: updated_array%1#0, array_of_array#4
debug: selected array_of_array#4 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x encoded_array%1#0) to encoded_array%1#0
debug: Simplified (concat 0x encoded_array%2#0) to encoded_array%2#0
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%2#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%2#0, array_of_array#0
debug: selected array_of_array#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, array_of_array#1
debug: selected array_of_array#1 from equivalence set
debug: Found equivalence set: updated_array%1#0, array_of_array#2
debug: selected array_of_array#2 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.index_assign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, dynamic_uint8_array#1
debug: selected dynamic_uint8_array#1 from equivalence set
debug: Found equivalence set: encoded_array%1#0, static_uint8_array#0
debug: selected static_uint8_array#0 from equivalence set
debug: Found equivalence set: updated_array%1#0, static_uint8_array#1
debug: selected static_uint8_array#1 from equivalence set
debug: Found equivalence set: encoded_array%2#0, dynamic_bool_array#0
debug: selected dynamic_bool_array#0 from equivalence set
debug: Found equivalence set: updated_array%2#0, dynamic_bool_array#1
debug: selected dynamic_bool_array#1 from equivalence set
debug: Found equivalence set: encoded_array%3#0, static_bool_array#0
debug: selected static_bool_array#0 from equivalence set
debug: Found equivalence set: updated_array%3#0, static_bool_array#1
debug: selected static_bool_array#1 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:109:54-65, ir_type=Encoded(bool8), name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%6#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:109:42-52, ir_type=Encoded(bool8), name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:109:42-52, ir_type=Encoded(bool8), name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%8#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:109:54-65, ir_type=Encoded(bool8), name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, tmp%4#0, tmp%8#0
debug: selected tmp%3#0 from equivalence set
debug: Found equivalence set: tmp%2#0, tmp%6#0, tmp%7#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Replacing redundant declaration let encoded_value%1#0: Encoded(bool1) = bytes_encode<bool1>(tmp%3#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:110:8-43, ir_type=Encoded(bool1), name='encoded_value%0', version=0),)
debug: Found equivalence set: encoded_value%0#0, encoded_value%1#0
debug: selected encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, test_struct#0
debug: selected test_struct#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, test_struct#1
debug: selected test_struct#1 from equivalence set
debug: Found equivalence set: updated_tuple%1#0, test_struct#2
debug: selected test_struct#2 from equivalence set
debug: Found equivalence set: updated_tuple%2#0, test_struct#3
debug: selected test_struct#3 from equivalence set
debug: Found equivalence set: updated_tuple%3#0, test_struct#4
debug: selected test_struct#4 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:125:28-39, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%6#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Happy") with copy of existing registers (Register(source_location=arc4_types/mutation.py:121:20-35, ir_type=Encoded(len+utf8[]), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Days") with copy of existing registers (Register(source_location=arc4_types/mutation.py:122:20-34, ir_type=Encoded(len+utf8[]), name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%12#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:125:28-39, ir_type=Encoded(bool8), name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%13#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Hmmmm") with copy of existing registers (Register(source_location=arc4_types/mutation.py:133:30-45, ir_type=Encoded(len+utf8[]), name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%14#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Oh well") with copy of existing registers (Register(source_location=arc4_types/mutation.py:134:30-47, ir_type=Encoded(len+utf8[]), name='tmp%11', version=0),)
debug: Found equivalence set: tmp%4#0, tmp%5#0, tmp%12#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%6#0
debug: selected tmp%1#0 from equivalence set
debug: Found equivalence set: tmp%2#0, tmp%7#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%10#0, tmp%13#0
debug: selected tmp%10#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%14#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutation.py:159:18 debug: inlining call to _puya_lib.arc4.dynamic_array_pop_fixed_size in test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0, dynamic_uint8_array#1
debug: selected dynamic_uint8_array#1 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint8[])%1#0, dynamic_uint8_array#2
debug: selected dynamic_uint8_array#2 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+uint8[])%2#0, dynamic_uint8_array#3, array#0
debug: selected dynamic_uint8_array#3 from equivalence set
debug: Found equivalence set: popped#1, tmp%5#0, popped#0, reinterpret_biguint%0#0
debug: selected popped#1 from equivalence set
debug: Found equivalence set: result#1, tmp%6#0, dynamic_uint8_array#4
debug: selected result#1 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable fixed_byte_size#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 dynamic_uint8_array#1 2u total_length%0#0) to ((extract 2 0) dynamic_uint8_array#1)
debug: Simplified (substring3 concat%1#0 2u total_length%1#0) to ((extract 2 0) concat%1#0)
debug: Simplified (/ len%0#0 1u) to len%0#0
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_bool_array#0
debug: selected dynamic_bool_array#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, dynamic_bool_array#1
debug: selected dynamic_bool_array#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%1#0, dynamic_bool_array#2
debug: selected dynamic_bool_array#2 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%2#0, dynamic_bool_array#3
debug: selected dynamic_bool_array#3 from equivalence set
debug: Found equivalence set: tmp%35#0, dynamic_bool_array#4
debug: selected dynamic_bool_array#4 from equivalence set
debug: Found equivalence set: tmp%40#0, dynamic_bool_array#5
debug: selected dynamic_bool_array#5 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 dynamic_bool_array#1 2u total_length%0#0) to ((extract 2 0) dynamic_bool_array#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%4#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%8#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%9#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%10#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%13#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%14#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%15#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%16#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%17#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%18#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%19#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%20#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%22#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%24#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%25#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%26#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%27#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%28#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%29#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%30#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%31#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%32#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%37#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%42#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%44#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%45#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%46#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%47#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%48#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%49#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:60-71, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%50#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:168:48-58, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%3#0, tmp%7#0, tmp%9#0, tmp%13#0, tmp%15#0, tmp%17#0, tmp%19#0, tmp%22#0, tmp%24#0, tmp%26#0, tmp%28#0, tmp%30#0, tmp%32#0, tmp%37#0, tmp%44#0, tmp%46#0, tmp%48#0, tmp%50#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%4#0, tmp%8#0, tmp%10#0, tmp%14#0, tmp%16#0, tmp%18#0, tmp%20#0, tmp%25#0, tmp%27#0, tmp%29#0, tmp%31#0, tmp%42#0, tmp%45#0, tmp%47#0, tmp%49#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 33 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, hello#0
debug: selected hello#0 from equivalence set
debug: Found equivalence set: tmp%1#0, world#0
debug: selected world#0 from equivalence set
debug: Found equivalence set: tmp%2#0, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: tmp%3#0, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: encoded_array%0#0, dynamic_string_array#0
debug: selected dynamic_string_array#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#0, dynamic_string_array#1
debug: selected dynamic_string_array#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%1#0, dynamic_string_array#2
debug: selected dynamic_string_array#2 from equivalence set
debug: Found equivalence set: encoded_array%2#0, dynamic_string_array#3
debug: selected dynamic_string_array#3 from equivalence set
debug: Found equivalence set: updated_array%0#0, dynamic_string_array#4
debug: selected dynamic_string_array#4 from equivalence set
debug: Found equivalence set: updated_array%1#0, dynamic_string_array#5
debug: selected dynamic_string_array#5 from equivalence set
debug: Found equivalence set: tmp%10#0, dynamic_string_array#6
debug: selected dynamic_string_array#6 from equivalence set
debug: Found equivalence set: tmp%13#0, dynamic_string_array#7
debug: selected dynamic_string_array#7 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x foo#0) to foo#0
debug: Simplified (substring3 dynamic_string_array#1 2u total_length%0#0) to ((extract 2 0) dynamic_string_array#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let dynamic_string_array#3: Encoded(len+(len+utf8[])[]) = bytes_encode<(len+(len+utf8[])[])>(hello#0, world#0, foo#0, bar#0, hello#0, world#0, foo#0, bar#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:231:39-99, ir_type=Encoded(len+(len+utf8[])[]), name='encoded_array%1', version=0),)
debug: Found equivalence set: foo#0, concat%0#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, dynamic_string_array#3
debug: selected dynamic_string_array#3 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_concat
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.index_assign
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool
debug: removing unused subroutine test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.dynamic_array_pop_fixed_size for inlining
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutation.py:159:18 debug: inlining call to _puya_lib.arc4.dynamic_array_pop_fixed_size in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: dynamic_uint8_array#3, array#0
debug: selected dynamic_uint8_array#3 from equivalence set
debug: Found equivalence set: popped#1, popped#0
debug: selected popped#1 from equivalence set
debug: Found equivalence set: result#1, dynamic_uint8_array#4
debug: selected result#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable total_length%0#0
debug: Removing unused variable total_length%1#0
debug: Removing unused variable fixed_byte_size#0
debug: Removing unused variable total_length%0#1
debug: Removing unused variable total_length%0#2
debug: Removing unused variable total_length%0#3
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.mutation.Arc4MutationContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.mutation.Arc4MutationContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.mutation.Arc4MutationContract
debug: optimizing approval program of test_cases.arc4_types.mutation.Arc4MutationContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(len+uint8[])%0#0, dynamic_uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(uint8[])%0#0, tmp%0#0
debug: selected aggregate%head%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%5#0, aggregate%as_Encoded(len+uint8[])%1#0, encoded_array%1#0
debug: selected aggregate%head%5#0 from equivalence set
debug: Found equivalence set: aggregate%head%11#0, aggregate%as_Encoded(len+uint8[])%2#0, encoded_array%2#0
debug: selected aggregate%head%11#0 from equivalence set
debug: Found equivalence set: aggregate%head%13#0, aggregate%as_Encoded(uint8[])%1#0, tmp%3#0
debug: selected aggregate%head%13#0 from equivalence set
debug: Found equivalence set: aggregate%head%21#0, aggregate%as_Encoded(len+uint8[])%3#0, encoded_array%3#0
debug: selected aggregate%head%21#0 from equivalence set
debug: Found equivalence set: aggregate%head%28#0, aggregate%as_Encoded(len+uint8[])%4#0, encoded_array%4#0
debug: selected aggregate%head%28#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%0#1
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, tmp%1#1
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%29#0, aggregate%as_Encoded(len+bool1[])%0#0, dynamic_bool_array#0
debug: selected dynamic_bool_array#0 from equivalence set
debug: Found equivalence set: aggregate%head%31#0, aggregate%as_Encoded(bool8[])%0#0, tmp%5#1
debug: selected aggregate%head%31#0 from equivalence set
debug: Found equivalence set: aggregate%head%32#0, aggregate%as_Encoded(len+bool1[])%1#0, encoded_array%1#1
debug: selected aggregate%head%32#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%12#0
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%33#0, aggregate%as_Encoded(len+bool1[])%2#0, encoded_array%2#1
debug: selected aggregate%head%33#0 from equivalence set
debug: Found equivalence set: aggregate%head%34#0, aggregate%as_Encoded(bool8[])%1#0, tmp%23#0
debug: selected aggregate%head%34#0 from equivalence set
debug: Found equivalence set: aggregate%head%36#0, aggregate%as_Encoded(len+bool1[])%3#0, encoded_array%3#1
debug: selected aggregate%head%36#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, tmp%36#0
debug: selected aggregate%encoded_bool%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%3#0, tmp%41#0
debug: selected aggregate%encoded_bool%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%37#0, aggregate%as_Encoded(len+bool1[])%4#0, encoded_array%4#1
debug: selected aggregate%head%37#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, hello#0
debug: selected hello#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, world#0
debug: selected world#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+utf8[])%2#0, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+utf8[])%3#0, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(len+(len+utf8[])[])%0#0, dynamic_string_array#0
debug: selected dynamic_string_array#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, tmp%6#2
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%9#0, aggregate%as_Encoded(len+(len+utf8[])[])%1#0, dynamic_string_array#3
debug: selected dynamic_string_array#3 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, dynamic_string_array#4
debug: selected dynamic_string_array#4 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, dynamic_string_array#5
debug: selected dynamic_string_array#5 from equivalence set
debug: Found equivalence set: aggregate%concat%17#0, aggregate%as_Encoded(len+(len+utf8[])[])%2#0, encoded_array%3#2
debug: selected aggregate%concat%17#0 from equivalence set
debug: Found equivalence set: aggregate%concat%23#0, aggregate%as_Encoded(len+(len+utf8[])[])%3#0, encoded_array%4#2
debug: selected aggregate%concat%23#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%14#0, aggregate%as_Encoded(len+(len+uint8[])[])%0#0, array_of_array#0
debug: selected array_of_array#0 from equivalence set
debug: Found equivalence set: aggregate%head%62#0, aggregate%as_Encoded(len+uint8[])%5#0, encoded_array%1#3
debug: selected aggregate%head%62#0 from equivalence set
debug: Found equivalence set: aggregate%head%63#0, aggregate%as_Encoded(len+uint8[])%6#0, encoded_array%2#3
debug: selected aggregate%head%63#0 from equivalence set
debug: Found equivalence set: aggregate%item%2#0, array_item%0#0
debug: selected aggregate%item%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%64#0, aggregate%as_Encoded(uint8[])%2#0, tmp%3#3
debug: selected aggregate%head%64#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%2#0, array_of_array#3
debug: selected array_of_array#3 from equivalence set
debug: Found equivalence set: aggregate%updated_array%4#0, array_of_array#4
debug: selected array_of_array#4 from equivalence set
debug: Found equivalence set: aggregate%head%66#0, aggregate%as_Encoded(uint8[2])%0#0, encoded_array%0#4
debug: selected aggregate%head%66#0 from equivalence set
debug: Found equivalence set: aggregate%head%68#0, aggregate%as_Encoded(uint8[2])%1#0, encoded_array%1#4
debug: selected aggregate%head%68#0 from equivalence set
debug: Found equivalence set: aggregate%head%70#0, aggregate%as_Encoded(uint8[2][2])%0#0, array_of_array#5
debug: selected array_of_array#5 from equivalence set
debug: Found equivalence set: aggregate%head%72#0, aggregate%as_Encoded(uint8[2])%2#0, encoded_array%3#3
debug: selected aggregate%head%72#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%5#0, array_of_array#6
debug: selected array_of_array#6 from equivalence set
debug: Found equivalence set: aggregate%updated_array%7#0, array_of_array#7
debug: selected array_of_array#7 from equivalence set
debug: Found equivalence set: aggregate%updated_array%8#0, dynamic_uint8_array#6
debug: selected dynamic_uint8_array#6 from equivalence set
debug: Found equivalence set: aggregate%head%74#0, aggregate%as_Encoded(uint8[2])%3#0, static_uint8_array#0
debug: selected static_uint8_array#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%9#0, static_uint8_array#1
debug: selected static_uint8_array#1 from equivalence set
debug: Found equivalence set: aggregate%get_bit%24#0, aggregate%as_Encoded(bool1)%0#0, encoded_value%0#0
debug: selected aggregate%get_bit%24#0 from equivalence set
debug: Found equivalence set: aggregate%updated_target%0#0, dynamic_bool_array#7
debug: selected dynamic_bool_array#7 from equivalence set
debug: Found equivalence set: aggregate%head%75#0, aggregate%as_Encoded(bool1[2])%0#0, static_bool_array#0
debug: selected static_bool_array#0 from equivalence set
debug: Found equivalence set: aggregate%updated_target%1#0, static_bool_array#1
debug: selected static_bool_array#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#0, aggregate%as_Encoded(len+utf8[])%4#0, tmp%1#6
debug: selected aggregate%encoded_value%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%5#0, aggregate%as_Encoded(len+utf8[])%5#0, tmp%2#6
debug: selected aggregate%encoded_value%5#0 from equivalence set
debug: Found equivalence set: aggregate%concat%25#0, aggregate%as_Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))%0#0, test_struct#0
debug: selected test_struct#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%0#0, test_struct#1
debug: selected test_struct#1 from equivalence set
debug: Found equivalence set: aggregate%updated_data%1#0, test_struct#2
debug: selected test_struct#2 from equivalence set
debug: Found equivalence set: aggregate%concat%27#0, aggregate%as_Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))%1#0, tmp%8#4
debug: selected aggregate%concat%27#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%6#0, aggregate%as_Encoded(len+utf8[])%6#0, tmp%10#2
debug: selected aggregate%encoded_value%6#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%4#0, test_struct#3
debug: selected test_struct#3 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%7#0, aggregate%as_Encoded(len+utf8[])%7#0, tmp%11#2
debug: selected aggregate%encoded_value%7#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%5#0, test_struct#4
debug: selected test_struct#4 from equivalence set
debug: Found equivalence set: aggregate%concat%29#0, aggregate%as_Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))%2#0, tmp%15#2
debug: selected aggregate%concat%29#0 from equivalence set
debug: Found equivalence set: aggregate%head%89#0, aggregate%as_Encoded(uint8[])%3#0, tmp%0#7
debug: selected aggregate%head%89#0 from equivalence set
debug: Found equivalence set: aggregate%head%93#0, aggregate%as_Encoded(len+uint8[])%7#0, encoded_array%1#6
debug: selected aggregate%head%93#0 from equivalence set
debug: Found equivalence set: aggregate%head%94#0, aggregate%as_Encoded(uint8[])%4#0, tmp%2#7
debug: selected aggregate%head%94#0 from equivalence set
debug: Found equivalence set: aggregate%head%99#0, aggregate%as_Encoded(len+uint8[])%8#0, encoded_array%2#6
debug: selected aggregate%head%99#0 from equivalence set
debug: Found equivalence set: aggregate%concat%30#0, aggregate%as_Encoded(len+(len+utf8[])[])%4#0, encoded_array%4#3
debug: selected aggregate%concat%30#0 from equivalence set
debug: Found equivalence set: aggregate%concat%31#0, aggregate%as_Encoded(len+(len+utf8[])[])%5#0, encoded_array%5#0
debug: selected aggregate%concat%31#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%13#0, tmp%8#5
debug: selected aggregate%array_length%13#0 from equivalence set
debug: Copy propagation made 124 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%9#0
debug: Removing unused variable aggregate%item%0#0
debug: Removing unused variable aggregate%item%1#0
debug: Removing unused variable aggregate%current_tail_offset%17#0
debug: Removing unused variable aggregate%current_tail_offset%23#0
debug: Removing unused variable aggregate%item%3#0
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable aggregate%encoded_element%4#0
debug: Removing unused variable aggregate%encoded_element%5#0
debug: Removing unused variable aggregate%get_bit%25#0
debug: Removing unused variable aggregate%get_bit%27#0
debug: Removing unused variable aggregate%current_tail_offset%25#0
debug: Removing unused variable aggregate%get_bit%28#0
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%current_tail_offset%27#0
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable aggregate%current_tail_offset%29#0
debug: Removing unused variable aggregate%current_tail_offset%30#0
debug: Removing unused variable aggregate%current_tail_offset%31#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%9#0
debug: Removing unused variable aggregate%item_head_tail_length%0#0
debug: Removing unused variable aggregate%item_head_tail_length%1#0
debug: Removing unused variable aggregate%data_length%17#0
debug: Removing unused variable aggregate%data_length%23#0
debug: Removing unused variable aggregate%item_head_tail_length%3#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%array_trimmed%1#0
debug: Removing unused variable aggregate%bytes_offset%4#0
debug: Removing unused variable aggregate%bytes_offset%5#0
debug: Removing unused variable aggregate%add%0#0
debug: Removing unused variable aggregate%data_length%25#0
debug: Removing unused variable aggregate%data_length%27#0
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Removing unused variable aggregate%extract_uint16%2#0
debug: Removing unused variable aggregate%len%0#0
debug: Removing unused variable aggregate%data_length%29#0
debug: Removing unused variable aggregate%data_length%30#0
debug: Removing unused variable aggregate%data_length%31#0
debug: Removing unused variable aggregate%item_length_in_bytes%0#0
debug: Removing unused variable aggregate%item_length_in_bytes%1#0
debug: Removing unused variable aggregate%item_length_in_bytes%3#0
debug: Removing unused variable aggregate%total_length%5#0
debug: Removing unused variable aggregate%total_length%6#0
debug: Removing unused variable aggregate%item_length%0#0
debug: Removing unused variable aggregate%item_length%1#0
debug: Removing unused variable aggregate%item_length%3#0
debug: Removing unused variable aggregate%item_offset%0#0
debug: Removing unused variable aggregate%item_offset%1#0
debug: Removing unused variable aggregate%item_offset%3#0
debug: Removing unused variable aggregate%array_head_and_tail%0#0
debug: Removing unused variable aggregate%item_offset_offset%0#0
debug: Removing unused variable aggregate%array_head_and_tail%1#0
debug: Removing unused variable aggregate%item_offset_offset%1#0
debug: Removing unused variable aggregate%array_head_and_tail%3#0
debug: Removing unused variable aggregate%item_offset_offset%3#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Removing unused variable aggregate%total_length%1#0
debug: Removing unused variable aggregate%total_length%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x01) to 0x000201
debug: Simplified (concat 0x000201 0x02) to 0x00020102
debug: Simplified (concat 0x 0x32) to 0x32
debug: Simplified (concat 0x00020102 0x32) // on error: max array length exceeded to 0x0002010232
debug: Simplified (extract_uint16 0x00020102 0u) to 2u
debug: Simplified (+ 2u 1u) to 3u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0003
debug: Simplified ((replace2 0) 0x0002010232 0x0003) to 0x0003010232
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0003
debug: Simplified (concat 0x0003 0x01) to 0x000301
debug: Simplified (concat 0x000301 0x02) to 0x00030102
debug: Simplified (concat 0x00030102 0x32) to 0x0003010232
debug: Simplified (== 0x0003010232 0x0003010232) to 1u
debug: Simplified ((extract 2 0) 0x0003010232) to 0x010232
debug: Simplified (concat 0x0003010232 0x010232) // on error: max array length exceeded to 0x0003010232010232
debug: Simplified ((extract 2 0) 0x0003010232010232) to 0x010232010232
debug: Simplified (len 0x010232010232) to 6u
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x0006
debug: Simplified ((replace2 0) 0x0003010232010232 0x0006) to 0x0006010232010232
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0006
debug: Simplified (concat 0x0006 0x01) to 0x000601
debug: Simplified (concat 0x000601 0x02) to 0x00060102
debug: Simplified (concat 0x00060102 0x32) to 0x0006010232
debug: Simplified (concat 0x0006010232 0x01) to 0x000601023201
debug: Simplified (concat 0x000601023201 0x02) to 0x00060102320102
debug: Simplified (concat 0x00060102320102 0x32) to 0x0006010232010232
debug: Simplified (== 0x0006010232010232 0x0006010232010232) to 1u
debug: Simplified (concat 0x 0x04) to 0x04
debug: Simplified (concat 0x04 0x5a) to 0x045a
debug: Simplified (concat 0x0006010232010232 0x045a) // on error: max array length exceeded to 0x0006010232010232045a
debug: Simplified (extract_uint16 0x0006010232010232 0u) to 6u
debug: Simplified (+ 6u 2u) to 8u
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0008
debug: Simplified ((replace2 0) 0x0006010232010232045a 0x0008) to 0x0008010232010232045a
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0008
debug: Simplified (concat 0x0008 0x01) to 0x000801
debug: Simplified (concat 0x000801 0x02) to 0x00080102
debug: Simplified (concat 0x00080102 0x32) to 0x0008010232
debug: Simplified (concat 0x0008010232 0x01) to 0x000801023201
debug: Simplified (concat 0x000801023201 0x02) to 0x00080102320102
debug: Simplified (concat 0x00080102320102 0x32) to 0x0008010232010232
debug: Simplified (concat 0x0008010232010232 0x04) to 0x000801023201023204
debug: Simplified (concat 0x000801023201023204 0x5a) to 0x0008010232010232045a
debug: Simplified (== 0x0008010232010232045a 0x0008010232010232045a) to 1u
debug: Simplified (extract_uint16 0x0008010232010232045a 0u) to 8u
debug: Simplified (- 8u 1u) to 7u
debug: Simplified ((extract 6 0) tmp%2#8) to 0x0007
debug: Simplified ((replace2 0) 0x0008010232010232045a 0x0007) to 0x0007010232010232045a
debug: Simplified (len 0x0007010232010232045a) to 10u
debug: Simplified (- 10u 1u) to 9u
debug: Simplified (extract3 0x0007010232010232045a 9u 1u) to 0x5a
debug: Simplified (substring3 0x0007010232010232045a 0u 9u) to 0x000701023201023204
debug: Simplified (b== 0x5a 0x5a) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0007
debug: Simplified (concat 0x0007 0x01) to 0x000701
debug: Simplified (concat 0x000701 0x02) to 0x00070102
debug: Simplified (concat 0x00070102 0x32) to 0x0007010232
debug: Simplified (concat 0x0007010232 0x01) to 0x000701023201
debug: Simplified (concat 0x000701023201 0x02) to 0x00070102320102
debug: Simplified (concat 0x00070102320102 0x32) to 0x0007010232010232
debug: Simplified (concat 0x0007010232010232 0x04) to 0x000701023201023204
debug: Simplified (== 0x000701023201023204 0x000701023201023204) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0002
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (concat 0x0002 0x80) to 0x000280
debug: Simplified (== 0x000280 0x000280) to 1u
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified (concat 0x80 0x00) to 0x8000
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0004
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (concat 0x0004 0xa0) to 0x0004a0
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x0008
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa0 4u 1u) to 0xa8
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa8 5u 0u) to 0xa8
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa8 6u 1u) to 0xaa
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xaa 7u 0u) to 0xaa
debug: Simplified (concat 0x0008 0xaa) to 0x0008aa
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0009
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa0 4u 1u) to 0xa8
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa8 5u 0u) to 0xa8
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa8 6u 1u) to 0xaa
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xaa 7u 0u) to 0xaa
debug: Simplified (concat 0x0009 0xaa) to 0x0009aa
debug: Simplified (concat 0x0009aa 0x80) to 0x0009aa80
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0007
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa0 4u 1u) to 0xa8
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa8 5u 0u) to 0xa8
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xa8 6u 1u) to 0xaa
debug: Simplified (concat 0x0007 0xaa) to 0x0007aa
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%10#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (len "World") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%11#0) to 0x0005
debug: Simplified (concat 0x0005 "World") to 0x0005576f726c64
debug: Simplified (len "Foo") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%12#0) to 0x0003
debug: Simplified (concat 0x0003 "Foo") to 0x0003466f6f
debug: Simplified (len "Bar") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%13#0) to 0x0003
debug: Simplified (concat 0x0003 "Bar") to 0x0003426172
debug: Simplified ((extract 6 2) aggregate%as_bytes%14#0) to 0x0002
debug: Simplified ((extract 6 2) aggregate%as_bytes%15#0) to 0x0004
debug: Simplified (concat 0x0002 0x0004) to 0x00020004
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 4u 7u) to 11u
debug: Simplified ((extract 6 2) aggregate%as_bytes%16#0) to 0x000b
debug: Simplified (concat 0x00020004 0x000b) to 0x00020004000b
debug: Simplified (concat 0x00020004000b 0x000548656c6c6f) to 0x00020004000b000548656c6c6f
debug: Simplified (concat 0x00020004000b000548656c6c6f 0x0005576f726c64) to 0x00020004000b000548656c6c6f0005576f726c64
debug: Simplified (== 0x00020004000b000548656c6c6f0005576f726c64 0x00020004000b000548656c6c6f0005576f726c64) to 1u
debug: Simplified (concat 0x0003466f6f 0x0003426172) to 0x0003466f6f0003426172
debug: Simplified ((extract 6 2) aggregate%as_bytes%17#0) to 0x0008
debug: Simplified ((extract 6 2) aggregate%as_bytes%18#0) to 0x0010
debug: Simplified (concat 0x0008 0x0010) to 0x00080010
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 16u 7u) to 23u
debug: Simplified ((extract 6 2) aggregate%as_bytes%19#0) to 0x0017
debug: Simplified (concat 0x00080010 0x0017) to 0x000800100017
debug: Simplified (len 0x0005576f726c64) to 7u
debug: Simplified (+ 23u 7u) to 30u
debug: Simplified ((extract 6 2) aggregate%as_bytes%20#0) to 0x001e
debug: Simplified (concat 0x000800100017 0x001e) to 0x000800100017001e
debug: Simplified (len 0x0003466f6f) to 5u
debug: Simplified (+ 30u 5u) to 35u
debug: Simplified ((extract 6 2) aggregate%as_bytes%21#0) to 0x0023
debug: Simplified (concat 0x000800100017001e 0x0023) to 0x000800100017001e0023
debug: Simplified (len 0x0003426172) to 5u
debug: Simplified (+ 35u 5u) to 40u
debug: Simplified ((extract 6 2) aggregate%as_bytes%22#0) to 0x0028
debug: Simplified (concat 0x000800100017001e0023 0x0028) to 0x000800100017001e00230028
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 40u 7u) to 47u
debug: Simplified ((extract 6 2) aggregate%as_bytes%23#0) to 0x002f
debug: Simplified (concat 0x000800100017001e00230028 0x002f) to 0x000800100017001e00230028002f
debug: Simplified (len 0x0005576f726c64) to 7u
debug: Simplified (+ 47u 7u) to 54u
debug: Simplified ((extract 6 2) aggregate%as_bytes%24#0) to 0x0036
debug: Simplified (concat 0x000800100017001e00230028002f 0x0036) to 0x000800100017001e00230028002f0036
debug: Simplified (len 0x0003466f6f) to 5u
debug: Simplified (+ 54u 5u) to 59u
debug: Simplified ((extract 6 2) aggregate%as_bytes%25#0) to 0x003b
debug: Simplified (concat 0x000800100017001e00230028002f0036 0x003b) to 0x000800100017001e00230028002f0036003b
debug: Simplified (concat 0x000800100017001e00230028002f0036003b 0x000548656c6c6f) to 0x000800100017001e00230028002f0036003b000548656c6c6f
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f 0x0005576f726c64) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c64
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c64 0x0003466f6f) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f 0x0003426172) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172 0x000548656c6c6f) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f 0x0005576f726c64) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c64
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c64 0x0003466f6f) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f
debug: Simplified (concat 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f 0x0003426172) to 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172
debug: Simplified (extract_uint16 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172 0u) to 8u
debug: Simplified (< 3u 8u) to 1u
debug: Simplified (extract_uint16 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172 0u) to 8u
debug: Simplified (< 3u 8u) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%26#0) to 0x0008
debug: Simplified ((extract 6 2) aggregate%as_bytes%27#0) to 0x0010
debug: Simplified (concat 0x0008 0x0010) to 0x00080010
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 16u 7u) to 23u
debug: Simplified ((extract 6 2) aggregate%as_bytes%28#0) to 0x0017
debug: Simplified (concat 0x00080010 0x0017) to 0x000800100017
debug: Simplified (len 0x0005576f726c64) to 7u
debug: Simplified (+ 23u 7u) to 30u
debug: Simplified ((extract 6 2) aggregate%as_bytes%29#0) to 0x001e
debug: Simplified (concat 0x000800100017 0x001e) to 0x000800100017001e
debug: Simplified (len 0x0003466f6f) to 5u
debug: Simplified (+ 30u 5u) to 35u
debug: Simplified ((extract 6 2) aggregate%as_bytes%30#0) to 0x0023
debug: Simplified (concat 0x000800100017001e 0x0023) to 0x000800100017001e0023
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 35u 7u) to 42u
debug: Simplified ((extract 6 2) aggregate%as_bytes%31#0) to 0x002a
debug: Simplified (concat 0x000800100017001e0023 0x002a) to 0x000800100017001e0023002a
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 42u 7u) to 49u
debug: Simplified ((extract 6 2) aggregate%as_bytes%32#0) to 0x0031
debug: Simplified (concat 0x000800100017001e0023002a 0x0031) to 0x000800100017001e0023002a0031
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 49u 7u) to 56u
debug: Simplified ((extract 6 2) aggregate%as_bytes%33#0) to 0x0038
debug: Simplified (concat 0x000800100017001e0023002a0031 0x0038) to 0x000800100017001e0023002a00310038
debug: Simplified (len 0x0003466f6f) to 5u
debug: Simplified (+ 56u 5u) to 61u
debug: Simplified ((extract 6 2) aggregate%as_bytes%34#0) to 0x003d
debug: Simplified (concat 0x000800100017001e0023002a00310038 0x003d) to 0x000800100017001e0023002a00310038003d
debug: Simplified (concat 0x000800100017001e0023002a00310038003d 0x000548656c6c6f) to 0x000800100017001e0023002a00310038003d000548656c6c6f
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f 0x0005576f726c64) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c64
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c64 0x0003466f6f) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f 0x000548656c6c6f) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f 0x000548656c6c6f) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f 0x000548656c6c6f) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f 0x0003466f6f) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f0003466f6f
debug: Simplified (concat 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f0003466f6f 0x0003426172) to 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f0003466f6f0003426172
debug: Simplified ((extract 6 2) aggregate%as_bytes%35#0) to 0x0006
debug: Simplified ((extract 6 2) aggregate%as_bytes%36#0) to 0x000c
debug: Simplified (concat 0x0006 0x000c) to 0x0006000c
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 12u 7u) to 19u
debug: Simplified ((extract 6 2) aggregate%as_bytes%37#0) to 0x0013
debug: Simplified (concat 0x0006000c 0x0013) to 0x0006000c0013
debug: Simplified (len 0x0005576f726c64) to 7u
debug: Simplified (+ 19u 7u) to 26u
debug: Simplified ((extract 6 2) aggregate%as_bytes%38#0) to 0x001a
debug: Simplified (concat 0x0006000c0013 0x001a) to 0x0006000c0013001a
debug: Simplified (len 0x0003466f6f) to 5u
debug: Simplified (+ 26u 5u) to 31u
debug: Simplified ((extract 6 2) aggregate%as_bytes%39#0) to 0x001f
debug: Simplified (concat 0x0006000c0013001a 0x001f) to 0x0006000c0013001a001f
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 31u 7u) to 38u
debug: Simplified ((extract 6 2) aggregate%as_bytes%40#0) to 0x0026
debug: Simplified (concat 0x0006000c0013001a001f 0x0026) to 0x0006000c0013001a001f0026
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 38u 7u) to 45u
debug: Simplified ((extract 6 2) aggregate%as_bytes%41#0) to 0x002d
debug: Simplified (concat 0x0006000c0013001a001f0026 0x002d) to 0x0006000c0013001a001f0026002d
debug: Simplified (concat 0x0006000c0013001a001f0026002d 0x000548656c6c6f) to 0x0006000c0013001a001f0026002d000548656c6c6f
debug: Simplified (concat 0x0006000c0013001a001f0026002d000548656c6c6f 0x0005576f726c64) to 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c64
debug: Simplified (concat 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c64 0x0003466f6f) to 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f
debug: Simplified (concat 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f 0x000548656c6c6f) to 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f
debug: Simplified (concat 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f 0x000548656c6c6f) to 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f
debug: Simplified (concat 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f 0x000548656c6c6f) to 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f
debug: Simplified ((extract 6 2) aggregate%as_bytes%42#0) to 0x0000
debug: Simplified (== 0x0000 0x0000) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%43#0) to 0x0001
debug: Simplified (concat 0x0001 0x0a) to 0x00010a
debug: Simplified ((extract 6 2) aggregate%as_bytes%44#0) to 0x0001
debug: Simplified (concat 0x0001 0x10) to 0x000110
debug: Simplified (substring3 array_of_array#2 2u aggregate%total_length%2#0) to ((extract 2 0) array_of_array#2)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (* aggregate%item_length%2#0 1u) to aggregate%item_length%2#0
debug: Simplified (concat 0x 0xff) to 0xff
debug: Simplified (substring3 array_of_array#3 2u aggregate%total_length%4#0) to ((extract 2 0) array_of_array#3)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (* aggregate%item_length%4#0 1u) to aggregate%item_length%4#0
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (+ 1u 2u) to 3u
debug: Simplified (concat 0x 0x0a) to 0x0a
debug: Simplified (concat 0x0a 0x09) to 0x0a09
debug: Simplified (concat 0x 0x40) to 0x40
debug: Simplified (concat 0x40 0x80) to 0x4080
debug: Simplified (concat 0x 0x0a09) to 0x0a09
debug: Simplified (concat 0x0a09 0x4080) to 0x0a094080
debug: Simplified (== 0x0a094080 0x0a094080) to 1u
debug: Simplified (concat 0x 0xff) to 0xff
debug: Simplified (concat 0xff 0xfe) to 0xfffe
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (replace3 0x0a094080 0u 0xfffe) // on error: index access is out of bounds to 0xfffe4080
debug: Simplified (== 0xfffe4080 0xfffe4080) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (extract3 0xfffe4080 2u 2u) // on error: index access is out of bounds to 0x4080
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (replace3 0x4080 0u 0x01) // on error: index access is out of bounds to 0x0180
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (replace3 0xfffe4080 2u 0x0180) // on error: index access is out of bounds to 0xfffe0180
debug: Simplified (== 0xfffe0180 0xfffe0180) to 1u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (replace3 0x00020102 2u 0xff) // on error: index access is out of bounds to 0x0002ff02
debug: Simplified (== 0x0002ff02 0x0002ff02) to 1u
debug: Simplified (concat 0x 0x01) to 0x01
debug: Simplified (concat 0x01 0x02) to 0x0102
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (replace3 0x0102 1u 0xff) // on error: index access is out of bounds to 0x01ff
debug: Simplified (== 0x01ff 0x01ff) to 1u
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (extract_uint16 0x000280 0u) to 2u
debug: Simplified (< 0u 2u) to 1u
debug: Simplified (extract_uint16 0x000280 0u) to 2u
debug: Simplified (< 0u 2u) to 1u
debug: Simplified (+ 0u 16u) to 16u
debug: Simplified (setbit 0x000280 16u 0u) to 0x000200
debug: Simplified (== 0x000200 0x000200) to 1u
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 1u 1u) to 0xc0
debug: Simplified (concat 0x 0xc0) to 0xc0
debug: Simplified (< 1u 2u) to 1u
debug: Simplified (< 1u 2u) to 1u
debug: Simplified (setbit 0xc0 1u 0u) to 0x80
debug: Simplified (== 0x80 0x80) to 1u
debug: Simplified (len "Happy") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%45#0) to 0x0005
debug: Simplified (concat 0x0005 "Happy") to 0x00054861707079
debug: Simplified (len "Days") to 4u
debug: Simplified ((extract 6 2) aggregate%as_bytes%46#0) to 0x0004
debug: Simplified (concat 0x0004 "Days") to 0x000444617973
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified (concat 0x80 0x32) to 0x8032
debug: Simplified ((extract 6 2) aggregate%as_bytes%47#0) to 0x0006
debug: Simplified (concat 0x8032 0x0006) to 0x80320006
debug: Simplified (len 0x00054861707079) to 7u
debug: Simplified (+ 6u 7u) to 13u
debug: Simplified ((extract 6 2) aggregate%as_bytes%48#0) to 0x000d
debug: Simplified (concat 0x80320006 0x000d) to 0x80320006000d
debug: Simplified (concat 0x80320006000d 0x00054861707079) to 0x80320006000d00054861707079
debug: Simplified (concat 0x80320006000d00054861707079 0x000444617973) to 0x80320006000d00054861707079000444617973
debug: Simplified (setbit 0x80320006000d00054861707079000444617973 0u 0u) to 0x00320006000d00054861707079000444617973
debug: Simplified (replace3 0x00320006000d00054861707079000444617973 1u 0x0c) to 0x000c0006000d00054861707079000444617973
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x0c) to 0x000c
debug: Simplified ((extract 6 2) aggregate%as_bytes%49#0) to 0x0006
debug: Simplified (concat 0x000c 0x0006) to 0x000c0006
debug: Simplified (len 0x00054861707079) to 7u
debug: Simplified (+ 6u 7u) to 13u
debug: Simplified ((extract 6 2) aggregate%as_bytes%50#0) to 0x000d
debug: Simplified (concat 0x000c0006 0x000d) to 0x000c0006000d
debug: Simplified (concat 0x000c0006000d 0x00054861707079) to 0x000c0006000d00054861707079
debug: Simplified (concat 0x000c0006000d00054861707079 0x000444617973) to 0x000c0006000d00054861707079000444617973
debug: Simplified (== 0x000c0006000d00054861707079000444617973 0x000c0006000d00054861707079000444617973) to 1u
debug: Simplified (len "Hmmmm") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%51#0) to 0x0005
debug: Simplified (concat 0x0005 "Hmmmm") to 0x0005486d6d6d6d
debug: Simplified (extract_uint16 0x000c0006000d00054861707079000444617973 2u) to 6u
debug: Simplified (extract3 0x000c0006000d00054861707079000444617973 0u 6u) to 0x000c0006000d
debug: Simplified (concat 0x000c0006000d 0x0005486d6d6d6d) to 0x000c0006000d0005486d6d6d6d
debug: Simplified (extract_uint16 0x000c0006000d00054861707079000444617973 4u) to 13u
debug: Simplified (len 0x000c0006000d00054861707079000444617973) to 19u
debug: Simplified (substring3 0x000c0006000d00054861707079000444617973 13u 19u) to 0x000444617973
debug: Simplified (concat 0x000c0006000d0005486d6d6d6d 0x000444617973) to 0x000c0006000d0005486d6d6d6d000444617973
debug: Simplified (- 13u 6u) to 7u
debug: Simplified (len 0x0005486d6d6d6d) to 7u
debug: Simplified (extract_uint16 0x000c0006000d00054861707079000444617973 4u) to 13u
debug: Simplified (+ 13u 7u) to 20u
debug: Simplified (- 20u 7u) to 13u
debug: Simplified ((extract 6 2) aggregate%as_bytes%52#0) to 0x000d
debug: Simplified (replace3 0x000c0006000d0005486d6d6d6d000444617973 4u 0x000d) to 0x000c0006000d0005486d6d6d6d000444617973
debug: Simplified (len "Oh well") to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%53#0) to 0x0007
debug: Simplified (concat 0x0007 "Oh well") to 0x00074f682077656c6c
debug: Simplified (extract_uint16 0x000c0006000d0005486d6d6d6d000444617973 4u) to 13u
debug: Simplified (extract3 0x000c0006000d0005486d6d6d6d000444617973 0u 13u) to 0x000c0006000d0005486d6d6d6d
debug: Simplified (concat 0x000c0006000d0005486d6d6d6d 0x00074f682077656c6c) to 0x000c0006000d0005486d6d6d6d00074f682077656c6c
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x0c) to 0x000c
debug: Simplified ((extract 6 2) aggregate%as_bytes%54#0) to 0x0006
debug: Simplified (concat 0x000c 0x0006) to 0x000c0006
debug: Simplified (len 0x0005486d6d6d6d) to 7u
debug: Simplified (+ 6u 7u) to 13u
debug: Simplified ((extract 6 2) aggregate%as_bytes%55#0) to 0x000d
debug: Simplified (concat 0x000c0006 0x000d) to 0x000c0006000d
debug: Simplified (concat 0x000c0006000d 0x0005486d6d6d6d) to 0x000c0006000d0005486d6d6d6d
debug: Simplified (concat 0x000c0006000d0005486d6d6d6d 0x00074f682077656c6c) to 0x000c0006000d0005486d6d6d6d00074f682077656c6c
debug: Simplified (== 0x000c0006000d0005486d6d6d6d00074f682077656c6c 0x000c0006000d0005486d6d6d6d00074f682077656c6c) to 1u
debug: Simplified (concat 0x 0x03) to 0x03
debug: Simplified (concat 0x03 0x04) to 0x0304
debug: Simplified (concat 0x00020102 0x0304) // on error: max array length exceeded to 0x000201020304
debug: Simplified (+ 2u 2u) to 4u
debug: Simplified ((extract 6 2) as_bytes%0#2) to 0x0004
debug: Simplified ((replace2 0) 0x000201020304 0x0004) to 0x000401020304
debug: Simplified ((extract 6 2) aggregate%as_bytes%56#0) to 0x0004
debug: Simplified (concat 0x0004 0x01) to 0x000401
debug: Simplified (concat 0x000401 0x02) to 0x00040102
debug: Simplified (concat 0x00040102 0x03) to 0x0004010203
debug: Simplified (concat 0x0004010203 0x04) to 0x000401020304
debug: Simplified (== 0x000401020304 0x000401020304) to 1u
debug: Simplified (concat 0x 0x05) to 0x05
debug: Simplified (concat 0x000401020304 0x05) // on error: max array length exceeded to 0x00040102030405
debug: Simplified (extract_uint16 0x000401020304 0u) to 4u
debug: Simplified (+ 4u 1u) to 5u
debug: Simplified ((extract 6 2) as_bytes%1#1) to 0x0005
debug: Simplified ((replace2 0) 0x00040102030405 0x0005) to 0x00050102030405
debug: Simplified ((extract 6 2) aggregate%as_bytes%57#0) to 0x0005
debug: Simplified (concat 0x0005 0x01) to 0x000501
debug: Simplified (concat 0x000501 0x02) to 0x00050102
debug: Simplified (concat 0x00050102 0x03) to 0x0005010203
debug: Simplified (concat 0x0005010203 0x04) to 0x000501020304
debug: Simplified (concat 0x000501020304 0x05) to 0x00050102030405
debug: Simplified (== 0x00050102030405 0x00050102030405) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%58#0) to 0x0001
debug: Simplified ((extract 6 2) aggregate%as_bytes%59#0) to 0x0002
debug: Simplified (concat 0x0001 0x0002) to 0x00010002
debug: Simplified (concat 0x00010002 0x000548656c6c6f) to 0x00010002000548656c6c6f
debug: Simplified ((extract 6 2) aggregate%as_bytes%60#0) to 0x0001
debug: Simplified ((extract 6 2) aggregate%as_bytes%61#0) to 0x0002
debug: Simplified (concat 0x0001 0x0002) to 0x00010002
debug: Simplified (concat 0x00010002 0x0005576f726c64) to 0x000100020005576f726c64
debug: Simplified ((extract 2 0) 0x000100020005576f726c64) to 0x00020005576f726c64
debug: Simplified (extract_uint16 0x000100020005576f726c64 0u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (len 0x00020005576f726c64) to 9u
debug: Simplified (substring3 0x00020005576f726c64 2u 9u) to 0x0005576f726c64
debug: Simplified (replace3 aggregate%item%4#0 3u 0x00) // on error: index access is out of bounds to ((replace2 3) aggregate%item%4#0 0x00) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:146:8-45, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:148:8-55, ir_type=bytes[8], name='as_bytes%1', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%3#0: bytes[8] = (itob 8u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:153:8-57, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 7u) with copy of existing registers (Register(source_location=INTERNAL:55:39-59, ir_type=bytes, name='tmp%2', version=8),)
debug: Replacing redundant declaration let aggregate%as_bytes%5#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:145:30-69, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let tmp%11#0: bool = (== dynamic_bool_array#1 0x0004a0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:171:15-67, ir_type=bool, name='tmp%6', version=1),)
debug: Replacing redundant declaration let aggregate%as_bytes%7#0: bytes[8] = (itob 8u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:153:8-57, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%9#0: bytes[8] = (itob 7u) with copy of existing registers (Register(source_location=INTERNAL:55:39-59, ir_type=bytes, name='tmp%2', version=8),)
debug: Replacing redundant declaration let aggregate%as_bytes%11#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:16-31, ir_type=bytes[8], name='aggregate%as_bytes%10', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%12#0: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:146:8-45, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%13#0: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:146:8-45, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%14#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:145:30-69, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%15#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:172-174:37-9, ir_type=bytes[8], name='aggregate%as_bytes%6', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%17#0: bytes[8] = (itob 8u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:153:8-57, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%5#0: uint64 = (extract_uint16 dynamic_string_array#4 0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:234:8-39, ir_type=uint64, name='aggregate%array_length%4', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%26#0: bytes[8] = (itob 8u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:153:8-57, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%27#0: bytes[8] = (itob 16u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:231:39-99, ir_type=bytes[8], name='aggregate%as_bytes%18', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%28#0: bytes[8] = (itob 23u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:231:39-99, ir_type=bytes[8], name='aggregate%as_bytes%19', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%29#0: bytes[8] = (itob 30u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:231:39-99, ir_type=bytes[8], name='aggregate%as_bytes%20', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%30#0: bytes[8] = (itob 35u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:231:39-99, ir_type=bytes[8], name='aggregate%as_bytes%21', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%35#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:148:8-55, ir_type=bytes[8], name='as_bytes%1', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%44#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:74:30-60, ir_type=bytes[8], name='aggregate%as_bytes%43', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%7#0: uint64 = (extract_uint16 array_of_array#2 0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:78:8-25, ir_type=uint64, name='aggregate%array_length%6', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%8#0: uint64 = (extract_uint16 array_of_array#2 0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:78:8-25, ir_type=uint64, name='aggregate%array_length%6', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%10#0: uint64 = (extract_uint16 array_of_array#3 0u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:82:8-39, ir_type=uint64, name='aggregate%array_length%9', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%45#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:16-31, ir_type=bytes[8], name='aggregate%as_bytes%10', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%46#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:172-174:37-9, ir_type=bytes[8], name='aggregate%as_bytes%6', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%47#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:148:8-55, ir_type=bytes[8], name='as_bytes%1', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%49#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:148:8-55, ir_type=bytes[8], name='as_bytes%1', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%50#0: bytes[8] = (itob 13u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:118-123:22-9, ir_type=bytes[8], name='aggregate%as_bytes%48', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%51#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:16-31, ir_type=bytes[8], name='aggregate%as_bytes%10', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%52#0: bytes[8] = (itob 13u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:118-123:22-9, ir_type=bytes[8], name='aggregate%as_bytes%48', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%53#0: bytes[8] = (itob 7u) with copy of existing registers (Register(source_location=INTERNAL:55:39-59, ir_type=bytes, name='tmp%2', version=8),)
debug: Replacing redundant declaration let aggregate%as_bytes%54#0: bytes[8] = (itob 6u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:148:8-55, ir_type=bytes[8], name='as_bytes%1', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%55#0: bytes[8] = (itob 13u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:118-123:22-9, ir_type=bytes[8], name='aggregate%as_bytes%48', version=0),)
debug: Replacing redundant declaration let as_bytes%0#2: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:172-174:37-9, ir_type=bytes[8], name='aggregate%as_bytes%6', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%56#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:172-174:37-9, ir_type=bytes[8], name='aggregate%as_bytes%6', version=0),)
debug: Replacing redundant declaration let as_bytes%1#1: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:16-31, ir_type=bytes[8], name='aggregate%as_bytes%10', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%57#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:215:16-31, ir_type=bytes[8], name='aggregate%as_bytes%10', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%58#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:74:30-60, ir_type=bytes[8], name='aggregate%as_bytes%43', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%59#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:145:30-69, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%60#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:74:30-60, ir_type=bytes[8], name='aggregate%as_bytes%43', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%61#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/mutation.py:145:30-69, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Found equivalence set: as_bytes%0#0, aggregate%as_bytes%1#0, aggregate%as_bytes%12#0, aggregate%as_bytes%13#0
debug: selected as_bytes%0#0 from equivalence set
debug: Found equivalence set: as_bytes%1#0, aggregate%as_bytes%2#0, aggregate%as_bytes%35#0, aggregate%as_bytes%47#0, aggregate%as_bytes%49#0, aggregate%as_bytes%54#0
debug: selected as_bytes%1#0 from equivalence set
debug: Found equivalence set: as_bytes%2#0, aggregate%as_bytes%3#0, aggregate%as_bytes%7#0, aggregate%as_bytes%17#0, aggregate%as_bytes%26#0
debug: selected as_bytes%2#0 from equivalence set
debug: Found equivalence set: tmp%2#8, aggregate%as_bytes%4#0, aggregate%as_bytes%9#0, aggregate%as_bytes%53#0
debug: selected tmp%2#8 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%5#0, aggregate%as_bytes%14#0, aggregate%as_bytes%59#0, aggregate%as_bytes%61#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: tmp%6#1, tmp%11#0
debug: selected tmp%6#1 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%10#0, aggregate%as_bytes%11#0, aggregate%as_bytes%45#0, aggregate%as_bytes%51#0, as_bytes%1#1, aggregate%as_bytes%57#0
debug: selected aggregate%as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%6#0, aggregate%as_bytes%15#0, aggregate%as_bytes%46#0, as_bytes%0#2, aggregate%as_bytes%56#0
debug: selected aggregate%as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%4#0, aggregate%array_length%5#0
debug: selected aggregate%array_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%18#0, aggregate%as_bytes%27#0
debug: selected aggregate%as_bytes%18#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%19#0, aggregate%as_bytes%28#0
debug: selected aggregate%as_bytes%19#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%20#0, aggregate%as_bytes%29#0
debug: selected aggregate%as_bytes%20#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%21#0, aggregate%as_bytes%30#0
debug: selected aggregate%as_bytes%21#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%43#0, aggregate%as_bytes%44#0, aggregate%as_bytes%58#0, aggregate%as_bytes%60#0
debug: selected aggregate%as_bytes%43#0 from equivalence set
debug: Found equivalence set: aggregate%item_length%2#0, aggregate%item_length_in_bytes%2#0
debug: selected aggregate%item_length%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%6#0, aggregate%array_length%7#0, aggregate%array_length%8#0
debug: selected aggregate%array_length%6#0 from equivalence set
debug: Found equivalence set: aggregate%item_length%4#0, aggregate%item_length_in_bytes%4#0
debug: selected aggregate%item_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%9#0, aggregate%array_length%10#0
debug: selected aggregate%array_length%9#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%48#0, aggregate%as_bytes%50#0, aggregate%as_bytes%52#0, aggregate%as_bytes%55#0
debug: selected aggregate%as_bytes%48#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Removing redundant assert of tmp%6#1
debug: Replacing redundant declaration let aggregate%lt%3#0: bool = (< 5u aggregate%array_length%4#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:234:8-39, ir_type=bool, name='aggregate%lt%2', version=0),)
debug: Replacing redundant declaration let aggregate%lt%5#0: bool = (< 0u aggregate%array_length%6#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:78:8-25, ir_type=bool, name='aggregate%lt%4', version=0),)
debug: Removing redundant assert of aggregate%array_length%6#0
debug: Replacing redundant declaration let aggregate%lt%6#0: bool = (< 0u aggregate%array_length%6#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:78:8-25, ir_type=bool, name='aggregate%lt%4', version=0),)
debug: Removing redundant assert of aggregate%array_length%6#0
debug: Replacing redundant declaration let aggregate%lt%8#0: bool = (< 0u aggregate%array_length%9#0) with copy of existing registers (Register(source_location=arc4_types/mutation.py:82:8-39, ir_type=bool, name='aggregate%lt%7', version=0),)
debug: Removing redundant assert of aggregate%array_length%9#0
debug: Found equivalence set: aggregate%lt%2#0, aggregate%lt%3#0
debug: selected aggregate%lt%2#0 from equivalence set
debug: Found equivalence set: aggregate%lt%4#0, aggregate%lt%5#0, aggregate%lt%6#0
debug: selected aggregate%lt%4#0 from equivalence set
debug: Found equivalence set: aggregate%lt%7#0, aggregate%lt%8#0
debug: selected aggregate%lt%7#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of aggregate%lt%2#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable dynamic_uint8_array#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable dynamic_uint8_array#1
debug: Removing unused variable aggregate%len_u16%1#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable extract_to_end%0#0
debug: Removing unused variable concat%1#0
debug: Removing unused variable extract_to_end%1#0
debug: Removing unused variable len%0#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable as_u16_bytes%1#0
debug: Removing unused variable dynamic_uint8_array#2
debug: Removing unused variable aggregate%len_u16%2#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable aggregate%head%8#0
debug: Removing unused variable aggregate%head%9#0
debug: Removing unused variable aggregate%head%10#0
debug: Removing unused variable aggregate%head%11#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable aggregate%head%12#0
debug: Removing unused variable aggregate%head%13#0
debug: Removing unused variable concat%2#0
debug: Removing unused variable extract_uint16%1#0
debug: Removing unused variable add%1#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable as_u16_bytes%2#0
debug: Removing unused variable dynamic_uint8_array#3
debug: Removing unused variable aggregate%len_u16%3#0
debug: Removing unused variable aggregate%head%14#0
debug: Removing unused variable aggregate%head%15#0
debug: Removing unused variable aggregate%head%16#0
debug: Removing unused variable aggregate%head%17#0
debug: Removing unused variable aggregate%head%18#0
debug: Removing unused variable aggregate%head%19#0
debug: Removing unused variable aggregate%head%20#0
debug: Removing unused variable aggregate%head%21#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable array_length#0
debug: Removing unused variable length_minus_1#0
debug: Removing unused variable tmp%2#8
debug: Removing unused variable tmp%3#7
debug: Removing unused variable result#0
debug: Removing unused variable tmp%5#5
debug: Removing unused variable item_location#0
debug: Removing unused variable popped#1
debug: Removing unused variable result#1
debug: Removing unused variable tmp%7#0
debug: Removing unused variable aggregate%len_u16%4#0
debug: Removing unused variable aggregate%head%22#0
debug: Removing unused variable aggregate%head%23#0
debug: Removing unused variable aggregate%head%24#0
debug: Removing unused variable aggregate%head%25#0
debug: Removing unused variable aggregate%head%26#0
debug: Removing unused variable aggregate%head%27#0
debug: Removing unused variable aggregate%head%28#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable aggregate%encoded_bool%1#0
debug: Removing unused variable aggregate%len_u16%5#0
debug: Removing unused variable aggregate%get_bit%0#0
debug: Removing unused variable aggregate%set_bit%0#0
debug: Removing unused variable dynamic_bool_array#0
debug: Removing unused variable tmp%2#1
debug: Removing unused variable aggregate%head%30#0
debug: Removing unused variable aggregate%head%31#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%len_u16%6#0
debug: Removing unused variable aggregate%get_bit%1#0
debug: Removing unused variable aggregate%set_bit%1#0
debug: Removing unused variable aggregate%get_bit%2#0
debug: Removing unused variable aggregate%set_bit%2#0
debug: Removing unused variable aggregate%get_bit%3#0
debug: Removing unused variable aggregate%set_bit%3#0
debug: Removing unused variable aggregate%head%32#0
debug: Removing unused variable aggregate%len_u16%7#0
debug: Removing unused variable aggregate%get_bit%4#0
debug: Removing unused variable aggregate%set_bit%4#0
debug: Removing unused variable aggregate%get_bit%5#0
debug: Removing unused variable aggregate%set_bit%5#0
debug: Removing unused variable aggregate%get_bit%6#0
debug: Removing unused variable aggregate%set_bit%6#0
debug: Removing unused variable aggregate%get_bit%7#0
debug: Removing unused variable aggregate%set_bit%7#0
debug: Removing unused variable aggregate%get_bit%8#0
debug: Removing unused variable aggregate%set_bit%8#0
debug: Removing unused variable aggregate%get_bit%9#0
debug: Removing unused variable aggregate%set_bit%9#0
debug: Removing unused variable aggregate%get_bit%10#0
debug: Removing unused variable aggregate%set_bit%10#0
debug: Removing unused variable aggregate%head%33#0
debug: Removing unused variable aggregate%head%34#0
debug: Removing unused variable aggregate%as_bytes%8#0
debug: Removing unused variable aggregate%len_u16%8#0
debug: Removing unused variable aggregate%get_bit%11#0
debug: Removing unused variable aggregate%set_bit%11#0
debug: Removing unused variable aggregate%get_bit%12#0
debug: Removing unused variable aggregate%set_bit%12#0
debug: Removing unused variable aggregate%get_bit%13#0
debug: Removing unused variable aggregate%set_bit%13#0
debug: Removing unused variable aggregate%get_bit%14#0
debug: Removing unused variable aggregate%set_bit%14#0
debug: Removing unused variable aggregate%get_bit%15#0
debug: Removing unused variable aggregate%set_bit%15#0
debug: Removing unused variable aggregate%get_bit%16#0
debug: Removing unused variable aggregate%set_bit%16#0
debug: Removing unused variable aggregate%get_bit%17#0
debug: Removing unused variable aggregate%set_bit%17#0
debug: Removing unused variable aggregate%head%35#0
debug: Removing unused variable aggregate%head%36#0
debug: Removing unused variable aggregate%len_u16%9#0
debug: Removing unused variable aggregate%get_bit%18#0
debug: Removing unused variable aggregate%set_bit%18#0
debug: Removing unused variable aggregate%get_bit%19#0
debug: Removing unused variable aggregate%set_bit%19#0
debug: Removing unused variable aggregate%get_bit%20#0
debug: Removing unused variable aggregate%set_bit%20#0
debug: Removing unused variable aggregate%get_bit%21#0
debug: Removing unused variable aggregate%set_bit%21#0
debug: Removing unused variable aggregate%get_bit%22#0
debug: Removing unused variable aggregate%set_bit%22#0
debug: Removing unused variable aggregate%get_bit%23#0
debug: Removing unused variable aggregate%set_bit%23#0
debug: Removing unused variable aggregate%head%37#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%10#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable hello#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable world#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable foo#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Removing unused variable bar#0
debug: Removing unused variable aggregate%len_u16%10#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%38#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%16#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%39#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable dynamic_string_array#0
debug: Removing unused variable tmp%4#2
debug: Removing unused variable concat%1#1
debug: Removing unused variable aggregate%len_u16%11#0
debug: Removing unused variable aggregate%as_bytes%18#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%40#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%as_bytes%19#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%41#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%as_bytes%20#0
debug: Removing unused variable aggregate%offset_as_uint16%4#0
debug: Removing unused variable aggregate%head%42#0
debug: Removing unused variable aggregate%data_length%4#0
debug: Removing unused variable aggregate%current_tail_offset%4#0
debug: Removing unused variable aggregate%as_bytes%21#0
debug: Removing unused variable aggregate%offset_as_uint16%5#0
debug: Removing unused variable aggregate%head%43#0
debug: Removing unused variable aggregate%data_length%5#0
debug: Removing unused variable aggregate%current_tail_offset%5#0
debug: Removing unused variable aggregate%as_bytes%22#0
debug: Removing unused variable aggregate%offset_as_uint16%6#0
debug: Removing unused variable aggregate%head%44#0
debug: Removing unused variable aggregate%data_length%6#0
debug: Removing unused variable aggregate%current_tail_offset%6#0
debug: Removing unused variable aggregate%as_bytes%23#0
debug: Removing unused variable aggregate%offset_as_uint16%7#0
debug: Removing unused variable aggregate%head%45#0
debug: Removing unused variable aggregate%data_length%7#0
debug: Removing unused variable aggregate%current_tail_offset%7#0
debug: Removing unused variable aggregate%as_bytes%24#0
debug: Removing unused variable aggregate%offset_as_uint16%8#0
debug: Removing unused variable aggregate%head%46#0
debug: Removing unused variable aggregate%data_length%8#0
debug: Removing unused variable aggregate%current_tail_offset%8#0
debug: Removing unused variable aggregate%as_bytes%25#0
debug: Removing unused variable aggregate%offset_as_uint16%9#0
debug: Removing unused variable aggregate%head%47#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable aggregate%concat%3#0
debug: Removing unused variable aggregate%concat%4#0
debug: Removing unused variable aggregate%concat%5#0
debug: Removing unused variable aggregate%concat%6#0
debug: Removing unused variable aggregate%concat%7#0
debug: Removing unused variable aggregate%concat%8#0
debug: Removing unused variable dynamic_string_array#3
debug: Removing unused variable aggregate%array_length%2#0
debug: Removing unused variable aggregate%lt%0#0
debug: Removing unused variable aggregate%array_length%3#0
debug: Removing unused variable aggregate%lt%1#0
debug: Removing unused variable aggregate%len_u16%12#0
debug: Removing unused variable aggregate%offset_as_uint16%10#0
debug: Removing unused variable aggregate%head%48#0
debug: Removing unused variable aggregate%data_length%10#0
debug: Removing unused variable aggregate%current_tail_offset%10#0
debug: Removing unused variable aggregate%offset_as_uint16%11#0
debug: Removing unused variable aggregate%head%49#0
debug: Removing unused variable aggregate%data_length%11#0
debug: Removing unused variable aggregate%current_tail_offset%11#0
debug: Removing unused variable aggregate%offset_as_uint16%12#0
debug: Removing unused variable aggregate%head%50#0
debug: Removing unused variable aggregate%data_length%12#0
debug: Removing unused variable aggregate%current_tail_offset%12#0
debug: Removing unused variable aggregate%offset_as_uint16%13#0
debug: Removing unused variable aggregate%head%51#0
debug: Removing unused variable aggregate%data_length%13#0
debug: Removing unused variable aggregate%current_tail_offset%13#0
debug: Removing unused variable aggregate%as_bytes%31#0
debug: Removing unused variable aggregate%offset_as_uint16%14#0
debug: Removing unused variable aggregate%head%52#0
debug: Removing unused variable aggregate%data_length%14#0
debug: Removing unused variable aggregate%current_tail_offset%14#0
debug: Removing unused variable aggregate%as_bytes%32#0
debug: Removing unused variable aggregate%offset_as_uint16%15#0
debug: Removing unused variable aggregate%head%53#0
debug: Removing unused variable aggregate%data_length%15#0
debug: Removing unused variable aggregate%current_tail_offset%15#0
debug: Removing unused variable aggregate%as_bytes%33#0
debug: Removing unused variable aggregate%offset_as_uint16%16#0
debug: Removing unused variable aggregate%head%54#0
debug: Removing unused variable aggregate%data_length%16#0
debug: Removing unused variable aggregate%current_tail_offset%16#0
debug: Removing unused variable aggregate%as_bytes%34#0
debug: Removing unused variable aggregate%offset_as_uint16%17#0
debug: Removing unused variable aggregate%head%55#0
debug: Removing unused variable aggregate%concat%10#0
debug: Removing unused variable aggregate%concat%11#0
debug: Removing unused variable aggregate%concat%12#0
debug: Removing unused variable aggregate%concat%13#0
debug: Removing unused variable aggregate%concat%14#0
debug: Removing unused variable aggregate%concat%15#0
debug: Removing unused variable aggregate%concat%16#0
debug: Removing unused variable aggregate%concat%17#0
debug: Removing unused variable aggregate%len_u16%13#0
debug: Removing unused variable aggregate%as_bytes%36#0
debug: Removing unused variable aggregate%offset_as_uint16%18#0
debug: Removing unused variable aggregate%head%56#0
debug: Removing unused variable aggregate%data_length%18#0
debug: Removing unused variable aggregate%current_tail_offset%18#0
debug: Removing unused variable aggregate%as_bytes%37#0
debug: Removing unused variable aggregate%offset_as_uint16%19#0
debug: Removing unused variable aggregate%head%57#0
debug: Removing unused variable aggregate%data_length%19#0
debug: Removing unused variable aggregate%current_tail_offset%19#0
debug: Removing unused variable aggregate%as_bytes%38#0
debug: Removing unused variable aggregate%offset_as_uint16%20#0
debug: Removing unused variable aggregate%head%58#0
debug: Removing unused variable aggregate%data_length%20#0
debug: Removing unused variable aggregate%current_tail_offset%20#0
debug: Removing unused variable aggregate%as_bytes%39#0
debug: Removing unused variable aggregate%offset_as_uint16%21#0
debug: Removing unused variable aggregate%head%59#0
debug: Removing unused variable aggregate%data_length%21#0
debug: Removing unused variable aggregate%current_tail_offset%21#0
debug: Removing unused variable aggregate%as_bytes%40#0
debug: Removing unused variable aggregate%offset_as_uint16%22#0
debug: Removing unused variable aggregate%head%60#0
debug: Removing unused variable aggregate%data_length%22#0
debug: Removing unused variable aggregate%current_tail_offset%22#0
debug: Removing unused variable aggregate%as_bytes%41#0
debug: Removing unused variable aggregate%offset_as_uint16%23#0
debug: Removing unused variable aggregate%head%61#0
debug: Removing unused variable aggregate%concat%18#0
debug: Removing unused variable aggregate%concat%19#0
debug: Removing unused variable aggregate%concat%20#0
debug: Removing unused variable aggregate%concat%21#0
debug: Removing unused variable aggregate%concat%22#0
debug: Removing unused variable aggregate%concat%23#0
debug: Removing unused variable aggregate%as_bytes%42#0
debug: Removing unused variable array_of_array#0
debug: Removing unused variable tmp%0#3
debug: Removing unused variable aggregate%as_bytes%43#0
debug: Removing unused variable aggregate%len_u16%15#0
debug: Removing unused variable aggregate%head%62#0
debug: Removing unused variable aggregate%len_u16%16#0
debug: Removing unused variable aggregate%head%63#0
debug: Removing unused variable aggregate%total_length%2#0
debug: Removing unused variable aggregate%lt%4#0
debug: Removing unused variable aggregate%item_offset_offset%2#0
debug: Removing unused variable aggregate%head%64#0
debug: Removing unused variable aggregate%total_length%4#0
debug: Removing unused variable aggregate%lt%7#0
debug: Removing unused variable aggregate%item_offset_offset%4#0
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable aggregate%write_offset_with_length_header%0#0
debug: Removing unused variable aggregate%head%65#0
debug: Removing unused variable aggregate%head%66#0
debug: Removing unused variable aggregate%head%67#0
debug: Removing unused variable aggregate%head%68#0
debug: Removing unused variable aggregate%head%69#0
debug: Removing unused variable array_of_array#5
debug: Removing unused variable tmp%0#4
debug: Removing unused variable aggregate%head%71#0
debug: Removing unused variable aggregate%head%72#0
debug: Removing unused variable aggregate%write_offset%1#0
debug: Removing unused variable array_of_array#6
debug: Removing unused variable tmp%1#4
debug: Removing unused variable aggregate%bytes_offset%2#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable aggregate%write_offset%2#0
debug: Removing unused variable aggregate%updated_array%6#0
debug: Removing unused variable aggregate%write_offset%3#0
debug: Removing unused variable array_of_array#7
debug: Removing unused variable tmp%2#4
debug: Removing unused variable aggregate%write_offset%4#0
debug: Removing unused variable aggregate%write_offset_with_length_header%1#0
debug: Removing unused variable dynamic_uint8_array#6
debug: Removing unused variable tmp%0#5
debug: Removing unused variable aggregate%head%73#0
debug: Removing unused variable static_uint8_array#0
debug: Removing unused variable aggregate%write_offset%5#0
debug: Removing unused variable static_uint8_array#1
debug: Removing unused variable tmp%1#5
debug: Removing unused variable aggregate%get_bit%24#0
debug: Removing unused variable aggregate%array_length%11#0
debug: Removing unused variable aggregate%lt%9#0
debug: Removing unused variable aggregate%array_length%12#0
debug: Removing unused variable aggregate%lt%10#0
debug: Removing unused variable aggregate%write_offset_with_length_header%2#0
debug: Removing unused variable dynamic_bool_array#7
debug: Removing unused variable tmp%5#4
debug: Removing unused variable aggregate%get_bit%26#0
debug: Removing unused variable aggregate%set_bit%24#0
debug: Removing unused variable static_bool_array#0
debug: Removing unused variable aggregate%lt%11#0
debug: Removing unused variable aggregate%lt%12#0
debug: Removing unused variable static_bool_array#1
debug: Removing unused variable tmp%9#2
debug: Removing unused variable aggregate%length%4#0
debug: Removing unused variable aggregate%length_uint16%4#0
debug: Removing unused variable aggregate%encoded_value%4#0
debug: Removing unused variable aggregate%length%5#0
debug: Removing unused variable aggregate%length_uint16%5#0
debug: Removing unused variable aggregate%encoded_value%5#0
debug: Removing unused variable aggregate%head%76#0
debug: Removing unused variable aggregate%head%77#0
debug: Removing unused variable aggregate%offset_as_uint16%24#0
debug: Removing unused variable aggregate%head%78#0
debug: Removing unused variable aggregate%data_length%24#0
debug: Removing unused variable aggregate%current_tail_offset%24#0
debug: Removing unused variable aggregate%as_bytes%48#0
debug: Removing unused variable aggregate%offset_as_uint16%25#0
debug: Removing unused variable aggregate%head%79#0
debug: Removing unused variable aggregate%concat%24#0
debug: Removing unused variable test_struct#0
debug: Removing unused variable test_struct#1
debug: Removing unused variable test_struct#2
debug: Removing unused variable aggregate%head%80#0
debug: Removing unused variable aggregate%head%81#0
debug: Removing unused variable aggregate%offset_as_uint16%26#0
debug: Removing unused variable aggregate%head%82#0
debug: Removing unused variable aggregate%data_length%26#0
debug: Removing unused variable aggregate%current_tail_offset%26#0
debug: Removing unused variable aggregate%offset_as_uint16%27#0
debug: Removing unused variable aggregate%head%83#0
debug: Removing unused variable aggregate%concat%26#0
debug: Removing unused variable aggregate%concat%27#0
debug: Removing unused variable tmp%9#3
debug: Removing unused variable aggregate%length%6#0
debug: Removing unused variable aggregate%length_uint16%6#0
debug: Removing unused variable aggregate%encoded_value%6#0
debug: Removing unused variable aggregate%item_offset%5#0
debug: Removing unused variable aggregate%data_up_to_item%0#0
debug: Removing unused variable aggregate%updated_data%2#0
debug: Removing unused variable aggregate%next_item_offset%0#0
debug: Removing unused variable aggregate%total_length%7#0
debug: Removing unused variable aggregate%data_beyond_item%0#0
debug: Removing unused variable aggregate%updated_data%3#0
debug: Removing unused variable aggregate%old_value_length%0#0
debug: Removing unused variable aggregate%new_value_length%0#0
debug: Removing unused variable aggregate%tail_offset%0#0
debug: Removing unused variable aggregate%tail_offset%1#0
debug: Removing unused variable aggregate%tail_offset%2#0
debug: Removing unused variable aggregate%tail_offset_bytes%0#0
debug: Removing unused variable test_struct#3
debug: Removing unused variable aggregate%length%7#0
debug: Removing unused variable aggregate%length_uint16%7#0
debug: Removing unused variable aggregate%encoded_value%7#0
debug: Removing unused variable aggregate%item_offset%6#0
debug: Removing unused variable aggregate%data_up_to_item%1#0
debug: Removing unused variable test_struct#4
debug: Removing unused variable aggregate%head%84#0
debug: Removing unused variable aggregate%head%85#0
debug: Removing unused variable aggregate%offset_as_uint16%28#0
debug: Removing unused variable aggregate%head%86#0
debug: Removing unused variable aggregate%data_length%28#0
debug: Removing unused variable aggregate%current_tail_offset%28#0
debug: Removing unused variable aggregate%offset_as_uint16%29#0
debug: Removing unused variable aggregate%head%87#0
debug: Removing unused variable aggregate%concat%28#0
debug: Removing unused variable aggregate%concat%29#0
debug: Removing unused variable tmp%16#1
debug: Removing unused variable aggregate%head%88#0
debug: Removing unused variable aggregate%head%89#0
debug: Removing unused variable concat%0#3
debug: Removing unused variable add%0#2
debug: Removing unused variable as_u16_bytes%0#2
debug: Removing unused variable array_concat_tuple#0
debug: Removing unused variable aggregate%len_u16%17#0
debug: Removing unused variable aggregate%head%90#0
debug: Removing unused variable aggregate%head%91#0
debug: Removing unused variable aggregate%head%92#0
debug: Removing unused variable aggregate%head%93#0
debug: Removing unused variable tmp%1#7
debug: Removing unused variable aggregate%head%94#0
debug: Removing unused variable concat%1#3
debug: Removing unused variable extract_uint16%1#1
debug: Removing unused variable add%1#1
debug: Removing unused variable as_u16_bytes%1#1
debug: Removing unused variable array_concat_tuple#1
debug: Removing unused variable aggregate%len_u16%18#0
debug: Removing unused variable aggregate%head%95#0
debug: Removing unused variable aggregate%head%96#0
debug: Removing unused variable aggregate%head%97#0
debug: Removing unused variable aggregate%head%98#0
debug: Removing unused variable aggregate%head%99#0
debug: Removing unused variable tmp%3#6
debug: Removing unused variable aggregate%len_u16%19#0
debug: Removing unused variable aggregate%offset_as_uint16%30#0
debug: Removing unused variable aggregate%head%100#0
debug: Removing unused variable aggregate%concat%30#0
debug: Removing unused variable aggregate%len_u16%20#0
debug: Removing unused variable aggregate%offset_as_uint16%31#0
debug: Removing unused variable aggregate%head%101#0
debug: Removing unused variable aggregate%concat%31#0
debug: Removing unused variable extract_to_end%0#3
debug: Removing unused variable aggregate%array_length%13#0
debug: Removing unused variable start_of_tail%0#1
debug: Removing unused variable total_length%1#2
debug: Removing unused variable data%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.mutation.Arc4MutationContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.mutation.Arc4MutationContract
arc4_types/mutation.py:34 debug: auto reserving slots in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_bit, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_byte_length_head, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_bits, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_byte_length_head, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_replace_byte_length_head, []
debug: auto reserving slots in _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.mutation.Arc4MutationContract
arc4_types/mutation.py:45 debug: auto reserving slots in test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program using strategy 'root_operand'
debug: Coalescing dynamic_bool_array#1 with [dynamic_bool_array#2, dynamic_bool_array#3, dynamic_bool_array#4, dynamic_bool_array#5]
debug: Coalescing extract_to_end%0#1 with [extract_to_end%0#2]
debug: Coalescing dynamic_string_array#1 with [dynamic_string_array#2, dynamic_string_array#4, dynamic_string_array#5, dynamic_string_array#6, dynamic_string_array#7]
debug: Coalescing tmp%5#2 with [tmp%5#3]
debug: Coalescing array_of_array#1 with [array_of_array#2, array_of_array#3, array_of_array#4]
debug: Coalescing resulted in 39 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.mutation.Arc4MutationContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_bit
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_bit using strategy 'root_operand'
debug: Coalescing result#0 with [result#1, result#2]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_bit
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_byte_length_head using strategy 'root_operand'
debug: Coalescing head_and_tail#0 with [head_and_tail#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_bits
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_bits using strategy 'root_operand'
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_bits
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_byte_length_head using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_replace_byte_length_head using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head using strategy 'root_operand'
debug: Coalescing array_head_and_tail#0 with [array_head_and_tail#5, array_head_and_tail#1, array_head_and_tail#2]
debug: Coalescing head_offset#0 with [head_offset#6, head_offset#1, head_offset#3]
debug: Coalescing tail_offset#0 with [tail_offset#5, tail_offset#1, tail_offset#2]
debug: Coalescing resulted in 27 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: loc: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#0, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#0, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#0, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4MutationContract.ir/Arc4MutationContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4MutationContract.ir/Arc4MutationContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[5]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[7]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[10]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_block@0.ops[12]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_block@0.ops[26]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[28]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[31]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_block@0.ops[33]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_block@0.ops[40]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[42]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[45]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_block@0.ops[47]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_block@0.ops[57]: 'l-store-copy aggregate%encoded_bool%2#0 0'
debug: Replaced main_block@0.ops[59]: 'v-load aggregate%encoded_bool%2#0' with 'l-load aggregate%encoded_bool%2#0'
debug: Inserted main_block@0.ops[62]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_block@0.ops[64]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_block@0.ops[74]: 'l-store-copy aggregate%encoded_bool%3#0 0'
debug: Replaced main_block@0.ops[76]: 'v-load aggregate%encoded_bool%3#0' with 'l-load aggregate%encoded_bool%3#0'
debug: Inserted main_block@0.ops[79]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_block@0.ops[81]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_block@0.ops[86]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_block@0.ops[88]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_block@0.ops[94]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[96]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[99]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_block@0.ops[101]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_block@0.ops[109]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced main_block@0.ops[111]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted main_block@0.ops[127]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[129]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[132]: 'l-store-copy tmp%7#2 0'
debug: Replaced main_block@0.ops[134]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_block@0.ops[140]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[142]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[149]: 'l-store-copy aggregate%lt%2#0 0'
debug: Replaced main_block@0.ops[151]: 'v-load aggregate%lt%2#0' with 'l-load aggregate%lt%2#0'
debug: Inserted main_block@0.ops[157]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[159]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[162]: 'l-store-copy tmp%8#2 0'
debug: Replaced main_block@0.ops[164]: 'v-load tmp%8#2' with 'l-load tmp%8#2'
debug: Inserted main_block@0.ops[169]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_block@0.ops[171]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_block@0.ops[174]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_block@0.ops[176]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_block@0.ops[181]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_block@0.ops[183]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_block@0.ops[186]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_block@0.ops[188]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_block@0.ops[193]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_block@0.ops[195]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_block@0.ops[201]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[203]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[206]: 'l-store-copy tmp%1#3 0'
debug: Replaced main_block@0.ops[208]: 'v-load tmp%1#3' with 'l-load tmp%1#3'
debug: Inserted main_block@0.ops[214]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[216]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[219]: 'l-store-copy tmp%2#3 0'
debug: Replaced main_block@0.ops[221]: 'v-load tmp%2#3' with 'l-load tmp%2#3'
debug: Inserted main_block@0.ops[229]: 'l-store-copy aggregate%array_length%6#0 0'
debug: Replaced main_block@0.ops[231]: 'v-load aggregate%array_length%6#0' with 'l-load aggregate%array_length%6#0'
debug: Inserted main_block@0.ops[240]: 'l-store-copy aggregate%item_length%2#0 0'
debug: Replaced main_block@0.ops[242]: 'v-load aggregate%item_length%2#0' with 'l-load aggregate%item_length%2#0'
debug: Inserted main_block@0.ops[250]: 'l-store-copy aggregate%item%2#0 0'
debug: Replaced main_block@0.ops[252]: 'v-load aggregate%item%2#0' with 'l-load aggregate%item%2#0'
debug: Inserted main_block@0.ops[259]: 'l-store-copy extract_uint16%0#1 0'
debug: Replaced main_block@0.ops[261]: 'v-load extract_uint16%0#1' with 'l-load extract_uint16%0#1'
debug: Inserted main_block@0.ops[264]: 'l-store-copy add%0#1 0'
debug: Replaced main_block@0.ops[266]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_block@0.ops[268]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_block@0.ops[270]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_block@0.ops[281]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[283]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[286]: 'l-store-copy tmp%4#3 0'
debug: Replaced main_block@0.ops[288]: 'v-load tmp%4#3' with 'l-load tmp%4#3'
debug: Inserted main_block@0.ops[296]: 'l-store-copy aggregate%array_length%9#0 0'
debug: Replaced main_block@0.ops[298]: 'v-load aggregate%array_length%9#0' with 'l-load aggregate%array_length%9#0'
debug: Inserted main_block@0.ops[307]: 'l-store-copy aggregate%item_length%4#0 0'
debug: Replaced main_block@0.ops[309]: 'v-load aggregate%item_length%4#0' with 'l-load aggregate%item_length%4#0'
debug: Inserted main_block@0.ops[317]: 'l-store-copy aggregate%item%4#0 0'
debug: Replaced main_block@0.ops[319]: 'v-load aggregate%item%4#0' with 'l-load aggregate%item%4#0'
debug: Inserted main_block@0.ops[327]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[329]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[332]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_block@0.ops[334]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_block@0.ops[344]: 'l-store-copy tmp%9#4 0'
debug: Replaced main_block@0.ops[346]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_block@0.ops[122]: 'l-store-copy data%0#0 0'
debug: Replaced main_block@0.ops[125]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted main_block@0.ops[146]: 'l-store-copy aggregate%array_length%4#0 0'
debug: Replaced main_block@0.ops[149]: 'v-load aggregate%array_length%4#0' with 'l-load aggregate%array_length%4#0'
debug: Inserted main_block@0.ops[238]: 'l-store-copy aggregate%item_offset%2#0 0'
debug: Replaced main_block@0.ops[241]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted main_block@0.ops[275]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_block@0.ops[278]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_block@0.ops[280]: 'l-store-copy replace%0#1 0'
debug: Replaced main_block@0.ops[283]: 'v-load replace%0#1' with 'l-load replace%0#1'
debug: Inserted main_block@0.ops[308]: 'l-store-copy aggregate%item_offset%4#0 0'
debug: Replaced main_block@0.ops[311]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted main_block@0.ops[328]: 'l-store-copy aggregate%updated_array%3#0 0'
debug: Replaced main_block@0.ops[331]: 'v-load aggregate%updated_array%3#0' with 'l-load aggregate%updated_array%3#0'
debug: Inserted main_block@0.ops[347]: 'l-store-copy hello_world_concat#0 0'
debug: Replaced main_block@0.ops[350]: 'v-load hello_world_concat#0' with 'l-load hello_world_concat#0'
debug: Inserted main_block@0.ops[15]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[18]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[21]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced main_block@0.ops[25]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted main_block@0.ops[54]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_block@0.ops[58]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_block@0.ops[72]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_block@0.ops[76]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_block@0.ops[108]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[111]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[121]: 'l-store-copy extract_to_end%0#1 0'
debug: Replaced main_block@0.ops[124]: 'v-load extract_to_end%0#1' with 'l-load extract_to_end%0#1'
debug: Inserted main_block@0.ops[123]: 'l-store-copy total_length%1#1 1'
debug: Replaced main_block@0.ops[127]: 'v-load total_length%1#1' with 'l-load total_length%1#1'
debug: Inserted main_block@0.ops[233]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[236]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[256]: 'l-store-copy aggregate%item_head_tail_length%2#0 0'
debug: Replaced main_block@0.ops[260]: 'v-load aggregate%item_head_tail_length%2#0' with 'l-load aggregate%item_head_tail_length%2#0'
debug: Inserted main_block@0.ops[305]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[308]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[328]: 'l-store-copy aggregate%item_head_tail_length%4#0 0'
debug: Replaced main_block@0.ops[332]: 'v-load aggregate%item_head_tail_length%4#0' with 'l-load aggregate%item_head_tail_length%4#0'
debug: Inserted main_block@0.ops[19]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[24]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[245]: 'l-store-copy aggregate%array_head_and_tail%2#0 0'
debug: Replaced main_block@0.ops[250]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted main_block@0.ops[267]: 'l-store-copy aggregate%item%2#0 0'
debug: Replaced main_block@0.ops[271]: 'v-load aggregate%item%2#0' with 'l-load aggregate%item%2#0'
debug: Inserted main_block@0.ops[319]: 'l-store-copy aggregate%array_head_and_tail%4#0 0'
debug: Replaced main_block@0.ops[324]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_block@0.ops[120]: 'l-store-copy start_of_tail%0#0 0'
debug: Replaced main_block@0.ops[128]: 'v-load start_of_tail%0#0' with 'l-load start_of_tail%0#0'
debug: Inserted main_block@0.ops[8]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[15]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[18]: 'l-store-copy extract_to_end%0#1 1'
debug: Replaced main_block@0.ops[27]: 'v-load extract_to_end%0#1' with 'l-load extract_to_end%0#1'
debug: Inserted main_block@0.ops[34]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[41]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[49]: 'l-store-copy dynamic_bool_array#1 0'
debug: Replaced main_block@0.ops[56]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[106]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[113]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[176]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[183]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[221]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[228]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[235]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[242]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[310]: 'l-store-copy array_of_array#1 0'
debug: Replaced main_block@0.ops[317]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[245]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced main_block@0.ops[254]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted main_block@0.ops[321]: 'l-store-copy aggregate%array_head_and_tail%4#0 1'
debug: Replaced main_block@0.ops[330]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_block@0.ops[185]: 'l-store-copy dynamic_string_array#1 1'
debug: Replaced main_block@0.ops[196]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[198]: 'l-store-copy dynamic_string_array#1 1'
debug: Replaced main_block@0.ops[209]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[263]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced main_block@0.ops[273]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted main_block@0.ops[265]: 'l-store-copy aggregate%item_offset%2#0 2'
debug: Replaced main_block@0.ops[275]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted main_block@0.ops[341]: 'l-store-copy aggregate%array_head_and_tail%4#0 1'
debug: Replaced main_block@0.ops[351]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_block@0.ops[343]: 'l-store-copy aggregate%item_offset%4#0 2'
debug: Replaced main_block@0.ops[353]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted main_block@0.ops[116]: 'l-store-copy extract_to_end%0#1 1'
debug: Replaced main_block@0.ops[128]: 'v-load extract_to_end%0#1' with 'l-load extract_to_end%0#1'
debug: Inserted main_block@0.ops[159]: 'l-store-copy dynamic_string_array#1 0'
debug: Replaced main_block@0.ops[171]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[58]: 'l-store-copy dynamic_bool_array#1 1'
debug: Replaced main_block@0.ops[75]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[77]: 'l-store-copy dynamic_bool_array#1 1'
debug: Replaced main_block@0.ops[94]: 'v-load dynamic_bool_array#1' with 'l-load dynamic_bool_array#1'
debug: Inserted main_block@0.ops[126]: 'l-store-copy aggregate%array_length%1#0 1'
debug: Replaced main_block@0.ops[144]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted main_block@0.ops[289]: 'l-store-copy concat%2#1 1'
debug: Replaced main_block@0.ops[309]: 'v-load concat%2#1' with 'l-load concat%2#1'
debug: Inserted main_block@0.ops[121]: 'l-store-copy dynamic_string_array#1 1'
debug: Replaced main_block@0.ops[143]: 'v-load dynamic_string_array#1' with 'l-load dynamic_string_array#1'
debug: Inserted main_block@0.ops[335]: 'l-store-copy array_of_array#1 1'
debug: Replaced main_block@0.ops[371]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted main_block@0.ops[256]: 'l-store-copy array_of_array#1 1'
debug: Replaced main_block@0.ops[316]: 'v-load array_of_array#1' with 'l-load array_of_array#1'
debug: Inserted dynamic_array_pop_bit_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[37]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[39]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[25]: 'l-store-copy popped_location#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[28]: 'v-load popped_location#0' with 'l-load popped_location#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[44]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[47]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[54]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[57]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[49]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[53]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[28]: 'l-store-copy result#0 1'
debug: Replaced dynamic_array_pop_bit_block@0.ops[32]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[30]: 'l-store-copy popped_location#0 2'
debug: Replaced dynamic_array_pop_bit_block@0.ops[34]: 'v-load popped_location#0' with 'l-load popped_location#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[21]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[28]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[11]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_bit_block@0.ops[24]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[25]: 'l-store-copy length_minus_1#0 1'
debug: Replaced dynamic_array_pop_bit_block@0.ops[41]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[40]: 'l-store-copy result#0 1'
debug: Replaced dynamic_array_pop_bit_block@0.ops[57]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_bit_block@0.ops[35]: 'l-store-copy popped#0 3'
debug: Replaced dynamic_array_pop_bit_block@0.ops[64]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[16]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[18]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[50]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[52]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[38]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[41]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[44]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[47]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[61]: 'l-store-copy tmp%13#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[64]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[66]: 'l-store-copy updated#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[69]: 'v-load updated#0' with 'l-load updated#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[23]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[26]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[25]: 'l-store-copy tmp%5#0 1'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[29]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[35]: 'l-store-copy popped_header_offset#0 2'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[38]: 'v-load popped_header_offset#0' with 'l-load popped_header_offset#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[19]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[23]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[13]: 'l-store-copy popped_header_offset#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[21]: 'v-load popped_header_offset#0' with 'l-load popped_header_offset#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[23]: 'l-store-copy popped_offset#0 1'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[31]: 'v-load popped_offset#0' with 'l-load popped_offset#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[31]: 'l-store-copy head_and_tail#0 2'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[36]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[63]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[71]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[56]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[66]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[59]: 'l-store-copy length_minus_1#0 1'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[68]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[37]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[48]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[42]: 'l-store-copy tmp%7#0 2'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[55]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[22]: 'l-store-copy popped_header_offset#0 2'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[40]: 'v-load popped_header_offset#0' with 'l-load popped_header_offset#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[34]: 'l-store-copy popped_offset#0 4'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[53]: 'v-load popped_offset#0' with 'l-load popped_offset#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[37]: 'l-store-copy popped#0 3'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[83]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted dynamic_array_pop_byte_length_head_block@0.ops[11]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_byte_length_head_block@0.ops[64]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[8]: 'l-store-copy new_array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[10]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[33]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[35]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[16]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[19]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[39]: 'l-store-copy required_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[44]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[48]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[30]: 'l-store-copy current_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[23]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy new_array_length#0 1'
debug: Replaced dynamic_array_concat_bits_block@0.ops[34]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[23]: 'l-store-copy result#0 2'
debug: Replaced dynamic_array_concat_bits_block@0.ops[50]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[3]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[5]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[11]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[10]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_bits_after_if_else@2.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced dynamic_array_concat_bits_after_if_else@2.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_top@3.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_bits_while_top@3.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[3]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[20]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[22]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[33]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[35]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[53]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[55]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[58]: 'l-store-copy tmp%13#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[60]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[68]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[70]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[37]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[40]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[50]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[53]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[66]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[69]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[45]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[49]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[10]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[30]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[41]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[9]: 'l-store-copy new_length#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[20]: 'v-load new_length#0' with 'l-load new_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[19]: 'l-store-copy header_end#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[30]: 'v-load header_end#0' with 'l-load header_end#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[46]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[58]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[31]: 'l-store-copy header_end#0 2'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[54]: 'v-load header_end#0' with 'l-load header_end#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[27]: 'l-store-copy tmp%5#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[76]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[22]: 'l-store-copy new_length#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[72]: 'v-load new_length#0' with 'l-load new_length#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[2]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[4]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[32]: 'l-store-copy tmp%4#1 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[34]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[42]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[44]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[59]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[61]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[69]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[71]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[20]: 'l-store-copy tmp%1#1 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[23]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[25]: 'l-store-copy offset_for_index#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[28]: 'v-load offset_for_index#0' with 'l-load offset_for_index#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[30]: 'l-store-copy old_item_length#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[33]: 'v-load old_item_length#0' with 'l-load old_item_length#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[58]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[61]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[69]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[72]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[29]: 'l-store-copy offset_for_index#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[33]: 'v-load offset_for_index#0' with 'l-load offset_for_index#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[53]: 'l-store-copy array_head_and_tail#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[56]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[55]: 'l-store-copy tmp%8#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[59]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[23]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[28]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[12]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[45]: 'l-store-copy array_head_and_tail#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[55]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[54]: 'l-store-copy tmp%7#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[67]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[36]: 'l-store-copy offset_for_index#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[48]: 'v-load offset_for_index#0' with 'l-load offset_for_index#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[10]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[24]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[31]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[47]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[46]: 'l-store-copy old_item_end#0 2'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[66]: 'v-load old_item_end#0' with 'l-load old_item_end#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[14]: 'l-store-copy array_length#0 2'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[78]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_replace_byte_length_head_block@0.ops[5]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_byte_length_head_block@0.ops[84]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_block@0.ops[7]: 'l-store-copy head_offset#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_block@0.ops[10]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_block@0.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_block@0.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[2]: 'l-store-copy tmp%6#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[4]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[15]: 'l-store-copy tmp%9#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[17]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[20]: 'l-store-copy tmp%10#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[23]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[6]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[10]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[15]: 'l-store-copy tail_offset#0 1'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[24]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[1]: 'l-store-copy tail_offset#0 0'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[15]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[11]: 'l-store-copy head_offset#0 3'
debug: Replaced recalculate_head_for_elements_with_byte_length_head_for_body@2.ops[30]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_concat_bits
debug: Found 2 edge set/s for _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
debug: _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head f-stack entry: []
debug: _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head f-stack on first store: ['tmp%0#0', 'head_offset#0', 'tail_offset#0']
arc4_types/mutation.py:34 debug: optimizing TEAL subroutine ops test_cases.arc4_types.mutation.Arc4MutationContract.approval_program() -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_pop_bit(array: bytes) -> uint64, bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_pop_byte_length_head(array: bytes) -> bytes, bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_replace_byte_length_head(array: bytes, new_item: bytes, index: uint64) -> bytes:
debug: Replaced 'Uncover(source_location=INTERNAL:304:10-82, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('array_head_and_tail#0',)), StackDefine(local_ids=('array_head_and_tail#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=INTERNAL:304:10-82, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('old_item_end#0',)), StackDefine(local_ids=('old_item_end#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=INTERNAL:304:10-82, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('tmp%8#0',)), StackDefine(local_ids=('tmp%8#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: optimizing TEAL subroutine ops _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head(array_head_and_tail: bytes, length: uint64, start_at_index: uint64) -> bytes:
arc4_types/mutation.py:34 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.mutation.Arc4MutationContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_pop_bit(array: bytes) -> uint64, bytes:
debug: inlining single reference block dynamic_array_pop_bit_block@0 into dynamic_array_pop_bit
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_pop_byte_length_head(array: bytes) -> bytes, bytes:
debug: inlining single reference block dynamic_array_pop_byte_length_head_block@0 into dynamic_array_pop_byte_length_head
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_bits_block@0 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_if_body@1 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_while_body@4 into dynamic_array_concat_bits_while_top@3
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_after_if_else@2
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_top@3
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_byte_length_head_block@0 into dynamic_array_concat_byte_length_head
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_replace_byte_length_head(array: bytes, new_item: bytes, index: uint64) -> bytes:
debug: inlining single reference block dynamic_array_replace_byte_length_head_block@0 into dynamic_array_replace_byte_length_head
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head(array_head_and_tail: bytes, length: uint64, start_at_index: uint64) -> bytes:
debug: inlining single reference block recalculate_head_for_elements_with_byte_length_head_block@0 into recalculate_head_for_elements_with_byte_length_head
debug: inlining single reference block recalculate_head_for_elements_with_byte_length_head_for_body@2 into recalculate_head_for_elements_with_byte_length_head_for_header@1
debug: removing explicit jump to fall-through block recalculate_head_for_elements_with_byte_length_head_for_header@1
arc4_types/mutation.py:45 debug: optimizing TEAL subroutine ops test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program() -> uint64:
arc4_types/mutation.py:45 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.mutation.Arc4MutationContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.mutable_params2.MutableParams2 at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%8#0 0u) to (! tmp%8#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6 from switch tmp%7#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%7#0] else goto block@8
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6 from goto_nth [block@7][tmp%7#0] else goto block@8 to goto tmp%7#0 ? block@8 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@6
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@9 with block@8 in block@10
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create in test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__
arc4_types/mutable_params2.py:5:6 debug: inlining call to test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding in test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_modify_array%0#0, a#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: encoded_array%2#0, a#2
debug: selected a#2 from equivalence set
debug: Found equivalence set: maybe_modify_array%1#0, a#3
debug: selected a#3 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%8#0 0u) to (! tmp%8#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@5 from switch tmp%7#0 {0u => block@6, * => block@7} to goto_nth [block@6][tmp%7#0] else goto block@7
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@5 from goto_nth [block@6][tmp%7#0] else goto block@7 to goto tmp%7#0 ? block@7 : block@6
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@12 with block@2 in block@13
debug: Merged linear block@12 into block@2
debug: Merged linear block@13 into block@2
debug: Replaced predecessor block@4 with block@3 in block@9
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@10 with block@6 in block@11
debug: Merged linear block@10 into block@6
debug: Merged linear block@11 into block@6
debug: Replaced predecessor block@8 with block@7 in block@9
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3
debug: Removed empty block: block@7
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_modify_array%0#0, a#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: encoded_array%2#0, a#2
debug: selected a#2 from equivalence set
debug: Found equivalence set: maybe_modify_array%1#0, a#3
debug: selected a#3 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a#0, a%out#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0, a#1, a%out#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: encoded_array%0#0, a#2, a%out#2
debug: selected a#2 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint8[])%1#0, a#4, a%out#3
debug: selected a#4 from equivalence set
debug: Found equivalence set: encoded_array%1#0, a#5, a%out#4
debug: selected a#5 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+uint8[])%2#0, a#6, a%out#5
debug: selected a#6 from equivalence set
debug: Found equivalence set: replace%3#0, as_Encoded(len+uint8[])%3#0, a#10, a%out#6
debug: selected a#10 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a%is_original#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Simplified (replace3 concat%3#0 0u as_u16_bytes%3#0) to ((replace2 0) concat%3#0 as_u16_bytes%3#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@3 to goto block@2
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@3 from goto 0u ? block@4 : block@5 to goto block@5
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5 from goto 0u ? block@6 : block@7 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@7 from goto 0u ? block@8 : block@9 to goto block@9
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10 from goto 1u ? block@11 : block@12 to goto block@11
debug: Replacing trivial Phi node: let a%out#12: Encoded(len+uint8[]) = φ(a#1 <- block@2) (a%out#12) with a#1
debug: Deleting Phi assignment: let a%out#12: Encoded(len+uint8[]) = φ(a#1 <- block@2)
debug: Replacing trivial Phi node: let a%out#13: Encoded(len+uint8[]) = φ(a#6 <- block@11) (a%out#13) with a#6
debug: Deleting Phi assignment: let a%out#13: Encoded(len+uint8[]) = φ(a#6 <- block@11)
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Merged linear block@2 into block@1
debug: Replaced predecessor block@3 with block@1 in block@5
debug: Merged linear block@3 into block@1
debug: Replaced predecessor block@11 with block@10 in block@12
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@12 with block@10 in block@13
debug: Merged linear block@12 into block@10
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@4 because it's used by phi nodes
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Not removing empty block block@8 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@4, block@6, block@8
debug: Removed unreachable predecessors from block@5
debug: Removed unreachable predecessors from block@7
debug: Removed unreachable predecessors from block@9
debug: Removing unreachable phi arguments: a#2 <- block@4
debug: Replacing trivial Phi node: let a%out#11: Encoded(len+uint8[]) = φ(a#1 <- block@1) (a%out#11) with a#1
debug: Deleting Phi assignment: let a%out#11: Encoded(len+uint8[]) = φ(a#1 <- block@1)
debug: Removing unreachable phi arguments: a#4 <- block@6
debug: Replacing trivial Phi node: let a%out#10: Encoded(len+uint8[]) = φ(a#1 <- block@5) (a%out#10) with a#1
debug: Deleting Phi assignment: let a%out#10: Encoded(len+uint8[]) = φ(a#1 <- block@5)
debug: Removing unreachable phi arguments: a#5 <- block@8
debug: Replacing trivial Phi node: let a%out#9: Encoded(len+uint8[]) = φ(a#1 <- block@7) (a%out#9) with a#1
debug: Deleting Phi assignment: let a%out#9: Encoded(len+uint8[]) = φ(a#1 <- block@7)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
arc4_types/mutable_params2.py:5:6 debug: inlining call to test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@14 with block@3 in block@15
debug: Merged linear block@14 into block@3
debug: Replaced predecessor block@15 with block@3 in block@11
debug: Merged linear block@15 into block@3
debug: Replaced predecessor block@12 with block@7 in block@13
debug: Merged linear block@12 into block@7
debug: Replaced predecessor block@13 with block@7 in block@11
debug: Merged linear block@13 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a#4
debug: Removing unused variable concat%1#0
debug: Removing unused variable as_u16_bytes%1#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable add%1#0
debug: Removing unused variable extract_uint16%1#0
debug: Removing unused variable a#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@7
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@7 with block@1 in block@9
debug: Merged linear block@7 into block@1
debug: Replaced predecessor block@9 with block@1 in block@13
debug: Merged linear block@9 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.mutable_params2.MutableParams2 at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.mutable_params2.MutableParams2
debug: lowering array IR nodes in clear program of test_cases.arc4_types.mutable_params2.MutableParams2
debug: optimizing approval program of test_cases.arc4_types.mutable_params2.MutableParams2 at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(len+uint8[])%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(len+uint8[])%1#0, encoded_array%1#0
debug: selected aggregate%head%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(len+uint8[])%2#0, a#2
debug: selected a#2 from equivalence set
debug: Found equivalence set: aggregate%head%6#0, aggregate%as_Encoded(len+uint8[])%3#0, encoded_array%3#0
debug: selected aggregate%head%6#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0001
debug: Simplified (concat 0x0001 0x00) to 0x000100
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x0002 0x00) to 0x000200
debug: Simplified (concat 0x000200 0x01) to 0x00020001
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0001
debug: Simplified (concat 0x0001 0x01) to 0x000101
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0003
debug: Simplified (concat 0x0003 0x01) to 0x000301
debug: Simplified (concat 0x000301 0x2a) to 0x0003012a
debug: Simplified (concat 0x0003012a 0x04) to 0x0003012a04
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/mutable_params2.py:7:12-32, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%2#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint8[])%0#0, tmp%0#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(len+uint8[])%0#0, a#5
debug: selected a#5 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(uint8[])%1#0, tmp%2#0
debug: selected aggregate%head%4#0 from equivalence set
debug: Found equivalence set: aggregate%head%5#0, aggregate%as_Encoded(uint8[])%2#0, tmp%3#0
debug: selected aggregate%head%5#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x01) to 0x01
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0003
debug: Simplified (concat 0x0003 0x01) to 0x000301
debug: Simplified (concat 0x000301 0x02) to 0x00030102
debug: Simplified (concat 0x00030102 0x04) to 0x0003010204
debug: Simplified (concat 0x 0x2a) to 0x2a
debug: Simplified (concat 0x 0x04) to 0x04
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutable_params2.py:8:9 debug: constant function call to test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array in algopy.arc4.ARC4Contract.approval_program
arc4_types/mutable_params2.py:12:9 debug: constant function call to test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a%out#7, a#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: a%out#16, a#3
debug: selected a#3 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable a#0
debug: Removing unused variable a#4
debug: Removing unused variable assign_local#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%as_bytes%0#1
debug: Removing unused variable aggregate%len_u16%0#1
debug: Removing unused variable aggregate%head%1#1
debug: Removing unused variable aggregate%head%2#1
debug: Removing unused variable aggregate%head%4#1
debug: Removing unused variable aggregate%head%5#1
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%len_u16%1#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%len_u16%2#0
debug: Removing unused variable a#2
debug: Removing unused variable a#15
debug: Removing unused variable assign_local#1
debug: Removing unused variable aggregate%head%0#1
debug: Removing unused variable aggregate%as_bytes%0#2
debug: Removing unused variable aggregate%len_u16%0#2
debug: Removing unused variable aggregate%head%1#2
debug: Removing unused variable aggregate%head%2#2
debug: Removing unused variable aggregate%head%4#2
debug: Removing unused variable aggregate%head%5#2
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%len_u16%3#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%head%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x000100 0x01) // on error: max array length exceeded to 0x00010001
debug: Simplified (extract_uint16 0x000100 0u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified ((replace2 0) 0x00010001 0x0002) to 0x00020001
debug: Simplified (concat 0x000100 0x2a) // on error: max array length exceeded to 0x0001002a
debug: Simplified (extract_uint16 0x000100 0u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified ((replace2 0) 0x0001002a 0x0002) to 0x0002002a
debug: Simplified (concat 0x000101 0x01) // on error: max array length exceeded to 0x00010101
debug: Simplified (extract_uint16 0x000101 0u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#1) to 0x0002
debug: Simplified ((replace2 0) 0x00010101 0x0002) to 0x00020101
debug: Simplified (concat 0x000101 0x2a) // on error: max array length exceeded to 0x0001012a
debug: Simplified (extract_uint16 0x000101 0u) to 1u
debug: Simplified (+ 1u 1u) to 2u
debug: Simplified ((extract 6 2) as_bytes%2#1) to 0x0002
debug: Simplified ((replace2 0) 0x0001012a 0x0002) to 0x0002012a
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@12 from goto 1u ? block@13 : block@14 to goto block@13
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@19 from goto 0u ? block@20 : block@21 to goto block@21
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@12 with block@3 in block@13
debug: Merged linear block@12 into block@3
debug: Replaced predecessor block@13 with block@3 in block@15
debug: Merged linear block@13 into block@3
debug: Replaced predecessor block@18 with block@17 in block@19
debug: Merged linear block@18 into block@17
debug: Replaced predecessor block@19 with block@17 in block@21
debug: Merged linear block@19 into block@17
debug: Replaced predecessor block@21 with block@17 in block@22
debug: Merged linear block@21 into block@17
debug: Replaced predecessor block@25 with block@24 in block@11
debug: Merged linear block@25 into block@24
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@16 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@14, block@20
debug: Removed unreachable predecessors from block@15
debug: Removed unreachable predecessors from block@22
debug: Removing unreachable phi arguments: a#10 <- block@14
debug: Replacing trivial Phi node: let a#11: Encoded(len+uint8[]) = φ(a#9 <- block@3) (a#11) with a#9
debug: Deleting Phi assignment: let a#11: Encoded(len+uint8[]) = φ(a#9 <- block@3)
debug: Removing unreachable phi arguments: a%is_original#0 <- block@14
debug: Replacing trivial Phi node: let a%is_original#4: bool = φ(a%is_original#3 <- block@3) (a%is_original#4) with a%is_original#3
debug: Deleting Phi assignment: let a%is_original#4: bool = φ(a%is_original#3 <- block@3)
debug: Removing unreachable phi arguments: a#10 <- block@14
debug: Replacing trivial Phi node: let a%out#8: Encoded(len+uint8[]) = φ(a#5 <- block@3) (a%out#8) with a#5
debug: Deleting Phi assignment: let a%out#8: Encoded(len+uint8[]) = φ(a#5 <- block@3)
debug: Removing unreachable phi arguments: a#20 <- block@20
debug: Replacing trivial Phi node: let a#22: Encoded(len+uint8[]) = φ(a#21 <- block@17) (a#22) with a#21
debug: Deleting Phi assignment: let a#22: Encoded(len+uint8[]) = φ(a#21 <- block@17)
debug: Removing unreachable phi arguments: a%is_original#8 <- block@20
debug: Replacing trivial Phi node: let a%is_original#9: bool = φ(a%is_original#5 <- block@17) (a%is_original#9) with a%is_original#5
debug: Deleting Phi assignment: let a%is_original#9: bool = φ(a%is_original#5 <- block@17)
debug: Removing unreachable phi arguments: a#16 <- block@20
debug: Replacing trivial Phi node: let a%out#17: Encoded(len+uint8[]) = φ(a#21 <- block@17) (a%out#17) with a#21
debug: Deleting Phi assignment: let a%out#17: Encoded(len+uint8[]) = φ(a#21 <- block@17)
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let as_bytes%2#1: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/mutable_params2.py:18:12-34, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Found equivalence set: as_bytes%0#0, as_bytes%2#1
debug: selected as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%head%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a%is_original#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable a#9
debug: Removing unused variable a%is_original#3
debug: Removing unused variable a%is_original#5
debug: Removing unused variable concat%2#1
debug: Removing unused variable extract_uint16%2#1
debug: Removing unused variable add%2#1
debug: Removing unused variable as_u16_bytes%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0003010204 0x04) // on error: max array length exceeded to 0x000301020404
debug: Simplified (extract_uint16 0x0003010204 0u) to 3u
debug: Simplified (+ 3u 1u) to 4u
debug: Simplified ((extract 6 2) as_bytes%3#0) to 0x0004
debug: Simplified ((replace2 0) 0x000301020404 0x0004) to 0x000401020404
debug: Simplified (concat 0x0002012a 0x04) // on error: max array length exceeded to 0x0002012a04
debug: Simplified (extract_uint16 0x0002012a 0u) to 2u
debug: Simplified (+ 2u 1u) to 3u
debug: Simplified ((extract 6 2) as_bytes%3#1) to 0x0003
debug: Simplified ((replace2 0) 0x0002012a04 0x0003) to 0x0003012a04
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@15 from goto 0u ? block@16 : block@17 to goto block@17
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@22 from goto 1u ? block@23 : block@24 to goto block@23
debug: Replacing trivial Phi node: let a#3: Encoded(len+uint8[]) = φ(a#25 <- block@23) (a#3) with a#25
debug: Deleting Phi assignment: let a#3: Encoded(len+uint8[]) = φ(a#25 <- block@23)
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@15 with block@3 in block@17
debug: Merged linear block@15 into block@3
debug: Replaced predecessor block@22 with block@17 in block@23
debug: Merged linear block@22 into block@17
debug: Replaced predecessor block@23 with block@17 in block@24
debug: Merged linear block@23 into block@17
debug: Replaced predecessor block@24 with block@17 in block@11
debug: Merged linear block@24 into block@17
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@16 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@16
debug: Removed unreachable predecessors from block@17
debug: Removing unreachable phi arguments: a#14 <- block@16
debug: Replacing trivial Phi node: let a#1: Encoded(len+uint8[]) = φ(a#5 <- block@3) (a#1) with a#5
debug: Deleting Phi assignment: let a#1: Encoded(len+uint8[]) = φ(a#5 <- block@3)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a#5
debug: Removing unused variable concat%3#0
debug: Removing unused variable extract_uint16%3#0
debug: Removing unused variable add%3#0
debug: Removing unused variable as_bytes%3#0
debug: Removing unused variable as_u16_bytes%3#0
debug: Removing unused variable a#14
debug: Removing unused variable a#21
debug: Removing unused variable concat%3#1
debug: Removing unused variable extract_uint16%3#1
debug: Removing unused variable add%3#1
debug: Removing unused variable as_bytes%3#1
debug: Removing unused variable as_u16_bytes%3#1
debug: Removing unused variable a#25
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x00020001 0x00020001) to 1u
debug: Simplified (== 0x0003012a04 0x0003012a04) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@17 with block@3 in block@11
debug: Merged linear block@17 into block@3
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 6/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 6, ending loop
debug: optimizing clear program of test_cases.arc4_types.mutable_params2.MutableParams2 at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.mutable_params2.MutableParams2
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.mutable_params2.MutableParams2
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0 with [test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#1, test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#2]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/MutableParams2.ir/MutableParams2.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/MutableParams2.ir/MutableParams2.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_rebinding_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_rebinding_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_rebinding_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_rebinding_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_rebinding_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_rebinding_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_rebinding_route@3.ops[15]: 'l-store-copy test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_rebinding_route@3.ops[17]: 'v-load test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0'
debug: Inserted main_bare_routing@6.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_bare_routing@6.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@7.ops[1]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@7.ops[3]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main___algopy_default_create@7.ops[5]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@7.ops[7]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@7.ops[10]: 'l-store-copy test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@7.ops[12]: 'v-load test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@10.ops[1]: 'l-store-copy test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@10.ops[3]: 'v-load test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__%0#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_array_rebinding_route@3 -> main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for main___algopy_default_create@7 -> main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for main_after_if_else@10 -> main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11: tmp%0#0
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11 into main_after_if_else@10
debug: inlining single reference block main___algopy_default_create@7 into main_bare_routing@6
debug: removing explicit jump to fall-through block main_after_if_else@10
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies for inlining
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutable_params.py:29:9 debug: inlining call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, my_array#0, my_array_copy#0, my_array_copy_2#0, my_array_copy_3#0, originals.2#0
debug: selected my_array#0 from equivalence set
debug: Found equivalence set: tmp%3#0, my_struct#0, my_struct_copy#0
debug: selected my_struct#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, my_array#1
debug: selected my_array#1 from equivalence set
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: other_routine%2#0, my_array#2, originals.0#0
debug: selected my_array#2 from equivalence set
debug: Found equivalence set: other_routine%3#0, my_struct#1
debug: selected my_struct#1 from equivalence set
debug: Found equivalence set: other_routine%0#0, t#0
debug: selected t#0 from equivalence set
debug: Found equivalence set: other_routine%1#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: other_routine_2%1#0, my_array_copy_2#1
debug: selected my_array_copy_2#1 from equivalence set
debug: Found equivalence set: other_routine_2%0#0, my_array_copy_2#2
debug: selected my_array_copy_2#2 from equivalence set
debug: Found equivalence set: array_item%4#0, reinterpret_biguint%8#0
debug: selected array_item%4#0 from equivalence set
debug: Found equivalence set: other_routine_2%3#0, my_array_copy_2#3, originals.1#0
debug: selected my_array_copy_2#3 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%10#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%3#0, my_array#3
debug: selected my_array#3 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%4#0, my_array_copy_2#4
debug: selected my_array_copy_2#4 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%5#0, my_array_copy_3#1
debug: selected my_array_copy_3#1 from equivalence set
debug: Found equivalence set: array_item%6#0, reinterpret_biguint%12#0
debug: selected array_item%6#0 from equivalence set
debug: Found equivalence set: array_item%7#0, reinterpret_biguint%14#0
debug: selected array_item%7#0 from equivalence set
debug: Found equivalence set: array_item%8#0, reinterpret_biguint%16#0
debug: selected array_item%8#0 from equivalence set
debug: Found equivalence set: array_item%9#0, reinterpret_biguint%18#0
debug: selected array_item%9#0 from equivalence set
debug: Found equivalence set: array_item%10#0, reinterpret_biguint%20#0
debug: selected array_item%10#0 from equivalence set
debug: Found equivalence set: array_item%11#0, reinterpret_biguint%22#0
debug: selected array_item%11#0 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%6#0, my_array#4, foo.0#0, foo.1#0, foo.2#0
debug: selected my_array#4 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%7#0, my_array_copy_2#5
debug: selected my_array_copy_2#5 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%8#0, my_array_copy_3#2
debug: selected my_array_copy_3#2 from equivalence set
debug: Found equivalence set: array_item%12#0, reinterpret_biguint%24#0
debug: selected array_item%12#0 from equivalence set
debug: Found equivalence set: array_item%13#0, reinterpret_biguint%26#0
debug: selected array_item%13#0 from equivalence set
debug: Found equivalence set: array_item%14#0, reinterpret_biguint%28#0
debug: selected array_item%14#0 from equivalence set
debug: Found equivalence set: array_item%15#0, reinterpret_biguint%30#0
debug: selected array_item%15#0 from equivalence set
debug: Found equivalence set: array_item%16#0, reinterpret_biguint%32#0
debug: selected array_item%16#0 from equivalence set
debug: Found equivalence set: array_item%17#0, reinterpret_biguint%34#0
debug: selected array_item%17#0 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%9#0, foo.0#1
debug: selected foo.0#1 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%10#0, foo.1#1
debug: selected foo.1#1 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%11#0, foo.2#1
debug: selected foo.2#1 from equivalence set
debug: Found equivalence set: array_item%18#0, reinterpret_biguint%36#0
debug: selected array_item%18#0 from equivalence set
debug: Found equivalence set: array_item%19#0, reinterpret_biguint%38#0
debug: selected array_item%19#0 from equivalence set
debug: Found equivalence set: array_item%20#0, reinterpret_biguint%40#0
debug: selected array_item%20#0 from equivalence set
debug: Found equivalence set: tmp%35#0, nested#0
debug: selected nested#0 from equivalence set
debug: Copy propagation made 56 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%11#0
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Removing unused variable reinterpret_biguint%13#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%19#0
debug: Removing unused variable reinterpret_biguint%21#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%25#0
debug: Removing unused variable reinterpret_biguint%27#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%33#0
debug: Removing unused variable reinterpret_biguint%35#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%39#0
debug: Removing unused variable reinterpret_biguint%41#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== my_array#2 my_array#2) to 1u
debug: Simplified (== my_array_copy_2#3 my_array_copy_2#3) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== my_array#0 my_array#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Happy") with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:39:20-35, ir_type=Encoded(len+utf8[]), name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%11#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, my_array#0, my_array_copy#0, my_array_copy_2#0, my_array_copy_3#0, originals.2#0
debug: selected my_array#0 from equivalence set
debug: Found equivalence set: tmp%3#0, my_struct#0, my_struct_copy#0
debug: selected my_struct#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, my_array#1
debug: selected my_array#1 from equivalence set
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: other_routine%2#0, my_array#2, originals.0#0
debug: selected my_array#2 from equivalence set
debug: Found equivalence set: other_routine%3#0, my_struct#1
debug: selected my_struct#1 from equivalence set
debug: Found equivalence set: other_routine%0#0, t#0
debug: selected t#0 from equivalence set
debug: Found equivalence set: other_routine%1#0, f#0
debug: selected f#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: other_routine_2%1#0, my_array_copy_2#1
debug: selected my_array_copy_2#1 from equivalence set
debug: Found equivalence set: other_routine_2%0#0, my_array_copy_2#2
debug: selected my_array_copy_2#2 from equivalence set
debug: Found equivalence set: array_item%4#0, reinterpret_biguint%8#0
debug: selected array_item%4#0 from equivalence set
debug: Found equivalence set: other_routine_2%3#0, my_array_copy_2#3, originals.1#0
debug: selected my_array_copy_2#3 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%10#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%3#0, my_array#3
debug: selected my_array#3 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%4#0, my_array_copy_2#4
debug: selected my_array_copy_2#4 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%5#0, my_array_copy_3#1
debug: selected my_array_copy_3#1 from equivalence set
debug: Found equivalence set: array_item%6#0, reinterpret_biguint%12#0
debug: selected array_item%6#0 from equivalence set
debug: Found equivalence set: array_item%7#0, reinterpret_biguint%14#0
debug: selected array_item%7#0 from equivalence set
debug: Found equivalence set: array_item%8#0, reinterpret_biguint%16#0
debug: selected array_item%8#0 from equivalence set
debug: Found equivalence set: array_item%9#0, reinterpret_biguint%18#0
debug: selected array_item%9#0 from equivalence set
debug: Found equivalence set: array_item%10#0, reinterpret_biguint%20#0
debug: selected array_item%10#0 from equivalence set
debug: Found equivalence set: array_item%11#0, reinterpret_biguint%22#0
debug: selected array_item%11#0 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%6#0, my_array#4, foo.0#0, foo.1#0, foo.2#0
debug: selected my_array#4 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%7#0, my_array_copy_2#5
debug: selected my_array_copy_2#5 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%8#0, my_array_copy_3#2
debug: selected my_array_copy_3#2 from equivalence set
debug: Found equivalence set: array_item%12#0, reinterpret_biguint%24#0
debug: selected array_item%12#0 from equivalence set
debug: Found equivalence set: array_item%13#0, reinterpret_biguint%26#0
debug: selected array_item%13#0 from equivalence set
debug: Found equivalence set: array_item%14#0, reinterpret_biguint%28#0
debug: selected array_item%14#0 from equivalence set
debug: Found equivalence set: array_item%15#0, reinterpret_biguint%30#0
debug: selected array_item%15#0 from equivalence set
debug: Found equivalence set: array_item%16#0, reinterpret_biguint%32#0
debug: selected array_item%16#0 from equivalence set
debug: Found equivalence set: array_item%17#0, reinterpret_biguint%34#0
debug: selected array_item%17#0 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%9#0, foo.0#1
debug: selected foo.0#1 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%10#0, foo.1#1
debug: selected foo.1#1 from equivalence set
debug: Found equivalence set: mutate_tuple_items_and_reassign%11#0, foo.2#1
debug: selected foo.2#1 from equivalence set
debug: Found equivalence set: array_item%18#0, reinterpret_biguint%36#0
debug: selected array_item%18#0 from equivalence set
debug: Found equivalence set: array_item%19#0, reinterpret_biguint%38#0
debug: selected array_item%19#0 from equivalence set
debug: Found equivalence set: array_item%20#0, reinterpret_biguint%40#0
debug: selected array_item%20#0 from equivalence set
debug: Found equivalence set: tmp%35#0, nested#0
debug: selected nested#0 from equivalence set
debug: Copy propagation made 56 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%11#0
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Removing unused variable reinterpret_biguint%13#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%19#0
debug: Removing unused variable reinterpret_biguint%21#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%25#0
debug: Removing unused variable reinterpret_biguint%27#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%33#0
debug: Removing unused variable reinterpret_biguint%35#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%39#0
debug: Removing unused variable reinterpret_biguint%41#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== my_array#2 my_array#2) to 1u
debug: Simplified (== my_array_copy_2#3 my_array_copy_2#3) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== my_array#0 my_array#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Happy") with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:39:20-35, ir_type=Encoded(len+utf8[]), name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%11#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array#0, array%out#0
debug: selected array#0 from equivalence set
debug: Found equivalence set: struct#0, struct%out#0
debug: selected struct#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, array#1, array%out#1
debug: selected array#1 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, struct#2, struct%out#1
debug: selected struct#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%is_original#0
debug: Removing unused variable struct%is_original#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@2 to goto block@1
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@2 from goto 1u ? block@3 : block@4 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array#0, array%out#0, copy#0
debug: selected array#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, array#1, array%out#1
debug: selected array#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%is_original#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@2 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arrays.0#0, arrays.0%out#0
debug: selected arrays.0#0 from equivalence set
debug: Found equivalence set: arrays.1#0, arrays.1%out#0
debug: selected arrays.1#0 from equivalence set
debug: Found equivalence set: arrays.2#0, arrays.2%out#0
debug: selected arrays.2#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, arrays.0#1, arrays.0%out#1
debug: selected arrays.0#1 from equivalence set
debug: Found equivalence set: updated_array%1#0, arrays.1#2, arrays.1%out#1
debug: selected arrays.1#2 from equivalence set
debug: Found equivalence set: updated_array%2#0, arrays.2#3, arrays.2%out#1
debug: selected arrays.2#3 from equivalence set
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%1#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%2#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: updated_array%3#0, arrays.0#5, arrays.0%out#2, arrays.0#9, arrays.0%out#3
debug: selected arrays.0#5 from equivalence set
debug: Found equivalence set: updated_array%4#0, arrays.1#6, arrays.1%out#2, arrays.1#9, arrays.1%out#3
debug: selected arrays.1#6 from equivalence set
debug: Found equivalence set: updated_array%5#0, arrays.2#7, arrays.2%out#2, arrays.2#9, arrays.2%out#3
debug: selected arrays.2#7 from equivalence set
debug: Found equivalence set: updated_array%6#0, arrays.0#14, arrays.0%out#4
debug: selected arrays.0#14 from equivalence set
debug: Found equivalence set: updated_array%7#0, arrays.1#15, arrays.1%out#4
debug: selected arrays.1#15 from equivalence set
debug: Found equivalence set: updated_array%8#0, arrays.2#16, arrays.2%out#4
debug: selected arrays.2#16 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%3#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: array_item%4#0, reinterpret_biguint%4#0
debug: selected array_item%4#0 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%5#0
debug: selected array_item%5#0 from equivalence set
debug: Copy propagation made 33 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 1u ? block@1 : block@2 to goto block@1
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@2 from goto 1u ? block@3 : block@4 to goto block@3
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@4 from goto 1u ? block@5 : block@6 to goto block@5
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@6 from goto 1u ? block@7 : block@8 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@8 from goto 1u ? block@9 : block@10 to goto block@9
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10 from goto 1u ? block@11 : block@12 to goto block@11
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@13 from goto 0u ? block@14 : block@15 to goto block@15
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@15 from goto 0u ? block@16 : block@17 to goto block@17
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@17 from goto 0u ? block@18 : block@19 to goto block@19
debug: Replacing trivial Phi node: let arrays.0%out#14: Encoded(uint8[4]) = φ(arrays.0#1 <- block@1) (arrays.0%out#14) with arrays.0#1
debug: Deleting Phi assignment: let arrays.0%out#14: Encoded(uint8[4]) = φ(arrays.0#1 <- block@1)
debug: Replacing trivial Phi node: let arrays.1%out#13: Encoded(uint8[4]) = φ(arrays.1#2 <- block@3) (arrays.1%out#13) with arrays.1#2
debug: Deleting Phi assignment: let arrays.1%out#13: Encoded(uint8[4]) = φ(arrays.1#2 <- block@3)
debug: Replacing trivial Phi node: let arrays.2%out#12: Encoded(uint8[4]) = φ(arrays.2#3 <- block@5) (arrays.2%out#12) with arrays.2#3
debug: Deleting Phi assignment: let arrays.2%out#12: Encoded(uint8[4]) = φ(arrays.2#3 <- block@5)
debug: Replacing trivial Phi node: let arrays.0%out#11: Encoded(uint8[4]) = φ(arrays.0#5 <- block@7) (arrays.0%out#11) with arrays.0#5
debug: Deleting Phi assignment: let arrays.0%out#11: Encoded(uint8[4]) = φ(arrays.0#5 <- block@7)
debug: Replacing trivial Phi node: let arrays.0%out#17: Encoded(uint8[4]) = φ(arrays.0#5 <- block@13, arrays.0#5 <- block@14) (arrays.0%out#17) with arrays.0#5
debug: Deleting Phi assignment: let arrays.0%out#17: Encoded(uint8[4]) = φ(arrays.0#5 <- block@13, arrays.0#5 <- block@14)
debug: Replacing trivial Phi node: let arrays.0%out#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@12, arrays.0#5 <- block@19) (arrays.0%out#8) with arrays.0#5
debug: Deleting Phi assignment: let arrays.0%out#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@12, arrays.0#5 <- block@19)
debug: Replacing trivial Phi node: let arrays.0%out#8: Encoded(uint8[4]) = φ(arrays.0#5 <- block@12, arrays.0#5 <- block@19) (arrays.0%out#8) with arrays.0#5
debug: Replacing trivial Phi node: let arrays.1%out#10: Encoded(uint8[4]) = φ(arrays.1#6 <- block@9) (arrays.1%out#10) with arrays.1#6
debug: Deleting Phi assignment: let arrays.1%out#10: Encoded(uint8[4]) = φ(arrays.1#6 <- block@9)
debug: Replacing trivial Phi node: let arrays.1%out#16: Encoded(uint8[4]) = φ(arrays.1#6 <- block@15, arrays.1#6 <- block@16) (arrays.1%out#16) with arrays.1#6
debug: Deleting Phi assignment: let arrays.1%out#16: Encoded(uint8[4]) = φ(arrays.1#6 <- block@15, arrays.1#6 <- block@16)
debug: Replacing trivial Phi node: let arrays.1%out#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@12, arrays.1#6 <- block@19) (arrays.1%out#8) with arrays.1#6
debug: Deleting Phi assignment: let arrays.1%out#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@12, arrays.1#6 <- block@19)
debug: Replacing trivial Phi node: let arrays.1%out#8: Encoded(uint8[4]) = φ(arrays.1#6 <- block@12, arrays.1#6 <- block@19) (arrays.1%out#8) with arrays.1#6
debug: Replacing trivial Phi node: let arrays.2%out#9: Encoded(uint8[4]) = φ(arrays.2#7 <- block@11) (arrays.2%out#9) with arrays.2#7
debug: Deleting Phi assignment: let arrays.2%out#9: Encoded(uint8[4]) = φ(arrays.2#7 <- block@11)
debug: Replacing trivial Phi node: let arrays.2%out#15: Encoded(uint8[4]) = φ(arrays.2#7 <- block@17, arrays.2#7 <- block@18) (arrays.2%out#15) with arrays.2#7
debug: Deleting Phi assignment: let arrays.2%out#15: Encoded(uint8[4]) = φ(arrays.2#7 <- block@17, arrays.2#7 <- block@18)
debug: Replacing trivial Phi node: let arrays.2%out#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@12, arrays.2#7 <- block@19) (arrays.2%out#8) with arrays.2#7
debug: Deleting Phi assignment: let arrays.2%out#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@12, arrays.2#7 <- block@19)
debug: Replacing trivial Phi node: let arrays.2%out#8: Encoded(uint8[4]) = φ(arrays.2#7 <- block@12, arrays.2#7 <- block@19) (arrays.2%out#8) with arrays.2#7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@12
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@12 with block@0 in block@20
debug: Replaced predecessor block@12 with block@0 in block@13
debug: Merged linear block@12 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@14
debug: Removed empty block: block@15
debug: Removed empty block: block@16
debug: Removed empty block: block@17
debug: Removed empty block: block@18
debug: Not removing empty block block@19 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%7#0: uint64 = (+ start#0 1u) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:141:29-38, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%10#0: uint64 = (+ start#0 2u) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:142:29-38, ir_type=uint64, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%25#0: uint64 = (+ start#0 6u) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:156:29-38, ir_type=uint64, name='tmp%19', version=0),)
debug: Replacing redundant declaration let tmp%28#0: uint64 = (+ start#0 7u) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:157:29-38, ir_type=uint64, name='tmp%21', version=0),)
debug: Replacing redundant declaration let tmp%31#0: uint64 = (+ start#0 8u) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:158:29-38, ir_type=uint64, name='tmp%23', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%7#0
debug: selected tmp%1#0 from equivalence set
debug: Found equivalence set: tmp%3#0, tmp%10#0
debug: selected tmp%3#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tmp%25#0
debug: selected tmp%19#0 from equivalence set
debug: Found equivalence set: tmp%21#0, tmp%28#0
debug: selected tmp%21#0 from equivalence set
debug: Found equivalence set: tmp%23#0, tmp%31#0
debug: selected tmp%23#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%16#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@19 with block@13 in block@20
debug: Merged linear block@19 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(tuple_item%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract
debug: optimizing approval program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(uint8[4])%0#0, my_array#0
debug: selected my_array#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%0#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%1#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%2#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))%0#0, my_struct#0
debug: selected my_struct#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, my_array#1
debug: selected my_array#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%0#0
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%1#0
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%2#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, tuple_item%0#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+utf8[])%2#0, tmp%8#0
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%4#0, array_item%3#0
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, tuple_item%1#0
debug: selected aggregate%substring3%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%5#0, array_item%4#0
debug: selected aggregate%encoded_element%5#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%6#0, array_item%5#0
debug: selected aggregate%encoded_element%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%7#0, array_item%6#0
debug: selected aggregate%encoded_element%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%8#0, array_item%7#0
debug: selected aggregate%encoded_element%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%9#0, array_item%8#0
debug: selected aggregate%encoded_element%9#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%10#0, array_item%9#0
debug: selected aggregate%encoded_element%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%11#0, array_item%10#0
debug: selected aggregate%encoded_element%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%12#0, array_item%11#0
debug: selected aggregate%encoded_element%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%13#0, array_item%12#0
debug: selected aggregate%encoded_element%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%14#0, array_item%13#0
debug: selected aggregate%encoded_element%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%15#0, array_item%14#0
debug: selected aggregate%encoded_element%15#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%16#0, array_item%15#0
debug: selected aggregate%encoded_element%16#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%17#0, array_item%16#0
debug: selected aggregate%encoded_element%17#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%18#0, array_item%17#0
debug: selected aggregate%encoded_element%18#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%19#0, array_item%18#0
debug: selected aggregate%encoded_element%19#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%20#0, array_item%19#0
debug: selected aggregate%encoded_element%20#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%21#0, array_item%20#0
debug: selected aggregate%encoded_element%21#0 from equivalence set
debug: Found equivalence set: aggregate%head%8#0, aggregate%as_Encoded(uint8[4])%1#0, nested#0
debug: selected nested#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, tuple_item%2#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Copy propagation made 35 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(aggregate%extract%0#0)
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(aggregate%extract%0#0)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine%4#0: bool, other_routine%5#0: bool, other_routine%6#0: Encoded(uint8[4]), other_routine%7#0: Encoded(bool1,uint8,(len+utf8[]),(len+utf8[]))) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(my_array#0, my_struct#0)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(my_array#2, my_array_copy_2#3, my_array#0, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (other_routine_2%4#0: Encoded(uint8[4]), other_routine_2%5#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(aggregate%extract%0#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x01) to 0x01
debug: Simplified (concat 0x01 0x02) to 0x0102
debug: Simplified (concat 0x0102 0x03) to 0x010203
debug: Simplified (concat 0x010203 0x04) to 0x01020304
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (len "Happy") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0005
debug: Simplified (concat 0x0005 "Happy") to 0x00054861707079
debug: Simplified (len "Days") to 4u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0004
debug: Simplified (concat 0x0004 "Days") to 0x000444617973
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified (concat 0x80 0x32) to 0x8032
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0006
debug: Simplified (concat 0x8032 0x0006) to 0x80320006
debug: Simplified (len 0x00054861707079) to 7u
debug: Simplified (+ 6u 7u) to 13u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000d
debug: Simplified (concat 0x80320006 0x000d) to 0x80320006000d
debug: Simplified (concat 0x80320006000d 0x00054861707079) to 0x80320006000d00054861707079
debug: Simplified (concat 0x80320006000d00054861707079 0x000444617973) to 0x80320006000d00054861707079000444617973
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (replace3 0x01020304 2u 0x05) // on error: index access is out of bounds to 0x01020504
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (extract3 0x01020304 2u 1u) // on error: index access is out of bounds to 0x03
debug: Simplified (b== 0x03 0x03) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (extract3 0x01020504 2u 1u) // on error: index access is out of bounds to 0x05
debug: Simplified (b== 0x05 0x05) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (len "AARRGH!") to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0007
debug: Simplified (concat 0x0007 "AARRGH!") to 0x000741415252474821
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (extract3 0x01020304 1u 1u) // on error: index access is out of bounds to 0x02
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified (extract_uint16 0x80320006000d00054861707079000444617973 2u) to 6u
debug: Simplified (extract_uint16 0x80320006000d00054861707079000444617973 4u) to 13u
debug: Simplified (substring3 0x80320006000d00054861707079000444617973 6u 13u) to 0x00054861707079
debug: Simplified (== 0x00054861707079 0x00054861707079) to 1u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (concat 0x my_array#4) to my_array#4
debug: Simplified (extract3 my_array#2 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array#2) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_2#2 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array_copy_2#2) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_2#3 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array_copy_2#3) // on error: index access is out of bounds
debug: Simplified (extract3 my_array#3 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array#3) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_2#4 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array_copy_2#4) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_3#1 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array_copy_3#1) // on error: index access is out of bounds
debug: Simplified (extract3 my_array#3 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array#3) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_2#4 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array_copy_2#4) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_3#1 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array_copy_3#1) // on error: index access is out of bounds
debug: Simplified (extract3 my_array#4 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array#4) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_2#5 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array_copy_2#5) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_3#2 0u 1u) // on error: index access is out of bounds to ((extract 0 1) my_array_copy_3#2) // on error: index access is out of bounds
debug: Simplified (extract3 my_array#4 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array#4) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_2#5 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array_copy_2#5) // on error: index access is out of bounds
debug: Simplified (extract3 my_array_copy_3#2 1u 1u) // on error: index access is out of bounds to ((extract 1 1) my_array_copy_3#2) // on error: index access is out of bounds
debug: Simplified (extract3 foo.0#1 1u 1u) // on error: index access is out of bounds to ((extract 1 1) foo.0#1) // on error: index access is out of bounds
debug: Simplified (extract3 foo.1#1 1u 1u) // on error: index access is out of bounds to ((extract 1 1) foo.1#1) // on error: index access is out of bounds
debug: Simplified (extract3 foo.2#1 1u 1u) // on error: index access is out of bounds to ((extract 1 1) foo.2#1) // on error: index access is out of bounds
debug: Simplified (extract3 my_array#4 0u 4u) to ((extract 0 4) my_array#4)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%updated_array%0#0, array#1
debug: selected array#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%updated_data%2#0, struct#2
debug: selected struct#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (len "AARRGH!") to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0007
debug: Simplified (concat 0x0007 "AARRGH!") to 0x000741415252474821
debug: Simplified (len 0x000741415252474821) to 9u
debug: Simplified (replace3 array#0 1u 0x05) // on error: index access is out of bounds to ((replace2 1) array#0 0x05) // on error: index access is out of bounds
debug: Simplified (replace3 aggregate%updated_data%1#0 4u aggregate%tail_offset_bytes%0#0) to ((replace2 4) aggregate%updated_data%1#0 aggregate%tail_offset_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%tail_offset%0#0: uint64 = (extract_uint16 struct#0 4u) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:127:8-42, ir_type=uint64, name='aggregate%next_item_offset%0', version=0),)
debug: Found equivalence set: aggregate%next_item_offset%0#0, aggregate%tail_offset%0#0
debug: selected aggregate%next_item_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%updated_array%0#0, array#1
debug: selected array#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (replace3 array#0 0u 0x0a) // on error: index access is out of bounds to ((replace2 0) array#0 0x0a) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%uint8%0#0, aggregate%as_Encoded(uint8)%0#0, tmp%0#0
debug: selected aggregate%uint8%0#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, arrays.0#1
debug: selected arrays.0#1 from equivalence set
debug: Found equivalence set: aggregate%uint8%1#0, aggregate%as_Encoded(uint8)%1#0, tmp%2#0
debug: selected aggregate%uint8%1#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, arrays.1#2
debug: selected arrays.1#2 from equivalence set
debug: Found equivalence set: aggregate%uint8%2#0, aggregate%as_Encoded(uint8)%2#0, tmp%4#0
debug: selected aggregate%uint8%2#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%2#0, arrays.2#3
debug: selected arrays.2#3 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%0#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%4#0, array_item%1#0
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%5#0, array_item%2#0
debug: selected aggregate%encoded_element%5#0 from equivalence set
debug: Found equivalence set: aggregate%uint8%3#0, aggregate%as_Encoded(uint8)%3#0, tmp%14#0
debug: selected aggregate%uint8%3#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%3#0, arrays.0#5
debug: selected arrays.0#5 from equivalence set
debug: Found equivalence set: aggregate%uint8%4#0, aggregate%as_Encoded(uint8)%4#0, tmp%16#0
debug: selected aggregate%uint8%4#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%4#0, arrays.1#6
debug: selected arrays.1#6 from equivalence set
debug: Found equivalence set: aggregate%uint8%5#0, aggregate%as_Encoded(uint8)%5#0, tmp%18#0
debug: selected aggregate%uint8%5#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%5#0, arrays.2#7
debug: selected arrays.2#7 from equivalence set
debug: Found equivalence set: aggregate%uint8%6#0, aggregate%as_Encoded(uint8)%6#0, tmp%20#0
debug: selected aggregate%uint8%6#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%6#0, arrays.0#14
debug: selected arrays.0#14 from equivalence set
debug: Found equivalence set: aggregate%uint8%7#0, aggregate%as_Encoded(uint8)%7#0, tmp%22#0
debug: selected aggregate%uint8%7#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%7#0, arrays.1#15
debug: selected arrays.1#15 from equivalence set
debug: Found equivalence set: aggregate%uint8%8#0, aggregate%as_Encoded(uint8)%8#0, tmp%24#0
debug: selected aggregate%uint8%8#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%8#0, arrays.2#16
debug: selected arrays.2#16 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%12#0, array_item%3#0
debug: selected aggregate%encoded_element%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%13#0, array_item%4#0
debug: selected aggregate%encoded_element%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%14#0, array_item%5#0
debug: selected aggregate%encoded_element%14#0 from equivalence set
debug: Copy propagation made 24 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable aggregate%encoded_element%6#0
debug: Removing unused variable aggregate%encoded_element%7#0
debug: Removing unused variable aggregate%encoded_element%8#0
debug: Removing unused variable aggregate%encoded_element%9#0
debug: Removing unused variable aggregate%encoded_element%10#0
debug: Removing unused variable aggregate%encoded_element%11#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%bytes_offset%2#0
debug: Removing unused variable aggregate%bytes_offset%6#0
debug: Removing unused variable aggregate%bytes_offset%7#0
debug: Removing unused variable aggregate%bytes_offset%8#0
debug: Removing unused variable aggregate%bytes_offset%9#0
debug: Removing unused variable aggregate%bytes_offset%10#0
debug: Removing unused variable aggregate%bytes_offset%11#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (extract3 aggregate%val_as_bytes%0#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%0#0)
debug: Simplified (replace3 arrays.0#0 0u aggregate%uint8%0#0) // on error: index access is out of bounds to ((replace2 0) arrays.0#0 aggregate%uint8%0#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%1#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%1#0)
debug: Simplified (replace3 arrays.1#0 0u aggregate%uint8%1#0) // on error: index access is out of bounds to ((replace2 0) arrays.1#0 aggregate%uint8%1#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%2#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%2#0)
debug: Simplified (replace3 arrays.2#0 0u aggregate%uint8%2#0) // on error: index access is out of bounds to ((replace2 0) arrays.2#0 aggregate%uint8%2#0) // on error: index access is out of bounds
debug: Simplified (extract3 arrays.0#1 0u 1u) // on error: index access is out of bounds to ((extract 0 1) arrays.0#1) // on error: index access is out of bounds
debug: Simplified (extract3 arrays.1#2 0u 1u) // on error: index access is out of bounds to ((extract 0 1) arrays.1#2) // on error: index access is out of bounds
debug: Simplified (extract3 arrays.2#3 0u 1u) // on error: index access is out of bounds to ((extract 0 1) arrays.2#3) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%3#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%3#0)
debug: Simplified (replace3 arrays.0#1 1u aggregate%uint8%3#0) // on error: index access is out of bounds to ((replace2 1) arrays.0#1 aggregate%uint8%3#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%4#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%4#0)
debug: Simplified (replace3 arrays.1#2 1u aggregate%uint8%4#0) // on error: index access is out of bounds to ((replace2 1) arrays.1#2 aggregate%uint8%4#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%5#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%5#0)
debug: Simplified (replace3 arrays.2#3 1u aggregate%uint8%5#0) // on error: index access is out of bounds to ((replace2 1) arrays.2#3 aggregate%uint8%5#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%6#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%6#0)
debug: Simplified (replace3 arrays.0#5 1u aggregate%uint8%6#0) // on error: index access is out of bounds to ((replace2 1) arrays.0#5 aggregate%uint8%6#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%7#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%7#0)
debug: Simplified (replace3 arrays.1#6 1u aggregate%uint8%7#0) // on error: index access is out of bounds to ((replace2 1) arrays.1#6 aggregate%uint8%7#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%val_as_bytes%8#0 7u 1u) to ((extract 7 1) aggregate%val_as_bytes%8#0)
debug: Simplified (replace3 arrays.2#7 1u aggregate%uint8%8#0) // on error: index access is out of bounds to ((replace2 1) arrays.2#7 aggregate%uint8%8#0) // on error: index access is out of bounds
debug: Simplified (extract3 arrays.0#14 1u 1u) // on error: index access is out of bounds to ((extract 1 1) arrays.0#14) // on error: index access is out of bounds
debug: Simplified (extract3 arrays.1#15 1u 1u) // on error: index access is out of bounds to ((extract 1 1) arrays.1#15) // on error: index access is out of bounds
debug: Simplified (extract3 arrays.2#16 1u 1u) // on error: index access is out of bounds to ((extract 1 1) arrays.2#16) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: biguint = (itob start#0) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:140:23-35, ir_type=bytes[8], name='aggregate%val_as_bytes%0', version=0),)
debug: Replacing redundant declaration let tmp%8#0: biguint = (itob tmp%1#0) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:141:23-39, ir_type=bytes[8], name='aggregate%val_as_bytes%1', version=0),)
debug: Replacing redundant declaration let tmp%11#0: biguint = (itob tmp%3#0) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:142:23-39, ir_type=bytes[8], name='aggregate%val_as_bytes%2', version=0),)
debug: Replacing redundant declaration let tmp%26#0: biguint = (itob tmp%19#0) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:156:23-39, ir_type=bytes[8], name='aggregate%val_as_bytes%6', version=0),)
debug: Replacing redundant declaration let tmp%29#0: biguint = (itob tmp%21#0) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:157:23-39, ir_type=bytes[8], name='aggregate%val_as_bytes%7', version=0),)
debug: Replacing redundant declaration let tmp%32#0: biguint = (itob tmp%23#0) with copy of existing registers (Register(source_location=arc4_types/mutable_params.py:158:23-39, ir_type=bytes[8], name='aggregate%val_as_bytes%8', version=0),)
debug: Found equivalence set: aggregate%val_as_bytes%0#0, tmp%5#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, tmp%8#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, tmp%11#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, tmp%26#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, tmp%29#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%8#0, tmp%32#0
debug: selected aggregate%val_as_bytes%8#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking simple function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2 for inlining (complexity=2 <= threshold=3)
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutable_params.py:52:16 debug: constant function call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
arc4_types/mutable_params.py:63:9 debug: constant function call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
arc4_types/mutable_params.py:75:27 debug: inlining call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2 in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
arc4_types/mutable_params.py:79:9 debug: inlining call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2 in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
arc4_types/mutable_params.py:122:9 debug: inlining call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2 in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array#1, my_array#2
debug: selected array#1 from equivalence set
debug: Found equivalence set: struct#2, my_struct#1
debug: selected struct#2 from equivalence set
debug: Found equivalence set: array#3, other_routine%6#0
debug: selected array#3 from equivalence set
debug: Found equivalence set: struct#5, other_routine%7#0
debug: selected struct#5 from equivalence set
debug: Found equivalence set: array#5, my_array_copy_2#1
debug: selected array#5 from equivalence set
debug: Found equivalence set: array#7, my_array_copy_2#3
debug: selected array#7 from equivalence set
debug: Found equivalence set: my_array#4, nested#0
debug: selected my_array#4 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, array#8, other_routine_2%4#0
debug: selected array#8 from equivalence set
debug: Found equivalence set: array#9, other_routine_2%5#0
debug: selected array#9 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable my_array#0
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable my_struct#0
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable my_array#1
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable aggregate%bytes_offset%2#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable array#0
debug: Removing unused variable struct#0
debug: Removing unused variable aggregate%write_offset%0#1
debug: Removing unused variable aggregate%length%0#1
debug: Removing unused variable aggregate%as_bytes%0#1
debug: Removing unused variable aggregate%length_uint16%0#1
debug: Removing unused variable aggregate%encoded_value%0#1
debug: Removing unused variable aggregate%new_value_length%0#0
debug: Removing unused variable t#0
debug: Removing unused variable f#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%as_bytes%4#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%encoded_value%2#0
debug: Removing unused variable array#2
debug: Removing unused variable struct#3
debug: Removing unused variable aggregate%write_offset%0#2
debug: Removing unused variable array#3
debug: Removing unused variable aggregate%length%0#2
debug: Removing unused variable aggregate%as_bytes%0#2
debug: Removing unused variable aggregate%length_uint16%0#2
debug: Removing unused variable aggregate%encoded_value%0#2
debug: Removing unused variable aggregate%new_value_length%0#1
debug: Removing unused variable struct#5
debug: Removing unused variable other_routine%4#0
debug: Removing unused variable other_routine%5#0
debug: Removing unused variable aggregate%bytes_offset%4#0
debug: Removing unused variable aggregate%encoded_element%4#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable aggregate%extract_uint16%2#0
debug: Removing unused variable aggregate%extract_uint16%3#0
debug: Removing unused variable aggregate%substring3%1#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable array#4
debug: Removing unused variable aggregate%write_offset%0#3
debug: Removing unused variable array#5
debug: Removing unused variable my_array_copy_2#2
debug: Removing unused variable aggregate%bytes_offset%5#0
debug: Removing unused variable array#6
debug: Removing unused variable aggregate%write_offset%0#4
debug: Removing unused variable other_routine_2%2#0
debug: Removing unused variable aggregate%bytes_offset%6#0
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Removing unused variable aggregate%bytes_offset%7#0
debug: Removing unused variable aggregate%bytes_offset%8#0
debug: Removing unused variable aggregate%bytes_offset%9#0
debug: Removing unused variable aggregate%bytes_offset%10#0
debug: Removing unused variable aggregate%bytes_offset%11#0
debug: Removing unused variable aggregate%bytes_offset%12#0
debug: Removing unused variable aggregate%bytes_offset%13#0
debug: Removing unused variable aggregate%bytes_offset%14#0
debug: Removing unused variable aggregate%bytes_offset%15#0
debug: Removing unused variable aggregate%bytes_offset%16#0
debug: Removing unused variable aggregate%bytes_offset%17#0
debug: Removing unused variable aggregate%bytes_offset%18#0
debug: Removing unused variable aggregate%bytes_offset%19#0
debug: Removing unused variable aggregate%bytes_offset%20#0
debug: Removing unused variable aggregate%bytes_offset%21#0
debug: Removing unused variable aggregate%write_offset%0#5
debug: Removing unused variable array#9
debug: Removing unused variable aggregate%updated_data%1#1
debug: Removing unused variable aggregate%tail_offset_bytes%0#1
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Removing unused variable array#8
debug: Removing unused variable aggregate%updated_data%0#1
debug: Removing unused variable aggregate%data_beyond_item%0#1
debug: Removing unused variable aggregate%as_bytes%1#2
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Removing unused variable aggregate%data_up_to_item%0#1
debug: Removing unused variable aggregate%total_length%0#1
debug: Removing unused variable aggregate%tail_offset%2#1
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Removing unused variable aggregate%old_value_length%0#1
debug: Removing unused variable aggregate%tail_offset%1#1
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Removing unused variable aggregate%item_offset%0#1
debug: Removing unused variable aggregate%next_item_offset%0#1
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Not removing unused assignment since source is not marked as pure: let (mutate_tuple_items_and_reassign%0#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%1#0: Encoded(uint8[4]), mutate_tuple_items_and_reassign%2#0: Encoded(uint8[4])) = test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign(array#1, array#7, 0x01020304, 0u, 1u)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((replace2 1) 0x01020504 0x05) // on error: index access is out of bounds to 0x01050504
debug: Simplified (extract_uint16 0x80320006000d00054861707079000444617973 2u) to 6u
debug: Simplified (extract3 0x80320006000d00054861707079000444617973 0u 6u) to 0x80320006000d
debug: Simplified (concat 0x80320006000d 0x000741415252474821) to 0x80320006000d000741415252474821
debug: Simplified (extract_uint16 0x80320006000d00054861707079000444617973 4u) to 13u
debug: Simplified (len 0x80320006000d00054861707079000444617973) to 19u
debug: Simplified (substring3 0x80320006000d00054861707079000444617973 13u 19u) to 0x000444617973
debug: Simplified (concat 0x80320006000d000741415252474821 0x000444617973) to 0x80320006000d000741415252474821000444617973
debug: Simplified (- 13u 6u) to 7u
debug: Simplified (+ 13u 9u) to 22u
debug: Simplified (- 22u 7u) to 15u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#1) to 0x000f
debug: Simplified ((replace2 4) 0x80320006000d000741415252474821000444617973 0x000f) to 0x80320006000f000741415252474821000444617973
debug: Simplified (! 0u) to 1u
debug: Simplified ((extract 1 1) 0x01050504) // on error: index access is out of bounds to 0x05
debug: Simplified (b== 0x05 0x05) to 1u
debug: Simplified (extract_uint16 0x80320006000f000741415252474821000444617973 2u) to 6u
debug: Simplified (extract_uint16 0x80320006000f000741415252474821000444617973 4u) to 15u
debug: Simplified (substring3 0x80320006000f000741415252474821000444617973 6u 15u) to 0x000741415252474821
debug: Simplified (== 0x000741415252474821 0x000741415252474821) to 1u
debug: Simplified ((extract 0 1) 0x01020304) // on error: index access is out of bounds to 0x01
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified ((replace2 0) 0x01020304 0x0a) // on error: index access is out of bounds to 0x0a020304
debug: Simplified ((extract 0 1) 0x0a020304) // on error: index access is out of bounds to 0x0a
debug: Simplified (b== 0x0a 0x0a) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Merged linear block@10 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%new_value_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%write_offset%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable aggregate%write_offset%1#0
debug: Removing unused variable aggregate%write_offset%2#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%bytes_offset%4#0
debug: Removing unused variable aggregate%bytes_offset%5#0
debug: Removing unused variable aggregate%write_offset%3#0
debug: Removing unused variable aggregate%write_offset%4#0
debug: Removing unused variable aggregate%write_offset%5#0
debug: Removing unused variable aggregate%write_offset%6#0
debug: Removing unused variable aggregate%write_offset%7#0
debug: Removing unused variable aggregate%write_offset%8#0
debug: Removing unused variable aggregate%bytes_offset%12#0
debug: Removing unused variable aggregate%bytes_offset%13#0
debug: Removing unused variable aggregate%bytes_offset%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutable_params.py:85:9 debug: constant function call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
arc4_types/mutable_params.py:92:9 debug: constant function call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arrays.0%out#7, mutate_tuple_items_and_reassign%0#0
debug: selected arrays.0%out#7 from equivalence set
debug: Found equivalence set: arrays.1%out#6, mutate_tuple_items_and_reassign%1#0
debug: selected arrays.1%out#6 from equivalence set
debug: Found equivalence set: arrays.2%out#5, mutate_tuple_items_and_reassign%2#0
debug: selected arrays.2%out#5 from equivalence set
debug: Found equivalence set: arrays.0%out#15, my_array#3
debug: selected my_array#3 from equivalence set
debug: Found equivalence set: arrays.1%out#13, my_array_copy_2#4
debug: selected my_array_copy_2#4 from equivalence set
debug: Found equivalence set: arrays.2%out#11, my_array_copy_3#1
debug: selected my_array_copy_3#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arrays.0%out#7
debug: Removing unused variable arrays.1%out#6
debug: Removing unused variable arrays.2%out#5
debug: Removing unused variable array#1
debug: Removing unused variable aggregate%item_offset%0#0
debug: Removing unused variable aggregate%data_up_to_item%0#0
debug: Removing unused variable aggregate%updated_data%0#0
debug: Removing unused variable aggregate%next_item_offset%0#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Removing unused variable aggregate%data_beyond_item%0#0
debug: Removing unused variable aggregate%updated_data%1#0
debug: Removing unused variable aggregate%old_value_length%0#0
debug: Removing unused variable aggregate%tail_offset%1#0
debug: Removing unused variable aggregate%tail_offset%2#0
debug: Removing unused variable aggregate%as_bytes%1#1
debug: Removing unused variable aggregate%tail_offset_bytes%0#0
debug: Removing unused variable struct#2
debug: Removing unused variable tmp%6#0
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable aggregate%extract_uint16%0#0
debug: Removing unused variable aggregate%extract_uint16%1#0
debug: Removing unused variable aggregate%substring3%0#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable aggregate%encoded_element%5#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable array#7
debug: Removing unused variable aggregate%encoded_element%6#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable arrays.0#0
debug: Removing unused variable arrays.1#0
debug: Removing unused variable arrays.2#0
debug: Removing unused variable start#0
debug: Removing unused variable reassign#0
debug: Removing unused variable arrays.0#15
debug: Removing unused variable arrays.1#16
debug: Removing unused variable arrays.2#17
debug: Removing unused variable start#1
debug: Removing unused variable reassign#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (bitlen aggregate%val_as_bytes%0#0) to 0u
debug: Simplified (<= 0u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%0#0) to 0x00
debug: Simplified ((replace2 0) 0x01050504 0x00) // on error: index access is out of bounds to 0x00050504
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (bitlen aggregate%val_as_bytes%1#0) to 1u
debug: Simplified (<= 1u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%1#0) to 0x01
debug: Simplified ((replace2 0) 0x0a020304 0x01) // on error: index access is out of bounds to 0x01020304
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (bitlen aggregate%val_as_bytes%2#0) to 2u
debug: Simplified (<= 2u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%2#0) to 0x02
debug: Simplified ((replace2 0) 0x01020304 0x02) // on error: index access is out of bounds to 0x02020304
debug: Simplified ((extract 0 1) 0x00050504) // on error: index access is out of bounds to 0x00
debug: Simplified (b== 0x00 aggregate%val_as_bytes%0#0) to 1u
debug: Simplified ((extract 0 1) 0x01020304) // on error: index access is out of bounds to 0x01
debug: Simplified (b== 0x01 aggregate%val_as_bytes%1#0) to 1u
debug: Simplified ((extract 0 1) 0x02020304) // on error: index access is out of bounds to 0x02
debug: Simplified (b== 0x02 aggregate%val_as_bytes%2#0) to 1u
debug: Simplified (+ 0u 3u) to 3u
debug: Simplified (bitlen aggregate%val_as_bytes%3#0) to 2u
debug: Simplified (<= 2u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%3#0) to 0x03
debug: Simplified ((replace2 1) 0x00050504 0x03) // on error: index access is out of bounds to 0x00030504
debug: Simplified (+ 0u 4u) to 4u
debug: Simplified (bitlen aggregate%val_as_bytes%4#0) to 3u
debug: Simplified (<= 3u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%4#0) to 0x04
debug: Simplified ((replace2 1) 0x01020304 0x04) // on error: index access is out of bounds to 0x01040304
debug: Simplified (+ 0u 5u) to 5u
debug: Simplified (bitlen aggregate%val_as_bytes%5#0) to 3u
debug: Simplified (<= 3u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%5#0) to 0x05
debug: Simplified ((replace2 1) 0x02020304 0x05) // on error: index access is out of bounds to 0x02050304
debug: Simplified (+ 0u 6u) to 6u
debug: Simplified (bitlen aggregate%val_as_bytes%6#0) to 3u
debug: Simplified (<= 3u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%6#0) to 0x06
debug: Simplified ((replace2 1) 0x00030504 0x06) // on error: index access is out of bounds to 0x00060504
debug: Simplified (+ 0u 7u) to 7u
debug: Simplified (bitlen aggregate%val_as_bytes%7#0) to 3u
debug: Simplified (<= 3u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%7#0) to 0x07
debug: Simplified ((replace2 1) 0x01040304 0x07) // on error: index access is out of bounds to 0x01070304
debug: Simplified (+ 0u 8u) to 8u
debug: Simplified (bitlen aggregate%val_as_bytes%8#0) to 4u
debug: Simplified (<= 4u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%8#0) to 0x08
debug: Simplified ((replace2 1) 0x02050304 0x08) // on error: index access is out of bounds to 0x02080304
debug: Simplified ((extract 1 1) 0x00060504) // on error: index access is out of bounds to 0x06
debug: Simplified (b== 0x06 aggregate%val_as_bytes%6#0) to 1u
debug: Simplified ((extract 1 1) 0x01070304) // on error: index access is out of bounds to 0x07
debug: Simplified (b== 0x07 aggregate%val_as_bytes%7#0) to 1u
debug: Simplified ((extract 1 1) 0x02080304) // on error: index access is out of bounds to 0x08
debug: Simplified (b== 0x08 aggregate%val_as_bytes%8#0) to 1u
debug: Simplified (bitlen aggregate%val_as_bytes%0#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%0#1) to 0x64
debug: Simplified ((replace2 0) 0x01050504 0x64) // on error: index access is out of bounds to 0x64050504
debug: Simplified (+ 100u 1u) to 101u
debug: Simplified (bitlen aggregate%val_as_bytes%1#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%1#1) to 0x65
debug: Simplified ((replace2 0) 0x0a020304 0x65) // on error: index access is out of bounds to 0x65020304
debug: Simplified (+ 100u 2u) to 102u
debug: Simplified (bitlen aggregate%val_as_bytes%2#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%2#1) to 0x66
debug: Simplified ((replace2 0) 0x01020304 0x66) // on error: index access is out of bounds to 0x66020304
debug: Simplified ((extract 0 1) 0x64050504) // on error: index access is out of bounds to 0x64
debug: Simplified (b== 0x64 aggregate%val_as_bytes%0#1) to 1u
debug: Simplified ((extract 0 1) 0x65020304) // on error: index access is out of bounds to 0x65
debug: Simplified (b== 0x65 aggregate%val_as_bytes%1#1) to 1u
debug: Simplified ((extract 0 1) 0x66020304) // on error: index access is out of bounds to 0x66
debug: Simplified (b== 0x66 aggregate%val_as_bytes%2#1) to 1u
debug: Simplified (+ 100u 3u) to 103u
debug: Simplified (bitlen aggregate%val_as_bytes%3#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%3#1) to 0x67
debug: Simplified ((replace2 1) 0x64050504 0x67) // on error: index access is out of bounds to 0x64670504
debug: Simplified (+ 100u 4u) to 104u
debug: Simplified (bitlen aggregate%val_as_bytes%4#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%4#1) to 0x68
debug: Simplified ((replace2 1) 0x65020304 0x68) // on error: index access is out of bounds to 0x65680304
debug: Simplified (+ 100u 5u) to 105u
debug: Simplified (bitlen aggregate%val_as_bytes%5#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%5#1) to 0x69
debug: Simplified ((replace2 1) 0x66020304 0x69) // on error: index access is out of bounds to 0x66690304
debug: Simplified (+ 100u 6u) to 106u
debug: Simplified (bitlen aggregate%val_as_bytes%6#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%6#1) to 0x6a
debug: Simplified ((replace2 1) 0x64670504 0x6a) // on error: index access is out of bounds to 0x646a0504
debug: Simplified (+ 100u 7u) to 107u
debug: Simplified (bitlen aggregate%val_as_bytes%7#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%7#1) to 0x6b
debug: Simplified ((replace2 1) 0x65680304 0x6b) // on error: index access is out of bounds to 0x656b0304
debug: Simplified (+ 100u 8u) to 108u
debug: Simplified (bitlen aggregate%val_as_bytes%8#1) to 7u
debug: Simplified (<= 7u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%8#1) to 0x6c
debug: Simplified ((replace2 1) 0x66690304 0x6c) // on error: index access is out of bounds to 0x666c0304
debug: Simplified ((extract 1 1) 0x646a0504) // on error: index access is out of bounds to 0x6a
debug: Simplified (b== 0x6a aggregate%val_as_bytes%6#1) to 1u
debug: Simplified ((extract 1 1) 0x656b0304) // on error: index access is out of bounds to 0x6b
debug: Simplified (b== 0x6b aggregate%val_as_bytes%7#1) to 1u
debug: Simplified ((extract 1 1) 0x666c0304) // on error: index access is out of bounds to 0x6c
debug: Simplified (b== 0x6c aggregate%val_as_bytes%8#1) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@3 to goto block@2
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@11 from goto 1u ? block@12 : block@13 to goto block@12
debug: Replacing trivial Phi node: let arrays.0%is_original#5: bool = φ(arrays.0%is_original#4 <- block@2) (arrays.0%is_original#5) with arrays.0%is_original#4
debug: Deleting Phi assignment: let arrays.0%is_original#5: bool = φ(arrays.0%is_original#4 <- block@2)
debug: Replacing trivial Phi node: let arrays.1%is_original#8: bool = φ(arrays.1%is_original#5 <- block@2) (arrays.1%is_original#8) with arrays.1%is_original#5
debug: Deleting Phi assignment: let arrays.1%is_original#8: bool = φ(arrays.1%is_original#5 <- block@2)
debug: Replacing trivial Phi node: let arrays.2%is_original#11: bool = φ(arrays.2%is_original#6 <- block@2) (arrays.2%is_original#11) with arrays.2%is_original#6
debug: Deleting Phi assignment: let arrays.2%is_original#11: bool = φ(arrays.2%is_original#6 <- block@2)
debug: Replacing trivial Phi node: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#10 <- block@12) (arrays.0%is_original#11) with arrays.0%is_original#10
debug: Deleting Phi assignment: let arrays.0%is_original#11: bool = φ(arrays.0%is_original#10 <- block@12)
debug: Replacing trivial Phi node: let arrays.1%is_original#17: bool = φ(arrays.1%is_original#14 <- block@12) (arrays.1%is_original#17) with arrays.1%is_original#14
debug: Deleting Phi assignment: let arrays.1%is_original#17: bool = φ(arrays.1%is_original#14 <- block@12)
debug: Replacing trivial Phi node: let arrays.2%is_original#23: bool = φ(arrays.2%is_original#18 <- block@12) (arrays.2%is_original#23) with arrays.2%is_original#18
debug: Deleting Phi assignment: let arrays.2%is_original#23: bool = φ(arrays.2%is_original#18 <- block@12)
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@5
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@11 with block@9 in block@12
debug: Merged linear block@11 into block@9
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Replaced predecessor block@13 with block@9 in block@15
debug: Replaced predecessor block@13 with block@9 in block@14
debug: Merged linear block@13 into block@9
debug: Merged linear block@20 into block@19
debug: Optimizer: Remove Empty Blocks
debug: replaced goto arrays.0%is_original#4 ? block@5 : block@5 with goto block@5
debug: Removed empty block: block@4
debug: replaced goto arrays.1%is_original#5 ? block@7 : block@7 with goto block@7
debug: Removed empty block: block@6
debug: replaced goto arrays.2%is_original#6 ? block@9 : block@9 with goto block@9
debug: Removed empty block: block@8
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@16 because it's used by phi nodes
debug: Not removing empty block block@18 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arrays.0%is_original#0
debug: Removing unused variable arrays.1%is_original#0
debug: Removing unused variable arrays.2%is_original#0
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%bitlen%0#0
debug: Removing unused variable aggregate%no_overflow%0#0
debug: Removing unused variable aggregate%uint8%0#0
debug: Removing unused variable arrays.0#1
debug: Removing unused variable tmp%1#0
debug: Removing unused variable aggregate%val_as_bytes%1#0
debug: Removing unused variable aggregate%bitlen%1#0
debug: Removing unused variable aggregate%no_overflow%1#0
debug: Removing unused variable aggregate%uint8%1#0
debug: Removing unused variable arrays.1#2
debug: Removing unused variable tmp%3#0
debug: Removing unused variable aggregate%val_as_bytes%2#0
debug: Removing unused variable aggregate%bitlen%2#0
debug: Removing unused variable aggregate%no_overflow%2#0
debug: Removing unused variable aggregate%uint8%2#0
debug: Removing unused variable arrays.2#3
debug: Removing unused variable aggregate%encoded_element%3#1
debug: Removing unused variable tmp%6#1
debug: Removing unused variable aggregate%encoded_element%4#0
debug: Removing unused variable tmp%9#1
debug: Removing unused variable aggregate%encoded_element%5#1
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#1
debug: Removing unused variable aggregate%val_as_bytes%3#0
debug: Removing unused variable aggregate%bitlen%3#0
debug: Removing unused variable aggregate%no_overflow%3#0
debug: Removing unused variable aggregate%uint8%3#0
debug: Removing unused variable arrays.0#5
debug: Removing unused variable tmp%15#0
debug: Removing unused variable aggregate%val_as_bytes%4#0
debug: Removing unused variable aggregate%bitlen%4#0
debug: Removing unused variable aggregate%no_overflow%4#0
debug: Removing unused variable aggregate%uint8%4#0
debug: Removing unused variable arrays.1#6
debug: Removing unused variable tmp%17#0
debug: Removing unused variable aggregate%val_as_bytes%5#0
debug: Removing unused variable aggregate%bitlen%5#0
debug: Removing unused variable aggregate%no_overflow%5#0
debug: Removing unused variable aggregate%uint8%5#0
debug: Removing unused variable arrays.2#7
debug: Removing unused variable arrays.0%is_original#4
debug: Removing unused variable arrays.1%is_original#5
debug: Removing unused variable arrays.2%is_original#6
debug: Removing unused variable tmp%19#0
debug: Removing unused variable aggregate%val_as_bytes%6#0
debug: Removing unused variable aggregate%bitlen%6#0
debug: Removing unused variable aggregate%no_overflow%6#0
debug: Removing unused variable aggregate%uint8%6#0
debug: Removing unused variable arrays.0#14
debug: Removing unused variable tmp%21#1
debug: Removing unused variable aggregate%val_as_bytes%7#0
debug: Removing unused variable aggregate%bitlen%7#0
debug: Removing unused variable aggregate%no_overflow%7#0
debug: Removing unused variable aggregate%uint8%7#0
debug: Removing unused variable arrays.1#15
debug: Removing unused variable tmp%23#1
debug: Removing unused variable aggregate%val_as_bytes%8#0
debug: Removing unused variable aggregate%bitlen%8#0
debug: Removing unused variable aggregate%no_overflow%8#0
debug: Removing unused variable aggregate%uint8%8#0
debug: Removing unused variable arrays.2#16
debug: Removing unused variable aggregate%encoded_element%12#1
debug: Removing unused variable tmp%27#1
debug: Removing unused variable aggregate%encoded_element%13#1
debug: Removing unused variable tmp%30#1
debug: Removing unused variable aggregate%encoded_element%14#1
debug: Removing unused variable tmp%33#1
debug: Removing unused variable arrays.0%is_original#6
debug: Removing unused variable arrays.1%is_original#9
debug: Removing unused variable arrays.2%is_original#12
debug: Removing unused variable aggregate%val_as_bytes%0#1
debug: Removing unused variable aggregate%bitlen%0#1
debug: Removing unused variable aggregate%no_overflow%0#1
debug: Removing unused variable aggregate%uint8%0#1
debug: Removing unused variable arrays.0#16
debug: Removing unused variable tmp%1#1
debug: Removing unused variable aggregate%val_as_bytes%1#1
debug: Removing unused variable aggregate%bitlen%1#1
debug: Removing unused variable aggregate%no_overflow%1#1
debug: Removing unused variable aggregate%uint8%1#1
debug: Removing unused variable arrays.1#18
debug: Removing unused variable tmp%3#1
debug: Removing unused variable aggregate%val_as_bytes%2#1
debug: Removing unused variable aggregate%bitlen%2#1
debug: Removing unused variable aggregate%no_overflow%2#1
debug: Removing unused variable aggregate%uint8%2#1
debug: Removing unused variable arrays.2#20
debug: Removing unused variable aggregate%encoded_element%3#2
debug: Removing unused variable tmp%6#2
debug: Removing unused variable aggregate%encoded_element%4#1
debug: Removing unused variable tmp%9#2
debug: Removing unused variable aggregate%encoded_element%5#2
debug: Removing unused variable tmp%12#1
debug: Removing unused variable tmp%13#2
debug: Removing unused variable aggregate%val_as_bytes%3#1
debug: Removing unused variable aggregate%bitlen%3#1
debug: Removing unused variable aggregate%no_overflow%3#1
debug: Removing unused variable aggregate%uint8%3#1
debug: Removing unused variable tmp%15#1
debug: Removing unused variable aggregate%val_as_bytes%4#1
debug: Removing unused variable aggregate%bitlen%4#1
debug: Removing unused variable aggregate%no_overflow%4#1
debug: Removing unused variable aggregate%uint8%4#1
debug: Removing unused variable tmp%17#1
debug: Removing unused variable aggregate%val_as_bytes%5#1
debug: Removing unused variable aggregate%bitlen%5#1
debug: Removing unused variable aggregate%no_overflow%5#1
debug: Removing unused variable aggregate%uint8%5#1
debug: Removing unused variable arrays.0%is_original#10
debug: Removing unused variable arrays.1%is_original#14
debug: Removing unused variable arrays.2%is_original#18
debug: Removing unused variable tmp%19#1
debug: Removing unused variable aggregate%val_as_bytes%6#1
debug: Removing unused variable aggregate%bitlen%6#1
debug: Removing unused variable aggregate%no_overflow%6#1
debug: Removing unused variable aggregate%uint8%6#1
debug: Removing unused variable tmp%21#2
debug: Removing unused variable aggregate%val_as_bytes%7#1
debug: Removing unused variable aggregate%bitlen%7#1
debug: Removing unused variable aggregate%no_overflow%7#1
debug: Removing unused variable aggregate%uint8%7#1
debug: Removing unused variable tmp%23#2
debug: Removing unused variable aggregate%val_as_bytes%8#1
debug: Removing unused variable aggregate%bitlen%8#1
debug: Removing unused variable aggregate%no_overflow%8#1
debug: Removing unused variable aggregate%uint8%8#1
debug: Removing unused variable aggregate%encoded_element%12#2
debug: Removing unused variable tmp%27#2
debug: Removing unused variable aggregate%encoded_element%13#2
debug: Removing unused variable tmp%30#2
debug: Removing unused variable aggregate%encoded_element%14#2
debug: Removing unused variable tmp%33#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@9 from goto 0u ? block@14 : block@15 to goto block@15
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@15 from goto 0u ? block@16 : block@17 to goto block@17
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@17 from goto 0u ? block@18 : block@19 to goto block@19
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@0 in block@7
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@7 with block@0 in block@9
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@9 with block@0 in block@15
debug: Merged linear block@9 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@16 because it's used by phi nodes
debug: Not removing empty block block@18 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@14, block@16, block@18
debug: Removed unreachable predecessors from block@15
debug: Removed unreachable predecessors from block@17
debug: Removed unreachable predecessors from block@19
debug: Removing unreachable phi arguments: arrays.0#29 <- block@14
debug: Replacing trivial Phi node: let my_array#3: Encoded(uint8[4]) = φ(arrays.0#20 <- block@0) (my_array#3) with arrays.0#20
debug: Deleting Phi assignment: let my_array#3: Encoded(uint8[4]) = φ(arrays.0#20 <- block@0)
debug: Removing unreachable phi arguments: arrays.1#31 <- block@16
debug: Replacing trivial Phi node: let my_array_copy_2#4: Encoded(uint8[4]) = φ(arrays.1#22 <- block@15) (my_array_copy_2#4) with arrays.1#22
debug: Deleting Phi assignment: let my_array_copy_2#4: Encoded(uint8[4]) = φ(arrays.1#22 <- block@15)
debug: Removing unreachable phi arguments: arrays.2#33 <- block@18
debug: Replacing trivial Phi node: let my_array_copy_3#1: Encoded(uint8[4]) = φ(arrays.2#24 <- block@17) (my_array_copy_3#1) with arrays.2#24
debug: Deleting Phi assignment: let my_array_copy_3#1: Encoded(uint8[4]) = φ(arrays.2#24 <- block@17)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arrays.0#20
debug: Removing unused variable arrays.1#22
debug: Removing unused variable arrays.2#24
debug: Removing unused variable arrays.0#29
debug: Removing unused variable arrays.1#31
debug: Removing unused variable arrays.2#33
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) 0x64670504) // on error: index access is out of bounds to 0x64
debug: Simplified (b== 0x64 0x64) to 1u
debug: Simplified ((extract 0 1) 0x65680304) // on error: index access is out of bounds to 0x65
debug: Simplified (b== 0x65 0x65) to 1u
debug: Simplified ((extract 0 1) 0x66690304) // on error: index access is out of bounds to 0x66
debug: Simplified (b== 0x66 0x66) to 1u
debug: Simplified ((extract 1 1) 0x64670504) // on error: index access is out of bounds to 0x67
debug: Simplified (b== 0x67 0x67) to 1u
debug: Simplified ((extract 1 1) 0x65680304) // on error: index access is out of bounds to 0x68
debug: Simplified (b== 0x68 0x68) to 1u
debug: Simplified ((extract 1 1) 0x66690304) // on error: index access is out of bounds to 0x69
debug: Simplified (b== 0x69 0x69) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@15 with block@0 in block@17
debug: Merged linear block@15 into block@0
debug: Replaced predecessor block@17 with block@0 in block@19
debug: Merged linear block@17 into block@0
debug: Merged linear block@19 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 6/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutable_params.py:103:9 debug: constant function call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arrays.0%out#7, my_array#4
debug: selected my_array#4 from equivalence set
debug: Found equivalence set: arrays.1%out#6, my_array_copy_2#5
debug: selected my_array_copy_2#5 from equivalence set
debug: Found equivalence set: arrays.2%out#5, my_array_copy_3#2
debug: selected my_array_copy_3#2 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%7#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable aggregate%encoded_element%8#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable aggregate%encoded_element%9#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable aggregate%encoded_element%10#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable aggregate%encoded_element%11#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable aggregate%encoded_element%12#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable arrays.0#0
debug: Removing unused variable arrays.1#0
debug: Removing unused variable arrays.2#0
debug: Removing unused variable start#0
debug: Removing unused variable reassign#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (bitlen aggregate%val_as_bytes%0#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%0#0) to 0xc8
debug: Simplified ((replace2 0) 0x64670504 0xc8) // on error: index access is out of bounds to 0xc8670504
debug: Simplified (+ 200u 1u) to 201u
debug: Simplified (bitlen aggregate%val_as_bytes%1#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%1#0) to 0xc9
debug: Simplified ((replace2 0) 0x65680304 0xc9) // on error: index access is out of bounds to 0xc9680304
debug: Simplified (+ 200u 2u) to 202u
debug: Simplified (bitlen aggregate%val_as_bytes%2#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%2#0) to 0xca
debug: Simplified ((replace2 0) 0x66690304 0xca) // on error: index access is out of bounds to 0xca690304
debug: Simplified ((extract 0 1) 0xc8670504) // on error: index access is out of bounds to 0xc8
debug: Simplified (b== 0xc8 aggregate%val_as_bytes%0#0) to 1u
debug: Simplified ((extract 0 1) 0xc9680304) // on error: index access is out of bounds to 0xc9
debug: Simplified (b== 0xc9 aggregate%val_as_bytes%1#0) to 1u
debug: Simplified ((extract 0 1) 0xca690304) // on error: index access is out of bounds to 0xca
debug: Simplified (b== 0xca aggregate%val_as_bytes%2#0) to 1u
debug: Simplified (+ 200u 3u) to 203u
debug: Simplified (bitlen aggregate%val_as_bytes%3#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%3#0) to 0xcb
debug: Simplified ((replace2 1) 0xc8670504 0xcb) // on error: index access is out of bounds to 0xc8cb0504
debug: Simplified (+ 200u 4u) to 204u
debug: Simplified (bitlen aggregate%val_as_bytes%4#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%4#0) to 0xcc
debug: Simplified ((replace2 1) 0xc9680304 0xcc) // on error: index access is out of bounds to 0xc9cc0304
debug: Simplified (+ 200u 5u) to 205u
debug: Simplified (bitlen aggregate%val_as_bytes%5#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%5#0) to 0xcd
debug: Simplified ((replace2 1) 0xca690304 0xcd) // on error: index access is out of bounds to 0xcacd0304
debug: Simplified (+ 200u 6u) to 206u
debug: Simplified (bitlen aggregate%val_as_bytes%6#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%6#0) to 0xce
debug: Simplified ((replace2 1) 0xc8cb0504 0xce) // on error: index access is out of bounds to 0xc8ce0504
debug: Simplified (+ 200u 7u) to 207u
debug: Simplified (bitlen aggregate%val_as_bytes%7#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%7#0) to 0xcf
debug: Simplified ((replace2 1) 0xc9cc0304 0xcf) // on error: index access is out of bounds to 0xc9cf0304
debug: Simplified (+ 200u 8u) to 208u
debug: Simplified (bitlen aggregate%val_as_bytes%8#0) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%8#0) to 0xd0
debug: Simplified ((replace2 1) 0xcacd0304 0xd0) // on error: index access is out of bounds to 0xcad00304
debug: Simplified ((extract 1 1) 0xc8ce0504) // on error: index access is out of bounds to 0xce
debug: Simplified (b== 0xce aggregate%val_as_bytes%6#0) to 1u
debug: Simplified ((extract 1 1) 0xc9cf0304) // on error: index access is out of bounds to 0xcf
debug: Simplified (b== 0xcf aggregate%val_as_bytes%7#0) to 1u
debug: Simplified ((extract 1 1) 0xcad00304) // on error: index access is out of bounds to 0xd0
debug: Simplified (b== 0xd0 aggregate%val_as_bytes%8#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 0u ? block@2 : block@3 to goto block@3
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@4 because it's used by phi nodes
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Not removing empty block block@8 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@2
debug: Removed unreachable predecessors from block@3
debug: Removing unreachable phi arguments: arrays.0%is_original#4 <- block@2
debug: Replacing trivial Phi node: let arrays.0%is_original#5: bool = φ(arrays.0%is_original#0 <- block@0) (arrays.0%is_original#5) with arrays.0%is_original#0
debug: Deleting Phi assignment: let arrays.0%is_original#5: bool = φ(arrays.0%is_original#0 <- block@0)
debug: Removing unreachable phi arguments: arrays.1%is_original#5 <- block@2
debug: Replacing trivial Phi node: let arrays.1%is_original#8: bool = φ(arrays.1%is_original#0 <- block@0) (arrays.1%is_original#8) with arrays.1%is_original#0
debug: Deleting Phi assignment: let arrays.1%is_original#8: bool = φ(arrays.1%is_original#0 <- block@0)
debug: Removing unreachable phi arguments: arrays.2%is_original#6 <- block@2
debug: Replacing trivial Phi node: let arrays.2%is_original#11: bool = φ(arrays.2%is_original#0 <- block@0) (arrays.2%is_original#11) with arrays.2%is_original#0
debug: Deleting Phi assignment: let arrays.2%is_original#11: bool = φ(arrays.2%is_original#0 <- block@0)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 7/100
debug: marking single-use function test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign for inlining
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/mutable_params.py:115:9 debug: inlining call to test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: my_array#4, arrays.0#15, arrays.1#16, arrays.2#17
debug: selected my_array#4 from equivalence set
debug: Found equivalence set: arrays.0%out#7, foo.0#1
debug: selected foo.0#1 from equivalence set
debug: Found equivalence set: arrays.1%out#6, foo.1#1
debug: selected foo.1#1 from equivalence set
debug: Found equivalence set: arrays.2%out#5, foo.2#1
debug: selected foo.2#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arrays.0%is_original#0
debug: Removing unused variable arrays.1%is_original#0
debug: Removing unused variable arrays.2%is_original#0
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%bitlen%0#0
debug: Removing unused variable aggregate%no_overflow%0#0
debug: Removing unused variable aggregate%uint8%0#0
debug: Removing unused variable arrays.0#1
debug: Removing unused variable tmp%1#0
debug: Removing unused variable aggregate%val_as_bytes%1#0
debug: Removing unused variable aggregate%bitlen%1#0
debug: Removing unused variable aggregate%no_overflow%1#0
debug: Removing unused variable aggregate%uint8%1#0
debug: Removing unused variable arrays.1#2
debug: Removing unused variable tmp%3#0
debug: Removing unused variable aggregate%val_as_bytes%2#0
debug: Removing unused variable aggregate%bitlen%2#0
debug: Removing unused variable aggregate%no_overflow%2#0
debug: Removing unused variable aggregate%uint8%2#0
debug: Removing unused variable arrays.2#3
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable aggregate%encoded_element%4#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable aggregate%encoded_element%5#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable aggregate%val_as_bytes%3#0
debug: Removing unused variable aggregate%bitlen%3#0
debug: Removing unused variable aggregate%no_overflow%3#0
debug: Removing unused variable aggregate%uint8%3#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable aggregate%val_as_bytes%4#0
debug: Removing unused variable aggregate%bitlen%4#0
debug: Removing unused variable aggregate%no_overflow%4#0
debug: Removing unused variable aggregate%uint8%4#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable aggregate%val_as_bytes%5#0
debug: Removing unused variable aggregate%bitlen%5#0
debug: Removing unused variable aggregate%no_overflow%5#0
debug: Removing unused variable aggregate%uint8%5#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable aggregate%val_as_bytes%6#0
debug: Removing unused variable aggregate%bitlen%6#0
debug: Removing unused variable aggregate%no_overflow%6#0
debug: Removing unused variable aggregate%uint8%6#0
debug: Removing unused variable tmp%21#1
debug: Removing unused variable aggregate%val_as_bytes%7#0
debug: Removing unused variable aggregate%bitlen%7#0
debug: Removing unused variable aggregate%no_overflow%7#0
debug: Removing unused variable aggregate%uint8%7#0
debug: Removing unused variable tmp%23#1
debug: Removing unused variable aggregate%val_as_bytes%8#0
debug: Removing unused variable aggregate%bitlen%8#0
debug: Removing unused variable aggregate%no_overflow%8#0
debug: Removing unused variable aggregate%uint8%8#0
debug: Removing unused variable aggregate%encoded_element%12#1
debug: Removing unused variable tmp%27#1
debug: Removing unused variable aggregate%encoded_element%13#1
debug: Removing unused variable tmp%30#1
debug: Removing unused variable aggregate%encoded_element%14#1
debug: Removing unused variable tmp%33#1
debug: Removing unused variable start#0
debug: Removing unused variable reassign#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (bitlen aggregate%val_as_bytes%0#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%0#1) to 0xde
debug: Simplified (+ 222u 1u) to 223u
debug: Simplified (bitlen aggregate%val_as_bytes%1#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%1#1) to 0xdf
debug: Simplified (+ 222u 2u) to 224u
debug: Simplified (bitlen aggregate%val_as_bytes%2#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%2#1) to 0xe0
debug: Simplified (+ 222u 3u) to 225u
debug: Simplified (bitlen aggregate%val_as_bytes%3#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%3#1) to 0xe1
debug: Simplified (+ 222u 4u) to 226u
debug: Simplified (bitlen aggregate%val_as_bytes%4#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%4#1) to 0xe2
debug: Simplified (+ 222u 5u) to 227u
debug: Simplified (bitlen aggregate%val_as_bytes%5#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%5#1) to 0xe3
debug: Simplified (+ 222u 6u) to 228u
debug: Simplified (bitlen aggregate%val_as_bytes%6#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%6#1) to 0xe4
debug: Simplified (+ 222u 7u) to 229u
debug: Simplified (bitlen aggregate%val_as_bytes%7#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%7#1) to 0xe5
debug: Simplified (+ 222u 8u) to 230u
debug: Simplified (bitlen aggregate%val_as_bytes%8#1) to 8u
debug: Simplified (<= 8u 8u) to 1u
debug: Simplified ((extract 7 1) aggregate%val_as_bytes%8#1) to 0xe6
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@3 from goto 1u ? block@4 : block@5 to goto block@4
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5 from goto 1u ? block@6 : block@7 to goto block@6
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@7 from goto 1u ? block@8 : block@9 to goto block@8
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10 from goto 0u ? block@11 : block@12 to goto block@12
debug: Replacing trivial Phi node: let my_array#4: Encoded(uint8[4]) = φ(arrays.0#14 <- block@4) (my_array#4) with arrays.0#14
debug: Deleting Phi assignment: let my_array#4: Encoded(uint8[4]) = φ(arrays.0#14 <- block@4)
debug: Replacing trivial Phi node: let my_array_copy_2#5: Encoded(uint8[4]) = φ(arrays.1#15 <- block@6) (my_array_copy_2#5) with arrays.1#15
debug: Deleting Phi assignment: let my_array_copy_2#5: Encoded(uint8[4]) = φ(arrays.1#15 <- block@6)
debug: Replacing trivial Phi node: let my_array_copy_3#2: Encoded(uint8[4]) = φ(arrays.2#16 <- block@8) (my_array_copy_3#2) with arrays.2#16
debug: Deleting Phi assignment: let my_array_copy_3#2: Encoded(uint8[4]) = φ(arrays.2#16 <- block@8)
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@12
debug: Merged linear block@10 into block@0
debug: Merged linear block@19 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@13 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@17 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@11
debug: Removed unreachable predecessors from block@12
debug: Removing unreachable phi arguments: arrays.0%is_original#5 <- block@11
debug: Replacing trivial Phi node: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#1 <- block@0) (arrays.0%is_original#6) with arrays.0%is_original#1
debug: Deleting Phi assignment: let arrays.0%is_original#6: bool = φ(arrays.0%is_original#1 <- block@0)
debug: Removing unreachable phi arguments: arrays.1%is_original#6 <- block@11
debug: Replacing trivial Phi node: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#1 <- block@0) (arrays.1%is_original#9) with arrays.1%is_original#1
debug: Deleting Phi assignment: let arrays.1%is_original#9: bool = φ(arrays.1%is_original#1 <- block@0)
debug: Removing unreachable phi arguments: arrays.2%is_original#7 <- block@11
debug: Replacing trivial Phi node: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#1 <- block@0) (arrays.2%is_original#12) with arrays.2%is_original#1
debug: Deleting Phi assignment: let arrays.2%is_original#12: bool = φ(arrays.2%is_original#1 <- block@0)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Not removing empty block block@23 because it's used by phi nodes
debug: Not removing empty block block@25 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutate_tuple_items_and_reassign
debug: Unused subroutines removed
debug: Begin optimization pass 8/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arrays.0#5
debug: Removing unused variable arrays.1#6
debug: Removing unused variable arrays.2#7
debug: Removing unused variable arrays.0#14
debug: Removing unused variable arrays.1#15
debug: Removing unused variable arrays.2#16
debug: Removing unused variable arrays.0%is_original#1
debug: Removing unused variable arrays.1%is_original#1
debug: Removing unused variable arrays.2%is_original#1
debug: Removing unused variable aggregate%bitlen%0#1
debug: Removing unused variable aggregate%no_overflow%0#1
debug: Removing unused variable aggregate%uint8%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable aggregate%bitlen%1#1
debug: Removing unused variable aggregate%no_overflow%1#1
debug: Removing unused variable aggregate%uint8%1#1
debug: Removing unused variable tmp%3#1
debug: Removing unused variable aggregate%bitlen%2#1
debug: Removing unused variable aggregate%no_overflow%2#1
debug: Removing unused variable aggregate%uint8%2#1
debug: Removing unused variable tmp%13#1
debug: Removing unused variable aggregate%val_as_bytes%3#1
debug: Removing unused variable aggregate%bitlen%3#1
debug: Removing unused variable aggregate%no_overflow%3#1
debug: Removing unused variable aggregate%uint8%3#1
debug: Removing unused variable tmp%15#1
debug: Removing unused variable aggregate%val_as_bytes%4#1
debug: Removing unused variable aggregate%bitlen%4#1
debug: Removing unused variable aggregate%no_overflow%4#1
debug: Removing unused variable aggregate%uint8%4#1
debug: Removing unused variable tmp%17#1
debug: Removing unused variable aggregate%val_as_bytes%5#1
debug: Removing unused variable aggregate%bitlen%5#1
debug: Removing unused variable aggregate%no_overflow%5#1
debug: Removing unused variable aggregate%uint8%5#1
debug: Removing unused variable tmp%19#1
debug: Removing unused variable aggregate%bitlen%6#1
debug: Removing unused variable aggregate%no_overflow%6#1
debug: Removing unused variable aggregate%uint8%6#1
debug: Removing unused variable tmp%21#2
debug: Removing unused variable aggregate%bitlen%7#1
debug: Removing unused variable aggregate%no_overflow%7#1
debug: Removing unused variable aggregate%uint8%7#1
debug: Removing unused variable tmp%23#2
debug: Removing unused variable aggregate%bitlen%8#1
debug: Removing unused variable aggregate%no_overflow%8#1
debug: Removing unused variable aggregate%uint8%8#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) 0xc8ce0504) // on error: index access is out of bounds to 0xc8
debug: Simplified (b== 0xc8 0xc8) to 1u
debug: Simplified ((extract 0 1) 0xc9cf0304) // on error: index access is out of bounds to 0xc9
debug: Simplified (b== 0xc9 0xc9) to 1u
debug: Simplified ((extract 0 1) 0xcad00304) // on error: index access is out of bounds to 0xca
debug: Simplified (b== 0xca 0xca) to 1u
debug: Simplified ((extract 1 1) 0xc8ce0504) // on error: index access is out of bounds to 0xce
debug: Simplified (b== 0xce 0xce) to 1u
debug: Simplified ((extract 1 1) 0xc9cf0304) // on error: index access is out of bounds to 0xcf
debug: Simplified (b== 0xcf 0xcf) to 1u
debug: Simplified ((extract 1 1) 0xcad00304) // on error: index access is out of bounds to 0xd0
debug: Simplified (b== 0xd0 0xd0) to 1u
debug: Simplified ((replace2 0) 0xc8ce0504 0xde) // on error: index access is out of bounds to 0xdece0504
debug: Simplified ((replace2 0) 0xc8ce0504 0xdf) // on error: index access is out of bounds to 0xdfce0504
debug: Simplified ((replace2 0) 0xc8ce0504 0xe0) // on error: index access is out of bounds to 0xe0ce0504
debug: Simplified ((extract 0 1) 0xdece0504) // on error: index access is out of bounds to 0xde
debug: Simplified (b== 0xde aggregate%val_as_bytes%0#1) to 1u
debug: Simplified ((extract 0 1) 0xdfce0504) // on error: index access is out of bounds to 0xdf
debug: Simplified (b== 0xdf aggregate%val_as_bytes%1#1) to 1u
debug: Simplified ((extract 0 1) 0xe0ce0504) // on error: index access is out of bounds to 0xe0
debug: Simplified (b== 0xe0 aggregate%val_as_bytes%2#1) to 1u
debug: Simplified ((replace2 1) 0xdece0504 0xe1) // on error: index access is out of bounds to 0xdee10504
debug: Simplified ((replace2 1) 0xdfce0504 0xe2) // on error: index access is out of bounds to 0xdfe20504
debug: Simplified ((replace2 1) 0xe0ce0504 0xe3) // on error: index access is out of bounds to 0xe0e30504
debug: Simplified ((replace2 1) 0xdee10504 0xe4) // on error: index access is out of bounds to 0xdee40504
debug: Simplified ((replace2 1) 0xdfe20504 0xe5) // on error: index access is out of bounds to 0xdfe50504
debug: Simplified ((replace2 1) 0xe0e30504 0xe6) // on error: index access is out of bounds to 0xe0e60504
debug: Simplified ((extract 1 1) 0xdee40504) // on error: index access is out of bounds to 0xe4
debug: Simplified (b== 0xe4 aggregate%val_as_bytes%6#1) to 1u
debug: Simplified ((extract 1 1) 0xdfe50504) // on error: index access is out of bounds to 0xe5
debug: Simplified (b== 0xe5 aggregate%val_as_bytes%7#1) to 1u
debug: Simplified ((extract 1 1) 0xe0e60504) // on error: index access is out of bounds to 0xe6
debug: Simplified (b== 0xe6 aggregate%val_as_bytes%8#1) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@12 from goto 1u ? block@13 : block@14 to goto block@13
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@14 from goto 1u ? block@15 : block@16 to goto block@15
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@16 from goto 1u ? block@17 : block@18 to goto block@17
debug: Replacing trivial Phi node: let foo.0#1: Encoded(uint8[4]) = φ(arrays.0#29 <- block@13) (foo.0#1) with arrays.0#29
debug: Deleting Phi assignment: let foo.0#1: Encoded(uint8[4]) = φ(arrays.0#29 <- block@13)
debug: Replacing trivial Phi node: let foo.1#1: Encoded(uint8[4]) = φ(arrays.1#31 <- block@15) (foo.1#1) with arrays.1#31
debug: Deleting Phi assignment: let foo.1#1: Encoded(uint8[4]) = φ(arrays.1#31 <- block@15)
debug: Replacing trivial Phi node: let foo.2#1: Encoded(uint8[4]) = φ(arrays.2#33 <- block@17) (foo.2#1) with arrays.2#33
debug: Deleting Phi assignment: let foo.2#1: Encoded(uint8[4]) = φ(arrays.2#33 <- block@17)
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@12 with block@0 in block@13
debug: Merged linear block@12 into block@0
debug: Replaced predecessor block@13 with block@0 in block@14
debug: Merged linear block@13 into block@0
debug: Replaced predecessor block@14 with block@0 in block@15
debug: Merged linear block@14 into block@0
debug: Replaced predecessor block@15 with block@0 in block@16
debug: Merged linear block@15 into block@0
debug: Replaced predecessor block@16 with block@0 in block@17
debug: Merged linear block@16 into block@0
debug: Replaced predecessor block@17 with block@0 in block@18
debug: Merged linear block@17 into block@0
debug: Merged linear block@18 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 9/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%13#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable aggregate%encoded_element%14#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable aggregate%encoded_element%15#0
debug: Removing unused variable tmp%28#0
debug: Removing unused variable aggregate%encoded_element%16#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable aggregate%encoded_element%17#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable aggregate%encoded_element%18#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable aggregate%val_as_bytes%0#1
debug: Removing unused variable arrays.0#16
debug: Removing unused variable aggregate%val_as_bytes%1#1
debug: Removing unused variable arrays.1#18
debug: Removing unused variable aggregate%val_as_bytes%2#1
debug: Removing unused variable arrays.2#20
debug: Removing unused variable aggregate%encoded_element%3#1
debug: Removing unused variable tmp%6#1
debug: Removing unused variable aggregate%encoded_element%4#1
debug: Removing unused variable tmp%9#1
debug: Removing unused variable aggregate%encoded_element%5#1
debug: Removing unused variable tmp%12#1
debug: Removing unused variable arrays.0#20
debug: Removing unused variable arrays.1#22
debug: Removing unused variable arrays.2#24
debug: Removing unused variable aggregate%val_as_bytes%6#1
debug: Removing unused variable arrays.0#29
debug: Removing unused variable aggregate%val_as_bytes%7#1
debug: Removing unused variable arrays.1#31
debug: Removing unused variable aggregate%val_as_bytes%8#1
debug: Removing unused variable arrays.2#33
debug: Removing unused variable aggregate%encoded_element%12#2
debug: Removing unused variable tmp%27#2
debug: Removing unused variable aggregate%encoded_element%13#2
debug: Removing unused variable tmp%30#2
debug: Removing unused variable aggregate%encoded_element%14#2
debug: Removing unused variable tmp%33#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 1 1) 0xdee40504) // on error: index access is out of bounds to 0xe4
debug: Simplified (b== 0xe4 0xe4) to 1u
debug: Simplified ((extract 1 1) 0xdfe50504) // on error: index access is out of bounds to 0xe5
debug: Simplified (b== 0xe5 0xe5) to 1u
debug: Simplified ((extract 1 1) 0xe0e60504) // on error: index access is out of bounds to 0xe6
debug: Simplified (b== 0xe6 0xe6) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 10/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%19#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable aggregate%encoded_element%20#0
debug: Removing unused variable tmp%33#0
debug: Removing unused variable aggregate%encoded_element%21#0
debug: Removing unused variable tmp%34#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 11/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 11, ending loop
debug: optimizing clear program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract
arc4_types/mutable_params.py:28 debug: auto reserving slots in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.mutable_params.Arc4MutableParamsContract
arc4_types/mutable_params.py:164 debug: auto reserving slots in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4MutableParamsContract.ir/Arc4MutableParamsContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4MutableParamsContract.ir/Arc4MutableParamsContract.clear.400.destructured.ir
arc4_types/mutable_params.py:28 debug: optimizing TEAL subroutine ops test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program() -> uint64:
arc4_types/mutable_params.py:28 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
arc4_types/mutable_params.py:164 debug: optimizing TEAL subroutine ops test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program() -> uint64:
arc4_types/mutable_params.py:164 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz for inlining
debug: marking single-use function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%9#0 NoOp) to (! tmp%9#0)
debug: Simplified (== tmp%16#0 0u) to (! tmp%16#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@7 from switch tmp%15#0 {0u => block@8, * => block@9} to goto_nth [block@8][tmp%15#0] else goto block@9
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@7 from goto_nth [block@8][tmp%15#0] else goto block@9 to goto tmp%15#0 ? block@9 : block@8
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@7
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@6 with block@5 in block@11
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5
debug: Removed empty block: block@9
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create in test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
arc4_types/dynamic_string_array.py:13:6 debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw in test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
arc4_types/dynamic_string_array.py:5:6 debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz in test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#1, tmp%7#0
debug: selected encoded_array%0#1 from equivalence set
debug: Found equivalence set: encoded_array%3#0, raw#0, reinterpret_Encoded(len+(len+utf8[])[])%0#0, tmp%13#0
debug: selected raw#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%9#0 NoOp) to (! tmp%9#0)
debug: Simplified (== tmp%16#0 0u) to (! tmp%16#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6 from switch tmp%15#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%15#0] else goto block@8
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6 from goto_nth [block@7][tmp%15#0] else goto block@8 to goto tmp%15#0 ? block@8 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@15 with block@2 in block@16
debug: Merged linear block@15 into block@2
debug: Merged linear block@16 into block@2
debug: Replaced predecessor block@13 with block@3 in block@14
debug: Merged linear block@13 into block@3
debug: Merged linear block@14 into block@3
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@11 with block@7 in block@12
debug: Merged linear block@11 into block@7
debug: Merged linear block@12 into block@7
debug: Replaced predecessor block@9 with block@8 in block@10
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%3#0, raw#0, reinterpret_Encoded(len+(len+utf8[])[])%0#0
debug: selected raw#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz for inlining
debug: marking single-use function test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
arc4_types/dynamic_string_array.py:13:6 debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw in algopy.arc4.ARC4Contract.approval_program
arc4_types/dynamic_string_array.py:5:6 debug: inlining call to test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#1, tmp%7#0
debug: selected encoded_array%0#1 from equivalence set
debug: Found equivalence set: raw#0, tmp%13#0
debug: selected raw#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%12#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@17 with block@3 in block@18
debug: Merged linear block@17 into block@3
debug: Replaced predecessor block@18 with block@3 in block@12
debug: Merged linear block@18 into block@3
debug: Replaced predecessor block@15 with block@4 in block@16
debug: Merged linear block@15 into block@4
debug: Replaced predecessor block@16 with block@4 in block@12
debug: Merged linear block@16 into block@4
debug: Replaced predecessor block@13 with block@8 in block@14
debug: Merged linear block@13 into block@8
debug: Replaced predecessor block@14 with block@8 in block@12
debug: Merged linear block@14 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw
debug: removing unused subroutine test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract
debug: optimizing approval program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%0#2
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%1#1
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+utf8[])%2#0, tmp%2#1
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%concat%2#0, aggregate%as_Encoded(len+(len+utf8[])[])%0#0, encoded_array%0#1
debug: selected aggregate%concat%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(len+uint8[])%0#0, encoded_array%0#0
debug: selected aggregate%head%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(len+uint8[])%1#0, encoded_array%1#0
debug: selected aggregate%head%4#0 from equivalence set
debug: Found equivalence set: aggregate%head%5#0, aggregate%as_Encoded(len+uint8[])%2#0, encoded_array%2#0
debug: selected aggregate%head%5#0 from equivalence set
debug: Found equivalence set: aggregate%concat%5#0, aggregate%as_Encoded(len+(len+uint8[])[])%0#0, raw#0
debug: selected raw#0 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%current_tail_offset%5#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%data_length%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "X") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0001
debug: Simplified (concat 0x0001 "X") to 0x000158
debug: Simplified (len "Y") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0001
debug: Simplified (concat 0x0001 "Y") to 0x000159
debug: Simplified (len "Z") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0001
debug: Simplified (concat 0x0001 "Z") to 0x00015a
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0003
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0006
debug: Simplified (concat 0x0003 0x0006) to 0x00030006
debug: Simplified (len 0x000158) to 3u
debug: Simplified (+ 6u 3u) to 9u
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0009
debug: Simplified (concat 0x00030006 0x0009) to 0x000300060009
debug: Simplified (len 0x000159) to 3u
debug: Simplified (+ 9u 3u) to 12u
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x000c
debug: Simplified (concat 0x000300060009 0x000c) to 0x000300060009000c
debug: Simplified (concat 0x000300060009000c 0x000158) to 0x000300060009000c000158
debug: Simplified (concat 0x000300060009000c000158 0x000159) to 0x000300060009000c000158000159
debug: Simplified (concat 0x000300060009000c000158000159 0x00015a) to 0x000300060009000c00015800015900015a
debug: Simplified (concat 0x151f7c75 0x000300060009000c00015800015900015a) to 0x151f7c75000300060009000c00015800015900015a
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x0001
debug: Simplified (concat 0x0001 0x58) to 0x000158
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0001
debug: Simplified (concat 0x0001 0x59) to 0x000159
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0001
debug: Simplified (concat 0x0001 0x5a) to 0x00015a
debug: Simplified ((extract 6 2) aggregate%as_bytes%10#0) to 0x0003
debug: Simplified ((extract 6 2) aggregate%as_bytes%11#0) to 0x0006
debug: Simplified (concat 0x0003 0x0006) to 0x00030006
debug: Simplified (len 0x000158) to 3u
debug: Simplified (+ 6u 3u) to 9u
debug: Simplified ((extract 6 2) aggregate%as_bytes%12#0) to 0x0009
debug: Simplified (concat 0x00030006 0x0009) to 0x000300060009
debug: Simplified (len 0x000159) to 3u
debug: Simplified (+ 9u 3u) to 12u
debug: Simplified ((extract 6 2) aggregate%as_bytes%13#0) to 0x000c
debug: Simplified (concat 0x000300060009 0x000c) to 0x000300060009000c
debug: Simplified (concat 0x000300060009000c 0x000158) to 0x000300060009000c000158
debug: Simplified (concat 0x000300060009000c000158 0x000159) to 0x000300060009000c000158000159
debug: Simplified (concat 0x000300060009000c000158000159 0x00015a) to 0x000300060009000c00015800015900015a
debug: Simplified (concat 0x151f7c75 0x000300060009000c00015800015900015a) to 0x151f7c75000300060009000c00015800015900015a
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/dynamic_string_array.py:8:12-28, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/dynamic_string_array.py:8:12-28, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%8#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/dynamic_string_array.py:16:12-44, ir_type=bytes[8], name='aggregate%as_bytes%7', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%9#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/dynamic_string_array.py:16:12-44, ir_type=bytes[8], name='aggregate%as_bytes%7', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%1#0, aggregate%as_bytes%2#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%7#0, aggregate%as_bytes%8#0, aggregate%as_bytes%9#0
debug: selected aggregate%as_bytes%7#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%encoded_value%2#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%as_bytes%4#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable aggregate%concat%1#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable aggregate%as_bytes%7#0
debug: Removing unused variable aggregate%len_u16%1#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%len_u16%2#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%len_u16%3#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%as_bytes%10#0
debug: Removing unused variable aggregate%len_u16%4#0
debug: Removing unused variable aggregate%as_bytes%11#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%as_bytes%12#0
debug: Removing unused variable aggregate%offset_as_uint16%4#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable aggregate%data_length%4#0
debug: Removing unused variable aggregate%current_tail_offset%4#0
debug: Removing unused variable aggregate%as_bytes%13#0
debug: Removing unused variable aggregate%offset_as_uint16%5#0
debug: Removing unused variable aggregate%head%8#0
debug: Removing unused variable aggregate%concat%3#0
debug: Removing unused variable aggregate%concat%4#0
debug: Removing unused variable raw#0
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0 with [test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#1, test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#2, test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#3]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 11 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4DynamicStringArrayContract.ir/Arc4DynamicStringArrayContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4DynamicStringArrayContract.ir/Arc4DynamicStringArrayContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_xyz_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_xyz_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_xyz_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_xyz_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_xyz_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_xyz_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_xyz_route@3.ops[17]: 'l-store-copy test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_xyz_route@3.ops[19]: 'v-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_xyz_raw_route@4.ops[1]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_xyz_raw_route@4.ops[3]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_xyz_raw_route@4.ops[5]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_xyz_raw_route@4.ops[7]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_xyz_raw_route@4.ops[10]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_xyz_raw_route@4.ops[12]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_xyz_raw_route@4.ops[17]: 'l-store-copy test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_xyz_raw_route@4.ops[19]: 'v-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_bare_routing@7.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_bare_routing@7.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main___algopy_default_create@8.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main___algopy_default_create@8.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main___algopy_default_create@8.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main___algopy_default_create@8.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main___algopy_default_create@8.ops[10]: 'l-store-copy test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@8.ops[12]: 'v-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@11.ops[1]: 'l-store-copy test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@11.ops[3]: 'v-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__%0#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_xyz_route@3 -> main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_xyz_raw_route@4 -> main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main___algopy_default_create@8 -> main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_after_if_else@11 -> main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12: tmp%0#0
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__@12 into main_after_if_else@11
debug: inlining single reference block main___algopy_default_create@8 into main_bare_routing@7
debug: removing explicit jump to fall-through block main_after_if_else@11
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_bytes#0
debug: selected dynamic_bytes#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, uint8_item#0
debug: selected uint8_item#0 from equivalence set
debug: Found equivalence set: tmp%4#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: tmp%6#0, dynamic_bytes2#0
debug: selected dynamic_bytes2#0 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: array_item%1#0, uint8_item#1
debug: selected uint8_item#1 from equivalence set
debug: Found equivalence set: tmp%11#0, total#4
debug: selected total#4 from equivalence set
debug: Found equivalence set: tmp%13#0, dynamic_bytes3#0
debug: selected dynamic_bytes3#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: array_item%2#0, uint8_item#2
debug: selected uint8_item#2 from equivalence set
debug: Found equivalence set: tmp%18#0, total#6
debug: selected total#6 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint8[])%0#0, dynamic_bytes3#2
debug: selected dynamic_bytes3#2 from equivalence set
debug: Found equivalence set: encoded_array%1#0, dynamic_bytes#1
debug: selected dynamic_bytes#1 from equivalence set
debug: Found equivalence set: ternary_result%0#2, dynamic_bytes#2
debug: selected dynamic_bytes#2 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 tmp%20#0 2u total_length%0#0) to ((extract 2 0) tmp%20#0)
debug: Simplified (substring3 concat%0#0 2u total_length%1#0) to ((extract 2 0) concat%0#0)
debug: Simplified (/ len%0#0 1u) to len%0#0
debug: Simplified (select 0x03 0x02 tmp%25#0) to (select 0x03 0x02 tmp%24#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@11 with block@10 in block@9
debug: Merged linear block@11 into block@10
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%12#0: bytes = decode_bytes<bytes>(dynamic_bytes2#0) with copy of existing registers (Register(source_location=arc4_types/dynamic_bytes.py:22:15-36, ir_type=bytes, name='tmp%7', version=0),)
debug: Found equivalence set: tmp%7#0, tmp%12#0
debug: selected tmp%7#0 from equivalence set
debug: Found equivalence set: len%0#0, div_floor%0#0
debug: selected len%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: 0x0304
debug: replacing redundant decode-of-encode with: tmp%7#0
debug: replacing redundant encode-of-decode with: dynamic_bytes2#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: dynamic_bytes2#0, dynamic_bytes3#0
debug: selected dynamic_bytes2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable total_length%0#0
debug: Removing unused variable total_length%1#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%29#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x0304 0x0304) to 1u
debug: Simplified (== 0x0304 0x0304) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: bool = (== dynamic_bytes2#0 0x00020304) with copy of existing registers (Register(source_location=arc4_types/dynamic_bytes.py:23:15-58, ir_type=bool, name='tmp%9', version=0),)
debug: Found equivalence set: tmp%9#0, tmp%16#0
debug: selected tmp%9#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%9#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%15#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract
debug: optimizing approval program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(len+uint8[])%0#0, dynamic_bytes#0
debug: selected dynamic_bytes#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, array_length%0#0
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, uint8_item#0
debug: selected uint8_item#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%1#0, dynamic_bytes2#0
debug: selected dynamic_bytes2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, array_length%1#0
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, uint8_item#1
debug: selected uint8_item#1 from equivalence set
debug: Found equivalence set: aggregate%array_length%2#0, array_length%2#0
debug: selected aggregate%array_length%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, uint8_item#2
debug: selected uint8_item#2 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+uint8[])%2#0, tmp%20#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%5#0, aggregate%as_Encoded(len+uint8[])%3#0, dynamic_bytes#1
debug: selected dynamic_bytes#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+uint8[])%4#0, ternary_result%0#0
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+uint8[])%5#0, ternary_result%0#1
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0003
debug: Simplified (concat 0x0003 0x02) to 0x000302
debug: Simplified (concat 0x000302 0x03) to 0x00030203
debug: Simplified (concat 0x00030203 0x01) to 0x0003020301
debug: Simplified ((extract 2 0) 0x0003020301) to 0x020301
debug: Simplified (== 0x020301 0x020301) to 1u
debug: Simplified (== 0x0003020301 0x0003020301) to 1u
debug: Simplified (extract_uint16 0x0003020301 0u) to 3u
debug: Simplified (len 0x0003020301) to 5u
debug: Simplified (substring3 0x0003020301 2u 5u) to 0x020301
debug: Simplified (* item_index_internal%0#1 1u) to item_index_internal%0#1
debug: Simplified (btoi uint8_item#0) to (getbyte 0x020301 item_index_internal%0#1)
debug: Simplified (len 0x0304) to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x0002 0x0304) to 0x00020304
debug: Simplified (== 0x00020304 0x00020304) to 1u
debug: Simplified (extract_uint16 0x00020304 0u) to 2u
debug: Simplified (len 0x00020304) to 4u
debug: Simplified (substring3 0x00020304 2u 4u) to 0x0304
debug: Simplified (* item_index_internal%1#1 1u) to item_index_internal%1#1
debug: Simplified (btoi uint8_item#1) to (getbyte 0x0304 item_index_internal%1#1)
debug: Simplified (extract_uint16 0x00020304 0u) to 2u
debug: Simplified (len 0x00020304) to 4u
debug: Simplified (substring3 0x00020304 2u 4u) to 0x0304
debug: Simplified (* item_index_internal%2#1 1u) to item_index_internal%2#1
debug: Simplified (btoi uint8_item#2) to (getbyte 0x0304 item_index_internal%2#1)
debug: Simplified (len 0x616263) to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0003
debug: Simplified (concat 0x0003 0x616263) to 0x0003616263
debug: Simplified ((extract 2 0) 0x0003616263) to 0x616263
debug: Simplified (concat 0x00020304 0x616263) // on error: max array length exceeded to 0x00020304616263
debug: Simplified ((extract 2 0) 0x00020304616263) to 0x0304616263
debug: Simplified (len 0x0304616263) to 5u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0005
debug: Simplified ((replace2 0) 0x00020304616263 0x0005) to 0x00050304616263
debug: Simplified (== 0x00050304616263 0x00050304616263) to 1u
debug: Simplified ((extract 2 0) 0x00050304616263) to 0x0304616263
debug: Simplified (== 0x0304616263 0x0304616263) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0003
debug: Simplified (concat aggregate%head%4#0 0x01) to (concat aggregate%head%3#0 0x0301)
debug: Simplified (len 0x32) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0001
debug: Simplified (concat 0x0001 0x32) to 0x000132
debug: Simplified (len 0x33) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0001
debug: Simplified (concat 0x0001 0x33) to 0x000133
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%3#0: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=arc4_types/dynamic_bytes.py:37:30-50, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=arc4_types/dynamic_bytes.py:12:24-58, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Found equivalence set: item_index_internal%0#1, aggregate%bytes_offset%0#0
debug: selected item_index_internal%0#1 from equivalence set
debug: Found equivalence set: item_index_internal%1#1, aggregate%bytes_offset%1#0
debug: selected item_index_internal%1#1 from equivalence set
debug: Found equivalence set: item_index_internal%2#1, aggregate%bytes_offset%2#0
debug: selected item_index_internal%2#1 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%2#0, aggregate%as_bytes%3#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable dynamic_bytes#0
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable aggregate%array_length%0#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable uint8_item#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable dynamic_bytes2#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable aggregate%array_length%1#0
debug: Removing unused variable aggregate%total_length%1#0
debug: Removing unused variable aggregate%array_trimmed%1#0
debug: Removing unused variable uint8_item#1
debug: Removing unused variable aggregate%array_length%2#0
debug: Removing unused variable aggregate%total_length%2#0
debug: Removing unused variable aggregate%array_trimmed%2#0
debug: Removing unused variable uint8_item#2
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable extract_to_end%0#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_to_end%1#0
debug: Removing unused variable len%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable dynamic_bytes3#2
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable aggregate%len_u16%1#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%as_bytes%4#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract
arc4_types/dynamic_bytes.py:10 debug: auto reserving slots in test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract
arc4_types/dynamic_bytes.py:48 debug: auto reserving slots in test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program using strategy 'root_operand'
debug: Coalescing total#0 with [total#9, total#1, total#2, total#12, total#3, total#4, total#15, total#5, total#6]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#5, item_index_internal%2#1, item_index_internal%2#2]
debug: Coalescing dynamic_bytes#1 with [dynamic_bytes#3, dynamic_bytes#2]
debug: Coalescing resulted in 57 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, total#0=total#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, total#0=total#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, total#0=total#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%2#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4DynamicBytesContract.ir/Arc4DynamicBytesContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4DynamicBytesContract.ir/Arc4DynamicBytesContract.clear.400.destructured.ir
debug: Inserted main_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@2.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_for_body@2.ops[6]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_for_body@2.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@2.ops[10]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@4.ops[3]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_after_for@4.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@6.ops[3]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_for_body@6.ops[6]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_for_body@6.ops[2]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced main_for_body@6.ops[10]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_for_header@9.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@9.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@10.ops[3]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_for_body@10.ops[6]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_for_body@10.ops[2]: 'l-store-copy item_index_internal%2#0 1'
debug: Replaced main_for_body@10.ops[10]: 'v-load item_index_internal%2#0' with 'l-load item_index_internal%2#0'
debug: Inserted main_after_for@12.ops[3]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_after_for@12.ops[5]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_after_for@12.ops[17]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced main_after_for@12.ops[19]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted main_after_for@12.ops[22]: 'l-store-copy dynamic_bytes#1 0'
debug: Replaced main_after_for@12.ops[24]: 'v-load dynamic_bytes#1' with 'l-load dynamic_bytes#1'
debug: Inserted main_after_for@12.ops[26]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_after_for@12.ops[28]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_after_for@12.ops[31]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_after_for@12.ops[33]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_after_for@12.ops[36]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_after_for@12.ops[38]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_after_for@12.ops[13]: 'l-store-copy select%0#0 0'
debug: Replaced main_after_for@12.ops[16]: 'v-load select%0#0' with 'l-load select%0#0'
debug: Inserted main_after_for@12.ops[8]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_after_for@12.ops[12]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_ternary_true@13.ops[1]: 'l-store-copy aggregate%encoded_value%2#0 0'
debug: Replaced main_ternary_true@13.ops[3]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted main_ternary_false@14.ops[1]: 'l-store-copy aggregate%encoded_value%3#0 0'
debug: Replaced main_ternary_false@14.ops[3]: 'v-load aggregate%encoded_value%3#0' with 'l-load aggregate%encoded_value%3#0'
debug: Inserted main_ternary_merge@15.ops[2]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_ternary_merge@15.ops[4]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_ternary_merge@15.ops[7]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_ternary_merge@15.ops[9]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Found 8 edge set/s for test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program
debug: Allocated 1 variable/s to x-stack: dynamic_bytes#1
debug: shared x-stack for main_ternary_true@13 -> main_ternary_merge@15: dynamic_bytes#1
debug: shared x-stack for main_ternary_false@14 -> main_ternary_merge@15: dynamic_bytes#1
debug: test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program f-stack entry: ['item_index_internal%1#0', 'item_index_internal%2#0']
debug: test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program f-stack on first store: ['total#0', 'item_index_internal%0#0']
arc4_types/dynamic_bytes.py:10 debug: optimizing TEAL subroutine ops test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program() -> uint64:
arc4_types/dynamic_bytes.py:10 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_for_body@2 into main_for_header@1
debug: inlining single reference block main_for_body@6 into main_for_header@5
debug: inlining single reference block main_for_body@10 into main_for_header@9
debug: inlining single reference block main_ternary_true@13 into main_after_for@12
debug: removing explicit jump to fall-through block main_for_header@1
debug: removing explicit jump to fall-through block main_for_header@5
debug: removing explicit jump to fall-through block main_for_header@9
debug: removing explicit jump to fall-through block main_ternary_merge@15
arc4_types/dynamic_bytes.py:48 debug: optimizing TEAL subroutine ops test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program() -> uint64:
arc4_types/dynamic_bytes.py:48 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_arr#0
debug: selected dynamic_arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, dynamic_arr#1
debug: selected dynamic_arr#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%0#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%2#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%4#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%6#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable reinterpret_biguint%8#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%10#0
debug: Removing unused variable reinterpret_biguint%11#0
debug: Removing unused variable reinterpret_biguint%12#0
debug: Removing unused variable reinterpret_biguint%13#0
debug: Removing unused variable reinterpret_biguint%14#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%16#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%18#0
debug: Removing unused variable reinterpret_biguint%19#0
debug: Removing unused variable reinterpret_biguint%20#0
debug: Removing unused variable reinterpret_biguint%21#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%12#0 tmp%13#0) to 1u
debug: Simplified (b== 0x00 0b) to 1u
debug: Simplified (b!= 0x01 0b) to 1u
debug: Simplified (b== 0x0000 0b) to 1u
debug: Simplified (b!= 0x0001 0b) to 1u
debug: Simplified (b== 0x00000000 0b) to 1u
debug: Simplified (b!= 0x00000001 0b) to 1u
debug: Simplified (b== 0x0000000000000000 0b) to 1u
debug: Simplified (b!= 0x0000000000000001 0b) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000 0b) to 1u
debug: Simplified (b!= 0x00000000000000000000000000000001 0b) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000000 0b) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 0b) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0b) to 1u
debug: Simplified (b!= 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 0b) to 1u
debug: Simplified (b== 0x000000 0b) to 1u
debug: Simplified (b!= 0x000001 0b) to 1u
debug: Simplified (b== 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0b) to 1u
debug: Simplified (b!= 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 0b) to 1u
debug: Simplified (b== 0x000000000000 0b) to 1u
debug: Simplified (b!= 0x0002540be400 0b) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0b) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005f5e100 0b) to 1u
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:9:19-35, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%4#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:9:19-35, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("") with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:12:19-34, ir_type=Encoded(len+utf8[]), name='tmp%6', version=0),)
debug: Replacing redundant declaration let tmp%10#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("") with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:12:19-34, ir_type=Encoded(len+utf8[]), name='tmp%6', version=0),)
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>() with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:51:8-19, ir_type=Encoded(len+uint64[]), name='dynamic_arr', version=0),)
debug: Replacing redundant declaration let encoded_array%2#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>() with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:51:8-19, ir_type=Encoded(len+uint64[]), name='dynamic_arr', version=0),)
debug: Replacing redundant declaration let tmp%42#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:9:19-35, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%43#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:9:19-35, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%1#0, tmp%4#0, tmp%42#0, tmp%43#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%6#0, tmp%7#0, tmp%10#0
debug: selected tmp%6#0 from equivalence set
debug: Found equivalence set: dynamic_arr#0, encoded_array%1#0, encoded_array%2#0
debug: selected dynamic_arr#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Replacing redundant declaration let tmp%44#0: bool = (== tmp%0#0 tmp%0#0) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:9:15-35, ir_type=bool, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%44#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%2#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%28#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%33#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%38#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 tmp%0#0) to 1u
debug: Simplified (== tmp%6#0 tmp%6#0) to 1u
debug: Simplified (== dynamic_arr#0 dynamic_arr#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%39#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract
debug: optimizing approval program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%0#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, tmp%3#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%6#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%9#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, dynamic_arr#0
debug: selected dynamic_arr#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%40#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (!= 0x80 0x00) to 1u
debug: Simplified (len "") to 0u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (concat 0x0000 "") to 0x0000
debug: Simplified (len ".") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0001
debug: Simplified (concat 0x0001 ".") to 0x00012e
debug: Simplified (!= 0x00012e 0x0000) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0000
debug: Simplified (concat 0x 0x0000000000000000) to 0x0000000000000000
debug: Simplified (concat 0x0000 0x0000000000000000) // on error: max array length exceeded to 0x00000000000000000000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0001
debug: Simplified ((replace2 0) 0x00000000000000000000 0x0001) to 0x00010000000000000000
debug: Simplified (!= 0x00010000000000000000 0x0000) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:12:19-34, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let as_bytes%0#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=arc4_types/bool_eval.py:13:15-31, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%2#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%1#0, as_bytes%0#0
debug: selected aggregate%as_bytes%1#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable aggregate%encoded_bool%1#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable dynamic_arr#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable concat%0#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable add%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable dynamic_arr#1
debug: Removing unused variable tmp%41#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract
arc4_types/bool_eval.py:8 debug: auto reserving slots in test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.bool_eval.Arc4BoolEvalContract
arc4_types/bool_eval.py:60 debug: auto reserving slots in test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4BoolEvalContract.ir/Arc4BoolEvalContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4BoolEvalContract.ir/Arc4BoolEvalContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[7]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_block@0.ops[9]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_block@0.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_block@0.ops[6]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint8[32])%0#0 0'
debug: Replaced main_block@0.ops[6]: 'v-load reinterpret_Encoded(uint8[32])%0#0' with 'l-load reinterpret_Encoded(uint8[32])%0#0'
arc4_types/bool_eval.py:8 debug: optimizing TEAL subroutine ops test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program() -> uint64:
arc4_types/bool_eval.py:8 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
arc4_types/bool_eval.py:60 debug: optimizing TEAL subroutine ops test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program() -> uint64:
arc4_types/bool_eval.py:60 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.bool.Arc4BoolTypeContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.dynamic_array_concat_bits for inlining
debug: marking single-use function test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff for inlining
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/bool.py:13:9 debug: inlining call to test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff in test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
arc4_types/bool.py:45:9 debug: inlining call to _puya_lib.arc4.dynamic_array_concat_bits in test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, true#0
debug: selected true#0 from equivalence set
debug: Found equivalence set: tmp%1#0, false#0
debug: selected false#0 from equivalence set
debug: Found equivalence set: encoded_array%0#0, static_boolean_array#0
debug: selected static_boolean_array#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, dynamic_boolean_array#0
debug: selected dynamic_boolean_array#0 from equivalence set
debug: Found equivalence set: tmp%28#0, dynamic_boolean_array#1, array#0
debug: selected dynamic_boolean_array#1 from equivalence set
debug: Found equivalence set: tmp%34#0, new_items_bytes#0
debug: selected new_items_bytes#0 from equivalence set
debug: Found equivalence set: tmp%0#2, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#2, new_array_length#0
debug: selected new_array_length#0 from equivalence set
debug: Found equivalence set: tmp%3#2, new_array_length_b#0
debug: selected new_array_length_b#0 from equivalence set
debug: Found equivalence set: tmp%4#2, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#2, current_bytes#0
debug: selected current_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#2, required_bytes#0
debug: selected required_bytes#0 from equivalence set
debug: Found equivalence set: tmp%12#1, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%13#1, write_offset#0
debug: selected write_offset#0 from equivalence set
debug: Found equivalence set: tmp%14#1, write_end#0
debug: selected write_end#0 from equivalence set
debug: Found equivalence set: tmp%17#1, result#3
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%18#1, write_offset#2
debug: selected write_offset#2 from equivalence set
debug: Found equivalence set: tmp%19#1, read_offset#2
debug: selected read_offset#2 from equivalence set
debug: Found equivalence set: result#2, as_Encoded(len+bool1[])%0#0, dynamic_boolean_array#2
debug: selected result#2 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%9#1
debug: Removing unused variable new_items_count#0
debug: Removing unused variable read_step#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select 1u 0u tmp%3#0) to (select 1u 0u tmp%2#0)
debug: Simplified (- 12u 1u) to 11u
debug: Simplified (== tmp%43#0 0u) to (! tmp%43#0)
debug: Simplified (!= tmp%46#0 0u) to tmp%46#0
debug: Simplified (select 1u 0u tmp%2#0) to (! tmp%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@5
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#1: bool = decode_bytes<bool>(true#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:62:15-26, ir_type=bool, name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%6#1: bool = decode_bytes<bool>(false#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:64:19-31, ir_type=bool, name='tmp%1', version=1),)
debug: Replacing redundant declaration let tmp%6#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%7#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%8#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%9#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%10#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%11#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%12#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%13#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%14#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%15#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%16#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%17#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%19#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%22#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%24#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%25#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:41-56, ir_type=Encoded(bool8), name='false', version=0),)
debug: Replacing redundant declaration let tmp%26#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%29#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%30#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:41-56, ir_type=Encoded(bool8), name='false', version=0),)
debug: Replacing redundant declaration let tmp%31#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%32#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:41-56, ir_type=Encoded(bool8), name='false', version=0),)
debug: Replacing redundant declaration let tmp%33#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%42#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool.py:51:15-30, ir_type=Encoded(bool8), name='tmp%39', version=0),)
debug: Replacing redundant declaration let tmp%45#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:50:15-29, ir_type=Encoded(bool8), name='tmp%36', version=0),)
debug: Replacing redundant declaration let tmp%36#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:25-39, ir_type=Encoded(bool8), name='true', version=0),)
debug: Replacing redundant declaration let tmp%39#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/bool.py:61:41-56, ir_type=Encoded(bool8), name='false', version=0),)
debug: Found equivalence set: tmp%0#1, tmp%3#1
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, tmp%6#1
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: true#0, tmp%6#0, tmp%7#0, tmp%8#0, tmp%9#0, tmp%10#0, tmp%11#0, tmp%12#0, tmp%13#0, tmp%14#0, tmp%15#0, tmp%16#0, tmp%17#0, tmp%19#0, tmp%22#0, tmp%24#0, tmp%26#0, tmp%29#0, tmp%31#0, tmp%33#0, tmp%36#0, tmp%45#0
debug: selected true#0 from equivalence set
debug: Found equivalence set: false#0, tmp%25#0, tmp%30#0, tmp%32#0, tmp%39#0, tmp%42#0
debug: selected false#0 from equivalence set
debug: Found equivalence set: tmp%46#0, tmp%47#0
debug: selected tmp%46#0 from equivalence set
debug: Copy propagation made 28 modifications
debug: Replacing redundant declaration let tmp%43#0: bool = decode_bytes<bool>(false#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:51:15-30, ir_type=bool, name='tmp%40', version=0),)
debug: Replacing redundant declaration let tmp%46#0: bool = decode_bytes<bool>(true#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:50:15-29, ir_type=bool, name='tmp%37', version=0),)
debug: Replacing redundant declaration let tmp%37#0: bool = decode_bytes<bool>(true#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:62:15-26, ir_type=bool, name='tmp%0', version=1),)
debug: Replacing redundant declaration let tmp%40#0: bool = decode_bytes<bool>(false#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:64:19-31, ir_type=bool, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%0#1, tmp%37#0, tmp%46#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%1#1, tmp%40#0, tmp%43#0
debug: selected tmp%1#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Replacing redundant declaration let tmp%44#0: bool = (! tmp%1#1) with copy of existing registers (Register(source_location=arc4_types/bool.py:64:15-31, ir_type=bool, name='tmp%2', version=1),)
debug: Removing redundant assert of tmp%0#1
debug: Found equivalence set: tmp%2#1, tmp%44#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%2#1
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: 1u
debug: replacing redundant decode-of-encode with: 0u
debug: replacing redundant decode-of-encode with: select%0#0
debug: replacing redundant encode-of-decode with: true#0
debug: replacing redundant encode-of-decode with: false#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, new_array_length#0
debug: selected new_array_length#0 from equivalence set
debug: Found equivalence set: tmp%3#0, new_array_length_b#0
debug: selected new_array_length_b#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#0, current_bytes#0
debug: selected current_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, required_bytes#0
debug: selected required_bytes#0 from equivalence set
debug: Found equivalence set: tmp%12#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%13#0, write_offset#0
debug: selected write_offset#0 from equivalence set
debug: Found equivalence set: tmp%14#0, write_end#0
debug: selected write_end#0 from equivalence set
debug: Found equivalence set: tmp%17#0, result#3
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%18#0, write_offset#2
debug: selected write_offset#2 from equivalence set
debug: Found equivalence set: tmp%19#0, read_offset#2
debug: selected read_offset#2 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#0: bool = decode_bytes<bool>(true#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:62:15-26, ir_type=bool, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%6#0: bool = decode_bytes<bool>(false#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:64:19-31, ir_type=bool, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%9#0: bool = decode_bytes<bool>(true#0) with copy of existing registers (Register(source_location=arc4_types/bool.py:62:15-26, ir_type=bool, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%3#0, tmp%9#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%6#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: true#0
debug: replacing redundant encode-of-decode with: false#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: true#0, tmp%4#1
debug: selected true#0 from equivalence set
debug: Found equivalence set: false#0, tmp%7#1
debug: selected false#0 from equivalence set
debug: Found equivalence set: select%0#0, tmp%5#0
debug: selected select%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%21#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (== true#0 true#0) to 1u
debug: Simplified (== false#0 false#0) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (!= 0u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#1
debug: Removing unused variable tmp%5#1
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%41#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.arc4_types.bool.Arc4BoolTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.bool.Arc4BoolTypeContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.bool.Arc4BoolTypeContract
debug: optimizing approval program of test_cases.arc4_types.bool.Arc4BoolTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, true#0
debug: selected true#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, false#0
debug: selected false#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(bool1[12])%0#0, static_boolean_array#0
debug: selected static_boolean_array#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%10#0, array_item%0#0
debug: selected aggregate%get_bit%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, values%0#0
debug: selected aggregate%encoded_bool%2#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%11#0, array_item%1#0
debug: selected aggregate%get_bit%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%3#0, values%1#0
debug: selected aggregate%encoded_bool%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(len+bool1[])%0#0, dynamic_boolean_array#0
debug: selected dynamic_boolean_array#0 from equivalence set
debug: Found equivalence set: aggregate%head%7#0, aggregate%as_Encoded(bool8[])%0#0, new_items_bytes#0
debug: selected new_items_bytes#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 1u 1u) to 0xc0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xc0 2u 1u) to 0xe0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xe0 3u 1u) to 0xf0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xf0 4u 1u) to 0xf8
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xf8 5u 1u) to 0xfc
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xfc 6u 1u) to 0xfe
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xfe 7u 1u) to 0xff
debug: Simplified (concat 0x 0xff) to 0xff
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 1u 1u) to 0xc0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xc0 2u 1u) to 0xe0
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0xe0 3u 1u) to 0xf0
debug: Simplified (concat 0xff 0xf0) to 0xfff0
debug: Simplified (== 0xfff0 0xfff0) to 1u
debug: Simplified (< 0u 12u) to 1u
debug: Simplified (getbit 0xfff0 0u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (== 0x80 0x80) to 1u
debug: Simplified (< 11u 12u) to 1u
debug: Simplified (getbit 0xfff0 11u) to 1u
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (== 0x80 0x80) to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0003
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (concat 0x0003 0xa0) to 0x0003a0
debug: Simplified (== 0x0003a0 0x0003a0) to 1u
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified (concat 0x80 0x00) to 0x8000
debug: Simplified (concat 0x8000 0x80) to 0x800080
debug: Simplified (concat 0x800080 0x00) to 0x80008000
debug: Simplified (concat 0x80008000 0x80) to 0x8000800080
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+bool1[])%0#0, encoded_array%0#0
debug: selected aggregate%len_u16%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable true#0
debug: Removing unused variable false#0
debug: Removing unused variable aggregate%get_bit%0#0
debug: Removing unused variable aggregate%set_bit%0#0
debug: Removing unused variable aggregate%get_bit%1#0
debug: Removing unused variable aggregate%set_bit%1#0
debug: Removing unused variable aggregate%get_bit%2#0
debug: Removing unused variable aggregate%set_bit%2#0
debug: Removing unused variable aggregate%get_bit%3#0
debug: Removing unused variable aggregate%set_bit%3#0
debug: Removing unused variable aggregate%get_bit%4#0
debug: Removing unused variable aggregate%set_bit%4#0
debug: Removing unused variable aggregate%get_bit%5#0
debug: Removing unused variable aggregate%set_bit%5#0
debug: Removing unused variable aggregate%get_bit%6#0
debug: Removing unused variable aggregate%set_bit%6#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%get_bit%7#0
debug: Removing unused variable aggregate%set_bit%7#0
debug: Removing unused variable aggregate%get_bit%8#0
debug: Removing unused variable aggregate%set_bit%8#0
debug: Removing unused variable aggregate%get_bit%9#0
debug: Removing unused variable aggregate%set_bit%9#0
debug: Removing unused variable static_boolean_array#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable aggregate%lt%0#0
debug: Removing unused variable aggregate%get_bit%10#0
debug: Removing unused variable aggregate%encoded_bool%2#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable aggregate%lt%1#0
debug: Removing unused variable aggregate%get_bit%11#0
debug: Removing unused variable aggregate%encoded_bool%3#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%get_bit%12#0
debug: Removing unused variable aggregate%set_bit%10#0
debug: Removing unused variable aggregate%get_bit%13#0
debug: Removing unused variable aggregate%set_bit%11#0
debug: Removing unused variable dynamic_boolean_array#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable new_items_bytes#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.bool.get_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.bool.Arc4BoolTypeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.bool.Arc4BoolTypeContract
arc4_types/bool.py:12 debug: auto reserving slots in test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program, []
arc4_types/bool.py:72 debug: auto reserving slots in test_cases.arc4_types.bool.get_arr, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.bool.Arc4BoolTypeContract
arc4_types/bool.py:57 debug: auto reserving slots in test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program using strategy 'root_operand'
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.arc4_types.bool.get_arr
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.bool.get_arr using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.bool.get_arr
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4BoolTypeContract.ir/Arc4BoolTypeContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4BoolTypeContract.ir/Arc4BoolTypeContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_block@0.ops[5]: 'l-store-copy select%0#0 0'
debug: Replaced main_block@0.ops[7]: 'v-load select%0#0' with 'l-load select%0#0'
debug: Inserted main_block@0.ops[10]: 'l-store-copy dynamic_boolean_array#1 0'
debug: Replaced main_block@0.ops[12]: 'v-load dynamic_boolean_array#1' with 'l-load dynamic_boolean_array#1'
debug: Inserted main_block@0.ops[15]: 'l-store-copy array_length#0 0'
debug: Replaced main_block@0.ops[17]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted main_block@0.ops[20]: 'l-store-copy new_array_length#0 0'
debug: Replaced main_block@0.ops[22]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted main_block@0.ops[24]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_block@0.ops[26]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_block@0.ops[36]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_block@0.ops[38]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_block@0.ops[45]: 'l-store-copy tmp%7#2 0'
debug: Replaced main_block@0.ops[47]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_block@0.ops[28]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced main_block@0.ops[31]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted main_block@0.ops[51]: 'l-store-copy required_bytes#0 0'
debug: Replaced main_block@0.ops[54]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted main_block@0.ops[56]: 'l-store-copy tmp%9#2 0'
debug: Replaced main_block@0.ops[60]: 'v-load tmp%9#2' with 'l-load tmp%9#2'
debug: Inserted main_block@0.ops[42]: 'l-store-copy current_bytes#0 0'
debug: Replaced main_block@0.ops[54]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted main_block@0.ops[13]: 'l-store-copy dynamic_boolean_array#1 0'
debug: Replaced main_block@0.ops[31]: 'v-load dynamic_boolean_array#1' with 'l-load dynamic_boolean_array#1'
debug: Inserted main_block@0.ops[19]: 'l-store-copy array_length#0 1'
debug: Replaced main_block@0.ops[36]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted main_block@0.ops[25]: 'l-store-copy new_array_length#0 2'
debug: Replaced main_block@0.ops[47]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted main_block@0.ops[36]: 'l-store-copy result#0 2'
debug: Replaced main_block@0.ops[63]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_if_body@4.ops[3]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_if_body@4.ops[5]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_if_body@4.ops[11]: 'l-store-copy result#0 0'
debug: Replaced main_if_body@4.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_if_body@4.ops[7]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_if_body@4.ops[10]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_if_else@5.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced main_after_if_else@5.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted main_while_top@6.ops[3]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_while_top@6.ops[5]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_while_body@7.ops[3]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_while_body@7.ops[7]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_while_body@7.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced main_while_body@7.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted main_while_body@7.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced main_while_body@7.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted main_after_while@8.ops[3]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_after_while@8.ops[5]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Found 3 edge set/s for test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program
debug: test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
arc4_types/bool.py:12 debug: optimizing TEAL subroutine ops test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program() -> uint64:
arc4_types/bool.py:72 debug: optimizing TEAL subroutine ops test_cases.arc4_types.bool.get_arr() -> bytes:
arc4_types/bool.py:12 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_if_body@4 into main
debug: inlining single reference block main_while_body@7 into main_while_top@6
debug: removing explicit jump to fall-through block main_after_if_else@5
debug: removing explicit jump to fall-through block main_while_top@6
arc4_types/bool.py:72 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.bool.get_arr() -> bytes:
debug: inlining single reference block get_arr_block@0 into get_arr
arc4_types/bool.py:57 debug: optimizing TEAL subroutine ops test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program() -> uint64:
arc4_types/bool.py:57 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.array.Arc4ArraysContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.arc4_types.array.Arc4ArraysContract.hash_as_array for inlining
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/array.py:77:9 debug: inlining call to test_cases.arc4_types.array.Arc4ArraysContract.hash_as_array in test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, dynamic_uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, uint8_item#0
debug: selected uint8_item#0 from equivalence set
debug: Found equivalence set: tmp%1#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: encoded_array%1#0, aliased_dynamic#0
debug: selected aliased_dynamic#0 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: array_item%1#0, uint16_item#0
debug: selected uint16_item#0 from equivalence set
debug: Found equivalence set: tmp%4#0, total#4
debug: selected total#4 from equivalence set
debug: Found equivalence set: encoded_array%2#0, dynamic_string_array#0
debug: selected dynamic_string_array#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, string_item#0
debug: selected string_item#0 from equivalence set
debug: Found equivalence set: item_index_internal%2#1, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%13#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%16#0, result#3
debug: selected result#3 from equivalence set
debug: Found equivalence set: encoded_array%3#0, static_uint32_array#0
debug: selected static_uint32_array#0 from equivalence set
debug: Found equivalence set: array_length%3#0, reverse_index_internal%3#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: array_item%4#0, uint32_item#0
debug: selected uint32_item#0 from equivalence set
debug: Found equivalence set: tmp%19#0, total#6
debug: selected total#6 from equivalence set
debug: Found equivalence set: encoded_array%4#0, aliased_static#0
debug: selected aliased_static#0 from equivalence set
debug: Found equivalence set: encoded_array%5#0, static_string_array#0
debug: selected static_string_array#0 from equivalence set
debug: Found equivalence set: array_length%4#0, reverse_index_internal%4#0
debug: selected array_length%4#0 from equivalence set
debug: Found equivalence set: array_item%7#0, string_item#1
debug: selected string_item#1 from equivalence set
debug: Found equivalence set: item_index_internal%4#1, index#2
debug: selected index#2 from equivalence set
debug: Found equivalence set: tmp%28#0, result#6
debug: selected result#6 from equivalence set
debug: Found equivalence set: tmp%31#0, result#8
debug: selected result#8 from equivalence set
debug: Found equivalence set: updated_array%0#0, static_string_array#3
debug: selected static_string_array#3 from equivalence set
debug: Found equivalence set: array_length%5#0, reverse_index_internal%5#0
debug: selected array_length%5#0 from equivalence set
debug: Found equivalence set: array_item%8#0, string_item#2
debug: selected string_item#2 from equivalence set
debug: Found equivalence set: tmp%36#0, result#12
debug: selected result#12 from equivalence set
debug: Copy propagation made 29 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable index#1
debug: Removing unused variable commitment_args_concat#0
debug: Removing unused variable reinterpret_Encoded(uint8[32])%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== index#0 0u) to (! index#0)
debug: Simplified (== index#2 0u) to (! index#2)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplified branch on !tmp%12#0 by swapping zero and non-zero targets
debug: simplified terminator of block@10 from goto tmp%12#0 ? block@11 : block@12 to goto index#0 ? block@12 : block@11
debug: simplified branch on !tmp%27#0 by swapping zero and non-zero targets
debug: simplified terminator of block@21 from goto tmp%27#0 ? block@22 : block@23 to goto index#2 ? block@23 : block@22
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@14 with block@13 in block@9
debug: Merged linear block@14 into block@13
debug: Replaced predecessor block@18 with block@17 in block@16
debug: Merged linear block@18 into block@17
debug: Replaced predecessor block@25 with block@24 in block@20
debug: Merged linear block@25 into block@24
debug: Replaced predecessor block@29 with block@28 in block@27
debug: Merged linear block@29 into block@28
debug: Replaced predecessor block@31 with block@30 in block@32
debug: Merged linear block@31 into block@30
debug: Merged linear block@32 into block@30
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%10#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Hello") with copy of existing registers (Register(source_location=arc4_types/array.py:35:56-75, ir_type=Encoded(len+utf8[]), name='tmp%6', version=0),)
debug: Replacing redundant declaration let array_item%6#0: Encoded(uint8) = extract_value(aliased_static#0, 0u) with copy of existing registers (Register(source_location=arc4_types/array.py:58:16-33, ir_type=Encoded(uint8), name='array_item%5', version=0),)
debug: Replacing redundant declaration let tmp%33#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("Ping") with copy of existing registers (Register(source_location=arc4_types/array.py:60:42-60, ir_type=Encoded(len+utf8[]), name='tmp%25', version=0),)
debug: Found equivalence set: tmp%6#0, tmp%10#0
debug: selected tmp%6#0 from equivalence set
debug: Found equivalence set: array_item%5#0, array_item%6#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: tmp%25#0, tmp%33#0
debug: selected tmp%25#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let tmp%22#0: uint64 = decode_bytes<uint64>(array_item%5#0) with copy of existing registers (Register(source_location=arc4_types/array.py:58:16-40, ir_type=uint64, name='tmp%21', version=0),)
debug: Found equivalence set: tmp%21#0, tmp%22#0
debug: selected tmp%21#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.hash_as_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.arc4_types.array.Arc4ArraysContract.hash_as_array
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%27#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.array.Arc4ArraysContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.array.Arc4ArraysContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.array.Arc4ArraysContract
debug: optimizing approval program of test_cases.arc4_types.array.Arc4ArraysContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_types/array.py:71:9 debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(len+uint8[])%0#0, dynamic_uint8_array#0
debug: selected dynamic_uint8_array#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, array_length%0#0
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, uint8_item#0
debug: selected uint8_item#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(len+uint16[])%0#0, aliased_dynamic#0
debug: selected aliased_dynamic#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, array_length%1#0
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, uint16_item#0
debug: selected uint16_item#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%6#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%7#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(len+(len+utf8[])[])%0#0, dynamic_string_array#0
debug: selected dynamic_string_array#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%2#0, tmp%8#0
debug: selected aggregate%array_length%2#0 from equivalence set
debug: Found equivalence set: aggregate%item%0#0, array_item%2#0
debug: selected aggregate%item%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%4#0, array_length%2#0
debug: selected aggregate%array_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%item%1#0, string_item#0
debug: selected string_item#0 from equivalence set
debug: Found equivalence set: aggregate%head%8#0, aggregate%as_Encoded(uint32[4])%0#0, static_uint32_array#0
debug: selected static_uint32_array#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, uint32_item#0
debug: selected uint32_item#0 from equivalence set
debug: Found equivalence set: aggregate%head%9#0, aggregate%as_Encoded(uint8[1])%0#0, aliased_static#0
debug: selected aliased_static#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%5#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+utf8[])%2#0, tmp%25#0, new_item#0
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+utf8[])%3#0, tmp%26#0
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((len+utf8[])[2])%0#0, static_string_array#0, array_head_and_tail#0
debug: selected static_string_array#0 from equivalence set
debug: Found equivalence set: aggregate%item%2#0, string_item#1
debug: selected string_item#1 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, aggregate%updated_array%0#0, static_string_array#3
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: aggregate%item%4#0, string_item#2
debug: selected string_item#2 from equivalence set
debug: Copy propagation made 36 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable array_length%3#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable array_length%4#0
debug: Removing unused variable aggregate%item%3#0
debug: Removing unused variable index#3
debug: Removing unused variable array_length#0
debug: Removing unused variable array_length%5#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Removing unused variable aggregate%item_head_tail_length%3#0
debug: Removing unused variable aggregate%item_length_in_bytes%3#0
debug: Removing unused variable aggregate%item_length%3#0
debug: Removing unused variable aggregate%item_offset%3#0
debug: Removing unused variable aggregate%item_offset_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x01) to 0x000201
debug: Simplified (concat 0x000201 0x02) to 0x00020102
debug: Simplified (extract_uint16 0x00020102 0u) to 2u
debug: Simplified (len 0x00020102) to 4u
debug: Simplified (substring3 0x00020102 2u 4u) to 0x0102
debug: Simplified (* item_index_internal%0#1 1u) to item_index_internal%0#1
debug: Simplified (btoi uint8_item#0) to (getbyte 0x0102 item_index_internal%0#1)
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0001
debug: Simplified (concat 0x0001 0x0001) to 0x00010001
debug: Simplified (extract_uint16 0x00010001 0u) to 1u
debug: Simplified (len 0x00010001) to 4u
debug: Simplified (substring3 0x00010001 2u 4u) to 0x0001
debug: Simplified (btoi uint16_item#0) to (extract_uint16 0x0001 aggregate%bytes_offset%1#0)
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (len "World") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0005
debug: Simplified (concat 0x0005 "World") to 0x0005576f726c64
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0002
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0004
debug: Simplified (concat 0x0002 0x0004) to 0x00020004
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (+ 4u 7u) to 11u
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x000b
debug: Simplified (concat 0x00020004 0x000b) to 0x00020004000b
debug: Simplified (concat 0x00020004000b 0x000548656c6c6f) to 0x00020004000b000548656c6c6f
debug: Simplified (concat 0x00020004000b000548656c6c6f 0x0005576f726c64) to 0x00020004000b000548656c6c6f0005576f726c64
debug: Simplified (extract_uint16 0x00020004000b000548656c6c6f0005576f726c64 0u) to 2u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (len 0x00020004000b000548656c6c6f0005576f726c64) to 20u
debug: Simplified (substring3 0x00020004000b000548656c6c6f0005576f726c64 2u 20u) to 0x0004000b000548656c6c6f0005576f726c64
debug: Simplified (extract_uint16 0x00020004000b000548656c6c6f0005576f726c64 0u) to 2u
debug: Simplified (< 0u 2u) to 1u
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (extract_uint16 0x0004000b000548656c6c6f0005576f726c64 0u) to 4u
debug: Simplified (extract_uint16 0x0004000b000548656c6c6f0005576f726c64 4u) to 5u
debug: Simplified (* 5u 1u) to 5u
debug: Simplified (+ 5u 2u) to 7u
debug: Simplified (extract3 0x0004000b000548656c6c6f0005576f726c64 4u 7u) to 0x000548656c6c6f
debug: Simplified (== 0x000548656c6c6f 0x000548656c6c6f) to 1u
debug: Simplified (extract_uint16 0x00020004000b000548656c6c6f0005576f726c64 0u) to 2u
debug: Simplified (len 0x00020004000b000548656c6c6f0005576f726c64) to 20u
debug: Simplified (substring3 0x00020004000b000548656c6c6f0005576f726c64 2u 20u) to 0x0004000b000548656c6c6f0005576f726c64
debug: Simplified (* aggregate%item_length%1#0 1u) to aggregate%item_length%1#0
debug: Simplified (concat 0x 0x00000001) to 0x00000001
debug: Simplified (concat 0x00000001 0x0000000a) to 0x000000010000000a
debug: Simplified (concat 0x000000010000000a 0x000000ff) to 0x000000010000000a000000ff
debug: Simplified (concat 0x000000010000000a000000ff 0x00000080) to 0x000000010000000a000000ff00000080
debug: Simplified (btoi uint32_item#0) to (extract_uint32 0x000000010000000a000000ff00000080 aggregate%bytes_offset%2#0)
debug: Simplified (concat 0x 0x65) to 0x65
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (extract3 0x65 0u 1u) // on error: index access is out of bounds to 0x65
debug: Simplified (btoi 0x65) to 101u
debug: Simplified (+ 101u 101u) to 202u
debug: Simplified (== 202u 202u) to 1u
debug: Simplified (len "Ping") to 4u
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x0004
debug: Simplified (concat 0x0004 "Ping") to 0x000450696e67
debug: Simplified (len "Pong") to 4u
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0004
debug: Simplified (concat 0x0004 "Pong") to 0x0004506f6e67
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0004
debug: Simplified (concat 0x 0x0004) to 0x0004
debug: Simplified (len 0x000450696e67) to 6u
debug: Simplified (+ 4u 6u) to 10u
debug: Simplified ((extract 6 2) aggregate%as_bytes%10#0) to 0x000a
debug: Simplified (concat 0x0004 0x000a) to 0x0004000a
debug: Simplified (concat 0x0004000a 0x000450696e67) to 0x0004000a000450696e67
debug: Simplified (concat 0x0004000a000450696e67 0x0004506f6e67) to 0x0004000a000450696e670004506f6e67
debug: Simplified (* aggregate%item_length%2#0 1u) to aggregate%item_length%2#0
debug: Simplified (< 1u 2u) to 1u
debug: Simplified (< 1u 2u) to 1u
debug: Simplified (< 1u 2u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (extract_uint16 0x0004000a000450696e670004506f6e67 2u) to 10u
debug: Simplified (extract_uint16 0x0004000a000450696e670004506f6e67 10u) to 4u
debug: Simplified (+ 10u 4u) to 14u
debug: Simplified (+ 14u 2u) to 16u
debug: Simplified (substring3 0x0004000a000450696e670004506f6e67 0u 10u) to 0x0004000a000450696e67
debug: Simplified (concat 0x0004000a000450696e67 0x000450696e67) to 0x0004000a000450696e67000450696e67
debug: Simplified (len 0x0004000a000450696e670004506f6e67) to 16u
debug: Simplified (substring3 0x0004000a000450696e670004506f6e67 16u 16u) to 0x
debug: Simplified (concat 0x0004000a000450696e67000450696e67 0x) to 0x0004000a000450696e67000450696e67
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (extract_uint16 0x0004000a000450696e67000450696e67 2u) to 10u
debug: Simplified (select 4u 10u 1u) to 10u
debug: Simplified (* aggregate%item_length%4#0 1u) to aggregate%item_length%4#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@31 with block@26 in block@32
debug: Merged linear block@31 into block@26
debug: Replaced predecessor block@35 with block@34 in block@27
debug: Merged linear block@35 into block@34
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%3#0: bytes[8] = (itob 5u) with copy of existing registers (Register(source_location=arc4_types/array.py:35:56-75, ir_type=bytes[8], name='aggregate%as_bytes%2', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%8#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/array.py:60:42-60, ir_type=bytes[8], name='aggregate%as_bytes%7', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%9#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/array.py:60:42-60, ir_type=bytes[8], name='aggregate%as_bytes%7', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=arc4_types/array.py:25:30-69, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%7#0: bytes[8] = (itob 4u) with copy of existing registers (Register(source_location=arc4_types/array.py:35:31-97, ir_type=bytes[8], name='aggregate%as_bytes%5', version=0),)
debug: Found equivalence set: item_index_internal%0#1, aggregate%bytes_offset%0#0
debug: selected item_index_internal%0#1 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%2#0, aggregate%as_bytes%3#0
debug: selected aggregate%as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%4#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%item_length%1#0, aggregate%item_length_in_bytes%1#0
debug: selected aggregate%item_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%5#0, aggregate%as_bytes%7#0, aggregate%as_bytes%8#0, aggregate%as_bytes%9#0
debug: selected aggregate%as_bytes%5#0 from equivalence set
debug: Found equivalence set: aggregate%item_length%2#0, aggregate%item_length_in_bytes%2#0
debug: selected aggregate%item_length%2#0 from equivalence set
debug: Found equivalence set: aggregate%item_length%4#0, aggregate%item_length_in_bytes%4#0
debug: selected aggregate%item_length%4#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable dynamic_uint8_array#0
debug: Removing unused variable aggregate%array_length%0#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable uint8_item#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%len_u16%1#0
debug: Removing unused variable aliased_dynamic#0
debug: Removing unused variable aggregate%array_length%1#0
debug: Removing unused variable aggregate%total_length%1#0
debug: Removing unused variable aggregate%array_trimmed%1#0
debug: Removing unused variable uint16_item#0
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%len_u16%2#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%4#0
debug: Removing unused variable aggregate%concat%0#0
debug: Removing unused variable dynamic_string_array#0
debug: Removing unused variable aggregate%array_length%2#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable aggregate%total_length%2#0
debug: Removing unused variable aggregate%array_head_and_tail%0#0
debug: Removing unused variable aggregate%array_length%3#0
debug: Removing unused variable aggregate%lt%0#0
debug: Removing unused variable aggregate%item_offset_offset%0#0
debug: Removing unused variable aggregate%item_offset%0#0
debug: Removing unused variable aggregate%item_length%0#0
debug: Removing unused variable aggregate%item_length_in_bytes%0#0
debug: Removing unused variable aggregate%item_head_tail_length%0#0
debug: Removing unused variable aggregate%item%0#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable aggregate%array_length%4#0
debug: Removing unused variable aggregate%total_length%3#0
debug: Removing unused variable aggregate%array_head_and_tail%1#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable static_uint32_array#0
debug: Removing unused variable uint32_item#0
debug: Removing unused variable aliased_static#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable new_item#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Removing unused variable aggregate%encoded_value%3#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%10#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%as_bytes%10#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%11#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable static_string_array#0
debug: Removing unused variable aggregate%lt%1#0
debug: Removing unused variable aggregate%lt%2#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable offset_for_index#0
debug: Removing unused variable old_item_length#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable old_item_end#0
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%9#1
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%2#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.array.Arc4ArraysContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.array.Arc4ArraysContract
arc4_types/array.py:24 debug: auto reserving slots in test_cases.arc4_types.array.Arc4ArraysContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.array.Arc4ArraysContract
arc4_types/array.py:85 debug: auto reserving slots in test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.array.Arc4ArraysContract.approval_program using strategy 'root_operand'
debug: Coalescing total#0 with [total#9, total#1, total#2, total#12, total#3, total#4, total#15, total#5, total#6]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#1]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing result#0 with [result#15, result#2, result#1, result#18, result#3, result#4, result#5, result#21, result#7, result#6, result#24, result#8, result#9, result#10, result#27, result#11, result#12]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#2]
debug: Coalescing index#0 with [index#3, index#4, index#2]
debug: Coalescing string_item#0 with [string_item#1, string_item#2]
debug: Coalescing item_index_internal%3#0 with [item_index_internal%3#5, item_index_internal%3#1, item_index_internal%3#2]
debug: Coalescing item_index_internal%4#0 with [item_index_internal%4#2]
debug: Coalescing head_offset#0 with [head_offset#6, head_offset#1, head_offset#3]
debug: Coalescing array_head_and_tail#1 with [array_head_and_tail#6, array_head_and_tail#2, array_head_and_tail#3]
debug: Coalescing tail_offset#0 with [tail_offset#5, tail_offset#1, tail_offset#2]
debug: Coalescing item_index_internal%5#0 with [item_index_internal%5#5, item_index_internal%5#1, item_index_internal%5#2]
debug: Coalescing resulted in 155 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%1#0
debug: loc: {index#0=None, result#0=result#0, item_index_internal%2#0=item_index_internal%2#0}
debug: pred: {index#0=item_index_internal%2#0, result#0=result#0}
debug: ready: index#0
debug: to_do: index#0, result#0
debug: * avail index#0
debug: * avail item_index_internal%2#0
debug: * to_do result#0
debug: * to_do index#0
debug: loc: {index#0=index#0, result#0=result#0}
debug: pred: {index#0=index#0, result#0=result#0}
debug: ready: 
debug: to_do: index#0, result#0
debug: * to_do result#0
debug: * to_do index#0
debug: loc: {index#0=None, result#0=result#0, item_index_internal%2#0=item_index_internal%2#0}
debug: pred: {index#0=item_index_internal%2#0, result#0=result#0}
debug: ready: index#0
debug: to_do: index#0, result#0
debug: * avail index#0
debug: * avail item_index_internal%2#0
debug: * to_do result#0
debug: * to_do index#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, total#0=total#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, total#0=total#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%3#0
debug: loc: {item_index_internal%3#0=item_index_internal%3#0, total#0=total#0}
debug: pred: {item_index_internal%3#0=item_index_internal%3#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%3#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%3#0
debug: loc: {index#0=None, result#0=result#0, item_index_internal%4#0=item_index_internal%4#0}
debug: pred: {index#0=item_index_internal%4#0, result#0=result#0}
debug: ready: index#0
debug: to_do: index#0, result#0
debug: * avail index#0
debug: * avail item_index_internal%4#0
debug: * to_do result#0
debug: * to_do index#0
debug: loc: {index#0=index#0, result#0=result#0}
debug: pred: {index#0=index#0, result#0=result#0}
debug: ready: 
debug: to_do: index#0, result#0
debug: * to_do result#0
debug: * to_do index#0
debug: loc: {index#0=None, result#0=result#0, item_index_internal%4#0=item_index_internal%4#0}
debug: pred: {index#0=item_index_internal%4#0, result#0=result#0}
debug: ready: index#0
debug: to_do: index#0, result#0
debug: * avail index#0
debug: * avail item_index_internal%4#0
debug: * to_do result#0
debug: * to_do index#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#1=array_head_and_tail#1}
debug: pred: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#1=array_head_and_tail#1}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#0, array_head_and_tail#1
debug: * to_do array_head_and_tail#1
debug: * to_do tail_offset#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#1=array_head_and_tail#1}
debug: pred: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#1=array_head_and_tail#1}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#0, array_head_and_tail#1
debug: * to_do array_head_and_tail#1
debug: * to_do tail_offset#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#1=array_head_and_tail#1}
debug: pred: {head_offset#0=head_offset#0, tail_offset#0=tail_offset#0, array_head_and_tail#1=array_head_and_tail#1}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#0, array_head_and_tail#1
debug: * to_do array_head_and_tail#1
debug: * to_do tail_offset#0
debug: * to_do head_offset#0
debug: loc: {item_index_internal%5#0=item_index_internal%5#0, result#0=result#0}
debug: pred: {item_index_internal%5#0=item_index_internal%5#0, result#0=result#0}
debug: ready: 
debug: to_do: item_index_internal%5#0, result#0
debug: * to_do result#0
debug: * to_do item_index_internal%5#0
debug: loc: {item_index_internal%5#0=item_index_internal%5#0, result#0=result#0}
debug: pred: {item_index_internal%5#0=item_index_internal%5#0, result#0=result#0}
debug: ready: 
debug: to_do: item_index_internal%5#0, result#0
debug: * to_do result#0
debug: * to_do item_index_internal%5#0
debug: loc: {item_index_internal%5#0=item_index_internal%5#0, result#0=result#0}
debug: pred: {item_index_internal%5#0=item_index_internal%5#0, result#0=result#0}
debug: ready: 
debug: to_do: item_index_internal%5#0, result#0
debug: * to_do result#0
debug: * to_do item_index_internal%5#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4ArraysContract.ir/Arc4ArraysContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4ArraysContract.ir/Arc4ArraysContract.clear.400.destructured.ir
debug: Inserted main_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@2.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@2.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@2.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@2.ops[10]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@4.ops[3]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_after_for@4.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@6.ops[3]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced main_for_body@6.ops[6]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted main_for_body@6.ops[8]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_for_body@6.ops[11]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_for_body@6.ops[1]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced main_for_body@6.ops[15]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_after_for@8.ops[3]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_after_for@8.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_after_for@8.ops[10]: 'l-store-copy item_index_internal%2#0 0'
debug: Replaced main_after_for@8.ops[12]: 'v-load item_index_internal%2#0' with 'l-load item_index_internal%2#0'
debug: Inserted main_for_header@9.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@9.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@10.ops[11]: 'l-store-copy aggregate%item_length%1#0 0'
debug: Replaced main_for_body@10.ops[13]: 'v-load aggregate%item_length%1#0' with 'l-load aggregate%item_length%1#0'
debug: Inserted main_for_body@10.ops[3]: 'l-store-copy aggregate%item_offset_offset%1#0 0'
debug: Replaced main_for_body@10.ops[6]: 'v-load aggregate%item_offset_offset%1#0' with 'l-load aggregate%item_offset_offset%1#0'
debug: Inserted main_for_body@10.ops[8]: 'l-store-copy aggregate%item_offset%1#0 0'
debug: Replaced main_for_body@10.ops[11]: 'v-load aggregate%item_offset%1#0' with 'l-load aggregate%item_offset%1#0'
debug: Inserted main_for_body@10.ops[18]: 'l-store-copy aggregate%item_head_tail_length%1#0 0'
debug: Replaced main_for_body@10.ops[22]: 'v-load aggregate%item_head_tail_length%1#0' with 'l-load aggregate%item_head_tail_length%1#0'
debug: Inserted main_for_body@10.ops[12]: 'l-store-copy aggregate%item_offset%1#0 1'
debug: Replaced main_for_body@10.ops[22]: 'v-load aggregate%item_offset%1#0' with 'l-load aggregate%item_offset%1#0'
debug: Inserted main_for_body@10.ops[1]: 'l-store-copy index#0 0'
debug: Replaced main_for_body@10.ops[27]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_else_body@12.ops[2]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_else_body@12.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_else_body@12.ops[7]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_else_body@12.ops[10]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_after_if_else@13.ops[3]: 'l-store-copy item_index_internal%2#0 0'
debug: Replaced main_after_if_else@13.ops[5]: 'v-load item_index_internal%2#0' with 'l-load item_index_internal%2#0'
debug: Inserted main_after_for@15.ops[3]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_after_for@15.ops[5]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_for_header@16.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced main_for_header@16.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted main_for_body@17.ops[3]: 'l-store-copy aggregate%bytes_offset%2#0 0'
debug: Replaced main_for_body@17.ops[6]: 'v-load aggregate%bytes_offset%2#0' with 'l-load aggregate%bytes_offset%2#0'
debug: Inserted main_for_body@17.ops[8]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_for_body@17.ops[11]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_for_body@17.ops[1]: 'l-store-copy item_index_internal%3#0 0'
debug: Replaced main_for_body@17.ops[15]: 'v-load item_index_internal%3#0' with 'l-load item_index_internal%3#0'
debug: Inserted main_after_for@19.ops[3]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_after_for@19.ops[5]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_after_for@19.ops[10]: 'l-store-copy item_index_internal%4#0 0'
debug: Replaced main_after_for@19.ops[12]: 'v-load item_index_internal%4#0' with 'l-load item_index_internal%4#0'
debug: Inserted main_for_header@20.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced main_for_header@20.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted main_for_body@21.ops[11]: 'l-store-copy aggregate%item_length%2#0 0'
debug: Replaced main_for_body@21.ops[13]: 'v-load aggregate%item_length%2#0' with 'l-load aggregate%item_length%2#0'
debug: Inserted main_for_body@21.ops[3]: 'l-store-copy aggregate%item_offset_offset%2#0 0'
debug: Replaced main_for_body@21.ops[6]: 'v-load aggregate%item_offset_offset%2#0' with 'l-load aggregate%item_offset_offset%2#0'
debug: Inserted main_for_body@21.ops[8]: 'l-store-copy aggregate%item_offset%2#0 0'
debug: Replaced main_for_body@21.ops[11]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted main_for_body@21.ops[18]: 'l-store-copy aggregate%item_head_tail_length%2#0 0'
debug: Replaced main_for_body@21.ops[22]: 'v-load aggregate%item_head_tail_length%2#0' with 'l-load aggregate%item_head_tail_length%2#0'
debug: Inserted main_for_body@21.ops[12]: 'l-store-copy aggregate%item_offset%2#0 1'
debug: Replaced main_for_body@21.ops[22]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted main_for_body@21.ops[1]: 'l-store-copy index#0 0'
debug: Replaced main_for_body@21.ops[27]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_else_body@23.ops[2]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_else_body@23.ops[5]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_else_body@23.ops[7]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_else_body@23.ops[10]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_after_if_else@24.ops[3]: 'l-store-copy item_index_internal%4#0 0'
debug: Replaced main_after_if_else@24.ops[5]: 'v-load item_index_internal%4#0' with 'l-load item_index_internal%4#0'
debug: Inserted main_after_for@26.ops[3]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_after_for@26.ops[5]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_for_header@32.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@32.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@33.ops[2]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_for_body@33.ops[4]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_for_body@33.ops[11]: 'l-store-copy array_head_and_tail#1 0'
debug: Replaced main_for_body@33.ops[13]: 'v-load array_head_and_tail#1' with 'l-load array_head_and_tail#1'
debug: Inserted main_for_body@33.ops[16]: 'l-store-copy tmp%9#2 0'
debug: Replaced main_for_body@33.ops[18]: 'v-load tmp%9#2' with 'l-load tmp%9#2'
debug: Inserted main_for_body@33.ops[21]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_for_body@33.ops[24]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_for_body@33.ops[6]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced main_for_body@33.ops[10]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted main_for_body@33.ops[16]: 'l-store-copy tail_offset#0 1'
debug: Replaced main_for_body@33.ops[25]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted main_for_body@33.ops[1]: 'l-store-copy tail_offset#0 0'
debug: Replaced main_for_body@33.ops[16]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted main_for_body@33.ops[11]: 'l-store-copy head_offset#0 3'
debug: Replaced main_for_body@33.ops[31]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted main_for_header@27.ops[3]: 'l-store-copy continue_looping%5#0 0'
debug: Replaced main_for_header@27.ops[5]: 'v-load continue_looping%5#0' with 'l-load continue_looping%5#0'
debug: Inserted main_for_body@28.ops[11]: 'l-store-copy aggregate%item_length%4#0 0'
debug: Replaced main_for_body@28.ops[13]: 'v-load aggregate%item_length%4#0' with 'l-load aggregate%item_length%4#0'
debug: Inserted main_for_body@28.ops[21]: 'l-store-copy string_item#0 0'
debug: Replaced main_for_body@28.ops[23]: 'v-load string_item#0' with 'l-load string_item#0'
debug: Inserted main_for_body@28.ops[25]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_for_body@28.ops[27]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_for_body@28.ops[3]: 'l-store-copy aggregate%item_offset_offset%4#0 0'
debug: Replaced main_for_body@28.ops[6]: 'v-load aggregate%item_offset_offset%4#0' with 'l-load aggregate%item_offset_offset%4#0'
debug: Inserted main_for_body@28.ops[8]: 'l-store-copy aggregate%item_offset%4#0 0'
debug: Replaced main_for_body@28.ops[11]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted main_for_body@28.ops[32]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_for_body@28.ops[35]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_for_body@28.ops[18]: 'l-store-copy aggregate%item_head_tail_length%4#0 0'
debug: Replaced main_for_body@28.ops[22]: 'v-load aggregate%item_head_tail_length%4#0' with 'l-load aggregate%item_head_tail_length%4#0'
debug: Inserted main_for_body@28.ops[6]: 'l-store-copy array_head_and_tail#1 1'
debug: Replaced main_for_body@28.ops[11]: 'v-load array_head_and_tail#1' with 'l-load array_head_and_tail#1'
debug: Inserted main_for_body@28.ops[12]: 'l-store-copy array_head_and_tail#1 1'
debug: Replaced main_for_body@28.ops[22]: 'v-load array_head_and_tail#1' with 'l-load array_head_and_tail#1'
debug: Inserted main_for_body@28.ops[14]: 'l-store-copy aggregate%item_offset%4#0 2'
debug: Replaced main_for_body@28.ops[24]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted main_for_body@28.ops[1]: 'l-store-copy item_index_internal%5#0 0'
debug: Replaced main_for_body@28.ops[43]: 'v-load item_index_internal%5#0' with 'l-load item_index_internal%5#0'
debug: Inserted main_after_for@30.ops[3]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_after_for@30.ops[5]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Found 18 edge set/s for test_cases.arc4_types.array.Arc4ArraysContract.approval_program
debug: Allocated 1 variable/s to x-stack: string_item#0
debug: shared x-stack for main_for_body@10 -> main_if_body@11: string_item#0
debug: shared x-stack for main_for_body@10 -> main_else_body@12: string_item#0
debug: shared x-stack for main_for_body@21 -> main_if_body@22: string_item#0
debug: shared x-stack for main_for_body@21 -> main_else_body@23: string_item#0
debug: test_cases.arc4_types.array.Arc4ArraysContract.approval_program f-stack entry: ['array_head_and_tail#1', 'result#0', 'head_offset#0', 'index#0', 'item_index_internal%1#0', 'item_index_internal%3#0', 'item_index_internal%5#0', 'tail_offset#0']
debug: test_cases.arc4_types.array.Arc4ArraysContract.approval_program f-stack on first store: ['total#0', 'item_index_internal%0#0']
arc4_types/array.py:24 debug: optimizing TEAL subroutine ops test_cases.arc4_types.array.Arc4ArraysContract.approval_program() -> uint64:
arc4_types/array.py:24 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.array.Arc4ArraysContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_for_body@2 into main_for_header@1
debug: inlining single reference block main_for_body@6 into main_for_header@5
debug: inlining single reference block main_for_body@10 into main_for_header@9
debug: inlining single reference block main_if_body@11 into main_for_header@9
debug: inlining single reference block main_for_body@17 into main_for_header@16
debug: inlining single reference block main_for_body@21 into main_for_header@20
debug: inlining single reference block main_if_body@22 into main_for_header@20
debug: inlining single reference block main_for_body@33 into main_for_header@32
debug: inlining single reference block main_for_body@28 into main_for_header@27
debug: removing explicit jump to fall-through block main_for_header@1
debug: removing explicit jump to fall-through block main_for_header@5
debug: removing explicit jump to fall-through block main_for_header@9
debug: removing explicit jump to fall-through block main_after_if_else@13
debug: removing explicit jump to fall-through block main_for_header@16
debug: removing explicit jump to fall-through block main_for_header@20
debug: removing explicit jump to fall-through block main_after_if_else@24
debug: removing explicit jump to fall-through block main_for_header@32
debug: removing explicit jump to fall-through block main_for_header@27
arc4_types/array.py:85 debug: optimizing TEAL subroutine ops test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program() -> uint64:
arc4_types/array.py:85 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.array.Arc4ArraysContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.address.Arc4AddressContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint8[32])%0#0, address#0, reinterpret_account%0#0
debug: selected address#0 from equivalence set
debug: Found equivalence set: awst_tmp%0#0, reinterpret_Encoded(uint8[32])%2#0, zero_address#0
debug: selected zero_address#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable some_address#0
debug: Removing unused variable address_copy#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 32u 32u) to 1u
debug: Simplified (len zero_address#0) to 32u
debug: Simplified (== 32u 32u) to 1u
debug: Simplified (== zero_address#0 tmp%6#0) to 1u
debug: Simplified (== addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA) to 1u
debug: Simplified (== addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable zero_address#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.address.Arc4AddressContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.address.Arc4AddressContract
debug: lowering array IR nodes in clear program of test_cases.arc4_types.address.Arc4AddressContract
debug: optimizing approval program of test_cases.arc4_types.address.Arc4AddressContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.arc4_types.address.Arc4AddressContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.address.Arc4AddressContract
arc4_types/address.py:7 debug: auto reserving slots in test_cases.arc4_types.address.Arc4AddressContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.address.Arc4AddressContract
arc4_types/address.py:24 debug: auto reserving slots in test_cases.arc4_types.address.Arc4AddressContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.address.Arc4AddressContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.address.Arc4AddressContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4AddressContract.ir/Arc4AddressContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.address.Arc4AddressContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.address.Arc4AddressContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4AddressContract.ir/Arc4AddressContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_block@0.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_block@0.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_block@0.ops[3]: 'l-store-copy reinterpret_Encoded(uint8[32])%1#0 0'
debug: Replaced main_block@0.ops[6]: 'v-load reinterpret_Encoded(uint8[32])%1#0' with 'l-load reinterpret_Encoded(uint8[32])%1#0'
debug: Inserted main_block@0.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_block@0.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_block@0.ops[1]: 'l-store-copy address#0 0'
debug: Replaced main_block@0.ops[6]: 'v-load address#0' with 'l-load address#0'
debug: Inserted main_block@0.ops[7]: 'l-store-copy address#0 1'
debug: Replaced main_block@0.ops[17]: 'v-load address#0' with 'l-load address#0'
arc4_types/address.py:7 debug: optimizing TEAL subroutine ops test_cases.arc4_types.address.Arc4AddressContract.approval_program() -> uint64:
arc4_types/address.py:7 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.address.Arc4AddressContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
arc4_types/address.py:24 debug: optimizing TEAL subroutine ops test_cases.arc4_types.address.Arc4AddressContract.clear_state_program() -> uint64:
arc4_types/address.py:24 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.address.Arc4AddressContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%4#0, flags#0
debug: selected flags#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: Encoded(bool8) = bytes_encode<bool8>(1u) with copy of existing registers (Register(source_location=arc4_types/structs2.py:8:24-39, ir_type=Encoded(bool8), name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%3#0: Encoded(bool8) = bytes_encode<bool8>(0u) with copy of existing registers (Register(source_location=arc4_types/structs2.py:8:43-59, ir_type=Encoded(bool8), name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%2#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%3#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule
debug: lowering array IR nodes in clear program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule
debug: optimizing approval program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%0#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, tmp%1#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0, flags#0
debug: selected flags#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (getbit 0x80 0u) to 1u
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (getbit 0x00 0u) to 0u
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (concat 0x 0xa0) to 0xa0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_bool%0#0
debug: Removing unused variable aggregate%encoded_bool%1#0
debug: Removing unused variable aggregate%get_bit%0#0
debug: Removing unused variable aggregate%set_bit%0#0
debug: Removing unused variable aggregate%get_bit%1#0
debug: Removing unused variable aggregate%set_bit%1#0
debug: Removing unused variable aggregate%get_bit%2#0
debug: Removing unused variable aggregate%set_bit%2#0
debug: Removing unused variable flags#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule
arc4_types/structs2.py:7 debug: auto reserving slots in test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule
arc4_types/structs2.py:13 debug: auto reserving slots in test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4StructsFromAnotherModule.ir/Arc4StructsFromAnotherModule.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_types/out_O2/Arc4StructsFromAnotherModule.ir/Arc4StructsFromAnotherModule.clear.400.destructured.ir
arc4_types/structs2.py:7 debug: optimizing TEAL subroutine ops test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program() -> uint64:
arc4_types/structs2.py:7 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
arc4_types/structs2.py:13 debug: optimizing TEAL subroutine ops test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program() -> uint64:
arc4_types/structs2.py:13 debug: optimizing TEAL subroutine blocks test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing arc4_types/out_O2/UIntOverflow.approval.teal
info: Writing arc4_types/out_O2/UIntOverflow.clear.teal
info: Writing arc4_types/out_O2/UIntOverflow.approval.bin
info: Writing arc4_types/out_O2/UIntOverflow.clear.bin
info: Writing arc4_types/out_O2/UIntOverflow.approval.stats.txt
info: Writing arc4_types/out_O2/UIntOverflow.clear.stats.txt
info: Writing arc4_types/out_O2/UIntOverflow.approval.puya.map
info: Writing arc4_types/out_O2/UIntOverflow.clear.puya.map
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.approval.teal
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.clear.teal
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.approval.bin
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.clear.bin
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4TuplesTypeContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.approval.teal
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.clear.teal
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.approval.bin
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.clear.bin
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4StructsTypeContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4StringTypesContract.approval.teal
info: Writing arc4_types/out_O2/Arc4StringTypesContract.clear.teal
info: Writing arc4_types/out_O2/Arc4StringTypesContract.approval.bin
info: Writing arc4_types/out_O2/Arc4StringTypesContract.clear.bin
info: Writing arc4_types/out_O2/Arc4StringTypesContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4StringTypesContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4StringTypesContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4StringTypesContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4RefTypesContract.approval.teal
info: Writing arc4_types/out_O2/Arc4RefTypesContract.clear.teal
info: Writing arc4_types/out_O2/Arc4RefTypesContract.approval.bin
info: Writing arc4_types/out_O2/Arc4RefTypesContract.clear.bin
info: Writing arc4_types/out_O2/Arc4RefTypesContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4RefTypesContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4RefTypesContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4RefTypesContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.approval.teal
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.clear.teal
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.approval.bin
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.clear.bin
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4NumericTypesContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4MutationContract.approval.teal
info: Writing arc4_types/out_O2/Arc4MutationContract.clear.teal
info: Writing arc4_types/out_O2/Arc4MutationContract.approval.bin
info: Writing arc4_types/out_O2/Arc4MutationContract.clear.bin
info: Writing arc4_types/out_O2/Arc4MutationContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4MutationContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4MutationContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4MutationContract.clear.puya.map
info: Writing arc4_types/out_O2/MutableParams2.approval.teal
info: Writing arc4_types/out_O2/MutableParams2.clear.teal
info: Writing arc4_types/out_O2/MutableParams2.approval.bin
info: Writing arc4_types/out_O2/MutableParams2.clear.bin
info: Writing arc4_types/out_O2/MutableParams2.approval.stats.txt
info: Writing arc4_types/out_O2/MutableParams2.clear.stats.txt
info: Writing arc4_types/out_O2/MutableParams2.approval.puya.map
info: Writing arc4_types/out_O2/MutableParams2.clear.puya.map
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.approval.teal
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.clear.teal
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.approval.bin
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.clear.bin
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4MutableParamsContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.approval.teal
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.clear.teal
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.approval.bin
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.clear.bin
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4DynamicStringArrayContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.approval.teal
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.clear.teal
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.approval.bin
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.clear.bin
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4DynamicBytesContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.approval.teal
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.clear.teal
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.approval.bin
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.clear.bin
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4BoolEvalContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.approval.teal
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.clear.teal
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.approval.bin
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.clear.bin
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4BoolTypeContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4ArraysContract.approval.teal
info: Writing arc4_types/out_O2/Arc4ArraysContract.clear.teal
info: Writing arc4_types/out_O2/Arc4ArraysContract.approval.bin
info: Writing arc4_types/out_O2/Arc4ArraysContract.clear.bin
info: Writing arc4_types/out_O2/Arc4ArraysContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4ArraysContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4ArraysContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4ArraysContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4AddressContract.approval.teal
info: Writing arc4_types/out_O2/Arc4AddressContract.clear.teal
info: Writing arc4_types/out_O2/Arc4AddressContract.approval.bin
info: Writing arc4_types/out_O2/Arc4AddressContract.clear.bin
info: Writing arc4_types/out_O2/Arc4AddressContract.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4AddressContract.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4AddressContract.approval.puya.map
info: Writing arc4_types/out_O2/Arc4AddressContract.clear.puya.map
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.approval.teal
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.clear.teal
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.approval.bin
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.clear.bin
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.approval.stats.txt
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.clear.stats.txt
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.approval.puya.map
info: Writing arc4_types/out_O2/Arc4StructsFromAnotherModule.clear.puya.map