main test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program:
    block@0: // L30
        let tmp%16#0: uint64 = (txn NumAppArgs)
        let reinterpret_biguint%0#0: biguint = (select 0x02 0x01 tmp%16#0)
        let tmp%18#0: bool = (b== reinterpret_biguint%0#0 0x02)
        (assert tmp%18#0)
        let tmp%19#0: uint64 = (txn NumAppArgs)
        let reinterpret_biguint%2#0: biguint = (select 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 tmp%19#0)
        let tmp%21#0: bool = (b== reinterpret_biguint%2#0 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002)
        (assert tmp%21#0)
        let tmp%43#0: uint64 = (txn NumAppArgs)
        let tmp%45#0: bytes = (select 0x0000000000000000 0xffffffffffffffff tmp%43#0)
        let tmp%46#0: bool = (== tmp%45#0 0x0000000000000000)
        (assert tmp%46#0)
        return 1u