#pragma version 10
#pragma typetrack false

// test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program() -> uint64:
main:
    intcblock 8 0 5 7
    pushbytes ""
    dupn 2
    txn NumAppArgs
    !
    assert // conditional expr
    callsub get_arr
    dup
    intc_1 // 0
    extract_uint16
    dup
    cover 2
    dup
    intc_2 // 5
    +
    dup
    itob
    extract 6 0
    uncover 3
    swap
    replace2 0
    cover 2
    swap
    intc_3 // 7
    +
    intc_0 // 8
    /
    dup
    uncover 2
    intc_3 // 7
    +
    intc_0 // 8
    /
    dup
    cover 2
    <
    bz main_after_if_else@5
    dup
    dig 2
    -
    bzero
    dig 3
    swap
    concat
    bury 3

main_after_if_else@5:
    intc_1 // 0
    bury 7
    dig 3
    pushint 16 // 16
    +
    dup
    bury 6
    intc_2 // 5
    +
    bury 6

main_while_top@6:
    dig 4
    dig 6
    <
    bz main_after_while@8
    pushbytes 0x8000800080
    dig 7
    dup
    cover 2
    getbit
    dig 4
    dig 7
    dup
    cover 3
    uncover 2
    setbit
    bury 5
    pushint 1 // 1
    +
    bury 6
    intc_0 // 8
    +
    bury 7
    b main_while_top@6

main_after_while@8:
    dig 2
    pushbytes 0x0005a8
    ==
    return


// test_cases.arc4_types.bool.get_arr() -> bytes:
get_arr:
    pushbytes 0x0000
    retsub
