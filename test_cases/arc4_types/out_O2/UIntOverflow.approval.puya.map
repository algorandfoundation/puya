{
  "version": 3,
  "sources": [
    "../uint_overflow.py"
  ],
  "mappings": ";;;;AAGA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;AAWK;;AAAA;AAAA;AAAA;;AAAA;AAEyB;;AAAmB;;;;;;AAAnB;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACc;;;;;;AAAjB;AAAP;AAHH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEyB;;AAAmB;;;;AAAnB;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACc;;;;AAAjB;AAAP;AAHH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEwB;;AAAmB;;;AAAnB;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AACc;;;AAAjB;AAAP;AAHH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1"
    },
    "4": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "6": {
      "op": "bz main_bare_routing@8",
      "stack_out": []
    },
    "9": {
      "op": "pushbytess 0xea71ee7d 0xe31958f9 0xc7ed8497 // method \"test_uint8()void\", method \"test_uint16()void\", method \"test_uint32()void\"",
      "defined_out": [
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "Method(test_uint8()void)"
      ],
      "stack_out": [
        "Method(test_uint8()void)",
        "Method(test_uint16()void)",
        "Method(test_uint32()void)"
      ]
    },
    "26": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "Method(test_uint8()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_uint8()void)",
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "tmp%2#0"
      ]
    },
    "29": {
      "op": "match main_test_uint8_route@3 main_test_uint16_route@4 main_test_uint32_route@5",
      "stack_out": []
    },
    "37": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "38": {
      "block": "main_test_uint32_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "40": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "41": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "42": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "44": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "45": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "47": {
      "op": "pushint 4294967296 // 4294967296",
      "defined_out": [
        "4294967296",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "4294967296"
      ]
    },
    "53": {
      "op": "+",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "54": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "55": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%2#0 (copy)"
      ]
    },
    "56": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%bitlen%2#0"
      ]
    },
    "57": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "aggregate%bitlen%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%bitlen%2#0",
        "32"
      ]
    },
    "59": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%no_overflow%2#0"
      ]
    },
    "60": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "61": {
      "op": "extract 4 4",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "64": {
      "op": "pushbytes 0x00000001",
      "defined_out": [
        "0x00000001",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0x00000001"
      ]
    },
    "70": {
      "op": "!=",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "71": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "72": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "73": {
      "op": "return",
      "stack_out": []
    },
    "74": {
      "block": "main_test_uint16_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "76": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "77": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "78": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "80": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "81": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "83": {
      "op": "pushint 65536 // 65536",
      "defined_out": [
        "65536",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "65536"
      ]
    },
    "87": {
      "op": "+",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "88": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "89": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "90": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%1#0"
      ]
    },
    "91": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%1#0",
        "16"
      ]
    },
    "93": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%no_overflow%1#0"
      ]
    },
    "94": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "95": {
      "op": "extract 6 2",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "98": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0x0001"
      ]
    },
    "102": {
      "op": "!=",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "103": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "104": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "105": {
      "op": "return",
      "stack_out": []
    },
    "106": {
      "block": "main_test_uint8_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "108": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "109": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "110": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "112": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "113": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "115": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "256"
      ]
    },
    "118": {
      "op": "+",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "119": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "120": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "121": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "122": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "8"
      ]
    },
    "124": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "125": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "126": {
      "op": "extract 7 1",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "129": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0x01"
      ]
    },
    "132": {
      "op": "!=",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "133": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "134": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "135": {
      "op": "return",
      "stack_out": []
    },
    "136": {
      "block": "main_bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "138": {
      "op": "bnz main_after_if_else@12",
      "stack_out": []
    },
    "141": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "143": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "144": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "145": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "146": {
      "op": "return",
      "stack_out": []
    }
  }
}