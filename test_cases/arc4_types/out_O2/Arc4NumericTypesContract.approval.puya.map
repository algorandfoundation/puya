{
  "version": 3,
  "sources": [
    "../numeric.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4Ce;AAAA;;;AAAW;;AAAL;AAAiC;AAAjC;AAAb;AACO;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAa;;AAAL;AAAiC;AAAjC;AAAf;AA+CO;AAAA;;;;;;;;;;AAAmC;;AAA3B;AAA2D;AAA3D;AAAf;AAkBO;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock 0x02 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000000"
    },
    "79": {
      "op": "bytec_0 // 0x02"
    },
    "80": {
      "op": "pushbytes 0x01"
    },
    "83": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "0x01",
        "0x02",
        "tmp%11#0"
      ],
      "stack_out": [
        "0x02",
        "0x01",
        "tmp%11#0"
      ]
    },
    "85": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "86": {
      "op": "bytec_0 // 0x02",
      "stack_out": [
        "select%0#0",
        "0x02"
      ]
    },
    "87": {
      "op": "b==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "88": {
      "op": "assert",
      "stack_out": []
    },
    "89": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
    },
    "90": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
    },
    "156": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "tmp%14#0"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "tmp%14#0"
      ]
    },
    "158": {
      "op": "select",
      "defined_out": [
        "select%1#0"
      ],
      "stack_out": [
        "select%1#0"
      ]
    },
    "159": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "select%1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "160": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "161": {
      "op": "assert",
      "stack_out": []
    },
    "162": {
      "op": "bytec_2 // 0x0000000000000000"
    },
    "163": {
      "op": "pushbytes 0xffffffffffffffff"
    },
    "173": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "0x0000000000000000",
        "0xffffffffffffffff",
        "tmp%38#0"
      ],
      "stack_out": [
        "0x0000000000000000",
        "0xffffffffffffffff",
        "tmp%38#0"
      ]
    },
    "175": {
      "op": "select",
      "defined_out": [
        "select%2#0"
      ],
      "stack_out": [
        "select%2#0"
      ]
    },
    "176": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "select%2#0",
        "0x0000000000000000"
      ]
    },
    "177": {
      "op": "==",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "178": {
      "op": "assert",
      "stack_out": []
    },
    "179": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "181": {
      "op": "return",
      "stack_out": []
    }
  }
}