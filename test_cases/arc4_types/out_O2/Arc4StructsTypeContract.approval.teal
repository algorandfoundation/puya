#pragma version 10

test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program:
    byte ""
    byte 0x000000083cfbf217000000230384b842
    dup
    callsub add
    popn 2
    dup
    extract 0 8 // on error: Index access is out of bounds
    swap
    extract 8 8 // on error: Index access is out of bounds
    swap
    int 0
    swap
    b main_for_body@3

main_for_header_1@2:
    dig 2
    bury 1
    dig 1

main_for_body@3:
    log
    dupn 2
    int 1
    +
    bury 4
    bz main_for_header_1@2
    byte 0xa0
    callsub check
    pop
    byte 0xa0
    log
    byte 0x000000083cfbf217000000230384b842a0
    callsub nested_decode
    pop
    int 1
    return


// test_cases.arc4_types.structs.add(v1: bytes, v2: bytes) -> bytes, bytes, bytes:
add:
    proto 2 3
    frame_dig -2
    extract 0 8 // on error: Index access is out of bounds
    frame_dig -1
    extract 0 8 // on error: Index access is out of bounds
    callsub add_decimal
    frame_dig -2
    extract 8 8 // on error: Index access is out of bounds
    frame_dig -1
    extract 8 8 // on error: Index access is out of bounds
    callsub add_decimal
    concat
    frame_dig -2
    frame_dig -1
    retsub


// test_cases.arc4_types.structs.add_decimal(x: bytes, y: bytes) -> bytes:
add_decimal:
    proto 2 1
    frame_dig -2
    btoi
    frame_dig -1
    btoi
    +
    itob
    retsub


// test_cases.arc4_types.structs.check(flags: bytes) -> bytes:
check:
    proto 1 1
    frame_dig -1
    int 0
    getbit
    byte 0x00
    int 0
    uncover 2
    setbit
    int 0
    getbit
    assert
    frame_dig -1
    int 1
    getbit
    byte 0x00
    int 0
    uncover 2
    setbit
    int 0
    getbit
    !
    assert
    frame_dig -1
    int 2
    getbit
    byte 0x00
    int 0
    uncover 2
    setbit
    int 0
    getbit
    assert
    frame_dig -1
    int 3
    getbit
    byte 0x00
    int 0
    uncover 2
    setbit
    int 0
    getbit
    !
    assert
    frame_dig -1
    retsub


// test_cases.arc4_types.structs.nested_decode(vector_flags: bytes) -> bytes:
nested_decode:
    proto 1 1
    frame_dig -1
    extract 0 16 // on error: Index access is out of bounds
    extract 0 8 // on error: Index access is out of bounds
    int 35382882839
    itob
    ==
    assert
    frame_dig -1
    extract 16 1 // on error: Index access is out of bounds
    int 2
    getbit
    byte 0x00
    int 0
    uncover 2
    setbit
    int 0
    getbit
    assert
    frame_dig -1
    retsub
