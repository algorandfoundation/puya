#pragma version 10
#pragma typetrack false

// test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program() -> uint64:
main:
    intcblock 0 1 2
    bytecblock 0x0304
    pushbytes ""
    dup
    intc_0 // 0
    dup

for_header@1:
    dup
    pushint 3 // 3
    <
    bz after_for@4
    pushbytes 0x020301
    dig 1
    dup
    cover 2
    getbyte
    dig 3
    +
    bury 3
    intc_1 // 1
    +
    bury 1
    b for_header@1

after_for@4:
    dig 1
    pushint 6 // 6
    ==
    assert // Total should be of dynamic_bytes items
    intc_0 // 0
    bury 4

for_header@5:
    dig 3
    intc_2 // 2
    <
    bz after_for@8
    bytec_0 // 0x0304
    dig 4
    dup
    cover 2
    getbyte
    dig 3
    +
    bury 3
    intc_1 // 1
    +
    bury 4
    b for_header@5

after_for@8:
    intc_0 // 0
    bury 3

for_header@9:
    dig 2
    intc_2 // 2
    <
    bz after_for@12
    bytec_0 // 0x0304
    dig 3
    dup
    cover 2
    getbyte
    dig 3
    +
    bury 3
    intc_1 // 1
    +
    bury 3
    b for_header@9

after_for@12:
    dig 1
    pushint 20 // 20
    ==
    assert // Total should now include sum of dynamic_bytes3 items
    pushbytess 0x03 0x02 // 0x03, 0x02
    txn NumAppArgs
    select
    pushbytes 0x0003
    swap
    concat
    pushbytes 0x0301
    concat
    extract 2 0
    pushbytes 0x030301
    ==
    assert
    txn NumAppArgs
    bz ternary_false@14
    pushbytes 0x000132

ternary_merge@15:
    extract 2 0
    pushbytes 0x33
    ==
    return

ternary_false@14:
    pushbytes 0x000133
    b ternary_merge@15
