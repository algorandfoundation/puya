#pragma version 10

test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.approval_program:
    intcblock 1 2 4 0
    bytecblock 0x05 0x01020304 0x63 0x80320006000d00054861707079000444617973 "\x00\x07AARRGH!"
    callsub mutating_copies
    intc_0 // 1
    return


// test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.mutating_copies() -> void:
mutating_copies:
    proto 0 0
    bytec_1 // 0x01020304
    bytec_0 // 0x05
    replace2 2
    dup
    extract 2 1 // on error: Index access is out of bounds
    bytec_0 // 0x05
    b==
    assert // my_array should be mutated
    bytec_3 // 0x80320006000d00054861707079000444617973
    callsub other_routine
    uncover 3
    assert
    uncover 2
    !
    assert
    dig 1
    extract 1 1 // on error: Index access is out of bounds
    bytec_0 // 0x05
    b==
    assert // my_array has been mutated by the subroutine
    dup
    intc_1 // 2
    extract_uint16
    dig 1
    intc_2 // 4
    extract_uint16
    substring3
    bytec 4 // "\x00\x07AARRGH!"
    ==
    assert // my_struct has been mutated by the subroutine
    bytec_1 // 0x01020304
    bytec_3 // 0x80320006000d00054861707079000444617973
    callsub other_routine
    popn 4
    bytec_1 // 0x01020304
    callsub other_routine_2
    pop
    dup
    extract 0 1 // on error: Index access is out of bounds
    pushbytes 0x01
    b==
    assert // my_array_copy_2 should have original value
    callsub other_routine_2
    bury 1
    dup
    extract 0 1 // on error: Index access is out of bounds
    pushbytes 0x0a
    b==
    assert // my_array_copy_2 should have mutated value
    dup2
    uncover 2
    callsub other_routine_3
    popn 3
    extract 0 4 // on error: Index access is out of bounds
    callsub other_routine_2
    popn 2
    retsub


// test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine(array: bytes, struct: bytes) -> uint64, uint64, bytes, bytes:
other_routine:
    proto 2 4
    frame_dig -2
    bytec_0 // 0x05
    replace2 1
    frame_bury -2
    frame_dig -1
    intc_1 // 2
    extract_uint16
    frame_dig -1
    intc_3 // 0
    dig 2
    extract3
    frame_dig -1
    intc_2 // 4
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    dig 2
    uncover 2
    substring3
    uncover 2
    bytec 4 // "\x00\x07AARRGH!"
    concat
    swap
    concat
    swap
    uncover 2
    -
    dig 1
    intc_2 // 4
    extract_uint16
    pushint 9 // 9
    +
    swap
    -
    itob
    extract 6 2
    replace2 4
    frame_bury -1
    intc_0 // 1
    intc_3 // 0
    frame_dig -2
    frame_dig -1
    retsub


// test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_2(array: bytes) -> bytes, bytes:
other_routine_2:
    proto 1 2
    frame_dig -1
    pushbytes 0x0a
    replace2 0
    frame_dig -1
    swap
    retsub


// test_cases.arc4_types.mutable_params.Arc4MutableParamsContract.other_routine_3(arrays.0: bytes, arrays.1: bytes, arrays.2: bytes) -> bytes, bytes, bytes:
other_routine_3:
    proto 3 3
    intc_3 // 0

other_routine_3_for_body@1:
    switch other_routine_3_for_header_1@3 other_routine_3_for_header_2@4
    b other_routine_3_after_for@5

other_routine_3_for_header_1@3:
    intc_0 // 1
    b other_routine_3_for_body@1

other_routine_3_for_header_2@4:
    intc_1 // 2
    b other_routine_3_for_body@1

other_routine_3_after_for@5:
    frame_dig -3
    bytec_2 // 0x63
    replace2 0
    frame_bury -3
    frame_dig -2
    bytec_2 // 0x63
    replace2 0
    frame_bury -2
    frame_dig -1
    bytec_2 // 0x63
    replace2 0
    frame_bury -1
    frame_dig -3
    frame_dig -2
    frame_dig -1
    retsub
