#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytess 0xea71ee7d 0xe31958f9 0xc7ed8497 // method "test_uint8()void", method "test_uint16()void", method "test_uint32()void"
    txna ApplicationArgs 0
    match main_test_uint8_route@3 main_test_uint16_route@4 main_test_uint32_route@5

main_after_if_else@12:
    pushint 0 // 0
    return

main_test_uint32_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txn NumAppArgs
    pushint 4294967296 // 4294967296
    +
    itob
    dup
    bitlen
    pushint 32 // 32
    <=
    assert // overflow
    extract 4 4
    pushbytes 0x00000001
    !=
    assert // this should not happen
    intc_0 // 1
    return

main_test_uint16_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txn NumAppArgs
    pushint 65536 // 65536
    +
    itob
    dup
    bitlen
    pushint 16 // 16
    <=
    assert // overflow
    extract 6 2
    pushbytes 0x0001
    !=
    assert // this should not happen
    intc_0 // 1
    return

main_test_uint8_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txn NumAppArgs
    pushint 256 // 256
    +
    itob
    dup
    bitlen
    pushint 8 // 8
    <=
    assert // overflow
    extract 7 1
    pushbytes 0x01
    !=
    assert // this should not happen
    intc_0 // 1
    return

main_bare_routing@8:
    txn OnCompletion
    bnz main_after_if_else@12
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return
