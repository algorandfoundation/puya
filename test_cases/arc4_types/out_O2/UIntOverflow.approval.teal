#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 16 8
    txn NumAppArgs
    bz main___algopy_default_create@11
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0xea71ee7d 0xe31958f9 0xc7ed8497 0x65117897 // method "test_uint8()void", method "test_uint16()void", method "test_uint32()void", method "test_as_uint64()void"
    txna ApplicationArgs 0
    match main_test_uint8_route@4 main_test_uint16_route@5 main_test_uint32_route@6 main_test_as_uint64_route@7
    err

main_test_as_uint64_route@7:
    txn NumAppArgs
    itob
    pushbytes 0x010000000000000000
    b+
    dup
    len
    intc_0 // 16
    <=
    assert // overflow
    intc_0 // 16
    bzero
    b|
    dup
    bitlen
    pushint 64 // 64
    <=
    assert // overflow
    dup
    len
    intc_1 // 8
    -
    extract_uint64
    return // on error: this should not happen

main_test_uint32_route@6:
    txn NumAppArgs
    pushint 4294967296 // 4294967296
    +
    itob
    dup
    bitlen
    pushint 32 // 32
    <=
    assert // overflow
    extract 4 4
    pushbytes 0x00000001
    !=
    return // on error: this should not happen

main_test_uint16_route@5:
    txn NumAppArgs
    pushint 65536 // 65536
    +
    itob
    dup
    bitlen
    intc_0 // 16
    <=
    assert // overflow
    extract 6 2
    pushbytes 0x0001
    !=
    return // on error: this should not happen

main_test_uint8_route@4:
    txn NumAppArgs
    pushint 256 // 256
    +
    itob
    dup
    bitlen
    intc_1 // 8
    <=
    assert // overflow
    extract 7 1
    pushbytes 0x01
    !=
    return // on error: this should not happen

main___algopy_default_create@11:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating
