// Op                       //                                                   Op Description   Stack (out)                           X stack                                      Source code                                  Source line

#pragma version 10

// test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program() -> uint64:
main_block@0:
    global ZeroAddress      //                                                                    {global}                                                                           Global.zero_address                          arc4_types/bool_eval.py:19
    //                      virtual: store tmp%6#0 to l-stack (no copy)          tmp%6#0                                                Global.zero_address                          arc4_types/bool_eval.py:19
    global ZeroAddress      //                                                                    tmp%6#0,{global}                                                                   not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                      virtual: store tmp%7#0 to l-stack (no copy)          tmp%6#0,tmp%7#0                                        not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                      virtual: load tmp%6#0 from l-stack (no copy)         tmp%7#0,tmp%6#0                                        not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                      virtual: load tmp%7#0 from l-stack (no copy)         tmp%6#0,tmp%7#0                                        not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    ==                      //                                                                    {==}                                                                               not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                      virtual: store tmp%8#0 to l-stack (no copy)          tmp%8#0                                                not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                      virtual: load tmp%8#0 from l-stack (no copy)         tmp%8#0                                                assert not arc4.Address(Global.zero_address) arc4_types/bool_eval.py:19
    assert                  //                                                                                                                                                       assert not arc4.Address(Global.zero_address) arc4_types/bool_eval.py:19
    txn Sender              //                                                                    {txn}                                                                              Transaction.sender                           arc4_types/bool_eval.py:20
    //                      virtual: store tmp%9#0 to l-stack (no copy)          tmp%9#0                                                Transaction.sender                           arc4_types/bool_eval.py:20
    global ZeroAddress      //                                                                    tmp%9#0,{global}                                                                   arc4.Address(Transaction.sender)             arc4_types/bool_eval.py:20
    //                      virtual: store tmp%10#0 to l-stack (no copy)         tmp%9#0,tmp%10#0                                       arc4.Address(Transaction.sender)             arc4_types/bool_eval.py:20
    //                      virtual: load tmp%9#0 from l-stack (no copy)         tmp%10#0,tmp%9#0                                       arc4.Address(Transaction.sender)             arc4_types/bool_eval.py:20
    //                      virtual: load tmp%10#0 from l-stack (no copy)        tmp%9#0,tmp%10#0                                       arc4.Address(Transaction.sender)             arc4_types/bool_eval.py:20
    !=                      //                                                                    {!=}                                                                               arc4.Address(Transaction.sender)             arc4_types/bool_eval.py:20
    //                      virtual: store tmp%11#0 to l-stack (no copy)         tmp%11#0                                               arc4.Address(Transaction.sender)             arc4_types/bool_eval.py:20
    //                      virtual: load tmp%11#0 from l-stack (no copy)        tmp%11#0                                               assert arc4.Address(Transaction.sender)      arc4_types/bool_eval.py:20
    assert                  //                                                                                                                                                       assert arc4.Address(Transaction.sender)      arc4_types/bool_eval.py:20
    int 1                   //                                                                    1                                                                                  dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    itob                    //                                                                    {itob}                                                                             dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    //                      virtual: store len_bytes%36#0 to l-stack (no copy)   len_bytes%36#0                                         dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    //                      virtual: load len_bytes%36#0 from l-stack (no copy)  len_bytes%36#0                                         dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    extract 6 0             //                                                                    {extract}                                                                          dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    //                      virtual: store len_16_bit%37#0 to l-stack (no copy)  len_16_bit%37#0                                        dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    //                      virtual: load len_16_bit%37#0 from l-stack (no copy) len_16_bit%37#0                                        dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    byte 0x0000000000000000 //                                                                    len_16_bit%37#0,0x0000000000000000                                                 0                                            arc4_types/bool_eval.py:64
    concat                  //                                                                    {concat}                                                                           dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    //                      virtual: store dynamic_arr#1 to l-stack (no copy)    dynamic_arr#1                                          dynamic_arr.append(arc4.UInt64(0))           arc4_types/bool_eval.py:64
    //                      virtual: load dynamic_arr#1 from l-stack (no copy)   dynamic_arr#1                                          dynamic_arr                                  arc4_types/bool_eval.py:65
    byte 0x0000             //                                                                    dynamic_arr#1,0x0000                                                               dynamic_arr                                  arc4_types/bool_eval.py:65
    !=                      //                                                                    {!=}                                                                               dynamic_arr                                  arc4_types/bool_eval.py:65
    //                      virtual: store tmp%39#0 to l-stack (no copy)         tmp%39#0                                               dynamic_arr                                  arc4_types/bool_eval.py:65
    //                      virtual: load tmp%39#0 from l-stack (no copy)        tmp%39#0                                               assert dynamic_arr                           arc4_types/bool_eval.py:65
    assert                  //                                                                                                                                                       assert dynamic_arr                           arc4_types/bool_eval.py:65
    int 1                   //                                                                    1                                                                                  True                                         arc4_types/bool_eval.py:71
    return                  //                                                                                                                                                       return True                                  arc4_types/bool_eval.py:71

