contract test_cases.arc4_types.string.Arc4StringTypesContract:
    program approval:
        subroutine test_cases.arc4_types.string.Arc4StringTypesContract.approval_program() -> uint64:
            block@0: // L8
                let concatenated%71#0: bytes = (concat YWJjZGVm "g")
                let len_%72#0: uint64 = (len concatenated%71#0)
                let len_bytes%73#0: bytes = (itob len_%72#0)
                let len_16_bit%74#0: bytes = ((extract 6 0) len_bytes%73#0)
                let value#3: bytes = (concat len_16_bit%74#0 concatenated%71#0)
                let tmp%76#0: uint64 = (== "\x00\x07abcdefg" value#3)
                (assert tmp%76#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.string.Arc4StringTypesContract.clear_state_program() -> uint64:
            block@0: // L42
                return 1u