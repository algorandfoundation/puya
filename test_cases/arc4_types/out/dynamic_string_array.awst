contract Arc4DynamicStringArrayContract
{
  abimethod xyz(): algopy.arc4.DynamicArray[algopy.arc4.String]
  {
    return arc4_array_encode([arc4_encode('X', algopy.arc4.String), arc4_encode('Y', algopy.arc4.String), arc4_encode('Z', algopy.arc4.String)], algopy.arc4.DynamicArray[algopy.arc4.String])
  }
  
  abimethod xyz_raw(): algopy.arc4.DynamicArray[algopy.arc4.String]
  {
    raw: algopy.arc4.DynamicArray[algopy.arc4.DynamicArray[algopy.arc4.Byte]] = arc4_array_encode([arc4_array_encode([88arc4u8], algopy.arc4.DynamicArray[algopy.arc4.Byte]), arc4_array_encode([89arc4u8], algopy.arc4.DynamicArray[algopy.arc4.Byte]), arc4_array_encode([90arc4u8], algopy.arc4.DynamicArray[algopy.arc4.Byte])], algopy.arc4.DynamicArray[algopy.arc4.DynamicArray[algopy.arc4.Byte]])
    return reinterpret_cast<algopy.arc4.DynamicArray[algopy.arc4.String]>(reinterpret_cast<algopy.Bytes>(raw))
  }
}