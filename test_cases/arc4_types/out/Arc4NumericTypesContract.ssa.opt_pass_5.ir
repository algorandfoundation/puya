contract test_cases.arc4_types.numeric.Arc4NumericTypesContract:
    program approval:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program() -> uint64:
            block@0: // L25
                let tmp%6#0: uint64 = 127u
                let tmp%7#0: uint64 = (== tmp%6#0 127u)
                (assert tmp%7#0)
                let tmp%12#0: uint64 = 8388607u
                let tmp%13#0: uint64 = (== tmp%12#0 8388607u)
                (assert tmp%13#0)
                let tmp%18#0: uint64 = 32767u
                let tmp%19#0: uint64 = (== tmp%18#0 32767u)
                (assert tmp%19#0)
                let tmp%24#0: uint64 = 2147483647u
                let tmp%25#0: uint64 = (== tmp%24#0 2147483647u)
                (assert tmp%25#0)
                let tmp%30#0: uint64 = 9223372036854775807u
                let tmp%31#0: uint64 = (== tmp%30#0 9223372036854775807u)
                (assert tmp%31#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
            block@0: // L68
                return 1u