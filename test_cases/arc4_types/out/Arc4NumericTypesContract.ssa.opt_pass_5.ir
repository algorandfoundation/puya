contract test_cases.arc4_types.numeric.Arc4NumericTypesContract:
    program approval:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program() -> uint64:
            block@0: // L25
                let tmp%8#0: uint64 = 127u
                let tmp%9#0: uint64 = (== tmp%8#0 127u)
                (assert tmp%9#0)
                let tmp%16#0: uint64 = 8388607u
                let tmp%17#0: uint64 = (== tmp%16#0 8388607u)
                (assert tmp%17#0)
                let tmp%24#0: uint64 = 32767u
                let tmp%25#0: uint64 = (== tmp%24#0 32767u)
                (assert tmp%25#0)
                let tmp%32#0: uint64 = 2147483647u
                let tmp%33#0: uint64 = (== tmp%32#0 2147483647u)
                (assert tmp%33#0)
                let tmp%40#0: uint64 = 9223372036854775807u
                let tmp%41#0: uint64 = (== tmp%40#0 9223372036854775807u)
                (assert tmp%41#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
            block@0: // L104
                return 1u