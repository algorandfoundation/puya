PC  Teal                                     Stack                                                                                                                                      
1   <intcblock>                                                                                                                                                                         
5   byte 0x04                                0x04                                                                                                                                       
8   btoi                                     4                                                                                                                                          
9   int 4                                    4, 4                                                                                                                                       
10  ==                                       1                                                                                                                                          
11  assert                                                                                                                                                                              
12  byte 0x10                                0x10                                                                                                                                       
15  btoi                                     16                                                                                                                                         
16  int 16                                   16, 16                                                                                                                                     
18  ==                                       1                                                                                                                                          
19  assert                                                                                                                                                                              
20  byte base64 AQIABwAO/wAFaGVsbG8ABXdvcmxk 0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
43  callsub test_stuff                       0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
72  proto 1 2                                0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
75  frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64                                                 
77  extract 0 1                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x01                                                                                         
80  frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64                                           
82  extract 1 1                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x01, 0x02                                                                                   
85  swap                                     0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01                                                                                   
86  frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64                                     
88  int 2                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64, 2                                  
89  extract_uint16                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7                                                                                
90  frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 0x01020007000EFF000568656C6C6F0005776F726C64                                  
92  dig 1                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 0x01020007000EFF000568656C6C6F0005776F726C64, 7                               
94  extract_uint16                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 5                                                                             
95  int 2                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 5, 2                                                                          
96  +                                        0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 7                                                                             
97  frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 7, 0x01020007000EFF000568656C6C6F0005776F726C64                               
99  cover 2                                  0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64, 7, 7                               
101 extract3                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F                                                                 
102 frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64                   
104 int 4                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64, 4                
105 extract_uint16                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14                                                             
106 frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 0x01020007000EFF000568656C6C6F0005776F726C64               
108 dig 1                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 0x01020007000EFF000568656C6C6F0005776F726C64, 14           
110 extract_uint16                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 5                                                          
111 int 2                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 5, 2                                                       
112 +                                        0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 7                                                          
113 frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 7, 0x01020007000EFF000568656C6C6F0005776F726C64            
115 cover 2                                  0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64, 14, 7            
117 extract3                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64                                               
118 frame_dig -1                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64 
120 extract 6 1                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64, 0xFF                                         
123 uncover 3                                0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 0x01                                         
125 btoi                                     0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1                                            
126 uncover 4                                0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1, 0x02                                            
128 btoi                                     0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1, 2                                               
129 +                                        0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 3                                                  
130 swap                                     0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 3, 0xFF                                                  
131 btoi                                     0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 3, 255                                                   
132 +                                        0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 258                                                      
133 swap                                     0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 258, 0x0005776F726C64                                                      
134 uncover 2                                0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, 0x000568656C6C6F                                                      
136 extract 2 0                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello"                                                               
139 byte " "                                 0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello", " "                                                          
142 concat                                   0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello "                                                              
143 swap                                     0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello ", 0x0005776F726C64                                                              
144 extract 2 0                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello ", "world"                                                                       
147 concat                                   0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world"                                                                           
148 dup                                      0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", "hello world"                                                            
149 len                                      0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 11                                                                       
150 itob                                     0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 0x000000000000000B                                                       
151 extract 6 2                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 0x000B                                                                   
154 swap                                     0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x000B, "hello world"                                                                   
155 concat                                   0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x000B68656C6C6F20776F726C64                                                            
156 retsub                                   258, 0x000B68656C6C6F20776F726C64                                                                                                          
46  extract 2 0                              258, "hello world"                                                                                                                         
49  byte "hello world"                       258, "hello world", "hello world"                                                                                                          
62  ==                                       258, 1                                                                                                                                     
63  assert                                   258                                                                                                                                        
64  int 258                                  258, 258                                                                                                                                   
67  ==                                       1                                                                                                                                          
68  assert                                                                                                                                                                              
69  int 1                                    1                                                                                                                                          
71  return                                   1                                                                                                                                          