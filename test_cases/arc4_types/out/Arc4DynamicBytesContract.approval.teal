#pragma version 10

test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program:
    byte ""
    dup
    // arc4_types/dynamic_bytes.py:11
    // total = UInt64(0)
    int 0
    dup

main_for_header@1:
    // arc4_types/dynamic_bytes.py:16
    // for uint8_item in dynamic_bytes:
    dup
    int 3
    <
    bz main_after_for@4
    // arc4_types/dynamic_bytes.py:13
    // assert dynamic_bytes.native == b"\x02\x03\x01"
    byte 0x020301
    // arc4_types/dynamic_bytes.py:16
    // for uint8_item in dynamic_bytes:
    dig 1
    dup
    cover 2
    int 1
    extract3 // on error: Index access is out of bounds
    // arc4_types/dynamic_bytes.py:17
    // total += uint8_item.native
    btoi
    dig 3
    +
    bury 3
    int 1
    +
    bury 1
    b main_for_header@1

main_after_for@4:
    // arc4_types/dynamic_bytes.py:19
    // assert total == 6, "Total should be of dynamic_bytes items"
    dig 1
    int 6
    ==
    assert // Total should be of dynamic_bytes items
    int 0
    bury 4

main_for_header@5:
    // arc4_types/dynamic_bytes.py:25
    // for uint8_item in dynamic_bytes2:
    dig 3
    int 2
    <
    bz main_after_for@8
    byte 0x0304
    dig 4
    dup
    cover 2
    int 1
    extract3 // on error: Index access is out of bounds
    // arc4_types/dynamic_bytes.py:26
    // total += uint8_item.native
    btoi
    dig 3
    +
    bury 3
    int 1
    +
    bury 4
    b main_for_header@5

main_after_for@8:
    int 0
    bury 3

main_for_header@9:
    // arc4_types/dynamic_bytes.py:32
    // for uint8_item in dynamic_bytes3:
    dig 2
    int 2
    <
    bz main_after_for@12
    // arc4_types/dynamic_bytes.py:29
    // assert dynamic_bytes3.native == b"\x03\x04"
    byte 0x0304
    // arc4_types/dynamic_bytes.py:32
    // for uint8_item in dynamic_bytes3:
    dig 3
    dup
    cover 2
    int 1
    extract3 // on error: Index access is out of bounds
    // arc4_types/dynamic_bytes.py:33
    // total += uint8_item.native
    btoi
    dig 3
    +
    bury 3
    int 1
    +
    bury 3
    b main_for_header@9

main_after_for@12:
    // arc4_types/dynamic_bytes.py:35
    // assert total == 20, "Total should now include sum of dynamic_bytes3 items"
    dig 1
    int 20
    ==
    assert // Total should now include sum of dynamic_bytes3 items
    // arc4_types/dynamic_bytes.py:41
    // return True
    int 1
    return
