#pragma version 10
#pragma typetrack false

// test_cases.arc4_types.dynamic_bytes.Arc4DynamicBytesContract.approval_program() -> uint64:
main:
    intcblock 1 0 2
    bytecblock 0x0304 0x03
    pushbytes ""
    dup
    // arc4_types/dynamic_bytes.py:11
    // total = UInt64(0)
    intc_1 // 0
    dup

main_for_header@1:
    // arc4_types/dynamic_bytes.py:16
    // for uint8_item in dynamic_bytes:
    dup
    pushint 3 // 3
    <
    bz main_after_for@4
    pushbytes 0x020301
    dig 1
    dup
    cover 2
    intc_0 // 1
    extract3 // on error: Index access is out of bounds
    // arc4_types/dynamic_bytes.py:17
    // total += uint8_item.native
    btoi
    dig 3
    +
    bury 3
    intc_0 // 1
    +
    bury 1
    b main_for_header@1

main_after_for@4:
    // arc4_types/dynamic_bytes.py:19
    // assert total == 6, "Total should be of dynamic_bytes items"
    dig 1
    pushint 6 // 6
    ==
    assert // Total should be of dynamic_bytes items
    intc_1 // 0
    bury 4

main_for_header@5:
    // arc4_types/dynamic_bytes.py:25
    // for uint8_item in dynamic_bytes2:
    dig 3
    intc_2 // 2
    <
    bz main_after_for@8
    bytec_0 // 0x0304
    dig 4
    dup
    cover 2
    intc_0 // 1
    extract3 // on error: Index access is out of bounds
    // arc4_types/dynamic_bytes.py:26
    // total += uint8_item.native
    btoi
    dig 3
    +
    bury 3
    intc_0 // 1
    +
    bury 4
    b main_for_header@5

main_after_for@8:
    intc_1 // 0
    bury 3

main_for_header@9:
    // arc4_types/dynamic_bytes.py:32
    // for uint8_item in dynamic_bytes3:
    dig 2
    intc_2 // 2
    <
    bz main_after_for@12
    bytec_0 // 0x0304
    dig 3
    dup
    cover 2
    intc_0 // 1
    extract3 // on error: Index access is out of bounds
    // arc4_types/dynamic_bytes.py:33
    // total += uint8_item.native
    btoi
    dig 3
    +
    bury 3
    intc_0 // 1
    +
    bury 3
    b main_for_header@9

main_after_for@12:
    // arc4_types/dynamic_bytes.py:35
    // assert total == 20, "Total should now include sum of dynamic_bytes3 items"
    dig 1
    pushint 20 // 20
    ==
    assert // Total should now include sum of dynamic_bytes3 items
    // arc4_types/dynamic_bytes.py:41
    // dynamic_bytes = DynamicBytes(2 if Txn.num_app_args else 3, UInt8(3), 1)
    bytec_1 // 0x03
    pushbytes 0x02
    txn NumAppArgs
    select
    bytec_1 // 0x03
    concat
    pushbytes 0x01
    concat
    pushbytes 0x0003
    swap
    concat
    // arc4_types/dynamic_bytes.py:42
    // assert dynamic_bytes.native == Bytes.from_hex("030301")
    extract 2 0
    pushbytes 0x030301
    ==
    assert
    // arc4_types/dynamic_bytes.py:44
    // dynamic_bytes = DynamicBytes(b"2" if Txn.num_app_args else b"3")
    txn NumAppArgs
    bz main_ternary_false@14
    pushbytes 0x000132

main_ternary_merge@15:
    // arc4_types/dynamic_bytes.py:45
    // assert dynamic_bytes.native == b"3"
    extract 2 0
    pushbytes 0x33
    ==
    assert
    // arc4_types/dynamic_bytes.py:46
    // return True
    intc_0 // 1
    return

main_ternary_false@14:
    // arc4_types/dynamic_bytes.py:44
    // dynamic_bytes = DynamicBytes(b"2" if Txn.num_app_args else b"3")
    pushbytes 0x000133
    b main_ternary_merge@15
