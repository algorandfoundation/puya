contract test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule:
    program approval:
        subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program() -> uint64:
            block@0: // L6
                let encoded_tuple_buffer%5#1: bytes = (concat 0x 0x80)
                let is_true%6#0: uint64 = (getbit 0x00 0u)
                let encoded_tuple_buffer%5#2: any = (setbit encoded_tuple_buffer%5#1 1u is_true%6#0)
                let is_true%7#0: uint64 = (getbit 0x80 0u)
                let encoded_tuple_buffer%5#3: any = (setbit encoded_tuple_buffer%5#2 2u is_true%7#0)
                let flags#0: any = (setbit encoded_tuple_buffer%5#3 3u is_true%6#0)
                (log flags#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program() -> uint64:
            block@0: // L13
                return 1u