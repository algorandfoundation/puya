contract test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule:
    program approval:
        subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.approval_program() -> bool:
            block@0: // L7
                let tmp%0#0: bytes = 0x80
                let tmp%1#0: bytes = 0x00
                let tmp%2#0: bytes = 0x80
                let tmp%3#0: bytes = 0x00
                let encoded_tuple_buffer%0#1: bytes = tmp%0#0
                let is_true%0#0: uint64 = (getbit tmp%1#0 0u)
                let encoded_tuple_buffer%0#2: bytes = (setbit encoded_tuple_buffer%0#1 1u is_true%0#0)
                let is_true%1#0: uint64 = (getbit tmp%2#0 0u)
                let encoded_tuple_buffer%0#3: bytes = (setbit encoded_tuple_buffer%0#2 2u is_true%1#0)
                let is_true%2#0: uint64 = (getbit tmp%3#0 0u)
                let flags#0: bytes = (setbit encoded_tuple_buffer%0#3 3u is_true%2#0)
                (log flags#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.structs2.Arc4StructsFromAnotherModule.clear_state_program() -> bool:
            block@0: // L13
                return 1u