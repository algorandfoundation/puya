// Op                                               Stack (out)
// test_cases.arc4_types.address.Arc4AddressContract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc4_types/address.py:8
        // address = arc4.Address(Txn.sender)
        txn Sender                                  address#0
        // arc4_types/address.py:9
        // assert address == Txn.sender
        txn Sender                                  address#0,reinterpret_Encoded(uint8[32])%1#0
        l-load-copy address#0 1                     address#0,reinterpret_Encoded(uint8[32])%1#0,address#0 (copy)
        l-load reinterpret_Encoded(uint8[32])%1#0 1 address#0,address#0 (copy),reinterpret_Encoded(uint8[32])%1#0
        ==                                          address#0,tmp%0#0
        l-load tmp%0#0 0                            address#0,tmp%0#0
        assert                                      address#0
        // arc4_types/address.py:11
        // assert address.native == Txn.sender
        txn Sender                                  address#0,tmp%2#0
        l-load address#0 1                          tmp%2#0,address#0
        l-load tmp%2#0 1                            address#0,tmp%2#0
        ==                                          tmp%3#0
        l-load tmp%3#0 0                            tmp%3#0
        assert
        // arc4_types/address.py:22
        // return True
        int 1                                       1
        return


