// Op                                                                                       Stack (out)
// test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program() -> uint64:
main_block@0:
    // arc4_types/tuples.py:15
    // my_tuple = Tuple((UInt8(1), UInt8(2), String("hello"), String("world"), UInt8(255)))
    byte 0x01020007000eff000568656c6c6f0005776f726c64                                       0x01020007000eff000568656c6c6f0005776f726c64
    // arc4_types/tuples.py:45
    // total, concat = self.test_stuff(my_tuple)
    callsub test_stuff                                                                      total#0,concat#0
    // arc4_types/tuples.py:46
    // assert concat.native == "hello world"
    extract 2 0                                                                             total#0,tmp%18#0
    byte "hello world"                                                                      total#0,tmp%18#0,"hello world"
    ==                                                                                      total#0,tmp%19#0
    assert                                                                                  total#0
    // arc4_types/tuples.py:47
    // assert total == 258
    l-load total#0 0                                                                        total#0
    int 258                                                                                 total#0,258
    ==                                                                                      tmp%20#0
    assert
    // arc4_types/tuples.py:49
    // return True
    int 1                                                                                   1
    return


// test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff(test_tuple: bytes) -> uint64, bytes:
test_stuff:                                                                                 (洧도) test_tuple#0 |
    // arc4_types/tuples.py:54-55
    // @subroutine
    // def test_stuff(self, test_tuple: TestTuple) -> tuple[UInt64, String]:
    proto 1 2                                                                               (洧도) test_tuple#0 |

test_stuff_block@0:                                                                         (洧도) test_tuple#0 |
    // arc4_types/tuples.py:56
    // a, b, c, d, e = test_tuple.native
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | test_tuple#0 (copy)
    extract 0 1 // on error: Index access is out of bounds                                  (洧도) test_tuple#0 | a#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,test_tuple#0 (copy)
    extract 1 1 // on error: Index access is out of bounds                                  (洧도) test_tuple#0 | a#0,b#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,b#0,test_tuple#0 (copy)
    int 2                                                                                   (洧도) test_tuple#0 | a#0,b#0,test_tuple#0 (copy),2
    extract_uint16                                                                          (洧도) test_tuple#0 | a#0,b#0,item_start_offset%0#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,b#0,item_start_offset%0#0,test_tuple#0 (copy)
    int 4                                                                                   (洧도) test_tuple#0 | a#0,b#0,item_start_offset%0#0,test_tuple#0 (copy),4
    extract_uint16                                                                          (洧도) test_tuple#0 | a#0,b#0,item_start_offset%0#0,item_end_offset%0#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,b#0,item_start_offset%0#0,item_end_offset%0#0,test_tuple#0 (copy)
    l-load item_start_offset%0#0 2                                                          (洧도) test_tuple#0 | a#0,b#0,item_end_offset%0#0,test_tuple#0 (copy),item_start_offset%0#0
    l-load-copy item_end_offset%0#0 2                                                       (洧도) test_tuple#0 | a#0,b#0,item_end_offset%0#0,test_tuple#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
    substring3                                                                              (洧도) test_tuple#0 | a#0,b#0,item_end_offset%0#0,c#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,b#0,item_end_offset%0#0,c#0,test_tuple#0 (copy)
    len                                                                                     (洧도) test_tuple#0 | a#0,b#0,item_end_offset%0#0,c#0,item_end_offset%1#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,b#0,item_end_offset%0#0,c#0,item_end_offset%1#0,test_tuple#0 (copy)
    l-load item_end_offset%0#0 3                                                            (洧도) test_tuple#0 | a#0,b#0,c#0,item_end_offset%1#0,test_tuple#0 (copy),item_end_offset%0#0
    l-load item_end_offset%1#0 2                                                            (洧도) test_tuple#0 | a#0,b#0,c#0,test_tuple#0 (copy),item_end_offset%0#0,item_end_offset%1#0
    substring3                                                                              (洧도) test_tuple#0 | a#0,b#0,c#0,d#0
    p-load test_tuple#0                                                                     (洧도) test_tuple#0 | a#0,b#0,c#0,d#0,test_tuple#0 (copy)
    extract 6 1 // on error: Index access is out of bounds                                  (洧도) test_tuple#0 | a#0,b#0,c#0,d#0,e#0
    // arc4_types/tuples.py:62
    // total = a.native + b.native + e.native
    l-load a#0 4                                                                            (洧도) test_tuple#0 | b#0,c#0,d#0,e#0,a#0
    btoi                                                                                    (洧도) test_tuple#0 | b#0,c#0,d#0,e#0,tmp%4#0
    l-load b#0 4                                                                            (洧도) test_tuple#0 | c#0,d#0,e#0,tmp%4#0,b#0
    btoi                                                                                    (洧도) test_tuple#0 | c#0,d#0,e#0,tmp%4#0,tmp%5#0
    l-load tmp%4#0 1                                                                        (洧도) test_tuple#0 | c#0,d#0,e#0,tmp%5#0,tmp%4#0
    l-load tmp%5#0 1                                                                        (洧도) test_tuple#0 | c#0,d#0,e#0,tmp%4#0,tmp%5#0
    +                                                                                       (洧도) test_tuple#0 | c#0,d#0,e#0,tmp%6#0
    l-load e#0 1                                                                            (洧도) test_tuple#0 | c#0,d#0,tmp%6#0,e#0
    btoi                                                                                    (洧도) test_tuple#0 | c#0,d#0,tmp%6#0,tmp%7#0
    l-load tmp%6#0 1                                                                        (洧도) test_tuple#0 | c#0,d#0,tmp%7#0,tmp%6#0
    l-load tmp%7#0 1                                                                        (洧도) test_tuple#0 | c#0,d#0,tmp%6#0,tmp%7#0
    +                                                                                       (洧도) test_tuple#0 | c#0,d#0,total#0
    // arc4_types/tuples.py:63
    // text = c.native + " " + d.native
    l-load c#0 2                                                                            (洧도) test_tuple#0 | d#0,total#0,c#0
    extract 2 0                                                                             (洧도) test_tuple#0 | d#0,total#0,tmp%8#0
    byte " "                                                                                (洧도) test_tuple#0 | d#0,total#0,tmp%8#0," "
    concat                                                                                  (洧도) test_tuple#0 | d#0,total#0,tmp%9#0
    l-load d#0 2                                                                            (洧도) test_tuple#0 | total#0,tmp%9#0,d#0
    extract 2 0                                                                             (洧도) test_tuple#0 | total#0,tmp%9#0,tmp%10#0
    l-load tmp%9#0 1                                                                        (洧도) test_tuple#0 | total#0,tmp%10#0,tmp%9#0
    l-load tmp%10#0 1                                                                       (洧도) test_tuple#0 | total#0,tmp%9#0,tmp%10#0
    concat                                                                                  (洧도) test_tuple#0 | total#0,text#0
    // arc4_types/tuples.py:65
    // return total, String(text)
    l-load-copy text#0 0                                                                    (洧도) test_tuple#0 | total#0,text#0,text#0 (copy)
    len                                                                                     (洧도) test_tuple#0 | total#0,text#0,length%0#0
    itob                                                                                    (洧도) test_tuple#0 | total#0,text#0,as_bytes%0#0
    extract 6 2                                                                             (洧도) test_tuple#0 | total#0,text#0,length_uint16%0#0
    l-load text#0 1                                                                         (洧도) test_tuple#0 | total#0,length_uint16%0#0,text#0
    concat                                                                                  (洧도) test_tuple#0 | total#0,encoded_value%0#0
    l-load total#0 1                                                                        (洧도) test_tuple#0 | encoded_value%0#0,total#0
    l-load encoded_value%0#0 1                                                              (洧도) test_tuple#0 | total#0,encoded_value%0#0
    retsub                                                                                  total#0,encoded_value%0#0


