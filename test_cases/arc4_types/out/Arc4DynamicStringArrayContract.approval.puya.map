{
  "version": 3,
  "sources": [
    "../dynamic_string_array.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AASK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AADL;;AAAA;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock 0x151f7c75000300060009000c00015800015900015a"
    },
    "25": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "27": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "30": {
      "op": "pushbytess 0x6b10e527 0x94ddb1c2 // method \"xyz()string[]\", method \"xyz_raw()string[]\"",
      "defined_out": [
        "Method(xyz()string[])",
        "Method(xyz_raw()string[])"
      ],
      "stack_out": [
        "Method(xyz()string[])",
        "Method(xyz_raw()string[])"
      ]
    },
    "42": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(xyz()string[])",
        "Method(xyz_raw()string[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(xyz()string[])",
        "Method(xyz_raw()string[])",
        "tmp%2#0"
      ]
    },
    "45": {
      "op": "match main_xyz_route@3 main_xyz_raw_route@4",
      "stack_out": []
    },
    "51": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "53": {
      "op": "return",
      "stack_out": []
    },
    "54": {
      "block": "main_xyz_raw_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "56": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "57": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "58": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "60": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "61": {
      "op": "bytec_0 // 0x151f7c75000300060009000c00015800015900015a",
      "defined_out": [
        "0x151f7c75000300060009000c00015800015900015a"
      ],
      "stack_out": [
        "0x151f7c75000300060009000c00015800015900015a"
      ]
    },
    "62": {
      "op": "log",
      "stack_out": []
    },
    "63": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "65": {
      "op": "return",
      "stack_out": []
    },
    "66": {
      "block": "main_xyz_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "68": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "69": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "70": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "72": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "73": {
      "op": "bytec_0 // 0x151f7c75000300060009000c00015800015900015a",
      "defined_out": [
        "0x151f7c75000300060009000c00015800015900015a"
      ],
      "stack_out": [
        "0x151f7c75000300060009000c00015800015900015a"
      ]
    },
    "74": {
      "op": "log",
      "stack_out": []
    },
    "75": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "77": {
      "op": "return",
      "stack_out": []
    },
    "78": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "80": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "83": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "85": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "86": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "87": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "89": {
      "op": "return",
      "stack_out": []
    }
  }
}