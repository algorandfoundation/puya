contract test_cases.arc4_types.bool_eval.Arc4BoolEvalContract:
    program approval:
        subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program() -> bool:
            block@0: // L12
                let tmp%11#0: bytes = (txn Sender)
                let tmp%12#0: bytes = (global ZeroAddress)
                let tmp%13#0: bool = (!= tmp%11#0 tmp%12#0)
                (assert tmp%13#0)
                let len_16_bit%0#0: bytes = 0x0001
                let dynamic_arr#1: bytes = (concat len_16_bit%0#0 0x0000000000000000)
                let tmp%37#0: bool = (!= dynamic_arr#1 0x0000)
                (assert tmp%37#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.clear_state_program() -> bool:
            block@0: // L74
                return 1u