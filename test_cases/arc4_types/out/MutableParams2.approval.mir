// Op                                                                                           Stack (out)
// test_cases.arc4_types.mutable_params2.MutableParams2.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                                                tmp%0#0
    return


// test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // arc4_types/mutable_params2.py:4
    // class MutableParams2(arc4.ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // arc4_types/mutable_params2.py:4
    // class MutableParams2(arc4.ARC4Contract):
    txn NumAppArgs                                                                              tmp%0#0
    bz __puya_arc4_router___bare_routing@5
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // arc4_types/mutable_params2.py:4
    // class MutableParams2(arc4.ARC4Contract):
    txna ApplicationArgs 0                                                                      tmp%2#0
    method test_array_rebinding()void                                                           tmp%2#0,Method(test_array_rebinding()void)
    l-load tmp%2#0 1                                                                            Method(test_array_rebinding()void),tmp%2#0
    match __puya_arc4_router___test_array_rebinding_route@2
    int 0                                                                                       0
    retsub                                                                                      0

__puya_arc4_router___test_array_rebinding_route@2:
    // arc4_types/mutable_params2.py:5
    // @arc4.abimethod()
    txn OnCompletion                                                                            tmp%3#0
    !                                                                                           tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                           tmp%5#0
    assert // can only call when not creating
    callsub test_array_rebinding
    int 1                                                                                       1
    retsub                                                                                      1

__puya_arc4_router___bare_routing@5:
    // arc4_types/mutable_params2.py:4
    // class MutableParams2(arc4.ARC4Contract):
    txn OnCompletion                                                                            tmp%7#0
    bnz __puya_arc4_router___after_if_else@9
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@6

__puya_arc4_router_____algopy_default_create@6:
    txn ApplicationID                                                                           tmp%8#0
    !                                                                                           tmp%9#0
    assert // can only call when creating
    int 1                                                                                       1
    retsub                                                                                      1

__puya_arc4_router___after_if_else@9:
    // arc4_types/mutable_params2.py:4
    // class MutableParams2(arc4.ARC4Contract):
    int 0                                                                                       0
    retsub                                                                                      0


// test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding() -> void:
test_array_rebinding:
    // arc4_types/mutable_params2.py:5-6
    // @arc4.abimethod()
    // def test_array_rebinding(self) -> None:
    proto 0 0

test_array_rebinding_block@0:
    // arc4_types/mutable_params2.py:7
    // a = arc4.DynamicBytes(0)
    byte 0x000100                                                                               0x000100
    // arc4_types/mutable_params2.py:8
    // self.maybe_modify_array(a, assign_local=True)
    int 1                                                                                       0x000100,1
    callsub maybe_modify_array                                                                  a#1
    // arc4_types/mutable_params2.py:9
    // assert a == arc4.DynamicBytes(0, 1)
    byte 0x00020001                                                                             a#1,0x00020001
    ==                                                                                          tmp%0#0
    assert
    // arc4_types/mutable_params2.py:11
    // a = arc4.DynamicBytes(1)
    byte 0x000101                                                                               0x000101
    // arc4_types/mutable_params2.py:12
    // self.maybe_modify_array(a, assign_local=False)
    int 0                                                                                       0x000101,0
    callsub maybe_modify_array                                                                  a#1
    // arc4_types/mutable_params2.py:13
    // assert a == arc4.DynamicBytes(1, 42, 4)
    byte 0x0003012a04                                                                           a#1,0x0003012a04
    ==                                                                                          tmp%1#0
    assert
    retsub


// test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array(a: bytes, assign_local: uint64) -> bytes:
maybe_modify_array:                                                                             (洧도) a#0,assign_local#0 |
    // arc4_types/mutable_params2.py:15-16
    // @subroutine
    // def maybe_modify_array(self, a: arc4.DynamicBytes, *, assign_local: bool) -> None:  # v0
    proto 2 1                                                                                   (洧도) a#0,assign_local#0 |
    allocate 1 to stack                                                                         (洧도) a#0,assign_local#0 | (洧뎽) a%out#7 |

maybe_modify_array_block@0:                                                                     (洧도) a#0,assign_local#0 | (洧뎽) a%out#7 |
    int 1                                                                                       (洧도) a#0,assign_local#0 | (洧뎽) a%out#7 | a%is_original#0
    f-store a%is_original#0                                                                     (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // arc4_types/mutable_params2.py:17
    // if assign_local:
    p-load assign_local#0                                                                       (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | assign_local#0 (copy)
    bz maybe_modify_array_else_body@10                                                          (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // Implicit fall through to maybe_modify_array_if_body@1                                    (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |

maybe_modify_array_if_body@1:                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // arc4_types/mutable_params2.py:18
    // a.append(arc4.Byte(1))  # v1: modify out
    p-load a#0                                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#0 (copy)
    extract 2 0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | expr_value_trimmed%0#0
    byte 0x01                                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | expr_value_trimmed%0#0,0x01
    concat                                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%0#0
    l-load-copy concatenated%0#0 0                                                              (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%0#0,concatenated%0#0 (copy)
    len                                                                                         (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%0#0,len_%0#0
    itob                                                                                        (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%0#0,as_bytes%0#0
    extract 6 2                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%0#0,len_16_bit%0#0
    l-load concatenated%0#0 1                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | len_16_bit%0#0,concatenated%0#0
    concat                                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#0
    p-store a#0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // arc4_types/mutable_params2.py:21
    // a = arc4.DynamicBytes(1, 2, 4)  # v4: local only
    byte 0x0003010204                                                                           (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#5
    int 0                                                                                       (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#5,a%is_original#0
    f-store a%is_original#0                                                                     (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#5
    p-load a#0                                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#5,a%out#7
    f-store a%out#7                                                                             (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#5
    l-load a#5 0                                                                                (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#5
    p-store a#0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    b maybe_modify_array_after_if_else@13                                                       (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |

maybe_modify_array_else_body@10:                                                                (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // arc4_types/mutable_params2.py:23
    // a.append(arc4.Byte(42))  # v5: modify out
    p-load a#0                                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#0 (copy)
    extract 2 0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | expr_value_trimmed%2#0
    byte 0x2a                                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | expr_value_trimmed%2#0,0x2a
    concat                                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%2#0
    l-load-copy concatenated%2#0 0                                                              (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%2#0,concatenated%2#0 (copy)
    len                                                                                         (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%2#0,len_%2#0
    itob                                                                                        (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%2#0,as_bytes%2#0
    extract 6 2                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%2#0,len_16_bit%2#0
    l-load concatenated%2#0 1                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | len_16_bit%2#0,concatenated%2#0
    concat                                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#0
    p-store a#0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    p-load a#0                                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%out#7
    l-store-copy a%out#7 0                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%out#7,a%out#7
    f-store a%out#7                                                                             (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%out#7
    l-load a%out#7 0                                                                            (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%out#7
    p-store a#0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // Implicit fall through to maybe_modify_array_after_if_else@13                             (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |

maybe_modify_array_after_if_else@13:                                                            (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // arc4_types/mutable_params2.py:25
    // a.append(arc4.Byte(4))  # v6: modify out IF not b ELSE local only
    p-load a#0                                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#0 (copy)
    extract 2 0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | expr_value_trimmed%3#0
    byte 0x04                                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | expr_value_trimmed%3#0,0x04
    concat                                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%3#0
    l-load-copy concatenated%3#0 0                                                              (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%3#0,concatenated%3#0 (copy)
    len                                                                                         (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%3#0,len_%3#0
    itob                                                                                        (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%3#0,as_bytes%3#0
    extract 6 2                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | concatenated%3#0,len_16_bit%3#0
    l-load concatenated%3#0 1                                                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | len_16_bit%3#0,concatenated%3#0
    concat                                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a#0
    p-store a#0                                                                                 (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    f-load a%is_original#0                                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%is_original#0
    bz maybe_modify_array_after_if_else@15                                                      (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // Implicit fall through to maybe_modify_array_if_body@14                                   (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |

maybe_modify_array_if_body@14:                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    p-load a#0                                                                                  (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%out#7
    f-store a%out#7                                                                             (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    // Implicit fall through to maybe_modify_array_after_if_else@15                             (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |

maybe_modify_array_after_if_else@15:                                                            (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 |
    f-load a%out#7                                                                              (洧도) a#0,assign_local#0 | (洧뎽) a%out#7,a%is_original#0 | a%out#7
    retsub                                                                                      a%out#7


