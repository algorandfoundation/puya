PC  Teal                                        Stack                                                                                                           
1   <intcblock>                                                                                                                                                 
7   <bytecblock>                                                                                                                                                
48  int 0                                       0                                                                                                               
49  byte ""                                     0, 0x                                                                                                           
50  dupn 2                                      0, 0x, 0x, 0x                                                                                                   
52  int 0                                       0, 0x, 0x, 0x, 0                                                                                                
53  dup                                         0, 0x, 0x, 0x, 0, 0                                                                                             
54  dup                                         0, 0x, 0x, 0x, 0, 0, 0                                                                                          
55  int 2                                       0, 0x, 0x, 0x, 0, 0, 0, 2                                                                                       
56  <                                           0, 0x, 0x, 0x, 0, 0, 1                                                                                          
57  bz main_after_for@4                         0, 0x, 0x, 0x, 0, 0                                                                                             
60  byte 0x0102                                 0, 0x, 0x, 0x, 0, 0, 0x0102                                                                                     
64  dig 1                                       0, 0x, 0x, 0x, 0, 0, 0x0102, 0                                                                                  
66  dup                                         0, 0x, 0x, 0x, 0, 0, 0x0102, 0, 0                                                                               
67  cover 2                                     0, 0x, 0x, 0x, 0, 0, 0, 0x0102, 0                                                                               
69  int 1                                       0, 0x, 0x, 0x, 0, 0, 0, 0x0102, 0, 1                                                                            
70  extract3                                    0, 0x, 0x, 0x, 0, 0, 0, 0x01                                                                                    
71  btoi                                        0, 0x, 0x, 0x, 0, 0, 0, 1                                                                                       
72  dig 3                                       0, 0x, 0x, 0x, 0, 0, 0, 1, 0                                                                                    
74  +                                           0, 0x, 0x, 0x, 0, 0, 0, 1                                                                                       
75  bury 3                                      0, 0x, 0x, 0x, 1, 0, 0                                                                                          
77  int 1                                       0, 0x, 0x, 0x, 1, 0, 0, 1                                                                                       
78  +                                           0, 0x, 0x, 0x, 1, 0, 1                                                                                          
79  bury 1                                      0, 0x, 0x, 0x, 1, 1                                                                                             
81  b main_for_header@1                         0, 0x, 0x, 0x, 1, 1                                                                                             
54  dup                                         0, 0x, 0x, 0x, 1, 1, 1                                                                                          
55  int 2                                       0, 0x, 0x, 0x, 1, 1, 1, 2                                                                                       
56  <                                           0, 0x, 0x, 0x, 1, 1, 1                                                                                          
57  bz main_after_for@4                         0, 0x, 0x, 0x, 1, 1                                                                                             
60  byte 0x0102                                 0, 0x, 0x, 0x, 1, 1, 0x0102                                                                                     
64  dig 1                                       0, 0x, 0x, 0x, 1, 1, 0x0102, 1                                                                                  
66  dup                                         0, 0x, 0x, 0x, 1, 1, 0x0102, 1, 1                                                                               
67  cover 2                                     0, 0x, 0x, 0x, 1, 1, 1, 0x0102, 1                                                                               
69  int 1                                       0, 0x, 0x, 0x, 1, 1, 1, 0x0102, 1, 1                                                                            
70  extract3                                    0, 0x, 0x, 0x, 1, 1, 1, 0x02                                                                                    
71  btoi                                        0, 0x, 0x, 0x, 1, 1, 1, 2                                                                                       
72  dig 3                                       0, 0x, 0x, 0x, 1, 1, 1, 2, 1                                                                                    
74  +                                           0, 0x, 0x, 0x, 1, 1, 1, 3                                                                                       
75  bury 3                                      0, 0x, 0x, 0x, 3, 1, 1                                                                                          
77  int 1                                       0, 0x, 0x, 0x, 3, 1, 1, 1                                                                                       
78  +                                           0, 0x, 0x, 0x, 3, 1, 2                                                                                          
79  bury 1                                      0, 0x, 0x, 0x, 3, 2                                                                                             
81  b main_for_header@1                         0, 0x, 0x, 0x, 3, 2                                                                                             
54  dup                                         0, 0x, 0x, 0x, 3, 2, 2                                                                                          
55  int 2                                       0, 0x, 0x, 0x, 3, 2, 2, 2                                                                                       
56  <                                           0, 0x, 0x, 0x, 3, 2, 0                                                                                          
57  bz main_after_for@4                         0, 0x, 0x, 0x, 3, 2                                                                                             
84  dig 1                                       0, 0x, 0x, 0x, 3, 2, 3                                                                                          
86  int 3                                       0, 0x, 0x, 0x, 3, 2, 3, 3                                                                                       
88  ==                                          0, 0x, 0x, 0x, 3, 2, 1                                                                                          
89  assert                                      0, 0x, 0x, 0x, 3, 2                                                                                             
90  int 0                                       0, 0x, 0x, 0x, 3, 2, 0                                                                                          
91  bury 4                                      0, 0x, 0, 0x, 3, 2                                                                                              
93  dig 3                                       0, 0x, 0, 0x, 3, 2, 0                                                                                           
95  int 1                                       0, 0x, 0, 0x, 3, 2, 0, 1                                                                                        
96  <                                           0, 0x, 0, 0x, 3, 2, 1                                                                                           
97  bz main_after_for@8                         0, 0x, 0, 0x, 3, 2                                                                                              
100 dig 3                                       0, 0x, 0, 0x, 3, 2, 0                                                                                           
102 dup                                         0, 0x, 0, 0x, 3, 2, 0, 0                                                                                        
103 int 2                                       0, 0x, 0, 0x, 3, 2, 0, 0, 2                                                                                     
104 *                                           0, 0x, 0, 0x, 3, 2, 0, 0                                                                                        
105 byte 0x0001                                 0, 0x, 0, 0x, 3, 2, 0, 0, 0x0001                                                                                
109 swap                                        0, 0x, 0, 0x, 3, 2, 0, 0x0001, 0                                                                                
110 int 2                                       0, 0x, 0, 0x, 3, 2, 0, 0x0001, 0, 2                                                                             
111 extract3                                    0, 0x, 0, 0x, 3, 2, 0, 0x0001                                                                                   
112 btoi                                        0, 0x, 0, 0x, 3, 2, 0, 1                                                                                        
113 dig 3                                       0, 0x, 0, 0x, 3, 2, 0, 1, 3                                                                                     
115 +                                           0, 0x, 0, 0x, 3, 2, 0, 4                                                                                        
116 bury 3                                      0, 0x, 0, 0x, 4, 2, 0                                                                                           
118 int 1                                       0, 0x, 0, 0x, 4, 2, 0, 1                                                                                        
119 +                                           0, 0x, 0, 0x, 4, 2, 1                                                                                           
120 bury 4                                      0, 0x, 1, 0x, 4, 2                                                                                              
122 b main_for_header@5                         0, 0x, 1, 0x, 4, 2                                                                                              
93  dig 3                                       0, 0x, 1, 0x, 4, 2, 1                                                                                           
95  int 1                                       0, 0x, 1, 0x, 4, 2, 1, 1                                                                                        
96  <                                           0, 0x, 1, 0x, 4, 2, 0                                                                                           
97  bz main_after_for@8                         0, 0x, 1, 0x, 4, 2                                                                                              
125 dig 1                                       0, 0x, 1, 0x, 4, 2, 4                                                                                           
127 int 4                                       0, 0x, 1, 0x, 4, 2, 4, 4                                                                                        
128 ==                                          0, 0x, 1, 0x, 4, 2, 1                                                                                           
129 assert                                      0, 0x, 1, 0x, 4, 2                                                                                              
130 byte ""                                     0, 0x, 1, 0x, 4, 2, 0x                                                                                          
131 bury 6                                      0x, 0x, 1, 0x, 4, 2                                                                                             
133 int 0                                       0x, 0x, 1, 0x, 4, 2, 0                                                                                          
134 bury 5                                      0x, 0, 1, 0x, 4, 2                                                                                              
136 dig 4                                       0x, 0, 1, 0x, 4, 2, 0                                                                                           
138 int 2                                       0x, 0, 1, 0x, 4, 2, 0, 2                                                                                        
139 <                                           0x, 0, 1, 0x, 4, 2, 1                                                                                           
140 bz main_after_for@15                        0x, 0, 1, 0x, 4, 2                                                                                              
143 dig 4                                       0x, 0, 1, 0x, 4, 2, 0                                                                                           
145 dup                                         0x, 0, 1, 0x, 4, 2, 0, 0                                                                                        
146 int 2                                       0x, 0, 1, 0x, 4, 2, 0, 0, 2                                                                                     
147 *                                           0x, 0, 1, 0x, 4, 2, 0, 0                                                                                        
148 byte 0x0004000b000548656c6c6f0005576f726c64 0x, 0, 1, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64                                                
149 swap                                        0x, 0, 1, 0x, 4, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 0                                                
150 extract_uint16                              0x, 0, 1, 0x, 4, 2, 0, 4                                                                                        
151 byte 0x0004000b000548656c6c6f0005576f726c64 0x, 0, 1, 0x, 4, 2, 0, 4, 0x0004000B000548656C6C6F0005576F726C64                                                
152 dig 1                                       0x, 0, 1, 0x, 4, 2, 0, 4, 0x0004000B000548656C6C6F0005576F726C64, 4                                             
154 extract_uint16                              0x, 0, 1, 0x, 4, 2, 0, 4, 5                                                                                     
155 int 2                                       0x, 0, 1, 0x, 4, 2, 0, 4, 5, 2                                                                                  
156 +                                           0x, 0, 1, 0x, 4, 2, 0, 4, 7                                                                                     
157 byte 0x0004000b000548656c6c6f0005576f726c64 0x, 0, 1, 0x, 4, 2, 0, 4, 7, 0x0004000B000548656C6C6F0005576F726C64                                             
158 cover 2                                     0x, 0, 1, 0x, 4, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 7                                             
160 extract3                                    0x, 0, 1, 0x, 4, 2, 0, 0x000548656C6C6F                                                                         
161 swap                                        0x, 0, 1, 0x, 4, 2, 0x000548656C6C6F, 0                                                                         
162 bnz main_else_body@12                       0x, 0, 1, 0x, 4, 2, 0x000548656C6C6F                                                                            
165 extract 2 0                                 0x, 0, 1, 0x, 4, 2, "Hello"                                                                                     
168 bury 6                                      "Hello", 0, 1, 0x, 4, 2                                                                                         
170 b main_after_if_else@13                     "Hello", 0, 1, 0x, 4, 2                                                                                         
185 dig 4                                       "Hello", 0, 1, 0x, 4, 2, 0                                                                                      
187 int 1                                       "Hello", 0, 1, 0x, 4, 2, 0, 1                                                                                   
188 +                                           "Hello", 0, 1, 0x, 4, 2, 1                                                                                      
189 bury 5                                      "Hello", 1, 1, 0x, 4, 2                                                                                         
191 b main_for_header@9                         "Hello", 1, 1, 0x, 4, 2                                                                                         
136 dig 4                                       "Hello", 1, 1, 0x, 4, 2, 1                                                                                      
138 int 2                                       "Hello", 1, 1, 0x, 4, 2, 1, 2                                                                                   
139 <                                           "Hello", 1, 1, 0x, 4, 2, 1                                                                                      
140 bz main_after_for@15                        "Hello", 1, 1, 0x, 4, 2                                                                                         
143 dig 4                                       "Hello", 1, 1, 0x, 4, 2, 1                                                                                      
145 dup                                         "Hello", 1, 1, 0x, 4, 2, 1, 1                                                                                   
146 int 2                                       "Hello", 1, 1, 0x, 4, 2, 1, 1, 2                                                                                
147 *                                           "Hello", 1, 1, 0x, 4, 2, 1, 2                                                                                   
148 byte 0x0004000b000548656c6c6f0005576f726c64 "Hello", 1, 1, 0x, 4, 2, 1, 2, 0x0004000B000548656C6C6F0005576F726C64                                           
149 swap                                        "Hello", 1, 1, 0x, 4, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 2                                           
150 extract_uint16                              "Hello", 1, 1, 0x, 4, 2, 1, 11                                                                                  
151 byte 0x0004000b000548656c6c6f0005576f726c64 "Hello", 1, 1, 0x, 4, 2, 1, 11, 0x0004000B000548656C6C6F0005576F726C64                                          
152 dig 1                                       "Hello", 1, 1, 0x, 4, 2, 1, 11, 0x0004000B000548656C6C6F0005576F726C64, 11                                      
154 extract_uint16                              "Hello", 1, 1, 0x, 4, 2, 1, 11, 5                                                                               
155 int 2                                       "Hello", 1, 1, 0x, 4, 2, 1, 11, 5, 2                                                                            
156 +                                           "Hello", 1, 1, 0x, 4, 2, 1, 11, 7                                                                               
157 byte 0x0004000b000548656c6c6f0005576f726c64 "Hello", 1, 1, 0x, 4, 2, 1, 11, 7, 0x0004000B000548656C6C6F0005576F726C64                                       
158 cover 2                                     "Hello", 1, 1, 0x, 4, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 7                                       
160 extract3                                    "Hello", 1, 1, 0x, 4, 2, 1, 0x0005576F726C64                                                                    
161 swap                                        "Hello", 1, 1, 0x, 4, 2, 0x0005576F726C64, 1                                                                    
162 bnz main_else_body@12                       "Hello", 1, 1, 0x, 4, 2, 0x0005576F726C64                                                                       
173 extract 2 0                                 "Hello", 1, 1, 0x, 4, 2, "World"                                                                                
176 byte " "                                    "Hello", 1, 1, 0x, 4, 2, "World", " "                                                                           
177 swap                                        "Hello", 1, 1, 0x, 4, 2, " ", "World"                                                                           
178 concat                                      "Hello", 1, 1, 0x, 4, 2, " World"                                                                               
179 dig 6                                       "Hello", 1, 1, 0x, 4, 2, " World", "Hello"                                                                      
181 swap                                        "Hello", 1, 1, 0x, 4, 2, "Hello", " World"                                                                      
182 concat                                      "Hello", 1, 1, 0x, 4, 2, "Hello World"                                                                          
183 bury 6                                      "Hello World", 1, 1, 0x, 4, 2                                                                                   
185 dig 4                                       "Hello World", 1, 1, 0x, 4, 2, 1                                                                                
187 int 1                                       "Hello World", 1, 1, 0x, 4, 2, 1, 1                                                                             
188 +                                           "Hello World", 1, 1, 0x, 4, 2, 2                                                                                
189 bury 5                                      "Hello World", 2, 1, 0x, 4, 2                                                                                   
191 b main_for_header@9                         "Hello World", 2, 1, 0x, 4, 2                                                                                   
136 dig 4                                       "Hello World", 2, 1, 0x, 4, 2, 2                                                                                
138 int 2                                       "Hello World", 2, 1, 0x, 4, 2, 2, 2                                                                             
139 <                                           "Hello World", 2, 1, 0x, 4, 2, 0                                                                                
140 bz main_after_for@15                        "Hello World", 2, 1, 0x, 4, 2                                                                                   
194 dig 5                                       "Hello World", 2, 1, 0x, 4, 2, "Hello World"                                                                    
196 byte "Hello World"                          "Hello World", 2, 1, 0x, 4, 2, "Hello World", "Hello World"                                                     
209 ==                                          "Hello World", 2, 1, 0x, 4, 2, 1                                                                                
210 assert                                      "Hello World", 2, 1, 0x, 4, 2                                                                                   
211 int 0                                       "Hello World", 2, 1, 0x, 4, 2, 0                                                                                
212 bury 3                                      "Hello World", 2, 1, 0, 4, 2                                                                                    
214 dig 2                                       "Hello World", 2, 1, 0, 4, 2, 0                                                                                 
216 int 4                                       "Hello World", 2, 1, 0, 4, 2, 0, 4                                                                              
217 <                                           "Hello World", 2, 1, 0, 4, 2, 1                                                                                 
218 bz main_after_for@19                        "Hello World", 2, 1, 0, 4, 2                                                                                    
221 dig 2                                       "Hello World", 2, 1, 0, 4, 2, 0                                                                                 
223 dup                                         "Hello World", 2, 1, 0, 4, 2, 0, 0                                                                              
224 int 4                                       "Hello World", 2, 1, 0, 4, 2, 0, 0, 4                                                                           
225 *                                           "Hello World", 2, 1, 0, 4, 2, 0, 0                                                                              
226 byte 0x000000010000000a000000ff00000080     "Hello World", 2, 1, 0, 4, 2, 0, 0, 0x000000010000000A000000FF00000080                                          
244 swap                                        "Hello World", 2, 1, 0, 4, 2, 0, 0x000000010000000A000000FF00000080, 0                                          
245 int 4                                       "Hello World", 2, 1, 0, 4, 2, 0, 0x000000010000000A000000FF00000080, 0, 4                                       
246 extract3                                    "Hello World", 2, 1, 0, 4, 2, 0, 0x00000001                                                                     
247 btoi                                        "Hello World", 2, 1, 0, 4, 2, 0, 1                                                                              
248 dig 3                                       "Hello World", 2, 1, 0, 4, 2, 0, 1, 4                                                                           
250 +                                           "Hello World", 2, 1, 0, 4, 2, 0, 5                                                                              
251 bury 3                                      "Hello World", 2, 1, 0, 5, 2, 0                                                                                 
253 int 1                                       "Hello World", 2, 1, 0, 5, 2, 0, 1                                                                              
254 +                                           "Hello World", 2, 1, 0, 5, 2, 1                                                                                 
255 bury 3                                      "Hello World", 2, 1, 1, 5, 2                                                                                    
257 b main_for_header@16                        "Hello World", 2, 1, 1, 5, 2                                                                                    
214 dig 2                                       "Hello World", 2, 1, 1, 5, 2, 1                                                                                 
216 int 4                                       "Hello World", 2, 1, 1, 5, 2, 1, 4                                                                              
217 <                                           "Hello World", 2, 1, 1, 5, 2, 1                                                                                 
218 bz main_after_for@19                        "Hello World", 2, 1, 1, 5, 2                                                                                    
221 dig 2                                       "Hello World", 2, 1, 1, 5, 2, 1                                                                                 
223 dup                                         "Hello World", 2, 1, 1, 5, 2, 1, 1                                                                              
224 int 4                                       "Hello World", 2, 1, 1, 5, 2, 1, 1, 4                                                                           
225 *                                           "Hello World", 2, 1, 1, 5, 2, 1, 4                                                                              
226 byte 0x000000010000000a000000ff00000080     "Hello World", 2, 1, 1, 5, 2, 1, 4, 0x000000010000000A000000FF00000080                                          
244 swap                                        "Hello World", 2, 1, 1, 5, 2, 1, 0x000000010000000A000000FF00000080, 4                                          
245 int 4                                       "Hello World", 2, 1, 1, 5, 2, 1, 0x000000010000000A000000FF00000080, 4, 4                                       
246 extract3                                    "Hello World", 2, 1, 1, 5, 2, 1, 0x0000000A                                                                     
247 btoi                                        "Hello World", 2, 1, 1, 5, 2, 1, 10                                                                             
248 dig 3                                       "Hello World", 2, 1, 1, 5, 2, 1, 10, 5                                                                          
250 +                                           "Hello World", 2, 1, 1, 5, 2, 1, 15                                                                             
251 bury 3                                      "Hello World", 2, 1, 1, 15, 2, 1                                                                                
253 int 1                                       "Hello World", 2, 1, 1, 15, 2, 1, 1                                                                             
254 +                                           "Hello World", 2, 1, 1, 15, 2, 2                                                                                
255 bury 3                                      "Hello World", 2, 1, 2, 15, 2                                                                                   
257 b main_for_header@16                        "Hello World", 2, 1, 2, 15, 2                                                                                   
214 dig 2                                       "Hello World", 2, 1, 2, 15, 2, 2                                                                                
216 int 4                                       "Hello World", 2, 1, 2, 15, 2, 2, 4                                                                             
217 <                                           "Hello World", 2, 1, 2, 15, 2, 1                                                                                
218 bz main_after_for@19                        "Hello World", 2, 1, 2, 15, 2                                                                                   
221 dig 2                                       "Hello World", 2, 1, 2, 15, 2, 2                                                                                
223 dup                                         "Hello World", 2, 1, 2, 15, 2, 2, 2                                                                             
224 int 4                                       "Hello World", 2, 1, 2, 15, 2, 2, 2, 4                                                                          
225 *                                           "Hello World", 2, 1, 2, 15, 2, 2, 8                                                                             
226 byte 0x000000010000000a000000ff00000080     "Hello World", 2, 1, 2, 15, 2, 2, 8, 0x000000010000000A000000FF00000080                                         
244 swap                                        "Hello World", 2, 1, 2, 15, 2, 2, 0x000000010000000A000000FF00000080, 8                                         
245 int 4                                       "Hello World", 2, 1, 2, 15, 2, 2, 0x000000010000000A000000FF00000080, 8, 4                                      
246 extract3                                    "Hello World", 2, 1, 2, 15, 2, 2, 0x000000FF                                                                    
247 btoi                                        "Hello World", 2, 1, 2, 15, 2, 2, 255                                                                           
248 dig 3                                       "Hello World", 2, 1, 2, 15, 2, 2, 255, 15                                                                       
250 +                                           "Hello World", 2, 1, 2, 15, 2, 2, 270                                                                           
251 bury 3                                      "Hello World", 2, 1, 2, 270, 2, 2                                                                               
253 int 1                                       "Hello World", 2, 1, 2, 270, 2, 2, 1                                                                            
254 +                                           "Hello World", 2, 1, 2, 270, 2, 3                                                                               
255 bury 3                                      "Hello World", 2, 1, 3, 270, 2                                                                                  
257 b main_for_header@16                        "Hello World", 2, 1, 3, 270, 2                                                                                  
214 dig 2                                       "Hello World", 2, 1, 3, 270, 2, 3                                                                               
216 int 4                                       "Hello World", 2, 1, 3, 270, 2, 3, 4                                                                            
217 <                                           "Hello World", 2, 1, 3, 270, 2, 1                                                                               
218 bz main_after_for@19                        "Hello World", 2, 1, 3, 270, 2                                                                                  
221 dig 2                                       "Hello World", 2, 1, 3, 270, 2, 3                                                                               
223 dup                                         "Hello World", 2, 1, 3, 270, 2, 3, 3                                                                            
224 int 4                                       "Hello World", 2, 1, 3, 270, 2, 3, 3, 4                                                                         
225 *                                           "Hello World", 2, 1, 3, 270, 2, 3, 12                                                                           
226 byte 0x000000010000000a000000ff00000080     "Hello World", 2, 1, 3, 270, 2, 3, 12, 0x000000010000000A000000FF00000080                                       
244 swap                                        "Hello World", 2, 1, 3, 270, 2, 3, 0x000000010000000A000000FF00000080, 12                                       
245 int 4                                       "Hello World", 2, 1, 3, 270, 2, 3, 0x000000010000000A000000FF00000080, 12, 4                                    
246 extract3                                    "Hello World", 2, 1, 3, 270, 2, 3, 0x00000080                                                                   
247 btoi                                        "Hello World", 2, 1, 3, 270, 2, 3, 128                                                                          
248 dig 3                                       "Hello World", 2, 1, 3, 270, 2, 3, 128, 270                                                                     
250 +                                           "Hello World", 2, 1, 3, 270, 2, 3, 398                                                                          
251 bury 3                                      "Hello World", 2, 1, 3, 398, 2, 3                                                                               
253 int 1                                       "Hello World", 2, 1, 3, 398, 2, 3, 1                                                                            
254 +                                           "Hello World", 2, 1, 3, 398, 2, 4                                                                               
255 bury 3                                      "Hello World", 2, 1, 4, 398, 2                                                                                  
257 b main_for_header@16                        "Hello World", 2, 1, 4, 398, 2                                                                                  
214 dig 2                                       "Hello World", 2, 1, 4, 398, 2, 4                                                                               
216 int 4                                       "Hello World", 2, 1, 4, 398, 2, 4, 4                                                                            
217 <                                           "Hello World", 2, 1, 4, 398, 2, 0                                                                               
218 bz main_after_for@19                        "Hello World", 2, 1, 4, 398, 2                                                                                  
260 dig 1                                       "Hello World", 2, 1, 4, 398, 2, 398                                                                             
262 int 398                                     "Hello World", 2, 1, 4, 398, 2, 398, 398                                                                        
265 ==                                          "Hello World", 2, 1, 4, 398, 2, 1                                                                               
266 assert                                      "Hello World", 2, 1, 4, 398, 2                                                                                  
267 byte ""                                     "Hello World", 2, 1, 4, 398, 2, 0x                                                                              
268 bury 6                                      0x, 2, 1, 4, 398, 2                                                                                             
270 int 0                                       0x, 2, 1, 4, 398, 2, 0                                                                                          
271 bury 5                                      0x, 0, 1, 4, 398, 2                                                                                             
273 dig 4                                       0x, 0, 1, 4, 398, 2, 0                                                                                          
275 int 2                                       0x, 0, 1, 4, 398, 2, 0, 2                                                                                       
276 <                                           0x, 0, 1, 4, 398, 2, 1                                                                                          
277 bz main_after_for@26                        0x, 0, 1, 4, 398, 2                                                                                             
280 dig 4                                       0x, 0, 1, 4, 398, 2, 0                                                                                          
282 dup                                         0x, 0, 1, 4, 398, 2, 0, 0                                                                                       
283 int 2                                       0x, 0, 1, 4, 398, 2, 0, 0, 2                                                                                    
284 *                                           0x, 0, 1, 4, 398, 2, 0, 0                                                                                       
285 byte 0x0004000a000450696e670004506f6e67     0x, 0, 1, 4, 398, 2, 0, 0, 0x0004000A000450696E670004506F6E67                                                   
286 swap                                        0x, 0, 1, 4, 398, 2, 0, 0x0004000A000450696E670004506F6E67, 0                                                   
287 extract_uint16                              0x, 0, 1, 4, 398, 2, 0, 4                                                                                       
288 byte 0x0004000a000450696e670004506f6e67     0x, 0, 1, 4, 398, 2, 0, 4, 0x0004000A000450696E670004506F6E67                                                   
289 dig 1                                       0x, 0, 1, 4, 398, 2, 0, 4, 0x0004000A000450696E670004506F6E67, 4                                                
291 extract_uint16                              0x, 0, 1, 4, 398, 2, 0, 4, 4                                                                                    
292 int 2                                       0x, 0, 1, 4, 398, 2, 0, 4, 4, 2                                                                                 
293 +                                           0x, 0, 1, 4, 398, 2, 0, 4, 6                                                                                    
294 byte 0x0004000a000450696e670004506f6e67     0x, 0, 1, 4, 398, 2, 0, 4, 6, 0x0004000A000450696E670004506F6E67                                                
295 cover 2                                     0x, 0, 1, 4, 398, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 6                                                
297 extract3                                    0x, 0, 1, 4, 398, 2, 0, 0x000450696E67                                                                          
298 swap                                        0x, 0, 1, 4, 398, 2, 0x000450696E67, 0                                                                          
299 bnz main_else_body@23                       0x, 0, 1, 4, 398, 2, 0x000450696E67                                                                             
302 extract 2 0                                 0x, 0, 1, 4, 398, 2, "Ping"                                                                                     
305 bury 6                                      "Ping", 0, 1, 4, 398, 2                                                                                         
307 b main_after_if_else@24                     "Ping", 0, 1, 4, 398, 2                                                                                         
322 dig 4                                       "Ping", 0, 1, 4, 398, 2, 0                                                                                      
324 int 1                                       "Ping", 0, 1, 4, 398, 2, 0, 1                                                                                   
325 +                                           "Ping", 0, 1, 4, 398, 2, 1                                                                                      
326 bury 5                                      "Ping", 1, 1, 4, 398, 2                                                                                         
328 b main_for_header@20                        "Ping", 1, 1, 4, 398, 2                                                                                         
273 dig 4                                       "Ping", 1, 1, 4, 398, 2, 1                                                                                      
275 int 2                                       "Ping", 1, 1, 4, 398, 2, 1, 2                                                                                   
276 <                                           "Ping", 1, 1, 4, 398, 2, 1                                                                                      
277 bz main_after_for@26                        "Ping", 1, 1, 4, 398, 2                                                                                         
280 dig 4                                       "Ping", 1, 1, 4, 398, 2, 1                                                                                      
282 dup                                         "Ping", 1, 1, 4, 398, 2, 1, 1                                                                                   
283 int 2                                       "Ping", 1, 1, 4, 398, 2, 1, 1, 2                                                                                
284 *                                           "Ping", 1, 1, 4, 398, 2, 1, 2                                                                                   
285 byte 0x0004000a000450696e670004506f6e67     "Ping", 1, 1, 4, 398, 2, 1, 2, 0x0004000A000450696E670004506F6E67                                               
286 swap                                        "Ping", 1, 1, 4, 398, 2, 1, 0x0004000A000450696E670004506F6E67, 2                                               
287 extract_uint16                              "Ping", 1, 1, 4, 398, 2, 1, 10                                                                                  
288 byte 0x0004000a000450696e670004506f6e67     "Ping", 1, 1, 4, 398, 2, 1, 10, 0x0004000A000450696E670004506F6E67                                              
289 dig 1                                       "Ping", 1, 1, 4, 398, 2, 1, 10, 0x0004000A000450696E670004506F6E67, 10                                          
291 extract_uint16                              "Ping", 1, 1, 4, 398, 2, 1, 10, 4                                                                               
292 int 2                                       "Ping", 1, 1, 4, 398, 2, 1, 10, 4, 2                                                                            
293 +                                           "Ping", 1, 1, 4, 398, 2, 1, 10, 6                                                                               
294 byte 0x0004000a000450696e670004506f6e67     "Ping", 1, 1, 4, 398, 2, 1, 10, 6, 0x0004000A000450696E670004506F6E67                                           
295 cover 2                                     "Ping", 1, 1, 4, 398, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 6                                           
297 extract3                                    "Ping", 1, 1, 4, 398, 2, 1, 0x0004506F6E67                                                                      
298 swap                                        "Ping", 1, 1, 4, 398, 2, 0x0004506F6E67, 1                                                                      
299 bnz main_else_body@23                       "Ping", 1, 1, 4, 398, 2, 0x0004506F6E67                                                                         
310 extract 2 0                                 "Ping", 1, 1, 4, 398, 2, "Pong"                                                                                 
313 byte " "                                    "Ping", 1, 1, 4, 398, 2, "Pong", " "                                                                            
314 swap                                        "Ping", 1, 1, 4, 398, 2, " ", "Pong"                                                                            
315 concat                                      "Ping", 1, 1, 4, 398, 2, " Pong"                                                                                
316 dig 6                                       "Ping", 1, 1, 4, 398, 2, " Pong", "Ping"                                                                        
318 swap                                        "Ping", 1, 1, 4, 398, 2, "Ping", " Pong"                                                                        
319 concat                                      "Ping", 1, 1, 4, 398, 2, "Ping Pong"                                                                            
320 bury 6                                      "Ping Pong", 1, 1, 4, 398, 2                                                                                    
322 dig 4                                       "Ping Pong", 1, 1, 4, 398, 2, 1                                                                                 
324 int 1                                       "Ping Pong", 1, 1, 4, 398, 2, 1, 1                                                                              
325 +                                           "Ping Pong", 1, 1, 4, 398, 2, 2                                                                                 
326 bury 5                                      "Ping Pong", 2, 1, 4, 398, 2                                                                                    
328 b main_for_header@20                        "Ping Pong", 2, 1, 4, 398, 2                                                                                    
273 dig 4                                       "Ping Pong", 2, 1, 4, 398, 2, 2                                                                                 
275 int 2                                       "Ping Pong", 2, 1, 4, 398, 2, 2, 2                                                                              
276 <                                           "Ping Pong", 2, 1, 4, 398, 2, 0                                                                                 
277 bz main_after_for@26                        "Ping Pong", 2, 1, 4, 398, 2                                                                                    
331 dig 5                                       "Ping Pong", 2, 1, 4, 398, 2, "Ping Pong"                                                                       
333 byte "Ping Pong"                            "Ping Pong", 2, 1, 4, 398, 2, "Ping Pong", "Ping Pong"                                                          
344 ==                                          "Ping Pong", 2, 1, 4, 398, 2, 1                                                                                 
345 assert                                      "Ping Pong", 2, 1, 4, 398, 2                                                                                    
346 byte 0x54657374696e6720313233               "Ping Pong", 2, 1, 4, 398, 2, "Testing 123"                                                                     
359 callsub hash_as_array                       "Ping Pong", 2, 1, 4, 398, 2, "Testing 123"                                                                     
365 proto 1 1                                   "Ping Pong", 2, 1, 4, 398, 2, "Testing 123"                                                                     
368 frame_dig -1                                "Ping Pong", 2, 1, 4, 398, 2, "Testing 123", "Testing 123"                                                      
370 sha3_256                                    "Ping Pong", 2, 1, 4, 398, 2, "Testing 123", 0x66C9B9DA9D0070E51A96B06DFF1BBD82CDD3A3DEE8EF08793D0584061FAFFAFD 
371 retsub                                      "Ping Pong", 2, 1, 4, 398, 2, 0x66C9B9DA9D0070E51A96B06DFF1BBD82CDD3A3DEE8EF08793D0584061FAFFAFD                
362 pop                                         "Ping Pong", 2, 1, 4, 398, 2                                                                                    
363 int 1                                       "Ping Pong", 2, 1, 4, 398, 2, 1                                                                                 
364 return                                      1                                                                                                               