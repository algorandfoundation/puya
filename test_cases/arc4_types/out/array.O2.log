PC  Teal                                    Stack                                                                                                                                                                                                
1   <intcblock>                                                                                                                                                                                                                                  
7   <bytecblock>                                                                                                                                                                                                                                 
20  int 0                                   0                                                                                                                                                                                                    
21  dupn 2                                  0, 0, 0                                                                                                                                                                                              
23  byte ""                                 0, 0, 0, 0x                                                                                                                                                                                          
24  dupn 4                                  0, 0, 0, 0x, 0x, 0x, 0x, 0x                                                                                                                                                                          
26  int 0                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0                                                                                                                                                                       
27  byte 0x00020102                         0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 0x00020102                                                                                                                                                           
33  int 0                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 0x00020102, 0                                                                                                                                                        
34  extract_uint16                          0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2                                                                                                                                                                    
35  int 0                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0                                                                                                                                                                 
36  dup                                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0                                                                                                                                                              
37  dig 2                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 2                                                                                                                                                           
39  <                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 1                                                                                                                                                              
40  bz main_after_for@4                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0                                                                                                                                                                 
43  byte 0x0102                             0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0x0102                                                                                                                                                         
47  dig 1                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0x0102, 0                                                                                                                                                      
49  dup                                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0x0102, 0, 0                                                                                                                                                   
50  cover 2                                 0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 0x0102, 0                                                                                                                                                   
52  int 1                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 0x0102, 0, 1                                                                                                                                                
53  extract3                                0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 0x01                                                                                                                                                        
54  btoi                                    0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 1                                                                                                                                                           
55  dig 4                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 1, 0                                                                                                                                                        
57  +                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 0, 2, 0, 0, 1                                                                                                                                                           
58  bury 4                                  0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 0, 0                                                                                                                                                              
60  int 1                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 0, 0, 1                                                                                                                                                           
61  +                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 0, 1                                                                                                                                                              
62  bury 1                                  0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1                                                                                                                                                                 
64  b main_for_header@1                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1                                                                                                                                                                 
36  dup                                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1                                                                                                                                                              
37  dig 2                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 2                                                                                                                                                           
39  <                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1                                                                                                                                                              
40  bz main_after_for@4                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1                                                                                                                                                                 
43  byte 0x0102                             0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 0x0102                                                                                                                                                         
47  dig 1                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 0x0102, 1                                                                                                                                                      
49  dup                                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 0x0102, 1, 1                                                                                                                                                   
50  cover 2                                 0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 0x0102, 1                                                                                                                                                   
52  int 1                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 0x0102, 1, 1                                                                                                                                                
53  extract3                                0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 0x02                                                                                                                                                        
54  btoi                                    0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 2                                                                                                                                                           
55  dig 4                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 2, 1                                                                                                                                                        
57  +                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 1, 2, 1, 1, 3                                                                                                                                                           
58  bury 4                                  0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 1, 1                                                                                                                                                              
60  int 1                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 1, 1, 1                                                                                                                                                           
61  +                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 1, 2                                                                                                                                                              
62  bury 1                                  0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2                                                                                                                                                                 
64  b main_for_header@1                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2                                                                                                                                                                 
36  dup                                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 2                                                                                                                                                              
37  dig 2                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 2, 2                                                                                                                                                           
39  <                                       0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 0                                                                                                                                                              
40  bz main_after_for@4                     0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2                                                                                                                                                                 
67  dig 2                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 3                                                                                                                                                              
69  int 3                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 3, 3                                                                                                                                                           
71  ==                                      0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 1                                                                                                                                                              
72  assert                                  0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2                                                                                                                                                                 
73  byte 0x00010001                         0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 0x00010001                                                                                                                                                     
79  int 0                                   0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 0x00010001, 0                                                                                                                                                  
80  extract_uint16                          0, 0, 0, 0x, 0x, 0x, 0x, 0x, 3, 2, 2, 1                                                                                                                                                              
81  bury 8                                  0, 0, 0, 1, 0x, 0x, 0x, 0x, 3, 2, 2                                                                                                                                                                  
83  int 0                                   0, 0, 0, 1, 0x, 0x, 0x, 0x, 3, 2, 2, 0                                                                                                                                                               
84  bury 6                                  0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2                                                                                                                                                                   
86  dig 5                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0                                                                                                                                                                
88  dig 8                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 1                                                                                                                                                             
90  <                                       0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 1                                                                                                                                                                
91  bz main_after_for@8                     0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2                                                                                                                                                                   
94  dig 5                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0                                                                                                                                                                
96  dup                                     0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0                                                                                                                                                             
97  int 2                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0, 2                                                                                                                                                          
98  *                                       0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0                                                                                                                                                             
99  byte 0x0001                             0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0, 0x0001                                                                                                                                                     
103 swap                                    0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0x0001, 0                                                                                                                                                     
104 int 2                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0x0001, 0, 2                                                                                                                                                  
105 extract3                                0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 0x0001                                                                                                                                                        
106 btoi                                    0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 1                                                                                                                                                             
107 dig 4                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 1, 3                                                                                                                                                          
109 +                                       0, 0, 0, 1, 0x, 0, 0x, 0x, 3, 2, 2, 0, 4                                                                                                                                                             
110 bury 4                                  0, 0, 0, 1, 0x, 0, 0x, 0x, 4, 2, 2, 0                                                                                                                                                                
112 int 1                                   0, 0, 0, 1, 0x, 0, 0x, 0x, 4, 2, 2, 0, 1                                                                                                                                                             
113 +                                       0, 0, 0, 1, 0x, 0, 0x, 0x, 4, 2, 2, 1                                                                                                                                                                
114 bury 6                                  0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2                                                                                                                                                                   
116 b main_for_header@5                     0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2                                                                                                                                                                   
86  dig 5                                   0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 1                                                                                                                                                                
88  dig 8                                   0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 1, 1                                                                                                                                                             
90  <                                       0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0                                                                                                                                                                
91  bz main_after_for@8                     0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2                                                                                                                                                                   
119 dig 2                                   0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 4                                                                                                                                                                
121 int 4                                   0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 4, 4                                                                                                                                                             
122 ==                                      0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 1                                                                                                                                                                
123 assert                                  0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2                                                                                                                                                                   
124 byte 0x00020004000b                     0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B                                                                                                                                                   
132 byte "\x00\x05Hello"                    0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B, 0x000548656C6C6F                                                                                                                                 
133 concat                                  0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F                                                                                                                                     
134 byte "\x00\x05World"                    0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F, 0x0005576F726C64                                                                                                                   
143 concat                                  0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64                                                                                                                       
144 dup                                     0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64                                                                           
145 int 0                                   0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64, 0                                                                        
146 extract_uint16                          0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2                                                                                                                    
147 dup                                     0, 0, 0, 1, 0x, 1, 0x, 0x, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2, 2                                                                                                                 
148 bury 6                                  0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2                                                                                                                     
150 dup                                     0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2, 2                                                                                                                  
151 int 2                                   0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2, 2, 2                                                                                                               
152 ==                                      0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2, 1                                                                                                                  
153 assert                                  0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2                                                                                                                     
154 int 0                                   0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 2, 0                                                                                                                  
155 >                                       0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64, 1                                                                                                                     
156 assert                                  0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x00020004000B000548656C6C6F0005576F726C64                                                                                                                        
157 extract 2 0                             0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64                                                                                                                            
160 dup                                     0, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64                                                                                    
161 bury 12                                 0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64                                                                                       
163 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64                                               
164 int 0                                   0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 0                                            
165 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 4                                                                                    
166 dup2                                    0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 4, 0x0004000B000548656C6C6F0005576F726C64, 4                                         
167 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 4, 5                                                                                 
168 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 4, 5, 2                                                                              
169 +                                       0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x0004000B000548656C6C6F0005576F726C64, 4, 7                                                                                 
170 extract3                                0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x000548656C6C6F                                                                                                             
171 byte "\x00\x05Hello"                    0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x000548656C6C6F, 0x000548656C6C6F                                                                                           
172 ==                                      0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 1                                                                                                                            
173 assert                                  0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2                                                                                                                               
174 byte ""                                 0x0004000B000548656C6C6F0005576F726C64, 0, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0x                                                                                                                           
175 bury 10                                 0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0x, 1, 0x, 2, 4, 2, 2                                                                                                                              
177 int 0                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0x, 1, 0x, 2, 4, 2, 2, 0                                                                                                                           
178 bury 7                                  0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2                                                                                                                               
180 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0                                                                                                                            
182 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 2                                                                                                                         
184 <                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 1                                                                                                                            
185 bz main_after_for@15                    0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2                                                                                                                               
188 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0                                                                                                                            
190 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0                                                                                                                         
191 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0, 2                                                                                                                      
192 *                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0                                                                                                                         
193 dig 12                                  0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64                                                                                 
195 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64                                         
196 uncover 2                               0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 0                                         
198 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 4                                                                                 
199 dup2                                    0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 0x0004000B000548656C6C6F0005576F726C64, 4                                      
200 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 5                                                                              
201 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 5, 2                                                                           
202 +                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 7                                                                              
203 extract3                                0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 0x000548656C6C6F                                                                                                          
204 swap                                    0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0x000548656C6C6F, 0                                                                                                          
205 bnz main_else_body@12                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0x000548656C6C6F                                                                                                             
208 extract 2 0                             0x0004000B000548656C6C6F0005576F726C64, 0x, 0, 1, 0, 1, 0x, 2, 4, 2, 2, "Hello"                                                                                                                      
211 bury 10                                 0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 0, 1, 0x, 2, 4, 2, 2                                                                                                                          
213 b main_after_if_else@13                 0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 0, 1, 0x, 2, 4, 2, 2                                                                                                                          
228 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0                                                                                                                       
230 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 0, 1, 0x, 2, 4, 2, 2, 0, 1                                                                                                                    
231 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 0, 1, 0x, 2, 4, 2, 2, 1                                                                                                                       
232 bury 7                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2                                                                                                                          
234 b main_for_header@9                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2                                                                                                                          
180 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1                                                                                                                       
182 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 2                                                                                                                    
184 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1                                                                                                                       
185 bz main_after_for@15                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2                                                                                                                          
188 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1                                                                                                                       
190 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 1                                                                                                                    
191 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 1, 2                                                                                                                 
192 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 2                                                                                                                    
193 dig 12                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 2, 0x0004000B000548656C6C6F0005576F726C64                                                                            
195 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 2, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64                                    
196 uncover 2                               0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 2                                    
198 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 11                                                                           
199 dup2                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 0x0004000B000548656C6C6F0005576F726C64, 11                               
200 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 5                                                                        
201 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 5, 2                                                                     
202 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 7                                                                        
203 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 0x0005576F726C64                                                                                                     
204 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 0x0005576F726C64, 1                                                                                                     
205 bnz main_else_body@12                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 0x0005576F726C64                                                                                                        
216 extract 2 0                             0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, "World"                                                                                                                 
219 byte " "                                0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, "World", " "                                                                                                            
220 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, " ", "World"                                                                                                            
221 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, " World"                                                                                                                
222 dig 10                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, " World", "Hello"                                                                                                       
224 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, "Hello", " World"                                                                                                       
225 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 0, 1, 1, 1, 0x, 2, 4, 2, 2, "Hello World"                                                                                                           
226 bury 10                                 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 1, 1, 0x, 2, 4, 2, 2                                                                                                                    
228 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1                                                                                                                 
230 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 1, 1                                                                                                              
231 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 1, 1, 0x, 2, 4, 2, 2, 2                                                                                                                 
232 bury 7                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2                                                                                                                    
234 b main_for_header@9                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2                                                                                                                    
180 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, 2                                                                                                                 
182 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, 2, 2                                                                                                              
184 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, 0                                                                                                                 
185 bz main_after_for@15                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2                                                                                                                    
237 dig 9                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, "Hello World"                                                                                                     
239 byte "Hello World"                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, "Hello World", "Hello World"                                                                                      
252 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, 1                                                                                                                 
253 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2                                                                                                                    
254 int 0                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0x, 2, 4, 2, 2, 0                                                                                                                 
255 bury 5                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2                                                                                                                     
257 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0                                                                                                                  
259 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 4                                                                                                               
260 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 1                                                                                                                  
261 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2                                                                                                                     
264 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0                                                                                                                  
266 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0                                                                                                               
267 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0, 4                                                                                                            
268 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0                                                                                                               
269 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0, 0x000000010000000A000000FF00000080                                                                           
287 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0x000000010000000A000000FF00000080, 0                                                                           
288 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0x000000010000000A000000FF00000080, 0, 4                                                                        
289 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 0x00000001                                                                                                      
290 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 1                                                                                                               
291 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 1, 4                                                                                                            
293 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 4, 2, 2, 0, 5                                                                                                               
294 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 5, 2, 2, 0                                                                                                                  
296 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 5, 2, 2, 0, 1                                                                                                               
297 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 0, 2, 5, 2, 2, 1                                                                                                                  
298 bury 5                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2                                                                                                                     
300 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2                                                                                                                     
257 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1                                                                                                                  
259 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 4                                                                                                               
260 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1                                                                                                                  
261 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2                                                                                                                     
264 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1                                                                                                                  
266 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 1                                                                                                               
267 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 1, 4                                                                                                            
268 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 4                                                                                                               
269 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 4, 0x000000010000000A000000FF00000080                                                                           
287 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 0x000000010000000A000000FF00000080, 4                                                                           
288 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 0x000000010000000A000000FF00000080, 4, 4                                                                        
289 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 0x0000000A                                                                                                      
290 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 10                                                                                                              
291 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 10, 5                                                                                                           
293 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 5, 2, 2, 1, 15                                                                                                              
294 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 15, 2, 2, 1                                                                                                                 
296 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 15, 2, 2, 1, 1                                                                                                              
297 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 1, 2, 15, 2, 2, 2                                                                                                                 
298 bury 5                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2                                                                                                                    
300 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2                                                                                                                    
257 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2                                                                                                                 
259 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 4                                                                                                              
260 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 1                                                                                                                 
261 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2                                                                                                                    
264 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2                                                                                                                 
266 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 2                                                                                                              
267 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 2, 4                                                                                                           
268 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 8                                                                                                              
269 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 8, 0x000000010000000A000000FF00000080                                                                          
287 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 0x000000010000000A000000FF00000080, 8                                                                          
288 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 0x000000010000000A000000FF00000080, 8, 4                                                                       
289 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 0x000000FF                                                                                                     
290 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 255                                                                                                            
291 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 255, 15                                                                                                        
293 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 15, 2, 2, 2, 270                                                                                                            
294 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 270, 2, 2, 2                                                                                                                
296 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 270, 2, 2, 2, 1                                                                                                             
297 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 2, 2, 270, 2, 2, 3                                                                                                                
298 bury 5                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2                                                                                                                   
300 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2                                                                                                                   
257 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3                                                                                                                
259 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 4                                                                                                             
260 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 1                                                                                                                
261 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2                                                                                                                   
264 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3                                                                                                                
266 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 3                                                                                                             
267 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 3, 4                                                                                                          
268 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 12                                                                                                            
269 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 12, 0x000000010000000A000000FF00000080                                                                        
287 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 0x000000010000000A000000FF00000080, 12                                                                        
288 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 0x000000010000000A000000FF00000080, 12, 4                                                                     
289 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 0x00000080                                                                                                    
290 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 128                                                                                                           
291 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 128, 270                                                                                                      
293 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 270, 2, 2, 3, 398                                                                                                           
294 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 398, 2, 2, 3                                                                                                                
296 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 398, 2, 2, 3, 1                                                                                                             
297 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 3, 2, 398, 2, 2, 4                                                                                                                
298 bury 5                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2                                                                                                                   
300 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2                                                                                                                   
257 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 4                                                                                                                
259 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 4, 4                                                                                                             
260 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 0                                                                                                                
261 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2                                                                                                                   
303 dig 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 398                                                                                                              
305 int 398                                 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 398, 398                                                                                                         
308 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 1                                                                                                                
309 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2                                                                                                                   
310 byte 0x65                               0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, "e"                                                                                                              
313 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 101                                                                                                              
314 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 101, 101                                                                                                         
315 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 202                                                                                                              
316 int 202                                 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 202, 202                                                                                                         
319 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 1                                                                                                                
320 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2                                                                                                                   
321 byte 0x0004000a                         0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 0x0004000A                                                                                                       
327 byte "\x00\x04Ping"                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 0x0004000A, 0x000450696E67                                                                                       
335 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 0x0004000A000450696E67                                                                                           
336 byte "\x00\x04Pong"                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 0x0004000A000450696E67, 0x0004506F6E67                                                                           
344 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0, 1, 2, 1, 4, 2, 398, 2, 2, 0x0004000A000450696E670004506F6E67                                                                               
345 bury 9                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                  
347 byte ""                                 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 0x                                                                              
348 bury 10                                 0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                             
350 int 0                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 0                                                                                          
351 bury 7                                  0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2                                                                                             
353 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0                                                                                          
355 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 2                                                                                       
356 <                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 1                                                                                          
357 bz main_after_for@26                    0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2                                                                                             
360 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0                                                                                          
362 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0                                                                                       
363 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0, 2                                                                                    
364 *                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0                                                                                       
365 dig 10                                  0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0, 0x0004000A000450696E670004506F6E67                                                   
367 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67               
368 uncover 2                               0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67, 0               
370 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x0004000A000450696E670004506F6E67, 4                                                   
371 dup2                                    0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 0x0004000A000450696E670004506F6E67, 4            
372 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 4                                                
373 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 4, 2                                             
374 +                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 6                                                
375 extract3                                0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 0x000450696E67                                                                          
376 swap                                    0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0x000450696E67, 0                                                                          
377 bnz main_else_body@23                   0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0x000450696E67                                                                             
380 extract 2 0                             0x0004000B000548656C6C6F0005576F726C64, 0x, 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, "Ping"                                                                                     
383 bury 10                                 0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2                                                                                         
385 b main_after_if_else@24                 0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2                                                                                         
400 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0                                                                                      
402 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 0, 1                                                                                   
403 +                                       0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 0, 1, 4, 2, 398, 2, 2, 1                                                                                      
404 bury 7                                  0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2                                                                                         
406 b main_for_header@20                    0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2                                                                                         
353 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1                                                                                      
355 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 2                                                                                   
356 <                                       0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1                                                                                      
357 bz main_after_for@26                    0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2                                                                                         
360 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1                                                                                      
362 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 1                                                                                   
363 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 1, 2                                                                                
364 *                                       0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 2                                                                                   
365 dig 10                                  0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 2, 0x0004000A000450696E670004506F6E67                                               
367 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 2, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67           
368 uncover 2                               0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67, 2           
370 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004000A000450696E670004506F6E67, 10                                              
371 dup2                                    0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 0x0004000A000450696E670004506F6E67, 10      
372 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 4                                           
373 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 4, 2                                        
374 +                                       0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 6                                           
375 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 0x0004506F6E67                                                                      
376 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 0x0004506F6E67, 1                                                                      
377 bnz main_else_body@23                   0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 0x0004506F6E67                                                                         
388 extract 2 0                             0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, "Pong"                                                                                 
391 byte " "                                0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, "Pong", " "                                                                            
392 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, " ", "Pong"                                                                            
393 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, " Pong"                                                                                
394 dig 10                                  0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, " Pong", "Ping"                                                                        
396 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, "Ping", " Pong"                                                                        
397 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Ping", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, "Ping Pong"                                                                            
398 bury 10                                 0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2                                                                                    
400 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1                                                                                 
402 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 1, 1                                                                              
403 +                                       0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 1, 1, 4, 2, 398, 2, 2, 2                                                                                 
404 bury 7                                  0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                    
406 b main_for_header@20                    0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                    
353 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 2                                                                                 
355 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 2, 2                                                                              
356 <                                       0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 0                                                                                 
357 bz main_after_for@26                    0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                    
409 dig 9                                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Ping Pong"                                                                       
411 byte "Ping Pong"                        0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Ping Pong", "Ping Pong"                                                          
422 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 1                                                                                 
423 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                    
424 byte "Testing 123"                      0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Testing 123"                                                                     
437 callsub hash_as_array                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Testing 123"                                                                     
443 proto 1 1                               0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Testing 123"                                                                     
446 frame_dig -1                            0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Testing 123", "Testing 123"                                                      
448 sha3_256                                0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, "Testing 123", 0x66C9B9DA9D0070E51A96B06DFF1BBD82CDD3A3DEE8EF08793D0584061FAFFAFD 
449 retsub                                  0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 0x66C9B9DA9D0070E51A96B06DFF1BBD82CDD3A3DEE8EF08793D0584061FAFFAFD                
440 pop                                     0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2                                                                                    
441 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Ping Pong", 0x0004000A000450696E670004506F6E67, 1, 2, 1, 4, 2, 398, 2, 2, 1                                                                                 
442 return                                  1                                                                                                                                                                                                    