main test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program:
    block@0: // L30
        let tmp%11#0: uint64 = (txn NumAppArgs)
        let select%0#0: Encoded(uint8) = (select 0x02 0x01 tmp%11#0)
        let tmp%13#0: bool = (b== select%0#0 0x02)
        (assert tmp%13#0)
        let tmp%14#0: uint64 = (txn NumAppArgs)
        let select%1#0: Encoded(uint512) = (select 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 tmp%14#0)
        let tmp%16#0: bool = (b== select%1#0 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002)
        (assert tmp%16#0)
        let tmp%38#0: uint64 = (txn NumAppArgs)
        let select%2#0: Encoded(uint64) = (select 0x0000000000000000 0xffffffffffffffff tmp%38#0)
        let tmp%40#0: bool = (== select%2#0 0x0000000000000000)
        (assert tmp%40#0)
        return 1u