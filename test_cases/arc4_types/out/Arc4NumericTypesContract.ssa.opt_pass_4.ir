contract test_cases.arc4_types.numeric.Arc4NumericTypesContract:
    program approval:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program() -> uint64:
            block@0: // L27
                let tmp%5#0: bytes = 0x7f
                let tmp%6#0: uint64 = (btoi tmp%5#0)
                let tmp%7#0: uint64 = (== tmp%6#0 127u)
                (assert tmp%7#0)
                let tmp%12#0: bytes = 0x7fffff
                let tmp%13#0: uint64 = (btoi tmp%12#0)
                let tmp%14#0: uint64 = (== tmp%13#0 8388607u)
                (assert tmp%14#0)
                let tmp%19#0: bytes = 0x7fff
                let tmp%20#0: uint64 = (btoi tmp%19#0)
                let tmp%21#0: uint64 = (== tmp%20#0 32767u)
                (assert tmp%21#0)
                let tmp%26#0: bytes = 0x7fffffff
                let tmp%27#0: uint64 = (btoi tmp%26#0)
                let tmp%28#0: uint64 = (== tmp%27#0 2147483647u)
                (assert tmp%28#0)
                let tmp%33#0: bytes = 0x7fffffffffffffff
                let tmp%34#0: uint64 = (btoi tmp%33#0)
                let tmp%35#0: uint64 = (== tmp%34#0 9223372036854775807u)
                (assert tmp%35#0)
                let tmp%60#0: uint64 = 1u
                (assert tmp%60#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
            block@0: // L100
                return 1u