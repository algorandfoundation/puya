{
  "version": 3,
  "sources": [
    "../mutable_params2.py"
  ],
  "mappings": ";;;;;AAGA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAGY;;;;;AACoC;AAAxC;;;AACY;;;;;;AAAL;AAAP;AAEI;;;;;AACoC;AAAxC;;;AACY;;;;;;;AAAL;AARV;AAUL;;;;;AAEA;;AAAA;;;AACY;;AAAS;;;AAAT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAGI;;;;;;;;;;;;;;;;AAIR;;AAAS;;;AAAT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;;;;AAFI;;AAAS;;;AAAT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "8": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "10": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "11": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "12": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "13": {
      "op": "switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED",
      "stack_out": []
    },
    "39": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "40": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "42": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "43": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "op": "return // on error: this contract does not implement the given ABI method for create NoOp",
      "defined_out": [],
      "stack_out": []
    },
    "44": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "pushbytes 0x6ac4a557 // method \"test_array_rebinding()void\"",
      "defined_out": [
        "Method(test_array_rebinding()void)"
      ],
      "stack_out": [
        "Method(test_array_rebinding()void)"
      ]
    },
    "50": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_array_rebinding()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(test_array_rebinding()void)",
        "tmp%5#0"
      ]
    },
    "53": {
      "op": "match test_array_rebinding",
      "stack_out": []
    },
    "57": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "58": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding[routing]",
      "params": {},
      "block": "test_array_rebinding",
      "stack_in": [],
      "op": "pushbytes 0x000100",
      "defined_out": [
        "0x000100"
      ],
      "stack_out": [
        "0x000100"
      ]
    },
    "63": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0x000100",
        "1"
      ],
      "stack_out": [
        "0x000100",
        "1"
      ]
    },
    "64": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "defined_out": [
        "a#1"
      ],
      "stack_out": [
        "a#1"
      ]
    },
    "67": {
      "op": "pushbytes 0x00020001",
      "defined_out": [
        "0x00020001",
        "a#1"
      ],
      "stack_out": [
        "a#1",
        "0x00020001"
      ]
    },
    "73": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "74": {
      "op": "assert",
      "stack_out": []
    },
    "75": {
      "op": "pushbytes 0x000101",
      "defined_out": [
        "0x000101"
      ],
      "stack_out": [
        "0x000101"
      ]
    },
    "80": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x000101"
      ],
      "stack_out": [
        "0x000101",
        "0"
      ]
    },
    "81": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "stack_out": [
        "a#1"
      ]
    },
    "84": {
      "op": "pushbytes 0x0003012a04",
      "defined_out": [
        "0x0003012a04",
        "a#1"
      ],
      "stack_out": [
        "a#1",
        "0x0003012a04"
      ]
    },
    "91": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "92": {
      "op": "return",
      "stack_out": []
    },
    "93": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "params": {
        "a#0": "bytes",
        "assign_local#0": "uint64"
      },
      "block": "maybe_modify_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "96": {
      "op": "intc_1 // 0",
      "stack_out": [
        "a%out#7"
      ]
    },
    "97": {
      "op": "intc_0 // 1"
    },
    "98": {
      "op": "frame_dig -1",
      "defined_out": [
        "a%is_original#0",
        "assign_local#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "assign_local#0 (copy)"
      ]
    },
    "100": {
      "op": "bz maybe_modify_array_else_body@10",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "103": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "a%is_original#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)"
      ]
    },
    "105": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "a#0 (copy)",
        "a%is_original#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)",
        "0x01"
      ]
    },
    "108": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "a%is_original#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0"
      ]
    },
    "109": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "a#0 (copy)"
      ]
    },
    "111": {
      "op": "intc_1 // 0",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "112": {
      "op": "extract_uint16",
      "defined_out": [
        "a%is_original#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "113": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a%is_original#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "114": {
      "op": "+",
      "defined_out": [
        "a%is_original#0",
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "115": {
      "op": "itob",
      "defined_out": [
        "a%is_original#0",
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "116": {
      "op": "extract 6 2",
      "defined_out": [
        "a%is_original#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "119": {
      "op": "replace2 0",
      "defined_out": [
        "a#0",
        "a%is_original#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0"
      ]
    },
    "121": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "123": {
      "op": "pushbytes 0x0003010204",
      "defined_out": [
        "a#5",
        "a%is_original#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#5"
      ]
    },
    "130": {
      "op": "intc_1 // 0",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#5",
        "a%is_original#0"
      ]
    },
    "131": {
      "op": "frame_bury 1",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#5"
      ]
    },
    "133": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#5",
        "a%is_original#0",
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#5",
        "a%out#7"
      ]
    },
    "135": {
      "op": "frame_bury 0",
      "defined_out": [
        "a#5",
        "a%is_original#0",
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#5"
      ]
    },
    "137": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "139": {
      "block": "maybe_modify_array_after_if_else@13",
      "stack_in": [
        "a%out#7",
        "a%is_original#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)"
      ]
    },
    "141": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)",
        "0x04"
      ]
    },
    "144": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0"
      ]
    },
    "145": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "a#0 (copy)"
      ]
    },
    "147": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "a#0 (copy)",
        "concat%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "148": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%3#0",
        "extract_uint16%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "extract_uint16%3#0"
      ]
    },
    "149": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "concat%3#0",
        "extract_uint16%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "1"
      ]
    },
    "150": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "add%3#0"
      ]
    },
    "151": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "152": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "155": {
      "op": "replace2 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0"
      ]
    },
    "157": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "159": {
      "op": "frame_dig 1",
      "defined_out": [
        "a%is_original#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%is_original#0"
      ]
    },
    "161": {
      "op": "bz maybe_modify_array_after_if_else@15",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "164": {
      "op": "frame_dig -2",
      "defined_out": [
        "a%is_original#0",
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7"
      ]
    },
    "166": {
      "op": "frame_bury 0",
      "defined_out": [
        "a%is_original#0",
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "168": {
      "block": "maybe_modify_array_after_if_else@15",
      "stack_in": [
        "a%out#7",
        "a%is_original#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7"
      ]
    },
    "169": {
      "block": "maybe_modify_array_else_body@10",
      "stack_in": [
        "a%out#7",
        "a%is_original#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)"
      ]
    },
    "171": {
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x2a",
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)",
        "0x2a"
      ]
    },
    "174": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0"
      ]
    },
    "175": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "a#0 (copy)"
      ]
    },
    "177": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "a#0 (copy)",
        "concat%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "178": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "179": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "180": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "181": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "182": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "185": {
      "op": "replace2 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0"
      ]
    },
    "187": {
      "op": "dupn 2"
    },
    "189": {
      "op": "frame_bury -2",
      "defined_out": [
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7",
        "a%out#7"
      ]
    },
    "191": {
      "op": "frame_bury 0",
      "defined_out": [
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7"
      ]
    },
    "193": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "195": {
      "op": "b maybe_modify_array_after_if_else@13"
    }
  }
}