{
  "version": 3,
  "sources": [
    "../mutable_params2.py"
  ],
  "mappings": ";;;;;AAGA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AADL;;AAAA;;;;;;;;;AAGY;;;;;AACoC;AAAxC;;;AACY;;;;;;AAAL;AAAP;AAEI;;;;;AACoC;AAAxC;;;AACY;;;;;;;AAAL;AAAP;;AAER;;;;;AAEA;;AAAA;;;AACY;;AAAA;;;AAAS;;;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGI;;;;;;;;;;;;;;;;AAIR;;AAAA;;;AAAS;;;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;AAFI;;AAAA;;;AAAS;;;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "10": {
      "op": "pushbytes 0x6ac4a557 // method \"test_array_rebinding()void\""
    },
    "16": {
      "op": "txna ApplicationArgs 0"
    },
    "19": {
      "op": "match main_test_array_rebinding_route@3"
    },
    "23": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "return"
    },
    "25": {
      "block": "main_test_array_rebinding_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "29": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "31": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "32": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "op": "callsub test_array_rebinding"
    },
    "35": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "36": {
      "op": "return"
    },
    "37": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "39": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "42": {
      "op": "txn ApplicationID"
    },
    "44": {
      "op": "!"
    },
    "45": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "46": {
      "op": "intc_1 // 1"
    },
    "47": {
      "op": "return"
    },
    "48": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "params": {},
      "block": "test_array_rebinding",
      "stack_in": [],
      "op": "pushbytes 0x000100",
      "defined_out": [
        "0x000100"
      ],
      "stack_out": [
        "0x000100"
      ]
    },
    "53": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x000100",
        "1"
      ],
      "stack_out": [
        "0x000100",
        "1"
      ]
    },
    "54": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "defined_out": [
        "a#1"
      ],
      "stack_out": [
        "a#1"
      ]
    },
    "57": {
      "op": "pushbytes 0x00020001",
      "defined_out": [
        "0x00020001",
        "a#1"
      ],
      "stack_out": [
        "a#1",
        "0x00020001"
      ]
    },
    "63": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "64": {
      "op": "assert",
      "stack_out": []
    },
    "65": {
      "op": "pushbytes 0x000101",
      "defined_out": [
        "0x000101"
      ],
      "stack_out": [
        "0x000101"
      ]
    },
    "70": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x000101"
      ],
      "stack_out": [
        "0x000101",
        "0"
      ]
    },
    "71": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "stack_out": [
        "a#1"
      ]
    },
    "74": {
      "op": "pushbytes 0x0003012a04",
      "defined_out": [
        "0x0003012a04",
        "a#1"
      ],
      "stack_out": [
        "a#1",
        "0x0003012a04"
      ]
    },
    "81": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "82": {
      "op": "assert",
      "stack_out": []
    },
    "83": {
      "retsub": true,
      "op": "retsub"
    },
    "84": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "params": {
        "a#0": "bytes",
        "assign_local#0": "uint64"
      },
      "block": "maybe_modify_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "87": {
      "op": "intc_0 // 0"
    },
    "88": {
      "op": "intc_1 // 1"
    },
    "89": {
      "op": "frame_dig -1",
      "defined_out": [
        "a%is_original#0",
        "assign_local#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "assign_local#0 (copy)"
      ]
    },
    "91": {
      "op": "bz maybe_modify_array_else_body@10",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "94": {
      "op": "frame_dig -2"
    },
    "96": {
      "op": "extract 2 0"
    },
    "99": {
      "op": "pushbytes 0x01"
    },
    "102": {
      "op": "concat"
    },
    "103": {
      "op": "dup"
    },
    "104": {
      "op": "len"
    },
    "105": {
      "op": "itob"
    },
    "106": {
      "op": "extract 6 2"
    },
    "109": {
      "op": "swap"
    },
    "110": {
      "op": "concat"
    },
    "111": {
      "op": "frame_bury -2"
    },
    "113": {
      "op": "pushbytes 0x0003010204"
    },
    "120": {
      "op": "intc_0 // 0"
    },
    "121": {
      "op": "frame_bury 1"
    },
    "123": {
      "op": "frame_dig -2"
    },
    "125": {
      "op": "frame_bury 0"
    },
    "127": {
      "op": "frame_bury -2"
    },
    "129": {
      "block": "maybe_modify_array_after_if_else@13",
      "stack_in": [
        "a%out#7",
        "a%is_original#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)"
      ]
    },
    "131": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "expr_value_trimmed%3#0"
      ]
    },
    "134": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "expr_value_trimmed%3#0",
        "0x04"
      ]
    },
    "137": {
      "op": "concat",
      "defined_out": [
        "concatenated%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%3#0"
      ]
    },
    "138": {
      "op": "dup",
      "defined_out": [
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ]
    },
    "139": {
      "op": "len",
      "defined_out": [
        "concatenated%3#0",
        "len_%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%3#0",
        "len_%3#0"
      ]
    },
    "140": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "concatenated%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%3#0",
        "as_bytes%3#0"
      ]
    },
    "141": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%3#0",
        "len_16_bit%3#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%3#0",
        "len_16_bit%3#0"
      ]
    },
    "144": {
      "op": "swap",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "len_16_bit%3#0",
        "concatenated%3#0"
      ]
    },
    "145": {
      "op": "concat",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0"
      ]
    },
    "146": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "148": {
      "op": "frame_dig 1",
      "defined_out": [
        "a%is_original#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%is_original#0"
      ]
    },
    "150": {
      "op": "bz maybe_modify_array_after_if_else@15",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "153": {
      "op": "frame_dig -2"
    },
    "155": {
      "op": "frame_bury 0"
    },
    "157": {
      "block": "maybe_modify_array_after_if_else@15",
      "stack_in": [
        "a%out#7",
        "a%is_original#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7"
      ]
    },
    "158": {
      "block": "maybe_modify_array_else_body@10",
      "stack_in": [
        "a%out#7",
        "a%is_original#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0 (copy)"
      ]
    },
    "160": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "expr_value_trimmed%2#0"
      ]
    },
    "163": {
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x2a",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "expr_value_trimmed%2#0",
        "0x2a"
      ]
    },
    "166": {
      "op": "concat",
      "defined_out": [
        "concatenated%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%2#0"
      ]
    },
    "167": {
      "op": "dup",
      "defined_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "168": {
      "op": "len",
      "defined_out": [
        "concatenated%2#0",
        "len_%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "169": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "170": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "173": {
      "op": "swap",
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "174": {
      "op": "concat",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a#0"
      ]
    },
    "175": {
      "op": "dupn 2"
    },
    "177": {
      "op": "frame_bury -2",
      "defined_out": [
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7",
        "a%out#7"
      ]
    },
    "179": {
      "op": "frame_bury 0",
      "defined_out": [
        "a%out#7"
      ],
      "stack_out": [
        "a%out#7",
        "a%is_original#0",
        "a%out#7"
      ]
    },
    "181": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%out#7",
        "a%is_original#0"
      ]
    },
    "183": {
      "op": "b maybe_modify_array_after_if_else@13"
    }
  }
}