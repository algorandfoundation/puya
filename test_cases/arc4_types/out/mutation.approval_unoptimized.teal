#pragma version 8

// test_cases.arc4_types.mutation.Arc4MutationContract.approval_program() -> uint64:
main_block@0:
        callsub dynamic_array_fixed_size
        callsub dynamic_array_bool
        callsub dynamic_array_string
        callsub array_of_array_dynamic
        callsub array_of_array_static
        callsub index_assign
        callsub struct_assign
        callsub array_concat
        int 1
        return


// test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_fixed_size() -> void:
dynamic_array_fixed_size:
        proto 0 0

dynamic_array_fixed_size_block@0:
        byte 0x0002
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x
        byte 0x32
        concat
        int 1
        callsub dynamic_array_concat_fixed_size
        byte 0x0003
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        dig 1
        ==
        assert
        dup
        int 0
        extract_uint16
        swap
        dup
        extract 2 0
        uncover 2
        callsub dynamic_array_concat_fixed_size
        byte 0x0006
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        dig 1
        ==
        assert
        byte 0x
        byte 0x04
        concat
        byte 0x5a
        concat
        int 2
        callsub dynamic_array_concat_fixed_size
        byte 0x0008
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        byte 0x04
        concat
        byte 0x5a
        concat
        dig 1
        ==
        assert
        int 1
        callsub dynamic_array_pop_fixed_size
        swap
        byte 0x5a
        ==
        assert
        byte 0x0007
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x32
        concat
        byte 0x04
        concat
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_bool() -> void:
dynamic_array_bool:
        proto 0 0

dynamic_array_bool_block@0:
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x0002
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 17
        uncover 2
        setbit
        dup
        byte 0x000280
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x
        uncover 2
        concat
        swap
        concat
        int 2
        int 0
        callsub dynamic_array_concat_bits
        dup
        byte 0x0004a0
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x00
        int 0
        int 1
        setbit
        cover 2
        byte 0x00
        int 0
        int 0
        setbit
        cover 3
        byte 0x0004
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 17
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 18
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 19
        uncover 2
        setbit
        dig 1
        ==
        assert
        dup
        int 0
        extract_uint16
        swap
        dup
        extract 2 0
        uncover 2
        int 1
        callsub dynamic_array_concat_bits
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x00
        int 0
        int 1
        setbit
        cover 2
        byte 0x00
        int 0
        int 0
        setbit
        cover 3
        byte 0x00
        int 0
        int 1
        setbit
        cover 4
        byte 0x00
        int 0
        int 0
        setbit
        cover 5
        byte 0x00
        int 0
        int 1
        setbit
        cover 6
        byte 0x00
        int 0
        int 0
        setbit
        cover 7
        byte 0x0008
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 17
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 18
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 19
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 20
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 21
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 22
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 23
        uncover 2
        setbit
        dig 1
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x
        swap
        concat
        int 1
        int 0
        callsub dynamic_array_concat_bits
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x00
        int 0
        int 1
        setbit
        cover 2
        byte 0x00
        int 0
        int 0
        setbit
        cover 3
        byte 0x00
        int 0
        int 1
        setbit
        cover 4
        byte 0x00
        int 0
        int 0
        setbit
        cover 5
        byte 0x00
        int 0
        int 1
        setbit
        cover 6
        byte 0x00
        int 0
        int 0
        setbit
        cover 7
        byte 0x00
        int 0
        int 1
        setbit
        cover 8
        byte 0x0009
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 17
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 18
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 19
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 20
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 21
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 22
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 23
        uncover 2
        setbit
        swap
        concat
        dig 1
        ==
        assert
        callsub dynamic_array_pop_bit
        swap
        byte 0x00
        int 0
        int 1
        setbit
        ==
        assert
        callsub dynamic_array_pop_bit
        swap
        byte 0x00
        int 0
        int 0
        setbit
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x00
        int 0
        int 1
        setbit
        cover 2
        byte 0x00
        int 0
        int 0
        setbit
        cover 3
        byte 0x00
        int 0
        int 1
        setbit
        cover 4
        byte 0x00
        int 0
        int 0
        setbit
        cover 5
        byte 0x00
        int 0
        int 1
        setbit
        cover 6
        byte 0x0007
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 17
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 18
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 19
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 20
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 21
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 22
        uncover 2
        setbit
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.dynamic_array_string() -> void:
dynamic_array_string:
        proto 0 0

dynamic_array_string_block@0:
        byte "\x00\x05Hello"
        byte "\x00\x05World"
        swap
        byte "\x00\x03Foo"
        cover 2
        byte "\x00\x03Bar"
        cover 3
        byte 0x0002
        int 4
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        dig 3
        len
        uncover 2
        +
        pop
        dig 1
        concat
        dig 2
        concat
        dup
        byte "\x00\x02\x00\x04\x00\x0b\x00\x05Hello\x00\x05World"
        ==
        assert
        byte 0x
        dig 4
        concat
        dig 5
        concat
        int 2
        callsub dynamic_array_concat_variable_size
        dup
        byte "\x00\x04\x00\x08\x00\x0f\x00\x16\x00\x1b\x00\x05Hello\x00\x05World\x00\x03Foo\x00\x03Bar"
        ==
        assert
        dup
        int 0
        extract_uint16
        dup
        int 2
        *
        int 2
        +
        dig 2
        len
        swap
        dig 3
        swap
        uncover 2
        substring3
        uncover 2
        swap
        uncover 2
        callsub dynamic_array_concat_variable_size
        cover 4
        byte 0x0008
        int 16
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 3
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 5
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 3
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        dig 5
        len
        uncover 2
        +
        pop
        dig 1
        concat
        dig 2
        concat
        dig 3
        concat
        dig 4
        concat
        dig 1
        concat
        dig 2
        concat
        dig 3
        concat
        dig 4
        concat
        uncover 5
        ==
        assert
        byte 0x0008
        int 16
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 3
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 5
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 3
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        dig 5
        len
        uncover 2
        +
        pop
        dig 1
        concat
        dig 2
        concat
        dig 3
        concat
        dig 4
        concat
        dig 1
        concat
        dig 2
        concat
        dig 3
        concat
        dig 4
        concat
        dig 1
        int 3
        callsub dynamic_array_replace_variable_size
        dig 1
        int 5
        callsub dynamic_array_replace_variable_size
        cover 4
        byte 0x0008
        int 16
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 3
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        dig 5
        len
        uncover 2
        +
        pop
        dig 1
        concat
        dig 2
        concat
        dig 3
        concat
        dig 1
        concat
        dig 1
        concat
        dig 1
        concat
        dig 3
        concat
        dig 4
        concat
        dig 5
        ==
        assert
        uncover 4
        callsub dynamic_array_pop_variable_size
        swap
        uncover 5
        ==
        assert
        callsub dynamic_array_pop_variable_size
        cover 4
        dig 3
        ==
        assert
        byte 0x0006
        int 12
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 3
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 4
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        dig 2
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        dig 2
        len
        uncover 2
        +
        pop
        dig 1
        concat
        uncover 2
        concat
        uncover 2
        concat
        dig 1
        concat
        dig 1
        concat
        swap
        concat
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_dynamic() -> void:
array_of_array_dynamic:
        proto 0 0

array_of_array_dynamic_block@0:
        byte 0x0000
        dup
        byte 0x0000
        ==
        assert
        byte 0x0001
        byte 0x0a
        concat
        byte 0x
        swap
        concat
        int 1
        callsub dynamic_array_concat_variable_size
        dup
        byte 0x0001000200010a
        ==
        assert
        byte 0x0001
        byte 0x10
        concat
        byte 0x
        swap
        concat
        int 1
        callsub dynamic_array_concat_variable_size
        dup
        byte 0x00020004000700010a000110
        ==
        assert
        byte 0x
        byte 0xff
        concat
        swap
        dup
        int 0
        extract_uint16
        int 0
        >
        assert // Index access is out of bounds
        dup
        extract 2 0
        int 0
        int 2
        *
        dig 1
        swap
        extract_uint16
        dig 1
        dig 1
        extract_uint16
        int 2
        +
        uncover 2
        uncover 2
        uncover 2
        extract3
        uncover 2
        int 1
        callsub dynamic_array_concat_fixed_size
        int 0
        callsub dynamic_array_replace_variable_size
        dup
        byte 0x00020004000800020aff000110
        ==
        assert
        dup
        int 0
        extract_uint16
        int 0
        >
        assert // Index access is out of bounds
        dup
        extract 2 0
        int 0
        int 2
        *
        dig 1
        swap
        extract_uint16
        dig 1
        dig 1
        extract_uint16
        int 2
        +
        uncover 2
        uncover 2
        uncover 2
        extract3
        byte 0x00
        swap
        dup
        int 0
        extract_uint16
        int 1
        >
        assert // Index access is out of bounds
        int 3
        uncover 2
        replace3
        int 0
        callsub dynamic_array_replace_variable_size
        byte 0x00020004000800020a00000110
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.array_of_array_static() -> void:
array_of_array_static:
        proto 0 0

array_of_array_static_block@0:
        byte 0x
        byte 0x0a
        concat
        byte 0x09
        concat
        byte 0x
        byte 0x40
        concat
        byte 0x80
        concat
        byte 0x
        uncover 2
        concat
        swap
        concat
        dup
        byte 0x0a094080
        ==
        assert
        byte 0x
        byte 0xff
        concat
        byte 0xfe
        concat
        swap
        int 0
        uncover 2
        replace3
        dup
        byte 0xfffe4080
        ==
        assert
        int 1
        int 2
        *
        dig 1
        swap
        int 2
        extract3
        byte 0x01
        swap
        int 0
        uncover 2
        replace3
        swap
        int 2
        uncover 2
        replace3
        byte 0xfffe0180
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.index_assign() -> void:
index_assign:
        proto 0 0

index_assign_block@0:
        byte 0x0002
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0xff
        swap
        dup
        int 0
        extract_uint16
        int 0
        >
        assert // Index access is out of bounds
        int 2
        uncover 2
        replace3
        byte 0x0002ff02
        ==
        assert
        byte 0x
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0xff
        swap
        int 1
        uncover 2
        replace3
        byte 0x01ff
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x0002
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 17
        uncover 2
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        swap
        dup
        int 0
        extract_uint16
        int 0
        >
        assert // Index access is out of bounds
        swap
        int 0
        getbit
        swap
        int 16
        uncover 2
        setbit
        byte 0x000200
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 1
        uncover 2
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        int 0
        getbit
        swap
        int 1
        uncover 2
        setbit
        byte 0x80
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.struct_assign() -> void:
struct_assign:
        proto 0 0

struct_assign_block@0:
        byte 0x00
        int 0
        int 1
        setbit
        int 6
        swap
        byte 0x
        swap
        concat
        byte 0x32
        concat
        dig 1
        itob
        extract 6 2
        concat
        swap
        byte "\x00\x05Happy"
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x04Days"
        len
        uncover 2
        +
        pop
        byte "\x00\x05Happy"
        concat
        byte "\x00\x04Days"
        concat
        byte 0x00
        int 0
        int 0
        setbit
        int 0
        getbit
        swap
        int 0
        uncover 2
        setbit
        byte 0x0c
        replace2 1
        byte 0x00
        int 0
        int 0
        setbit
        int 6
        swap
        byte 0x
        swap
        concat
        byte 0x0c
        concat
        dig 1
        itob
        extract 6 2
        concat
        swap
        byte "\x00\x05Happy"
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x04Days"
        len
        uncover 2
        +
        pop
        byte "\x00\x05Happy"
        concat
        byte "\x00\x04Days"
        concat
        dig 1
        ==
        assert
        byte "\x00\x05Hmmmm"
        swap
        dup
        int 2
        extract_uint16
        dig 1
        int 0
        dig 2
        extract3
        swap
        dig 2
        int 4
        extract_uint16
        swap
        dig 3
        len
        swap
        uncover 4
        uncover 3
        uncover 3
        substring3
        uncover 2
        dig 3
        concat
        swap
        concat
        swap
        uncover 2
        len
        +
        itob
        substring 6 8
        replace2 4
        byte "\x00\x07Oh well"
        swap
        dup
        int 4
        extract_uint16
        swap
        int 0
        uncover 2
        extract3
        swap
        concat
        byte 0x00
        int 0
        int 0
        setbit
        int 6
        swap
        byte 0x
        swap
        concat
        byte 0x0c
        concat
        dig 1
        itob
        extract 6 2
        concat
        swap
        byte "\x00\x05Hmmmm"
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x07Oh well"
        len
        uncover 2
        +
        pop
        byte "\x00\x05Hmmmm"
        concat
        byte "\x00\x07Oh well"
        concat
        ==
        assert
        retsub


// test_cases.arc4_types.mutation.Arc4MutationContract.array_concat() -> void:
array_concat:
        proto 0 0

array_concat_block@0:
        byte 0x0002
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x
        byte 0x03
        concat
        byte 0x04
        concat
        int 2
        callsub dynamic_array_concat_fixed_size
        byte 0x0004
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x03
        concat
        byte 0x04
        concat
        dig 1
        ==
        assert
        byte 0x
        byte 0x05
        concat
        int 1
        callsub dynamic_array_concat_fixed_size
        byte 0x0005
        byte 0x01
        concat
        byte 0x02
        concat
        byte 0x03
        concat
        byte 0x04
        concat
        byte 0x05
        concat
        ==
        assert
        byte 0x0002
        int 4
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        swap
        byte "\x00\x05Hello"
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x05World"
        len
        uncover 2
        +
        pop
        byte "\x00\x05Hello"
        concat
        byte "\x00\x05World"
        concat
        byte 0x0001
        int 2
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x05World"
        len
        uncover 2
        +
        pop
        byte "\x00\x05World"
        concat
        dup
        int 0
        extract_uint16
        dup
        int 2
        *
        int 2
        +
        dig 2
        len
        swap
        uncover 3
        swap
        uncover 2
        substring3
        byte 0x0001
        int 2
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x05Hello"
        len
        uncover 2
        +
        pop
        byte "\x00\x05Hello"
        concat
        swap
        uncover 2
        callsub dynamic_array_concat_variable_size
        ==
        assert
        retsub


// puyapy_lib_arc4.dynamic_array_pop_bit(source#0: bytes) -> bytes, bytes:
dynamic_array_pop_bit:
        proto 1 2

dynamic_array_pop_bit_block@0:
        frame_dig -1
        int 0
        extract_uint16
        int 1
        -
        dup
        itob
        int 6
        int 8
        substring3
        frame_dig -1
        int 0
        uncover 2
        replace3
        frame_bury -1
        dup
        int 16
        +
        frame_dig -1
        dig 1
        getbit
        byte "\x00"
        int 0
        uncover 2
        setbit
        cover 2
        frame_dig -1
        swap
        int 0
        setbit
        frame_bury -1
        int 7
        +
        int 8
        /
        int 2
        +
        frame_dig -1
        int 0
        uncover 2
        substring3
        dup
        frame_bury -1
        retsub


// puyapy_lib_arc4.dynamic_array_pop_fixed_size(source#0: bytes, fixed_byte_size#0: uint64) -> bytes, bytes:
dynamic_array_pop_fixed_size:
        proto 2 2

dynamic_array_pop_fixed_size_block@0:
        frame_dig -2
        int 0
        extract_uint16
        int 1
        -
        itob
        int 6
        int 8
        substring3
        frame_dig -2
        int 0
        uncover 2
        replace3
        dup
        frame_bury -2
        len
        frame_dig -1
        -
        frame_dig -2
        dig 1
        frame_dig -1
        extract3
        swap
        frame_dig -2
        int 0
        uncover 2
        substring3
        dup
        frame_bury -2
        retsub


// puyapy_lib_arc4.dynamic_array_pop_variable_size(source#0: bytes) -> bytes, bytes:
dynamic_array_pop_variable_size:
        proto 1 2

dynamic_array_pop_variable_size_block@0:
        frame_dig -1
        int 0
        extract_uint16
        int 1
        -
        frame_dig -1
        len
        frame_dig -1
        int 2
        uncover 2
        substring3
        dig 1
        int 2
        *
        dig 1
        dig 1
        extract_uint16
        swap
        dig 2
        len
        swap
        dig 3
        dig 3
        uncover 3
        substring3
        cover 4
        dig 2
        int 0
        dig 2
        substring3
        cover 2
        int 2
        +
        uncover 3
        swap
        uncover 2
        substring3
        concat
        dig 1
        itob
        int 6
        int 8
        substring3
        swap
        uncover 2
        int 0
        callsub recalculate_array_offsets_static
        concat
        retsub


// puyapy_lib_arc4.dynamic_array_concat_bits(source#0: bytes, new_items_bytes#0: bytes, new_items_count#0: uint64, is_packed#0: uint64) -> bytes:
dynamic_array_concat_bits:
        proto 4 1
        byte ""
        dupn 2

dynamic_array_concat_bits_block@0:
        frame_dig -4
        int 0
        extract_uint16
        dup
        swap
        dup
        frame_dig -2
        +
        itob
        int 6
        int 8
        substring3
        frame_dig -4
        int 0
        uncover 2
        replace3
        frame_bury -4
        dup
        int 7
        +
        int 8
        /
        dup
        cover 2
        cover 2
        int 7
        +
        frame_dig -2
        +
        int 8
        /
        dup
        cover 2
        <
        frame_dig -4
        swap
        bz dynamic_array_concat_bits_after_if_else@2

dynamic_array_concat_bits_if_body@1:
        frame_dig 5
        frame_dig 4
        -
        bzero
        frame_dig -4
        swap
        concat
        dup
        frame_bury -4
        frame_bury 6

dynamic_array_concat_bits_after_if_else@2:
        frame_dig 6
        frame_bury -4
        frame_dig 3
        int 16
        +
        frame_bury 2
        frame_dig -1
        bz dynamic_array_concat_bits_ternary_false@4

dynamic_array_concat_bits_ternary_true@3:
        int 1
        frame_bury 1
        b dynamic_array_concat_bits_ternary_merge@5

dynamic_array_concat_bits_ternary_false@4:
        int 8
        frame_bury 1

dynamic_array_concat_bits_ternary_merge@5:
        int 0
        frame_bury 0

dynamic_array_concat_bits_for_header@6:
        frame_dig 0
        frame_dig -2
        <
        bz dynamic_array_concat_bits_after_for@9

dynamic_array_concat_bits_for_body@7:
        frame_dig 0
        frame_dig -3
        swap
        getbit
        frame_dig -4
        frame_dig 2
        dup
        cover 3
        uncover 2
        setbit
        frame_bury -4
        int 1
        +
        frame_bury 2

dynamic_array_concat_bits_for_footer@8:
        frame_dig 0
        frame_dig 1
        +
        frame_bury 0
        b dynamic_array_concat_bits_for_header@6

dynamic_array_concat_bits_after_for@9:
        frame_dig -4
        frame_bury 0
        retsub


// puyapy_lib_arc4.dynamic_array_replace_variable_size(source#0: bytes, new_item#0: bytes, index#0: uint64) -> bytes:
dynamic_array_replace_variable_size:
        proto 3 1

dynamic_array_replace_variable_size_block@0:
        frame_dig -3
        int 0
        extract_uint16
        frame_dig -3
        int 0
        int 2
        substring3
        frame_dig -3
        len
        frame_dig -3
        int 2
        uncover 2
        substring3
        frame_dig -2
        frame_dig -1
        uncover 4
        callsub static_array_replace_variable_size
        concat
        retsub


// puyapy_lib_arc4.static_array_replace_variable_size(source#0: bytes, new_item#0: bytes, index#0: uint64, array_length#0: uint64) -> bytes:
static_array_replace_variable_size:
        proto 4 1

static_array_replace_variable_size_block@0:
        frame_dig -2
        frame_dig -1
        <
        assert // Index out of bounds
        frame_dig -2
        int 2
        *
        frame_dig -4
        swap
        extract_uint16
        frame_dig -4
        dig 1
        extract_uint16
        dig 1
        +
        int 2
        +
        swap
        frame_dig -4
        int 0
        uncover 2
        substring3
        frame_dig -3
        concat
        frame_dig -4
        len
        frame_dig -4
        uncover 3
        uncover 2
        substring3
        concat
        frame_dig -1
        frame_dig -2
        callsub recalculate_array_offsets_static
        retsub


// puyapy_lib_arc4.dynamic_array_concat_variable_size(source#0: bytes, new_items_bytes#0: bytes, new_items_count#0: uint64) -> bytes:
dynamic_array_concat_variable_size:
        proto 3 1

dynamic_array_concat_variable_size_block@0:
        frame_dig -3
        int 0
        extract_uint16
        dup
        frame_dig -1
        +
        swap
        int 2
        *
        int 2
        +
        swap
        dup
        itob
        int 6
        int 8
        substring3
        swap
        frame_dig -3
        int 2
        dig 4
        substring3
        frame_dig -1
        int 2
        *
        bzero
        concat
        frame_dig -3
        len
        frame_dig -3
        uncover 5
        uncover 2
        substring3
        concat
        frame_dig -2
        concat
        swap
        int 0
        callsub recalculate_array_offsets_static
        concat
        retsub


// puyapy_lib_arc4.dynamic_array_concat_fixed_size(source#0: bytes, new_items_bytes#0: bytes, new_items_count#0: uint64) -> bytes:
dynamic_array_concat_fixed_size:
        proto 3 1

dynamic_array_concat_fixed_size_block@0:
        frame_dig -3
        int 0
        extract_uint16
        frame_dig -1
        +
        itob
        int 6
        int 8
        substring3
        frame_dig -3
        int 0
        uncover 2
        replace3
        dup
        frame_bury -3
        frame_dig -2
        concat
        dup
        frame_bury -3
        retsub


// puyapy_lib_arc4.recalculate_array_offsets_static(array_data#0: bytes, length#0: uint64, start_at_index#0: uint64) -> bytes:
recalculate_array_offsets_static:
        proto 3 1
        byte ""
        dup

recalculate_array_offsets_static_block@0:
        frame_dig -1
        int 2
        *
        frame_dig -1
        int 0
        ==
        bz recalculate_array_offsets_static_else_body@2

recalculate_array_offsets_static_if_body@1:
        frame_dig -2
        int 2
        *
        frame_bury 1
        b recalculate_array_offsets_static_after_if_else@3

recalculate_array_offsets_static_else_body@2:
        frame_dig -3
        frame_dig 2
        extract_uint16
        frame_bury 1

recalculate_array_offsets_static_after_if_else@3:
        frame_dig -1
        frame_bury 0

recalculate_array_offsets_static_for_header@4:
        frame_dig 0
        frame_dig -2
        <
        bz recalculate_array_offsets_static_after_for@7

recalculate_array_offsets_static_for_body@5:
        frame_dig 1
        dup
        itob
        int 6
        int 8
        substring3
        frame_dig -3
        frame_dig 2
        dup
        cover 4
        uncover 2
        replace3
        dup
        frame_bury -3
        dig 1
        extract_uint16
        int 2
        +
        +
        frame_bury 1
        int 2
        +
        frame_bury 2

recalculate_array_offsets_static_for_footer@6:
        frame_dig 0
        int 1
        +
        frame_bury 0
        b recalculate_array_offsets_static_for_header@4

recalculate_array_offsets_static_after_for@7:
        frame_dig -3
        frame_bury 0
        retsub

