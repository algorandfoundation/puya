#pragma version 8

// test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program() -> uint64:
main_block@0:
        int 7
        byte 0x
        byte 0x01
        concat
        byte 0x02
        concat
        dig 1
        itob
        extract 6 2
        concat
        swap
        byte "\x00\x05hello"
        len
        +
        dup
        itob
        extract 6 2
        uncover 2
        swap
        concat
        byte "\x00\x05world"
        len
        uncover 2
        +
        pop
        byte 0xff
        concat
        byte "\x00\x05hello"
        concat
        byte "\x00\x05world"
        concat
        dup
        swap
        byte 0x01020007000eff000568656c6c6f0005776f726c64
        ==
        assert
        byte 0x00
        int 0
        int 1
        setbit
        byte 0x00
        int 0
        int 0
        setbit
        byte 0x00
        int 0
        int 1
        setbit
        cover 2
        byte 0x00
        int 0
        int 1
        setbit
        cover 3
        byte 0x00
        int 0
        int 1
        setbit
        cover 4
        byte 0x00
        int 0
        int 1
        setbit
        cover 5
        byte 0x00
        int 0
        int 0
        setbit
        cover 6
        byte 0x00
        int 0
        int 1
        setbit
        cover 7
        byte 0x00
        int 0
        int 1
        setbit
        cover 8
        int 4
        pop
        byte 0x
        byte 0x04
        concat
        uncover 2
        concat
        swap
        int 0
        getbit
        swap
        int 9
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 10
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 11
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 12
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 13
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 14
        uncover 2
        setbit
        swap
        int 0
        getbit
        swap
        int 15
        uncover 2
        setbit
        swap
        concat
        byte 0x10
        concat
        dup
        swap
        dup
        byte 0x04bd8010
        ==
        assert
        dup
        int 0
        int 1
        extract3
        swap
        dup
        int 8
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 9
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 10
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 11
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 12
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 13
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 14
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 15
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 16
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 3
        int 1
        extract3
        uncover 11
        cover 4
        uncover 11
        dup
        cover 7
        cover 12
        uncover 5
        cover 6
        uncover 3
        cover 5
        uncover 2
        cover 4
        dup
        cover 4
        swap
        int 3
        int 1
        extract3
        ==
        assert
        btoi
        int 4
        ==
        assert // a is 4
        byte 0x00
        ==
        bz main_ternary_false@2

main_ternary_true@1:
        dig 9
        b main_ternary_merge@18

main_ternary_false@2:
        dig 7
        byte 0x00
        ==
        bz main_ternary_false@4

main_ternary_true@3:
        dig 7
        b main_ternary_merge@17

main_ternary_false@4:
        dig 6
        byte 0x00
        ==
        bz main_ternary_false@6

main_ternary_true@5:
        dig 6
        b main_ternary_merge@16

main_ternary_false@6:
        dig 5
        byte 0x00
        ==
        bz main_ternary_false@8

main_ternary_true@7:
        dig 5
        b main_ternary_merge@15

main_ternary_false@8:
        dig 4
        byte 0x00
        ==
        bz main_ternary_false@10

main_ternary_true@9:
        dig 4
        b main_ternary_merge@14

main_ternary_false@10:
        dig 2
        byte 0x00
        ==
        bz main_ternary_false@12

main_ternary_true@11:
        dig 2
        b main_ternary_merge@13

main_ternary_false@12:
        dig 1

main_ternary_merge@13:

main_ternary_merge@14:

main_ternary_merge@15:

main_ternary_merge@16:

main_ternary_merge@17:

main_ternary_merge@18:
        byte 0x00
        !=
        assert // b,d,e,f,g,i,j are true
        dig 8
        byte 0x00
        !=
        bz main_ternary_false@20

main_ternary_true@19:
        dig 8
        b main_ternary_merge@21

main_ternary_false@20:
        dig 3

main_ternary_merge@21:
        byte 0x00
        ==
        assert // c and h are false
        dup
        btoi
        int 16
        ==
        assert // k is 16
        dig 10
        dup
        int 0
        int 1
        extract3
        swap
        dup
        int 8
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 9
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        swap
        dup
        int 10
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 2
        dup
        int 11
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 3
        dup
        int 12
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 4
        dup
        int 13
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 5
        dup
        int 14
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 6
        dup
        int 15
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 7
        dup
        int 16
        getbit
        byte 0x00
        int 0
        uncover 2
        setbit
        cover 8
        dup
        int 3
        int 1
        extract3
        cover 7
        int 4
        pop
        byte 0x
        uncover 12
        concat
        uncover 11
        concat
        uncover 2
        int 0
        getbit
        swap
        int 9
        uncover 2
        setbit
        uncover 2
        int 0
        getbit
        swap
        int 10
        uncover 2
        setbit
        uncover 2
        int 0
        getbit
        swap
        int 11
        uncover 2
        setbit
        uncover 2
        int 0
        getbit
        swap
        int 12
        uncover 2
        setbit
        uncover 2
        int 0
        getbit
        swap
        int 13
        uncover 2
        setbit
        uncover 2
        int 0
        getbit
        swap
        int 14
        uncover 2
        setbit
        uncover 3
        int 0
        getbit
        swap
        int 15
        uncover 2
        setbit
        uncover 3
        concat
        uncover 2
        concat
        ==
        assert
        dig 11
        callsub test_stuff
        swap
        swap
        extract 2 0
        byte "hello world"
        ==
        assert
        int 258
        ==
        assert
        int 1
        return


// test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff(test_tuple#0: bytes) -> uint64, bytes:
test_stuff:
        proto 1 2

test_stuff_block@0:
        frame_dig -1
        int 0
        int 1
        extract3
        frame_dig -1
        int 1
        int 1
        extract3
        frame_dig -1
        int 2
        extract_uint16
        frame_dig -1
        dig 1
        extract_uint16
        int 2
        +
        frame_dig -1
        uncover 2
        uncover 2
        extract3
        frame_dig -1
        int 4
        extract_uint16
        frame_dig -1
        dig 1
        extract_uint16
        int 2
        +
        frame_dig -1
        uncover 2
        uncover 2
        extract3
        frame_dig -1
        int 6
        int 1
        extract3
        uncover 4
        swap
        uncover 4
        cover 2
        uncover 3
        cover 4
        cover 2
        btoi
        swap
        btoi
        +
        swap
        btoi
        +
        cover 2
        extract 2 0
        byte " "
        concat
        swap
        extract 2 0
        concat
        dup
        len
        itob
        extract 6 2
        swap
        concat
        retsub

