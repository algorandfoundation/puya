SOME_ADDRESS = 'VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA'

contract Arc4AddressContract
{
  approval_program(): bool
  {
    address: arc4.address = reinterpret_cast<arc4.address>(reinterpret_cast<bytes>(txn<Sender>()))
    assert(reinterpret_cast<bytes>(address) == reinterpret_cast<bytes>(txn<Sender>()))
    assert(32u == 32u)
    assert(reinterpret_cast<account>(address) == txn<Sender>())
    zero_address: arc4.address = reinterpret_cast<arc4.address>(checked_maybe((SINGLE_EVAL(id=0, source=reinterpret_cast<bytes>(global<ZeroAddress>())), 32u == len(SINGLE_EVAL(id=0, source=reinterpret_cast<bytes>(global<ZeroAddress>()))))))
    assert(reinterpret_cast<bytes>(zero_address) == reinterpret_cast<bytes>(global<ZeroAddress>()))
    some_address: arc4.address = reinterpret_cast<arc4.address>(Address("VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"))
    assert(reinterpret_cast<bytes>(some_address) == reinterpret_cast<bytes>(Address("VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA")))
    some_address[0u]: arc4.byte = 123arc4u8
    assert(reinterpret_cast<bytes>(some_address) != reinterpret_cast<bytes>(Address("VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA")))
    return true
  }
  
  clear_state_program(): bool
  {
    return true
  }
}