// Op                  //                                            Op Description   Stack (out)         X stack                                      Source code                                  Source line

#pragma version 10

// test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program() -> uint64:
main_block@0:
    global ZeroAddress //                                                             {global}                                                         Global.zero_address                          arc4_types/bool_eval.py:19
    //                 virtual: store tmp%6#0 to l-stack (no copy)   tmp%6#0                              Global.zero_address                          arc4_types/bool_eval.py:19
    global ZeroAddress //                                                             tmp%6#0,{global}                                                 not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                 virtual: store tmp%7#0 to l-stack (no copy)   tmp%6#0,tmp%7#0                      not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                 virtual: load tmp%6#0 from l-stack (no copy)  tmp%7#0,tmp%6#0                      not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                 virtual: load tmp%7#0 from l-stack (no copy)  tmp%6#0,tmp%7#0                      not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    ==                 //                                                             {==}                                                             not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                 virtual: store tmp%8#0 to l-stack (no copy)   tmp%8#0                              not arc4.Address(Global.zero_address)        arc4_types/bool_eval.py:19
    //                 virtual: load tmp%8#0 from l-stack (no copy)  tmp%8#0                              assert not arc4.Address(Global.zero_address) arc4_types/bool_eval.py:19
    assert             //                                                                                                                              assert not arc4.Address(Global.zero_address) arc4_types/bool_eval.py:19
    txn Sender         //                                                             {txn}                                                            Txn.sender                                   arc4_types/bool_eval.py:20
    //                 virtual: store tmp%9#0 to l-stack (no copy)   tmp%9#0                              Txn.sender                                   arc4_types/bool_eval.py:20
    global ZeroAddress //                                                             tmp%9#0,{global}                                                 arc4.Address(Txn.sender)                     arc4_types/bool_eval.py:20
    //                 virtual: store tmp%10#0 to l-stack (no copy)  tmp%9#0,tmp%10#0                     arc4.Address(Txn.sender)                     arc4_types/bool_eval.py:20
    //                 virtual: load tmp%9#0 from l-stack (no copy)  tmp%10#0,tmp%9#0                     arc4.Address(Txn.sender)                     arc4_types/bool_eval.py:20
    //                 virtual: load tmp%10#0 from l-stack (no copy) tmp%9#0,tmp%10#0                     arc4.Address(Txn.sender)                     arc4_types/bool_eval.py:20
    !=                 //                                                             {!=}                                                             arc4.Address(Txn.sender)                     arc4_types/bool_eval.py:20
    //                 virtual: store tmp%11#0 to l-stack (no copy)  tmp%11#0                             arc4.Address(Txn.sender)                     arc4_types/bool_eval.py:20
    //                 virtual: load tmp%11#0 from l-stack (no copy) tmp%11#0                             assert arc4.Address(Txn.sender)              arc4_types/bool_eval.py:20
    assert             //                                                                                                                              assert arc4.Address(Txn.sender)              arc4_types/bool_eval.py:20
    int 1              //                                                             1                                                                True                                         arc4_types/bool_eval.py:71
    return             //                                                                                                                              return True                                  arc4_types/bool_eval.py:71

