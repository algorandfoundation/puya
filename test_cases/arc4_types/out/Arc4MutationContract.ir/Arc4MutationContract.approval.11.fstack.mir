// Op                                                                                                  Stack (out)
// test_cases.arc4_types.mutation.Arc4MutationContract.approval_program() -> uint64:
main:
    // arc4_types/mutation.py:168
    // dynamic_bool_array = DynamicArray[Bool](Bool(True), Bool(False))
    byte 0x000280                                                                                      0x000280
    // arc4_types/mutation.py:170
    // dynamic_bool_array.extend((Bool(True), Bool(False)))
    byte 0x8000                                                                                        0x000280,0x8000
    int 2                                                                                              0x000280,0x8000,2
    int 8                                                                                              0x000280,0x8000,2,8
    callsub dynamic_array_concat_bits                                                                  dynamic_bool_array#1
    // arc4_types/mutation.py:171
    // assert dynamic_bool_array.bytes == Bytes.from_hex("0004A0")
    l-load-copy dynamic_bool_array#1 0                                                                 dynamic_bool_array#1,dynamic_bool_array#1 (copy)
    byte 0x0004a0                                                                                      dynamic_bool_array#1,dynamic_bool_array#1 (copy),0x0004a0
    ==                                                                                                 dynamic_bool_array#1,tmp%1#1
    assert                                                                                             dynamic_bool_array#1
    // arc4_types/mutation.py:175
    // dynamic_bool_array.extend(dynamic_bool_array)
    l-load-copy dynamic_bool_array#1 0                                                                 dynamic_bool_array#1,dynamic_bool_array#1 (copy)
    int 0                                                                                              dynamic_bool_array#1,dynamic_bool_array#1 (copy),0
    extract_uint16                                                                                     dynamic_bool_array#1,array_length%0#0
    l-load-copy dynamic_bool_array#1 1                                                                 dynamic_bool_array#1,array_length%0#0,dynamic_bool_array#1 (copy)
    extract 2 0                                                                                        dynamic_bool_array#1,array_length%0#0,array_head_and_tail%6#0
    l-load dynamic_bool_array#1 2                                                                      array_length%0#0,array_head_and_tail%6#0,dynamic_bool_array#1
    l-load array_head_and_tail%6#0 1                                                                   array_length%0#0,dynamic_bool_array#1,array_head_and_tail%6#0
    l-load array_length%0#0 2                                                                          dynamic_bool_array#1,array_head_and_tail%6#0,array_length%0#0
    int 1                                                                                              dynamic_bool_array#1,array_head_and_tail%6#0,array_length%0#0,1
    callsub dynamic_array_concat_bits                                                                  dynamic_bool_array#1
    // arc4_types/mutation.py:177-186
    // assert dynamic_bool_array == DynamicArray[Bool](
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    // )
    l-load-copy dynamic_bool_array#1 0                                                                 dynamic_bool_array#1,dynamic_bool_array#1 (copy)
    byte 0x0008aa                                                                                      dynamic_bool_array#1,dynamic_bool_array#1 (copy),0x0008aa
    ==                                                                                                 dynamic_bool_array#1,tmp%3#1
    assert                                                                                             dynamic_bool_array#1
    // arc4_types/mutation.py:187
    // dynamic_bool_array.append(Bool(True))
    l-load dynamic_bool_array#1 0                                                                      dynamic_bool_array#1
    byte 0x80                                                                                          dynamic_bool_array#1,0x80
    int 1                                                                                              dynamic_bool_array#1,0x80,1
    int 8                                                                                              dynamic_bool_array#1,0x80,1,8
    callsub dynamic_array_concat_bits                                                                  dynamic_bool_array#1
    // arc4_types/mutation.py:189-199
    // assert dynamic_bool_array == DynamicArray[Bool](
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    // )
    l-load-copy dynamic_bool_array#1 0                                                                 dynamic_bool_array#1,dynamic_bool_array#1 (copy)
    byte 0x0009aa80                                                                                    dynamic_bool_array#1,dynamic_bool_array#1 (copy),0x0009aa80
    ==                                                                                                 dynamic_bool_array#1,tmp%4#1
    assert                                                                                             dynamic_bool_array#1
    // arc4_types/mutation.py:201
    // assert dynamic_bool_array.pop() == Bool(True)
    l-load dynamic_bool_array#1 0                                                                      dynamic_bool_array#1
    callsub dynamic_array_pop_bit                                                                      popped%0#1,dynamic_bool_array#1
    l-load popped%0#1 1                                                                                dynamic_bool_array#1,popped%0#1
    byte 0x80                                                                                          dynamic_bool_array#1,popped%0#1,0x80
    ==                                                                                                 dynamic_bool_array#1,tmp%5#0
    assert                                                                                             dynamic_bool_array#1
    // arc4_types/mutation.py:202
    // assert dynamic_bool_array.pop() == Bool(False)
    l-load dynamic_bool_array#1 0                                                                      dynamic_bool_array#1
    callsub dynamic_array_pop_bit                                                                      popped%1#0,dynamic_bool_array#1
    l-load popped%1#0 1                                                                                dynamic_bool_array#1,popped%1#0
    byte 0x00                                                                                          dynamic_bool_array#1,popped%1#0,0x00
    ==                                                                                                 dynamic_bool_array#1,tmp%6#0
    assert                                                                                             dynamic_bool_array#1
    // arc4_types/mutation.py:203-211
    // assert dynamic_bool_array == DynamicArray[Bool](
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    //     Bool(False),
    //     Bool(True),
    // )
    l-load dynamic_bool_array#1 0                                                                      dynamic_bool_array#1
    byte 0x0007aa                                                                                      dynamic_bool_array#1,0x0007aa
    ==                                                                                                 tmp%7#0
    assert
    // arc4_types/mutation.py:219
    // dynamic_string_array = DynamicArray(hello, world)
    byte 0x00020004000b000548656c6c6f0005576f726c64                                                    0x00020004000b000548656c6c6f0005576f726c64
    // arc4_types/mutation.py:223
    // dynamic_string_array.extend((foo, bar))
    byte 0x0003466f6f0003426172                                                                        0x00020004000b000548656c6c6f0005576f726c64,0x0003466f6f0003426172
    int 2                                                                                              0x00020004000b000548656c6c6f0005576f726c64,0x0003466f6f0003426172,2
    callsub dynamic_array_concat_byte_length_head                                                      dynamic_string_array#1
    // arc4_types/mutation.py:225-227
    // assert dynamic_string_array.bytes == Bytes(
    //     b"\x00\x04\x00\x08\x00\x0f\x00\x16\x00\x1b\x00\x05Hello\x00\x05World\x00\x03Foo\x00\x03Bar"
    // )
    l-load-copy dynamic_string_array#1 0                                                               dynamic_string_array#1,dynamic_string_array#1 (copy)
    byte 0x00040008000f0016001b000548656c6c6f0005576f726c640003466f6f0003426172                        dynamic_string_array#1,dynamic_string_array#1 (copy),0x00040008000f0016001b000548656c6c6f0005576f726c640003466f6f0003426172
    ==                                                                                                 dynamic_string_array#1,tmp%1#1
    assert                                                                                             dynamic_string_array#1
    // arc4_types/mutation.py:229
    // dynamic_string_array.extend(dynamic_string_array)
    l-load-copy dynamic_string_array#1 0                                                               dynamic_string_array#1,dynamic_string_array#1 (copy)
    int 0                                                                                              dynamic_string_array#1,dynamic_string_array#1 (copy),0
    extract_uint16                                                                                     dynamic_string_array#1,array_length%0#0
    l-load-copy dynamic_string_array#1 1                                                               dynamic_string_array#1,array_length%0#0,dynamic_string_array#1 (copy)
    extract 2 0                                                                                        dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1
    l-load-copy array_length%0#0 1                                                                     dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1,array_length%0#0 (copy)
    int 2                                                                                              dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1,array_length%0#0 (copy),2
    *                                                                                                  dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1,start_of_tail%0#0
    l-load-copy array_head_and_tail%0#1 1                                                              dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1,start_of_tail%0#0,array_head_and_tail%0#1 (copy)
    len                                                                                                dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1,start_of_tail%0#0,total_length%0#0
    l-load array_head_and_tail%0#1 2                                                                   dynamic_string_array#1,array_length%0#0,start_of_tail%0#0,total_length%0#0,array_head_and_tail%0#1
    l-load start_of_tail%0#0 2                                                                         dynamic_string_array#1,array_length%0#0,total_length%0#0,array_head_and_tail%0#1,start_of_tail%0#0
    l-load total_length%0#0 2                                                                          dynamic_string_array#1,array_length%0#0,array_head_and_tail%0#1,start_of_tail%0#0,total_length%0#0
    substring3                                                                                         dynamic_string_array#1,array_length%0#0,data%2#2
    l-load dynamic_string_array#1 2                                                                    array_length%0#0,data%2#2,dynamic_string_array#1
    l-load data%2#2 1                                                                                  array_length%0#0,dynamic_string_array#1,data%2#2
    l-load array_length%0#0 2                                                                          dynamic_string_array#1,data%2#2,array_length%0#0
    callsub dynamic_array_concat_byte_length_head                                                      dynamic_string_array#1
    // arc4_types/mutation.py:231
    // assert dynamic_string_array == DynamicArray(hello, world, foo, bar, hello, world, foo, bar)
    byte 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172 dynamic_string_array#1,0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172
    ==                                                                                                 tmp%2#2
    assert
    // arc4_types/mutation.py:232
    // dynamic_string_array = DynamicArray(hello, world, foo, bar, hello, world, foo, bar)
    byte 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172 0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172
    // arc4_types/mutation.py:215
    // hello = String("Hello")
    byte 0x000548656c6c6f                                                                              0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172,0x000548656c6c6f
    // arc4_types/mutation.py:233
    // dynamic_string_array[3] = hello
    int 3                                                                                              0x000800100017001e00230028002f0036003b000548656c6c6f0005576f726c640003466f6f0003426172000548656c6c6f0005576f726c640003466f6f0003426172,0x000548656c6c6f,3
    callsub dynamic_array_replace_byte_length_head                                                     dynamic_string_array#1
    // arc4_types/mutation.py:215
    // hello = String("Hello")
    byte 0x000548656c6c6f                                                                              dynamic_string_array#1,0x000548656c6c6f
    // arc4_types/mutation.py:234
    // dynamic_string_array[5] = hello
    int 5                                                                                              dynamic_string_array#1,0x000548656c6c6f,5
    callsub dynamic_array_replace_byte_length_head                                                     dynamic_string_array#1
    // arc4_types/mutation.py:236-238
    // assert dynamic_string_array == DynamicArray(
    //     hello, world, foo, hello, hello, hello, foo, bar
    // )
    l-load-copy dynamic_string_array#1 0                                                               dynamic_string_array#1,dynamic_string_array#1 (copy)
    byte 0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f0003466f6f0003426172 dynamic_string_array#1,dynamic_string_array#1 (copy),0x000800100017001e0023002a00310038003d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f0003466f6f0003426172
    ==                                                                                                 dynamic_string_array#1,tmp%3#1
    assert                                                                                             dynamic_string_array#1
    // arc4_types/mutation.py:240
    // assert dynamic_string_array.pop() == bar
    l-load dynamic_string_array#1 0                                                                    dynamic_string_array#1
    callsub dynamic_array_pop_byte_length_head                                                         popped%0#1,dynamic_string_array#1
    l-load popped%0#1 1                                                                                dynamic_string_array#1,popped%0#1
    // arc4_types/mutation.py:218
    // bar = String("Bar")
    byte 0x0003426172                                                                                  dynamic_string_array#1,popped%0#1,0x0003426172
    // arc4_types/mutation.py:240
    // assert dynamic_string_array.pop() == bar
    ==                                                                                                 dynamic_string_array#1,tmp%4#1
    assert                                                                                             dynamic_string_array#1
    // arc4_types/mutation.py:241
    // assert dynamic_string_array.pop() == foo
    l-load dynamic_string_array#1 0                                                                    dynamic_string_array#1
    callsub dynamic_array_pop_byte_length_head                                                         popped%1#0,dynamic_string_array#1
    l-load popped%1#0 1                                                                                dynamic_string_array#1,popped%1#0
    // arc4_types/mutation.py:217
    // foo = String("Foo")
    byte 0x0003466f6f                                                                                  dynamic_string_array#1,popped%1#0,0x0003466f6f
    // arc4_types/mutation.py:241
    // assert dynamic_string_array.pop() == foo
    ==                                                                                                 dynamic_string_array#1,tmp%5#0
    assert                                                                                             dynamic_string_array#1
    // arc4_types/mutation.py:242
    // assert dynamic_string_array == DynamicArray(hello, world, foo, hello, hello, hello)
    l-load dynamic_string_array#1 0                                                                    dynamic_string_array#1
    byte 0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f dynamic_string_array#1,0x0006000c0013001a001f0026002d000548656c6c6f0005576f726c640003466f6f000548656c6c6f000548656c6c6f000548656c6c6f
    ==                                                                                                 tmp%6#0
    assert
    // arc4_types/mutation.py:72
    // array_of_array = DynamicArray[DynamicArray[UInt8]]()
    byte 0x0000                                                                                        0x0000
    // arc4_types/mutation.py:74
    // array_of_array.append(DynamicArray[UInt8](UInt8(10)))
    byte 0x00010a                                                                                      0x0000,0x00010a
    int 1                                                                                              0x0000,0x00010a,1
    callsub dynamic_array_concat_byte_length_head                                                      array_of_array#1
    // arc4_types/mutation.py:75
    // assert array_of_array.bytes == Bytes.from_hex("0001000200010A")
    l-load-copy array_of_array#1 0                                                                     array_of_array#1,array_of_array#1 (copy)
    byte 0x0001000200010a                                                                              array_of_array#1,array_of_array#1 (copy),0x0001000200010a
    ==                                                                                                 array_of_array#1,tmp%1#1
    assert                                                                                             array_of_array#1
    // arc4_types/mutation.py:76
    // array_of_array.append(DynamicArray[UInt8](UInt8(16)))
    l-load array_of_array#1 0                                                                          array_of_array#1
    byte 0x000110                                                                                      array_of_array#1,0x000110
    int 1                                                                                              array_of_array#1,0x000110,1
    callsub dynamic_array_concat_byte_length_head                                                      array_of_array#1
    // arc4_types/mutation.py:77
    // assert array_of_array.bytes == Bytes.from_hex("00020004000700010A000110")
    l-load-copy array_of_array#1 0                                                                     array_of_array#1,array_of_array#1 (copy)
    byte 0x00020004000700010a000110                                                                    array_of_array#1,array_of_array#1 (copy),0x00020004000700010a000110
    ==                                                                                                 array_of_array#1,tmp%2#2
    assert                                                                                             array_of_array#1
    // arc4_types/mutation.py:78
    // array_of_array[0].append(UInt8(255))
    l-load-copy array_of_array#1 0                                                                     array_of_array#1,array_of_array#1 (copy)
    extract 2 0                                                                                        array_of_array#1,array_head_and_tail%0#1
    l-load-copy array_of_array#1 1                                                                     array_of_array#1,array_head_and_tail%0#1,array_of_array#1 (copy)
    int 0                                                                                              array_of_array#1,array_head_and_tail%0#1,array_of_array#1 (copy),0
    extract_uint16                                                                                     array_of_array#1,array_head_and_tail%0#1,array_length%0#0
    assert // Index access is out of bounds                                                            array_of_array#1,array_head_and_tail%0#1
    l-load-copy array_head_and_tail%0#1 0                                                              array_of_array#1,array_head_and_tail%0#1,array_head_and_tail%0#1 (copy)
    int 0                                                                                              array_of_array#1,array_head_and_tail%0#1,array_head_and_tail%0#1 (copy),0
    extract_uint16                                                                                     array_of_array#1,array_head_and_tail%0#1,item_offset%0#0
    l-load-copy array_head_and_tail%0#1 1                                                              array_of_array#1,array_head_and_tail%0#1,item_offset%0#0,array_head_and_tail%0#1 (copy)
    l-load-copy item_offset%0#0 1                                                                      array_of_array#1,array_head_and_tail%0#1,item_offset%0#0,array_head_and_tail%0#1 (copy),item_offset%0#0 (copy)
    extract_uint16                                                                                     array_of_array#1,array_head_and_tail%0#1,item_offset%0#0,item_length%0#0
    int 2                                                                                              array_of_array#1,array_head_and_tail%0#1,item_offset%0#0,item_length%0#0,2
    +                                                                                                  array_of_array#1,array_head_and_tail%0#1,item_offset%0#0,item_head_tail_length%0#0
    l-load array_head_and_tail%0#1 2                                                                   array_of_array#1,item_offset%0#0,item_head_tail_length%0#0,array_head_and_tail%0#1
    l-load item_offset%0#0 2                                                                           array_of_array#1,item_head_tail_length%0#0,array_head_and_tail%0#1,item_offset%0#0
    l-load item_head_tail_length%0#0 2                                                                 array_of_array#1,array_head_and_tail%0#1,item_offset%0#0,item_head_tail_length%0#0
    extract3                                                                                           array_of_array#1,tmp%3#3
    extract 2 0                                                                                        array_of_array#1,expr_value_trimmed%0#1
    byte 0xff                                                                                          array_of_array#1,expr_value_trimmed%0#1,0xff
    concat                                                                                             array_of_array#1,concatenated%0#1
    l-load-copy concatenated%0#1 0                                                                     array_of_array#1,concatenated%0#1,concatenated%0#1 (copy)
    len                                                                                                array_of_array#1,concatenated%0#1,len_%0#1
    itob                                                                                               array_of_array#1,concatenated%0#1,as_bytes%0#2
    extract 6 2                                                                                        array_of_array#1,concatenated%0#1,len_16_bit%0#1
    l-load concatenated%0#1 1                                                                          array_of_array#1,len_16_bit%0#1,concatenated%0#1
    concat                                                                                             array_of_array#1,concat_result%2#2
    l-load array_of_array#1 1                                                                          concat_result%2#2,array_of_array#1
    l-load concat_result%2#2 1                                                                         array_of_array#1,concat_result%2#2
    int 0                                                                                              array_of_array#1,concat_result%2#2,0
    callsub dynamic_array_replace_byte_length_head                                                     array_of_array#1
    // arc4_types/mutation.py:80
    // assert array_of_array.bytes == Bytes.from_hex("00020004000800020AFF000110")
    l-load-copy array_of_array#1 0                                                                     array_of_array#1,array_of_array#1 (copy)
    byte 0x00020004000800020aff000110                                                                  array_of_array#1,array_of_array#1 (copy),0x00020004000800020aff000110
    ==                                                                                                 array_of_array#1,tmp%4#1
    assert                                                                                             array_of_array#1
    // arc4_types/mutation.py:82
    // array_of_array[0][1] = UInt8(0)
    l-load-copy array_of_array#1 0                                                                     array_of_array#1,array_of_array#1 (copy)
    extract 2 0                                                                                        array_of_array#1,array_head_and_tail%1#1
    l-load-copy array_of_array#1 1                                                                     array_of_array#1,array_head_and_tail%1#1,array_of_array#1 (copy)
    int 0                                                                                              array_of_array#1,array_head_and_tail%1#1,array_of_array#1 (copy),0
    extract_uint16                                                                                     array_of_array#1,array_head_and_tail%1#1,array_length%1#0
    assert // Index access is out of bounds                                                            array_of_array#1,array_head_and_tail%1#1
    l-load-copy array_head_and_tail%1#1 0                                                              array_of_array#1,array_head_and_tail%1#1,array_head_and_tail%1#1 (copy)
    int 0                                                                                              array_of_array#1,array_head_and_tail%1#1,array_head_and_tail%1#1 (copy),0
    extract_uint16                                                                                     array_of_array#1,array_head_and_tail%1#1,item_offset%1#0
    l-load-copy array_head_and_tail%1#1 1                                                              array_of_array#1,array_head_and_tail%1#1,item_offset%1#0,array_head_and_tail%1#1 (copy)
    l-load-copy item_offset%1#0 1                                                                      array_of_array#1,array_head_and_tail%1#1,item_offset%1#0,array_head_and_tail%1#1 (copy),item_offset%1#0 (copy)
    extract_uint16                                                                                     array_of_array#1,array_head_and_tail%1#1,item_offset%1#0,item_length%1#0
    int 2                                                                                              array_of_array#1,array_head_and_tail%1#1,item_offset%1#0,item_length%1#0,2
    +                                                                                                  array_of_array#1,array_head_and_tail%1#1,item_offset%1#0,item_head_tail_length%1#0
    l-load array_head_and_tail%1#1 2                                                                   array_of_array#1,item_offset%1#0,item_head_tail_length%1#0,array_head_and_tail%1#1
    l-load item_offset%1#0 2                                                                           array_of_array#1,item_head_tail_length%1#0,array_head_and_tail%1#1,item_offset%1#0
    l-load item_head_tail_length%1#0 2                                                                 array_of_array#1,array_head_and_tail%1#1,item_offset%1#0,item_head_tail_length%1#0
    extract3                                                                                           array_of_array#1,tmp%5#2
    l-load-copy tmp%5#2 0                                                                              array_of_array#1,tmp%5#2,tmp%5#2 (copy)
    int 0                                                                                              array_of_array#1,tmp%5#2,tmp%5#2 (copy),0
    extract_uint16                                                                                     array_of_array#1,tmp%5#2,array_length%2#0
    int 1                                                                                              array_of_array#1,tmp%5#2,array_length%2#0,1
    l-load array_length%2#0 1                                                                          array_of_array#1,tmp%5#2,1,array_length%2#0
    <                                                                                                  array_of_array#1,tmp%5#2,index_is_in_bounds%2#0
    assert // Index access is out of bounds                                                            array_of_array#1,tmp%5#2
    l-load tmp%5#2 0                                                                                   array_of_array#1,tmp%5#2
    byte 0x00                                                                                          array_of_array#1,tmp%5#2,0x00
    replace2 3                                                                                         array_of_array#1,updated_target%0#0
    l-load array_of_array#1 1                                                                          updated_target%0#0,array_of_array#1
    l-load updated_target%0#0 1                                                                        array_of_array#1,updated_target%0#0
    int 0                                                                                              array_of_array#1,updated_target%0#0,0
    callsub dynamic_array_replace_byte_length_head                                                     array_of_array#1
    // arc4_types/mutation.py:83
    // assert array_of_array.bytes == Bytes.from_hex("00020004000800020A00000110")
    byte 0x00020004000800020a00000110                                                                  array_of_array#1,0x00020004000800020a00000110
    ==                                                                                                 tmp%6#0
    assert
    // arc4_types/mutation.py:67
    // hello_world_concat = DynamicArray(String("Hello")) + DynamicArray(String("World"))
    byte 0x00010002000548656c6c6f                                                                      0x00010002000548656c6c6f
    byte 0x0005576f726c64                                                                              0x00010002000548656c6c6f,0x0005576f726c64
    int 1                                                                                              0x00010002000548656c6c6f,0x0005576f726c64,1
    callsub dynamic_array_concat_byte_length_head                                                      hello_world_concat#0
    // arc4_types/mutation.py:66
    // hello_world = DynamicArray(String("Hello"), String("World"))
    byte 0x00020004000b000548656c6c6f0005576f726c64                                                    hello_world_concat#0,0x00020004000b000548656c6c6f0005576f726c64
    // arc4_types/mutation.py:68
    // assert hello_world == hello_world_concat
    l-load hello_world_concat#0 1                                                                      0x00020004000b000548656c6c6f0005576f726c64,hello_world_concat#0
    ==                                                                                                 tmp%2#2
    assert
    // arc4_types/mutation.py:43
    // return True
    int 1                                                                                              1
    return


// _puya_lib.arc4.dynamic_array_pop_bit(array: bytes) -> bytes, bytes:
dynamic_array_pop_bit:                                                                                 (𝕡) array#0 |
    p-load array#0                                                                                     (𝕡) array#0 | array#0 (copy)
    int 0                                                                                              (𝕡) array#0 | array#0 (copy),0
    extract_uint16                                                                                     (𝕡) array#0 | array_length#0
    int 1                                                                                              (𝕡) array#0 | array_length#0,1
    -                                                                                                  (𝕡) array#0 | length_minus_1#0
    l-load-copy length_minus_1#0 0                                                                     (𝕡) array#0 | length_minus_1#0,length_minus_1#0 (copy)
    itob                                                                                               (𝕡) array#0 | length_minus_1#0,tmp%0#0
    extract 6 0                                                                                        (𝕡) array#0 | length_minus_1#0,tmp%1#0
    p-load array#0                                                                                     (𝕡) array#0 | length_minus_1#0,tmp%1#0,array#0 (copy)
    l-load tmp%1#0 1                                                                                   (𝕡) array#0 | length_minus_1#0,array#0 (copy),tmp%1#0
    replace2 0                                                                                         (𝕡) array#0 | length_minus_1#0,result#0
    l-load-copy length_minus_1#0 1                                                                     (𝕡) array#0 | length_minus_1#0,result#0,length_minus_1#0 (copy)
    int 16                                                                                             (𝕡) array#0 | length_minus_1#0,result#0,length_minus_1#0 (copy),16
    +                                                                                                  (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0
    l-load-copy result#0 1                                                                             (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,result#0 (copy)
    l-load-copy popped_location#0 1                                                                    (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,result#0 (copy),popped_location#0 (copy)
    getbit                                                                                             (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,tmp%2#0
    byte 0x00                                                                                          (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,tmp%2#0,0x00
    int 0                                                                                              (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,tmp%2#0,0x00,0
    l-load tmp%2#0 2                                                                                   (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,0x00,0,tmp%2#0
    setbit                                                                                             (𝕡) array#0 | length_minus_1#0,result#0,popped_location#0,popped#0
    l-load result#0 2                                                                                  (𝕡) array#0 | length_minus_1#0,popped_location#0,popped#0,result#0
    l-load popped_location#0 2                                                                         (𝕡) array#0 | length_minus_1#0,popped#0,result#0,popped_location#0
    int 0                                                                                              (𝕡) array#0 | length_minus_1#0,popped#0,result#0,popped_location#0,0
    setbit                                                                                             (𝕡) array#0 | length_minus_1#0,popped#0,result#0
    l-load length_minus_1#0 2                                                                          (𝕡) array#0 | popped#0,result#0,length_minus_1#0
    int 7                                                                                              (𝕡) array#0 | popped#0,result#0,length_minus_1#0,7
    +                                                                                                  (𝕡) array#0 | popped#0,result#0,tmp%3#0
    int 8                                                                                              (𝕡) array#0 | popped#0,result#0,tmp%3#0,8
    /                                                                                                  (𝕡) array#0 | popped#0,result#0,tmp%4#0
    int 2                                                                                              (𝕡) array#0 | popped#0,result#0,tmp%4#0,2
    l-load tmp%4#0 1                                                                                   (𝕡) array#0 | popped#0,result#0,2,tmp%4#0
    +                                                                                                  (𝕡) array#0 | popped#0,result#0,tmp%5#0
    l-load result#0 1                                                                                  (𝕡) array#0 | popped#0,tmp%5#0,result#0
    int 0                                                                                              (𝕡) array#0 | popped#0,tmp%5#0,result#0,0
    l-load tmp%5#0 2                                                                                   (𝕡) array#0 | popped#0,result#0,0,tmp%5#0
    substring3                                                                                         (𝕡) array#0 | popped#0,result#0
    l-load popped#0 1                                                                                  (𝕡) array#0 | result#0,popped#0
    l-load result#0 1                                                                                  (𝕡) array#0 | popped#0,result#0
    retsub                                                                                             popped#0,result#0


// _puya_lib.arc4.dynamic_array_pop_byte_length_head(array: bytes) -> bytes, bytes:
dynamic_array_pop_byte_length_head:                                                                    (𝕡) array#0 |
    p-load array#0                                                                                     (𝕡) array#0 | array#0 (copy)
    int 0                                                                                              (𝕡) array#0 | array#0 (copy),0
    extract_uint16                                                                                     (𝕡) array#0 | array_length#0
    int 1                                                                                              (𝕡) array#0 | array_length#0,1
    -                                                                                                  (𝕡) array#0 | length_minus_1#0
    l-load-copy length_minus_1#0 0                                                                     (𝕡) array#0 | length_minus_1#0,length_minus_1#0 (copy)
    int 2                                                                                              (𝕡) array#0 | length_minus_1#0,length_minus_1#0 (copy),2
    *                                                                                                  (𝕡) array#0 | length_minus_1#0,popped_header_offset#0
    p-load array#0                                                                                     (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,array#0 (copy)
    extract 2 0                                                                                        (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0
    l-load-copy head_and_tail#0 0                                                                      (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,head_and_tail#0 (copy)
    l-load-copy popped_header_offset#0 2                                                               (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,head_and_tail#0 (copy),popped_header_offset#0 (copy)
    extract_uint16                                                                                     (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0
    l-load-copy head_and_tail#0 1                                                                      (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,head_and_tail#0 (copy)
    len                                                                                                (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,tmp%0#0
    l-load-copy head_and_tail#0 2                                                                      (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,tmp%0#0,head_and_tail#0 (copy)
    l-load-copy popped_offset#0 2                                                                      (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,tmp%0#0,head_and_tail#0 (copy),popped_offset#0 (copy)
    l-load tmp%0#0 2                                                                                   (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,head_and_tail#0 (copy),popped_offset#0 (copy),tmp%0#0
    substring3                                                                                         (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,popped#0
    l-load-copy head_and_tail#0 2                                                                      (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,popped#0,head_and_tail#0 (copy)
    int 0                                                                                              (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,popped#0,head_and_tail#0 (copy),0
    l-load-copy popped_header_offset#0 5                                                               (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,popped#0,head_and_tail#0 (copy),0,popped_header_offset#0 (copy)
    substring3                                                                                         (𝕡) array#0 | length_minus_1#0,popped_header_offset#0,head_and_tail#0,popped_offset#0,popped#0,tmp%1#0
    l-load popped_header_offset#0 4                                                                    (𝕡) array#0 | length_minus_1#0,head_and_tail#0,popped_offset#0,popped#0,tmp%1#0,popped_header_offset#0
    int 2                                                                                              (𝕡) array#0 | length_minus_1#0,head_and_tail#0,popped_offset#0,popped#0,tmp%1#0,popped_header_offset#0,2
    +                                                                                                  (𝕡) array#0 | length_minus_1#0,head_and_tail#0,popped_offset#0,popped#0,tmp%1#0,tmp%2#0
    l-load head_and_tail#0 4                                                                           (𝕡) array#0 | length_minus_1#0,popped_offset#0,popped#0,tmp%1#0,tmp%2#0,head_and_tail#0
    l-load tmp%2#0 1                                                                                   (𝕡) array#0 | length_minus_1#0,popped_offset#0,popped#0,tmp%1#0,head_and_tail#0,tmp%2#0
    l-load popped_offset#0 4                                                                           (𝕡) array#0 | length_minus_1#0,popped#0,tmp%1#0,head_and_tail#0,tmp%2#0,popped_offset#0
    substring3                                                                                         (𝕡) array#0 | length_minus_1#0,popped#0,tmp%1#0,tmp%3#0
    l-load tmp%1#0 1                                                                                   (𝕡) array#0 | length_minus_1#0,popped#0,tmp%3#0,tmp%1#0
    l-load tmp%3#0 1                                                                                   (𝕡) array#0 | length_minus_1#0,popped#0,tmp%1#0,tmp%3#0
    concat                                                                                             (𝕡) array#0 | length_minus_1#0,popped#0,head_and_tail#0
    l-load-copy length_minus_1#0 2                                                                     (𝕡) array#0 | length_minus_1#0,popped#0,head_and_tail#0,length_minus_1#0 (copy)
    itob                                                                                               (𝕡) array#0 | length_minus_1#0,popped#0,head_and_tail#0,tmp%4#0
    extract 6 2                                                                                        (𝕡) array#0 | length_minus_1#0,popped#0,head_and_tail#0,tmp%5#0
    l-load head_and_tail#0 1                                                                           (𝕡) array#0 | length_minus_1#0,popped#0,tmp%5#0,head_and_tail#0
    l-load length_minus_1#0 3                                                                          (𝕡) array#0 | popped#0,tmp%5#0,head_and_tail#0,length_minus_1#0
    int 0                                                                                              (𝕡) array#0 | popped#0,tmp%5#0,head_and_tail#0,length_minus_1#0,0
    callsub recalculate_head_for_elements_with_byte_length_head                                        (𝕡) array#0 | popped#0,tmp%5#0,tmp%6#0
    l-load tmp%5#0 1                                                                                   (𝕡) array#0 | popped#0,tmp%6#0,tmp%5#0
    l-load tmp%6#0 1                                                                                   (𝕡) array#0 | popped#0,tmp%5#0,tmp%6#0
    concat                                                                                             (𝕡) array#0 | popped#0,updated#0
    l-load popped#0 1                                                                                  (𝕡) array#0 | updated#0,popped#0
    l-load updated#0 1                                                                                 (𝕡) array#0 | popped#0,updated#0
    retsub                                                                                             popped#0,updated#0


// _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
dynamic_array_concat_bits:                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
    allocate 3 to stack                                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0 |
    p-load array#0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0 | array#0 (copy)
    int 0                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0 | array#0 (copy),0
    extract_uint16                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0 | array_length#0
    l-store-copy array_length#0 0                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0 | array_length#0,array_length#0 (copy)
    f-store array_length#0                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0
    l-load-copy array_length#0 0                                                                       (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,array_length#0 (copy)
    p-load new_items_count#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,array_length#0 (copy),new_items_count#0 (copy)
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0
    l-load-copy new_array_length#0 0                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0,new_array_length#0 (copy)
    itob                                                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0,tmp%0#0
    extract 6 0                                                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0,new_array_length_b#0
    p-load array#0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0,new_array_length_b#0,array#0 (copy)
    l-load new_array_length_b#0 1                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0,array#0 (copy),new_array_length_b#0
    replace2 0                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | array_length#0,new_array_length#0,result#0
    l-store-copy result#0 2                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0 | result#0,array_length#0,new_array_length#0,result#0 (copy)
    f-store result#0                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,array_length#0,new_array_length#0
    l-load array_length#0 1                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,new_array_length#0,array_length#0
    int 7                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,new_array_length#0,array_length#0,7
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,new_array_length#0,tmp%1#0
    int 8                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,new_array_length#0,tmp%1#0,8
    /                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,new_array_length#0,current_bytes#0
    l-store-copy current_bytes#0 0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0 | result#0,new_array_length#0,current_bytes#0,current_bytes#0 (copy)
    f-store current_bytes#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,new_array_length#0,current_bytes#0
    l-load new_array_length#0 1                                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,current_bytes#0,new_array_length#0
    int 7                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,current_bytes#0,new_array_length#0,7
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,current_bytes#0,tmp%2#0
    int 8                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,current_bytes#0,tmp%2#0,8
    /                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,current_bytes#0,required_bytes#0
    l-store-copy required_bytes#0 0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0 | result#0,current_bytes#0,required_bytes#0,required_bytes#0 (copy)
    f-store required_bytes#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0 | result#0,current_bytes#0,required_bytes#0
    l-load current_bytes#0 1                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0 | result#0,required_bytes#0,current_bytes#0
    l-load required_bytes#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0 | result#0,current_bytes#0,required_bytes#0
    <                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0 | result#0,tmp%3#0
    l-load result#0 1                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0 | tmp%3#0,result#0
    f-store result#7                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | tmp%3#0
    l-load tmp%3#0 0                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | tmp%3#0
    bz dynamic_array_concat_bits_after_if_else@2 ; b dynamic_array_concat_bits_if_body@1 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | 

dynamic_array_concat_bits_if_body@1:                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    f-load required_bytes#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | required_bytes#0
    f-load current_bytes#0                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | required_bytes#0,current_bytes#0
    -                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | tmp%4#0
    bzero                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | tmp%5#0
    f-load result#0                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | tmp%5#0,result#0
    l-load tmp%5#0 1                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | result#0,tmp%5#0
    concat                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | result#0
    f-store result#7                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    b dynamic_array_concat_bits_after_if_else@2                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |

dynamic_array_concat_bits_after_if_else@2:                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    f-load result#7                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | result#0
    f-store result#0                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    int 0                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | 0
    f-store read_offset#0                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    f-load array_length#0                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | array_length#0
    int 16                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | array_length#0,16
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0
    l-store-copy write_offset#0 0                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0,write_offset#0 (copy)
    f-store write_offset#0                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0
    l-load write_offset#0 0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0
    p-load new_items_count#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0,new_items_count#0 (copy)
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_end#0
    f-store write_end#0                                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    b dynamic_array_concat_bits_while_top@3                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |

dynamic_array_concat_bits_while_top@3:                                                                 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    f-load write_offset#0                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0
    f-load write_end#0                                                                                 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | write_offset#0,write_end#0
    <                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | tmp%6#0
    bz dynamic_array_concat_bits_after_while@5 ; b dynamic_array_concat_bits_while_body@4 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | 

dynamic_array_concat_bits_while_body@4:                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    p-load new_items_bytes#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | new_items_bytes#0 (copy)
    f-load read_offset#0                                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | new_items_bytes#0 (copy),read_offset#0
    l-store-copy read_offset#0 1                                                                       (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,new_items_bytes#0 (copy),read_offset#0 (copy)
    getbit                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,tmp%7#0
    f-load result#0                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,tmp%7#0,result#0
    f-load write_offset#0                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,tmp%7#0,result#0,write_offset#0
    l-store-copy write_offset#0 2                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0,tmp%7#0,result#0,write_offset#0 (copy)
    l-load tmp%7#0 2                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0,result#0,write_offset#0 (copy),tmp%7#0
    setbit                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0,result#0
    f-store result#0                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0
    l-load write_offset#0 0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0
    int 1                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0,1
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,write_offset#0
    f-store write_offset#0                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0
    l-load read_offset#0 0                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0
    p-load read_step#0                                                                                 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0,read_step#0 (copy)
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | read_offset#0
    f-store read_offset#0                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    b dynamic_array_concat_bits_while_top@3                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |

dynamic_array_concat_bits_after_while@5:                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 |
    f-load result#0                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | (𝕗) read_offset#0,write_end#0,write_offset#0,array_length#0,result#0,current_bytes#0,required_bytes#0,result#7 | result#0
    retsub                                                                                             result#0


// _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
dynamic_array_concat_byte_length_head:                                                                 (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
    p-load array#0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array#0 (copy)
    int 0                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array#0 (copy),0
    extract_uint16                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0
    l-load-copy array_length#0 0                                                                       (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0,array_length#0 (copy)
    p-load new_items_count#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0,array_length#0 (copy),new_items_count#0 (copy)
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0,new_length#0
    l-load array_length#0 1                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,array_length#0
    int 2                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,array_length#0,2
    *                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%0#0
    int 2                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%0#0,2
    +                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0
    l-load-copy new_length#0 1                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,new_length#0 (copy)
    itob                                                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%1#0
    extract 6 2                                                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0
    p-load array#0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,array#0 (copy)
    int 2                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,array#0 (copy),2
    l-load-copy header_end#0 3                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,array#0 (copy),2,header_end#0 (copy)
    substring3                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%3#0
    p-load new_items_count#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%3#0,new_items_count#0 (copy)
    int 2                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%3#0,new_items_count#0 (copy),2
    *                                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%3#0,tmp%4#0
    bzero                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%3#0,tmp%5#0
    l-load tmp%3#0 1                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%5#0,tmp%3#0
    l-load tmp%5#0 1                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%3#0,tmp%5#0
    concat                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%6#0
    p-load array#0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%6#0,array#0 (copy)
    len                                                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%6#0,tmp%7#0
    p-load array#0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0,tmp%6#0,tmp%7#0,array#0 (copy)
    l-load header_end#0 4                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%6#0,tmp%7#0,array#0 (copy),header_end#0
    l-load tmp%7#0 2                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%6#0,array#0 (copy),header_end#0,tmp%7#0
    substring3                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%6#0,tmp%8#0
    l-load tmp%6#0 1                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%8#0,tmp%6#0
    l-load tmp%8#0 1                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%6#0,tmp%8#0
    concat                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%9#0
    p-load new_items_bytes#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%9#0,new_items_bytes#0 (copy)
    concat                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%2#0,tmp%10#0
    l-load new_length#0 2                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%2#0,tmp%10#0,new_length#0
    int 0                                                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%2#0,tmp%10#0,new_length#0,0
    callsub recalculate_head_for_elements_with_byte_length_head                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%2#0,tmp%11#0
    l-load tmp%2#0 1                                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%11#0,tmp%2#0
    l-load tmp%11#0 1                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%2#0,tmp%11#0
    concat                                                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%12#0
    retsub                                                                                             tmp%12#0


// _puya_lib.arc4.dynamic_array_replace_byte_length_head(array: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_byte_length_head:                                                                (𝕡) array#0,new_item#0,index#0 |
    p-load array#0                                                                                     (𝕡) array#0,new_item#0,index#0 | array#0 (copy)
    substring 0 2                                                                                      (𝕡) array#0,new_item#0,index#0 | size_b#0
    l-load-copy size_b#0 0                                                                             (𝕡) array#0,new_item#0,index#0 | size_b#0,size_b#0 (copy)
    btoi                                                                                               (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0
    p-load array#0                                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array#0 (copy)
    extract 2 0                                                                                        (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0
    p-load index#0                                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,index#0 (copy)
    l-load-copy array_length#0 2                                                                       (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,index#0 (copy),array_length#0 (copy)
    <                                                                                                  (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,tmp%0#1
    assert // Index out of bounds                                                                      (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0
    p-load index#0                                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,index#0 (copy)
    int 2                                                                                              (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,index#0 (copy),2
    *                                                                                                  (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,tmp%1#1
    l-load-copy array_head_and_tail#0 1                                                                (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,tmp%1#1,array_head_and_tail#0 (copy)
    l-load tmp%1#1 1                                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,array_head_and_tail#0 (copy),tmp%1#1
    extract_uint16                                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0
    l-load-copy array_head_and_tail#0 1                                                                (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,array_head_and_tail#0 (copy)
    l-load-copy offset_for_index#0 1                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,array_head_and_tail#0 (copy),offset_for_index#0 (copy)
    extract_uint16                                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,old_item_length#0
    l-load-copy offset_for_index#0 1                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,old_item_length#0,offset_for_index#0 (copy)
    l-load old_item_length#0 1                                                                         (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,offset_for_index#0 (copy),old_item_length#0
    +                                                                                                  (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,tmp%2#1
    int 2                                                                                              (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,tmp%2#1,2
    +                                                                                                  (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,old_item_end#0
    l-load-copy array_head_and_tail#0 2                                                                (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,old_item_end#0,array_head_and_tail#0 (copy)
    int 0                                                                                              (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,offset_for_index#0,old_item_end#0,array_head_and_tail#0 (copy),0
    l-load offset_for_index#0 3                                                                        (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,old_item_end#0,array_head_and_tail#0 (copy),0,offset_for_index#0
    substring3                                                                                         (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,old_item_end#0,tmp%3#0
    p-load new_item#0                                                                                  (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,old_item_end#0,tmp%3#0,new_item#0 (copy)
    concat                                                                                             (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,old_item_end#0,tmp%4#0
    l-load-copy array_head_and_tail#0 2                                                                (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,old_item_end#0,tmp%4#0,array_head_and_tail#0 (copy)
    len                                                                                                (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,array_head_and_tail#0,old_item_end#0,tmp%4#0,tmp%5#0
    l-load array_head_and_tail#0 3                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,old_item_end#0,tmp%4#0,tmp%5#0,array_head_and_tail#0
    l-load old_item_end#0 3                                                                            (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%4#0,tmp%5#0,array_head_and_tail#0,old_item_end#0
    l-load tmp%5#0 2                                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%4#0,array_head_and_tail#0,old_item_end#0,tmp%5#0
    substring3                                                                                         (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%4#0,tmp%6#0
    l-load tmp%4#0 1                                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%6#0,tmp%4#0
    l-load tmp%6#0 1                                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%4#0,tmp%6#0
    concat                                                                                             (𝕡) array#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%7#0
    l-load array_length#0 1                                                                            (𝕡) array#0,new_item#0,index#0 | size_b#0,tmp%7#0,array_length#0
    p-load index#0                                                                                     (𝕡) array#0,new_item#0,index#0 | size_b#0,tmp%7#0,array_length#0,index#0 (copy)
    callsub recalculate_head_for_elements_with_byte_length_head                                        (𝕡) array#0,new_item#0,index#0 | size_b#0,tmp%8#0
    l-load size_b#0 1                                                                                  (𝕡) array#0,new_item#0,index#0 | tmp%8#0,size_b#0
    l-load tmp%8#0 1                                                                                   (𝕡) array#0,new_item#0,index#0 | size_b#0,tmp%8#0
    concat                                                                                             (𝕡) array#0,new_item#0,index#0 | tmp%2#0
    retsub                                                                                             tmp%2#0


// _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head(array_head_and_tail: bytes, length: uint64, start_at_index: uint64) -> bytes:
recalculate_head_for_elements_with_byte_length_head:                                                   (𝕡) array_head_and_tail#0,length#0,start_at_index#0 |
    p-load length#0                                                                                    (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | length#0 (copy)
    int 2                                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | length#0 (copy),2
    *                                                                                                  (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | tmp%0#0
    l-store-copy tmp%0#0 0                                                                             (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | tmp%0#0,tmp%0#0 (copy)
    f-store tmp%0#0                                                                                    (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0 | tmp%0#0
    p-load start_at_index#0                                                                            (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0 | tmp%0#0,start_at_index#0 (copy)
    int 2                                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0 | tmp%0#0,start_at_index#0 (copy),2
    *                                                                                                  (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0 | tmp%0#0,head_offset#0
    l-store-copy head_offset#0 0                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0 | tmp%0#0,head_offset#0,head_offset#0 (copy)
    f-store head_offset#0                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%0#0,head_offset#0
    p-load array_head_and_tail#0                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%0#0,head_offset#0,array_head_and_tail#0 (copy)
    l-load head_offset#0 1                                                                             (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%0#0,array_head_and_tail#0 (copy),head_offset#0
    extract_uint16                                                                                     (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%0#0,tmp%2#0
    l-load tmp%0#0 1                                                                                   (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%2#0,tmp%0#0
    l-load tmp%2#0 1                                                                                   (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%0#0,tmp%2#0
    p-load start_at_index#0                                                                            (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tmp%0#0,tmp%2#0,start_at_index#0 (copy)
    select                                                                                             (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0 | tail_offset#0
    f-store tail_offset#0                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |
    b recalculate_head_for_elements_with_byte_length_head_for_header@1                                 (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |

recalculate_head_for_elements_with_byte_length_head_for_header@1:                                      (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |
    f-load head_offset#0                                                                               (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0
    f-load tmp%0#0                                                                                     (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tmp%0#0
    <                                                                                                  (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | continue_looping%0#0
    bz recalculate_head_for_elements_with_byte_length_head_after_for@4 ; b recalculate_head_for_elements_with_byte_length_head_for_body@2 (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | 

recalculate_head_for_elements_with_byte_length_head_for_body@2:                                        (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |
    f-load tail_offset#0                                                                               (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | tail_offset#0
    l-store-copy tail_offset#0 0                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | tail_offset#0,tail_offset#0 (copy)
    itob                                                                                               (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | tail_offset#0,tmp%5#0
    extract 6 2                                                                                        (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | tail_offset#0,tail_offset_bytes#0
    p-load array_head_and_tail#0                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | tail_offset#0,tail_offset_bytes#0,array_head_and_tail#0 (copy)
    f-load head_offset#0                                                                               (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | tail_offset#0,tail_offset_bytes#0,array_head_and_tail#0 (copy),head_offset#0
    l-store-copy head_offset#0 3                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,tail_offset_bytes#0,array_head_and_tail#0 (copy),head_offset#0 (copy)
    l-load tail_offset_bytes#0 2                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,array_head_and_tail#0 (copy),head_offset#0 (copy),tail_offset_bytes#0
    replace3                                                                                           (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,array_head_and_tail#0
    p-store array_head_and_tail#0                                                                      (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0
    p-load array_head_and_tail#0                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,array_head_and_tail#0 (copy)
    l-load-copy tail_offset#0 1                                                                        (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,array_head_and_tail#0 (copy),tail_offset#0 (copy)
    extract_uint16                                                                                     (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,tmp%6#0
    int 2                                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,tmp%6#0,2
    +                                                                                                  (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,tmp%7#0
    l-load tail_offset#0 1                                                                             (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tmp%7#0,tail_offset#0
    l-load tmp%7#0 1                                                                                   (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0,tmp%7#0
    +                                                                                                  (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,tail_offset#0
    f-store tail_offset#0                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0
    l-load head_offset#0 0                                                                             (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0
    int 2                                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0,2
    +                                                                                                  (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | head_offset#0
    f-store head_offset#0                                                                              (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |
    b recalculate_head_for_elements_with_byte_length_head_for_header@1                                 (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |

recalculate_head_for_elements_with_byte_length_head_after_for@4:                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 |
    p-load array_head_and_tail#0                                                                       (𝕡) array_head_and_tail#0,length#0,start_at_index#0 | (𝕗) tmp%0#0,head_offset#0,tail_offset#0 | array_head_and_tail#0 (copy)
    retsub                                                                                             array_head_and_tail#0 (copy)


