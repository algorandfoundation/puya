contract test_cases.arc4_types.numeric.Arc4NumericTypesContract:
    program approval:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program() -> uint64:
            block@0: // L25
                let tmp%1#0: uint64 = (== 255u 255u)
                (assert tmp%1#0)
                let awst_tmp%2#0: uint64 = 9u
                let ternary_result%4#0: uint64 = 1u
                goto block@3
            block@3: // ternary_merge_L35
                let tmp%5#0: bytes = (substring3 0x7fffffffffffffff00 0u ternary_result%4#0)
                let tmp%6#0: uint64 = (btoi tmp%5#0)
                let tmp%7#0: uint64 = (== tmp%6#0 127u)
                (assert tmp%7#0)
                let ternary_result%10#0: uint64 = 3u
                goto block@6
            block@6: // ternary_merge_L37
                let tmp%11#0: bytes = (substring3 0x7fffffffffffffff00 0u ternary_result%10#0)
                let tmp%12#0: uint64 = (btoi tmp%11#0)
                let tmp%13#0: uint64 = (== tmp%12#0 8388607u)
                (assert tmp%13#0)
                let ternary_result%16#0: uint64 = 2u
                goto block@9
            block@9: // ternary_merge_L39
                let tmp%17#0: bytes = (substring3 0x7fffffffffffffff00 0u ternary_result%16#0)
                let tmp%18#0: uint64 = (btoi tmp%17#0)
                let tmp%19#0: uint64 = (== tmp%18#0 32767u)
                (assert tmp%19#0)
                let ternary_result%22#0: uint64 = 4u
                goto block@12
            block@12: // ternary_merge_L40
                let tmp%23#0: bytes = (substring3 0x7fffffffffffffff00 0u ternary_result%22#0)
                let tmp%24#0: uint64 = (btoi tmp%23#0)
                let tmp%25#0: uint64 = (== tmp%24#0 2147483647u)
                (assert tmp%25#0)
                let ternary_result%28#0: uint64 = 8u
                goto block@15
            block@15: // ternary_merge_L41
                let tmp%29#0: bytes = (substring3 0x7fffffffffffffff00 0u ternary_result%28#0)
                let tmp%30#0: uint64 = (btoi tmp%29#0)
                let tmp%31#0: uint64 = (== tmp%30#0 9223372036854775807u)
                (assert tmp%31#0)
                let no_overflow%46#0: uint64 = (<= 1u 16u)
                (assert no_overflow%46#0) // overflow
                let tmp%49#0: uint64 = (len 0x00000000000000000000000000000002)
                let tmp%50#0: uint64 = (== tmp%49#0 16u)
                (assert tmp%50#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
            block@0: // L68
                return 1u