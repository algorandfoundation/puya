contract test_cases.arc4_types.address.Arc4AddressContract:
    program approval:
        subroutine test_cases.arc4_types.address.Arc4AddressContract.approval_program() -> bool:
            block@0: // L7
                let address#0: bytes = (txn Sender)
                let tmp%0#0: bytes = (txn Sender)
                let tmp%1#0: bool = (== address#0 tmp%0#0)
                (assert tmp%1#0)
                let tmp%2#0: bool = 1u
                (assert tmp%2#0)
                let tmp%3#0: bytes = (txn Sender)
                let tmp%4#0: bool = (== address#0 tmp%3#0)
                (assert tmp%4#0)
                let tmp%5#0: uint64 = 32u
                let tmp%6#0: bool = (== 32u tmp%5#0)
                (assert tmp%6#0) // Address length is 32 bytes
                let tmp%8#0: bool = 1u
                (assert tmp%8#0)
                let tmp%9#0: bool = 1u
                (assert tmp%9#0)
                let some_address#1: bytes = ((replace2 0) addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA 0x7b)
                let tmp%10#0: bool = (!= some_address#1 addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
                (assert tmp%10#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.arc4_types.address.Arc4AddressContract.clear_state_program() -> bool:
            block@0: // L23
                return 1u