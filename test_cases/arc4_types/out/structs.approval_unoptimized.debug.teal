// Op                                                   // Op Description                                        Stack (out)                                                                                                           X stack Source code                                                                         Source line

#pragma version 10

// test_cases.arc4_types.structs.Arc4StructsTypeContract.approval_program() -> uint64:
main:
        byte ""
        dup                                             // allocate 2 to stack                                   (𝕗) tuple_index%6#0,tuple_index%6#3 |

main_block@0:
        int 16                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 | 16                                                                                      Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 27
        pop                                             //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 |                                                                                         Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 27
        byte 0x                                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 | 0x                                                                                      Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 27
        byte 0x000000083cfbf217                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 | encoded_tuple_buffer%1#0,0x000000083cfbf217                                             "35.382882839"                                                                      File "arc4_types/structs.py", line 27
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 | {concat}                                                                                Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 27
        byte 0x000000230384b842                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 | encoded_tuple_buffer%1#0,0x000000230384b842                                             "150.382884930"                                                                     File "arc4_types/structs.py", line 27
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3 | {concat}                                                                                Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 27
        dup                                             // store coord_1#0 to l-stack (copy)                     (𝕗) tuple_index%6#0,tuple_index%6#3 | coord_1#0,coord_1#0                                                                     coord_1                                                                             File "arc4_types/structs.py", line 27
        swap                                            // store coord_1#0 to f-stack                            (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0                                                                     coord_1                                                                             File "arc4_types/structs.py", line 27
        int 16                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0,16                                                                  Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 28
        pop                                             //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0                                                                     Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 28
        byte 0x                                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0,0x                                                                  Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 28
        byte 0x000000083cfbf217                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0,encoded_tuple_buffer%3#0,0x000000083cfbf217                         "35.382882839"                                                                      File "arc4_types/structs.py", line 28
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0,{concat}                                                            Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 28
        byte 0x000000230384b842                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0,encoded_tuple_buffer%3#0,0x000000230384b842                         "150.382884930"                                                                     File "arc4_types/structs.py", line 28
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_1#0,{concat}                                                            Vector(x=Decimal("35.382882839"), y=Decimal("150.382884930"))                       File "arc4_types/structs.py", line 28
        callsub add                                     //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | {add}                                                                         add(coord_1.copy(), coord_2.copy())                                                 File "arc4_types/structs.py", line 29
        dup                                             // load coord_3#0 from l-stack (copy)                    (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_3#0,coord_3#0                                                           coord_3                                                                             File "arc4_types/structs.py", line 29
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_3#0,coord_3#0,0                                                         coord_3.x                                                                           File "arc4_types/structs.py", line 30
        int 8                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_3#0,coord_3#0,0,8                                                       coord_3.x                                                                           File "arc4_types/structs.py", line 30
        extract3                                        //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | coord_3#0,{extract3}                                                          coord_3.x                                                                           File "arc4_types/structs.py", line 30
        swap                                            // store tmp%4#0 to x-stack (no copy)                    (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | (𝕏) tmp%4#0 | coord_3#0                                                       coord_3.x                                                                           File "arc4_types/structs.py", line 30
        int 8                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | (𝕏) tmp%4#0 | coord_3#0,8                                                     coord_3.y                                                                           File "arc4_types/structs.py", line 30
        int 8                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | (𝕏) tmp%4#0 | coord_3#0,8,8                                                   coord_3.y                                                                           File "arc4_types/structs.py", line 30
        extract3                                        //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0 | (𝕏) tmp%4#0 | {extract3}                                                      coord_3.y                                                                           File "arc4_types/structs.py", line 30
        swap                                            // store tmp%5#0 to f-stack                              (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) tmp%4#0 |                                                         coord_3.y                                                                           File "arc4_types/structs.py", line 30
        // Implicit fall through to main_for_header_0@1 //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) tmp%4#0 |                                                 tmp%4#0

main_for_header_0@1:
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) tmp%4#0 | 0                                               tmp%4#0
        bury 5                                          // store tuple_index%6#0 to f-stack                      (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) tmp%4#0 |
        b main_for_body@3                               //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) val#0 |                                                   val#0

main_for_header_1@2:
        dup                                             // load tmp%5#0 from f-stack                             (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%5#0                                                               coord_3.y                                                                           File "arc4_types/structs.py", line 30
        dig 3                                           // load tuple_index%6#3 from f-stack                     (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) val#0 | tuple_index%6#3
        bury 5                                          // store tuple_index%6#0 to f-stack                      (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) val#0 |
        // Implicit fall through to main_for_body@3     //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | (𝕏) val#0 |                                                   val#0

main_for_body@3:
        log                                             //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 |                                                               val#0   log(val.bytes)                                                                      File "arc4_types/structs.py", line 31
        // Implicit fall through to main_for_footer@4   //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 |

main_for_footer@4:
        dig 3                                           // load tuple_index%6#0 from f-stack                     (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tuple_index%6#0
        dup                                             // store tuple_index%6#0 to l-stack (copy)               (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tuple_index%6#0,tuple_index%6#0
        int 1                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tuple_index%6#0,tuple_index%6#0,1
        +                                               //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tuple_index%6#0,{+}
        bury 4                                          // store tuple_index%6#3 to f-stack                      (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tuple_index%6#0
        switch main_for_header_1@2                      //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 |                                                                       for val in (coord_3.x, coord_3.y):                                                  File "arc4_types/structs.py", line 30
        // Implicit fall through to main_after_for@5    //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 |                                                                       for val in (coord_3.x, coord_3.y):                                                  File "arc4_types/structs.py", line 30

main_after_for@5:
        byte 0x00                                       //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | 0x00                                                                  arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | 0x00,0
        int 1                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | 0x00,0,1                                                              True                                                                                File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | {setbit}                                                              arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        byte 0x00                                       //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,0x00                                                          arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,0x00,0
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,0x00,0,0                                                      False                                                                               File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,{setbit}                                                      arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        byte 0x00                                       //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,tmp%8#0,0x00                                                  arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,tmp%8#0,0x00,0
        int 1                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,tmp%8#0,0x00,0,1                                              True                                                                                File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%7#0,tmp%8#0,{setbit}                                              arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        cover 2                                         // store tmp%9#0 to l-stack (no copy)                    (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%9#0,tmp%7#0,tmp%8#0                                               arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        byte 0x00                                       //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%9#0,tmp%7#0,tmp%8#0,0x00                                          arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%9#0,tmp%7#0,tmp%8#0,0x00,0
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%9#0,tmp%7#0,tmp%8#0,0x00,0,0                                      False                                                                               File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%9#0,tmp%7#0,tmp%8#0,{setbit}                                      arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        cover 3                                         // store tmp%10#0 to l-stack (no copy)                   (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,tmp%7#0,tmp%8#0                                      arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        int 1                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,tmp%7#0,tmp%8#0,1                                    Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        pop                                             //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,tmp%7#0,tmp%8#0                                      Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        byte 0x                                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,tmp%7#0,tmp%8#0,0x                                   Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        uncover 2                                       // load tmp%7#0 from l-stack (no copy)                   (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,tmp%8#0,encoded_tuple_buffer%12#0,tmp%7#0            arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,tmp%8#0,{concat}                                     Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        swap                                            // load tmp%8#0 from l-stack (no copy)                   (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,encoded_tuple_buffer%12#0,tmp%8#0                    arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,encoded_tuple_buffer%12#0,tmp%8#0,0
        getbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,encoded_tuple_buffer%12#0,{getbit}                   Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        swap                                            // load encoded_tuple_buffer%12#0 from l-stack (no copy) (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,is_true%13#0,encoded_tuple_buffer%12#0               Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        int 1                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,is_true%13#0,encoded_tuple_buffer%12#0,1             Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        uncover 2                                       // load is_true%13#0 from l-stack (no copy)              (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,encoded_tuple_buffer%12#0,1,is_true%13#0             Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,tmp%9#0,{setbit}                                             Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        swap                                            // load tmp%9#0 from l-stack (no copy)                   (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,encoded_tuple_buffer%12#0,tmp%9#0                            arc4.Bool(True)                                                                     File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,encoded_tuple_buffer%12#0,tmp%9#0,0
        getbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,encoded_tuple_buffer%12#0,{getbit}                           Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        swap                                            // load encoded_tuple_buffer%12#0 from l-stack (no copy) (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,is_true%14#0,encoded_tuple_buffer%12#0                       Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        int 2                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,is_true%14#0,encoded_tuple_buffer%12#0,2                     Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        uncover 2                                       // load is_true%14#0 from l-stack (no copy)              (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,encoded_tuple_buffer%12#0,2,is_true%14#0                     Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | tmp%10#0,{setbit}                                                     Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        swap                                            // load tmp%10#0 from l-stack (no copy)                  (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | encoded_tuple_buffer%12#0,tmp%10#0                                    arc4.Bool(False)                                                                    File "arc4_types/structs.py", line 33
        int 0                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | encoded_tuple_buffer%12#0,tmp%10#0,0
        getbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | encoded_tuple_buffer%12#0,{getbit}                                    Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        swap                                            // load encoded_tuple_buffer%12#0 from l-stack (no copy) (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | is_true%15#0,encoded_tuple_buffer%12#0                                Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        int 3                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | is_true%15#0,encoded_tuple_buffer%12#0,3                              Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        uncover 2                                       // load is_true%15#0 from l-stack (no copy)              (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | encoded_tuple_buffer%12#0,3,is_true%15#0                              Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        setbit                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | {setbit}                                                              Flags(a=arc4.Bool(True), b=arc4.Bool(False), c=arc4.Bool(True), d=arc4.Bool(False)) File "arc4_types/structs.py", line 33
        dup                                             // load flags#0 from l-stack (copy)                      (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0,flags#0                                                       flags                                                                               File "arc4_types/structs.py", line 33
        callsub check                                   //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0                                                               check(flags.copy())                                                                 File "arc4_types/structs.py", line 34
        dup                                             // load flags#0 from l-stack (copy)                      (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0,flags#0                                                       flags                                                                               File "arc4_types/structs.py", line 33
        log                                             //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0                                                               log(flags.bytes)                                                                    File "arc4_types/structs.py", line 35
        int 17                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0,17                                                            VectorFlags(coord_1, flags)                                                         File "arc4_types/structs.py", line 37
        pop                                             //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0                                                               VectorFlags(coord_1, flags)                                                         File "arc4_types/structs.py", line 37
        byte 0x                                         //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0,0x                                                            VectorFlags(coord_1, flags)                                                         File "arc4_types/structs.py", line 37
        dig 3                                           // load coord_1#0 from f-stack                           (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0,encoded_tuple_buffer%17#0,coord_1#0                           coord_1                                                                             File "arc4_types/structs.py", line 27
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | flags#0,{concat}                                                      VectorFlags(coord_1, flags)                                                         File "arc4_types/structs.py", line 37
        swap                                            // load flags#0 from l-stack (no copy)                   (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | encoded_tuple_buffer%17#0,flags#0                                     flags                                                                               File "arc4_types/structs.py", line 33
        concat                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | {concat}                                                              VectorFlags(coord_1, flags)                                                         File "arc4_types/structs.py", line 37
        callsub nested_decode                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 |                                                                       nested_decode(VectorFlags(coord_1, flags))                                          File "arc4_types/structs.py", line 37
        int 1                                           //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 | 1                                                                     True                                                                                File "arc4_types/structs.py", line 39
        return                                          //                                                       (𝕗) tuple_index%6#0,tuple_index%6#3,coord_1#0,tmp%5#0 |                                                                       return True                                                                         File "arc4_types/structs.py", line 39


// test_cases.arc4_types.structs.add(v1#0: bytes, v2#0: bytes) -> bytes:
add:
        proto 2 1                                       //                                                       (𝕡) v1#0,v2#0 |                                                                                                               def add(v1: Vector, v2: Vector) -> Vector:                                          File "arc4_types/structs.py", line 46

add_block@0:
        frame_dig -2                                    // load v1#0 from parameters                             (𝕡) v1#0,v2#0 | v1#0                                                                                                          v1: Vector                                                                          File "arc4_types/structs.py", line 46
        int 0                                           //                                                       (𝕡) v1#0,v2#0 | v1#0,0                                                                                                        v1.x                                                                                File "arc4_types/structs.py", line 48
        int 8                                           //                                                       (𝕡) v1#0,v2#0 | v1#0,0,8                                                                                                      v1.x                                                                                File "arc4_types/structs.py", line 48
        extract3                                        //                                                       (𝕡) v1#0,v2#0 | {extract3}                                                                                                    v1.x                                                                                File "arc4_types/structs.py", line 48
        btoi                                            //                                                       (𝕡) v1#0,v2#0 | {btoi}                                                                                                        v1.x.decode()                                                                       File "arc4_types/structs.py", line 48
        frame_dig -1                                    // load v2#0 from parameters                             (𝕡) v1#0,v2#0 | tmp%1#0,v2#0                                                                                                  v2: Vector                                                                          File "arc4_types/structs.py", line 46
        int 0                                           //                                                       (𝕡) v1#0,v2#0 | tmp%1#0,v2#0,0                                                                                                v2.x                                                                                File "arc4_types/structs.py", line 48
        int 8                                           //                                                       (𝕡) v1#0,v2#0 | tmp%1#0,v2#0,0,8                                                                                              v2.x                                                                                File "arc4_types/structs.py", line 48
        extract3                                        //                                                       (𝕡) v1#0,v2#0 | tmp%1#0,{extract3}                                                                                            v2.x                                                                                File "arc4_types/structs.py", line 48
        btoi                                            //                                                       (𝕡) v1#0,v2#0 | tmp%1#0,{btoi}                                                                                                v2.x.decode()                                                                       File "arc4_types/structs.py", line 48
        +                                               //                                                       (𝕡) v1#0,v2#0 | {+}                                                                                                           v1.x.decode() + v2.x.decode()                                                       File "arc4_types/structs.py", line 48
        itob                                            //                                                       (𝕡) v1#0,v2#0 | {itob}                                                                                                        Decimal.encode(v1.x.decode() + v2.x.decode())                                       File "arc4_types/structs.py", line 48
        frame_dig -2                                    // load v1#0 from parameters                             (𝕡) v1#0,v2#0 | val_as_bytes%5#0,v1#0                                                                                         v1: Vector                                                                          File "arc4_types/structs.py", line 46
        int 8                                           //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,v1#0,8                                                                                       v1.y                                                                                File "arc4_types/structs.py", line 49
        int 8                                           //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,v1#0,8,8                                                                                     v1.y                                                                                File "arc4_types/structs.py", line 49
        extract3                                        //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,{extract3}                                                                                   v1.y                                                                                File "arc4_types/structs.py", line 49
        btoi                                            //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,{btoi}                                                                                       v1.y.decode()                                                                       File "arc4_types/structs.py", line 49
        frame_dig -1                                    // load v2#0 from parameters                             (𝕡) v1#0,v2#0 | val_as_bytes%5#0,tmp%7#0,v2#0                                                                                 v2: Vector                                                                          File "arc4_types/structs.py", line 46
        int 8                                           //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,tmp%7#0,v2#0,8                                                                               v2.y                                                                                File "arc4_types/structs.py", line 49
        int 8                                           //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,tmp%7#0,v2#0,8,8                                                                             v2.y                                                                                File "arc4_types/structs.py", line 49
        extract3                                        //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,tmp%7#0,{extract3}                                                                           v2.y                                                                                File "arc4_types/structs.py", line 49
        btoi                                            //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,tmp%7#0,{btoi}                                                                               v2.y.decode()                                                                       File "arc4_types/structs.py", line 49
        +                                               //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,{+}                                                                                          v1.y.decode() + v2.y.decode()                                                       File "arc4_types/structs.py", line 49
        itob                                            //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,{itob}                                                                                       Decimal.encode(v1.y.decode() + v2.y.decode())                                       File "arc4_types/structs.py", line 49
        int 16                                          //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,val_as_bytes%11#0,16                                                                         Vector(                                                                             File "arc4_types/structs.py", line 47
        pop                                             //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,val_as_bytes%11#0                                                                            Vector(                                                                             File "arc4_types/structs.py", line 47
        byte 0x                                         //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%5#0,val_as_bytes%11#0,0x                                                                         Vector(                                                                             File "arc4_types/structs.py", line 47
        uncover 2                                       // load val_as_bytes%5#0 from l-stack (no copy)          (𝕡) v1#0,v2#0 | val_as_bytes%11#0,encoded_tuple_buffer%13#0,val_as_bytes%5#0                                                  Decimal.encode(v1.x.decode() + v2.x.decode())                                       File "arc4_types/structs.py", line 48
        concat                                          //                                                       (𝕡) v1#0,v2#0 | val_as_bytes%11#0,{concat}                                                                                    Vector(                                                                             File "arc4_types/structs.py", line 47
        swap                                            // load val_as_bytes%11#0 from l-stack (no copy)         (𝕡) v1#0,v2#0 | encoded_tuple_buffer%13#0,val_as_bytes%11#0                                                                   Decimal.encode(v1.y.decode() + v2.y.decode())                                       File "arc4_types/structs.py", line 49
        concat                                          //                                                       (𝕡) v1#0,v2#0 | {concat}                                                                                                      Vector(                                                                             File "arc4_types/structs.py", line 47
        retsub                                          //                                                       encoded_tuple_buffer%13#0                                                                                                     return Vector(                                                                      File "arc4_types/structs.py", line 47


// test_cases.arc4_types.structs.check(flags#0: bytes) -> void:
check:
        proto 1 0                                       //                                                       (𝕡) flags#0 |                                                                                                                 def check(flags: Flags) -> None:                                                    File "arc4_types/structs.py", line 54

check_block@0:
        frame_dig -1                                    // load flags#0 from parameters                          (𝕡) flags#0 | flags#0                                                                                                         flags: Flags                                                                        File "arc4_types/structs.py", line 54
        int 0                                           //                                                       (𝕡) flags#0 | flags#0,0                                                                                                       flags.a                                                                             File "arc4_types/structs.py", line 55
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.a                                                                             File "arc4_types/structs.py", line 55
        byte 0x00                                       //                                                       (𝕡) flags#0 | is_true%0#0,0x00                                                                                                flags.a                                                                             File "arc4_types/structs.py", line 55
        int 0                                           //                                                       (𝕡) flags#0 | is_true%0#0,0x00,0
        uncover 2                                       // load is_true%0#0 from l-stack (no copy)               (𝕡) flags#0 | 0x00,0,is_true%0#0                                                                                              flags.a                                                                             File "arc4_types/structs.py", line 55
        setbit                                          //                                                       (𝕡) flags#0 | {setbit}                                                                                                        flags.a                                                                             File "arc4_types/structs.py", line 55
        int 0                                           //                                                       (𝕡) flags#0 | tmp%1#0,0
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.a.decode()                                                                    File "arc4_types/structs.py", line 55
        assert                                          //                                                       (𝕡) flags#0 |                                                                                                                 assert flags.a.decode()                                                             File "arc4_types/structs.py", line 55
        frame_dig -1                                    // load flags#0 from parameters                          (𝕡) flags#0 | flags#0                                                                                                         flags: Flags                                                                        File "arc4_types/structs.py", line 54
        int 1                                           //                                                       (𝕡) flags#0 | flags#0,1                                                                                                       flags.b                                                                             File "arc4_types/structs.py", line 56
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.b                                                                             File "arc4_types/structs.py", line 56
        byte 0x00                                       //                                                       (𝕡) flags#0 | is_true%3#0,0x00                                                                                                flags.b                                                                             File "arc4_types/structs.py", line 56
        int 0                                           //                                                       (𝕡) flags#0 | is_true%3#0,0x00,0
        uncover 2                                       // load is_true%3#0 from l-stack (no copy)               (𝕡) flags#0 | 0x00,0,is_true%3#0                                                                                              flags.b                                                                             File "arc4_types/structs.py", line 56
        setbit                                          //                                                       (𝕡) flags#0 | {setbit}                                                                                                        flags.b                                                                             File "arc4_types/structs.py", line 56
        int 0                                           //                                                       (𝕡) flags#0 | tmp%4#0,0
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.b.decode()                                                                    File "arc4_types/structs.py", line 56
        !                                               //                                                       (𝕡) flags#0 | {!}                                                                                                             not flags.b.decode()                                                                File "arc4_types/structs.py", line 56
        assert                                          //                                                       (𝕡) flags#0 |                                                                                                                 assert not flags.b.decode()                                                         File "arc4_types/structs.py", line 56
        frame_dig -1                                    // load flags#0 from parameters                          (𝕡) flags#0 | flags#0                                                                                                         flags: Flags                                                                        File "arc4_types/structs.py", line 54
        int 2                                           //                                                       (𝕡) flags#0 | flags#0,2                                                                                                       flags.c                                                                             File "arc4_types/structs.py", line 57
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.c                                                                             File "arc4_types/structs.py", line 57
        byte 0x00                                       //                                                       (𝕡) flags#0 | is_true%7#0,0x00                                                                                                flags.c                                                                             File "arc4_types/structs.py", line 57
        int 0                                           //                                                       (𝕡) flags#0 | is_true%7#0,0x00,0
        uncover 2                                       // load is_true%7#0 from l-stack (no copy)               (𝕡) flags#0 | 0x00,0,is_true%7#0                                                                                              flags.c                                                                             File "arc4_types/structs.py", line 57
        setbit                                          //                                                       (𝕡) flags#0 | {setbit}                                                                                                        flags.c                                                                             File "arc4_types/structs.py", line 57
        int 0                                           //                                                       (𝕡) flags#0 | tmp%8#0,0
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.c.decode()                                                                    File "arc4_types/structs.py", line 57
        assert                                          //                                                       (𝕡) flags#0 |                                                                                                                 assert flags.c.decode()                                                             File "arc4_types/structs.py", line 57
        frame_dig -1                                    // load flags#0 from parameters                          (𝕡) flags#0 | flags#0                                                                                                         flags: Flags                                                                        File "arc4_types/structs.py", line 54
        int 3                                           //                                                       (𝕡) flags#0 | flags#0,3                                                                                                       flags.d                                                                             File "arc4_types/structs.py", line 58
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.d                                                                             File "arc4_types/structs.py", line 58
        byte 0x00                                       //                                                       (𝕡) flags#0 | is_true%10#0,0x00                                                                                               flags.d                                                                             File "arc4_types/structs.py", line 58
        int 0                                           //                                                       (𝕡) flags#0 | is_true%10#0,0x00,0
        uncover 2                                       // load is_true%10#0 from l-stack (no copy)              (𝕡) flags#0 | 0x00,0,is_true%10#0                                                                                             flags.d                                                                             File "arc4_types/structs.py", line 58
        setbit                                          //                                                       (𝕡) flags#0 | {setbit}                                                                                                        flags.d                                                                             File "arc4_types/structs.py", line 58
        int 0                                           //                                                       (𝕡) flags#0 | tmp%11#0,0
        getbit                                          //                                                       (𝕡) flags#0 | {getbit}                                                                                                        flags.d.decode()                                                                    File "arc4_types/structs.py", line 58
        !                                               //                                                       (𝕡) flags#0 | {!}                                                                                                             not flags.d.decode()                                                                File "arc4_types/structs.py", line 58
        assert                                          //                                                       (𝕡) flags#0 |                                                                                                                 assert not flags.d.decode()                                                         File "arc4_types/structs.py", line 58
        retsub                                          //


// test_cases.arc4_types.structs.nested_decode(vector_flags#0: bytes) -> void:
nested_decode:
        proto 1 0                                       //                                                       (𝕡) vector_flags#0 |                                                                                                          def nested_decode(vector_flags: VectorFlags) -> None:                               File "arc4_types/structs.py", line 62

nested_decode_block@0:
        frame_dig -1                                    // load vector_flags#0 from parameters                   (𝕡) vector_flags#0 | vector_flags#0                                                                                           vector_flags: VectorFlags                                                           File "arc4_types/structs.py", line 62
        int 0                                           //                                                       (𝕡) vector_flags#0 | vector_flags#0,0                                                                                         vector_flags.vector                                                                 File "arc4_types/structs.py", line 63
        int 16                                          //                                                       (𝕡) vector_flags#0 | vector_flags#0,0,16                                                                                      vector_flags.vector                                                                 File "arc4_types/structs.py", line 63
        extract3                                        //                                                       (𝕡) vector_flags#0 | {extract3}                                                                                               vector_flags.vector                                                                 File "arc4_types/structs.py", line 63
        int 0                                           //                                                       (𝕡) vector_flags#0 | tmp%0#0,0                                                                                                vector_flags.vector.x                                                               File "arc4_types/structs.py", line 63
        int 8                                           //                                                       (𝕡) vector_flags#0 | tmp%0#0,0,8                                                                                              vector_flags.vector.x                                                               File "arc4_types/structs.py", line 63
        extract3                                        //                                                       (𝕡) vector_flags#0 | {extract3}                                                                                               vector_flags.vector.x                                                               File "arc4_types/structs.py", line 63
        btoi                                            //                                                       (𝕡) vector_flags#0 | {btoi}                                                                                                   vector_flags.vector.x.decode()                                                      File "arc4_types/structs.py", line 63
        int 35382882839                                 //                                                       (𝕡) vector_flags#0 | tmp%2#0,35382882839                                                                                      35382882839                                                                         File "arc4_types/structs.py", line 63
        ==                                              //                                                       (𝕡) vector_flags#0 | {==}                                                                                                     vector_flags.vector.x.decode() == 35382882839                                       File "arc4_types/structs.py", line 63
        assert                                          //                                                       (𝕡) vector_flags#0 |                                                                                                          assert vector_flags.vector.x.decode() == 35382882839                                File "arc4_types/structs.py", line 63
        frame_dig -1                                    // load vector_flags#0 from parameters                   (𝕡) vector_flags#0 | vector_flags#0                                                                                           vector_flags: VectorFlags                                                           File "arc4_types/structs.py", line 62
        int 16                                          //                                                       (𝕡) vector_flags#0 | vector_flags#0,16                                                                                        vector_flags.flags                                                                  File "arc4_types/structs.py", line 64
        int 1                                           //                                                       (𝕡) vector_flags#0 | vector_flags#0,16,1                                                                                      vector_flags.flags                                                                  File "arc4_types/structs.py", line 64
        extract3                                        //                                                       (𝕡) vector_flags#0 | {extract3}                                                                                               vector_flags.flags                                                                  File "arc4_types/structs.py", line 64
        int 2                                           //                                                       (𝕡) vector_flags#0 | tmp%4#0,2                                                                                                vector_flags.flags.c                                                                File "arc4_types/structs.py", line 64
        getbit                                          //                                                       (𝕡) vector_flags#0 | {getbit}                                                                                                 vector_flags.flags.c                                                                File "arc4_types/structs.py", line 64
        byte 0x00                                       //                                                       (𝕡) vector_flags#0 | is_true%5#0,0x00                                                                                         vector_flags.flags.c                                                                File "arc4_types/structs.py", line 64
        int 0                                           //                                                       (𝕡) vector_flags#0 | is_true%5#0,0x00,0
        uncover 2                                       // load is_true%5#0 from l-stack (no copy)               (𝕡) vector_flags#0 | 0x00,0,is_true%5#0                                                                                       vector_flags.flags.c                                                                File "arc4_types/structs.py", line 64
        setbit                                          //                                                       (𝕡) vector_flags#0 | {setbit}                                                                                                 vector_flags.flags.c                                                                File "arc4_types/structs.py", line 64
        int 0                                           //                                                       (𝕡) vector_flags#0 | tmp%6#0,0
        getbit                                          //                                                       (𝕡) vector_flags#0 | {getbit}                                                                                                 vector_flags.flags.c.decode()                                                       File "arc4_types/structs.py", line 64
        assert                                          //                                                       (𝕡) vector_flags#0 |                                                                                                          assert vector_flags.flags.c.decode()                                                File "arc4_types/structs.py", line 64
        retsub                                          //

