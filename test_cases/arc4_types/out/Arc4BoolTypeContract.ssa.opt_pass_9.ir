contract test_cases.arc4_types.bool.Arc4BoolTypeContract:
    program approval:
        subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program() -> uint64:
            block@0: // L12
                test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff(0x80, 0x00)
                let array_data%0#8: bytes = 0xff
                let array_data%0#9: bytes = (concat array_data%0#8 0x80)
                let array_data%0#10: bytes = (setbit array_data%0#9 9u 1u)
                let array_data%0#11: bytes = (setbit array_data%0#10 10u 1u)
                let static_boolean_array#0: bytes = (setbit array_data%0#11 11u 1u)
                let tmp%14#0: uint64 = (== static_boolean_array#0 0xfff0)
                (assert tmp%14#0)
                let is_true%10#0: uint64 = (getbit static_boolean_array#0 0u)
                let tmp%15#0: bytes = (setbit 0x00 0u is_true%10#0)
                let tmp%17#0: uint64 = (== tmp%15#0 0x80)
                (assert tmp%17#0) // Single boolean can be unpacked
                let is_true%11#0: uint64 = (getbit static_boolean_array#0 11u)
                let tmp%19#0: bytes = (setbit 0x00 0u is_true%11#0)
                let tmp%21#0: uint64 = (== tmp%19#0 0x80)
                (assert tmp%21#0) // Single boolean can be unpacked
                return 1u
        
        subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff(true: bytes, false: bytes) -> void:
            block@0: // L46
                let tmp%0#0: uint64 = (getbit true#0 0u)
                (assert tmp%0#0)
                let tmp%1#0: uint64 = (getbit false#0 0u)
                let tmp%2#0: uint64 = (! tmp%1#0)
                (assert tmp%2#0)
                let tmp%4#0: bytes = (setbit 0x00 0u tmp%0#0)
                let tmp%5#0: uint64 = (== true#0 tmp%4#0)
                (assert tmp%5#0)
                let tmp%7#0: bytes = (setbit 0x00 0u tmp%1#0)
                let tmp%8#0: uint64 = (== false#0 tmp%7#0)
                (assert tmp%8#0)
                return 
    
    program clear-state:
        subroutine test_cases.arc4_types.bool.Arc4BoolTypeContract.clear_state_program() -> uint64:
            block@0: // L43
                return 1u