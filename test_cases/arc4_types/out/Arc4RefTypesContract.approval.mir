// Op                                             //                                                     Op Description                                                                 Stack (out)                                                                          Live (out)        X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.arc4_types.reference_types.Arc4RefTypesContract.approval_program() -> uint64:
main_block@0:
    txn Sender                                    //                                                                                                                                    {txn}                                                                                                                                                                                                       m an account no need to check the length as we assume the\n# Account is valid\nsender_address = a... arc4_types/reference_types.py:6-8
    //                                            virtual: store sender_address#0 to l-stack (no copy)   sender_address#0                                                                                                                                                                      # When creating an address from an account no need to check the length as we assume the\n# Accoun... arc4_types/reference_types.py:6-8
    txn Sender                                    //                                                                                                                                    sender_address#0,{txn}                                                                                                                                                                                      op.Txn.sender                                                                                        arc4_types/reference_types.py:9
    //                                            virtual: store tmp%0#0 to l-stack (no copy)            sender_address#0,tmp%0#0                                                                                                                                                              op.Txn.sender                                                                                        arc4_types/reference_types.py:9
    dig 1                                         //                                                     load sender_address#0 from l-stack (copy)                                      sender_address#0,tmp%0#0,sender_address#0                                                                                                                                                                   sender_address == op.Txn.sender                                                                      arc4_types/reference_types.py:9
    uncover 1                                     //                                                     load tmp%0#0 from l-stack (no copy)                                            sender_address#0,sender_address#0,tmp%0#0                                                                                                                                                                   sender_address == op.Txn.sender                                                                      arc4_types/reference_types.py:9
    ==                                            //                                                                                                                                    sender_address#0,{==}                                                                                                                                                                                       sender_address == op.Txn.sender                                                                      arc4_types/reference_types.py:9
    //                                            virtual: store tmp%1#0 to l-stack (no copy)            sender_address#0,tmp%1#0                                                                                                                                                              sender_address == op.Txn.sender                                                                      arc4_types/reference_types.py:9
    //                                            virtual: load tmp%1#0 from l-stack (no copy)           sender_address#0,tmp%1#0                                                                                                                                                              assert sender_address == op.Txn.sender                                                               arc4_types/reference_types.py:9
    assert                                        //                                                                                                                                    sender_address#0                                                                                                                                                                                            assert sender_address == op.Txn.sender                                                               arc4_types/reference_types.py:9
    txn Sender                                    //                                                                                                                                    sender_address#0,{txn}                                                                                                                                                                                      bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecked_address = a... arc4_types/reference_types.py:10-12
    dup                                           //                                                     store checked_address#0 to l-stack (copy)                                      sender_address#0,checked_address#0,checked_address#0                                                                                                                                                        bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecked_address = a... arc4_types/reference_types.py:10-12
    cover 2                                       //                                                     store checked_address#0 to f-stack                                             (𝕗) checked_address#0 | sender_address#0,checked_address#0                                                                                                                                                  bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecked_address = a... arc4_types/reference_types.py:10-12
    dup                                           //                                                     load checked_address#0 from l-stack (copy)                                     (𝕗) checked_address#0 | sender_address#0,checked_address#0,checked_address#0                                                                                                                                address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    len                                           //                                                                                                                                    (𝕗) checked_address#0 | sender_address#0,checked_address#0,{len}                                                                                                                                            address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    //                                            virtual: store tmp%2#0 to l-stack (no copy)            (𝕗) checked_address#0 | sender_address#0,checked_address#0,tmp%2#0                                                                                                                    address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    int 32                                        //                                                                                                                                    (𝕗) checked_address#0 | sender_address#0,checked_address#0,tmp%2#0,32                                                                                                                                       address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    uncover 1                                     //                                                     load tmp%2#0 from l-stack (no copy)                                            (𝕗) checked_address#0 | sender_address#0,checked_address#0,32,tmp%2#0                                                                                                                                       address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    ==                                            //                                                                                                                                    (𝕗) checked_address#0 | sender_address#0,checked_address#0,{==}                                                                                                                                             address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    //                                            virtual: store tmp%3#0 to l-stack (no copy)            (𝕗) checked_address#0 | sender_address#0,checked_address#0,tmp%3#0                                                                                                                    address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    //                                            virtual: load tmp%3#0 from l-stack (no copy)           (𝕗) checked_address#0 | sender_address#0,checked_address#0,tmp%3#0                                                                                                                    address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    assert // Address length is 32 bytes          //                                                                                                                                    (𝕗) checked_address#0 | sender_address#0,checked_address#0                                                                                                                                                  address from bytes, we check the length is 32 as we don't know the\n# source of the bytes\nchecke... arc4_types/reference_types.py:10-12
    txn Sender                                    //                                                                                                                                    (𝕗) checked_address#0 | sender_address#0,checked_address#0,{txn}                                                                                                                                            rformed as per all implementations of\n# from_bytes\nunchecked_address = arc4.Address.from_bytes(... arc4_types/reference_types.py:13-15
    cover 2                                       //                                                     store unchecked_address#0 to f-stack                                           (𝕗) checked_address#0,unchecked_address#0 | sender_address#0,checked_address#0                                                                                                                              # When using from_bytes, no validation is performed as per all implementations of\n# from_bytes\n... arc4_types/reference_types.py:13-15
    //                                            virtual: load sender_address#0 from l-stack (no copy)  (𝕗) checked_address#0,unchecked_address#0 | checked_address#0,sender_address#0                                                                                                        sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    //                                            virtual: load checked_address#0 from l-stack (no copy) (𝕗) checked_address#0,unchecked_address#0 | sender_address#0,checked_address#0                                                                                                        sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    ==                                            //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | {==}                                                                                                                                                            sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    //                                            virtual: store tmp%4#0 to l-stack (no copy)            (𝕗) checked_address#0,unchecked_address#0 | tmp%4#0                                                                                                                                   sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    //                                            virtual: load tmp%4#0 from l-stack (no copy)           (𝕗) checked_address#0,unchecked_address#0 | tmp%4#0                                                                                                                                   sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    bz main_bool_false@3                          //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 |                                                                                                                                                                 sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    // Implicit fall through to main_and_contd@1  //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 |                                                                                                                                                                 sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16

main_and_contd@1:
    dig 1                                         //                                                     load checked_address#0 from f-stack                                            (𝕗) checked_address#0,unchecked_address#0 | checked_address#0                                                                                                                                               checked_address == unchecked_address                                                                 arc4_types/reference_types.py:16
    dig 1                                         //                                                     load unchecked_address#0 from f-stack                                          (𝕗) checked_address#0,unchecked_address#0 | checked_address#0,unchecked_address#0                                                                                                                           checked_address == unchecked_address                                                                 arc4_types/reference_types.py:16
    ==                                            //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | {==}                                                                                                                                                            checked_address == unchecked_address                                                                 arc4_types/reference_types.py:16
    //                                            virtual: store tmp%5#0 to l-stack (no copy)            (𝕗) checked_address#0,unchecked_address#0 | tmp%5#0                                                                                                                                   checked_address == unchecked_address                                                                 arc4_types/reference_types.py:16
    //                                            virtual: load tmp%5#0 from l-stack (no copy)           (𝕗) checked_address#0,unchecked_address#0 | tmp%5#0                                                                                                                                   sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    bz main_bool_false@3                          //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 |                                                                                                                                                                 sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16
    // Implicit fall through to main_bool_true@2  //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 |                                                                                                                                                                 sender_address == checked_address and checked_address == unchecked_address                           arc4_types/reference_types.py:16

main_bool_true@2:
    int 1                                         //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | 1
    //                                            virtual: store and_result%0#0 to x-stack (no copy)     (𝕗) checked_address#0,unchecked_address#0 | (𝕏) and_result%0#0 |
    b main_bool_merge@4                           //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | (𝕏) and_result%0#0 |                                       and_result%0#0

main_bool_false@3:
    int 0                                         //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | 0
    //                                            virtual: store and_result%0#0 to x-stack (no copy)     (𝕗) checked_address#0,unchecked_address#0 | (𝕏) and_result%0#0 |
    // Implicit fall through to main_bool_merge@4 //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | (𝕏) and_result%0#0 |                                       and_result%0#0

main_bool_merge@4:
    //                                            virtual: load and_result%0#0 from x-stack              (𝕗) checked_address#0,unchecked_address#0 | and_result%0#0                                                                                                          and_result%0#0    assert sender_address == checked_address and checked_address == unchecked_address                    arc4_types/reference_types.py:16
    assert                                        //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 |                                                                                                                                                                 assert sender_address == checked_address and checked_address == unchecked_address                    arc4_types/reference_types.py:16
    int 1                                         //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 | 1                                                                                                                                                               True                                                                                                 arc4_types/reference_types.py:19
    return                                        //                                                                                                                                    (𝕗) checked_address#0,unchecked_address#0 |                                                                                                                                                                 return True                                                                                          arc4_types/reference_types.py:19

