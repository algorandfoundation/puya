{
    "name": "MutableParams2",
    "structs": {},
    "methods": [
        {
            "name": "test_array_rebinding",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        28
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        45
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        31
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDEKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjQKICAgIC8vIGNsYXNzIE11dGFibGVQYXJhbXMyKGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A2CiAgICBwdXNoYnl0ZXMgMHg2YWM0YTU1NyAvLyBtZXRob2QgInRlc3RfYXJyYXlfcmViaW5kaW5nKCl2b2lkIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl90ZXN0X2FycmF5X3JlYmluZGluZ19yb3V0ZUAzCgptYWluX2FmdGVyX2lmX2Vsc2VAMTA6CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weTo0CiAgICAvLyBjbGFzcyBNdXRhYmxlUGFyYW1zMihhcmM0LkFSQzRDb250cmFjdCk6CiAgICBpbnRjXzAgLy8gMAogICAgcmV0dXJuCgptYWluX3Rlc3RfYXJyYXlfcmViaW5kaW5nX3JvdXRlQDM6CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weTo1CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIHRlc3RfYXJyYXlfcmViaW5kaW5nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6NAogICAgLy8gY2xhc3MgTXV0YWJsZVBhcmFtczIoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLmFyYzRfdHlwZXMubXV0YWJsZV9wYXJhbXMyLk11dGFibGVQYXJhbXMyLnRlc3RfYXJyYXlfcmViaW5kaW5nKCkgLT4gdm9pZDoKdGVzdF9hcnJheV9yZWJpbmRpbmc6CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weTo1LTYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgdGVzdF9hcnJheV9yZWJpbmRpbmcoc2VsZikgLT4gTm9uZToKICAgIHByb3RvIDAgMAogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6NwogICAgLy8gYSA9IGFyYzQuRHluYW1pY0J5dGVzKDApCiAgICBwdXNoYnl0ZXMgMHgwMDAxMDAKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjgKICAgIC8vIHNlbGYubWF5YmVfbW9kaWZ5X2FycmF5KGEsIGFzc2lnbl9sb2NhbD1UcnVlKQogICAgaW50Y18xIC8vIDEKICAgIGNhbGxzdWIgbWF5YmVfbW9kaWZ5X2FycmF5CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weTo5CiAgICAvLyBhc3NlcnQgYSA9PSBhcmM0LkR5bmFtaWNCeXRlcygwLCAxKQogICAgcHVzaGJ5dGVzIDB4MDAwMjAwMDEKICAgID09CiAgICBhc3NlcnQKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjExCiAgICAvLyBhID0gYXJjNC5EeW5hbWljQnl0ZXMoMSkKICAgIHB1c2hieXRlcyAweDAwMDEwMQogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6MTIKICAgIC8vIHNlbGYubWF5YmVfbW9kaWZ5X2FycmF5KGEsIGFzc2lnbl9sb2NhbD1GYWxzZSkKICAgIGludGNfMCAvLyAwCiAgICBjYWxsc3ViIG1heWJlX21vZGlmeV9hcnJheQogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6MTMKICAgIC8vIGFzc2VydCBhID09IGFyYzQuRHluYW1pY0J5dGVzKDEsIDQyLCA0KQogICAgcHVzaGJ5dGVzIDB4MDAwMzAxMmEwNAogICAgPT0KICAgIGFzc2VydAogICAgcmV0c3ViCgoKLy8gdGVzdF9jYXNlcy5hcmM0X3R5cGVzLm11dGFibGVfcGFyYW1zMi5NdXRhYmxlUGFyYW1zMi5tYXliZV9tb2RpZnlfYXJyYXkoYTogYnl0ZXMsIGFzc2lnbl9sb2NhbDogdWludDY0KSAtPiBieXRlczoKbWF5YmVfbW9kaWZ5X2FycmF5OgogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6MTUtMTYKICAgIC8vIEBzdWJyb3V0aW5lCiAgICAvLyBkZWYgbWF5YmVfbW9kaWZ5X2FycmF5KHNlbGYsIGE6IGFyYzQuRHluYW1pY0J5dGVzLCAqLCBhc3NpZ25fbG9jYWw6IGJvb2wpIC0+IE5vbmU6ICAjIHYwCiAgICBwcm90byAyIDEKICAgIGludGNfMCAvLyAwCiAgICBpbnRjXzEgLy8gMQogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6MTcKICAgIC8vIGlmIGFzc2lnbl9sb2NhbDoKICAgIGZyYW1lX2RpZyAtMQogICAgYnogbWF5YmVfbW9kaWZ5X2FycmF5X2Vsc2VfYm9keUAxMAogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6MTgKICAgIC8vIGEuYXBwZW5kKGFyYzQuQnl0ZSgxKSkgICMgdjE6IG1vZGlmeSBvdXQKICAgIGZyYW1lX2RpZyAtMgogICAgZXh0cmFjdCAyIDAKICAgIHB1c2hieXRlcyAweDAxCiAgICBjb25jYXQKICAgIGR1cAogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgc3dhcAogICAgY29uY2F0CiAgICBmcmFtZV9idXJ5IC0yCiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weToyMQogICAgLy8gYSA9IGFyYzQuRHluYW1pY0J5dGVzKDEsIDIsIDQpICAjIHY0OiBsb2NhbCBvbmx5CiAgICBwdXNoYnl0ZXMgMHgwMDAzMDEwMjA0CiAgICBpbnRjXzAgLy8gMAogICAgZnJhbWVfYnVyeSAxCiAgICBmcmFtZV9kaWcgLTIKICAgIGZyYW1lX2J1cnkgMAogICAgZnJhbWVfYnVyeSAtMgoKbWF5YmVfbW9kaWZ5X2FycmF5X2FmdGVyX2lmX2Vsc2VAMTM6CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weToyNQogICAgLy8gYS5hcHBlbmQoYXJjNC5CeXRlKDQpKSAgIyB2NjogbW9kaWZ5IG91dCBJRiBub3QgYiBFTFNFIGxvY2FsIG9ubHkKICAgIGZyYW1lX2RpZyAtMgogICAgZXh0cmFjdCAyIDAKICAgIHB1c2hieXRlcyAweDA0CiAgICBjb25jYXQKICAgIGR1cAogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgc3dhcAogICAgY29uY2F0CiAgICBmcmFtZV9idXJ5IC0yCiAgICBmcmFtZV9kaWcgMQogICAgYnogbWF5YmVfbW9kaWZ5X2FycmF5X2FmdGVyX2lmX2Vsc2VAMTUKICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfYnVyeSAwCgptYXliZV9tb2RpZnlfYXJyYXlfYWZ0ZXJfaWZfZWxzZUAxNToKICAgIHJldHN1YgoKbWF5YmVfbW9kaWZ5X2FycmF5X2Vsc2VfYm9keUAxMDoKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjIzCiAgICAvLyBhLmFwcGVuZChhcmM0LkJ5dGUoNDIpKSAgIyB2NTogbW9kaWZ5IG91dAogICAgZnJhbWVfZGlnIC0yCiAgICBleHRyYWN0IDIgMAogICAgcHVzaGJ5dGVzIDB4MmEKICAgIGNvbmNhdAogICAgZHVwCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGR1cG4gMgogICAgZnJhbWVfYnVyeSAtMgogICAgZnJhbWVfYnVyeSAwCiAgICBmcmFtZV9idXJ5IC0yCiAgICBiIG1heWJlX21vZGlmeV9hcnJheV9hZnRlcl9pZl9lbHNlQDEzCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAExG0EAG4AEasSlVzYaAI4BAAIiQzEZFEQxGESIAA0jQzEZQP/tMRgURCNDigAAgAMAAQAjiAAbgAQAAgABEkSAAwABASKIAAqABQADASoEEkSJigIBIiOL/0EAQIv+VwIAgAEBUEkVFlcGAkxQjP6ABQADAQIEIowBi/6MAIz+i/5XAgCAAQRQSRUWVwYCTFCM/osBQQAEi/6MAImL/lcCAIABKlBJFRZXBgJMUEcCjP6MAIz+Qv/H",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}