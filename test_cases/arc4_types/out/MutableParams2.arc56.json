{
    "name": "MutableParams2",
    "structs": {},
    "methods": [
        {
            "name": "test_array_rebinding",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        27
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        44
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        30
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        98,
                        134,
                        164
                    ],
                    "errorMessage": "max array length exceeded"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDAKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjQKICAgIC8vIGNsYXNzIE11dGFibGVQYXJhbXMyKGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A2CiAgICBwdXNoYnl0ZXMgMHg2YWM0YTU1NyAvLyBtZXRob2QgInRlc3RfYXJyYXlfcmViaW5kaW5nKCl2b2lkIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl90ZXN0X2FycmF5X3JlYmluZGluZ19yb3V0ZUAzCgptYWluX2FmdGVyX2lmX2Vsc2VAMTA6CiAgICBlcnIKCm1haW5fdGVzdF9hcnJheV9yZWJpbmRpbmdfcm91dGVAMzoKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgdGVzdF9hcnJheV9yZWJpbmRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weTo0CiAgICAvLyBjbGFzcyBNdXRhYmxlUGFyYW1zMihhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEwCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RfY2FzZXMuYXJjNF90eXBlcy5tdXRhYmxlX3BhcmFtczIuTXV0YWJsZVBhcmFtczIudGVzdF9hcnJheV9yZWJpbmRpbmcoKSAtPiB2b2lkOgp0ZXN0X2FycmF5X3JlYmluZGluZzoKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjcKICAgIC8vIGEgPSBhcmM0LkR5bmFtaWNCeXRlcygwKQogICAgcHVzaGJ5dGVzIDB4MDAwMTAwCiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weTo4CiAgICAvLyBzZWxmLm1heWJlX21vZGlmeV9hcnJheShhLCBhc3NpZ25fbG9jYWw9VHJ1ZSkKICAgIGludGNfMCAvLyAxCiAgICBjYWxsc3ViIG1heWJlX21vZGlmeV9hcnJheQogICAgLy8gYXJjNF90eXBlcy9tdXRhYmxlX3BhcmFtczIucHk6OQogICAgLy8gYXNzZXJ0IGEgPT0gYXJjNC5EeW5hbWljQnl0ZXMoMCwgMSkKICAgIHB1c2hieXRlcyAweDAwMDIwMDAxCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBhcmM0X3R5cGVzL211dGFibGVfcGFyYW1zMi5weToxMQogICAgLy8gYSA9IGFyYzQuRHluYW1pY0J5dGVzKDEpCiAgICBwdXNoYnl0ZXMgMHgwMDAxMDEKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjEyCiAgICAvLyBzZWxmLm1heWJlX21vZGlmeV9hcnJheShhLCBhc3NpZ25fbG9jYWw9RmFsc2UpCiAgICBpbnRjXzEgLy8gMAogICAgY2FsbHN1YiBtYXliZV9tb2RpZnlfYXJyYXkKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjEzCiAgICAvLyBhc3NlcnQgYSA9PSBhcmM0LkR5bmFtaWNCeXRlcygxLCA0MiwgNCkKICAgIHB1c2hieXRlcyAweDAwMDMwMTJhMDQKICAgID09CiAgICBhc3NlcnQKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMuYXJjNF90eXBlcy5tdXRhYmxlX3BhcmFtczIuTXV0YWJsZVBhcmFtczIubWF5YmVfbW9kaWZ5X2FycmF5KGE6IGJ5dGVzLCBhc3NpZ25fbG9jYWw6IHVpbnQ2NCkgLT4gYnl0ZXM6Cm1heWJlX21vZGlmeV9hcnJheToKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjE1LTE2CiAgICAvLyBAc3Vicm91dGluZQogICAgLy8gZGVmIG1heWJlX21vZGlmeV9hcnJheShzZWxmLCBhOiBhcmM0LkR5bmFtaWNCeXRlcywgKiwgYXNzaWduX2xvY2FsOiBib29sKSAtPiBOb25lOiAgIyB2MAogICAgcHJvdG8gMiAxCiAgICBpbnRjXzEgLy8gMAogICAgaW50Y18wIC8vIDEKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjE3CiAgICAvLyBpZiBhc3NpZ25fbG9jYWw6CiAgICBmcmFtZV9kaWcgLTEKICAgIGJ6IG1heWJlX21vZGlmeV9hcnJheV9lbHNlX2JvZHlAMTAKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjE4CiAgICAvLyBhLmFwcGVuZChhcmM0LkJ5dGUoMSkpICAjIHYxOiBtb2RpZnkgb3V0CiAgICBmcmFtZV9kaWcgLTIKICAgIHB1c2hieXRlcyAweDAxCiAgICBjb25jYXQgLy8gb24gZXJyb3I6IG1heCBhcnJheSBsZW5ndGggZXhjZWVkZWQKICAgIGZyYW1lX2RpZyAtMgogICAgaW50Y18xIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHJlcGxhY2UyIDAKICAgIGZyYW1lX2J1cnkgLTIKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjIxCiAgICAvLyBhID0gYXJjNC5EeW5hbWljQnl0ZXMoMSwgMiwgNCkgICMgdjQ6IGxvY2FsIG9ubHkKICAgIHB1c2hieXRlcyAweDAwMDMwMTAyMDQKICAgIGludGNfMSAvLyAwCiAgICBmcmFtZV9idXJ5IDEKICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfYnVyeSAwCiAgICBmcmFtZV9idXJ5IC0yCgptYXliZV9tb2RpZnlfYXJyYXlfYWZ0ZXJfaWZfZWxzZUAxMzoKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjI1CiAgICAvLyBhLmFwcGVuZChhcmM0LkJ5dGUoNCkpICAjIHY2OiBtb2RpZnkgb3V0IElGIG5vdCBiIEVMU0UgbG9jYWwgb25seQogICAgZnJhbWVfZGlnIC0yCiAgICBwdXNoYnl0ZXMgMHgwNAogICAgY29uY2F0IC8vIG9uIGVycm9yOiBtYXggYXJyYXkgbGVuZ3RoIGV4Y2VlZGVkCiAgICBmcmFtZV9kaWcgLTIKICAgIGludGNfMSAvLyAwCiAgICBleHRyYWN0X3VpbnQxNgogICAgaW50Y18wIC8vIDEKICAgICsKICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICByZXBsYWNlMiAwCiAgICBmcmFtZV9idXJ5IC0yCiAgICBmcmFtZV9kaWcgMQogICAgYnogbWF5YmVfbW9kaWZ5X2FycmF5X2FmdGVyX2lmX2Vsc2VAMTUKICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfYnVyeSAwCgptYXliZV9tb2RpZnlfYXJyYXlfYWZ0ZXJfaWZfZWxzZUAxNToKICAgIHJldHN1YgoKbWF5YmVfbW9kaWZ5X2FycmF5X2Vsc2VfYm9keUAxMDoKICAgIC8vIGFyYzRfdHlwZXMvbXV0YWJsZV9wYXJhbXMyLnB5OjIzCiAgICAvLyBhLmFwcGVuZChhcmM0LkJ5dGUoNDIpKSAgIyB2NTogbW9kaWZ5IG91dAogICAgZnJhbWVfZGlnIC0yCiAgICBwdXNoYnl0ZXMgMHgyYQogICAgY29uY2F0IC8vIG9uIGVycm9yOiBtYXggYXJyYXkgbGVuZ3RoIGV4Y2VlZGVkCiAgICBmcmFtZV9kaWcgLTIKICAgIGludGNfMSAvLyAwCiAgICBleHRyYWN0X3VpbnQxNgogICAgaW50Y18wIC8vIDEKICAgICsKICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICByZXBsYWNlMiAwCiAgICBkdXBuIDIKICAgIGZyYW1lX2J1cnkgLTIKICAgIGZyYW1lX2J1cnkgMAogICAgZnJhbWVfYnVyeSAtMgogICAgYiBtYXliZV9tb2RpZnlfYXJyYXlfYWZ0ZXJfaWZfZWxzZUAxMwo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAxG0EAGoAEasSlVzYaAI4BAAEAMRkURDEYRIgADSJDMRlA/+4xGBREIkOAAwABACKIABuABAACAAESRIADAAEBI4gACoAFAAMBKgQSRImKAgEjIov/QQBCi/6AAQFQi/4jWSIIFlcGAlwAjP6ABQADAQIEI4wBi/6MAIz+i/6AAQRQi/4jWSIIFlcGAlwAjP6LAUEABIv+jACJi/6AASpQi/4jWSIIFlcGAlwARwKM/owAjP5C/8U=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}