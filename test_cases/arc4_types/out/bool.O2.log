PC  Teal                    Stack                                                            
1   intcblock 0 8 5 7                                                                        
7   pushbytes ""            0x                                                               
9   dupn 2                  0x, 0x, 0x                                                       
11  txn NumAppArgs          0x, 0x, 0x, 0                                                    
13  !                       0x, 0x, 0x, 1                                                    
14  pushbytes 0x00          0x, 0x, 0x, 1, 0x00                                              
17  intc_0                  0x, 0x, 0x, 1, 0x00, 0                                           
18  uncover 2               0x, 0x, 0x, 0x00, 0, 1                                           
20  setbit                  0x, 0x, 0x, 0x80                                                 
21  intc_0                  0x, 0x, 0x, 0x80, 0                                              
22  getbit                  0x, 0x, 0x, 1                                                    
23  assert                  0x, 0x, 0x                                                       
24  callsub get_arr         0x, 0x, 0x                                                       
157 proto 0 1               0x, 0x, 0x                                                       
160 pushbytes 0x0000        0x, 0x, 0x, 0x0000                                               
164 retsub                  0x, 0x, 0x, 0x0000                                               
27  dup                     0x, 0x, 0x, 0x0000, 0x0000                                       
28  intc_0                  0x, 0x, 0x, 0x0000, 0x0000, 0                                    
29  extract_uint16          0x, 0x, 0x, 0x0000, 0                                            
30  dup                     0x, 0x, 0x, 0x0000, 0, 0                                         
31  cover 2                 0x, 0x, 0x, 0, 0x0000, 0                                         
33  dup                     0x, 0x, 0x, 0, 0x0000, 0, 0                                      
34  intc_2                  0x, 0x, 0x, 0, 0x0000, 0, 0, 5                                   
35  +                       0x, 0x, 0x, 0, 0x0000, 0, 5                                      
36  dup                     0x, 0x, 0x, 0, 0x0000, 0, 5, 5                                   
37  itob                    0x, 0x, 0x, 0, 0x0000, 0, 5, 0x0000000000000005                  
38  extract 6 0             0x, 0x, 0x, 0, 0x0000, 0, 5, 0x0005                              
41  uncover 3               0x, 0x, 0x, 0, 0, 5, 0x0005, 0x0000                              
43  swap                    0x, 0x, 0x, 0, 0, 5, 0x0000, 0x0005                              
44  replace2 0              0x, 0x, 0x, 0, 0, 5, 0x0005                                      
46  dup                     0x, 0x, 0x, 0, 0, 5, 0x0005, 0x0005                              
47  uncover 2               0x, 0x, 0x, 0, 0, 0x0005, 0x0005, 5                              
49  uncover 3               0x, 0x, 0x, 0, 0x0005, 0x0005, 5, 0                              
51  intc_3                  0x, 0x, 0x, 0, 0x0005, 0x0005, 5, 0, 7                           
52  +                       0x, 0x, 0x, 0, 0x0005, 0x0005, 5, 7                              
53  intc_1                  0x, 0x, 0x, 0, 0x0005, 0x0005, 5, 7, 8                           
54  /                       0x, 0x, 0x, 0, 0x0005, 0x0005, 5, 0                              
55  dup                     0x, 0x, 0x, 0, 0x0005, 0x0005, 5, 0, 0                           
56  cover 3                 0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 5, 0                           
58  swap                    0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 0, 5                           
59  intc_3                  0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 0, 5, 7                        
60  +                       0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 0, 12                          
61  intc_1                  0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 0, 12, 8                       
62  /                       0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 0, 1                           
63  dup                     0x, 0x, 0x, 0, 0x0005, 0, 0x0005, 0, 1, 1                        
64  cover 3                 0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 0, 1                        
66  <                       0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 1                           
67  bz main_after_if_else@5 0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005                              
70  dig 1                   0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 1                           
72  dig 3                   0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 1, 0                        
74  -                       0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 1                           
75  bzero                   0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 0x00                        
76  dig 4                   0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 0x00, 0x0005                
78  swap                    0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 0x0005, 0x00                
79  concat                  0x, 0x, 0x, 0, 0x0005, 0, 1, 0x0005, 0x000500                    
80  bury 1                  0x, 0x, 0x, 0, 0x0005, 0, 1, 0x000500                            
82  dup                     0x, 0x, 0x, 0, 0x0005, 0, 1, 0x000500, 0x000500                  
83  bury 4                  0x, 0x, 0x, 0, 0x000500, 0, 1, 0x000500                          
85  intc_0                  0x, 0x, 0x, 0, 0x000500, 0, 1, 0x000500, 0                       
86  bury 8                  0, 0x, 0x, 0, 0x000500, 0, 1, 0x000500                           
88  dig 4                   0, 0x, 0x, 0, 0x000500, 0, 1, 0x000500, 0                        
90  pushint 16              0, 0x, 0x, 0, 0x000500, 0, 1, 0x000500, 0, 16                    
92  +                       0, 0x, 0x, 0, 0x000500, 0, 1, 0x000500, 16                       
93  dup                     0, 0x, 0x, 0, 0x000500, 0, 1, 0x000500, 16, 16                   
94  bury 7                  0, 0x, 16, 0, 0x000500, 0, 1, 0x000500, 16                       
96  intc_2                  0, 0x, 16, 0, 0x000500, 0, 1, 0x000500, 16, 5                    
97  +                       0, 0x, 16, 0, 0x000500, 0, 1, 0x000500, 21                       
98  bury 7                  0, 21, 16, 0, 0x000500, 0, 1, 0x000500                           
100 dig 5                   0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 16                       
102 dig 7                   0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 16, 21                   
104 <                       0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 1                        
105 bz main_after_while@8   0, 21, 16, 0, 0x000500, 0, 1, 0x000500                           
108 pushbytes 0x8000800080  0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0x8000800080             
115 dig 8                   0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0x8000800080, 0          
117 dup                     0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0x8000800080, 0, 0       
118 cover 2                 0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 0x8000800080, 0       
120 getbit                  0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 1                     
121 dig 5                   0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 1, 0x000500           
123 dig 8                   0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 1, 0x000500, 16       
125 dup                     0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 1, 0x000500, 16, 16   
126 cover 3                 0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 16, 1, 0x000500, 16   
128 uncover 2               0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 16, 0x000500, 16, 1   
130 setbit                  0, 21, 16, 0, 0x000500, 0, 1, 0x000500, 0, 16, 0x000580          
131 bury 6                  0, 21, 16, 0, 0x000580, 0, 1, 0x000500, 0, 16                    
133 pushint 1               0, 21, 16, 0, 0x000580, 0, 1, 0x000500, 0, 16, 1                 
135 +                       0, 21, 16, 0, 0x000580, 0, 1, 0x000500, 0, 17                    
136 bury 7                  0, 21, 17, 0, 0x000580, 0, 1, 0x000500, 0                        
138 intc_1                  0, 21, 17, 0, 0x000580, 0, 1, 0x000500, 0, 8                     
139 +                       0, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8                        
140 bury 8                  8, 21, 17, 0, 0x000580, 0, 1, 0x000500                           
142 b main_while_top@6      8, 21, 17, 0, 0x000580, 0, 1, 0x000500                           
100 dig 5                   8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 17                       
102 dig 7                   8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 17, 21                   
104 <                       8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 1                        
105 bz main_after_while@8   8, 21, 17, 0, 0x000580, 0, 1, 0x000500                           
108 pushbytes 0x8000800080  8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 0x8000800080             
115 dig 8                   8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 0x8000800080, 8          
117 dup                     8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 0x8000800080, 8, 8       
118 cover 2                 8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 0x8000800080, 8       
120 getbit                  8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 0                     
121 dig 5                   8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 0, 0x000580           
123 dig 8                   8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 0, 0x000580, 17       
125 dup                     8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 0, 0x000580, 17, 17   
126 cover 3                 8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 17, 0, 0x000580, 17   
128 uncover 2               8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 17, 0x000580, 17, 0   
130 setbit                  8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 17, 0x000580          
131 bury 6                  8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 17                    
133 pushint 1               8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 17, 1                 
135 +                       8, 21, 17, 0, 0x000580, 0, 1, 0x000500, 8, 18                    
136 bury 7                  8, 21, 18, 0, 0x000580, 0, 1, 0x000500, 8                        
138 intc_1                  8, 21, 18, 0, 0x000580, 0, 1, 0x000500, 8, 8                     
139 +                       8, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16                       
140 bury 8                  16, 21, 18, 0, 0x000580, 0, 1, 0x000500                          
142 b main_while_top@6      16, 21, 18, 0, 0x000580, 0, 1, 0x000500                          
100 dig 5                   16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 18                      
102 dig 7                   16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 18, 21                  
104 <                       16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 1                       
105 bz main_after_while@8   16, 21, 18, 0, 0x000580, 0, 1, 0x000500                          
108 pushbytes 0x8000800080  16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 0x8000800080            
115 dig 8                   16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 0x8000800080, 16        
117 dup                     16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 0x8000800080, 16, 16    
118 cover 2                 16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 0x8000800080, 16    
120 getbit                  16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 1                   
121 dig 5                   16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 1, 0x000580         
123 dig 8                   16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 1, 0x000580, 18     
125 dup                     16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 1, 0x000580, 18, 18 
126 cover 3                 16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 18, 1, 0x000580, 18 
128 uncover 2               16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 18, 0x000580, 18, 1 
130 setbit                  16, 21, 18, 0, 0x000580, 0, 1, 0x000500, 16, 18, 0x0005A0        
131 bury 6                  16, 21, 18, 0, 0x0005A0, 0, 1, 0x000500, 16, 18                  
133 pushint 1               16, 21, 18, 0, 0x0005A0, 0, 1, 0x000500, 16, 18, 1               
135 +                       16, 21, 18, 0, 0x0005A0, 0, 1, 0x000500, 16, 19                  
136 bury 7                  16, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 16                      
138 intc_1                  16, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 16, 8                   
139 +                       16, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24                      
140 bury 8                  24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500                          
142 b main_while_top@6      24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500                          
100 dig 5                   24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 19                      
102 dig 7                   24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 19, 21                  
104 <                       24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 1                       
105 bz main_after_while@8   24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500                          
108 pushbytes 0x8000800080  24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 0x8000800080            
115 dig 8                   24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 0x8000800080, 24        
117 dup                     24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 0x8000800080, 24, 24    
118 cover 2                 24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 0x8000800080, 24    
120 getbit                  24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 0                   
121 dig 5                   24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 0, 0x0005A0         
123 dig 8                   24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 0, 0x0005A0, 19     
125 dup                     24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 0, 0x0005A0, 19, 19 
126 cover 3                 24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 19, 0, 0x0005A0, 19 
128 uncover 2               24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 19, 0x0005A0, 19, 0 
130 setbit                  24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 19, 0x0005A0        
131 bury 6                  24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 19                  
133 pushint 1               24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 19, 1               
135 +                       24, 21, 19, 0, 0x0005A0, 0, 1, 0x000500, 24, 20                  
136 bury 7                  24, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 24                      
138 intc_1                  24, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 24, 8                   
139 +                       24, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32                      
140 bury 8                  32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500                          
142 b main_while_top@6      32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500                          
100 dig 5                   32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 20                      
102 dig 7                   32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 20, 21                  
104 <                       32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 1                       
105 bz main_after_while@8   32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500                          
108 pushbytes 0x8000800080  32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 0x8000800080            
115 dig 8                   32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 0x8000800080, 32        
117 dup                     32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 0x8000800080, 32, 32    
118 cover 2                 32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 0x8000800080, 32    
120 getbit                  32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 1                   
121 dig 5                   32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 1, 0x0005A0         
123 dig 8                   32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 1, 0x0005A0, 20     
125 dup                     32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 1, 0x0005A0, 20, 20 
126 cover 3                 32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 20, 1, 0x0005A0, 20 
128 uncover 2               32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 20, 0x0005A0, 20, 1 
130 setbit                  32, 21, 20, 0, 0x0005A0, 0, 1, 0x000500, 32, 20, 0x0005A8        
131 bury 6                  32, 21, 20, 0, 0x0005A8, 0, 1, 0x000500, 32, 20                  
133 pushint 1               32, 21, 20, 0, 0x0005A8, 0, 1, 0x000500, 32, 20, 1               
135 +                       32, 21, 20, 0, 0x0005A8, 0, 1, 0x000500, 32, 21                  
136 bury 7                  32, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 32                      
138 intc_1                  32, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 32, 8                   
139 +                       32, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 40                      
140 bury 8                  40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500                          
142 b main_while_top@6      40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500                          
100 dig 5                   40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 21                      
102 dig 7                   40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 21, 21                  
104 <                       40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 0                       
105 bz main_after_while@8   40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500                          
145 dig 3                   40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 0x0005A8                
147 pushbytes 0x0005a8      40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 0x0005A8, 0x0005A8      
152 ==                      40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 1                       
153 assert                  40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500                          
154 pushint 1               40, 21, 21, 0, 0x0005A8, 0, 1, 0x000500, 1                       
156 return                  1                                                                