main test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program:
    block@0: // L8
        let encoded_bool%0#0: bytes[1] = 0x00
        let tmp%0#0: bool = 1u
        let encoded_bool%1#0: bytes[1] = 0x80
        let tmp%1#0: bool = 1u
        let tmp%2#0: bool = 1u
        let tmp%3#0: bool = 1u
        let tmp%4#0: Encoded(uint8[32]) = (global ZeroAddress)
        let tmp%5#0: Encoded(uint8[32]) = (global ZeroAddress)
        let tmp%6#0: bool = 1u
        let reinterpret_Encoded(uint8[32])%0#0: Encoded(uint8[32]) = (txn Sender)
        let tmp%7#0: Encoded(uint8[32]) = (global ZeroAddress)
        let tmp%8#0: bool = (!= reinterpret_Encoded(uint8[32])%0#0 tmp%7#0)
        (assert tmp%8#0)
        let tmp%9#0: bool = 1u
        let tmp%10#0: bool = 1u
        let tmp%11#0: bool = 1u
        let tmp%12#0: bool = 1u
        let tmp%13#0: bool = 1u
        let tmp%14#0: bool = 1u
        let tmp%15#0: bool = 1u
        let tmp%16#0: bool = 1u
        let tmp%17#0: bool = 1u
        let tmp%18#0: bool = 1u
        let tmp%19#0: bool = 1u
        let tmp%20#0: bool = 1u
        let tmp%21#0: bool = 1u
        let tmp%22#0: bool = 1u
        let tmp%23#0: bool = 1u
        let tmp%24#0: bool = 1u
        let tmp%25#0: bool = 1u
        let tmp%26#0: bool = 1u
        let tmp%27#0: bool = 1u
        let tmp%28#0: bool = 1u
        let tmp%29#0: bool = 1u
        let tmp%30#0: bool = 1u
        let dynamic_arr#0: Encoded(len+uint64[]) = 0x0000
        let tmp%31#0: bool = 1u
        let expr_value_trimmed%0#0: bytes = 0x
        let encoded%0#0: Encoded((uint64)) = 0x0000000000000000
        let encoded%1#0: bytes = 0x0000000000000000
        let concatenated%0#0: bytes = 0x0000000000000000
        let byte_len%0#0: uint64 = 8u
        let len_%0#0: uint64 = 1u
        let as_bytes%0#0: bytes[8] = (itob 1u)
        let len_16_bit%0#0: bytes = 0x0001
        let dynamic_arr#1: Encoded(len+uint64[]) = 0x00010000000000000000
        let tmp%32#0: bool = 1u
        let encoded_bool%2#0: bytes[1] = 0x00
        let tmp%33#0: bool = 1u
        return 1u