PC  Teal                                              Stack                                                                                                                                      
1   <intcblock>                                                                                                                                                                                  
5   byte 0x01020007000eff                             0x01020007000EFF                                                                                                                           
14  byte "\x00\x05hello"                              0x01020007000EFF, 0x000568656C6C6F                                                                                                         
23  concat                                            0x01020007000EFF000568656C6C6F                                                                                                             
24  byte "\x00\x05world"                              0x01020007000EFF000568656C6C6F, 0x0005776F726C64                                                                                           
33  concat                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
34  dup                                               0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64                                                 
35  byte 0x01020007000eff000568656c6c6f0005776f726c64 0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64   
58  ==                                                0x01020007000EFF000568656C6C6F0005776F726C64, 1                                                                                            
59  assert                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
60  byte 0x04                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x04                                                                                         
63  btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 4                                                                                            
64  int 4                                             0x01020007000EFF000568656C6C6F0005776F726C64, 4, 4                                                                                         
65  ==                                                0x01020007000EFF000568656C6C6F0005776F726C64, 1                                                                                            
66  assert                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
67  byte 0x10                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x10                                                                                         
70  btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 16                                                                                           
71  int 16                                            0x01020007000EFF000568656C6C6F0005776F726C64, 16, 16                                                                                       
73  ==                                                0x01020007000EFF000568656C6C6F0005776F726C64, 1                                                                                            
74  assert                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
75  callsub test_stuff                                0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
104 proto 1 2                                         0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
107 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64                                                 
109 extract 0 1                                       0x01020007000EFF000568656C6C6F0005776F726C64, 0x01                                                                                         
112 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64                                           
114 extract 1 1                                       0x01020007000EFF000568656C6C6F0005776F726C64, 0x01, 0x02                                                                                   
117 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01                                                                                   
118 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64                                     
120 int 2                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64, 2                                  
121 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7                                                                                
122 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 0x01020007000EFF000568656C6C6F0005776F726C64                                  
124 dig 1                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 0x01020007000EFF000568656C6C6F0005776F726C64, 7                               
126 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 5                                                                             
127 int 2                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 5, 2                                                                          
128 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 7                                                                             
129 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 7, 0x01020007000EFF000568656C6C6F0005776F726C64                               
131 cover 2                                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64, 7, 7                               
133 extract3                                          0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F                                                                 
134 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64                   
136 int 4                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64, 4                
137 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14                                                             
138 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 0x01020007000EFF000568656C6C6F0005776F726C64               
140 dig 1                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 0x01020007000EFF000568656C6C6F0005776F726C64, 14           
142 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 5                                                          
143 int 2                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 5, 2                                                       
144 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 7                                                          
145 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 7, 0x01020007000EFF000568656C6C6F0005776F726C64            
147 cover 2                                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64, 14, 7            
149 extract3                                          0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64                                               
150 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64 
152 extract 6 1                                       0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64, 0xFF                                         
155 uncover 3                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 0x01                                         
157 btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1                                            
158 uncover 4                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1, 0x02                                            
160 btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1, 2                                               
161 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 3                                                  
162 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 3, 0xFF                                                  
163 btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 3, 255                                                   
164 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 258                                                      
165 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 258, 0x0005776F726C64                                                      
166 uncover 2                                         0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, 0x000568656C6C6F                                                      
168 extract 2 0                                       0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello"                                                               
171 byte " "                                          0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello", " "                                                          
174 concat                                            0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello "                                                              
175 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello ", 0x0005776F726C64                                                              
176 extract 2 0                                       0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello ", "world"                                                                       
179 concat                                            0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world"                                                                           
180 dup                                               0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", "hello world"                                                            
181 len                                               0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 11                                                                       
182 itob                                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 0x000000000000000B                                                       
183 extract 6 2                                       0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 0x000B                                                                   
186 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x000B, "hello world"                                                                   
187 concat                                            0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x000B68656C6C6F20776F726C64                                                            
188 retsub                                            258, 0x000B68656C6C6F20776F726C64                                                                                                          
78  extract 2 0                                       258, "hello world"                                                                                                                         
81  byte "hello world"                                258, "hello world", "hello world"                                                                                                          
94  ==                                                258, 1                                                                                                                                     
95  assert                                            258                                                                                                                                        
96  int 258                                           258, 258                                                                                                                                   
99  ==                                                1                                                                                                                                          
100 assert                                                                                                                                                                                       
101 int 1                                             1                                                                                                                                          
103 return                                            1                                                                                                                                          