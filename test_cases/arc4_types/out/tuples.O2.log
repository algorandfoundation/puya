PC  Teal                                              Stack                                                                                                                                      
1   <intcblock>                                                                                                                                                                                  
5   int 7                                             7                                                                                                                                          
7   itob                                              0x0000000000000007                                                                                                                         
8   extract 6 2                                       0x0007                                                                                                                                     
11  byte 0x0102                                       0x0007, 0x0102                                                                                                                             
15  swap                                              0x0102, 0x0007                                                                                                                             
16  concat                                            0x01020007                                                                                                                                 
17  int 14                                            0x01020007, 14                                                                                                                             
19  itob                                              0x01020007, 0x000000000000000E                                                                                                             
20  extract 6 2                                       0x01020007, 0x000E                                                                                                                         
23  concat                                            0x01020007000E                                                                                                                             
24  byte 0xff                                         0x01020007000E, 0xFF                                                                                                                       
27  concat                                            0x01020007000EFF                                                                                                                           
28  byte "\x00\x05hello"                              0x01020007000EFF, 0x000568656C6C6F                                                                                                         
37  concat                                            0x01020007000EFF000568656C6C6F                                                                                                             
38  byte "\x00\x05world"                              0x01020007000EFF000568656C6C6F, 0x0005776F726C64                                                                                           
47  concat                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
48  dup                                               0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64                                                 
49  byte 0x01020007000eff000568656c6c6f0005776f726c64 0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64   
72  ==                                                0x01020007000EFF000568656C6C6F0005776F726C64, 1                                                                                            
73  assert                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
74  byte 0x04                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x04                                                                                         
77  btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 4                                                                                            
78  int 4                                             0x01020007000EFF000568656C6C6F0005776F726C64, 4, 4                                                                                         
79  ==                                                0x01020007000EFF000568656C6C6F0005776F726C64, 1                                                                                            
80  assert                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
81  byte 0x10                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x10                                                                                         
84  btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 16                                                                                           
85  int 16                                            0x01020007000EFF000568656C6C6F0005776F726C64, 16, 16                                                                                       
87  ==                                                0x01020007000EFF000568656C6C6F0005776F726C64, 1                                                                                            
88  assert                                            0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
89  callsub test_stuff                                0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
118 proto 1 2                                         0x01020007000EFF000568656C6C6F0005776F726C64                                                                                               
121 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64                                                 
123 extract 0 1                                       0x01020007000EFF000568656C6C6F0005776F726C64, 0x01                                                                                         
126 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64                                           
128 extract 1 1                                       0x01020007000EFF000568656C6C6F0005776F726C64, 0x01, 0x02                                                                                   
131 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01                                                                                   
132 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64                                     
134 int 2                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64, 2                                  
135 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7                                                                                
136 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 0x01020007000EFF000568656C6C6F0005776F726C64                                  
138 dig 1                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 0x01020007000EFF000568656C6C6F0005776F726C64, 7                               
140 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 5                                                                             
141 int 2                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 5, 2                                                                          
142 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 7                                                                             
143 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 7, 7, 0x01020007000EFF000568656C6C6F0005776F726C64                               
145 cover 2                                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x01020007000EFF000568656C6C6F0005776F726C64, 7, 7                               
147 extract3                                          0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F                                                                 
148 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64                   
150 int 4                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64, 4                
151 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14                                                             
152 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 0x01020007000EFF000568656C6C6F0005776F726C64               
154 dig 1                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 0x01020007000EFF000568656C6C6F0005776F726C64, 14           
156 extract_uint16                                    0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 5                                                          
157 int 2                                             0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 5, 2                                                       
158 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 7                                                          
159 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 14, 7, 0x01020007000EFF000568656C6C6F0005776F726C64            
161 cover 2                                           0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x01020007000EFF000568656C6C6F0005776F726C64, 14, 7            
163 extract3                                          0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64                                               
164 frame_dig -1                                      0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64, 0x01020007000EFF000568656C6C6F0005776F726C64 
166 extract 6 1                                       0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x01, 0x000568656C6C6F, 0x0005776F726C64, 0xFF                                         
169 uncover 3                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 0x01                                         
171 btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x02, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1                                            
172 uncover 4                                         0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1, 0x02                                            
174 btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 1, 2                                               
175 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 0xFF, 3                                                  
176 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 3, 0xFF                                                  
177 btoi                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 3, 255                                                   
178 +                                                 0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 0x0005776F726C64, 258                                                      
179 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 0x000568656C6C6F, 258, 0x0005776F726C64                                                      
180 uncover 2                                         0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, 0x000568656C6C6F                                                      
182 extract 2 0                                       0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello"                                                               
185 byte " "                                          0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello", " "                                                          
188 concat                                            0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x0005776F726C64, "hello "                                                              
189 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello ", 0x0005776F726C64                                                              
190 extract 2 0                                       0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello ", "world"                                                                       
193 concat                                            0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world"                                                                           
194 dup                                               0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", "hello world"                                                            
195 len                                               0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 11                                                                       
196 itob                                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 0x000000000000000B                                                       
197 extract 6 2                                       0x01020007000EFF000568656C6C6F0005776F726C64, 258, "hello world", 0x000B                                                                   
200 swap                                              0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x000B, "hello world"                                                                   
201 concat                                            0x01020007000EFF000568656C6C6F0005776F726C64, 258, 0x000B68656C6C6F20776F726C64                                                            
202 retsub                                            258, 0x000B68656C6C6F20776F726C64                                                                                                          
92  extract 2 0                                       258, "hello world"                                                                                                                         
95  byte "hello world"                                258, "hello world", "hello world"                                                                                                          
108 ==                                                258, 1                                                                                                                                     
109 assert                                            258                                                                                                                                        
110 int 258                                           258, 258                                                                                                                                   
113 ==                                                1                                                                                                                                          
114 assert                                                                                                                                                                                       
115 int 1                                             1                                                                                                                                          
117 return                                            1                                                                                                                                          