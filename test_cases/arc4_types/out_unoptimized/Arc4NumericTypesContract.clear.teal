#pragma version 11
#pragma typetrack false

// test_cases.arc4_types.numeric.Arc4NumericTypesContract.clear_state_program() -> uint64:
main:
    bytecblock 0x0000000000000000 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x 0x00
    b main_block@0

main_block@0:
    // arc4_types/numeric.py:127
    // assert BigUInt.from_bytes(Decimal().bytes) == 0
    bytec_0 // 0x0000000000000000
    bytec_2 // 0x
    b==
    assert
    // arc4_types/numeric.py:128
    // assert BigUInt.from_bytes(BigUFixedNxM[t.Literal[512], t.Literal[5]]().bytes) == 0
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    bytec_2 // 0x
    b==
    assert
    // arc4_types/numeric.py:129
    // assert Byte() == 0
    bytec_3 // 0x00
    bytec_3 // 0x00
    b==
    assert
    // arc4_types/numeric.py:130
    // assert ARC4UInt64() == 0
    bytec_0 // 0x0000000000000000
    bytec_0 // 0x0000000000000000
    b==
    assert
    // arc4_types/numeric.py:131
    // assert UInt512() == 0
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    b==
    assert
    // arc4_types/numeric.py:133
    // return True
    pushint 1 // 1
    return
