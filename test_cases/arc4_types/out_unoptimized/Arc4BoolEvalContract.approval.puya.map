{
  "version": 3,
  "sources": [
    "../bool_eval.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQmB;AAAA;AAAU;AAAV;AAAJ;AAAA;AAAP;AACO;AAAA;AAAU;AAAV;AAAA;AAAA;AAAP;AAEW;AAAJ;AAAA;AAAP;AACO;;;;;AAAA;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACoB;;AAAb;;AAAA;AAAP;AAEW;AAAJ;AAAA;AAAP;AACO;;;AAAA;AAAA;AAAP;AAEW;AAAJ;AAAA;AAAP;AACO;;;;AAAA;AAAA;AAAP;AAEW;AAAJ;AAAA;AAAP;AACO;;;;;;AAAA;AAAA;AAAP;AAEW;AAAJ;AAAA;AAAP;AACO;;;;;;;;;;AAAA;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;AAAA;;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;;;;AAAA;;AAAA;AAAP;AAEW;;AAAJ;AAAA;AAAP;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAEc;AAAA;;AAAA;AACP;AAAA;AAAA;AAAP;AACA;;;AAAA;;AAAmB;AAAnB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACO;AAAA;AAAP;AAEsB;AAAA;AAAU;AAAV;AAAf;AAAA;AAAP;AAEO;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x00 0x0000 0x0000000000000000 0x00000000 0x00000000000000000000000000000000 0x0000000000000000000000000000000000000000000000000000000000000000 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x000000 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x000000000000 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    "279": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "281": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "282": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "283": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "284": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "285": {
      "op": "assert",
      "stack_out": []
    },
    "286": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "287": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1"
      ],
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "289": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "290": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%1#0",
        "0x00"
      ]
    },
    "291": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "292": {
      "op": "assert",
      "stack_out": []
    },
    "293": {
      "op": "bytec_1 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "294": {
      "op": "dup",
      "stack_out": [
        "0x0000",
        "0x0000"
      ]
    },
    "295": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "296": {
      "op": "assert",
      "stack_out": []
    },
    "297": {
      "op": "pushbytes 0x00012e",
      "defined_out": [
        "0x00012e"
      ],
      "stack_out": [
        "0x00012e"
      ]
    },
    "302": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "0x00012e",
        "0x0000"
      ]
    },
    "303": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "304": {
      "op": "assert",
      "stack_out": []
    },
    "305": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "307": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "308": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "309": {
      "op": "assert",
      "stack_out": []
    },
    "310": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "312": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "314": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "315": {
      "op": "assert",
      "stack_out": []
    },
    "316": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "317": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0x00"
      ]
    },
    "318": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "319": {
      "op": "assert",
      "stack_out": []
    },
    "320": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "323": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x01",
        "0x00"
      ]
    },
    "324": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "325": {
      "op": "assert",
      "stack_out": []
    },
    "326": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "0x0000"
      ]
    },
    "327": {
      "op": "dup",
      "stack_out": [
        "0x0000",
        "0x0000"
      ]
    },
    "328": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "329": {
      "op": "assert",
      "stack_out": []
    },
    "330": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001"
      ],
      "stack_out": [
        "0x0001"
      ]
    },
    "334": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "0x0001",
        "0x0000"
      ]
    },
    "335": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "336": {
      "op": "assert",
      "stack_out": []
    },
    "337": {
      "op": "bytec_3 // 0x00000000",
      "defined_out": [
        "0x00000000"
      ],
      "stack_out": [
        "0x00000000"
      ]
    },
    "338": {
      "op": "dup",
      "stack_out": [
        "0x00000000",
        "0x00000000"
      ]
    },
    "339": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "340": {
      "op": "assert",
      "stack_out": []
    },
    "341": {
      "op": "pushbytes 0x00000001",
      "defined_out": [
        "0x00000001"
      ],
      "stack_out": [
        "0x00000001"
      ]
    },
    "347": {
      "op": "bytec_3 // 0x00000000",
      "stack_out": [
        "0x00000001",
        "0x00000000"
      ]
    },
    "348": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "349": {
      "op": "assert",
      "stack_out": []
    },
    "350": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000"
      ],
      "stack_out": [
        "0x0000000000000000"
      ]
    },
    "351": {
      "op": "dup",
      "stack_out": [
        "0x0000000000000000",
        "0x0000000000000000"
      ]
    },
    "352": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "353": {
      "op": "assert",
      "stack_out": []
    },
    "354": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "364": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "0x0000000000000001",
        "0x0000000000000000"
      ]
    },
    "365": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "366": {
      "op": "assert",
      "stack_out": []
    },
    "367": {
      "op": "bytec 4 // 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000"
      ]
    },
    "369": {
      "op": "dup",
      "stack_out": [
        "0x00000000000000000000000000000000",
        "0x00000000000000000000000000000000"
      ]
    },
    "370": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "371": {
      "op": "assert",
      "stack_out": []
    },
    "372": {
      "op": "pushbytes 0x00000000000000000000000000000001",
      "defined_out": [
        "0x00000000000000000000000000000001"
      ],
      "stack_out": [
        "0x00000000000000000000000000000001"
      ]
    },
    "390": {
      "op": "bytec 4 // 0x00000000000000000000000000000000",
      "stack_out": [
        "0x00000000000000000000000000000001",
        "0x00000000000000000000000000000000"
      ]
    },
    "392": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "393": {
      "op": "assert",
      "stack_out": []
    },
    "394": {
      "op": "bytec 5 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ],
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "396": {
      "op": "dup",
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "397": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "398": {
      "op": "assert",
      "stack_out": []
    },
    "399": {
      "op": "pushbytes 0x0000000000000000000000000000000000000000000000000000000000000001",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ],
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000001"
      ]
    },
    "433": {
      "op": "bytec 5 // 0x0000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000001",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "435": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "436": {
      "op": "assert",
      "stack_out": []
    },
    "437": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "439": {
      "op": "dup",
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "440": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "441": {
      "op": "assert",
      "stack_out": []
    },
    "442": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
      ]
    },
    "508": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "510": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "511": {
      "op": "assert",
      "stack_out": []
    },
    "512": {
      "op": "bytec 7 // 0x000000",
      "defined_out": [
        "0x000000"
      ],
      "stack_out": [
        "0x000000"
      ]
    },
    "514": {
      "op": "dup",
      "stack_out": [
        "0x000000",
        "0x000000"
      ]
    },
    "515": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "516": {
      "op": "assert",
      "stack_out": []
    },
    "517": {
      "op": "pushbytes 0x000001",
      "defined_out": [
        "0x000001"
      ],
      "stack_out": [
        "0x000001"
      ]
    },
    "522": {
      "op": "bytec 7 // 0x000000",
      "stack_out": [
        "0x000001",
        "0x000000"
      ]
    },
    "524": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "525": {
      "op": "assert",
      "stack_out": []
    },
    "526": {
      "op": "bytec 8 // 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ],
      "stack_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "528": {
      "op": "dup",
      "stack_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "529": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "530": {
      "op": "assert",
      "stack_out": []
    },
    "531": {
      "op": "pushbytes 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
      "defined_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
      ],
      "stack_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
      ]
    },
    "596": {
      "op": "bytec 8 // 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "598": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "599": {
      "op": "assert",
      "stack_out": []
    },
    "600": {
      "op": "bytec 9 // 0x000000000000",
      "defined_out": [
        "0x000000000000"
      ],
      "stack_out": [
        "0x000000000000"
      ]
    },
    "602": {
      "op": "dup",
      "stack_out": [
        "0x000000000000",
        "0x000000000000"
      ]
    },
    "603": {
      "op": "==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "604": {
      "op": "assert",
      "stack_out": []
    },
    "605": {
      "op": "pushbytes 0x0002540be400",
      "defined_out": [
        "0x0002540be400"
      ],
      "stack_out": [
        "0x0002540be400"
      ]
    },
    "613": {
      "op": "bytec 9 // 0x000000000000",
      "stack_out": [
        "0x0002540be400",
        "0x000000000000"
      ]
    },
    "615": {
      "op": "!=",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "616": {
      "op": "assert",
      "stack_out": []
    },
    "617": {
      "op": "bytec 10 // 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ],
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "619": {
      "op": "dup",
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "620": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "621": {
      "op": "assert",
      "stack_out": []
    },
    "622": {
      "op": "pushbytes 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005f5e100",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005f5e100"
      ],
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005f5e100"
      ]
    },
    "686": {
      "op": "bytec 10 // 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "stack_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005f5e100",
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "688": {
      "op": "!=",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "689": {
      "op": "assert",
      "stack_out": []
    },
    "690": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "0x0000"
      ]
    },
    "691": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "693": {
      "op": "concat",
      "defined_out": [
        "dynamic_arr#0"
      ],
      "stack_out": [
        "dynamic_arr#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "dynamic_arr#0",
        "dynamic_arr#0 (copy)"
      ],
      "stack_out": [
        "dynamic_arr#0",
        "dynamic_arr#0 (copy)"
      ]
    },
    "695": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "dynamic_arr#0",
        "dynamic_arr#0 (copy)",
        "0x0000"
      ]
    },
    "696": {
      "op": "==",
      "defined_out": [
        "dynamic_arr#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "dynamic_arr#0",
        "tmp%32#0"
      ]
    },
    "697": {
      "op": "assert",
      "stack_out": [
        "dynamic_arr#0"
      ]
    },
    "698": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "701": {
      "op": "pushbytes 0x",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x"
      ]
    },
    "703": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x",
        "0x0000000000000000"
      ]
    },
    "704": {
      "op": "concat",
      "defined_out": [
        "data%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "data%0#0"
      ]
    },
    "705": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "706": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "707": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "708": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "710": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "711": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "712": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "715": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "716": {
      "op": "concat",
      "stack_out": [
        "dynamic_arr#0"
      ]
    },
    "717": {
      "op": "bytec_1 // 0x0000",
      "stack_out": [
        "dynamic_arr#0",
        "0x0000"
      ]
    },
    "718": {
      "op": "!=",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "719": {
      "op": "assert",
      "stack_out": []
    },
    "720": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "721": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "722": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "723": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0"
      ]
    },
    "724": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%2#0",
        "0x00"
      ]
    },
    "725": {
      "op": "==",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "726": {
      "op": "assert",
      "stack_out": []
    },
    "727": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "728": {
      "op": "return",
      "stack_out": []
    }
  }
}