{
  "version": 3,
  "sources": [
    "../mutable_params2.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AADL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAGY;AAAkB;;;AAAlB;AAAA;;AAAA;AAAA;AACoC;AAAxC;;;AACY;AAAkB;;;AAAlB;AAAqB;AAArB;AAAA;;;;AAAA;AAAA;AAAL;AAAP;AAEI;AAAkB;AAAlB;AAAA;;AAAA;AAAA;AACoC;AAAxC;;;AACY;AAAkB;AAAlB;AAAqB;;;AAArB;AAAyB;AAAzB;AAAA;AAAA;AAAA;AAAL;AAAP;;AAER;;;;;;AAEA;;AAAA;;;AACY;;AAAA;;;AAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;AACI;AAAkB;AAAlB;AAAqB;;;AAArB;AAAwB;;;AAAxB;AAAA;AAAA;AAAA;AAAJ;;;;;;;;;;AACA;;AAAA;;;AAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;AACI;AAAkB;AAAlB;AAAqB;;;AAArB;AAAwB;AAAxB;AAAA;AAAA;AAAA;;;;AAAJ;;;;;;;;;;AAIJ;;AAAA;;;AAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAFI;;AAAA;;;AAAS;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x 0x01 0x04 0x0003 0x0001"
    },
    "18": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "20": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "21": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "22": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "25": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "28": {
      "op": "pushbytes 0x6ac4a557 // method \"test_array_rebinding()void\"",
      "defined_out": [
        "Method(test_array_rebinding()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array_rebinding()void)"
      ]
    },
    "34": {
      "op": "swap",
      "stack_out": [
        "Method(test_array_rebinding()void)",
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "match main_test_array_rebinding_route@3",
      "stack_out": []
    },
    "39": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "40": {
      "block": "main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "41": {
      "block": "main_test_array_rebinding_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "43": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "44": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "45": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "46": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "48": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "49": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "50": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "51": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "op": "callsub test_array_rebinding"
    },
    "54": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "55": {
      "op": "b main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11"
    },
    "58": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "60": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "61": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%7#0"
      ]
    },
    "62": {
      "op": "match main___algopy_default_create@7",
      "stack_out": []
    },
    "66": {
      "block": "main_switch_case_next@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "69": {
      "block": "main___algopy_default_create@7",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "71": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "72": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "73": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "74": {
      "block": "main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create@13",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "b main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__puya_arc4_router__@11"
    },
    "78": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "params": {},
      "block": "test_array_rebinding_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "79": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x",
        "0x00"
      ],
      "stack_out": [
        "0x",
        "0x00"
      ]
    },
    "82": {
      "op": "concat",
      "defined_out": [
        "result%0#0"
      ],
      "stack_out": [
        "result%0#0"
      ]
    },
    "83": {
      "op": "bytec 4 // 0x0001",
      "defined_out": [
        "0x0001",
        "result%0#0"
      ],
      "stack_out": [
        "result%0#0",
        "0x0001"
      ]
    },
    "85": {
      "op": "swap",
      "stack_out": [
        "0x0001",
        "result%0#0"
      ]
    },
    "86": {
      "op": "concat",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "87": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "1"
      ]
    },
    "88": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "stack_out": [
        "a#0"
      ]
    },
    "91": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a#0",
        "0x"
      ]
    },
    "92": {
      "op": "pushbytes 0x00",
      "stack_out": [
        "a#0",
        "0x",
        "0x00"
      ]
    },
    "95": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "result%1#0"
      ],
      "stack_out": [
        "a#0",
        "result%1#0"
      ]
    },
    "96": {
      "op": "bytec_1 // 0x01",
      "defined_out": [
        "0x01",
        "a#0",
        "result%1#0"
      ],
      "stack_out": [
        "a#0",
        "result%1#0",
        "0x01"
      ]
    },
    "97": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "result%2#0"
      ],
      "stack_out": [
        "a#0",
        "result%2#0"
      ]
    },
    "98": {
      "op": "pushbytes 0x0002",
      "defined_out": [
        "0x0002",
        "a#0",
        "result%2#0"
      ],
      "stack_out": [
        "a#0",
        "result%2#0",
        "0x0002"
      ]
    },
    "102": {
      "op": "swap",
      "stack_out": [
        "a#0",
        "0x0002",
        "result%2#0"
      ]
    },
    "103": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "array_data%1#0"
      ],
      "stack_out": [
        "a#0",
        "array_data%1#0"
      ]
    },
    "104": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "105": {
      "op": "assert",
      "stack_out": []
    },
    "106": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "107": {
      "op": "bytec_1 // 0x01",
      "stack_out": [
        "0x",
        "0x01"
      ]
    },
    "108": {
      "op": "concat",
      "defined_out": [
        "result%3#0"
      ],
      "stack_out": [
        "result%3#0"
      ]
    },
    "109": {
      "op": "bytec 4 // 0x0001",
      "stack_out": [
        "result%3#0",
        "0x0001"
      ]
    },
    "111": {
      "op": "swap",
      "stack_out": [
        "0x0001",
        "result%3#0"
      ]
    },
    "112": {
      "op": "concat",
      "stack_out": [
        "a#0"
      ]
    },
    "113": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "0"
      ]
    },
    "114": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "stack_out": [
        "a#0"
      ]
    },
    "117": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a#0",
        "0x"
      ]
    },
    "118": {
      "op": "bytec_1 // 0x01",
      "stack_out": [
        "a#0",
        "0x",
        "0x01"
      ]
    },
    "119": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "result%4#0"
      ],
      "stack_out": [
        "a#0",
        "result%4#0"
      ]
    },
    "120": {
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x2a",
        "a#0",
        "result%4#0"
      ],
      "stack_out": [
        "a#0",
        "result%4#0",
        "0x2a"
      ]
    },
    "123": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "result%5#0"
      ],
      "stack_out": [
        "a#0",
        "result%5#0"
      ]
    },
    "124": {
      "op": "bytec_2 // 0x04",
      "defined_out": [
        "0x04",
        "a#0",
        "result%5#0"
      ],
      "stack_out": [
        "a#0",
        "result%5#0",
        "0x04"
      ]
    },
    "125": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "result%6#0"
      ],
      "stack_out": [
        "a#0",
        "result%6#0"
      ]
    },
    "126": {
      "op": "bytec_3 // 0x0003",
      "defined_out": [
        "0x0003",
        "a#0",
        "result%6#0"
      ],
      "stack_out": [
        "a#0",
        "result%6#0",
        "0x0003"
      ]
    },
    "127": {
      "op": "swap",
      "stack_out": [
        "a#0",
        "0x0003",
        "result%6#0"
      ]
    },
    "128": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "array_data%3#0"
      ],
      "stack_out": [
        "a#0",
        "array_data%3#0"
      ]
    },
    "129": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "130": {
      "op": "assert",
      "stack_out": []
    },
    "131": {
      "retsub": true,
      "op": "retsub"
    },
    "132": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "params": {
        "a#0": "bytes",
        "assign_local#0": "uint64"
      },
      "block": "maybe_modify_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "135": {
      "block": "maybe_modify_array_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "a%is_original#0"
      ],
      "stack_out": [
        "a%is_original#0"
      ]
    },
    "136": {
      "op": "frame_dig -2",
      "defined_out": [
        "a%is_original#0",
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "138": {
      "op": "frame_dig -1",
      "defined_out": [
        "a%is_original#0",
        "a%out#0",
        "assign_local#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "assign_local#0 (copy)"
      ]
    },
    "140": {
      "op": "bz maybe_modify_array_else_body@10",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "143": {
      "block": "maybe_modify_array_if_body@1",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "145": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "148": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0",
        "0x"
      ]
    },
    "149": {
      "op": "bytec_1 // 0x01",
      "defined_out": [
        "0x",
        "0x01",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0",
        "0x",
        "0x01"
      ]
    },
    "150": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1"
      ]
    },
    "151": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "152": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "153": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "154": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%0#0"
      ]
    },
    "155": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "156": {
      "op": "len",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "157": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "158": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "161": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "162": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat_result%0#0"
      ]
    },
    "163": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "165": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "1"
      ]
    },
    "166": {
      "op": "bz maybe_modify_array_after_if_else@3",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "169": {
      "block": "maybe_modify_array_if_body@2",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "171": {
      "op": "frame_bury 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "173": {
      "block": "maybe_modify_array_after_if_else@3",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x"
      ]
    },
    "174": {
      "op": "bytec_1 // 0x01",
      "defined_out": [
        "0x",
        "0x01"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x",
        "0x01"
      ]
    },
    "175": {
      "op": "concat",
      "defined_out": [
        "result%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%0#0"
      ]
    },
    "176": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "result%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%0#0",
        "0x02"
      ]
    },
    "179": {
      "op": "concat",
      "defined_out": [
        "result%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%1#0"
      ]
    },
    "180": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "result%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%1#0",
        "0x03"
      ]
    },
    "183": {
      "op": "concat",
      "defined_out": [
        "result%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%2#0"
      ]
    },
    "184": {
      "op": "bytec_3 // 0x0003",
      "defined_out": [
        "0x0003",
        "result%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%2#0",
        "0x0003"
      ]
    },
    "185": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x0003",
        "result%2#0"
      ]
    },
    "186": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "array_data%0#0"
      ]
    },
    "187": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "189": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0"
      ]
    },
    "190": {
      "op": "bz maybe_modify_array_after_if_else@5",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "193": {
      "block": "maybe_modify_array_if_body@4",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "195": {
      "op": "frame_bury 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "197": {
      "block": "maybe_modify_array_after_if_else@5",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "199": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "202": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0",
        "0x"
      ]
    },
    "203": {
      "op": "bytec_2 // 0x04",
      "defined_out": [
        "0x",
        "0x04",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0",
        "0x",
        "0x04"
      ]
    },
    "204": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0",
        "array%encoded%1#1"
      ]
    },
    "205": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0",
        "array%encoded%1#1",
        "0x"
      ]
    },
    "206": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0",
        "0x",
        "array%encoded%1#1"
      ]
    },
    "207": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%1#0",
        "encoded%1#0"
      ]
    },
    "208": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%1#0"
      ]
    },
    "209": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "210": {
      "op": "len",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "211": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "212": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "215": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "216": {
      "op": "concat",
      "defined_out": [
        "concat_result%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat_result%1#0"
      ]
    },
    "217": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "219": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0"
      ]
    },
    "220": {
      "op": "bz maybe_modify_array_after_if_else@7",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "223": {
      "block": "maybe_modify_array_if_body@6",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "225": {
      "op": "frame_bury 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "227": {
      "block": "maybe_modify_array_after_if_else@7",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x"
      ]
    },
    "228": {
      "op": "bytec_1 // 0x01",
      "defined_out": [
        "0x",
        "0x01"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x",
        "0x01"
      ]
    },
    "229": {
      "op": "concat",
      "defined_out": [
        "result%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%3#0"
      ]
    },
    "230": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "result%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%3#0",
        "0x02"
      ]
    },
    "233": {
      "op": "concat",
      "defined_out": [
        "result%4#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%4#0"
      ]
    },
    "234": {
      "op": "bytec_2 // 0x04",
      "defined_out": [
        "0x04",
        "result%4#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%4#0",
        "0x04"
      ]
    },
    "235": {
      "op": "concat",
      "defined_out": [
        "result%5#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%5#0"
      ]
    },
    "236": {
      "op": "bytec_3 // 0x0003",
      "defined_out": [
        "0x0003",
        "result%5#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "result%5#0",
        "0x0003"
      ]
    },
    "237": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x0003",
        "result%5#0"
      ]
    },
    "238": {
      "op": "concat",
      "defined_out": [
        "array_data%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "array_data%1#0"
      ]
    },
    "239": {
      "op": "intc_0 // 0",
      "defined_out": [
        "a%is_original#0",
        "array_data%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "array_data%1#0",
        "a%is_original#0"
      ]
    },
    "240": {
      "op": "frame_bury 0",
      "defined_out": [
        "a%is_original#0",
        "array_data%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "array_data%1#0"
      ]
    },
    "242": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0"
      ]
    },
    "245": {
      "op": "bz maybe_modify_array_after_if_else@9",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "248": {
      "block": "maybe_modify_array_if_body@8",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "250": {
      "op": "frame_bury 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "252": {
      "block": "maybe_modify_array_after_if_else@13",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "254": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0"
      ]
    },
    "257": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0",
        "0x"
      ]
    },
    "258": {
      "op": "bytec_2 // 0x04",
      "defined_out": [
        "0x",
        "0x04",
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0",
        "0x",
        "0x04"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "array%encoded%3#1",
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0",
        "array%encoded%3#1"
      ]
    },
    "260": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0",
        "array%encoded%3#1",
        "0x"
      ]
    },
    "261": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0",
        "0x",
        "array%encoded%3#1"
      ]
    },
    "262": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0",
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%3#0",
        "encoded%3#0"
      ]
    },
    "263": {
      "op": "concat",
      "defined_out": [
        "concatenated%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%3#0"
      ]
    },
    "264": {
      "op": "dup",
      "defined_out": [
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ]
    },
    "265": {
      "op": "len",
      "defined_out": [
        "concatenated%3#0",
        "len_%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%3#0",
        "len_%3#0"
      ]
    },
    "266": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "concatenated%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%3#0",
        "as_bytes%3#0"
      ]
    },
    "267": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%3#0",
        "len_16_bit%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%3#0",
        "len_16_bit%3#0"
      ]
    },
    "270": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "len_16_bit%3#0",
        "concatenated%3#0"
      ]
    },
    "271": {
      "op": "concat",
      "defined_out": [
        "concat_result%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat_result%3#0"
      ]
    },
    "272": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "274": {
      "op": "frame_dig 0",
      "defined_out": [
        "a%is_original#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%is_original#0"
      ]
    },
    "276": {
      "op": "bz maybe_modify_array_after_if_else@15",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "279": {
      "block": "maybe_modify_array_if_body@14",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "281": {
      "op": "frame_bury 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "283": {
      "block": "maybe_modify_array_after_if_else@15",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "285": {
      "op": "frame_bury 0"
    },
    "287": {
      "retsub": true,
      "op": "retsub"
    },
    "288": {
      "block": "maybe_modify_array_else_body@10",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "290": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0"
      ]
    },
    "293": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0",
        "0x"
      ]
    },
    "294": {
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x",
        "0x2a",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0",
        "0x",
        "0x2a"
      ]
    },
    "297": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0",
        "array%encoded%2#1"
      ]
    },
    "298": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0",
        "array%encoded%2#1",
        "0x"
      ]
    },
    "299": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0",
        "0x",
        "array%encoded%2#1"
      ]
    },
    "300": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "expr_value_trimmed%2#0",
        "encoded%2#0"
      ]
    },
    "301": {
      "op": "concat",
      "defined_out": [
        "concatenated%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%2#0"
      ]
    },
    "302": {
      "op": "dup",
      "defined_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "303": {
      "op": "len",
      "defined_out": [
        "concatenated%2#0",
        "len_%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "304": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%2#0",
        "as_bytes%2#0"
      ]
    },
    "305": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "308": {
      "op": "swap",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "concat_result%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat_result%2#0"
      ]
    },
    "310": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "312": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "1"
      ]
    },
    "313": {
      "op": "bz maybe_modify_array_after_if_else@12",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "316": {
      "block": "maybe_modify_array_if_body@11",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "318": {
      "op": "frame_bury 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "320": {
      "block": "maybe_modify_array_after_if_else@12",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "b maybe_modify_array_after_if_else@13"
    }
  }
}