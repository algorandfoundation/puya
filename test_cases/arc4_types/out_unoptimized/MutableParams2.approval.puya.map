{
  "version": 3,
  "sources": [
    "../mutable_params2.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AACK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;;AAEO;AAAA;AAAA;;;AAAkB;AAAlB;AACoC;AAAxC;;;AACY;;AAAA;AAAA;;;AAAkB;AAAlB;AAAqB;AAArB;AAAL;AAAP;AAEI;AAAA;AAAA;;;AAAkB;AAAlB;AACoC;AAAxC;;;AACY;AAAA;AAAA;;;AAAkB;AAAlB;AAAqB;;;AAArB;AAAyB;AAAzB;AAAL;AAAP;;AAER;;;;;;;;;AAEA;;AAAA;;;AAAA;;;AACY;AAAS;AAAT;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;AACI;AAAA;AAAA;;;AAAkB;AAAlB;AAAqB;;;AAArB;AAAwB;;;AAAxB;AAAJ;;;;;;;;;;;;;;;;AACA;AAAS;AAAT;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;AACI;AAAA;AAAA;;;AAAkB;AAAlB;AAAqB;;;AAArB;AAAwB;AAAxB;;;;AAAJ;;;;;;;;;;;;;;;;;;;AAIJ;AAAS;AAAT;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAFI;AAAS;;;AAAT;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 3"
    },
    "6": {
      "op": "bytecblock 0x01 0x04 0x 0x00"
    },
    "15": {
      "op": "b main_block@0"
    },
    "18": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "21": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "23": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "24": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "25": {
      "op": "bz main___algopy_default_create@5",
      "stack_out": []
    },
    "28": {
      "op": "b main_abi_routing@2"
    },
    "31": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "34": {
      "op": "pushbytes 0x6ac4a557 // method \"test_array_rebinding()void\"",
      "defined_out": [
        "Method(test_array_rebinding()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_array_rebinding()void)"
      ]
    },
    "40": {
      "op": "uncover 1",
      "stack_out": [
        "Method(test_array_rebinding()void)",
        "tmp%2#0"
      ]
    },
    "42": {
      "op": "match main_test_array_rebinding_route@3",
      "stack_out": []
    },
    "46": {
      "op": "b main_switch_case_next@4"
    },
    "49": {
      "block": "main_switch_case_next@4",
      "stack_in": [],
      "op": "b main_after_if_else@6"
    },
    "52": {
      "block": "main_after_if_else@6",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "53": {
      "block": "main_test_array_rebinding_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "55": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "56": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "57": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "59": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0"
      ]
    },
    "60": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "61": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "62": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": []
    },
    "63": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding[routing]",
      "op": "callsub test_array_rebinding"
    },
    "66": {
      "op": "b main_switch_case_next@4"
    },
    "69": {
      "block": "main___algopy_default_create@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "71": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "72": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "73": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "75": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "0"
      ]
    },
    "76": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "77": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "78": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "79": {
      "op": "b main_block@8"
    },
    "82": {
      "block": "main_block@8",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create@9"
    },
    "85": {
      "block": "main_after_inlined_test_cases.arc4_types.mutable_params2.MutableParams2.__algopy_default_create@9",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "86": {
      "op": "return",
      "stack_out": []
    },
    "87": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding[routing]",
      "params": {},
      "block": "test_array_rebinding",
      "stack_in": [],
      "op": "b test_array_rebinding_block@0"
    },
    "90": {
      "block": "test_array_rebinding_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "op": "callsub test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding"
    },
    "93": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "94": {
      "op": "return",
      "stack_out": []
    },
    "95": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "params": {},
      "block": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding",
      "stack_in": [],
      "op": "b test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding_block@0"
    },
    "98": {
      "block": "test_cases.arc4_types.mutable_params2.MutableParams2.test_array_rebinding_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "99": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "100": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "103": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x00"
      ]
    },
    "104": {
      "op": "concat",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "105": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a#0",
        "1"
      ]
    },
    "106": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "109": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "2"
      ]
    },
    "111": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "112": {
      "op": "extract 6 2",
      "defined_out": [
        "a#0",
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%len_u16%1#0"
      ]
    },
    "115": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "a#0",
        "aggregate%len_u16%1#0",
        "0x00"
      ]
    },
    "116": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%head%1#0"
      ]
    },
    "117": {
      "op": "bytec_0 // 0x01",
      "defined_out": [
        "0x01",
        "a#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%head%1#0",
        "0x01"
      ]
    },
    "118": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a#0",
        "encoded_array%1#0"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "120": {
      "op": "assert",
      "stack_out": []
    },
    "121": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "122": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "123": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%2#0"
      ],
      "stack_out": [
        "aggregate%len_u16%2#0"
      ]
    },
    "126": {
      "op": "bytec_0 // 0x01",
      "stack_out": [
        "aggregate%len_u16%2#0",
        "0x01"
      ]
    },
    "127": {
      "op": "concat",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "128": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "0"
      ]
    },
    "129": {
      "callsub": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "op": "callsub maybe_modify_array",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "132": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "3"
      ]
    },
    "133": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "aggregate%as_bytes%3#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "134": {
      "op": "extract 6 2",
      "defined_out": [
        "a#0",
        "aggregate%len_u16%3#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%len_u16%3#0"
      ]
    },
    "137": {
      "op": "bytec_0 // 0x01",
      "stack_out": [
        "a#0",
        "aggregate%len_u16%3#0",
        "0x01"
      ]
    },
    "138": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%head%4#0"
      ]
    },
    "139": {
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x2a",
        "a#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%head%4#0",
        "0x2a"
      ]
    },
    "142": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%head%5#0"
      ]
    },
    "143": {
      "op": "bytec_1 // 0x04",
      "defined_out": [
        "0x04",
        "a#0",
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%head%5#0",
        "0x04"
      ]
    },
    "144": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "encoded_array%3#0"
      ],
      "stack_out": [
        "a#0",
        "encoded_array%3#0"
      ]
    },
    "145": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "146": {
      "op": "assert",
      "stack_out": []
    },
    "147": {
      "retsub": true,
      "op": "retsub"
    },
    "148": {
      "subroutine": "test_cases.arc4_types.mutable_params2.MutableParams2.maybe_modify_array",
      "params": {
        "a#0": "bytes",
        "assign_local#0": "uint64"
      },
      "block": "maybe_modify_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "151": {
      "op": "b maybe_modify_array_block@0"
    },
    "154": {
      "block": "maybe_modify_array_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0"
      ]
    },
    "155": {
      "op": "frame_dig -2",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "157": {
      "op": "frame_dig -1",
      "defined_out": [
        "assign_local#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "assign_local#0 (copy)"
      ]
    },
    "159": {
      "op": "bz maybe_modify_array_else_body@10",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "162": {
      "op": "b maybe_modify_array_if_body@1"
    },
    "165": {
      "block": "maybe_modify_array_if_body@1",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x"
      ]
    },
    "166": {
      "op": "bytec_0 // 0x01",
      "defined_out": [
        "0x",
        "0x01"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x",
        "0x01"
      ]
    },
    "167": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%0#0"
      ]
    },
    "168": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%0#0",
        "a#0 (copy)"
      ]
    },
    "170": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)",
        "tmp%0#0"
      ]
    },
    "172": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0"
      ]
    },
    "173": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "a#0 (copy)"
      ]
    },
    "175": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0 (copy)",
        "concat%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "176": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "177": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "178": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "179": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "180": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "183": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "185": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "186": {
      "op": "uncover 2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "188": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_Encoded(len+uint8[])%0#0"
      ]
    },
    "189": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "191": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "1"
      ]
    },
    "192": {
      "op": "bz maybe_modify_array_after_if_else@3",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "195": {
      "op": "b maybe_modify_array_if_body@2"
    },
    "198": {
      "block": "maybe_modify_array_if_body@2",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "200": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "202": {
      "op": "b maybe_modify_array_after_if_else@3"
    },
    "205": {
      "block": "maybe_modify_array_after_if_else@3",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "3"
      ]
    },
    "206": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "207": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%len_u16%0#0"
      ]
    },
    "210": {
      "op": "bytec_0 // 0x01",
      "defined_out": [
        "0x01",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%len_u16%0#0",
        "0x01"
      ]
    },
    "211": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%1#0"
      ]
    },
    "212": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%1#0",
        "0x02"
      ]
    },
    "215": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%2#0"
      ]
    },
    "216": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%2#0",
        "0x03"
      ]
    },
    "219": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "encoded_array%0#0"
      ]
    },
    "220": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "222": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0"
      ]
    },
    "223": {
      "op": "bz maybe_modify_array_after_if_else@5",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "226": {
      "op": "b maybe_modify_array_if_body@4"
    },
    "229": {
      "block": "maybe_modify_array_if_body@4",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "231": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "233": {
      "op": "b maybe_modify_array_after_if_else@5"
    },
    "236": {
      "block": "maybe_modify_array_after_if_else@5",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x"
      ]
    },
    "237": {
      "op": "bytec_1 // 0x04",
      "defined_out": [
        "0x",
        "0x04"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x",
        "0x04"
      ]
    },
    "238": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%1#0"
      ]
    },
    "239": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%1#0",
        "a#0 (copy)"
      ]
    },
    "241": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)",
        "tmp%1#0"
      ]
    },
    "243": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0"
      ]
    },
    "244": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "a#0 (copy)"
      ]
    },
    "246": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0 (copy)",
        "concat%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "247": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "248": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "249": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "250": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "251": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "254": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "257": {
      "op": "uncover 2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "259": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_Encoded(len+uint8[])%1#0"
      ]
    },
    "260": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "262": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0"
      ]
    },
    "263": {
      "op": "bz maybe_modify_array_after_if_else@7",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "266": {
      "op": "b maybe_modify_array_if_body@6"
    },
    "269": {
      "block": "maybe_modify_array_if_body@6",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "271": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "273": {
      "op": "b maybe_modify_array_after_if_else@7"
    },
    "276": {
      "block": "maybe_modify_array_after_if_else@7",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "3"
      ]
    },
    "277": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "278": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%len_u16%1#0"
      ]
    },
    "281": {
      "op": "bytec_0 // 0x01",
      "defined_out": [
        "0x01",
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%len_u16%1#0",
        "0x01"
      ]
    },
    "282": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%5#0"
      ]
    },
    "283": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%5#0",
        "0x02"
      ]
    },
    "286": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%6#0"
      ]
    },
    "287": {
      "op": "bytec_1 // 0x04",
      "defined_out": [
        "0x04",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "aggregate%head%6#0",
        "0x04"
      ]
    },
    "288": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "encoded_array%1#0"
      ]
    },
    "289": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "encoded_array%1#0",
        "0"
      ]
    },
    "290": {
      "op": "frame_bury 0",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "encoded_array%1#0"
      ]
    },
    "292": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "294": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0"
      ]
    },
    "295": {
      "op": "bz maybe_modify_array_after_if_else@9",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "298": {
      "op": "b maybe_modify_array_if_body@8"
    },
    "301": {
      "block": "maybe_modify_array_if_body@8",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "303": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "305": {
      "op": "b maybe_modify_array_after_if_else@9"
    },
    "308": {
      "block": "maybe_modify_array_after_if_else@9",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "b maybe_modify_array_after_if_else@13"
    },
    "311": {
      "block": "maybe_modify_array_after_if_else@13",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x"
      ]
    },
    "312": {
      "op": "bytec_1 // 0x04",
      "defined_out": [
        "0x",
        "0x04"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x",
        "0x04"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%3#0"
      ]
    },
    "314": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%3#0",
        "a#0 (copy)"
      ]
    },
    "316": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)",
        "tmp%3#0"
      ]
    },
    "318": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0"
      ]
    },
    "319": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "a#0 (copy)"
      ]
    },
    "321": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0 (copy)",
        "concat%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "322": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%3#0",
        "extract_uint16%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "extract_uint16%3#0"
      ]
    },
    "323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%3#0",
        "extract_uint16%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "1"
      ]
    },
    "324": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "add%3#0"
      ]
    },
    "325": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "326": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "329": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%3#0",
        "concat%3#0"
      ]
    },
    "331": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "0"
      ]
    },
    "332": {
      "op": "uncover 2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%3#0",
        "0",
        "as_u16_bytes%3#0"
      ]
    },
    "334": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint8[])%3#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_Encoded(len+uint8[])%3#0"
      ]
    },
    "335": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "337": {
      "op": "frame_dig 0",
      "defined_out": [
        "a%is_original#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%is_original#0"
      ]
    },
    "339": {
      "op": "bz maybe_modify_array_after_if_else@15",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "342": {
      "op": "b maybe_modify_array_if_body@14"
    },
    "345": {
      "block": "maybe_modify_array_if_body@14",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "347": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "349": {
      "op": "b maybe_modify_array_after_if_else@15"
    },
    "352": {
      "block": "maybe_modify_array_after_if_else@15",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "a%out#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a%out#0"
      ]
    },
    "354": {
      "op": "frame_bury 0"
    },
    "356": {
      "retsub": true,
      "op": "retsub"
    },
    "357": {
      "block": "maybe_modify_array_else_body@10",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x"
      ]
    },
    "358": {
      "op": "pushbytes 0x2a",
      "defined_out": [
        "0x",
        "0x2a"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "0x",
        "0x2a"
      ]
    },
    "361": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%2#0"
      ]
    },
    "362": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "tmp%2#0",
        "a#0 (copy)"
      ]
    },
    "364": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)",
        "tmp%2#0"
      ]
    },
    "366": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0"
      ]
    },
    "367": {
      "op": "frame_dig -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "a#0 (copy)"
      ]
    },
    "369": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0 (copy)",
        "concat%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "a#0 (copy)",
        "0"
      ]
    },
    "370": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "371": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "372": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "373": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "374": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "377": {
      "op": "uncover 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "380": {
      "op": "uncover 2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "382": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint8[])%2#0"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "as_Encoded(len+uint8[])%2#0"
      ]
    },
    "383": {
      "op": "frame_bury -2",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "385": {
      "op": "intc_1 // 1",
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "1"
      ]
    },
    "386": {
      "op": "bz maybe_modify_array_after_if_else@12",
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "389": {
      "op": "b maybe_modify_array_if_body@11"
    },
    "392": {
      "block": "maybe_modify_array_if_body@11",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a%is_original#0",
        "a%out#0",
        "a#0 (copy)"
      ]
    },
    "394": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a%is_original#0",
        "a%out#0"
      ]
    },
    "396": {
      "op": "b maybe_modify_array_after_if_else@12"
    },
    "399": {
      "block": "maybe_modify_array_after_if_else@12",
      "stack_in": [
        "a%is_original#0",
        "a%out#0"
      ],
      "op": "b maybe_modify_array_after_if_else@13"
    }
  }
}