#pragma version 10

test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.approval_program:
    intcblock 0 6 1
    bytecblock 0x 0x0001 0x151f7c75 0x000158 0x000159 0x0003
    callsub __puya_arc4_router__
    return


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    proto 0 1
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __puya_arc4_router___bare_routing@6
    txna ApplicationArgs 0
    pushbytes 0x6b10e527 // method "xyz()string[]"
    pushbytes 0x94ddb1c2 // method "xyz_raw()string[]"
    uncover 2
    match __puya_arc4_router___xyz_route@2 __puya_arc4_router___xyz_raw_route@3
    b __puya_arc4_router___switch_case_default@4

__puya_arc4_router___xyz_route@2:
    // arc4_types/dynamic_string_array.py:5
    // @arc4.abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub xyz
    bytec_2 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    retsub

__puya_arc4_router___xyz_raw_route@3:
    // arc4_types/dynamic_string_array.py:13
    // @arc4.abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub xyz_raw
    bytec_2 // 0x151f7c75
    swap
    concat
    log
    intc_2 // 1
    retsub

__puya_arc4_router___switch_case_default@4:
    b __puya_arc4_router___after_if_else@10

__puya_arc4_router___bare_routing@6:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    swap
    match __puya_arc4_router_____algopy_default_create@7
    b __puya_arc4_router___switch_case_default@8

__puya_arc4_router_____algopy_default_create@7:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    callsub __algopy_default_create
    intc_2 // 1
    retsub

__puya_arc4_router___switch_case_default@8:

__puya_arc4_router___after_if_else@10:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    intc_0 // 0
    retsub


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz() -> bytes:
xyz:
    // arc4_types/dynamic_string_array.py:5-6
    // @arc4.abimethod
    // def xyz(self) -> arc4.DynamicArray[arc4.String]:
    proto 0 1
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    intc_1 // 6
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    // arc4_types/dynamic_string_array.py:8
    // arc4.String("X"),
    bytec_3 // 0x000158
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    len
    intc_1 // 6
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    // arc4_types/dynamic_string_array.py:9
    // arc4.String("Y"),
    bytec 4 // 0x000159
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    len
    +
    itob
    extract 6 2
    concat
    // arc4_types/dynamic_string_array.py:8
    // arc4.String("X"),
    bytec_3 // 0x000158
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    concat
    // arc4_types/dynamic_string_array.py:9
    // arc4.String("Y"),
    bytec 4 // 0x000159
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    concat
    // arc4_types/dynamic_string_array.py:10
    // arc4.String("Z"),
    pushbytes 0x00015a
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    concat
    bytec 5 // 0x0003
    swap
    concat
    retsub


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw() -> bytes:
xyz_raw:
    // arc4_types/dynamic_string_array.py:13-14
    // @arc4.abimethod
    // def xyz_raw(self) -> arc4.DynamicArray[arc4.String]:
    proto 0 1
    // arc4_types/dynamic_string_array.py:16
    // arc4.DynamicArray(arc4.Byte(88)),
    bytec_0 // 0x
    pushbytes 0x58
    concat
    bytec_1 // 0x0001
    swap
    concat
    // arc4_types/dynamic_string_array.py:17
    // arc4.DynamicArray(arc4.Byte(89)),
    bytec_0 // 0x
    pushbytes 0x59
    concat
    bytec_1 // 0x0001
    swap
    concat
    swap
    // arc4_types/dynamic_string_array.py:18
    // arc4.DynamicArray(arc4.Byte(90)),
    bytec_0 // 0x
    pushbytes 0x5a
    concat
    bytec_1 // 0x0001
    swap
    concat
    cover 2
    // arc4_types/dynamic_string_array.py:15-19
    // raw = arc4.DynamicArray(
    //     arc4.DynamicArray(arc4.Byte(88)),
    //     arc4.DynamicArray(arc4.Byte(89)),
    //     arc4.DynamicArray(arc4.Byte(90)),
    // )
    intc_1 // 6
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    intc_1 // 6
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    dig 3
    len
    +
    itob
    extract 6 2
    concat
    swap
    concat
    swap
    concat
    swap
    concat
    bytec 5 // 0x0003
    swap
    concat
    // arc4_types/dynamic_string_array.py:20
    // return arc4.DynamicArray[arc4.String].from_bytes(raw.bytes)
    retsub


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create() -> void:
__algopy_default_create:
    proto 0 0
    retsub
