#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0 6 3
    bytecblock 0x58 0x59 0x5a 0x151f7c75
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    txn NumAppArgs
    intc_1 // 0
    !=
    bz main___algopy_default_create@10
    b main_abi_routing@2

main_abi_routing@2:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion must be NoOp
    txn ApplicationID
    intc_1 // 0
    !=
    bz main_create_NoOp@8
    b main_call_NoOp@3

main_call_NoOp@3:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x6b10e527 // method "xyz()string[]"
    pushbytes 0x94ddb1c2 // method "xyz_raw()string[]"
    uncover 2
    match main_xyz_route@4 main_xyz_raw_route@5
    b main_switch_case_default@6

main_switch_case_default@6:
    b main_switch_case_next@7

main_switch_case_next@7:
    b main_after_if_else@9

main_after_if_else@9:
    b main_after_if_else@11

main_after_if_else@11:
    // arc4_types/dynamic_string_array.py:4
    // class Arc4DynamicStringArrayContract(ARC4Contract):
    err

main_xyz_raw_route@5:
    // arc4_types/dynamic_string_array.py:13
    // @arc4.abimethod
    callsub xyz_raw
    b main_switch_case_next@7

main_xyz_route@4:
    // arc4_types/dynamic_string_array.py:5
    // @arc4.abimethod
    callsub xyz
    b main_switch_case_next@7

main_create_NoOp@8:
    b main_after_if_else@9

main___algopy_default_create@10:
    txn OnCompletion
    intc_1 // NoOp
    ==
    txn ApplicationID
    intc_1 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    b main_block@13

main_block@13:
    b main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create@14

main_after_inlined_test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.__algopy_default_create@14:
    intc_0 // 1
    return


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz[routing]() -> void:
xyz:
    b xyz_block@0

xyz_block@0:
    // arc4_types/dynamic_string_array.py:5
    // @arc4.abimethod
    callsub test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz
    bytec_3 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw[routing]() -> void:
xyz_raw:
    b xyz_raw_block@0

xyz_raw_block@0:
    // arc4_types/dynamic_string_array.py:13
    // @arc4.abimethod
    callsub test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw
    bytec_3 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz() -> bytes:
test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz:
    b test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_block@0

test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_block@0:
    // arc4_types/dynamic_string_array.py:8
    // arc4.String("X"),
    bytec_0 // "X"
    len
    itob
    extract 6 2
    bytec_0 // "X"
    concat
    // arc4_types/dynamic_string_array.py:9
    // arc4.String("Y"),
    bytec_1 // "Y"
    len
    itob
    extract 6 2
    bytec_1 // "Y"
    concat
    cover 1
    // arc4_types/dynamic_string_array.py:10
    // arc4.String("Z"),
    bytec_2 // "Z"
    len
    itob
    extract 6 2
    bytec_2 // "Z"
    concat
    cover 2
    // arc4_types/dynamic_string_array.py:7-11
    // return arc4.DynamicArray(
    //     arc4.String("X"),
    //     arc4.String("Y"),
    //     arc4.String("Z"),
    // )
    intc_3 // 3
    itob
    extract 6 2
    intc_2 // 6
    itob
    extract 6 2
    concat
    dig 1
    len
    intc_2 // 6
    +
    dup
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    cover 1
    dig 3
    len
    +
    itob
    extract 6 2
    concat
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    retsub


// test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw() -> bytes:
test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw:
    b test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw_block@0

test_cases.arc4_types.dynamic_string_array.Arc4DynamicStringArrayContract.xyz_raw_block@0:
    // arc4_types/dynamic_string_array.py:16
    // arc4.DynamicArray(arc4.Byte(88)),
    intc_0 // 1
    itob
    extract 6 2
    bytec_0 // 0x58
    concat
    // arc4_types/dynamic_string_array.py:17
    // arc4.DynamicArray(arc4.Byte(89)),
    intc_0 // 1
    itob
    extract 6 2
    bytec_1 // 0x59
    concat
    cover 1
    // arc4_types/dynamic_string_array.py:18
    // arc4.DynamicArray(arc4.Byte(90)),
    intc_0 // 1
    itob
    extract 6 2
    bytec_2 // 0x5a
    concat
    cover 2
    // arc4_types/dynamic_string_array.py:15-19
    // raw = arc4.DynamicArray(
    //     arc4.DynamicArray(arc4.Byte(88)),
    //     arc4.DynamicArray(arc4.Byte(89)),
    //     arc4.DynamicArray(arc4.Byte(90)),
    // )
    intc_3 // 3
    itob
    extract 6 2
    intc_2 // 6
    itob
    extract 6 2
    concat
    dig 1
    len
    intc_2 // 6
    +
    dup
    itob
    extract 6 2
    uncover 2
    uncover 1
    concat
    cover 1
    dig 3
    len
    +
    itob
    extract 6 2
    concat
    uncover 1
    concat
    uncover 1
    concat
    uncover 1
    concat
    // arc4_types/dynamic_string_array.py:20
    // return arc4.DynamicArray[arc4.String].from_bytes(raw.bytes)
    retsub
