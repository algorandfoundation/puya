{
  "version": 3,
  "sources": [
    "../uint_overflow.py"
  ],
  "mappings": ";;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;;;;;;;;AAAA;AAgBK;;;;;;AALA;;;;;;AALA;;;;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;;AAbwB;;AAAmB;;;AAAnB;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACc;;;AAAjB;AAAP;;;;;AAIsB;;AAAmB;;;;AAAnB;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACc;;;;AAAjB;AAAP;;;;;AAIsB;;AAAmB;;;;;;AAAnB;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACc;;;;;;AAAjB;AAAP;;;;;AAI2B;;AAAjB;AAAA;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;AAAX;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 16 8"
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "b main_block@1"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "16": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "bz main___algopy_default_create@11",
      "stack_out": []
    },
    "20": {
      "op": "b main_abi_routing@2"
    },
    "23": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "25": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "26": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "28": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "30": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "31": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "32": {
      "op": "bz main_create_NoOp@9",
      "stack_out": []
    },
    "35": {
      "op": "b main_call_NoOp@3"
    },
    "38": {
      "block": "main_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "41": {
      "op": "pushbytes 0xea71ee7d // method \"test_uint8()void\"",
      "defined_out": [
        "Method(test_uint8()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint8()void)"
      ]
    },
    "47": {
      "op": "pushbytes 0xe31958f9 // method \"test_uint16()void\"",
      "defined_out": [
        "Method(test_uint16()void)",
        "Method(test_uint8()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint8()void)",
        "Method(test_uint16()void)"
      ]
    },
    "53": {
      "op": "pushbytes 0xc7ed8497 // method \"test_uint32()void\"",
      "defined_out": [
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "Method(test_uint8()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint8()void)",
        "Method(test_uint16()void)",
        "Method(test_uint32()void)"
      ]
    },
    "59": {
      "op": "pushbytes 0x65117897 // method \"test_as_uint64()void\"",
      "defined_out": [
        "Method(test_as_uint64()void)",
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "Method(test_uint8()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(test_uint8()void)",
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "Method(test_as_uint64()void)"
      ]
    },
    "65": {
      "op": "uncover 4",
      "stack_out": [
        "Method(test_uint8()void)",
        "Method(test_uint16()void)",
        "Method(test_uint32()void)",
        "Method(test_as_uint64()void)",
        "tmp%6#0"
      ]
    },
    "67": {
      "op": "match main_test_uint8_route@4 main_test_uint16_route@5 main_test_uint32_route@6 main_test_as_uint64_route@7",
      "stack_out": []
    },
    "77": {
      "op": "b main_switch_case_next@8"
    },
    "80": {
      "block": "main_switch_case_next@8",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "83": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "86": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "87": {
      "block": "main_test_as_uint64_route@7",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64[routing]",
      "op": "callsub test_as_uint64"
    },
    "90": {
      "op": "b main_switch_case_next@8"
    },
    "93": {
      "block": "main_test_uint32_route@6",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32[routing]",
      "op": "callsub test_uint32"
    },
    "96": {
      "op": "b main_switch_case_next@8"
    },
    "99": {
      "block": "main_test_uint16_route@5",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16[routing]",
      "op": "callsub test_uint16"
    },
    "102": {
      "op": "b main_switch_case_next@8"
    },
    "105": {
      "block": "main_test_uint8_route@4",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8[routing]",
      "op": "callsub test_uint8"
    },
    "108": {
      "op": "b main_switch_case_next@8"
    },
    "111": {
      "block": "main_create_NoOp@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "114": {
      "block": "main___algopy_default_create@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "116": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "117": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "118": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "121": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "122": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "123": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "124": {
      "op": "b main_block@14"
    },
    "127": {
      "block": "main_block@14",
      "stack_in": [],
      "op": "b main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create@15"
    },
    "130": {
      "block": "main_after_inlined_test_cases.arc4_types.uint_overflow.UIntOverflow.__algopy_default_create@15",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "131": {
      "op": "return",
      "stack_out": []
    },
    "132": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8[routing]",
      "params": {},
      "block": "test_uint8",
      "stack_in": [],
      "op": "b test_uint8_block@0"
    },
    "135": {
      "block": "test_uint8_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8",
      "op": "callsub test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8"
    },
    "138": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "139": {
      "op": "return",
      "stack_out": []
    },
    "140": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16[routing]",
      "params": {},
      "block": "test_uint16",
      "stack_in": [],
      "op": "b test_uint16_block@0"
    },
    "143": {
      "block": "test_uint16_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16",
      "op": "callsub test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16"
    },
    "146": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "147": {
      "op": "return",
      "stack_out": []
    },
    "148": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32[routing]",
      "params": {},
      "block": "test_uint32",
      "stack_in": [],
      "op": "b test_uint32_block@0"
    },
    "151": {
      "block": "test_uint32_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32",
      "op": "callsub test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32"
    },
    "154": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "155": {
      "op": "return",
      "stack_out": []
    },
    "156": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64[routing]",
      "params": {},
      "block": "test_as_uint64",
      "stack_in": [],
      "op": "b test_as_uint64_block@0"
    },
    "159": {
      "block": "test_as_uint64_block@0",
      "stack_in": [],
      "callsub": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64",
      "op": "callsub test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64"
    },
    "162": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "163": {
      "op": "return",
      "stack_out": []
    },
    "164": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8",
      "params": {},
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8",
      "stack_in": [],
      "op": "b test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8_block@0"
    },
    "167": {
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint8_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "169": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "256"
      ]
    },
    "172": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "173": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "174": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "175": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "176": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "8"
      ]
    },
    "177": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "178": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "179": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "7"
      ]
    },
    "181": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "7",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "7",
        "1"
      ]
    },
    "182": {
      "op": "extract3",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "183": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0x01"
      ]
    },
    "186": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "187": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "188": {
      "retsub": true,
      "op": "retsub"
    },
    "189": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16",
      "params": {},
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16",
      "stack_in": [],
      "op": "b test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16_block@0"
    },
    "192": {
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint16_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "194": {
      "op": "pushint 65536 // 65536",
      "defined_out": [
        "65536",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "65536"
      ]
    },
    "198": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "199": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "200": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "201": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "202": {
      "op": "intc_2 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "16"
      ]
    },
    "203": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "204": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "205": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "6"
      ]
    },
    "207": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "6",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "6",
        "2"
      ]
    },
    "209": {
      "op": "extract3",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "210": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0x0001"
      ]
    },
    "214": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "215": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "216": {
      "retsub": true,
      "op": "retsub"
    },
    "217": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32",
      "params": {},
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32",
      "stack_in": [],
      "op": "b test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32_block@0"
    },
    "220": {
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_uint32_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "222": {
      "op": "pushint 4294967296 // 4294967296",
      "defined_out": [
        "4294967296",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "4294967296"
      ]
    },
    "228": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "229": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "230": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "231": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "232": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "32"
      ]
    },
    "234": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "235": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "236": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "4"
      ]
    },
    "238": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "4",
        "4"
      ]
    },
    "240": {
      "op": "extract3",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "241": {
      "op": "pushbytes 0x00000001",
      "defined_out": [
        "0x00000001",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0x00000001"
      ]
    },
    "247": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "248": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "249": {
      "retsub": true,
      "op": "retsub"
    },
    "250": {
      "subroutine": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64",
      "params": {},
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64",
      "stack_in": [],
      "op": "b test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64_block@0"
    },
    "253": {
      "block": "test_cases.arc4_types.uint_overflow.UIntOverflow.test_as_uint64_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "255": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "256": {
      "op": "pushbytes 0x010000000000000000",
      "defined_out": [
        "0x010000000000000000",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x010000000000000000"
      ]
    },
    "267": {
      "op": "b+",
      "defined_out": [
        "biguint#0"
      ],
      "stack_out": [
        "biguint#0"
      ]
    },
    "268": {
      "op": "dup",
      "defined_out": [
        "biguint#0",
        "biguint#0 (copy)"
      ],
      "stack_out": [
        "biguint#0",
        "biguint#0 (copy)"
      ]
    },
    "269": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "biguint#0"
      ],
      "stack_out": [
        "biguint#0",
        "aggregate%value_len%0#0"
      ]
    },
    "270": {
      "op": "intc_2 // 16",
      "defined_out": [
        "16",
        "aggregate%value_len%0#0",
        "biguint#0"
      ],
      "stack_out": [
        "biguint#0",
        "aggregate%value_len%0#0",
        "16"
      ]
    },
    "271": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "biguint#0"
      ],
      "stack_out": [
        "biguint#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "272": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "biguint#0"
      ]
    },
    "273": {
      "op": "intc_2 // 16",
      "stack_out": [
        "biguint#0",
        "16"
      ]
    },
    "274": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "biguint#0"
      ],
      "stack_out": [
        "biguint#0",
        "aggregate%bzero%0#0"
      ]
    },
    "275": {
      "op": "b|",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "276": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "277": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "278": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%bitlen%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%bitlen%0#0",
        "64"
      ]
    },
    "280": {
      "op": "<=",
      "defined_out": [
        "aggregate%lte%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%lte%0#0"
      ]
    },
    "281": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "282": {
      "op": "dup",
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "283": {
      "op": "len",
      "defined_out": [
        "aggregate%len%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%len%0#0"
      ]
    },
    "284": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%len%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%len%0#0",
        "8"
      ]
    },
    "285": {
      "op": "-",
      "defined_out": [
        "aggregate%sub%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%sub%0#0"
      ]
    },
    "286": {
      "op": "extract_uint64",
      "defined_out": [
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0"
      ]
    },
    "287": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "too_big#0"
      ],
      "stack_out": [
        "too_big#0",
        "0"
      ]
    },
    "288": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "289": {
      "error": "this should not happen",
      "op": "assert // this should not happen",
      "stack_out": []
    },
    "290": {
      "retsub": true,
      "op": "retsub"
    }
  }
}