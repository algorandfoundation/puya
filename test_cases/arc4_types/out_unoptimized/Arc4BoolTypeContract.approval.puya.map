{
  "version": 3,
  "sources": [
    "../bool.py"
  ],
  "mappings": ";;;;;;;;;;;;AAYwB;AAAA;AAAS;AAAT;AAAgB;AAAA;AAAS;AAAT;AAAhC;;;;AAEa;;AAAA;AAAA;AAAsB;AAA/B;AAAA;;AAAA;AADG;AAAA;AAAA;;AAAA;;AAAA;AAAP;AAKI;AAAA;AAAS;AAAT;AACA;AAAA;AAAS;AAAT;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AAZmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAehB;AAA8B;;;;AAA9B;AAAP;AAEO;AAAqB;AAArB;AAAA;AAAA;AAAA;;AAAA;AAA2B;AAAA;AAAS;AAAT;AAA3B;AAAP;AAC4B;AAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA4B;AAAA;AAAS;AAAT;AAA5B;AAAP;AAGI;AAAA;AAAS;AAAT;AAAgB;AAAA;AAAS;AAAT;AAAiB;AAAA;AAAS;AAAT;AAAA;;AADb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAIc;;;;;AAA/B;AAAP;AAEO;AAAA;AAAS;AAAT;;AAAA;AAAkB;AAAlB;AAAP;AACO;AAAA;AAAS;AAAT;;AAAA;AAAmB;AAAnB;AAAP;AACgB;AAAA;AAAS;AAAT;;AAAA;AAAT;AAAA;AAAP;AACgB;AAAA;AAAS;AAAT;;AAAA;AAAT;AAAA;AAAP;AAEO;AAAP;AAKR;;;AAEe;;;AAAA;AAAP;AAEW;;;AAAA;AAAJ;AAAP;AAEwB;;;AAAA;AAAT;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAP;AACyB;;;AAAA;AAAT;AAAA;AAAA;;AAAA;AAAT;;AAAA;AAAP;AAEO;;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 12"
    },
    "7": {
      "op": "bytecblock 0x00 0x"
    },
    "12": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "14": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1"
      ],
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "15": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "16": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "17": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "18": {
      "op": "dup",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "19": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "20": {
      "callsub": "test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff",
      "op": "callsub test_stuff",
      "defined_out": [
        "{test_stuff}"
      ],
      "stack_out": [
        "{test_stuff}"
      ]
    },
    "23": {
      "op": "pop",
      "stack_out": []
    },
    "24": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "27": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "28": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%1#0",
        "1"
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "1",
        "0"
      ]
    },
    "30": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "0",
        "tmp%1#0"
      ]
    },
    "32": {
      "op": "select",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "33": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "34": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "35": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "37": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0"
      ]
    },
    "38": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%2#0",
        "0"
      ]
    },
    "39": {
      "op": "getbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "40": {
      "error": "conditional expr",
      "op": "assert // conditional expr",
      "stack_out": []
    },
    "41": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "42": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "43": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "44": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0"
      ],
      "stack_out": [
        "encoded_bool%3#0"
      ]
    },
    "45": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%3#0",
        "0x00"
      ]
    },
    "46": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%3#0",
        "0x00",
        "0"
      ]
    },
    "47": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "48": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "49": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "50": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "51": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "52": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0"
      ],
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0"
      ]
    },
    "53": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "55": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "56": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "57": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "58": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0"
      ],
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%6#0"
      ]
    },
    "59": {
      "op": "cover 3",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "61": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "62": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "63": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "64": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0"
      ],
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%7#0"
      ]
    },
    "65": {
      "op": "cover 4",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "67": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "68": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "69": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "70": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0"
      ],
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%8#0"
      ]
    },
    "71": {
      "op": "cover 5",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "73": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "74": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "75": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "76": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%9#0"
      ]
    },
    "77": {
      "op": "cover 6",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "79": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "80": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "81": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "82": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%10#0"
      ]
    },
    "83": {
      "op": "cover 7",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "85": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "87": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "88": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%11#0"
      ]
    },
    "89": {
      "op": "cover 8",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "91": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "92": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "93": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "94": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%12#0"
      ]
    },
    "95": {
      "op": "cover 8",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "97": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "98": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "99": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "100": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%13#0"
      ]
    },
    "101": {
      "op": "cover 10",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "103": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "104": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "105": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "106": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%14#0"
      ]
    },
    "107": {
      "op": "cover 11",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "109": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x"
      ]
    },
    "110": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%4#0",
        "0x",
        "encoded_bool%3#0"
      ]
    },
    "112": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail%0#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%4#0",
        "array_head_and_tail%0#0"
      ]
    },
    "113": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "encoded_bool%4#0"
      ]
    },
    "114": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "encoded_bool%4#0",
        "0"
      ]
    },
    "115": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%0#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "is_true%0#0"
      ]
    },
    "116": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "is_true%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "117": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "is_true%0#0",
        "array_head_and_tail%0#0",
        "1"
      ]
    },
    "118": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "1",
        "is_true%0#0"
      ]
    },
    "120": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%1#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%1#0"
      ]
    },
    "121": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "encoded_bool%5#0"
      ]
    },
    "122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "encoded_bool%5#0",
        "0"
      ]
    },
    "123": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%1#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "is_true%1#0"
      ]
    },
    "124": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "is_true%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "125": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%1#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "is_true%1#0",
        "array_head_and_tail%1#0",
        "2"
      ]
    },
    "126": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "2",
        "is_true%1#0"
      ]
    },
    "128": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%2#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%2#0"
      ]
    },
    "129": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "encoded_bool%6#0"
      ]
    },
    "130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "encoded_bool%6#0",
        "0"
      ]
    },
    "131": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%2#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "is_true%2#0"
      ]
    },
    "132": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "is_true%2#0",
        "array_head_and_tail%2#0"
      ]
    },
    "133": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "array_head_and_tail%2#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "is_true%2#0",
        "array_head_and_tail%2#0",
        "3"
      ]
    },
    "135": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "3",
        "is_true%2#0"
      ]
    },
    "137": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%3#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%3#0"
      ]
    },
    "138": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "encoded_bool%7#0"
      ]
    },
    "139": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "encoded_bool%7#0",
        "0"
      ]
    },
    "140": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%3#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "is_true%3#0"
      ]
    },
    "141": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "is_true%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "142": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array_head_and_tail%3#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "is_true%3#0",
        "array_head_and_tail%3#0",
        "4"
      ]
    },
    "144": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "4",
        "is_true%3#0"
      ]
    },
    "146": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%4#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%4#0"
      ]
    },
    "147": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "encoded_bool%8#0"
      ]
    },
    "148": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "encoded_bool%8#0",
        "0"
      ]
    },
    "149": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%4#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%9#0",
        "is_true%4#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "is_true%4#0"
      ]
    },
    "150": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "is_true%4#0",
        "array_head_and_tail%4#0"
      ]
    },
    "151": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "array_head_and_tail%4#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%9#0",
        "is_true%4#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "is_true%4#0",
        "array_head_and_tail%4#0",
        "5"
      ]
    },
    "153": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "5",
        "is_true%4#0"
      ]
    },
    "155": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%5#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%5#0"
      ]
    },
    "156": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "encoded_bool%9#0"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "encoded_bool%9#0",
        "0"
      ]
    },
    "158": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%5#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%5#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "is_true%5#0"
      ]
    },
    "159": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "is_true%5#0",
        "array_head_and_tail%5#0"
      ]
    },
    "160": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "array_head_and_tail%5#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%5#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "is_true%5#0",
        "array_head_and_tail%5#0",
        "6"
      ]
    },
    "162": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "6",
        "is_true%5#0"
      ]
    },
    "164": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%6#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%6#0"
      ]
    },
    "165": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "encoded_bool%10#0"
      ]
    },
    "166": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "encoded_bool%10#0",
        "0"
      ]
    },
    "167": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%6#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%6#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "is_true%6#0"
      ]
    },
    "168": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "is_true%6#0",
        "array_head_and_tail%6#0"
      ]
    },
    "169": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_head_and_tail%6#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%6#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "is_true%6#0",
        "array_head_and_tail%6#0",
        "7"
      ]
    },
    "171": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "7",
        "is_true%6#0"
      ]
    },
    "173": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%7#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%7#0"
      ]
    },
    "174": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%12#0",
        "array_head_and_tail%7#0",
        "encoded_bool%11#0"
      ]
    },
    "176": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail%8#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%12#0",
        "array_head_and_tail%8#0"
      ]
    },
    "177": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "encoded_bool%12#0"
      ]
    },
    "178": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "encoded_bool%12#0",
        "0"
      ]
    },
    "179": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%8#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%7#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "is_true%7#0"
      ]
    },
    "180": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "is_true%7#0",
        "array_head_and_tail%8#0"
      ]
    },
    "181": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "array_head_and_tail%8#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%7#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "is_true%7#0",
        "array_head_and_tail%8#0",
        "9"
      ]
    },
    "183": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "9",
        "is_true%7#0"
      ]
    },
    "185": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%9#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%9#0"
      ]
    },
    "186": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "encoded_bool%13#0"
      ]
    },
    "187": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "encoded_bool%13#0",
        "0"
      ]
    },
    "188": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%9#0",
        "encoded_bool%14#0",
        "is_true%8#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "is_true%8#0"
      ]
    },
    "189": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "is_true%8#0",
        "array_head_and_tail%9#0"
      ]
    },
    "190": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "array_head_and_tail%9#0",
        "encoded_bool%14#0",
        "is_true%8#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "is_true%8#0",
        "array_head_and_tail%9#0",
        "10"
      ]
    },
    "192": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "10",
        "is_true%8#0"
      ]
    },
    "194": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%10#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%10#0"
      ]
    },
    "195": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail%10#0",
        "encoded_bool%14#0"
      ]
    },
    "196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_head_and_tail%10#0",
        "encoded_bool%14#0",
        "0"
      ]
    },
    "197": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%10#0",
        "is_true%9#0"
      ],
      "stack_out": [
        "array_head_and_tail%10#0",
        "is_true%9#0"
      ]
    },
    "198": {
      "op": "swap",
      "stack_out": [
        "is_true%9#0",
        "array_head_and_tail%10#0"
      ]
    },
    "199": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "array_head_and_tail%10#0",
        "is_true%9#0"
      ],
      "stack_out": [
        "is_true%9#0",
        "array_head_and_tail%10#0",
        "11"
      ]
    },
    "201": {
      "op": "uncover 2",
      "stack_out": [
        "array_head_and_tail%10#0",
        "11",
        "is_true%9#0"
      ]
    },
    "203": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%11#0"
      ],
      "stack_out": [
        "array_head_and_tail%11#0"
      ]
    },
    "204": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "array_head_and_tail%11#0",
        "0x"
      ]
    },
    "205": {
      "op": "swap",
      "stack_out": [
        "0x",
        "array_head_and_tail%11#0"
      ]
    },
    "206": {
      "op": "concat",
      "defined_out": [
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0"
      ]
    },
    "207": {
      "op": "dup",
      "defined_out": [
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)"
      ]
    },
    "208": {
      "op": "pushbytes 0xfff0",
      "defined_out": [
        "0xfff0",
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)",
        "0xfff0"
      ]
    },
    "212": {
      "op": "==",
      "defined_out": [
        "static_boolean_array#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "tmp%3#0"
      ]
    },
    "213": {
      "op": "assert",
      "stack_out": [
        "static_boolean_array#0"
      ]
    },
    "214": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%12#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "array_head_and_tail%12#0"
      ]
    },
    "215": {
      "op": "intc_0 // 0",
      "stack_out": [
        "static_boolean_array#0",
        "array_head_and_tail%12#0",
        "0"
      ]
    },
    "216": {
      "op": "getbit",
      "defined_out": [
        "is_true%10#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "is_true%10#0"
      ]
    },
    "217": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "static_boolean_array#0",
        "is_true%10#0",
        "0x00"
      ]
    },
    "218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "static_boolean_array#0",
        "is_true%10#0",
        "0x00",
        "0"
      ]
    },
    "219": {
      "op": "uncover 2",
      "stack_out": [
        "static_boolean_array#0",
        "0x00",
        "0",
        "is_true%10#0"
      ]
    },
    "221": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%15#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0"
      ]
    },
    "222": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "0x00"
      ]
    },
    "223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "0x00",
        "0"
      ]
    },
    "224": {
      "op": "intc_1 // 1",
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "225": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%15#0",
        "encoded_bool%16#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "encoded_bool%16#0"
      ]
    },
    "226": {
      "op": "==",
      "defined_out": [
        "static_boolean_array#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "tmp%4#0"
      ]
    },
    "227": {
      "error": "Single boolean can be unpacked",
      "op": "assert // Single boolean can be unpacked",
      "stack_out": [
        "static_boolean_array#0"
      ]
    },
    "228": {
      "op": "intc_3 // 12",
      "defined_out": [
        "12",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "12"
      ]
    },
    "229": {
      "op": "intc_1 // 1",
      "stack_out": [
        "static_boolean_array#0",
        "12",
        "1"
      ]
    },
    "230": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0"
      ]
    },
    "231": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "232": {
      "op": "intc_3 // 12",
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "12"
      ]
    },
    "233": {
      "op": "<",
      "defined_out": [
        "array_head_and_tail%13#0",
        "index_is_in_bounds%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "234": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0"
      ]
    },
    "235": {
      "op": "getbit",
      "defined_out": [
        "is_true%11#0"
      ],
      "stack_out": [
        "is_true%11#0"
      ]
    },
    "236": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "is_true%11#0",
        "0x00"
      ]
    },
    "237": {
      "op": "intc_0 // 0",
      "stack_out": [
        "is_true%11#0",
        "0x00",
        "0"
      ]
    },
    "238": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%11#0"
      ]
    },
    "240": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%17#0"
      ],
      "stack_out": [
        "encoded_bool%17#0"
      ]
    },
    "241": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%17#0",
        "0x00"
      ]
    },
    "242": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%17#0",
        "0x00",
        "0"
      ]
    },
    "243": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%17#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "244": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%17#0",
        "encoded_bool%18#0"
      ],
      "stack_out": [
        "encoded_bool%17#0",
        "encoded_bool%18#0"
      ]
    },
    "245": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "246": {
      "error": "Single boolean can be unpacked",
      "op": "assert // Single boolean can be unpacked",
      "stack_out": []
    },
    "247": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "248": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "249": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "250": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%19#0"
      ],
      "stack_out": [
        "encoded_bool%19#0"
      ]
    },
    "251": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%19#0",
        "0x00"
      ]
    },
    "252": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%19#0",
        "0x00",
        "0"
      ]
    },
    "253": {
      "op": "dup",
      "stack_out": [
        "encoded_bool%19#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "254": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0"
      ],
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0"
      ]
    },
    "255": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x00"
      ]
    },
    "256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x00",
        "0"
      ]
    },
    "257": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "258": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "encoded_bool%21#0"
      ],
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "encoded_bool%21#0"
      ]
    },
    "259": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%19#0",
        "encoded_bool%20#0"
      ]
    },
    "261": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x"
      ]
    },
    "262": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%20#0",
        "0x",
        "encoded_bool%19#0"
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail%14#0",
        "encoded_bool%20#0",
        "encoded_bool%21#0"
      ],
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%20#0",
        "array_head_and_tail%14#0"
      ]
    },
    "265": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "encoded_bool%20#0"
      ]
    },
    "266": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "encoded_bool%20#0",
        "0"
      ]
    },
    "267": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%14#0",
        "encoded_bool%21#0",
        "is_true%12#0"
      ],
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "is_true%12#0"
      ]
    },
    "268": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%21#0",
        "is_true%12#0",
        "array_head_and_tail%14#0"
      ]
    },
    "269": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%21#0",
        "is_true%12#0",
        "array_head_and_tail%14#0",
        "1"
      ]
    },
    "270": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "1",
        "is_true%12#0"
      ]
    },
    "272": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%15#0",
        "encoded_bool%21#0"
      ],
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%15#0"
      ]
    },
    "273": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail%15#0",
        "encoded_bool%21#0"
      ]
    },
    "274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_head_and_tail%15#0",
        "encoded_bool%21#0",
        "0"
      ]
    },
    "275": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%15#0",
        "is_true%13#0"
      ],
      "stack_out": [
        "array_head_and_tail%15#0",
        "is_true%13#0"
      ]
    },
    "276": {
      "op": "swap",
      "stack_out": [
        "is_true%13#0",
        "array_head_and_tail%15#0"
      ]
    },
    "277": {
      "op": "intc_2 // 2",
      "stack_out": [
        "is_true%13#0",
        "array_head_and_tail%15#0",
        "2"
      ]
    },
    "278": {
      "op": "uncover 2",
      "stack_out": [
        "array_head_and_tail%15#0",
        "2",
        "is_true%13#0"
      ]
    },
    "280": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%16#0"
      ],
      "stack_out": [
        "array_head_and_tail%16#0"
      ]
    },
    "281": {
      "op": "pushbytes 0x0003",
      "defined_out": [
        "0x0003",
        "array_head_and_tail%16#0"
      ],
      "stack_out": [
        "array_head_and_tail%16#0",
        "0x0003"
      ]
    },
    "285": {
      "op": "swap",
      "stack_out": [
        "0x0003",
        "array_head_and_tail%16#0"
      ]
    },
    "286": {
      "op": "concat",
      "defined_out": [
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0"
      ]
    },
    "287": {
      "op": "pushbytes 0x0003a0",
      "defined_out": [
        "0x0003a0",
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "0x0003a0"
      ]
    },
    "292": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "293": {
      "op": "assert",
      "stack_out": []
    },
    "294": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "295": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "296": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "297": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%22#0"
      ],
      "stack_out": [
        "encoded_bool%22#0"
      ]
    },
    "298": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%22#0",
        "0"
      ]
    },
    "299": {
      "op": "getbit",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "300": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%8#0",
        "1"
      ]
    },
    "301": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "302": {
      "op": "assert",
      "stack_out": []
    },
    "303": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "304": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "305": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "306": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%23#0"
      ],
      "stack_out": [
        "encoded_bool%23#0"
      ]
    },
    "307": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%23#0",
        "0"
      ]
    },
    "308": {
      "op": "getbit",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "309": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%10#0",
        "1"
      ]
    },
    "310": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "311": {
      "op": "assert",
      "stack_out": []
    },
    "312": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "313": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "314": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "315": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%24#0"
      ],
      "stack_out": [
        "encoded_bool%24#0"
      ]
    },
    "316": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%24#0",
        "0"
      ]
    },
    "317": {
      "op": "getbit",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "318": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "319": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "320": {
      "op": "assert",
      "stack_out": []
    },
    "321": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "322": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "323": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "324": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%25#0"
      ],
      "stack_out": [
        "encoded_bool%25#0"
      ]
    },
    "325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%25#0",
        "0"
      ]
    },
    "326": {
      "op": "getbit",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "0"
      ]
    },
    "328": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "329": {
      "op": "assert",
      "stack_out": []
    },
    "330": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "331": {
      "op": "return",
      "stack_out": []
    },
    "332": {
      "subroutine": "test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff",
      "params": {
        "true#0": "bytes",
        "false#0": "bytes"
      },
      "block": "test_stuff",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "335": {
      "op": "frame_dig -2",
      "defined_out": [
        "true#0 (copy)"
      ],
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "337": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "true#0 (copy)"
      ],
      "stack_out": [
        "true#0 (copy)",
        "0"
      ]
    },
    "338": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "339": {
      "op": "assert",
      "stack_out": []
    },
    "340": {
      "op": "frame_dig -1",
      "defined_out": [
        "false#0 (copy)"
      ],
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "342": {
      "op": "intc_0 // 0",
      "stack_out": [
        "false#0 (copy)",
        "0"
      ]
    },
    "343": {
      "op": "getbit",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "344": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "345": {
      "op": "assert",
      "stack_out": []
    },
    "346": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "348": {
      "op": "intc_0 // 0",
      "stack_out": [
        "true#0 (copy)",
        "0"
      ]
    },
    "349": {
      "op": "getbit",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "350": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "351": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "352": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "354": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "355": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_bool%0#0",
        "true#0 (copy)"
      ]
    },
    "357": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "358": {
      "op": "assert",
      "stack_out": []
    },
    "359": {
      "op": "frame_dig -1",
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "361": {
      "op": "intc_0 // 0",
      "stack_out": [
        "false#0 (copy)",
        "0"
      ]
    },
    "362": {
      "op": "getbit",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "363": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%1#0",
        "0x00"
      ]
    },
    "364": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%1#0",
        "0x00",
        "0"
      ]
    },
    "365": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%1#0"
      ]
    },
    "367": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "368": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%1#0",
        "false#0 (copy)"
      ]
    },
    "370": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "371": {
      "op": "assert",
      "stack_out": []
    },
    "372": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "374": {
      "op": "intc_0 // 0",
      "stack_out": [
        "true#0 (copy)",
        "0"
      ]
    },
    "375": {
      "op": "getbit",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "376": {
      "retsub": true,
      "op": "retsub"
    }
  }
}