{
  "version": 3,
  "sources": [
    "../bool.py"
  ],
  "mappings": ";;;;;;;;;;;;AAYwB;AAAA;AAAS;AAAT;AAAgB;AAAA;AAAS;AAAT;AAAhC;;;;AAEa;;AAAA;AAAA;AAAsB;AAA/B;AAAA;;AAAA;AADG;AAAA;AAAA;;AAAA;;AAAA;AAAP;AAKI;AAAA;AAAS;AAAT;AACA;AAAA;AAAS;AAAT;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AACA;AAAA;AAAS;AAAT;AAAA;;AAZmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAehB;AAA8B;;;;AAA9B;AAAP;AAEO;AAAqB;AAArB;AAAA;AAAA;AAAA;;AAAA;AAA2B;AAAA;AAAS;AAAT;AAA3B;AAAP;AAC4B;;AAArB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA4B;AAAA;AAAS;AAAT;AAA5B;AAAP;AAGI;AAAA;AAAS;AAAT;AAAgB;AAAA;AAAS;AAAT;AAAiB;AAAA;AAAS;AAAT;AAAA;;AADb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAAA;AAIc;;;;;AAA/B;AAAP;AAEwB;;;AAEnB;AAAA;AAAS;AAAT;AAAgB;AAAA;AAAS;AAAT;AAAiB;AAAA;AAAS;AAAT;AAAgB;AAAA;AAAS;AAAT;AAAiB;AAAA;AAAS;AAAT;AADvE;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAGsC;;;;;AAA/B;AAAP;AAEO;AAAA;AAAS;AAAT;;AAAA;AAAkB;AAAlB;AAAP;AACO;AAAA;AAAS;AAAT;;AAAA;AAAmB;AAAnB;AAAP;AACgB;AAAA;AAAS;AAAT;;AAAA;AAAT;AAAA;AAAP;AACgB;AAAA;AAAS;AAAT;;AAAA;AAAT;AAAA;AAAP;AAEO;AAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBR;;;AAEW;;;;AAAA;AAAA;AAAP;AAdJ;;;AAEe;;;AAAA;AAAP;AAEW;;;AAAA;AAAJ;AAAP;AAEwB;;;AAAA;AAAT;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAP;AACyB;;;AAAA;AAAT;AAAA;AAAA;;AAAA;AAAT;;AAAA;AAAP;AAEO;;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.bool.Arc4BoolTypeContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 7 8"
    },
    "7": {
      "op": "bytecblock 0x00 0x"
    },
    "12": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "13": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "14": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1"
      ],
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "15": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "16": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "17": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "18": {
      "op": "dup",
      "stack_out": [
        "encoded_bool%0#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "19": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "20": {
      "callsub": "test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff",
      "op": "callsub test_stuff",
      "defined_out": [
        "{test_stuff}"
      ],
      "stack_out": [
        "{test_stuff}"
      ]
    },
    "23": {
      "op": "pop",
      "stack_out": []
    },
    "24": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "26": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "27": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "28": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%1#0",
        "1"
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "1",
        "0"
      ]
    },
    "30": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "0",
        "tmp%1#0"
      ]
    },
    "32": {
      "op": "select",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "33": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "34": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "35": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "37": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0"
      ]
    },
    "38": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%2#0",
        "0"
      ]
    },
    "39": {
      "op": "getbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "40": {
      "error": "conditional expr",
      "op": "assert // conditional expr",
      "stack_out": []
    },
    "41": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "42": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "43": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "44": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0"
      ],
      "stack_out": [
        "encoded_bool%3#0"
      ]
    },
    "45": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%3#0",
        "0x00"
      ]
    },
    "46": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%3#0",
        "0x00",
        "0"
      ]
    },
    "47": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "48": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ],
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "49": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "50": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "51": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "52": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0"
      ],
      "stack_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0"
      ]
    },
    "53": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "55": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "56": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "57": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "58": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0"
      ],
      "stack_out": [
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%6#0"
      ]
    },
    "59": {
      "op": "cover 3",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "61": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "62": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "63": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "64": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0"
      ],
      "stack_out": [
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%7#0"
      ]
    },
    "65": {
      "op": "cover 4",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "67": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "68": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "69": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "70": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0"
      ],
      "stack_out": [
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%8#0"
      ]
    },
    "71": {
      "op": "cover 5",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "73": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "74": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "75": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "76": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%9#0"
      ]
    },
    "77": {
      "op": "cover 6",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "79": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "80": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "81": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "82": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%10#0"
      ]
    },
    "83": {
      "op": "cover 7",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "85": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "87": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "88": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%11#0"
      ]
    },
    "89": {
      "op": "cover 8",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "91": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "92": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "93": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "94": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%12#0"
      ]
    },
    "95": {
      "op": "cover 8",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "97": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "98": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "99": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "100": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%13#0"
      ]
    },
    "101": {
      "op": "cover 10",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "103": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00"
      ]
    },
    "104": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0"
      ]
    },
    "105": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "106": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%14#0"
      ]
    },
    "107": {
      "op": "cover 11",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0"
      ]
    },
    "109": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%3#0",
        "encoded_bool%4#0",
        "0x"
      ]
    },
    "110": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%4#0",
        "0x",
        "encoded_bool%3#0"
      ]
    },
    "112": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail%0#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%4#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "encoded_bool%4#0",
        "array_head_and_tail%0#0"
      ]
    },
    "113": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "encoded_bool%4#0"
      ]
    },
    "114": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "encoded_bool%4#0",
        "0"
      ]
    },
    "115": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%0#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "is_true%0#0"
      ]
    },
    "116": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "is_true%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "117": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "is_true%0#0",
        "array_head_and_tail%0#0",
        "1"
      ]
    },
    "118": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%0#0",
        "1",
        "is_true%0#0"
      ]
    },
    "120": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%1#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%5#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "encoded_bool%5#0",
        "array_head_and_tail%1#0"
      ]
    },
    "121": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "encoded_bool%5#0"
      ]
    },
    "122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "encoded_bool%5#0",
        "0"
      ]
    },
    "123": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%1#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "is_true%1#0"
      ]
    },
    "124": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "is_true%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "125": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%1#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%1#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "is_true%1#0",
        "array_head_and_tail%1#0",
        "2"
      ]
    },
    "127": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%1#0",
        "2",
        "is_true%1#0"
      ]
    },
    "129": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%2#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%6#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "encoded_bool%6#0",
        "array_head_and_tail%2#0"
      ]
    },
    "130": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "encoded_bool%6#0"
      ]
    },
    "131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "encoded_bool%6#0",
        "0"
      ]
    },
    "132": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%2#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "is_true%2#0"
      ]
    },
    "133": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "is_true%2#0",
        "array_head_and_tail%2#0"
      ]
    },
    "134": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "array_head_and_tail%2#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%2#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "is_true%2#0",
        "array_head_and_tail%2#0",
        "3"
      ]
    },
    "136": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%2#0",
        "3",
        "is_true%2#0"
      ]
    },
    "138": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%3#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%7#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "encoded_bool%7#0",
        "array_head_and_tail%3#0"
      ]
    },
    "139": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "encoded_bool%7#0"
      ]
    },
    "140": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "encoded_bool%7#0",
        "0"
      ]
    },
    "141": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%3#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "is_true%3#0"
      ]
    },
    "142": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "is_true%3#0",
        "array_head_and_tail%3#0"
      ]
    },
    "143": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array_head_and_tail%3#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0",
        "is_true%3#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "is_true%3#0",
        "array_head_and_tail%3#0",
        "4"
      ]
    },
    "145": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%3#0",
        "4",
        "is_true%3#0"
      ]
    },
    "147": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%4#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%8#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "encoded_bool%8#0",
        "array_head_and_tail%4#0"
      ]
    },
    "148": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "encoded_bool%8#0"
      ]
    },
    "149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "encoded_bool%8#0",
        "0"
      ]
    },
    "150": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%4#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%9#0",
        "is_true%4#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "is_true%4#0"
      ]
    },
    "151": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "is_true%4#0",
        "array_head_and_tail%4#0"
      ]
    },
    "152": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "array_head_and_tail%4#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%9#0",
        "is_true%4#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "is_true%4#0",
        "array_head_and_tail%4#0",
        "5"
      ]
    },
    "154": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%4#0",
        "5",
        "is_true%4#0"
      ]
    },
    "156": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%5#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "encoded_bool%9#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "encoded_bool%9#0",
        "array_head_and_tail%5#0"
      ]
    },
    "157": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "encoded_bool%9#0"
      ]
    },
    "158": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "encoded_bool%9#0",
        "0"
      ]
    },
    "159": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%5#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%5#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "is_true%5#0"
      ]
    },
    "160": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "is_true%5#0",
        "array_head_and_tail%5#0"
      ]
    },
    "161": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "array_head_and_tail%5#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%5#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "is_true%5#0",
        "array_head_and_tail%5#0",
        "6"
      ]
    },
    "163": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%5#0",
        "6",
        "is_true%5#0"
      ]
    },
    "165": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%6#0",
        "encoded_bool%10#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%10#0",
        "array_head_and_tail%6#0"
      ]
    },
    "166": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "encoded_bool%10#0"
      ]
    },
    "167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "encoded_bool%10#0",
        "0"
      ]
    },
    "168": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%6#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%6#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "is_true%6#0"
      ]
    },
    "169": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "is_true%6#0",
        "array_head_and_tail%6#0"
      ]
    },
    "170": {
      "op": "intc_2 // 7",
      "defined_out": [
        "7",
        "array_head_and_tail%6#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%6#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "is_true%6#0",
        "array_head_and_tail%6#0",
        "7"
      ]
    },
    "171": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%6#0",
        "7",
        "is_true%6#0"
      ]
    },
    "173": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%7#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%11#0",
        "encoded_bool%12#0",
        "array_head_and_tail%7#0"
      ]
    },
    "174": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%12#0",
        "array_head_and_tail%7#0",
        "encoded_bool%11#0"
      ]
    },
    "176": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail%8#0",
        "encoded_bool%12#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "encoded_bool%12#0",
        "array_head_and_tail%8#0"
      ]
    },
    "177": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "encoded_bool%12#0"
      ]
    },
    "178": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "encoded_bool%12#0",
        "0"
      ]
    },
    "179": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%8#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%7#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "is_true%7#0"
      ]
    },
    "180": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "is_true%7#0",
        "array_head_and_tail%8#0"
      ]
    },
    "181": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "array_head_and_tail%8#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0",
        "is_true%7#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "is_true%7#0",
        "array_head_and_tail%8#0",
        "9"
      ]
    },
    "183": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%8#0",
        "9",
        "is_true%7#0"
      ]
    },
    "185": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%9#0",
        "encoded_bool%13#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "encoded_bool%13#0",
        "array_head_and_tail%9#0"
      ]
    },
    "186": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "encoded_bool%13#0"
      ]
    },
    "187": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "encoded_bool%13#0",
        "0"
      ]
    },
    "188": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%9#0",
        "encoded_bool%14#0",
        "is_true%8#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "is_true%8#0"
      ]
    },
    "189": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%14#0",
        "is_true%8#0",
        "array_head_and_tail%9#0"
      ]
    },
    "190": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "array_head_and_tail%9#0",
        "encoded_bool%14#0",
        "is_true%8#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "is_true%8#0",
        "array_head_and_tail%9#0",
        "10"
      ]
    },
    "192": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%9#0",
        "10",
        "is_true%8#0"
      ]
    },
    "194": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%10#0",
        "encoded_bool%14#0"
      ],
      "stack_out": [
        "encoded_bool%14#0",
        "array_head_and_tail%10#0"
      ]
    },
    "195": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail%10#0",
        "encoded_bool%14#0"
      ]
    },
    "196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_head_and_tail%10#0",
        "encoded_bool%14#0",
        "0"
      ]
    },
    "197": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%10#0",
        "is_true%9#0"
      ],
      "stack_out": [
        "array_head_and_tail%10#0",
        "is_true%9#0"
      ]
    },
    "198": {
      "op": "swap",
      "stack_out": [
        "is_true%9#0",
        "array_head_and_tail%10#0"
      ]
    },
    "199": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "array_head_and_tail%10#0",
        "is_true%9#0"
      ],
      "stack_out": [
        "is_true%9#0",
        "array_head_and_tail%10#0",
        "11"
      ]
    },
    "201": {
      "op": "uncover 2",
      "stack_out": [
        "array_head_and_tail%10#0",
        "11",
        "is_true%9#0"
      ]
    },
    "203": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%11#0"
      ],
      "stack_out": [
        "array_head_and_tail%11#0"
      ]
    },
    "204": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "array_head_and_tail%11#0",
        "0x"
      ]
    },
    "205": {
      "op": "swap",
      "stack_out": [
        "0x",
        "array_head_and_tail%11#0"
      ]
    },
    "206": {
      "op": "concat",
      "defined_out": [
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0"
      ]
    },
    "207": {
      "op": "dup",
      "defined_out": [
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)"
      ]
    },
    "208": {
      "op": "pushbytes 0xfff0",
      "defined_out": [
        "0xfff0",
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "static_boolean_array#0 (copy)",
        "0xfff0"
      ]
    },
    "212": {
      "op": "==",
      "defined_out": [
        "static_boolean_array#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "tmp%3#0"
      ]
    },
    "213": {
      "op": "assert",
      "stack_out": [
        "static_boolean_array#0"
      ]
    },
    "214": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%12#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "array_head_and_tail%12#0"
      ]
    },
    "215": {
      "op": "intc_0 // 0",
      "stack_out": [
        "static_boolean_array#0",
        "array_head_and_tail%12#0",
        "0"
      ]
    },
    "216": {
      "op": "getbit",
      "defined_out": [
        "is_true%10#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "is_true%10#0"
      ]
    },
    "217": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "static_boolean_array#0",
        "is_true%10#0",
        "0x00"
      ]
    },
    "218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "static_boolean_array#0",
        "is_true%10#0",
        "0x00",
        "0"
      ]
    },
    "219": {
      "op": "uncover 2",
      "stack_out": [
        "static_boolean_array#0",
        "0x00",
        "0",
        "is_true%10#0"
      ]
    },
    "221": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%15#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0"
      ]
    },
    "222": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "0x00"
      ]
    },
    "223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "0x00",
        "0"
      ]
    },
    "224": {
      "op": "intc_1 // 1",
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "225": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%15#0",
        "encoded_bool%16#0",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "encoded_bool%15#0",
        "encoded_bool%16#0"
      ]
    },
    "226": {
      "op": "==",
      "defined_out": [
        "static_boolean_array#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "tmp%4#0"
      ]
    },
    "227": {
      "error": "Single boolean can be unpacked",
      "op": "assert // Single boolean can be unpacked",
      "stack_out": [
        "static_boolean_array#0"
      ]
    },
    "228": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "static_boolean_array#0"
      ],
      "stack_out": [
        "static_boolean_array#0",
        "12"
      ]
    },
    "230": {
      "op": "intc_1 // 1",
      "stack_out": [
        "static_boolean_array#0",
        "12",
        "1"
      ]
    },
    "231": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0"
      ]
    },
    "232": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "233": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "tmp%5#0 (copy)",
        "12"
      ]
    },
    "235": {
      "op": "<",
      "defined_out": [
        "array_head_and_tail%13#0",
        "index_is_in_bounds%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "236": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "array_head_and_tail%13#0",
        "tmp%5#0"
      ]
    },
    "237": {
      "op": "getbit",
      "defined_out": [
        "is_true%11#0"
      ],
      "stack_out": [
        "is_true%11#0"
      ]
    },
    "238": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "is_true%11#0",
        "0x00"
      ]
    },
    "239": {
      "op": "intc_0 // 0",
      "stack_out": [
        "is_true%11#0",
        "0x00",
        "0"
      ]
    },
    "240": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_true%11#0"
      ]
    },
    "242": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%17#0"
      ],
      "stack_out": [
        "encoded_bool%17#0"
      ]
    },
    "243": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%17#0",
        "0x00"
      ]
    },
    "244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%17#0",
        "0x00",
        "0"
      ]
    },
    "245": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%17#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "246": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%17#0",
        "encoded_bool%18#0"
      ],
      "stack_out": [
        "encoded_bool%17#0",
        "encoded_bool%18#0"
      ]
    },
    "247": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "248": {
      "error": "Single boolean can be unpacked",
      "op": "assert // Single boolean can be unpacked",
      "stack_out": []
    },
    "249": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "250": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "251": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "252": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%19#0"
      ],
      "stack_out": [
        "encoded_bool%19#0"
      ]
    },
    "253": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%19#0",
        "0x00"
      ]
    },
    "254": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%19#0",
        "0x00",
        "0"
      ]
    },
    "255": {
      "op": "dup",
      "stack_out": [
        "encoded_bool%19#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "256": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0"
      ],
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0"
      ]
    },
    "257": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x00"
      ]
    },
    "258": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x00",
        "0"
      ]
    },
    "259": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "260": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "encoded_bool%21#0"
      ],
      "stack_out": [
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "encoded_bool%21#0"
      ]
    },
    "261": {
      "op": "cover 2",
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%19#0",
        "encoded_bool%20#0"
      ]
    },
    "263": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%19#0",
        "encoded_bool%20#0",
        "0x"
      ]
    },
    "264": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%20#0",
        "0x",
        "encoded_bool%19#0"
      ]
    },
    "266": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail%14#0",
        "encoded_bool%20#0",
        "encoded_bool%21#0"
      ],
      "stack_out": [
        "encoded_bool%21#0",
        "encoded_bool%20#0",
        "array_head_and_tail%14#0"
      ]
    },
    "267": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "encoded_bool%20#0"
      ]
    },
    "268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "encoded_bool%20#0",
        "0"
      ]
    },
    "269": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%14#0",
        "encoded_bool%21#0",
        "is_true%12#0"
      ],
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "is_true%12#0"
      ]
    },
    "270": {
      "op": "swap",
      "stack_out": [
        "encoded_bool%21#0",
        "is_true%12#0",
        "array_head_and_tail%14#0"
      ]
    },
    "271": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_bool%21#0",
        "is_true%12#0",
        "array_head_and_tail%14#0",
        "1"
      ]
    },
    "272": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%14#0",
        "1",
        "is_true%12#0"
      ]
    },
    "274": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%15#0",
        "encoded_bool%21#0"
      ],
      "stack_out": [
        "encoded_bool%21#0",
        "array_head_and_tail%15#0"
      ]
    },
    "275": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail%15#0",
        "encoded_bool%21#0"
      ]
    },
    "276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_head_and_tail%15#0",
        "encoded_bool%21#0",
        "0"
      ]
    },
    "277": {
      "op": "getbit",
      "defined_out": [
        "array_head_and_tail%15#0",
        "is_true%13#0"
      ],
      "stack_out": [
        "array_head_and_tail%15#0",
        "is_true%13#0"
      ]
    },
    "278": {
      "op": "swap",
      "stack_out": [
        "is_true%13#0",
        "array_head_and_tail%15#0"
      ]
    },
    "279": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "is_true%13#0",
        "array_head_and_tail%15#0",
        "2"
      ]
    },
    "281": {
      "op": "uncover 2",
      "stack_out": [
        "array_head_and_tail%15#0",
        "2",
        "is_true%13#0"
      ]
    },
    "283": {
      "op": "setbit",
      "defined_out": [
        "array_head_and_tail%16#0"
      ],
      "stack_out": [
        "array_head_and_tail%16#0"
      ]
    },
    "284": {
      "op": "pushbytes 0x0003",
      "defined_out": [
        "0x0003",
        "array_head_and_tail%16#0"
      ],
      "stack_out": [
        "array_head_and_tail%16#0",
        "0x0003"
      ]
    },
    "288": {
      "op": "swap",
      "stack_out": [
        "0x0003",
        "array_head_and_tail%16#0"
      ]
    },
    "289": {
      "op": "concat",
      "defined_out": [
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0"
      ]
    },
    "290": {
      "op": "pushbytes 0x0003a0",
      "defined_out": [
        "0x0003a0",
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "0x0003a0"
      ]
    },
    "295": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "296": {
      "op": "assert",
      "stack_out": []
    },
    "297": {
      "callsub": "test_cases.arc4_types.bool.get_arr",
      "op": "callsub get_arr",
      "stack_out": [
        "dynamic_boolean_array#0"
      ]
    },
    "300": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "dynamic_boolean_array#0",
        "0x00"
      ]
    },
    "301": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_boolean_array#0",
        "0x00",
        "0"
      ]
    },
    "302": {
      "op": "intc_1 // 1",
      "stack_out": [
        "dynamic_boolean_array#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "303": {
      "op": "setbit",
      "defined_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0"
      ]
    },
    "304": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "0x00"
      ]
    },
    "305": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "0x00",
        "0"
      ]
    },
    "306": {
      "op": "dup",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "307": {
      "op": "setbit",
      "defined_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0"
      ]
    },
    "308": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "0x00"
      ]
    },
    "309": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "0x00",
        "0"
      ]
    },
    "310": {
      "op": "intc_1 // 1",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "311": {
      "op": "setbit",
      "defined_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0"
      ]
    },
    "312": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "0x00"
      ]
    },
    "313": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "0x00",
        "0"
      ]
    },
    "314": {
      "op": "dup",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "315": {
      "op": "setbit",
      "defined_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0"
      ]
    },
    "316": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "0x00"
      ]
    },
    "317": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "0x00",
        "0"
      ]
    },
    "318": {
      "op": "intc_1 // 1",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "319": {
      "op": "setbit",
      "defined_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0"
      ]
    },
    "320": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%22#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "0x"
      ]
    },
    "321": {
      "op": "uncover 5",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "0x",
        "encoded_bool%22#0"
      ]
    },
    "323": {
      "op": "concat",
      "defined_out": [
        "data%0#0",
        "dynamic_boolean_array#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%23#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "data%0#0"
      ]
    },
    "324": {
      "op": "uncover 4",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "data%0#0",
        "encoded_bool%23#0"
      ]
    },
    "326": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "dynamic_boolean_array#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%24#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "data%1#0"
      ]
    },
    "327": {
      "op": "uncover 3",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "data%1#0",
        "encoded_bool%24#0"
      ]
    },
    "329": {
      "op": "concat",
      "defined_out": [
        "data%2#0",
        "dynamic_boolean_array#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%25#0",
        "encoded_bool%26#0",
        "data%2#0"
      ]
    },
    "330": {
      "op": "uncover 2",
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%26#0",
        "data%2#0",
        "encoded_bool%25#0"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "data%3#0",
        "dynamic_boolean_array#0",
        "encoded_bool%26#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "encoded_bool%26#0",
        "data%3#0"
      ]
    },
    "333": {
      "op": "swap",
      "stack_out": [
        "dynamic_boolean_array#0",
        "data%3#0",
        "encoded_bool%26#0"
      ]
    },
    "334": {
      "op": "concat",
      "defined_out": [
        "data%4#0",
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "data%4#0"
      ]
    },
    "335": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "dynamic_boolean_array#0",
        "data%4#0",
        "5"
      ]
    },
    "337": {
      "op": "intc_3 // 8",
      "defined_out": [
        "5",
        "8",
        "data%4#0",
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "data%4#0",
        "5",
        "8"
      ]
    },
    "338": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "dynamic_boolean_array#0"
      ]
    },
    "341": {
      "op": "pushbytes 0x0005a8",
      "defined_out": [
        "0x0005a8",
        "dynamic_boolean_array#0"
      ],
      "stack_out": [
        "dynamic_boolean_array#0",
        "0x0005a8"
      ]
    },
    "346": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "347": {
      "op": "assert",
      "stack_out": []
    },
    "348": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "349": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "350": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "351": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%27#0"
      ],
      "stack_out": [
        "encoded_bool%27#0"
      ]
    },
    "352": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%27#0",
        "0"
      ]
    },
    "353": {
      "op": "getbit",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "354": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%9#0",
        "1"
      ]
    },
    "355": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "356": {
      "op": "assert",
      "stack_out": []
    },
    "357": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "358": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "359": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "360": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%28#0"
      ],
      "stack_out": [
        "encoded_bool%28#0"
      ]
    },
    "361": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%28#0",
        "0"
      ]
    },
    "362": {
      "op": "getbit",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "363": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%11#0",
        "1"
      ]
    },
    "364": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "365": {
      "op": "assert",
      "stack_out": []
    },
    "366": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "367": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "368": {
      "op": "dup",
      "stack_out": [
        "0x00",
        "0",
        "0"
      ]
    },
    "369": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%29#0"
      ],
      "stack_out": [
        "encoded_bool%29#0"
      ]
    },
    "370": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%29#0",
        "0"
      ]
    },
    "371": {
      "op": "getbit",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "372": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "373": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "374": {
      "op": "assert",
      "stack_out": []
    },
    "375": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "376": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "377": {
      "op": "intc_1 // 1",
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "378": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%30#0"
      ],
      "stack_out": [
        "encoded_bool%30#0"
      ]
    },
    "379": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_bool%30#0",
        "0"
      ]
    },
    "380": {
      "op": "getbit",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "381": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "382": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "383": {
      "op": "assert",
      "stack_out": []
    },
    "384": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "385": {
      "op": "return",
      "stack_out": []
    },
    "386": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "389": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "390": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "392": {
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "394": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "395": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "396": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "398": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "400": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "401": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "402": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%0#0"
      ]
    },
    "403": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "406": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "408": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "409": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "411": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "412": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "414": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "416": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "417": {
      "op": "intc_2 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "418": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%1#0"
      ]
    },
    "419": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%1#0",
        "8"
      ]
    },
    "420": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "421": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0"
      ]
    },
    "422": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "424": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "425": {
      "op": "intc_2 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "426": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%2#0"
      ]
    },
    "427": {
      "op": "intc_3 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%2#0",
        "8"
      ]
    },
    "428": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "429": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "430": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "432": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%3#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%3#0"
      ]
    },
    "433": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "436": {
      "block": "dynamic_array_concat_bits_if_body@1",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "438": {
      "op": "frame_dig 5",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "440": {
      "op": "-",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%4#0"
      ]
    },
    "441": {
      "op": "bzero",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%5#0"
      ]
    },
    "442": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%5#0",
        "result#0"
      ]
    },
    "444": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%5#0"
      ]
    },
    "445": {
      "op": "concat",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "446": {
      "op": "frame_bury 7",
      "defined_out": [
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "448": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "450": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "452": {
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "453": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "455": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "457": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "459": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "460": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "461": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "463": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "465": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_end#0"
      ]
    },
    "466": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "468": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "470": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "472": {
      "op": "<",
      "defined_out": [
        "tmp%6#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%6#0"
      ]
    },
    "473": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "476": {
      "block": "dynamic_array_concat_bits_while_body@4",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "478": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "480": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "481": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "483": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0"
      ]
    },
    "484": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0",
        "result#0"
      ]
    },
    "486": {
      "op": "frame_dig 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%7#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "488": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%7#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%7#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "489": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%7#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "491": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%7#0"
      ]
    },
    "493": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "494": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "496": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "497": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "498": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "500": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "502": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "503": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "505": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "508": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "510": {
      "op": "frame_bury 0"
    },
    "512": {
      "retsub": true,
      "op": "retsub"
    },
    "513": {
      "subroutine": "test_cases.arc4_types.bool.get_arr",
      "params": {},
      "block": "get_arr",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "516": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "520": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "0x0000"
      ],
      "stack_out": [
        "0x0000",
        "0x"
      ]
    },
    "521": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0"
      ],
      "stack_out": [
        "array_data%0#0"
      ]
    },
    "522": {
      "retsub": true,
      "op": "retsub"
    },
    "523": {
      "subroutine": "test_cases.arc4_types.bool.Arc4BoolTypeContract.test_stuff",
      "params": {
        "true#0": "bytes",
        "false#0": "bytes"
      },
      "block": "test_stuff",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "526": {
      "op": "frame_dig -2",
      "defined_out": [
        "true#0 (copy)"
      ],
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "528": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "true#0 (copy)"
      ],
      "stack_out": [
        "true#0 (copy)",
        "0"
      ]
    },
    "529": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "530": {
      "op": "assert",
      "stack_out": []
    },
    "531": {
      "op": "frame_dig -1",
      "defined_out": [
        "false#0 (copy)"
      ],
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "false#0 (copy)",
        "0"
      ]
    },
    "534": {
      "op": "getbit",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "535": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "536": {
      "op": "assert",
      "stack_out": []
    },
    "537": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "true#0 (copy)",
        "0"
      ]
    },
    "540": {
      "op": "getbit",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "541": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "542": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "543": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "545": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "546": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_bool%0#0",
        "true#0 (copy)"
      ]
    },
    "548": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "549": {
      "op": "assert",
      "stack_out": []
    },
    "550": {
      "op": "frame_dig -1",
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "552": {
      "op": "intc_0 // 0",
      "stack_out": [
        "false#0 (copy)",
        "0"
      ]
    },
    "553": {
      "op": "getbit",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "554": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "to_encode%1#0",
        "0x00"
      ]
    },
    "555": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%1#0",
        "0x00",
        "0"
      ]
    },
    "556": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%1#0"
      ]
    },
    "558": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "559": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_bool%1#0",
        "false#0 (copy)"
      ]
    },
    "561": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "562": {
      "op": "assert",
      "stack_out": []
    },
    "563": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "565": {
      "op": "intc_0 // 0",
      "stack_out": [
        "true#0 (copy)",
        "0"
      ]
    },
    "566": {
      "op": "getbit",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "567": {
      "retsub": true,
      "op": "retsub"
    }
  }
}